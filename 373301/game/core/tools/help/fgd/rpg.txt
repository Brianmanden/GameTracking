<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CHelpData CHelpData_0
{
	CHelpEntry[] m_Entries = 
	[
		CHelpEntry
		{
			string m_Id = "Element.worldspawn"
			string m_FriendlyName = "worldspawn"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the world entity. Each map can only contain one, and it\'s automatically created for you."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.message"
			string m_FriendlyName = "Map Description / Title"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.skyname"
			string m_FriendlyName = "SkyBox Texture Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.chaptertitle"
			string m_FriendlyName = "Chapter Title Message"
			string m_TooltipOverride = ""
			string m_HelpText = "Chapter Title that appears onscreen when this level starts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.startdark"
			string m_FriendlyName = "Level Fade In"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.gametitle"
			string m_FriendlyName = "Display Game Title"
			string m_TooltipOverride = ""
			string m_HelpText = "Game Title that appears onscreen when this level starts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.pvstype"
			string m_FriendlyName = "Precomputed Visibility"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.newunit"
			string m_FriendlyName = "New Level Unit"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to clear out savegame data of previous levels to keep the savegame size as small as possible. Only set it to Yes if the player cannot return to any previous levels."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.maxpropscreenwidth"
			string m_FriendlyName = "Start Fade Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of pixels wide at which all props in the level start to fade (<0 = use fademaxdist). This number is ignored if the prop has a specific fade distance specified."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.minpropscreenwidth"
			string m_FriendlyName = "End Fade Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of pixels wide at which the prop is visible (0 = don\'t fade out). This number is ignored if the prop has a specific fade distance specified."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.vrchaperone"
			string m_FriendlyName = "VR Chaperone"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldspawn.vrmovement"
			string m_FriendlyName = "VR Movement"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_unit"
			string m_FriendlyName = "rpg_unit"
			string m_TooltipOverride = ""
			string m_HelpText = "An RPG unit"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.UnitName"
			string m_FriendlyName = "Unit Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Associated unit name text file to use when spawning rpg_units."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Squad name to assign to the spawned unit."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.target"
			string m_FriendlyName = "Waypoint"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of a path_corner entity to move towards to after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_unit.Lurking"
			string m_FriendlyName = "Lurking"
			string m_TooltipOverride = ""
			string m_HelpText = "Setup the entity\'s lurking behavior"
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_spawner"
			string m_FriendlyName = "rpg_spawner"
			string m_TooltipOverride = ""
			string m_HelpText = "Generic entity spawner."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.EntityClass"
			string m_FriendlyName = "Spawned Entity Class"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity class to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.UnitName"
			string m_FriendlyName = "Spawned Unit Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Unit type text file to use, which determines the specific type of rpg_unit spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.EntityTargetName"
			string m_FriendlyName = "Spawned Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name to give the spawned rpg_unit entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.squadname"
			string m_FriendlyName = "Spawned Entity Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Squad name to assign to the spawned unit."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.InitialBehavior"
			string m_FriendlyName = "Initial Behavior"
			string m_TooltipOverride = ""
			string m_HelpText = "Setup an initial, autonomous behavior."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.SpawnOnStartup"
			string m_FriendlyName = "Spawn On Startup"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.SpawnOffset"
			string m_FriendlyName = "Spawn Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity is spawned offset from the spawner by this amount"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.AiLookDist"
			string m_FriendlyName = "AiLookDist"
			string m_TooltipOverride = ""
			string m_HelpText = "How far away the unit can see.  Passed to AI Senses."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.AiLookDistIdle"
			string m_FriendlyName = "AiLookDistIdle"
			string m_TooltipOverride = ""
			string m_HelpText = "How far away the unit can see when in idle state.  Passed to AI Senses."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.SensingCylinderRadius"
			string m_FriendlyName = "SensingCylinderRadius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius of unit\'s 360 degree sensing cylinder"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.SensingCylinderVerticalRange"
			string m_FriendlyName = "SensingCylinderVerticalRange"
			string m_TooltipOverride = ""
			string m_HelpText = "Max height difference between unit and sensed units"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.waypoint"
			string m_FriendlyName = "Waypoint"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of a path_corner entity to move towards to after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_spawner.NavRestrictionVolume"
			string m_FriendlyName = "Nav Restriction Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup volume entity to restrict unit navigation"
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_trigger"
			string m_FriendlyName = "rpg_trigger"
			string m_TooltipOverride = ""
			string m_HelpText = "RPG Trigger."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.AuraModule"
			string m_FriendlyName = "Aura Module"
			string m_TooltipOverride = ""
			string m_HelpText = "Aura modules will be contiously applied to all touching RPG Units at the rate of the Aura Think Interval."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.AuraModuleDuration"
			string m_FriendlyName = "Aura Module Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of the Aura Module( -1 is permanent )."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.AuraThinkInterval"
			string m_FriendlyName = "Aura Think Interval"
			string m_TooltipOverride = ""
			string m_HelpText = "The rate at which the module is attempted to be applied."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.StartTouchModule"
			string m_FriendlyName = "Start Touch Module"
			string m_TooltipOverride = ""
			string m_HelpText = "Start Touch modules are applied when an RPG Unit enters the trigger."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.StartTouchModuleDuration"
			string m_FriendlyName = "Start Touch Module Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of the Start Touch Module ( -1 is permanent )."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.EndTouchModule"
			string m_FriendlyName = "End Touch Module"
			string m_TooltipOverride = ""
			string m_HelpText = "End Touch modules are applied when an RPG Unit leaves the trigger."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.EndTouchModuleDuration"
			string m_FriendlyName = "End Touch Module Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of the End Touch Module ( -1 is permanent )."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_trigger.RemoveModulesOnEndTouch"
			string m_FriendlyName = "Remove Modules on End Touch"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to true, Start and Aura Modules will be removed immediately upon EndTouch."
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_item_spawner"
			string m_FriendlyName = "rpg_item_spawner"
			string m_TooltipOverride = ""
			string m_HelpText = "Physical item spawner."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_item_spawner.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_item_spawner.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_item_spawner.ItemName"
			string m_FriendlyName = "Item Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of item to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_item_spawner.SpawnOnStartup"
			string m_FriendlyName = "Spawn On Startup"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_item_spawner.SpawnOffset"
			string m_FriendlyName = "Spawn Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity is spawned offset from the spawner by this amount"
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_prop_itemdrop"
			string m_FriendlyName = "rpg_prop_itemdrop"
			string m_TooltipOverride = ""
			string m_HelpText = "A physics prop which, when broken, spawns one or more rpg_physical_items."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.clientSideEntity"
			string m_FriendlyName = "Create Client-Only Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.shadowcastdist"
			string m_FriendlyName = "Shadow Cast Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this to override how far this object casts shadows. 0 = default distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.Damagetype"
			string m_FriendlyName = "Impact damage type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.inertiaScale"
			string m_FriendlyName = "Scale Factor For Inertia"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales the angular mass of an object. Used to hack angular damage and collision response."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.puntsound"
			string m_FriendlyName = "Sound to make when punted"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.addon"
			string m_FriendlyName = "AI AddOn"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified this object will use this addon behavior when installed in a composite AI"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.interactAs"
			string m_FriendlyName = "interactAs"
			string m_TooltipOverride = ""
			string m_HelpText = "comma-separated list of interaction layers"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.lightgroup"
			string m_FriendlyName = "Light Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Will only be lit by lights affecting this group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.ItemName"
			string m_FriendlyName = "Item Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of item to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_prop_itemdrop.ItemCount"
			string m_FriendlyName = "Item Count"
			string m_TooltipOverride = ""
			string m_HelpText = "How many of the specified items to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Element.markup_volume"
			string m_FriendlyName = "markup_volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Generic markup volume entity, can be queried in-game by name/type/location"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.markup_volume_tagged"
			string m_FriendlyName = "markup_volume_tagged"
			string m_TooltipOverride = ""
			string m_HelpText = "Tagged generic markup volume entity, can be queried in-game by tag/name/type/location"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.groupnames"
			string m_FriendlyName = "Markup Groups"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_volume_tagged.tagFieldNames"
			string m_FriendlyName = "<internal>"
			string m_TooltipOverride = ""
			string m_HelpText = "<internal>"
		},
		CHelpEntry
		{
			string m_Id = "Element.markup_group"
			string m_FriendlyName = "markup_group"
			string m_TooltipOverride = ""
			string m_HelpText = "Markup group entity; add the group\'s targetname to the \'Markup Groups\' field of a markup entity to add that entity to this group"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.groupnames"
			string m_FriendlyName = "Markup Groups"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.tagFieldNames"
			string m_FriendlyName = "<internal>"
			string m_TooltipOverride = ""
			string m_HelpText = "<internal>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.groupbyvolume"
			string m_FriendlyName = "Auto Group By Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Automatically add any markup entities to this group that overlap this volume"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.markup_group.groupothergroups"
			string m_FriendlyName = "Auto Group Other Groups"
			string m_TooltipOverride = ""
			string m_HelpText = "When auto-grouping (by prefab or by volume), include other markup_group entities in this group. By default this does not happen."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_nav_markup"
			string m_FriendlyName = "func_nav_markup"
			string m_TooltipOverride = ""
			string m_HelpText = "Tagged NAV markup volume entity, used during export and can be queried in-game by tag/name/type/location"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.groupnames"
			string m_FriendlyName = "Markup Groups"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.tagFieldNames"
			string m_FriendlyName = "<internal>"
			string m_TooltipOverride = ""
			string m_HelpText = "<internal>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_nav_markup.navProperty_NavAttributes"
			string m_FriendlyName = "Nav Attributes"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_rpg_nav_markup"
			string m_FriendlyName = "func_rpg_nav_markup"
			string m_TooltipOverride = ""
			string m_HelpText = "func_rpg_nav_markup"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.groupnames"
			string m_FriendlyName = "Markup Groups"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.tagFieldNames"
			string m_FriendlyName = "<internal>"
			string m_TooltipOverride = ""
			string m_HelpText = "<internal>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.navProperty_NavAttributes"
			string m_FriendlyName = "Nav Attributes"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rpg_nav_markup.navProperty_NavGen"
			string m_FriendlyName = "Nav Generation Markup"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.rpg_gamerules"
			string m_FriendlyName = "rpg_gamerules"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity allows level control of RPG game rules"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_gamerules.vscripts"
			string m_FriendlyName = "Entity Scripts"
			string m_TooltipOverride = ""
			string m_HelpText = "Name(s) of script files that are executed after all entities have spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.rpg_gamerules.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		}
	]
}