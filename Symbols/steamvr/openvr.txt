
 .objc_class_name_NSAutoreleasePool
 .objc_class_name_NSBundle
 .objc_class_name_NSDictionary
 .objc_class_name_NSMutableArray
 .objc_class_name_NSNumber
 .objc_class_name_NSString
 .objc_class_name_NSURL
 .objc_class_name_NSWorkspace
 B CVRMsg_AbortApplicationTransition::default_instance_
 B CVRMsg_AcknowledgeQuit_Exiting::default_instance_
 B CVRMsg_AcknowledgeQuit_UserPrompt::default_instance_
 B CVRMsg_ApplicationInfo::default_instance_
 B CVRMsg_ApplicationInfo_Manifest::default_instance_
 B CVRMsg_ApplicationInfo_Options::default_instance_
 B CVRMsg_ApplicationManifestRequest::default_instance_
 B CVRMsg_ApplicationManifestResponse::default_instance_
 B CVRMsg_CancelApplicationLaunch::default_instance_
 B CVRMsg_CancelApplicationLaunchResponse::default_instance_
 B CVRMsg_CompositorBringToFront::default_instance_
 B CVRMsg_CompositorClearFrameBuffer::default_instance_
 B CVRMsg_CompositorConnect::default_instance_
 B CVRMsg_CompositorConnectResponse::default_instance_
 B CVRMsg_CompositorDumpImages::default_instance_
 B CVRMsg_CompositorFadeGrid::default_instance_
 B CVRMsg_CompositorFadeToColor::default_instance_
 B CVRMsg_CompositorGoToBack::default_instance_
 B CVRMsg_CompositorHandleSystemButton::default_instance_
 B CVRMsg_CompositorHandleSystemButtonResponse::default_instance_
 B CVRMsg_CompositorHideDashboard::default_instance_
 B CVRMsg_CompositorHideDashboardResponse::default_instance_
 B CVRMsg_CompositorHideMirrorWindow::default_instance_
 B CVRMsg_CompositorPrepareInternalProcessTransition::default_instance_
 B CVRMsg_CompositorPrepareInternalProcessTransitionResponse::default_instance_
 B CVRMsg_CompositorQuit::default_instance_
 B CVRMsg_CompositorRequestScreenshot::default_instance_
 B CVRMsg_CompositorRequestScreenshotResponse::default_instance_
 B CVRMsg_CompositorSetOverlay::default_instance_
 B CVRMsg_CompositorSetOverlayFromFile::default_instance_
 B CVRMsg_CompositorSetOverlayFromFileResponse::default_instance_
 B CVRMsg_CompositorShowDashboard::default_instance_
 B CVRMsg_CompositorShowDashboardResponse::default_instance_
 B CVRMsg_CompositorShowMirrorWindow::default_instance_
 B CVRMsg_CompositorToggleCameraRoomView::default_instance_
 B CVRMsg_ComputeDistortion::default_instance_
 B CVRMsg_ComputeDistortionResponse::default_instance_
 B CVRMsg_Connect::default_instance_
 B CVRMsg_ConnectResponse::default_instance_
 B CVRMsg_CreateSwapTextureSet::default_instance_
 B CVRMsg_CreateSwapTextureSetResponse::default_instance_
 B CVRMsg_DestroySwapTextureSet::default_instance_
 B CVRMsg_DriverDebugRequest::default_instance_
 B CVRMsg_DriverDebugResponse::default_instance_
 B CVRMsg_GetApplicationInfo::default_instance_
 B CVRMsg_GetDisplayInfo::default_instance_
 B CVRMsg_GetDisplayInfoResponse::default_instance_
 B CVRMsg_GetDisplayInfoResponse_DisplayInfo::default_instance_
 B CVRMsg_GetDriverDetail::default_instance_
 B CVRMsg_GetDriverDetailResponse::default_instance_
 B CVRMsg_GetDriverInfo::default_instance_
 B CVRMsg_GetDriverInfoResponse::default_instance_
 B CVRMsg_GetDriverInfoResponse_DriverInfo::default_instance_
 B CVRMsg_GetProperty::default_instance_
 B CVRMsg_GetPropertyResponse::default_instance_
 B CVRMsg_InputCaptureRequest::default_instance_
 B CVRMsg_InputCaptureResponse::default_instance_
 B CVRMsg_LaunchApplication::default_instance_
 B CVRMsg_LaunchApplicationResponse::default_instance_
 B CVRMsg_LaunchInternalProcess::default_instance_
 B CVRMsg_LaunchInternalProcessResponse::default_instance_
 B CVRMsg_LaunchTemplateApplication::default_instance_
 B CVRMsg_LaunchTemplateApplicationResponse::default_instance_
 B CVRMsg_LaunchTemplateApplication_AppOverrideKey::default_instance_
 B CVRMsg_PerformApplicationPrelaunchCheck::default_instance_
 B CVRMsg_PerformApplicationPrelaunchCheckResponse::default_instance_
 B CVRMsg_PowerOffTrackedDevice::default_instance_
 B CVRMsg_QuitProcessRequest::default_instance_
 B CVRMsg_QuitProcessResponse::default_instance_
 B CVRMsg_SetApplicationOptions::default_instance_
 B CVRMsg_SetApplicationOptionsResponse::default_instance_
 B CVRMsg_SetApplicationProcessId::default_instance_
 B CVRMsg_SetApplicationProcessIdResponse::default_instance_
 B CVRMsg_SetMasterProcess::default_instance_
 B CVRMsg_SetMasterProcessResponse::default_instance_
 B CVRMsg_SetNotificationImage::default_instance_
 B CVRMsg_SetNotificationImageResponse::default_instance_
 B CVRMsg_Settings_GetBool::default_instance_
 B CVRMsg_Settings_GetBool_Response::default_instance_
 B CVRMsg_Settings_GetFloat::default_instance_
 B CVRMsg_Settings_GetFloat_Response::default_instance_
 B CVRMsg_Settings_GetInt32::default_instance_
 B CVRMsg_Settings_GetInt32_Response::default_instance_
 B CVRMsg_Settings_GetString::default_instance_
 B CVRMsg_Settings_GetString_Response::default_instance_
 B CVRMsg_Settings_RemoveKeyInSection::default_instance_
 B CVRMsg_Settings_RemoveSection::default_instance_
 B CVRMsg_Settings_SetBool::default_instance_
 B CVRMsg_Settings_SetFloat::default_instance_
 B CVRMsg_Settings_SetInt32::default_instance_
 B CVRMsg_Settings_SetString::default_instance_
 B CVRMsg_Settings_SetValue_Response::default_instance_
 B CVRMsg_Settings_Sync::default_instance_
 B CVRMsg_Settings_Sync_Response::default_instance_
 B CVRMsg_StartAutolaunchOverlays::default_instance_
 B CVRMsg_StartProcess::default_instance_
 B CVRMsg_StartProcessResponse::default_instance_
 B CVRMsg_TrackedCamera_AcquireVideoStreamingService::default_instance_
 B CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::default_instance_
 B CVRMsg_TrackedCamera_Enable::default_instance_
 B CVRMsg_TrackedCamera_EnableResponse::default_instance_
 B CVRMsg_TrackedCamera_GetDistortion::default_instance_
 B CVRMsg_TrackedCamera_GetDistortionResponse::default_instance_
 B CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::default_instance_
 B CVRMsg_TrackedCamera_GetDistortion_InputCoord::default_instance_
 B CVRMsg_TrackedCamera_GetFormatDimensions::default_instance_
 B CVRMsg_TrackedCamera_GetFormatDimensionsResponse::default_instance_
 B CVRMsg_TrackedCamera_GetFrameBounds::default_instance_
 B CVRMsg_TrackedCamera_GetFrameBoundsResponse::default_instance_
 B CVRMsg_TrackedCamera_GetIntrinsics::default_instance_
 B CVRMsg_TrackedCamera_GetIntrinsicsResponse::default_instance_
 B CVRMsg_TrackedCamera_GetProjection::default_instance_
 B CVRMsg_TrackedCamera_GetProjectionResponse::default_instance_
 B CVRMsg_TrackedCamera_GetRecommendedUndistortion::default_instance_
 B CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::default_instance_
 B CVRMsg_TrackedCamera_GetVideoStreamFormat::default_instance_
 B CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::default_instance_
 B CVRMsg_TrackedCamera_IsVideoStreamActive::default_instance_
 B CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::default_instance_
 B CVRMsg_TrackedCamera_PauseVideoStream::default_instance_
 B CVRMsg_TrackedCamera_PauseVideoStreamResponse::default_instance_
 B CVRMsg_TrackedCamera_ReleaseVideoStreamingService::default_instance_
 B CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::default_instance_
 B CVRMsg_TrackedCamera_ResumeVideoStream::default_instance_
 B CVRMsg_TrackedCamera_ResumeVideoStreamResponse::default_instance_
 B CVRMsg_TrackedCamera_SetAutoExposure::default_instance_
 B CVRMsg_TrackedCamera_SetAutoExposureResponse::default_instance_
 B CVRMsg_TrackedCamera_SetCompatibilityMode::default_instance_
 B CVRMsg_TrackedCamera_SetCompatibilityModeResponse::default_instance_
 B CVRMsg_TrackedCamera_SetUndistortion::default_instance_
 B CVRMsg_TrackedCamera_SetUndistortionResponse::default_instance_
 B CVRMsg_TrackedCamera_SetVideoStreamFormat::default_instance_
 B CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::default_instance_
 B CVRMsg_TrackedCamera_StartVideoStream::default_instance_
 B CVRMsg_TrackedCamera_StartVideoStreamResponse::default_instance_
 B CVRMsg_TrackedCamera_StopVideoStream::default_instance_
 B CVRMsg_TrackedCamera_StopVideoStreamResponse::default_instance_
 B CVRMsg_TriggerHapticPulse::default_instance_
 B InterfaceRegistrationBase::s_pFirst
 B autoreg_VR_IVRApplications_FnTable
 B autoreg_VR_IVRChaperoneSetup_FnTable
 B autoreg_VR_IVRChaperone_FnTable
 B autoreg_VR_IVRCompositor_FnTable
 B autoreg_VR_IVRExtendedDisplay_FnTable
 B autoreg_VR_IVRNotifications_FnTable
 B autoreg_VR_IVROverlay_FnTable
 B autoreg_VR_IVRRenderModels_FnTable
 B autoreg_VR_IVRSettings_FnTable
 B autoreg_VR_IVRSystem_FnTable
 B autoreg_VR_IVRTrackedCamera_FnTable
 B g_SuspendResumeLock
 B g_bSetSuspendHandlers
 B g_bSuspendResumeAck
 B g_hmdSystem
 B g_machClient
 B g_nCurThreadSuspendCount
 B g_pCurThread
 B vrapplications004_FnTable
 B vrcompositor013_FnTable
 B vrcompositor014_FnTable
 B vroverlay010_FnTable
 B vroverlay011_FnTable
 B vrrendermodels004_FnTable
 B vrsystem011_FnTable
 B vrtrackedcamera002_FnTable
 CFRelease
 CFStringGetCStringPtr
 CGLErrorString
 CGLGetCurrentContext
 CGLTexImageIOSurface2D
 D CServerTrackedDeviceProvider_002::GetInterfaceVersions()::k_InterfaceVersions
 D OBJC_METACLASS_$___ARCLite__
 D VTT for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
 D VTT for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D VTT for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D VTT for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D _non_lazy_classes
 D construction vtable for std::__1::basic_iostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_ifstream<char, std::__1::char_traits<char> >
 D construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D guard variable for CServerTrackedDeviceProvider_002::GetInterfaceVersions()::k_InterfaceVersions
 D typeinfo for ApplicationsInterfaceRegistration<CVRApplications_001>
 D typeinfo for ApplicationsInterfaceRegistration<CVRApplications_002>
 D typeinfo for ApplicationsInterfaceRegistration<CVRApplications_003>
 D typeinfo for ApplicationsInterfaceRegistration<CVRApplications_004>
 D typeinfo for CClientTrackedDeviceProvider
 D typeinfo for CClientTrackedDeviceProvider_Latest
 D typeinfo for CDriverLog
 D typeinfo for CHmdSystemLatest
 D typeinfo for CHmdSystem_001
 D typeinfo for CHmdSystem_004
 D typeinfo for CHmd_001
 D typeinfo for CHmd_002
 D typeinfo for CHmd_003
 D typeinfo for CHmd_004
 D typeinfo for CHmd_005
 D typeinfo for CHmd_006
 D typeinfo for COculusDirectClient
 D typeinfo for CRenderModelLoadThread
 D typeinfo for CRenderModelManager
 D typeinfo for CServerTrackedDeviceProvider
 D typeinfo for CServerTrackedDeviceProvider_002
 D typeinfo for CServerTrackedDeviceProvider_Latest
 D typeinfo for CVRApplications_001
 D typeinfo for CVRApplications_002
 D typeinfo for CVRApplications_003
 D typeinfo for CVRApplications_004
 D typeinfo for CVRChaperoneSetup_001
 D typeinfo for CVRChaperoneSetup_002
 D typeinfo for CVRChaperoneSetup_003
 D typeinfo for CVRChaperoneSetup_004
 D typeinfo for CVRChaperone_001
 D typeinfo for CVRChaperone_002
 D typeinfo for CVRClientCore_001
 D typeinfo for CVRCompositorClient
 D typeinfo for CVRCompositorClientBase
 D typeinfo for CVRCompositor_001
 D typeinfo for CVRCompositor_002
 D typeinfo for CVRCompositor_003
 D typeinfo for CVRCompositor_004
 D typeinfo for CVRCompositor_005
 D typeinfo for CVRCompositor_006
 D typeinfo for CVRCompositor_007
 D typeinfo for CVRCompositor_008
 D typeinfo for CVRCompositor_009
 D typeinfo for CVRCompositor_010
 D typeinfo for CVRCompositor_011
 D typeinfo for CVRCompositor_012
 D typeinfo for CVRCompositor_013
 D typeinfo for CVRCompositor_014
 D typeinfo for CVRControlPanel_001
 D typeinfo for CVRMsg_AbortApplicationTransition
 D typeinfo for CVRMsg_AcknowledgeQuit_Exiting
 D typeinfo for CVRMsg_AcknowledgeQuit_UserPrompt
 D typeinfo for CVRMsg_ApplicationInfo
 D typeinfo for CVRMsg_ApplicationInfo_Manifest
 D typeinfo for CVRMsg_ApplicationInfo_Options
 D typeinfo for CVRMsg_ApplicationManifestRequest
 D typeinfo for CVRMsg_ApplicationManifestResponse
 D typeinfo for CVRMsg_CancelApplicationLaunch
 D typeinfo for CVRMsg_CancelApplicationLaunchResponse
 D typeinfo for CVRMsg_CompositorBringToFront
 D typeinfo for CVRMsg_CompositorClearFrameBuffer
 D typeinfo for CVRMsg_CompositorConnect
 D typeinfo for CVRMsg_CompositorConnectResponse
 D typeinfo for CVRMsg_CompositorDumpImages
 D typeinfo for CVRMsg_CompositorFadeGrid
 D typeinfo for CVRMsg_CompositorFadeToColor
 D typeinfo for CVRMsg_CompositorGoToBack
 D typeinfo for CVRMsg_CompositorHandleSystemButton
 D typeinfo for CVRMsg_CompositorHandleSystemButtonResponse
 D typeinfo for CVRMsg_CompositorHideDashboard
 D typeinfo for CVRMsg_CompositorHideDashboardResponse
 D typeinfo for CVRMsg_CompositorHideMirrorWindow
 D typeinfo for CVRMsg_CompositorPrepareInternalProcessTransition
 D typeinfo for CVRMsg_CompositorPrepareInternalProcessTransitionResponse
 D typeinfo for CVRMsg_CompositorQuit
 D typeinfo for CVRMsg_CompositorRequestScreenshot
 D typeinfo for CVRMsg_CompositorRequestScreenshotResponse
 D typeinfo for CVRMsg_CompositorSetOverlay
 D typeinfo for CVRMsg_CompositorSetOverlayFromFile
 D typeinfo for CVRMsg_CompositorSetOverlayFromFileResponse
 D typeinfo for CVRMsg_CompositorShowDashboard
 D typeinfo for CVRMsg_CompositorShowDashboardResponse
 D typeinfo for CVRMsg_CompositorShowMirrorWindow
 D typeinfo for CVRMsg_CompositorToggleCameraRoomView
 D typeinfo for CVRMsg_ComputeDistortion
 D typeinfo for CVRMsg_ComputeDistortionResponse
 D typeinfo for CVRMsg_Connect
 D typeinfo for CVRMsg_ConnectResponse
 D typeinfo for CVRMsg_CreateSwapTextureSet
 D typeinfo for CVRMsg_CreateSwapTextureSetResponse
 D typeinfo for CVRMsg_DestroySwapTextureSet
 D typeinfo for CVRMsg_DriverDebugRequest
 D typeinfo for CVRMsg_DriverDebugResponse
 D typeinfo for CVRMsg_GetApplicationInfo
 D typeinfo for CVRMsg_GetDisplayInfo
 D typeinfo for CVRMsg_GetDisplayInfoResponse
 D typeinfo for CVRMsg_GetDisplayInfoResponse_DisplayInfo
 D typeinfo for CVRMsg_GetDriverDetail
 D typeinfo for CVRMsg_GetDriverDetailResponse
 D typeinfo for CVRMsg_GetDriverInfo
 D typeinfo for CVRMsg_GetDriverInfoResponse
 D typeinfo for CVRMsg_GetDriverInfoResponse_DriverInfo
 D typeinfo for CVRMsg_GetProperty
 D typeinfo for CVRMsg_GetPropertyResponse
 D typeinfo for CVRMsg_InputCaptureRequest
 D typeinfo for CVRMsg_InputCaptureResponse
 D typeinfo for CVRMsg_LaunchApplication
 D typeinfo for CVRMsg_LaunchApplicationResponse
 D typeinfo for CVRMsg_LaunchInternalProcess
 D typeinfo for CVRMsg_LaunchInternalProcessResponse
 D typeinfo for CVRMsg_LaunchTemplateApplication
 D typeinfo for CVRMsg_LaunchTemplateApplicationResponse
 D typeinfo for CVRMsg_LaunchTemplateApplication_AppOverrideKey
 D typeinfo for CVRMsg_PerformApplicationPrelaunchCheck
 D typeinfo for CVRMsg_PerformApplicationPrelaunchCheckResponse
 D typeinfo for CVRMsg_PowerOffTrackedDevice
 D typeinfo for CVRMsg_QuitProcessRequest
 D typeinfo for CVRMsg_QuitProcessResponse
 D typeinfo for CVRMsg_SetApplicationOptions
 D typeinfo for CVRMsg_SetApplicationOptionsResponse
 D typeinfo for CVRMsg_SetApplicationProcessId
 D typeinfo for CVRMsg_SetApplicationProcessIdResponse
 D typeinfo for CVRMsg_SetMasterProcess
 D typeinfo for CVRMsg_SetMasterProcessResponse
 D typeinfo for CVRMsg_SetNotificationImage
 D typeinfo for CVRMsg_SetNotificationImageResponse
 D typeinfo for CVRMsg_Settings_GetBool
 D typeinfo for CVRMsg_Settings_GetBool_Response
 D typeinfo for CVRMsg_Settings_GetFloat
 D typeinfo for CVRMsg_Settings_GetFloat_Response
 D typeinfo for CVRMsg_Settings_GetInt32
 D typeinfo for CVRMsg_Settings_GetInt32_Response
 D typeinfo for CVRMsg_Settings_GetString
 D typeinfo for CVRMsg_Settings_GetString_Response
 D typeinfo for CVRMsg_Settings_RemoveKeyInSection
 D typeinfo for CVRMsg_Settings_RemoveSection
 D typeinfo for CVRMsg_Settings_SetBool
 D typeinfo for CVRMsg_Settings_SetFloat
 D typeinfo for CVRMsg_Settings_SetInt32
 D typeinfo for CVRMsg_Settings_SetString
 D typeinfo for CVRMsg_Settings_SetValue_Response
 D typeinfo for CVRMsg_Settings_Sync
 D typeinfo for CVRMsg_Settings_Sync_Response
 D typeinfo for CVRMsg_StartAutolaunchOverlays
 D typeinfo for CVRMsg_StartProcess
 D typeinfo for CVRMsg_StartProcessResponse
 D typeinfo for CVRMsg_TrackedCamera_AcquireVideoStreamingService
 D typeinfo for CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse
 D typeinfo for CVRMsg_TrackedCamera_Enable
 D typeinfo for CVRMsg_TrackedCamera_EnableResponse
 D typeinfo for CVRMsg_TrackedCamera_GetDistortion
 D typeinfo for CVRMsg_TrackedCamera_GetDistortionResponse
 D typeinfo for CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord
 D typeinfo for CVRMsg_TrackedCamera_GetDistortion_InputCoord
 D typeinfo for CVRMsg_TrackedCamera_GetFormatDimensions
 D typeinfo for CVRMsg_TrackedCamera_GetFormatDimensionsResponse
 D typeinfo for CVRMsg_TrackedCamera_GetFrameBounds
 D typeinfo for CVRMsg_TrackedCamera_GetFrameBoundsResponse
 D typeinfo for CVRMsg_TrackedCamera_GetIntrinsics
 D typeinfo for CVRMsg_TrackedCamera_GetIntrinsicsResponse
 D typeinfo for CVRMsg_TrackedCamera_GetProjection
 D typeinfo for CVRMsg_TrackedCamera_GetProjectionResponse
 D typeinfo for CVRMsg_TrackedCamera_GetRecommendedUndistortion
 D typeinfo for CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse
 D typeinfo for CVRMsg_TrackedCamera_GetVideoStreamFormat
 D typeinfo for CVRMsg_TrackedCamera_GetVideoStreamFormatResponse
 D typeinfo for CVRMsg_TrackedCamera_IsVideoStreamActive
 D typeinfo for CVRMsg_TrackedCamera_IsVideoStreamActiveResponse
 D typeinfo for CVRMsg_TrackedCamera_PauseVideoStream
 D typeinfo for CVRMsg_TrackedCamera_PauseVideoStreamResponse
 D typeinfo for CVRMsg_TrackedCamera_ReleaseVideoStreamingService
 D typeinfo for CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse
 D typeinfo for CVRMsg_TrackedCamera_ResumeVideoStream
 D typeinfo for CVRMsg_TrackedCamera_ResumeVideoStreamResponse
 D typeinfo for CVRMsg_TrackedCamera_SetAutoExposure
 D typeinfo for CVRMsg_TrackedCamera_SetAutoExposureResponse
 D typeinfo for CVRMsg_TrackedCamera_SetCompatibilityMode
 D typeinfo for CVRMsg_TrackedCamera_SetCompatibilityModeResponse
 D typeinfo for CVRMsg_TrackedCamera_SetUndistortion
 D typeinfo for CVRMsg_TrackedCamera_SetUndistortionResponse
 D typeinfo for CVRMsg_TrackedCamera_SetVideoStreamFormat
 D typeinfo for CVRMsg_TrackedCamera_SetVideoStreamFormatResponse
 D typeinfo for CVRMsg_TrackedCamera_StartVideoStream
 D typeinfo for CVRMsg_TrackedCamera_StartVideoStreamResponse
 D typeinfo for CVRMsg_TrackedCamera_StopVideoStream
 D typeinfo for CVRMsg_TrackedCamera_StopVideoStreamResponse
 D typeinfo for CVRMsg_TriggerHapticPulse
 D typeinfo for CVRNotifications_001
 D typeinfo for CVROverlay_001
 D typeinfo for CVROverlay_002
 D typeinfo for CVROverlay_003
 D typeinfo for CVROverlay_004
 D typeinfo for CVROverlay_005
 D typeinfo for CVROverlay_006
 D typeinfo for CVROverlay_007
 D typeinfo for CVROverlay_008
 D typeinfo for CVROverlay_009
 D typeinfo for CVROverlay_010
 D typeinfo for CVROverlay_011
 D typeinfo for CVRRenderModels_001
 D typeinfo for CVRRenderModels_002
 D typeinfo for CVRRenderModels_003
 D typeinfo for CVRRenderModels_004
 D typeinfo for CVRSystemLatest
 D typeinfo for CVRSystem_001
 D typeinfo for CVRSystem_002
 D typeinfo for CVRSystem_003
 D typeinfo for CVRSystem_004
 D typeinfo for CVRSystem_005
 D typeinfo for CVRSystem_006
 D typeinfo for CVRSystem_007
 D typeinfo for CVRSystem_008
 D typeinfo for CVRSystem_009
 D typeinfo for CVRSystem_010
 D typeinfo for CVRSystem_011
 D typeinfo for CVRTrackedCamera_002
 D typeinfo for ChaperoneInterfaceRegistration<CVRChaperone_001>
 D typeinfo for ChaperoneInterfaceRegistration<CVRChaperone_002>
 D typeinfo for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_001>
 D typeinfo for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_002>
 D typeinfo for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_003>
 D typeinfo for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_004>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_001>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_002>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_003>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_004>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_005>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_006>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_007>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_008>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_009>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_010>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_011>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_012>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_013>
 D typeinfo for CompositorInterfaceRegistration<CVRCompositor_014>
 D typeinfo for ControlPanelInterfaceRegistration<CVRControlPanel_001>
 D typeinfo for GenericInterfaceRegistration
 D typeinfo for HmdInterfaceRegistration<CHmd_001>
 D typeinfo for HmdInterfaceRegistration<CHmd_002>
 D typeinfo for HmdInterfaceRegistration<CHmd_003>
 D typeinfo for HmdInterfaceRegistration<CHmd_004>
 D typeinfo for HmdInterfaceRegistration<CHmd_005>
 D typeinfo for HmdInterfaceRegistration<CHmd_006>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_001>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_002>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_003>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_004>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_005>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_006>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_007>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_008>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_009>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_010>
 D typeinfo for HmdInterfaceRegistration<CVRSystem_011>
 D typeinfo for IHmdSystem_002
 D typeinfo for IHmdSystem_003
 D typeinfo for IPC::BinarySemaphore
 D typeinfo for IPC::IEvent
 D typeinfo for IPC::IMutex
 D typeinfo for IPC::ISharedMem
 D typeinfo for IPC::ISyncObject
 D typeinfo for IPC::PosixEvent
 D typeinfo for IPC::PosixMutex
 D typeinfo for IPC::PosixSharedMemory
 D typeinfo for IVRClientInternal
 D typeinfo for InterfaceRegistrationBase
 D typeinfo for Json::Exception
 D typeinfo for Json::LogicError
 D typeinfo for Json::RuntimeError
 D typeinfo for Json::StyledWriter
 D typeinfo for Json::Writer
 D typeinfo for NotificationsInterfaceRegistration<CVRNotifications_001>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_001>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_002>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_003>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_004>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_005>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_006>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_007>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_008>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_009>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_010>
 D typeinfo for OverlayInterfaceRegistration<CVROverlay_011>
 D typeinfo for RenderModelsInterfaceRegistration<CVRRenderModels_001>
 D typeinfo for RenderModelsInterfaceRegistration<CVRRenderModels_002>
 D typeinfo for RenderModelsInterfaceRegistration<CVRRenderModels_003>
 D typeinfo for RenderModelsInterfaceRegistration<CVRRenderModels_004>
 D typeinfo for SteamThreadTools::CThread
 D typeinfo for SystemInterfaceRegistration<CHmdSystem_001>
 D typeinfo for SystemInterfaceRegistration<CHmdSystem_004>
 D typeinfo for SystemInterfaceRegistration<CVRClientCore_001>
 D typeinfo for SystemInterfaceRegistration<IHmdSystem_002>
 D typeinfo for SystemInterfaceRegistration<IHmdSystem_003>
 D typeinfo for TrackedCameraInterfaceRegistration<CVRTrackedCamera_002>
 D typeinfo for std::__1::basic_filebuf<char, std::__1::char_traits<char> >
 D typeinfo for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
 D typeinfo for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D typeinfo for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D typeinfo for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D typeinfo for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D typeinfo for tinyobj::MaterialFileReader
 D typeinfo for tinyobj::MaterialReader
 D typeinfo for vr::CVRApplicationsLatest
 D typeinfo for vr::CVRChaperoneLatest
 D typeinfo for vr::CVRDashboardManagerLatest
 D typeinfo for vr::CVRNotificationsLatest
 D typeinfo for vr::CVRSettingsLatest
 D typeinfo for vr::CVRTrackedCamera
 D typeinfo for vr::IClientDriverHost
 D typeinfo for vr::IClientTrackedDeviceProvider
 D typeinfo for vr::IDriverLog
 D typeinfo for vr::ILiquidVR
 D typeinfo for vr::IServerTrackedDeviceProvider
 D typeinfo for vr::IVRApplications
 D typeinfo for vr::IVRChaperone
 D typeinfo for vr::IVRChaperoneSetup
 D typeinfo for vr::IVRClientCore
 D typeinfo for vr::IVRCompositor
 D typeinfo for vr::IVRCompositorDeprecatedFunctions
 D typeinfo for vr::IVRCompositorSystemInternal
 D typeinfo for vr::IVRControlPanel
 D typeinfo for vr::IVRDashboardManager
 D typeinfo for vr::IVRExtendedDisplay
 D typeinfo for vr::IVRExternalEventSource
 D typeinfo for vr::IVRNotifications
 D typeinfo for vr::IVROculusDirect
 D typeinfo for vr::IVROverlay
 D typeinfo for vr::IVRRenderModels
 D typeinfo for vr::IVRRenderModelsInternal
 D typeinfo for vr::IVRSettings
 D typeinfo for vr::IVRSystem
 D typeinfo for vr::IVRTrackedCamera
 D typeinfo for vr::IVRTrackedCameraInternal
 D vtable for ApplicationsInterfaceRegistration<CVRApplications_001>
 D vtable for ApplicationsInterfaceRegistration<CVRApplications_002>
 D vtable for ApplicationsInterfaceRegistration<CVRApplications_003>
 D vtable for ApplicationsInterfaceRegistration<CVRApplications_004>
 D vtable for CClientTrackedDeviceProvider_Latest
 D vtable for CDriverLog
 D vtable for CHmdSystemLatest
 D vtable for CHmdSystem_001
 D vtable for CHmdSystem_004
 D vtable for CHmd_001
 D vtable for CHmd_002
 D vtable for CHmd_003
 D vtable for CHmd_004
 D vtable for CHmd_005
 D vtable for CHmd_006
 D vtable for COculusDirectClient
 D vtable for CRenderModelLoadThread
 D vtable for CRenderModelManager
 D vtable for CServerTrackedDeviceProvider_002
 D vtable for CServerTrackedDeviceProvider_Latest
 D vtable for CVRApplications_001
 D vtable for CVRApplications_002
 D vtable for CVRApplications_003
 D vtable for CVRApplications_004
 D vtable for CVRChaperoneSetup_001
 D vtable for CVRChaperoneSetup_002
 D vtable for CVRChaperoneSetup_003
 D vtable for CVRChaperoneSetup_004
 D vtable for CVRChaperone_001
 D vtable for CVRChaperone_002
 D vtable for CVRClientCore_001
 D vtable for CVRCompositorClient
 D vtable for CVRCompositorClientBase
 D vtable for CVRCompositor_001
 D vtable for CVRCompositor_002
 D vtable for CVRCompositor_003
 D vtable for CVRCompositor_004
 D vtable for CVRCompositor_005
 D vtable for CVRCompositor_006
 D vtable for CVRCompositor_007
 D vtable for CVRCompositor_008
 D vtable for CVRCompositor_009
 D vtable for CVRCompositor_010
 D vtable for CVRCompositor_011
 D vtable for CVRCompositor_012
 D vtable for CVRCompositor_013
 D vtable for CVRCompositor_014
 D vtable for CVRControlPanel_001
 D vtable for CVRMsg_AbortApplicationTransition
 D vtable for CVRMsg_AcknowledgeQuit_Exiting
 D vtable for CVRMsg_AcknowledgeQuit_UserPrompt
 D vtable for CVRMsg_ApplicationInfo
 D vtable for CVRMsg_ApplicationInfo_Manifest
 D vtable for CVRMsg_ApplicationInfo_Options
 D vtable for CVRMsg_ApplicationManifestRequest
 D vtable for CVRMsg_ApplicationManifestResponse
 D vtable for CVRMsg_CancelApplicationLaunch
 D vtable for CVRMsg_CancelApplicationLaunchResponse
 D vtable for CVRMsg_CompositorBringToFront
 D vtable for CVRMsg_CompositorClearFrameBuffer
 D vtable for CVRMsg_CompositorConnect
 D vtable for CVRMsg_CompositorConnectResponse
 D vtable for CVRMsg_CompositorDumpImages
 D vtable for CVRMsg_CompositorFadeGrid
 D vtable for CVRMsg_CompositorFadeToColor
 D vtable for CVRMsg_CompositorGoToBack
 D vtable for CVRMsg_CompositorHandleSystemButton
 D vtable for CVRMsg_CompositorHandleSystemButtonResponse
 D vtable for CVRMsg_CompositorHideDashboard
 D vtable for CVRMsg_CompositorHideDashboardResponse
 D vtable for CVRMsg_CompositorHideMirrorWindow
 D vtable for CVRMsg_CompositorPrepareInternalProcessTransition
 D vtable for CVRMsg_CompositorPrepareInternalProcessTransitionResponse
 D vtable for CVRMsg_CompositorQuit
 D vtable for CVRMsg_CompositorRequestScreenshot
 D vtable for CVRMsg_CompositorRequestScreenshotResponse
 D vtable for CVRMsg_CompositorSetOverlay
 D vtable for CVRMsg_CompositorSetOverlayFromFile
 D vtable for CVRMsg_CompositorSetOverlayFromFileResponse
 D vtable for CVRMsg_CompositorShowDashboard
 D vtable for CVRMsg_CompositorShowDashboardResponse
 D vtable for CVRMsg_CompositorShowMirrorWindow
 D vtable for CVRMsg_CompositorToggleCameraRoomView
 D vtable for CVRMsg_ComputeDistortion
 D vtable for CVRMsg_ComputeDistortionResponse
 D vtable for CVRMsg_Connect
 D vtable for CVRMsg_ConnectResponse
 D vtable for CVRMsg_CreateSwapTextureSet
 D vtable for CVRMsg_CreateSwapTextureSetResponse
 D vtable for CVRMsg_DestroySwapTextureSet
 D vtable for CVRMsg_DriverDebugRequest
 D vtable for CVRMsg_DriverDebugResponse
 D vtable for CVRMsg_GetApplicationInfo
 D vtable for CVRMsg_GetDisplayInfo
 D vtable for CVRMsg_GetDisplayInfoResponse
 D vtable for CVRMsg_GetDisplayInfoResponse_DisplayInfo
 D vtable for CVRMsg_GetDriverDetail
 D vtable for CVRMsg_GetDriverDetailResponse
 D vtable for CVRMsg_GetDriverInfo
 D vtable for CVRMsg_GetDriverInfoResponse
 D vtable for CVRMsg_GetDriverInfoResponse_DriverInfo
 D vtable for CVRMsg_GetProperty
 D vtable for CVRMsg_GetPropertyResponse
 D vtable for CVRMsg_InputCaptureRequest
 D vtable for CVRMsg_InputCaptureResponse
 D vtable for CVRMsg_LaunchApplication
 D vtable for CVRMsg_LaunchApplicationResponse
 D vtable for CVRMsg_LaunchInternalProcess
 D vtable for CVRMsg_LaunchInternalProcessResponse
 D vtable for CVRMsg_LaunchTemplateApplication
 D vtable for CVRMsg_LaunchTemplateApplicationResponse
 D vtable for CVRMsg_LaunchTemplateApplication_AppOverrideKey
 D vtable for CVRMsg_PerformApplicationPrelaunchCheck
 D vtable for CVRMsg_PerformApplicationPrelaunchCheckResponse
 D vtable for CVRMsg_PowerOffTrackedDevice
 D vtable for CVRMsg_QuitProcessRequest
 D vtable for CVRMsg_QuitProcessResponse
 D vtable for CVRMsg_SetApplicationOptions
 D vtable for CVRMsg_SetApplicationOptionsResponse
 D vtable for CVRMsg_SetApplicationProcessId
 D vtable for CVRMsg_SetApplicationProcessIdResponse
 D vtable for CVRMsg_SetMasterProcess
 D vtable for CVRMsg_SetMasterProcessResponse
 D vtable for CVRMsg_SetNotificationImage
 D vtable for CVRMsg_SetNotificationImageResponse
 D vtable for CVRMsg_Settings_GetBool
 D vtable for CVRMsg_Settings_GetBool_Response
 D vtable for CVRMsg_Settings_GetFloat
 D vtable for CVRMsg_Settings_GetFloat_Response
 D vtable for CVRMsg_Settings_GetInt32
 D vtable for CVRMsg_Settings_GetInt32_Response
 D vtable for CVRMsg_Settings_GetString
 D vtable for CVRMsg_Settings_GetString_Response
 D vtable for CVRMsg_Settings_RemoveKeyInSection
 D vtable for CVRMsg_Settings_RemoveSection
 D vtable for CVRMsg_Settings_SetBool
 D vtable for CVRMsg_Settings_SetFloat
 D vtable for CVRMsg_Settings_SetInt32
 D vtable for CVRMsg_Settings_SetString
 D vtable for CVRMsg_Settings_SetValue_Response
 D vtable for CVRMsg_Settings_Sync
 D vtable for CVRMsg_Settings_Sync_Response
 D vtable for CVRMsg_StartAutolaunchOverlays
 D vtable for CVRMsg_StartProcess
 D vtable for CVRMsg_StartProcessResponse
 D vtable for CVRMsg_TrackedCamera_AcquireVideoStreamingService
 D vtable for CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse
 D vtable for CVRMsg_TrackedCamera_Enable
 D vtable for CVRMsg_TrackedCamera_EnableResponse
 D vtable for CVRMsg_TrackedCamera_GetDistortion
 D vtable for CVRMsg_TrackedCamera_GetDistortionResponse
 D vtable for CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord
 D vtable for CVRMsg_TrackedCamera_GetDistortion_InputCoord
 D vtable for CVRMsg_TrackedCamera_GetFormatDimensions
 D vtable for CVRMsg_TrackedCamera_GetFormatDimensionsResponse
 D vtable for CVRMsg_TrackedCamera_GetFrameBounds
 D vtable for CVRMsg_TrackedCamera_GetFrameBoundsResponse
 D vtable for CVRMsg_TrackedCamera_GetIntrinsics
 D vtable for CVRMsg_TrackedCamera_GetIntrinsicsResponse
 D vtable for CVRMsg_TrackedCamera_GetProjection
 D vtable for CVRMsg_TrackedCamera_GetProjectionResponse
 D vtable for CVRMsg_TrackedCamera_GetRecommendedUndistortion
 D vtable for CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse
 D vtable for CVRMsg_TrackedCamera_GetVideoStreamFormat
 D vtable for CVRMsg_TrackedCamera_GetVideoStreamFormatResponse
 D vtable for CVRMsg_TrackedCamera_IsVideoStreamActive
 D vtable for CVRMsg_TrackedCamera_IsVideoStreamActiveResponse
 D vtable for CVRMsg_TrackedCamera_PauseVideoStream
 D vtable for CVRMsg_TrackedCamera_PauseVideoStreamResponse
 D vtable for CVRMsg_TrackedCamera_ReleaseVideoStreamingService
 D vtable for CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse
 D vtable for CVRMsg_TrackedCamera_ResumeVideoStream
 D vtable for CVRMsg_TrackedCamera_ResumeVideoStreamResponse
 D vtable for CVRMsg_TrackedCamera_SetAutoExposure
 D vtable for CVRMsg_TrackedCamera_SetAutoExposureResponse
 D vtable for CVRMsg_TrackedCamera_SetCompatibilityMode
 D vtable for CVRMsg_TrackedCamera_SetCompatibilityModeResponse
 D vtable for CVRMsg_TrackedCamera_SetUndistortion
 D vtable for CVRMsg_TrackedCamera_SetUndistortionResponse
 D vtable for CVRMsg_TrackedCamera_SetVideoStreamFormat
 D vtable for CVRMsg_TrackedCamera_SetVideoStreamFormatResponse
 D vtable for CVRMsg_TrackedCamera_StartVideoStream
 D vtable for CVRMsg_TrackedCamera_StartVideoStreamResponse
 D vtable for CVRMsg_TrackedCamera_StopVideoStream
 D vtable for CVRMsg_TrackedCamera_StopVideoStreamResponse
 D vtable for CVRMsg_TriggerHapticPulse
 D vtable for CVRNotifications_001
 D vtable for CVROverlay_001
 D vtable for CVROverlay_002
 D vtable for CVROverlay_003
 D vtable for CVROverlay_004
 D vtable for CVROverlay_005
 D vtable for CVROverlay_006
 D vtable for CVROverlay_007
 D vtable for CVROverlay_008
 D vtable for CVROverlay_009
 D vtable for CVROverlay_010
 D vtable for CVROverlay_011
 D vtable for CVRRenderModels_001
 D vtable for CVRRenderModels_002
 D vtable for CVRRenderModels_003
 D vtable for CVRRenderModels_004
 D vtable for CVRSystemLatest
 D vtable for CVRSystem_001
 D vtable for CVRSystem_002
 D vtable for CVRSystem_003
 D vtable for CVRSystem_004
 D vtable for CVRSystem_005
 D vtable for CVRSystem_006
 D vtable for CVRSystem_007
 D vtable for CVRSystem_008
 D vtable for CVRSystem_009
 D vtable for CVRSystem_010
 D vtable for CVRSystem_011
 D vtable for CVRTrackedCamera_002
 D vtable for ChaperoneInterfaceRegistration<CVRChaperone_001>
 D vtable for ChaperoneInterfaceRegistration<CVRChaperone_002>
 D vtable for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_001>
 D vtable for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_002>
 D vtable for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_003>
 D vtable for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_004>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_001>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_002>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_003>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_004>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_005>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_006>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_007>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_008>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_009>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_010>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_011>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_012>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_013>
 D vtable for CompositorInterfaceRegistration<CVRCompositor_014>
 D vtable for ControlPanelInterfaceRegistration<CVRControlPanel_001>
 D vtable for GenericInterfaceRegistration
 D vtable for HmdInterfaceRegistration<CHmd_001>
 D vtable for HmdInterfaceRegistration<CHmd_002>
 D vtable for HmdInterfaceRegistration<CHmd_003>
 D vtable for HmdInterfaceRegistration<CHmd_004>
 D vtable for HmdInterfaceRegistration<CHmd_005>
 D vtable for HmdInterfaceRegistration<CHmd_006>
 D vtable for HmdInterfaceRegistration<CVRSystem_001>
 D vtable for HmdInterfaceRegistration<CVRSystem_002>
 D vtable for HmdInterfaceRegistration<CVRSystem_003>
 D vtable for HmdInterfaceRegistration<CVRSystem_004>
 D vtable for HmdInterfaceRegistration<CVRSystem_005>
 D vtable for HmdInterfaceRegistration<CVRSystem_006>
 D vtable for HmdInterfaceRegistration<CVRSystem_007>
 D vtable for HmdInterfaceRegistration<CVRSystem_008>
 D vtable for HmdInterfaceRegistration<CVRSystem_009>
 D vtable for HmdInterfaceRegistration<CVRSystem_010>
 D vtable for HmdInterfaceRegistration<CVRSystem_011>
 D vtable for IHmdSystem_002
 D vtable for IHmdSystem_003
 D vtable for IPC::BinarySemaphore
 D vtable for IPC::PosixEvent
 D vtable for IPC::PosixMutex
 D vtable for IPC::PosixSharedMemory
 D vtable for InterfaceRegistrationBase
 D vtable for Json::Exception
 D vtable for Json::LogicError
 D vtable for Json::RuntimeError
 D vtable for Json::StyledWriter
 D vtable for NotificationsInterfaceRegistration<CVRNotifications_001>
 D vtable for OverlayInterfaceRegistration<CVROverlay_001>
 D vtable for OverlayInterfaceRegistration<CVROverlay_002>
 D vtable for OverlayInterfaceRegistration<CVROverlay_003>
 D vtable for OverlayInterfaceRegistration<CVROverlay_004>
 D vtable for OverlayInterfaceRegistration<CVROverlay_005>
 D vtable for OverlayInterfaceRegistration<CVROverlay_006>
 D vtable for OverlayInterfaceRegistration<CVROverlay_007>
 D vtable for OverlayInterfaceRegistration<CVROverlay_008>
 D vtable for OverlayInterfaceRegistration<CVROverlay_009>
 D vtable for OverlayInterfaceRegistration<CVROverlay_010>
 D vtable for OverlayInterfaceRegistration<CVROverlay_011>
 D vtable for RenderModelsInterfaceRegistration<CVRRenderModels_001>
 D vtable for RenderModelsInterfaceRegistration<CVRRenderModels_002>
 D vtable for RenderModelsInterfaceRegistration<CVRRenderModels_003>
 D vtable for RenderModelsInterfaceRegistration<CVRRenderModels_004>
 D vtable for SteamThreadTools::CThread
 D vtable for SystemInterfaceRegistration<CHmdSystem_001>
 D vtable for SystemInterfaceRegistration<CHmdSystem_004>
 D vtable for SystemInterfaceRegistration<CVRClientCore_001>
 D vtable for SystemInterfaceRegistration<IHmdSystem_002>
 D vtable for SystemInterfaceRegistration<IHmdSystem_003>
 D vtable for TrackedCameraInterfaceRegistration<CVRTrackedCamera_002>
 D vtable for std::__1::basic_filebuf<char, std::__1::char_traits<char> >
 D vtable for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
 D vtable for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D vtable for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D vtable for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D vtable for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 D vtable for tinyobj::MaterialFileReader
 D vtable for vr::CVRApplicationsLatest
 D vtable for vr::CVRChaperoneLatest
 D vtable for vr::CVRDashboardManagerLatest
 D vtable for vr::CVRNotificationsLatest
 D vtable for vr::CVRSettingsLatest
 D vtable for vr::CVRTrackedCamera
 IOSurfaceCreate
 IOSurfaceGetID
 NSHomeDirectory
 NSWorkspaceLaunchConfigurationArguments
 OBJC_CLASS_$_NSBundle
 OBJC_CLASS_$_NSDictionary
 OBJC_CLASS_$_NSMutableArray
 OBJC_CLASS_$_NSNumber
 OBJC_CLASS_$_NSString
 OBJC_CLASS_$_NSURL
 OBJC_CLASS_$_NSWorkspace
 OSAtomicCompareAndSwap32Barrier
 OSAtomicCompareAndSwap64Barrier
 OSMemoryBarrier
 R Json::Value::maxInt
 R Json::Value::maxLargestInt
 R Json::Value::maxLargestUInt
 R Json::Value::minLargestInt
 R typeinfo name for ApplicationsInterfaceRegistration<CVRApplications_001>
 R typeinfo name for ApplicationsInterfaceRegistration<CVRApplications_002>
 R typeinfo name for ApplicationsInterfaceRegistration<CVRApplications_003>
 R typeinfo name for ApplicationsInterfaceRegistration<CVRApplications_004>
 R typeinfo name for CClientTrackedDeviceProvider
 R typeinfo name for CClientTrackedDeviceProvider_Latest
 R typeinfo name for CDriverLog
 R typeinfo name for CHmdSystemLatest
 R typeinfo name for CHmdSystem_001
 R typeinfo name for CHmdSystem_004
 R typeinfo name for CHmd_001
 R typeinfo name for CHmd_002
 R typeinfo name for CHmd_003
 R typeinfo name for CHmd_004
 R typeinfo name for CHmd_005
 R typeinfo name for CHmd_006
 R typeinfo name for COculusDirectClient
 R typeinfo name for CRenderModelLoadThread
 R typeinfo name for CRenderModelManager
 R typeinfo name for CServerTrackedDeviceProvider
 R typeinfo name for CServerTrackedDeviceProvider_002
 R typeinfo name for CServerTrackedDeviceProvider_Latest
 R typeinfo name for CVRApplications_001
 R typeinfo name for CVRApplications_002
 R typeinfo name for CVRApplications_003
 R typeinfo name for CVRApplications_004
 R typeinfo name for CVRChaperoneSetup_001
 R typeinfo name for CVRChaperoneSetup_002
 R typeinfo name for CVRChaperoneSetup_003
 R typeinfo name for CVRChaperoneSetup_004
 R typeinfo name for CVRChaperone_001
 R typeinfo name for CVRChaperone_002
 R typeinfo name for CVRClientCore_001
 R typeinfo name for CVRCompositorClient
 R typeinfo name for CVRCompositorClientBase
 R typeinfo name for CVRCompositor_001
 R typeinfo name for CVRCompositor_002
 R typeinfo name for CVRCompositor_003
 R typeinfo name for CVRCompositor_004
 R typeinfo name for CVRCompositor_005
 R typeinfo name for CVRCompositor_006
 R typeinfo name for CVRCompositor_007
 R typeinfo name for CVRCompositor_008
 R typeinfo name for CVRCompositor_009
 R typeinfo name for CVRCompositor_010
 R typeinfo name for CVRCompositor_011
 R typeinfo name for CVRCompositor_012
 R typeinfo name for CVRCompositor_013
 R typeinfo name for CVRCompositor_014
 R typeinfo name for CVRControlPanel_001
 R typeinfo name for CVRMsg_AbortApplicationTransition
 R typeinfo name for CVRMsg_AcknowledgeQuit_Exiting
 R typeinfo name for CVRMsg_AcknowledgeQuit_UserPrompt
 R typeinfo name for CVRMsg_ApplicationInfo
 R typeinfo name for CVRMsg_ApplicationInfo_Manifest
 R typeinfo name for CVRMsg_ApplicationInfo_Options
 R typeinfo name for CVRMsg_ApplicationManifestRequest
 R typeinfo name for CVRMsg_ApplicationManifestResponse
 R typeinfo name for CVRMsg_CancelApplicationLaunch
 R typeinfo name for CVRMsg_CancelApplicationLaunchResponse
 R typeinfo name for CVRMsg_CompositorBringToFront
 R typeinfo name for CVRMsg_CompositorClearFrameBuffer
 R typeinfo name for CVRMsg_CompositorConnect
 R typeinfo name for CVRMsg_CompositorConnectResponse
 R typeinfo name for CVRMsg_CompositorDumpImages
 R typeinfo name for CVRMsg_CompositorFadeGrid
 R typeinfo name for CVRMsg_CompositorFadeToColor
 R typeinfo name for CVRMsg_CompositorGoToBack
 R typeinfo name for CVRMsg_CompositorHandleSystemButton
 R typeinfo name for CVRMsg_CompositorHandleSystemButtonResponse
 R typeinfo name for CVRMsg_CompositorHideDashboard
 R typeinfo name for CVRMsg_CompositorHideDashboardResponse
 R typeinfo name for CVRMsg_CompositorHideMirrorWindow
 R typeinfo name for CVRMsg_CompositorPrepareInternalProcessTransition
 R typeinfo name for CVRMsg_CompositorPrepareInternalProcessTransitionResponse
 R typeinfo name for CVRMsg_CompositorQuit
 R typeinfo name for CVRMsg_CompositorRequestScreenshot
 R typeinfo name for CVRMsg_CompositorRequestScreenshotResponse
 R typeinfo name for CVRMsg_CompositorSetOverlay
 R typeinfo name for CVRMsg_CompositorSetOverlayFromFile
 R typeinfo name for CVRMsg_CompositorSetOverlayFromFileResponse
 R typeinfo name for CVRMsg_CompositorShowDashboard
 R typeinfo name for CVRMsg_CompositorShowDashboardResponse
 R typeinfo name for CVRMsg_CompositorShowMirrorWindow
 R typeinfo name for CVRMsg_CompositorToggleCameraRoomView
 R typeinfo name for CVRMsg_ComputeDistortion
 R typeinfo name for CVRMsg_ComputeDistortionResponse
 R typeinfo name for CVRMsg_Connect
 R typeinfo name for CVRMsg_ConnectResponse
 R typeinfo name for CVRMsg_CreateSwapTextureSet
 R typeinfo name for CVRMsg_CreateSwapTextureSetResponse
 R typeinfo name for CVRMsg_DestroySwapTextureSet
 R typeinfo name for CVRMsg_DriverDebugRequest
 R typeinfo name for CVRMsg_DriverDebugResponse
 R typeinfo name for CVRMsg_GetApplicationInfo
 R typeinfo name for CVRMsg_GetDisplayInfo
 R typeinfo name for CVRMsg_GetDisplayInfoResponse
 R typeinfo name for CVRMsg_GetDisplayInfoResponse_DisplayInfo
 R typeinfo name for CVRMsg_GetDriverDetail
 R typeinfo name for CVRMsg_GetDriverDetailResponse
 R typeinfo name for CVRMsg_GetDriverInfo
 R typeinfo name for CVRMsg_GetDriverInfoResponse
 R typeinfo name for CVRMsg_GetDriverInfoResponse_DriverInfo
 R typeinfo name for CVRMsg_GetProperty
 R typeinfo name for CVRMsg_GetPropertyResponse
 R typeinfo name for CVRMsg_InputCaptureRequest
 R typeinfo name for CVRMsg_InputCaptureResponse
 R typeinfo name for CVRMsg_LaunchApplication
 R typeinfo name for CVRMsg_LaunchApplicationResponse
 R typeinfo name for CVRMsg_LaunchInternalProcess
 R typeinfo name for CVRMsg_LaunchInternalProcessResponse
 R typeinfo name for CVRMsg_LaunchTemplateApplication
 R typeinfo name for CVRMsg_LaunchTemplateApplicationResponse
 R typeinfo name for CVRMsg_LaunchTemplateApplication_AppOverrideKey
 R typeinfo name for CVRMsg_PerformApplicationPrelaunchCheck
 R typeinfo name for CVRMsg_PerformApplicationPrelaunchCheckResponse
 R typeinfo name for CVRMsg_PowerOffTrackedDevice
 R typeinfo name for CVRMsg_QuitProcessRequest
 R typeinfo name for CVRMsg_QuitProcessResponse
 R typeinfo name for CVRMsg_SetApplicationOptions
 R typeinfo name for CVRMsg_SetApplicationOptionsResponse
 R typeinfo name for CVRMsg_SetApplicationProcessId
 R typeinfo name for CVRMsg_SetApplicationProcessIdResponse
 R typeinfo name for CVRMsg_SetMasterProcess
 R typeinfo name for CVRMsg_SetMasterProcessResponse
 R typeinfo name for CVRMsg_SetNotificationImage
 R typeinfo name for CVRMsg_SetNotificationImageResponse
 R typeinfo name for CVRMsg_Settings_GetBool
 R typeinfo name for CVRMsg_Settings_GetBool_Response
 R typeinfo name for CVRMsg_Settings_GetFloat
 R typeinfo name for CVRMsg_Settings_GetFloat_Response
 R typeinfo name for CVRMsg_Settings_GetInt32
 R typeinfo name for CVRMsg_Settings_GetInt32_Response
 R typeinfo name for CVRMsg_Settings_GetString
 R typeinfo name for CVRMsg_Settings_GetString_Response
 R typeinfo name for CVRMsg_Settings_RemoveKeyInSection
 R typeinfo name for CVRMsg_Settings_RemoveSection
 R typeinfo name for CVRMsg_Settings_SetBool
 R typeinfo name for CVRMsg_Settings_SetFloat
 R typeinfo name for CVRMsg_Settings_SetInt32
 R typeinfo name for CVRMsg_Settings_SetString
 R typeinfo name for CVRMsg_Settings_SetValue_Response
 R typeinfo name for CVRMsg_Settings_Sync
 R typeinfo name for CVRMsg_Settings_Sync_Response
 R typeinfo name for CVRMsg_StartAutolaunchOverlays
 R typeinfo name for CVRMsg_StartProcess
 R typeinfo name for CVRMsg_StartProcessResponse
 R typeinfo name for CVRMsg_TrackedCamera_AcquireVideoStreamingService
 R typeinfo name for CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse
 R typeinfo name for CVRMsg_TrackedCamera_Enable
 R typeinfo name for CVRMsg_TrackedCamera_EnableResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetDistortion
 R typeinfo name for CVRMsg_TrackedCamera_GetDistortionResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord
 R typeinfo name for CVRMsg_TrackedCamera_GetDistortion_InputCoord
 R typeinfo name for CVRMsg_TrackedCamera_GetFormatDimensions
 R typeinfo name for CVRMsg_TrackedCamera_GetFormatDimensionsResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetFrameBounds
 R typeinfo name for CVRMsg_TrackedCamera_GetFrameBoundsResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetIntrinsics
 R typeinfo name for CVRMsg_TrackedCamera_GetIntrinsicsResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetProjection
 R typeinfo name for CVRMsg_TrackedCamera_GetProjectionResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetRecommendedUndistortion
 R typeinfo name for CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse
 R typeinfo name for CVRMsg_TrackedCamera_GetVideoStreamFormat
 R typeinfo name for CVRMsg_TrackedCamera_GetVideoStreamFormatResponse
 R typeinfo name for CVRMsg_TrackedCamera_IsVideoStreamActive
 R typeinfo name for CVRMsg_TrackedCamera_IsVideoStreamActiveResponse
 R typeinfo name for CVRMsg_TrackedCamera_PauseVideoStream
 R typeinfo name for CVRMsg_TrackedCamera_PauseVideoStreamResponse
 R typeinfo name for CVRMsg_TrackedCamera_ReleaseVideoStreamingService
 R typeinfo name for CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse
 R typeinfo name for CVRMsg_TrackedCamera_ResumeVideoStream
 R typeinfo name for CVRMsg_TrackedCamera_ResumeVideoStreamResponse
 R typeinfo name for CVRMsg_TrackedCamera_SetAutoExposure
 R typeinfo name for CVRMsg_TrackedCamera_SetAutoExposureResponse
 R typeinfo name for CVRMsg_TrackedCamera_SetCompatibilityMode
 R typeinfo name for CVRMsg_TrackedCamera_SetCompatibilityModeResponse
 R typeinfo name for CVRMsg_TrackedCamera_SetUndistortion
 R typeinfo name for CVRMsg_TrackedCamera_SetUndistortionResponse
 R typeinfo name for CVRMsg_TrackedCamera_SetVideoStreamFormat
 R typeinfo name for CVRMsg_TrackedCamera_SetVideoStreamFormatResponse
 R typeinfo name for CVRMsg_TrackedCamera_StartVideoStream
 R typeinfo name for CVRMsg_TrackedCamera_StartVideoStreamResponse
 R typeinfo name for CVRMsg_TrackedCamera_StopVideoStream
 R typeinfo name for CVRMsg_TrackedCamera_StopVideoStreamResponse
 R typeinfo name for CVRMsg_TriggerHapticPulse
 R typeinfo name for CVRNotifications_001
 R typeinfo name for CVROverlay_001
 R typeinfo name for CVROverlay_002
 R typeinfo name for CVROverlay_003
 R typeinfo name for CVROverlay_004
 R typeinfo name for CVROverlay_005
 R typeinfo name for CVROverlay_006
 R typeinfo name for CVROverlay_007
 R typeinfo name for CVROverlay_008
 R typeinfo name for CVROverlay_009
 R typeinfo name for CVROverlay_010
 R typeinfo name for CVROverlay_011
 R typeinfo name for CVRRenderModels_001
 R typeinfo name for CVRRenderModels_002
 R typeinfo name for CVRRenderModels_003
 R typeinfo name for CVRRenderModels_004
 R typeinfo name for CVRSystemLatest
 R typeinfo name for CVRSystem_001
 R typeinfo name for CVRSystem_002
 R typeinfo name for CVRSystem_003
 R typeinfo name for CVRSystem_004
 R typeinfo name for CVRSystem_005
 R typeinfo name for CVRSystem_006
 R typeinfo name for CVRSystem_007
 R typeinfo name for CVRSystem_008
 R typeinfo name for CVRSystem_009
 R typeinfo name for CVRSystem_010
 R typeinfo name for CVRSystem_011
 R typeinfo name for CVRTrackedCamera_002
 R typeinfo name for ChaperoneInterfaceRegistration<CVRChaperone_001>
 R typeinfo name for ChaperoneInterfaceRegistration<CVRChaperone_002>
 R typeinfo name for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_001>
 R typeinfo name for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_002>
 R typeinfo name for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_003>
 R typeinfo name for ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_004>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_001>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_002>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_003>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_004>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_005>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_006>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_007>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_008>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_009>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_010>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_011>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_012>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_013>
 R typeinfo name for CompositorInterfaceRegistration<CVRCompositor_014>
 R typeinfo name for ControlPanelInterfaceRegistration<CVRControlPanel_001>
 R typeinfo name for GenericInterfaceRegistration
 R typeinfo name for HmdInterfaceRegistration<CHmd_001>
 R typeinfo name for HmdInterfaceRegistration<CHmd_002>
 R typeinfo name for HmdInterfaceRegistration<CHmd_003>
 R typeinfo name for HmdInterfaceRegistration<CHmd_004>
 R typeinfo name for HmdInterfaceRegistration<CHmd_005>
 R typeinfo name for HmdInterfaceRegistration<CHmd_006>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_001>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_002>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_003>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_004>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_005>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_006>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_007>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_008>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_009>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_010>
 R typeinfo name for HmdInterfaceRegistration<CVRSystem_011>
 R typeinfo name for IHmdSystem_002
 R typeinfo name for IHmdSystem_003
 R typeinfo name for IPC::BinarySemaphore
 R typeinfo name for IPC::IEvent
 R typeinfo name for IPC::IMutex
 R typeinfo name for IPC::ISharedMem
 R typeinfo name for IPC::ISyncObject
 R typeinfo name for IPC::PosixEvent
 R typeinfo name for IPC::PosixMutex
 R typeinfo name for IPC::PosixSharedMemory
 R typeinfo name for IVRClientInternal
 R typeinfo name for InterfaceRegistrationBase
 R typeinfo name for Json::Exception
 R typeinfo name for Json::LogicError
 R typeinfo name for Json::RuntimeError
 R typeinfo name for Json::StyledWriter
 R typeinfo name for Json::Writer
 R typeinfo name for NotificationsInterfaceRegistration<CVRNotifications_001>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_001>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_002>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_003>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_004>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_005>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_006>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_007>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_008>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_009>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_010>
 R typeinfo name for OverlayInterfaceRegistration<CVROverlay_011>
 R typeinfo name for RenderModelsInterfaceRegistration<CVRRenderModels_001>
 R typeinfo name for RenderModelsInterfaceRegistration<CVRRenderModels_002>
 R typeinfo name for RenderModelsInterfaceRegistration<CVRRenderModels_003>
 R typeinfo name for RenderModelsInterfaceRegistration<CVRRenderModels_004>
 R typeinfo name for SteamThreadTools::CThread
 R typeinfo name for SystemInterfaceRegistration<CHmdSystem_001>
 R typeinfo name for SystemInterfaceRegistration<CHmdSystem_004>
 R typeinfo name for SystemInterfaceRegistration<CVRClientCore_001>
 R typeinfo name for SystemInterfaceRegistration<IHmdSystem_002>
 R typeinfo name for SystemInterfaceRegistration<IHmdSystem_003>
 R typeinfo name for TrackedCameraInterfaceRegistration<CVRTrackedCamera_002>
 R typeinfo name for std::__1::basic_filebuf<char, std::__1::char_traits<char> >
 R typeinfo name for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
 R typeinfo name for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 R typeinfo name for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 R typeinfo name for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 R typeinfo name for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
 R typeinfo name for tinyobj::MaterialFileReader
 R typeinfo name for tinyobj::MaterialReader
 R typeinfo name for vr::CVRApplicationsLatest
 R typeinfo name for vr::CVRChaperoneLatest
 R typeinfo name for vr::CVRDashboardManagerLatest
 R typeinfo name for vr::CVRNotificationsLatest
 R typeinfo name for vr::CVRSettingsLatest
 R typeinfo name for vr::CVRTrackedCamera
 R typeinfo name for vr::IClientDriverHost
 R typeinfo name for vr::IClientTrackedDeviceProvider
 R typeinfo name for vr::IDriverLog
 R typeinfo name for vr::ILiquidVR
 R typeinfo name for vr::IServerTrackedDeviceProvider
 R typeinfo name for vr::IVRApplications
 R typeinfo name for vr::IVRChaperone
 R typeinfo name for vr::IVRChaperoneSetup
 R typeinfo name for vr::IVRClientCore
 R typeinfo name for vr::IVRCompositor
 R typeinfo name for vr::IVRCompositorDeprecatedFunctions
 R typeinfo name for vr::IVRCompositorSystemInternal
 R typeinfo name for vr::IVRControlPanel
 R typeinfo name for vr::IVRDashboardManager
 R typeinfo name for vr::IVRExtendedDisplay
 R typeinfo name for vr::IVRExternalEventSource
 R typeinfo name for vr::IVRNotifications
 R typeinfo name for vr::IVROculusDirect
 R typeinfo name for vr::IVROverlay
 R typeinfo name for vr::IVRRenderModels
 R typeinfo name for vr::IVRRenderModelsInternal
 R typeinfo name for vr::IVRSettings
 R typeinfo name for vr::IVRSystem
 R typeinfo name for vr::IVRTrackedCamera
 R typeinfo name for vr::IVRTrackedCameraInternal
 T ApplicationsInterfaceRegistration<CVRApplications_001>::GetInterface()
 T ApplicationsInterfaceRegistration<CVRApplications_001>::~ApplicationsInterfaceRegistration()
 T ApplicationsInterfaceRegistration<CVRApplications_002>::GetInterface()
 T ApplicationsInterfaceRegistration<CVRApplications_002>::~ApplicationsInterfaceRegistration()
 T ApplicationsInterfaceRegistration<CVRApplications_003>::GetInterface()
 T ApplicationsInterfaceRegistration<CVRApplications_003>::~ApplicationsInterfaceRegistration()
 T ApplicationsInterfaceRegistration<CVRApplications_004>::GetInterface()
 T ApplicationsInterfaceRegistration<CVRApplications_004>::~ApplicationsInterfaceRegistration()
 T BCreateDirectoryRecursive(char const*)
 T BCreateProcess(char const*, char const**, unsigned int*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
 T BDeleteFileIfExists(char const*)
 T BKillProcess(unsigned int)
 T BProcessRunning(char const*, bool)
 T BProcessRunning(unsigned int)
 T BRenameFile(char const*, char const*)
 T CClientTrackedDeviceProvider_Latest::BIsHmdPresent(char const*)
 T CClientTrackedDeviceProvider_Latest::Cleanup()
 T CClientTrackedDeviceProvider_Latest::GetHiddenAreaMesh(vr::EVREye)
 T CClientTrackedDeviceProvider_Latest::GetMCImage(unsigned int*, unsigned int*, unsigned int*, void*, unsigned int)
 T CClientTrackedDeviceProvider_Latest::GetSourceVersion()
 T CClientTrackedDeviceProvider_Latest::Init(vr::IDriverLog*, vr::IClientDriverHost*, char const*, char const*)
 T CClientTrackedDeviceProvider_Latest::SetDisplayId(char const*)
 T CClientTrackedDeviceProvider_Latest::~CClientTrackedDeviceProvider_Latest()
 T CDirIterator::BCurrentIsDir() const
 T CDirIterator::BNextFile()
 T CDirIterator::CDirIterator(char const*, char const*)
 T CDirIterator::CurrentFileName()
 T CDirIterator::~CDirIterator()
 T CDriverLog::Log(char const*)
 T CDriverManager::BInit()
 T CDriverManager::CDriverManager()
 T CDriverManager::Cleanup()
 T CDriverManager::CleanupDriver(CDriverManager::HmdDriver_t*)
 T CDriverManager::FindDriverByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T CDriverManager::GetClientProvider(unsigned int)
 T CDriverManager::GetDriverBaseDir()
 T CDriverManager::GetDriverName(unsigned int)
 T CDriverManager::GetDriverPath(unsigned int)
 T CDriverManager::LoadDriver(unsigned int, CDriverManager::HmdDriverContext, bool, vr::IServerDriverHost*, vr::IClientDriverHost*)
 T CDriverManager::~CDriverManager()
 T CHmdSystemLatest::AbortTransition()
 T CHmdSystemLatest::BHmdPresentForDriver(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
 T CHmdSystemLatest::BIsHmdPresent()
 T CHmdSystemLatest::BIsHmdPresentInternal(char const*)
 T CHmdSystemLatest::CHmdSystemLatest()
 T CHmdSystemLatest::Cleanup()
 T CHmdSystemLatest::DismissDashboard()
 T CHmdSystemLatest::ForceQuitProcess(unsigned int)
 T CHmdSystemLatest::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmdSystemLatest::GetCurrentCompositorInterface(char const*)
 T CHmdSystemLatest::GetCurrentDisplayInterface(char const*)
 T CHmdSystemLatest::GetDashboardEnabled()
 T CHmdSystemLatest::GetDriverCount()
 T CHmdSystemLatest::GetDriverDisplayCount(char const*)
 T CHmdSystemLatest::GetDriverDisplayId(char const*, unsigned int, char*, unsigned int)
 T CHmdSystemLatest::GetDriverDisplayModelNumber(char const*, char const*, char*, unsigned int)
 T CHmdSystemLatest::GetDriverDisplaySerialNumber(char const*, char const*, char*, unsigned int)
 T CHmdSystemLatest::GetDriverId(unsigned int, char*, unsigned int)
 T CHmdSystemLatest::GetDriverInitError(char const*)
 T CHmdSystemLatest::GetEnglishStringForHmdError(vr::EVRInitError)
 T CHmdSystemLatest::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmdSystemLatest::GetGenericInterface(char const*, vr::EVRInitError*)
 T CHmdSystemLatest::GetIDForVRInitError(vr::EVRInitError)
 T CHmdSystemLatest::GetIPD()
 T CHmdSystemLatest::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmdSystemLatest::GetSettings(char const*)
 T CHmdSystemLatest::GetSettingsDirtyCount()
 T CHmdSystemLatest::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CHmdSystemLatest::GetTrackedDeviceClass(unsigned int)
 T CHmdSystemLatest::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmdSystemLatest::GetVRMonitorState()
 T CHmdSystemLatest::Init(vr::EVRApplicationType)
 T CHmdSystemLatest::IsInterfaceVersionValid(char const*)
 T CHmdSystemLatest::IsTrackedDeviceConnected(unsigned int)
 T CHmdSystemLatest::LoadFileInternal(char const*, char*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T CHmdSystemLatest::LoadHmdClientProvider()
 T CHmdSystemLatest::LoadSharedResource(char const*, char*, unsigned int)
 T CHmdSystemLatest::PostOverlayEvent(unsigned long long, vr::VREvent_t const&)
 T CHmdSystemLatest::PowerOffTrackedDevice(unsigned int)
 T CHmdSystemLatest::PrepareInternalProcessTransition(unsigned int, unsigned int)
 T CHmdSystemLatest::QuitProcess(unsigned int)
 T CHmdSystemLatest::SetDashboardEnabled(bool)
 T CHmdSystemLatest::SetIPD(float)
 T CHmdSystemLatest::SetMasterProcessToThis()
 T CHmdSystemLatest::SetVRMonitorState(vr::EVRState)
 T CHmdSystemLatest::StartAutolaunchOverlays()
 T CHmdSystemLatest::StartVRProcess(char const*, char const**, unsigned int, char const*)
 T CHmdSystemLatest::TopologyChanged()
 T CHmdSystemLatest::~CHmdSystemLatest()
 T CHmdSystem_001::Cleanup()
 T CHmdSystem_001::GetControlPanel(char const*, vr::EVRInitError*)
 T CHmdSystem_001::GetCurrentHmd(char const*)
 T CHmdSystem_001::Init()
 T CHmdSystem_001::IsInterfaceVersionValid(char const*)
 T CHmdSystem_004::BIsHmdPresent(char const*)
 T CHmdSystem_004::Cleanup()
 T CHmdSystem_004::GetCurrentHmd(char const*)
 T CHmdSystem_004::GetGenericInterface(char const*, vr::EVRInitError*)
 T CHmdSystem_004::GetStringForHmdError(vr::EVRInitError)
 T CHmdSystem_004::Init(char const*, char const*)
 T CHmdSystem_004::IsInterfaceVersionValid(char const*)
 T CHmd_001::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_001::GetD3D9AdapterIndex()
 T CHmd_001::GetDisplayId(char*, unsigned int)
 T CHmd_001::GetDriverId(char*, unsigned int)
 T CHmd_001::GetEyeMatrix(vr::EVREye)
 T CHmd_001::GetEyeOutputViewport(vr::EVREye, vr::EGraphicsAPIConvention, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_001::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_001::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_001::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_001::GetViewMatrix(float, vr::HmdMatrix44_t*, vr::HmdMatrix44_t*, vr::ETrackingResult*)
 T CHmd_001::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_001::GetWorldFromHeadPose(float, vr::HmdMatrix34_t*, vr::ETrackingResult*)
 T CHmd_001::WillDriftInYaw()
 T CHmd_002::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_002::GetD3D9AdapterIndex()
 T CHmd_002::GetDisplayId(char*, unsigned int)
 T CHmd_002::GetDriverId(char*, unsigned int)
 T CHmd_002::GetEyeMatrix(vr::EVREye)
 T CHmd_002::GetEyeOutputViewport(vr::EVREye, vr::EGraphicsAPIConvention, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_002::GetLastWorldFromHeadPose(vr::HmdMatrix34_t*)
 T CHmd_002::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_002::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_002::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_002::GetViewMatrix(float, vr::HmdMatrix44_t*, vr::HmdMatrix44_t*, vr::ETrackingResult*)
 T CHmd_002::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_002::GetWorldFromHeadPose(float, vr::HmdMatrix34_t*, vr::ETrackingResult*)
 T CHmd_002::WillDriftInYaw()
 T CHmd_002::ZeroTracker()
 T CHmd_003::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_003::GetD3D9AdapterIndex()
 T CHmd_003::GetDXGIOutputInfo(int*, int*)
 T CHmd_003::GetDisplayId(char*, unsigned int)
 T CHmd_003::GetDriverId(char*, unsigned int)
 T CHmd_003::GetEyeMatrix(vr::EVREye)
 T CHmd_003::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_003::GetLastWorldFromHeadPose(vr::HmdMatrix34_t*)
 T CHmd_003::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_003::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_003::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_003::GetViewMatrix(float, vr::HmdMatrix44_t*, vr::HmdMatrix44_t*, vr::ETrackingResult*)
 T CHmd_003::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_003::GetWorldFromHeadPose(float, vr::HmdMatrix34_t*, vr::ETrackingResult*)
 T CHmd_003::WillDriftInYaw()
 T CHmd_003::ZeroTracker()
 T CHmd_004::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_004::GetD3D9AdapterIndex()
 T CHmd_004::GetDXGIOutputInfo(int*, int*)
 T CHmd_004::GetDisplayId(char*, unsigned int)
 T CHmd_004::GetDriverId(char*, unsigned int)
 T CHmd_004::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_004::GetHeadFromEyePose(vr::EVREye)
 T CHmd_004::GetLastTrackerFromHeadPose(vr::HmdMatrix34_t*)
 T CHmd_004::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_004::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_004::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_004::GetTrackerFromHeadPose(float, vr::HmdMatrix34_t*, vr::ETrackingResult*)
 T CHmd_004::GetTrackerZeroPose()
 T CHmd_004::GetViewMatrix(float, vr::HmdMatrix44_t*, vr::HmdMatrix44_t*, vr::ETrackingResult*)
 T CHmd_004::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_004::WillDriftInYaw()
 T CHmd_004::ZeroTracker()
 T CHmd_005::AttachToWindow(void*)
 T CHmd_005::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_005::GetD3D9AdapterIndex()
 T CHmd_005::GetDXGIOutputInfo(int*, int*)
 T CHmd_005::GetDisplayId(char*, unsigned int)
 T CHmd_005::GetDriverId(char*, unsigned int)
 T CHmd_005::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_005::GetHeadFromEyePose(vr::EVREye)
 T CHmd_005::GetLastTrackerFromHeadPose(vr::HmdMatrix34_t*)
 T CHmd_005::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_005::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_005::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_005::GetTrackerFromHeadPose(float, vr::HmdMatrix34_t*, vr::ETrackingResult*)
 T CHmd_005::GetTrackerZeroPose()
 T CHmd_005::GetViewMatrix(float, vr::HmdMatrix44_t*, vr::HmdMatrix44_t*, vr::ETrackingResult*)
 T CHmd_005::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_005::WillDriftInYaw()
 T CHmd_005::ZeroTracker()
 T CHmd_006::AttachToWindow(void*)
 T CHmd_006::ComputeDistortion(vr::EVREye, float, float)
 T CHmd_006::FreeRenderModel(RenderModel001_t*)
 T CHmd_006::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmd_006::GetD3D9AdapterIndex()
 T CHmd_006::GetDXGIOutputInfo(int*, int*)
 T CHmd_006::GetDeviceToAbsoluteTrackingPose(float, vr::TrackedDevicePose_t*, unsigned int)
 T CHmd_006::GetEventTypeNameFromEnum(vr::EVREventType)
 T CHmd_006::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CHmd_006::GetEyeToHeadTransform(vr::EVREye)
 T CHmd_006::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmd_006::GetHiddenAreaMesh(vr::EVREye)
 T CHmd_006::GetIPD()
 T CHmd_006::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmd_006::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CHmd_006::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CHmd_006::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CHmd_006::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CHmd_006::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CHmd_006::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CHmd_006::GetTrackedDeviceClass(unsigned int)
 T CHmd_006::GetTrackedDeviceInfoDEPRECATED(TrackedDeviceInfoDEPRECATED_t*, unsigned int)
 T CHmd_006::GetTrackerZeroPose()
 T CHmd_006::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CHmd_006::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CHmd_006::IsTrackedDeviceConnected(unsigned int)
 T CHmd_006::LoadRenderModel(char const*, RenderModel001_t*)
 T CHmd_006::PollNextEvent(VREvent001_t*)
 T CHmd_006::ZeroTracker()
 T CIPCPipe::CIPCPipe()
 T CIPCPipe::ClosePipe()
 T CIPCPipe::ConnectPipe(char const*)
 T CIPCPipe::GetMessagePayload(void*, unsigned int)
 T CIPCPipe::GetNextMessage(unsigned int*, unsigned int*, unsigned int*, unsigned int)
 T CIPCPipe::IsValid() const
 T CIPCPipe::SendMessageInternal(void*, unsigned int)
 T CIPCPipe::SendPackedMessage(unsigned int, unsigned int, void const*, unsigned int)
 T CIPCPipe::SendSimpleMessage(unsigned int, unsigned int)
 T CIPCPipe::~CIPCPipe()
 T CIPCToolMachClient::DoKillCommand(char const*)
 T CIPCToolMachClient::Init()
 T CIPCToolMachClient::~CIPCToolMachClient()
 T COculusDirectClient::Cleanup()
 T COculusDirectClient::CreateSwapTextureSet(unsigned int, unsigned int, unsigned int, void* (*) [3])
 T COculusDirectClient::DestroySwapTextureSet(void*)
 T COculusDirectClient::GetNextLayerIndex(unsigned int, unsigned int (*) [2])
 T COculusDirectClient::Init(CVRClient*)
 T COculusDirectClient::Present(void*)
 T COculusDirectClient::SubmitLayer(unsigned int, vr::EVREye, void*, vr::VRTextureBounds_t const*, vr::HmdMatrix34_t const*)
 T COculusDirectClient::WaitForPresent()
 T CRenderModelLoadThread::CRenderModelLoadThread(CRenderModelManager*)
 T CRenderModelLoadThread::Load(int, void*)
 T CRenderModelLoadThread::Load(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T CRenderModelLoadThread::Run()
 T CRenderModelLoadThread::~CRenderModelLoadThread()
 T CRenderModelManager::BInit(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, CDriverManager*, vr::IVRSettings*, IVRClientInternal*)
 T CRenderModelManager::CRenderModelManager()
 T CRenderModelManager::Cleanup()
 T CRenderModelManager::Component_t::GetInputValue(vr::VRControllerState001_t const*)
 T CRenderModelManager::FindOrCreateTexture(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T CRenderModelManager::FreeRenderModel(vr::RenderModel_t*)
 T CRenderModelManager::FreeTexture(vr::RenderModel_TextureMap_t*)
 T CRenderModelManager::FreeTextureD3D11(void*)
 T CRenderModelManager::GetComponentButtonMask(char const*, char const*)
 T CRenderModelManager::GetComponentCount(char const*)
 T CRenderModelManager::GetComponentName(char const*, unsigned int, char*, unsigned int)
 T CRenderModelManager::GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 T CRenderModelManager::GetComponentState(char const*, char const*, vr::VRControllerState001_t const*, vr::RenderModel_ControllerMode_State_t const*, vr::RenderModel_ComponentState_t*)
 T CRenderModelManager::GetModelInfo(char const*, bool)
 T CRenderModelManager::GetRenderModelAbsolutePath(char const*, bool)
 T CRenderModelManager::GetRenderModelCount()
 T CRenderModelManager::GetRenderModelErrorNameFromEnum(vr::EVRRenderModelError)
 T CRenderModelManager::GetRenderModelName(unsigned int, char*, unsigned int)
 T CRenderModelManager::GetRenderModelOriginalPath(char const*, char*, unsigned int, vr::EVRRenderModelError*)
 T CRenderModelManager::GetRenderModelThumbnailURL(char const*, char*, unsigned int, vr::EVRRenderModelError*)
 T CRenderModelManager::LoadIntoTextureD3D11_Async(int, void*)
 T CRenderModelManager::LoadRenderModelInternal(char const*)
 T CRenderModelManager::LoadRenderModel_Async(char const*, vr::RenderModel_t**)
 T CRenderModelManager::LoadTextureD3D11_Async(int, void*, void**)
 T CRenderModelManager::LoadTextureInternal(int, void*)
 T CRenderModelManager::LoadTexture_Async(int, vr::RenderModel_TextureMap_t**)
 T CRenderModelManager::ModelInfo_t::GetComponentByName(char const*)
 T CRenderModelManager::PopulateNames()
 T CRenderModelManager::RegisterTextureFilePath(char const*)
 T CRenderModelManager::RenderModelHasComponent(char const*, char const*)
 T CRenderModelManager::~CRenderModelManager()
 T CServerTrackedDeviceProvider_002::Cleanup()
 T CServerTrackedDeviceProvider_002::EnterStandby()
 T CServerTrackedDeviceProvider_002::FindTrackedDeviceDriver(char const*)
 T CServerTrackedDeviceProvider_002::GetInterfaceVersions()
 T CServerTrackedDeviceProvider_002::GetSourceVersion()
 T CServerTrackedDeviceProvider_002::GetTrackedDeviceCount()
 T CServerTrackedDeviceProvider_002::GetTrackedDeviceDriver(unsigned int)
 T CServerTrackedDeviceProvider_002::Init(vr::IDriverLog*, vr::IServerDriverHost*, char const*, char const*)
 T CServerTrackedDeviceProvider_002::LeaveStandby()
 T CServerTrackedDeviceProvider_002::RunFrame()
 T CServerTrackedDeviceProvider_002::ShouldBlockStandbyMode()
 T CServerTrackedDeviceProvider_002::~CServerTrackedDeviceProvider_002()
 T CServerTrackedDeviceProvider_Latest::Cleanup()
 T CServerTrackedDeviceProvider_Latest::EnterStandby()
 T CServerTrackedDeviceProvider_Latest::FindTrackedDeviceDriver(char const*)
 T CServerTrackedDeviceProvider_Latest::GetInterfaceVersions()
 T CServerTrackedDeviceProvider_Latest::GetSourceVersion()
 T CServerTrackedDeviceProvider_Latest::GetTrackedDeviceCount()
 T CServerTrackedDeviceProvider_Latest::GetTrackedDeviceDriver(unsigned int)
 T CServerTrackedDeviceProvider_Latest::Init(vr::IDriverLog*, vr::IServerDriverHost*, char const*, char const*)
 T CServerTrackedDeviceProvider_Latest::LeaveStandby()
 T CServerTrackedDeviceProvider_Latest::RunFrame()
 T CServerTrackedDeviceProvider_Latest::ShouldBlockStandbyMode()
 T CServerTrackedDeviceProvider_Latest::~CServerTrackedDeviceProvider_Latest()
 T CSimpleMachClient::SendAndReceive(mach_msg_header_t*, mach_msg_header_t*, unsigned int, int*)
 T CTrackedCameraFrameQueue::Read(int*)
 T CTrackedCameraFrameQueue::Write(int)
 T CTrackedDevicePropertyCache::CTrackedDevicePropertyCache()
 T CTrackedDevicePropertyCache::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::GetPropertyInternal(SteamThreadTools::CAutoLockT<SteamThreadTools::CThreadMutex>&, unsigned int, vr::ETrackedDeviceProperty, unsigned int, CVRMsg_GetPropertyResponse const**, unsigned int)
 T CTrackedDevicePropertyCache::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*, unsigned int)
 T CTrackedDevicePropertyCache::Reset(CVRClient*)
 T CTrackedDevicePropertyCache::~CTrackedDevicePropertyCache()
 T CVRApplications_001::AddApplicationManifest(char const*, bool)
 T CVRApplications_001::GetApplicationAutoLaunch(char const*)
 T CVRApplications_001::GetApplicationCount()
 T CVRApplications_001::GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 T CVRApplications_001::GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 T CVRApplications_001::GetApplicationProcessId(char const*)
 T CVRApplications_001::GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_001::GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 T CVRApplications_001::GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 T CVRApplications_001::GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 T CVRApplications_001::GetHomeApplication(char*, unsigned int)
 T CVRApplications_001::GetStartingApplication(char*, unsigned int)
 T CVRApplications_001::GetTransitionState()
 T CVRApplications_001::IdentifyApplication(unsigned int, char const*)
 T CVRApplications_001::IsApplicationInstalled(char const*)
 T CVRApplications_001::LaunchApplication(char const*)
 T CVRApplications_001::LaunchDashboardOverlay(char const*)
 T CVRApplications_001::PerformApplicationPrelaunchCheck(char const*)
 T CVRApplications_001::RemoveApplicationManifest(char const*)
 T CVRApplications_001::SetApplicationAutoLaunch(char const*, bool)
 T CVRApplications_001::SetHomeApplication(char const*)
 T CVRApplications_002::AddApplicationManifest(char const*, bool)
 T CVRApplications_002::GetApplicationAutoLaunch(char const*)
 T CVRApplications_002::GetApplicationCount()
 T CVRApplications_002::GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 T CVRApplications_002::GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 T CVRApplications_002::GetApplicationProcessId(char const*)
 T CVRApplications_002::GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_002::GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 T CVRApplications_002::GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 T CVRApplications_002::GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 T CVRApplications_002::GetStartingApplication(char*, unsigned int)
 T CVRApplications_002::GetTransitionState()
 T CVRApplications_002::IdentifyApplication(unsigned int, char const*)
 T CVRApplications_002::IsApplicationInstalled(char const*)
 T CVRApplications_002::IsQuitUserPromptRequested()
 T CVRApplications_002::LaunchApplication(char const*)
 T CVRApplications_002::LaunchDashboardOverlay(char const*)
 T CVRApplications_002::PerformApplicationPrelaunchCheck(char const*)
 T CVRApplications_002::RemoveApplicationManifest(char const*)
 T CVRApplications_002::SetApplicationAutoLaunch(char const*, bool)
 T CVRApplications_003::AddApplicationManifest(char const*, bool)
 T CVRApplications_003::GetApplicationAutoLaunch(char const*)
 T CVRApplications_003::GetApplicationCount()
 T CVRApplications_003::GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 T CVRApplications_003::GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 T CVRApplications_003::GetApplicationProcessId(char const*)
 T CVRApplications_003::GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_003::GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 T CVRApplications_003::GetApplicationPropertyUint64(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_003::GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 T CVRApplications_003::GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 T CVRApplications_003::GetStartingApplication(char*, unsigned int)
 T CVRApplications_003::GetTransitionState()
 T CVRApplications_003::IdentifyApplication(unsigned int, char const*)
 T CVRApplications_003::IsApplicationInstalled(char const*)
 T CVRApplications_003::IsQuitUserPromptRequested()
 T CVRApplications_003::LaunchApplication(char const*)
 T CVRApplications_003::LaunchDashboardOverlay(char const*)
 T CVRApplications_003::PerformApplicationPrelaunchCheck(char const*)
 T CVRApplications_003::RemoveApplicationManifest(char const*)
 T CVRApplications_003::SetApplicationAutoLaunch(char const*, bool)
 T CVRApplications_004::AddApplicationManifest(char const*, bool)
 T CVRApplications_004::CancelApplicationLaunch(char const*)
 T CVRApplications_004::GetApplicationAutoLaunch(char const*)
 T CVRApplications_004::GetApplicationCount()
 T CVRApplications_004::GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 T CVRApplications_004::GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 T CVRApplications_004::GetApplicationProcessId(char const*)
 T CVRApplications_004::GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_004::GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 T CVRApplications_004::GetApplicationPropertyUint64(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T CVRApplications_004::GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 T CVRApplications_004::GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 T CVRApplications_004::GetStartingApplication(char*, unsigned int)
 T CVRApplications_004::GetTransitionState()
 T CVRApplications_004::IdentifyApplication(unsigned int, char const*)
 T CVRApplications_004::IsApplicationInstalled(char const*)
 T CVRApplications_004::IsQuitUserPromptRequested()
 T CVRApplications_004::LaunchApplication(char const*)
 T CVRApplications_004::LaunchDashboardOverlay(char const*)
 T CVRApplications_004::LaunchInternalProcess(char const*, char const*, char const*)
 T CVRApplications_004::PerformApplicationPrelaunchCheck(char const*)
 T CVRApplications_004::RemoveApplicationManifest(char const*)
 T CVRApplications_004::SetApplicationAutoLaunch(char const*, bool)
 T CVRChaperoneSetup_001::CommitWorkingCopy(char const*)
 T CVRChaperoneSetup_001::GetWorkingHardBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_001::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_001::GetWorkingSoftBoundsInfo(ChaperoneSoftBoundsInfo_t*)
 T CVRChaperoneSetup_001::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_001::GetWorkingTagPoseByName(char const*, vr::HmdMatrix34_t*, float*)
 T CVRChaperoneSetup_001::GetWorkingTagPoseNameByIndex(unsigned int, char*, unsigned int)
 T CVRChaperoneSetup_001::GetWorkingTagPoseScales(float*, unsigned int*)
 T CVRChaperoneSetup_001::GetWorkingTagPoses(vr::HmdMatrix34_t*, unsigned int*)
 T CVRChaperoneSetup_001::ReloadFromDisk()
 T CVRChaperoneSetup_001::RemoveAllWorkingTagPoses()
 T CVRChaperoneSetup_001::RemoveWorkingTagPoseByName(char const*)
 T CVRChaperoneSetup_001::RevertWorkingCopy()
 T CVRChaperoneSetup_001::SetWorkingHardBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T CVRChaperoneSetup_001::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_001::SetWorkingSoftBoundsInfo(ChaperoneSoftBoundsInfo_t const*)
 T CVRChaperoneSetup_001::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_001::SetWorkingTagPoseByName(char const*, vr::HmdMatrix34_t const&, float)
 T CVRChaperoneSetup_002::CommitWorkingCopy(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_002::GetWorkingHardBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_002::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_002::GetWorkingSoftBoundsInfo(ChaperoneSoftBoundsInfo_t*)
 T CVRChaperoneSetup_002::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_002::GetWorkingTagPoseByName(char const*, vr::HmdMatrix34_t*, float*)
 T CVRChaperoneSetup_002::GetWorkingTagPoseNameByIndex(unsigned int, char*, unsigned int)
 T CVRChaperoneSetup_002::GetWorkingTagPoseScales(float*, unsigned int*)
 T CVRChaperoneSetup_002::GetWorkingTagPoses(vr::HmdMatrix34_t*, unsigned int*)
 T CVRChaperoneSetup_002::ReloadFromDisk(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_002::RemoveAllWorkingTagPoses()
 T CVRChaperoneSetup_002::RemoveWorkingTagPoseByName(char const*)
 T CVRChaperoneSetup_002::RevertWorkingCopy()
 T CVRChaperoneSetup_002::SetWorkingHardBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T CVRChaperoneSetup_002::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_002::SetWorkingSoftBoundsInfo(ChaperoneSoftBoundsInfo_t const*)
 T CVRChaperoneSetup_002::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_002::SetWorkingTagPoseByName(char const*, vr::HmdMatrix34_t const&, float)
 T CVRChaperoneSetup_003::CommitWorkingCopy(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_003::GetLiveCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_003::GetLiveSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_003::GetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_003::GetWorkingPlayAreaRect(vr::HmdQuad_t*)
 T CVRChaperoneSetup_003::GetWorkingPlayAreaSize(float*, float*)
 T CVRChaperoneSetup_003::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_003::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_003::ReloadFromDisk(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_003::RevertWorkingCopy()
 T CVRChaperoneSetup_003::SetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T CVRChaperoneSetup_003::SetWorkingPlayAreaSize(float, float)
 T CVRChaperoneSetup_003::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_003::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const&)
 T CVRChaperoneSetup_004::CommitWorkingCopy(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_004::GetLiveCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_004::GetLiveSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_004::GetLiveWallTagInfo(unsigned char*, unsigned int*)
 T CVRChaperoneSetup_004::GetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperoneSetup_004::GetWorkingPlayAreaRect(vr::HmdQuad_t*)
 T CVRChaperoneSetup_004::GetWorkingPlayAreaSize(float*, float*)
 T CVRChaperoneSetup_004::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_004::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T CVRChaperoneSetup_004::ReloadFromDisk(vr::EChaperoneConfigFile)
 T CVRChaperoneSetup_004::RevertWorkingCopy()
 T CVRChaperoneSetup_004::SetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T CVRChaperoneSetup_004::SetWorkingPlayAreaSize(float, float)
 T CVRChaperoneSetup_004::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T CVRChaperoneSetup_004::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T CVRChaperoneSetup_004::SetWorkingWallTagInfo(unsigned char*, unsigned int)
 T CVRChaperone_001::GetCalibrationState()
 T CVRChaperone_001::GetHardBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperone_001::GetSeatedBoundsInfo(ChaperoneSeatedBoundsInfo_t*)
 T CVRChaperone_001::GetSoftBoundsInfo(ChaperoneSoftBoundsInfo_t*)
 T CVRChaperone_002::AreBoundsVisible()
 T CVRChaperone_002::ForceBoundsVisible(bool)
 T CVRChaperone_002::GetBoundsColor(vr::HmdColor_t*, int, float, vr::HmdColor_t*)
 T CVRChaperone_002::GetCalibrationState()
 T CVRChaperone_002::GetHardBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T CVRChaperone_002::GetSeatedBoundsInfo(ChaperoneSeatedBoundsInfo_t*)
 T CVRChaperone_002::GetSoftBoundsInfo(ChaperoneSoftBoundsInfo_t*)
 T CVRChaperone_002::ReloadInfo()
 T CVRChaperone_002::SetSceneColor(vr::HmdColor_t)
 T CVRClient::BStartVRServer(unsigned int*)
 T CVRClient::Cleanup()
 T CVRClient::ComputeDistortion(vr::EVREye, float, float)
 T CVRClient::EnsurePipeConnected()
 T CVRClient::Init(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, vr::EVRApplicationType)
 T CVRClient::SendConnectMessage(bool)
 T CVRClientCore_001::BIsHmdPresent(char const*)
 T CVRClientCore_001::Cleanup()
 T CVRClientCore_001::GetGenericInterface(char const*, vr::EVRInitError*)
 T CVRClientCore_001::GetStringForHmdError(vr::EVRInitError)
 T CVRClientCore_001::Init(char const*, char const*)
 T CVRClientCore_001::IsInterfaceVersionValid(char const*)
 T CVRCompositorClient::BInitialized() const
 T CVRCompositorClient::BStartVRCompositor()
 T CVRCompositorClient::BeginFrame_DEPRECATED(vr::EVREye, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositorClient::CVRCompositorClient()
 T CVRCompositorClient::CanRenderScene()
 T CVRCompositorClient::Cleanup()
 T CVRCompositorClient::ClearLastSubmittedFrame()
 T CVRCompositorClient::ClearOverlayTexture(unsigned long long)
 T CVRCompositorClient::CompositorBringToFront()
 T CVRCompositorClient::CompositorDumpImages()
 T CVRCompositorClient::CompositorGoToBack()
 T CVRCompositorClient::CompositorQuit()
 T CVRCompositorClient::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVRCompositorClient::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVRCompositorClient::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVRCompositorClient::DestroyOverlay(unsigned long long)
 T CVRCompositorClient::EndFrame_DEPRECATED(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositorClient::FadeGrid(float, bool)
 T CVRCompositorClient::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositorClient::FindOverlay(char const*, unsigned long long*)
 T CVRCompositorClient::ForceInterleavedReprojectionOn(bool)
 T CVRCompositorClient::ForceReconnectProcess()
 T CVRCompositorClient::GetCurrentSceneFocusProcess()
 T CVRCompositorClient::GetCurrentScreenshotType()
 T CVRCompositorClient::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVRCompositorClient::GetGamepadFocusOverlay()
 T CVRCompositorClient::GetHighQualityOverlay()
 T CVRCompositorClient::GetKeyboardText(char*, unsigned int)
 T CVRCompositorClient::GetMirrorTextureD3D11(vr::EVREye, void*, void**)
 T CVRCompositorClient::GetMirrorTextureGL(vr::EVREye, unsigned int*, void**)
 T CVRCompositorClient::GetOverlayAlpha(unsigned long long, float*)
 T CVRCompositorClient::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVRCompositorClient::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVRCompositorClient::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVRCompositorClient::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVRCompositorClient::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVRCompositorClient::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVRCompositorClient::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVRCompositorClient::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVRCompositorClient::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVRCompositorClient::GetOverlayRenderingPid(unsigned long long)
 T CVRCompositorClient::GetOverlayTexture(unsigned long long, void**, void*, unsigned int*, unsigned int*, unsigned int*, vr::EGraphicsAPIConvention*, vr::EColorSpace*)
 T CVRCompositorClient::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVRCompositorClient::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVRCompositorClient::GetOverlayTextureSize(unsigned long long, unsigned int*, unsigned int*)
 T CVRCompositorClient::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVRCompositorClient::GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 T CVRCompositorClient::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVRCompositorClient::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVRCompositorClient::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVRCompositorClient::GetPrimaryDashboardDevice()
 T CVRCompositorClient::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T CVRCompositorClient::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVRCompositorClient::HideKeyboard()
 T CVRCompositorClient::HideMirrorWindow()
 T CVRCompositorClient::HideOverlay(unsigned long long)
 T CVRCompositorClient::Init(vr::IVRSystem*, vr::IVRCompositorSystemInternal*)
 T CVRCompositorClient::IsActiveDashboardOverlay(unsigned long long)
 T CVRCompositorClient::IsDashboardVisible()
 T CVRCompositorClient::IsHoverTargetOverlay(unsigned long long)
 T CVRCompositorClient::IsOverlayVisible(unsigned long long)
 T CVRCompositorClient::LockGLSharedTextureForAccess(void*)
 T CVRCompositorClient::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVRCompositorClient::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T CVRCompositorClient::PostPresentHandoff()
 T CVRCompositorClient::PrepareInternalProcessTransition(unsigned int, unsigned int)
 T CVRCompositorClient::Present(int)
 T CVRCompositorClient::ReleaseNativeOverlayHandle(unsigned long long, void*)
 T CVRCompositorClient::ReleaseSharedGLTexture(unsigned int, void*)
 T CVRCompositorClient::RequestScreenshot(vr::EVRScreenshotType, char const*, char const*)
 T CVRCompositorClient::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVRCompositorClient::SetGamepadFocusOverlay(unsigned long long)
 T CVRCompositorClient::SetHighQualityOverlay(unsigned long long)
 T CVRCompositorClient::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVRCompositorClient::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVRCompositorClient::SetNotificationImage(unsigned int)
 T CVRCompositorClient::SetOverlayAlpha(unsigned long long, float)
 T CVRCompositorClient::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVRCompositorClient::SetOverlayColor(unsigned long long, float, float, float)
 T CVRCompositorClient::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVRCompositorClient::SetOverlayFromFile(unsigned long long, char const*)
 T CVRCompositorClient::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVRCompositorClient::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVRCompositorClient::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVRCompositorClient::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVRCompositorClient::SetOverlayRenderingPid(unsigned long long, unsigned int)
 T CVRCompositorClient::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVRCompositorClient::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVRCompositorClient::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVRCompositorClient::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVRCompositorClient::SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 T CVRCompositorClient::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVRCompositorClient::SetOverlayWidthInMeters(unsigned long long, float)
 T CVRCompositorClient::SetOverlay_DEPRECATED(void*, vr::Compositor_OverlaySettings*)
 T CVRCompositorClient::ShouldAppRenderWithLowResources()
 T CVRCompositorClient::ShowDashboard(char const*)
 T CVRCompositorClient::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVRCompositorClient::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVRCompositorClient::ShowKeyboardInternal(unsigned long long, bool, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVRCompositorClient::ShowMirrorWindow()
 T CVRCompositorClient::ShowOverlay(unsigned long long)
 T CVRCompositorClient::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositorClient::SuspendRendering(bool)
 T CVRCompositorClient::UnlockGLSharedTextureForAccess(void*)
 T CVRCompositorClient::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositorClientBase::CVRCompositorClientBase()
 T CVRCompositorClientBase::CanRenderScene()
 T CVRCompositorClientBase::ClearSkyboxOverride()
 T CVRCompositorClientBase::GetCumulativeStats(vr::Compositor_CumulativeStats*, unsigned int)
 T CVRCompositorClientBase::GetFrameTimeRemaining()
 T CVRCompositorClientBase::GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 T CVRCompositorClientBase::GetLastFrameRenderer()
 T CVRCompositorClientBase::GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 T CVRCompositorClientBase::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositorClientBase::GetTrackingSpace()
 T CVRCompositorClientBase::IsFullscreen()
 T CVRCompositorClientBase::IsMirrorWindowVisible()
 T CVRCompositorClientBase::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositorClientBase::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositorClientBase::SignalSecondaryRenderingStarted()
 T CVRCompositorClientBase::TestOrCaptureSceneFocus()
 T CVRCompositorSharedTextures::AcquireSync()
 T CVRCompositorSharedTextures::BeginFrameTiming()
 T CVRCompositorSharedTextures::CreateSharedTexture(int, int, unsigned int, unsigned int, int, CVRCompositorSharedTextures::SharedTextureData&)
 T CVRCompositorSharedTextures::EndFrameTiming()
 T CVRCompositorSharedTextures::Flush()
 T CVRCompositorSharedTextures::GetGLTextureFromSharedTexture(void*, unsigned int*, void**)
 T CVRCompositorSharedTextures::GetSharedTextureData(void*, void*, unsigned int)
 T CVRCompositorSharedTextures::GetSharedTextureDataSubRegion(void*, unsigned int, unsigned int, unsigned int, unsigned int, void*, unsigned int)
 T CVRCompositorSharedTextures::GetSharedTextureDetails(void*, void**, void*, unsigned int*, unsigned int*, unsigned int*, vr::EGraphicsAPIConvention*, vr::EColorSpace*)
 T CVRCompositorSharedTextures::GetSharedTextureHandle(vr::Texture_t const*, vr::VRTextureBounds_t*, int, int, vr::EVRSubmitFlags, CVRCompositorSharedTextures::Error*, bool*)
 T CVRCompositorSharedTextures::GetSharedTextureSize(void*, unsigned int*, unsigned int*)
 T CVRCompositorSharedTextures::Init(int, vr::IVROculusDirect*)
 T CVRCompositorSharedTextures::LockGLSharedTextureForAccess(void*)
 T CVRCompositorSharedTextures::OpenSharedTextureD3D11(void*, void*, void**)
 T CVRCompositorSharedTextures::Release()
 T CVRCompositorSharedTextures::ReleaseNativeOverlayHandle(void*, void*)
 T CVRCompositorSharedTextures::ReleaseSharedGLTexture(unsigned int, void*)
 T CVRCompositorSharedTextures::ReleaseSync()
 T CVRCompositorSharedTextures::UnlockGLSharedTextureForAccess(void*)
 T CVRCompositorSharedTextures::UpdateSharedTexture(int, int, unsigned int, CVRCompositorSharedTextures::SharedTextureData&)
 T CVRCompositor_001::BeginFrame(vr::EVREye, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_001::ClearFrameBuffer()
 T CVRCompositor_001::CompositorBringToFront()
 T CVRCompositor_001::CompositorGoToBack()
 T CVRCompositor_001::CompositorQuit()
 T CVRCompositor_001::EndFrame(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_001::FadeGrid(float, bool)
 T CVRCompositor_001::FadeToColor(float, float, float, float, float)
 T CVRCompositor_001::GetFrameTiming(unsigned int)
 T CVRCompositor_001::GetGamma()
 T CVRCompositor_001::GetLastError(char*, unsigned int)
 T CVRCompositor_001::GetVSync()
 T CVRCompositor_001::SetGamma(float)
 T CVRCompositor_001::SetOverlay(void*, Compositor_OverlaySettings_004*)
 T CVRCompositor_001::SetOverlayFromFile(char const*, Compositor_OverlaySettings_004*)
 T CVRCompositor_001::SetOverlayRaw(void*, unsigned int, unsigned int, unsigned int, Compositor_OverlaySettings_004*)
 T CVRCompositor_001::SetVSync(bool)
 T CVRCompositor_001::~CVRCompositor_001()
 T CVRCompositor_002::BeginFrame_DEPRECATED(vr::EVREye, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_002::ClearFrameBuffer()
 T CVRCompositor_002::CompositorBringToFront()
 T CVRCompositor_002::CompositorGoToBack()
 T CVRCompositor_002::CompositorQuit()
 T CVRCompositor_002::EndFrame_DEPRECATED(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_002::FadeGrid(float, bool)
 T CVRCompositor_002::FadeToColor(float, float, float, float, float)
 T CVRCompositor_002::GetFrameTiming(unsigned int)
 T CVRCompositor_002::GetGamma()
 T CVRCompositor_002::GetLastError(char*, unsigned int)
 T CVRCompositor_002::GetVSync()
 T CVRCompositor_002::SetGamma(float)
 T CVRCompositor_002::SetGraphicsDevice(Compositor_DeviceType, void*)
 T CVRCompositor_002::SetOverlay(void*, Compositor_OverlaySettings_004*)
 T CVRCompositor_002::SetOverlayFromFile(char const*, Compositor_OverlaySettings_004*)
 T CVRCompositor_002::SetOverlayRaw(void*, unsigned int, unsigned int, unsigned int, Compositor_OverlaySettings_004*)
 T CVRCompositor_002::SetOverlay_DEPRECATED(void*, Compositor_OverlaySettings_004*)
 T CVRCompositor_002::SetVSync(bool)
 T CVRCompositor_002::Submit(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_002::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_002::~CVRCompositor_002()
 T CVRCompositor_003::ClearLastSubmittedFrame()
 T CVRCompositor_003::ClearOverlay()
 T CVRCompositor_003::CompositorBringToFront()
 T CVRCompositor_003::CompositorGoToBack()
 T CVRCompositor_003::CompositorQuit()
 T CVRCompositor_003::FadeGrid(float, bool)
 T CVRCompositor_003::FadeToColor(float, float, float, float, float)
 T CVRCompositor_003::GetFrameTiming(unsigned int)
 T CVRCompositor_003::GetGamma()
 T CVRCompositor_003::GetLastError(char*, unsigned int)
 T CVRCompositor_003::GetOverlayDefaults()
 T CVRCompositor_003::GetVSync()
 T CVRCompositor_003::SetGamma(float)
 T CVRCompositor_003::SetGraphicsDevice(Compositor_DeviceType, void*)
 T CVRCompositor_003::SetOverlay(void*, Compositor_OverlaySettings_004*)
 T CVRCompositor_003::SetOverlayFromFile(char const*, Compositor_OverlaySettings_004*)
 T CVRCompositor_003::SetOverlayRaw(void*, unsigned int, unsigned int, unsigned int, Compositor_OverlaySettings_004*)
 T CVRCompositor_003::SetVSync(bool)
 T CVRCompositor_003::Submit(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_003::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_004::ClearLastSubmittedFrame()
 T CVRCompositor_004::ClearOverlay()
 T CVRCompositor_004::CompositorBringToFront()
 T CVRCompositor_004::CompositorGoToBack()
 T CVRCompositor_004::CompositorQuit()
 T CVRCompositor_004::FadeGrid(float, bool)
 T CVRCompositor_004::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_004::GetFrameTiming(unsigned int)
 T CVRCompositor_004::GetGamma()
 T CVRCompositor_004::GetLastError(char*, unsigned int)
 T CVRCompositor_004::GetOverlayDefaults()
 T CVRCompositor_004::GetVSync()
 T CVRCompositor_004::IsFullscreen()
 T CVRCompositor_004::SetGamma(float)
 T CVRCompositor_004::SetGraphicsDevice(Compositor_DeviceType, void*)
 T CVRCompositor_004::SetOverlay(void*, Compositor_OverlaySettings_004*)
 T CVRCompositor_004::SetOverlayFromFile(char const*, Compositor_OverlaySettings_004*)
 T CVRCompositor_004::SetOverlayRaw(void*, unsigned int, unsigned int, unsigned int, Compositor_OverlaySettings_004*)
 T CVRCompositor_004::SetVSync(bool)
 T CVRCompositor_004::Submit(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_004::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_005::BEnsureLegacyOverlay(vr::Compositor_OverlaySettings*)
 T CVRCompositor_005::ClearLastSubmittedFrame()
 T CVRCompositor_005::ClearOverlay()
 T CVRCompositor_005::CompositorBringToFront()
 T CVRCompositor_005::CompositorGoToBack()
 T CVRCompositor_005::CompositorQuit()
 T CVRCompositor_005::ComputeOverlayIntersection(vr::Compositor_OverlaySettings const*, float, vr::ETrackingUniverseOrigin, vr::HmdVector3_t, vr::HmdVector3_t, vr::HmdVector2_t*, vr::HmdVector3_t*)
 T CVRCompositor_005::FadeGrid(float, bool)
 T CVRCompositor_005::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_005::GetCurrentSceneProcess()
 T CVRCompositor_005::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_005::GetGamma()
 T CVRCompositor_005::GetLastError(char*, unsigned int)
 T CVRCompositor_005::GetOverlayDefaults(vr::Compositor_OverlaySettings*)
 T CVRCompositor_005::GetTrackingSpace()
 T CVRCompositor_005::GetVSync()
 T CVRCompositor_005::IsFullscreen()
 T CVRCompositor_005::SetGamma(float)
 T CVRCompositor_005::SetGraphicsDevice(Compositor_DeviceType, void*)
 T CVRCompositor_005::SetOverlay(void*, vr::Compositor_OverlaySettings*)
 T CVRCompositor_005::SetOverlayFromFile(char const*, vr::Compositor_OverlaySettings*)
 T CVRCompositor_005::SetOverlayRaw(void*, unsigned int, unsigned int, unsigned int, vr::Compositor_OverlaySettings*)
 T CVRCompositor_005::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_005::SetVSync(bool)
 T CVRCompositor_005::Submit(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_005::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_006::CanRenderScene()
 T CVRCompositor_006::ClearLastSubmittedFrame()
 T CVRCompositor_006::CompositorBringToFront()
 T CVRCompositor_006::CompositorGoToBack()
 T CVRCompositor_006::CompositorQuit()
 T CVRCompositor_006::FadeGrid(float, bool)
 T CVRCompositor_006::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_006::GetCurrentSceneFocusProcess()
 T CVRCompositor_006::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_006::GetGamma()
 T CVRCompositor_006::GetLastError(char*, unsigned int)
 T CVRCompositor_006::GetTrackingSpace()
 T CVRCompositor_006::GetVSync()
 T CVRCompositor_006::IsFullscreen()
 T CVRCompositor_006::SetGamma(float)
 T CVRCompositor_006::SetGraphicsDevice(Compositor_DeviceType, void*)
 T CVRCompositor_006::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_006::SetVSync(bool)
 T CVRCompositor_006::Submit(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T CVRCompositor_006::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_007::CanRenderScene()
 T CVRCompositor_007::ClearLastSubmittedFrame()
 T CVRCompositor_007::CompositorBringToFront()
 T CVRCompositor_007::CompositorGoToBack()
 T CVRCompositor_007::CompositorQuit()
 T CVRCompositor_007::FadeGrid(float, bool)
 T CVRCompositor_007::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_007::GetCurrentSceneFocusProcess()
 T CVRCompositor_007::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_007::GetGamma()
 T CVRCompositor_007::GetLastError(char*, unsigned int)
 T CVRCompositor_007::GetTrackingSpace()
 T CVRCompositor_007::GetVSync()
 T CVRCompositor_007::IsFullscreen()
 T CVRCompositor_007::SetGamma(float)
 T CVRCompositor_007::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_007::SetVSync(bool)
 T CVRCompositor_007::Submit(vr::EVREye, vr::EGraphicsAPIConvention, void*, vr::VRTextureBounds_t const*)
 T CVRCompositor_007::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_008::CanRenderScene()
 T CVRCompositor_008::ClearLastSubmittedFrame()
 T CVRCompositor_008::ClearSkyboxOverride()
 T CVRCompositor_008::CompositorBringToFront()
 T CVRCompositor_008::CompositorDumpImages()
 T CVRCompositor_008::CompositorGoToBack()
 T CVRCompositor_008::CompositorQuit()
 T CVRCompositor_008::FadeGrid(float, bool)
 T CVRCompositor_008::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_008::GetCurrentSceneFocusProcess()
 T CVRCompositor_008::GetFrameTimeRemaining()
 T CVRCompositor_008::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_008::GetGamma()
 T CVRCompositor_008::GetLastError(char*, unsigned int)
 T CVRCompositor_008::GetLastFrameRenderer()
 T CVRCompositor_008::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_008::GetTrackingSpace()
 T CVRCompositor_008::GetVSync()
 T CVRCompositor_008::HideMirrorWindow()
 T CVRCompositor_008::IsFullscreen()
 T CVRCompositor_008::IsMirrorWindowVisible()
 T CVRCompositor_008::PostPresentHandoff()
 T CVRCompositor_008::SetGamma(float)
 T CVRCompositor_008::SetSkyboxOverride(vr::EGraphicsAPIConvention, void*, void*, void*, void*, void*, void*)
 T CVRCompositor_008::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_008::SetVSync(bool)
 T CVRCompositor_008::ShowMirrorWindow()
 T CVRCompositor_008::Submit(vr::EVREye, vr::EGraphicsAPIConvention, void*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_008::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_009::CanRenderScene()
 T CVRCompositor_009::ClearLastSubmittedFrame()
 T CVRCompositor_009::ClearSkyboxOverride()
 T CVRCompositor_009::CompositorBringToFront()
 T CVRCompositor_009::CompositorDumpImages()
 T CVRCompositor_009::CompositorGoToBack()
 T CVRCompositor_009::CompositorQuit()
 T CVRCompositor_009::FadeGrid(float, bool)
 T CVRCompositor_009::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_009::GetCurrentSceneFocusProcess()
 T CVRCompositor_009::GetFrameTimeRemaining()
 T CVRCompositor_009::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_009::GetLastFrameRenderer()
 T CVRCompositor_009::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_009::GetTrackingSpace()
 T CVRCompositor_009::HideMirrorWindow()
 T CVRCompositor_009::IsFullscreen()
 T CVRCompositor_009::IsMirrorWindowVisible()
 T CVRCompositor_009::PostPresentHandoff()
 T CVRCompositor_009::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_009::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_009::ShowMirrorWindow()
 T CVRCompositor_009::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_009::ToggleCameraReprojection()
 T CVRCompositor_009::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_010::CanRenderScene()
 T CVRCompositor_010::ClearLastSubmittedFrame()
 T CVRCompositor_010::ClearSkyboxOverride()
 T CVRCompositor_010::CompositorBringToFront()
 T CVRCompositor_010::CompositorDumpImages()
 T CVRCompositor_010::CompositorGoToBack()
 T CVRCompositor_010::CompositorQuit()
 T CVRCompositor_010::FadeGrid(float, bool)
 T CVRCompositor_010::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_010::GetCurrentSceneFocusProcess()
 T CVRCompositor_010::GetFrameTimeRemaining()
 T CVRCompositor_010::GetFrameTiming(Compositor_FrameTiming_010*, unsigned int)
 T CVRCompositor_010::GetLastFrameRenderer()
 T CVRCompositor_010::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_010::GetTrackingSpace()
 T CVRCompositor_010::HideMirrorWindow()
 T CVRCompositor_010::IsFullscreen()
 T CVRCompositor_010::IsMirrorWindowVisible()
 T CVRCompositor_010::PostPresentHandoff()
 T CVRCompositor_010::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_010::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_010::ShowMirrorWindow()
 T CVRCompositor_010::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_010::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_011::CanRenderScene()
 T CVRCompositor_011::ClearLastSubmittedFrame()
 T CVRCompositor_011::ClearSkyboxOverride()
 T CVRCompositor_011::CompositorBringToFront()
 T CVRCompositor_011::CompositorDumpImages()
 T CVRCompositor_011::CompositorGoToBack()
 T CVRCompositor_011::CompositorQuit()
 T CVRCompositor_011::FadeGrid(float, bool)
 T CVRCompositor_011::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_011::GetCurrentSceneFocusProcess()
 T CVRCompositor_011::GetFrameTimeRemaining()
 T CVRCompositor_011::GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 T CVRCompositor_011::GetLastFrameRenderer()
 T CVRCompositor_011::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_011::GetTrackingSpace()
 T CVRCompositor_011::HideMirrorWindow()
 T CVRCompositor_011::IsFullscreen()
 T CVRCompositor_011::IsMirrorWindowVisible()
 T CVRCompositor_011::PostPresentHandoff()
 T CVRCompositor_011::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_011::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_011::ShowMirrorWindow()
 T CVRCompositor_011::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_011::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_012::CanRenderScene()
 T CVRCompositor_012::ClearLastSubmittedFrame()
 T CVRCompositor_012::ClearSkyboxOverride()
 T CVRCompositor_012::CompositorBringToFront()
 T CVRCompositor_012::CompositorDumpImages()
 T CVRCompositor_012::CompositorGoToBack()
 T CVRCompositor_012::CompositorQuit()
 T CVRCompositor_012::FadeGrid(float, bool)
 T CVRCompositor_012::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_012::GetCurrentSceneFocusProcess()
 T CVRCompositor_012::GetFrameTimeRemaining()
 T CVRCompositor_012::GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 T CVRCompositor_012::GetLastFrameRenderer()
 T CVRCompositor_012::GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 T CVRCompositor_012::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_012::GetTrackingSpace()
 T CVRCompositor_012::HideMirrorWindow()
 T CVRCompositor_012::IsFullscreen()
 T CVRCompositor_012::IsMirrorWindowVisible()
 T CVRCompositor_012::PostPresentHandoff()
 T CVRCompositor_012::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_012::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_012::ShouldAppRenderWithLowResources()
 T CVRCompositor_012::ShowMirrorWindow()
 T CVRCompositor_012::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_012::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_013::CanRenderScene()
 T CVRCompositor_013::ClearLastSubmittedFrame()
 T CVRCompositor_013::ClearSkyboxOverride()
 T CVRCompositor_013::CompositorBringToFront()
 T CVRCompositor_013::CompositorDumpImages()
 T CVRCompositor_013::CompositorGoToBack()
 T CVRCompositor_013::CompositorQuit()
 T CVRCompositor_013::FadeGrid(float, bool)
 T CVRCompositor_013::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_013::ForceInterleavedReprojectionOn(bool)
 T CVRCompositor_013::ForceReconnectProcess()
 T CVRCompositor_013::GetCurrentSceneFocusProcess()
 T CVRCompositor_013::GetFrameTimeRemaining()
 T CVRCompositor_013::GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 T CVRCompositor_013::GetLastFrameRenderer()
 T CVRCompositor_013::GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 T CVRCompositor_013::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_013::GetTrackingSpace()
 T CVRCompositor_013::HideMirrorWindow()
 T CVRCompositor_013::IsFullscreen()
 T CVRCompositor_013::IsMirrorWindowVisible()
 T CVRCompositor_013::PostPresentHandoff()
 T CVRCompositor_013::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_013::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_013::ShouldAppRenderWithLowResources()
 T CVRCompositor_013::ShowMirrorWindow()
 T CVRCompositor_013::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_013::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_014::CanRenderScene()
 T CVRCompositor_014::ClearLastSubmittedFrame()
 T CVRCompositor_014::ClearSkyboxOverride()
 T CVRCompositor_014::CompositorBringToFront()
 T CVRCompositor_014::CompositorDumpImages()
 T CVRCompositor_014::CompositorGoToBack()
 T CVRCompositor_014::CompositorQuit()
 T CVRCompositor_014::FadeGrid(float, bool)
 T CVRCompositor_014::FadeToColor(float, float, float, float, float, bool)
 T CVRCompositor_014::ForceInterleavedReprojectionOn(bool)
 T CVRCompositor_014::ForceReconnectProcess()
 T CVRCompositor_014::GetCurrentSceneFocusProcess()
 T CVRCompositor_014::GetCurrentScreenshotType()
 T CVRCompositor_014::GetFrameTimeRemaining()
 T CVRCompositor_014::GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 T CVRCompositor_014::GetLastFrameRenderer()
 T CVRCompositor_014::GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 T CVRCompositor_014::GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRCompositor_014::GetTrackingSpace()
 T CVRCompositor_014::HideMirrorWindow()
 T CVRCompositor_014::IsFullscreen()
 T CVRCompositor_014::IsMirrorWindowVisible()
 T CVRCompositor_014::PostPresentHandoff()
 T CVRCompositor_014::RequestScreenshot(vr::EVRScreenshotType, char const*)
 T CVRCompositor_014::SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 T CVRCompositor_014::SetTrackingSpace(vr::ETrackingUniverseOrigin)
 T CVRCompositor_014::ShouldAppRenderWithLowResources()
 T CVRCompositor_014::ShowMirrorWindow()
 T CVRCompositor_014::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 T CVRCompositor_014::SuspendRendering(bool)
 T CVRCompositor_014::WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 T CVRControlPanel_001::AbortTransition()
 T CVRControlPanel_001::ForceQuitProcess(unsigned int)
 T CVRControlPanel_001::GetCurrentCompositorInterface(char const*)
 T CVRControlPanel_001::GetCurrentDisplayInterface(char const*)
 T CVRControlPanel_001::GetDashboardEnabled()
 T CVRControlPanel_001::GetDriverCount()
 T CVRControlPanel_001::GetDriverDisplayCount(char const*)
 T CVRControlPanel_001::GetDriverDisplayId(char const*, unsigned int, char*, unsigned int)
 T CVRControlPanel_001::GetDriverDisplayModelNumber(char const*, char const*, char*, unsigned int)
 T CVRControlPanel_001::GetDriverDisplaySerialNumber(char const*, char const*, char*, unsigned int)
 T CVRControlPanel_001::GetDriverId(unsigned int, char*, unsigned int)
 T CVRControlPanel_001::GetIPD()
 T CVRControlPanel_001::GetVRMonitorState()
 T CVRControlPanel_001::LoadSharedResource(char const*, char*, unsigned int)
 T CVRControlPanel_001::PowerOffTrackedDevice(unsigned int)
 T CVRControlPanel_001::QuitProcess(unsigned int)
 T CVRControlPanel_001::SetDashboardEnabled(bool)
 T CVRControlPanel_001::SetIPD(float)
 T CVRControlPanel_001::SetMasterProcessToThis()
 T CVRControlPanel_001::SetVRMonitorState(vr::EVRState)
 T CVRControlPanel_001::StartAutolaunchOverlays()
 T CVRControlPanel_001::StartVRProcess(char const*, char const**, unsigned int, char const*)
 T CVRLog::InitLog(char const*, char const*, bool, unsigned long)
 T CVRLog::LogDirect(LogLevel, bool, char const*, __va_list_tag (&) [1])
 T CVRLog::LogDirect(LogLevel, bool, char const*, char*&)
 T CVRLog::~CVRLog()
 T CVRMsg_AbortApplicationTransition::ByteSize() const
 T CVRMsg_AbortApplicationTransition::CVRMsg_AbortApplicationTransition()
 T CVRMsg_AbortApplicationTransition::Clear()
 T CVRMsg_AbortApplicationTransition::GetCachedSize() const
 T CVRMsg_AbortApplicationTransition::GetMetadata() const
 T CVRMsg_AbortApplicationTransition::IsInitialized() const
 T CVRMsg_AbortApplicationTransition::MergeFrom(CVRMsg_AbortApplicationTransition const&)
 T CVRMsg_AbortApplicationTransition::New() const
 T CVRMsg_AbortApplicationTransition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_AbortApplicationTransition::SetCachedSize(int) const
 T CVRMsg_AbortApplicationTransition::~CVRMsg_AbortApplicationTransition()
 T CVRMsg_AcknowledgeQuit_Exiting::ByteSize() const
 T CVRMsg_AcknowledgeQuit_Exiting::CVRMsg_AcknowledgeQuit_Exiting()
 T CVRMsg_AcknowledgeQuit_Exiting::Clear()
 T CVRMsg_AcknowledgeQuit_Exiting::GetCachedSize() const
 T CVRMsg_AcknowledgeQuit_Exiting::GetMetadata() const
 T CVRMsg_AcknowledgeQuit_Exiting::IsInitialized() const
 T CVRMsg_AcknowledgeQuit_Exiting::MergeFrom(CVRMsg_AcknowledgeQuit_Exiting const&)
 T CVRMsg_AcknowledgeQuit_Exiting::New() const
 T CVRMsg_AcknowledgeQuit_Exiting::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_AcknowledgeQuit_Exiting::SetCachedSize(int) const
 T CVRMsg_AcknowledgeQuit_Exiting::~CVRMsg_AcknowledgeQuit_Exiting()
 T CVRMsg_AcknowledgeQuit_UserPrompt::ByteSize() const
 T CVRMsg_AcknowledgeQuit_UserPrompt::CVRMsg_AcknowledgeQuit_UserPrompt()
 T CVRMsg_AcknowledgeQuit_UserPrompt::Clear()
 T CVRMsg_AcknowledgeQuit_UserPrompt::GetCachedSize() const
 T CVRMsg_AcknowledgeQuit_UserPrompt::GetMetadata() const
 T CVRMsg_AcknowledgeQuit_UserPrompt::IsInitialized() const
 T CVRMsg_AcknowledgeQuit_UserPrompt::MergeFrom(CVRMsg_AcknowledgeQuit_UserPrompt const&)
 T CVRMsg_AcknowledgeQuit_UserPrompt::New() const
 T CVRMsg_AcknowledgeQuit_UserPrompt::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_AcknowledgeQuit_UserPrompt::SetCachedSize(int) const
 T CVRMsg_AcknowledgeQuit_UserPrompt::~CVRMsg_AcknowledgeQuit_UserPrompt()
 T CVRMsg_ApplicationInfo::ByteSize() const
 T CVRMsg_ApplicationInfo::CVRMsg_ApplicationInfo()
 T CVRMsg_ApplicationInfo::Clear()
 T CVRMsg_ApplicationInfo::CopyFrom(CVRMsg_ApplicationInfo const&)
 T CVRMsg_ApplicationInfo::GetCachedSize() const
 T CVRMsg_ApplicationInfo::GetMetadata() const
 T CVRMsg_ApplicationInfo::IsInitialized() const
 T CVRMsg_ApplicationInfo::MergeFrom(CVRMsg_ApplicationInfo const&)
 T CVRMsg_ApplicationInfo::New() const
 T CVRMsg_ApplicationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ApplicationInfo::SetCachedSize(int) const
 T CVRMsg_ApplicationInfo::~CVRMsg_ApplicationInfo()
 T CVRMsg_ApplicationInfo_Manifest::ByteSize() const
 T CVRMsg_ApplicationInfo_Manifest::Clear()
 T CVRMsg_ApplicationInfo_Manifest::GetCachedSize() const
 T CVRMsg_ApplicationInfo_Manifest::GetMetadata() const
 T CVRMsg_ApplicationInfo_Manifest::IsInitialized() const
 T CVRMsg_ApplicationInfo_Manifest::MergeFrom(CVRMsg_ApplicationInfo_Manifest const&)
 T CVRMsg_ApplicationInfo_Manifest::New() const
 T CVRMsg_ApplicationInfo_Manifest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ApplicationInfo_Manifest::SetCachedSize(int) const
 T CVRMsg_ApplicationInfo_Manifest::SharedCtor()
 T CVRMsg_ApplicationInfo_Manifest::SharedDtor()
 T CVRMsg_ApplicationInfo_Manifest::~CVRMsg_ApplicationInfo_Manifest()
 T CVRMsg_ApplicationInfo_Options::ByteSize() const
 T CVRMsg_ApplicationInfo_Options::CVRMsg_ApplicationInfo_Options()
 T CVRMsg_ApplicationInfo_Options::CVRMsg_ApplicationInfo_Options(CVRMsg_ApplicationInfo_Options const&)
 T CVRMsg_ApplicationInfo_Options::Clear()
 T CVRMsg_ApplicationInfo_Options::CopyFrom(CVRMsg_ApplicationInfo_Options const&)
 T CVRMsg_ApplicationInfo_Options::GetCachedSize() const
 T CVRMsg_ApplicationInfo_Options::GetMetadata() const
 T CVRMsg_ApplicationInfo_Options::IsInitialized() const
 T CVRMsg_ApplicationInfo_Options::MergeFrom(CVRMsg_ApplicationInfo_Options const&)
 T CVRMsg_ApplicationInfo_Options::New() const
 T CVRMsg_ApplicationInfo_Options::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ApplicationInfo_Options::SetCachedSize(int) const
 T CVRMsg_ApplicationInfo_Options::~CVRMsg_ApplicationInfo_Options()
 T CVRMsg_ApplicationManifestRequest::ByteSize() const
 T CVRMsg_ApplicationManifestRequest::CVRMsg_ApplicationManifestRequest()
 T CVRMsg_ApplicationManifestRequest::Clear()
 T CVRMsg_ApplicationManifestRequest::GetCachedSize() const
 T CVRMsg_ApplicationManifestRequest::GetMetadata() const
 T CVRMsg_ApplicationManifestRequest::IsInitialized() const
 T CVRMsg_ApplicationManifestRequest::MergeFrom(CVRMsg_ApplicationManifestRequest const&)
 T CVRMsg_ApplicationManifestRequest::New() const
 T CVRMsg_ApplicationManifestRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ApplicationManifestRequest::SetCachedSize(int) const
 T CVRMsg_ApplicationManifestRequest::~CVRMsg_ApplicationManifestRequest()
 T CVRMsg_ApplicationManifestResponse::ByteSize() const
 T CVRMsg_ApplicationManifestResponse::CVRMsg_ApplicationManifestResponse()
 T CVRMsg_ApplicationManifestResponse::Clear()
 T CVRMsg_ApplicationManifestResponse::GetCachedSize() const
 T CVRMsg_ApplicationManifestResponse::GetMetadata() const
 T CVRMsg_ApplicationManifestResponse::IsInitialized() const
 T CVRMsg_ApplicationManifestResponse::MergeFrom(CVRMsg_ApplicationManifestResponse const&)
 T CVRMsg_ApplicationManifestResponse::New() const
 T CVRMsg_ApplicationManifestResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ApplicationManifestResponse::SetCachedSize(int) const
 T CVRMsg_ApplicationManifestResponse::~CVRMsg_ApplicationManifestResponse()
 T CVRMsg_CancelApplicationLaunch::ByteSize() const
 T CVRMsg_CancelApplicationLaunch::CVRMsg_CancelApplicationLaunch()
 T CVRMsg_CancelApplicationLaunch::Clear()
 T CVRMsg_CancelApplicationLaunch::GetCachedSize() const
 T CVRMsg_CancelApplicationLaunch::GetMetadata() const
 T CVRMsg_CancelApplicationLaunch::IsInitialized() const
 T CVRMsg_CancelApplicationLaunch::MergeFrom(CVRMsg_CancelApplicationLaunch const&)
 T CVRMsg_CancelApplicationLaunch::New() const
 T CVRMsg_CancelApplicationLaunch::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CancelApplicationLaunch::SetCachedSize(int) const
 T CVRMsg_CancelApplicationLaunch::~CVRMsg_CancelApplicationLaunch()
 T CVRMsg_CancelApplicationLaunchResponse::ByteSize() const
 T CVRMsg_CancelApplicationLaunchResponse::CVRMsg_CancelApplicationLaunchResponse()
 T CVRMsg_CancelApplicationLaunchResponse::Clear()
 T CVRMsg_CancelApplicationLaunchResponse::GetCachedSize() const
 T CVRMsg_CancelApplicationLaunchResponse::GetMetadata() const
 T CVRMsg_CancelApplicationLaunchResponse::IsInitialized() const
 T CVRMsg_CancelApplicationLaunchResponse::MergeFrom(CVRMsg_CancelApplicationLaunchResponse const&)
 T CVRMsg_CancelApplicationLaunchResponse::New() const
 T CVRMsg_CancelApplicationLaunchResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CancelApplicationLaunchResponse::SetCachedSize(int) const
 T CVRMsg_CancelApplicationLaunchResponse::~CVRMsg_CancelApplicationLaunchResponse()
 T CVRMsg_CompositorBringToFront::ByteSize() const
 T CVRMsg_CompositorBringToFront::CVRMsg_CompositorBringToFront()
 T CVRMsg_CompositorBringToFront::Clear()
 T CVRMsg_CompositorBringToFront::GetCachedSize() const
 T CVRMsg_CompositorBringToFront::GetMetadata() const
 T CVRMsg_CompositorBringToFront::IsInitialized() const
 T CVRMsg_CompositorBringToFront::MergeFrom(CVRMsg_CompositorBringToFront const&)
 T CVRMsg_CompositorBringToFront::New() const
 T CVRMsg_CompositorBringToFront::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorBringToFront::SetCachedSize(int) const
 T CVRMsg_CompositorBringToFront::~CVRMsg_CompositorBringToFront()
 T CVRMsg_CompositorClearFrameBuffer::ByteSize() const
 T CVRMsg_CompositorClearFrameBuffer::CVRMsg_CompositorClearFrameBuffer()
 T CVRMsg_CompositorClearFrameBuffer::Clear()
 T CVRMsg_CompositorClearFrameBuffer::GetCachedSize() const
 T CVRMsg_CompositorClearFrameBuffer::GetMetadata() const
 T CVRMsg_CompositorClearFrameBuffer::IsInitialized() const
 T CVRMsg_CompositorClearFrameBuffer::MergeFrom(CVRMsg_CompositorClearFrameBuffer const&)
 T CVRMsg_CompositorClearFrameBuffer::New() const
 T CVRMsg_CompositorClearFrameBuffer::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorClearFrameBuffer::SetCachedSize(int) const
 T CVRMsg_CompositorClearFrameBuffer::~CVRMsg_CompositorClearFrameBuffer()
 T CVRMsg_CompositorConnect::ByteSize() const
 T CVRMsg_CompositorConnect::CVRMsg_CompositorConnect()
 T CVRMsg_CompositorConnect::Clear()
 T CVRMsg_CompositorConnect::GetCachedSize() const
 T CVRMsg_CompositorConnect::GetMetadata() const
 T CVRMsg_CompositorConnect::IsInitialized() const
 T CVRMsg_CompositorConnect::MergeFrom(CVRMsg_CompositorConnect const&)
 T CVRMsg_CompositorConnect::New() const
 T CVRMsg_CompositorConnect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorConnect::SetCachedSize(int) const
 T CVRMsg_CompositorConnect::~CVRMsg_CompositorConnect()
 T CVRMsg_CompositorConnectResponse::ByteSize() const
 T CVRMsg_CompositorConnectResponse::CVRMsg_CompositorConnectResponse()
 T CVRMsg_CompositorConnectResponse::Clear()
 T CVRMsg_CompositorConnectResponse::GetCachedSize() const
 T CVRMsg_CompositorConnectResponse::GetMetadata() const
 T CVRMsg_CompositorConnectResponse::IsInitialized() const
 T CVRMsg_CompositorConnectResponse::MergeFrom(CVRMsg_CompositorConnectResponse const&)
 T CVRMsg_CompositorConnectResponse::New() const
 T CVRMsg_CompositorConnectResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorConnectResponse::SetCachedSize(int) const
 T CVRMsg_CompositorConnectResponse::~CVRMsg_CompositorConnectResponse()
 T CVRMsg_CompositorDumpImages::ByteSize() const
 T CVRMsg_CompositorDumpImages::CVRMsg_CompositorDumpImages()
 T CVRMsg_CompositorDumpImages::Clear()
 T CVRMsg_CompositorDumpImages::GetCachedSize() const
 T CVRMsg_CompositorDumpImages::GetMetadata() const
 T CVRMsg_CompositorDumpImages::IsInitialized() const
 T CVRMsg_CompositorDumpImages::MergeFrom(CVRMsg_CompositorDumpImages const&)
 T CVRMsg_CompositorDumpImages::New() const
 T CVRMsg_CompositorDumpImages::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorDumpImages::SetCachedSize(int) const
 T CVRMsg_CompositorDumpImages::~CVRMsg_CompositorDumpImages()
 T CVRMsg_CompositorFadeGrid::ByteSize() const
 T CVRMsg_CompositorFadeGrid::CVRMsg_CompositorFadeGrid()
 T CVRMsg_CompositorFadeGrid::Clear()
 T CVRMsg_CompositorFadeGrid::GetCachedSize() const
 T CVRMsg_CompositorFadeGrid::GetMetadata() const
 T CVRMsg_CompositorFadeGrid::IsInitialized() const
 T CVRMsg_CompositorFadeGrid::MergeFrom(CVRMsg_CompositorFadeGrid const&)
 T CVRMsg_CompositorFadeGrid::New() const
 T CVRMsg_CompositorFadeGrid::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorFadeGrid::SetCachedSize(int) const
 T CVRMsg_CompositorFadeGrid::~CVRMsg_CompositorFadeGrid()
 T CVRMsg_CompositorFadeToColor::ByteSize() const
 T CVRMsg_CompositorFadeToColor::CVRMsg_CompositorFadeToColor()
 T CVRMsg_CompositorFadeToColor::Clear()
 T CVRMsg_CompositorFadeToColor::GetCachedSize() const
 T CVRMsg_CompositorFadeToColor::GetMetadata() const
 T CVRMsg_CompositorFadeToColor::IsInitialized() const
 T CVRMsg_CompositorFadeToColor::MergeFrom(CVRMsg_CompositorFadeToColor const&)
 T CVRMsg_CompositorFadeToColor::New() const
 T CVRMsg_CompositorFadeToColor::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorFadeToColor::SetCachedSize(int) const
 T CVRMsg_CompositorFadeToColor::~CVRMsg_CompositorFadeToColor()
 T CVRMsg_CompositorGoToBack::ByteSize() const
 T CVRMsg_CompositorGoToBack::CVRMsg_CompositorGoToBack()
 T CVRMsg_CompositorGoToBack::Clear()
 T CVRMsg_CompositorGoToBack::GetCachedSize() const
 T CVRMsg_CompositorGoToBack::GetMetadata() const
 T CVRMsg_CompositorGoToBack::IsInitialized() const
 T CVRMsg_CompositorGoToBack::MergeFrom(CVRMsg_CompositorGoToBack const&)
 T CVRMsg_CompositorGoToBack::New() const
 T CVRMsg_CompositorGoToBack::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorGoToBack::SetCachedSize(int) const
 T CVRMsg_CompositorGoToBack::~CVRMsg_CompositorGoToBack()
 T CVRMsg_CompositorHandleSystemButton::ByteSize() const
 T CVRMsg_CompositorHandleSystemButton::CVRMsg_CompositorHandleSystemButton()
 T CVRMsg_CompositorHandleSystemButton::Clear()
 T CVRMsg_CompositorHandleSystemButton::GetCachedSize() const
 T CVRMsg_CompositorHandleSystemButton::GetMetadata() const
 T CVRMsg_CompositorHandleSystemButton::IsInitialized() const
 T CVRMsg_CompositorHandleSystemButton::MergeFrom(CVRMsg_CompositorHandleSystemButton const&)
 T CVRMsg_CompositorHandleSystemButton::New() const
 T CVRMsg_CompositorHandleSystemButton::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorHandleSystemButton::SetCachedSize(int) const
 T CVRMsg_CompositorHandleSystemButton::~CVRMsg_CompositorHandleSystemButton()
 T CVRMsg_CompositorHandleSystemButtonResponse::ByteSize() const
 T CVRMsg_CompositorHandleSystemButtonResponse::CVRMsg_CompositorHandleSystemButtonResponse()
 T CVRMsg_CompositorHandleSystemButtonResponse::Clear()
 T CVRMsg_CompositorHandleSystemButtonResponse::GetCachedSize() const
 T CVRMsg_CompositorHandleSystemButtonResponse::GetMetadata() const
 T CVRMsg_CompositorHandleSystemButtonResponse::IsInitialized() const
 T CVRMsg_CompositorHandleSystemButtonResponse::MergeFrom(CVRMsg_CompositorHandleSystemButtonResponse const&)
 T CVRMsg_CompositorHandleSystemButtonResponse::New() const
 T CVRMsg_CompositorHandleSystemButtonResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorHandleSystemButtonResponse::SetCachedSize(int) const
 T CVRMsg_CompositorHandleSystemButtonResponse::~CVRMsg_CompositorHandleSystemButtonResponse()
 T CVRMsg_CompositorHideDashboard::ByteSize() const
 T CVRMsg_CompositorHideDashboard::CVRMsg_CompositorHideDashboard()
 T CVRMsg_CompositorHideDashboard::Clear()
 T CVRMsg_CompositorHideDashboard::GetCachedSize() const
 T CVRMsg_CompositorHideDashboard::GetMetadata() const
 T CVRMsg_CompositorHideDashboard::IsInitialized() const
 T CVRMsg_CompositorHideDashboard::MergeFrom(CVRMsg_CompositorHideDashboard const&)
 T CVRMsg_CompositorHideDashboard::New() const
 T CVRMsg_CompositorHideDashboard::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorHideDashboard::SetCachedSize(int) const
 T CVRMsg_CompositorHideDashboard::~CVRMsg_CompositorHideDashboard()
 T CVRMsg_CompositorHideDashboardResponse::ByteSize() const
 T CVRMsg_CompositorHideDashboardResponse::CVRMsg_CompositorHideDashboardResponse()
 T CVRMsg_CompositorHideDashboardResponse::Clear()
 T CVRMsg_CompositorHideDashboardResponse::GetCachedSize() const
 T CVRMsg_CompositorHideDashboardResponse::GetMetadata() const
 T CVRMsg_CompositorHideDashboardResponse::IsInitialized() const
 T CVRMsg_CompositorHideDashboardResponse::MergeFrom(CVRMsg_CompositorHideDashboardResponse const&)
 T CVRMsg_CompositorHideDashboardResponse::New() const
 T CVRMsg_CompositorHideDashboardResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorHideDashboardResponse::SetCachedSize(int) const
 T CVRMsg_CompositorHideDashboardResponse::~CVRMsg_CompositorHideDashboardResponse()
 T CVRMsg_CompositorHideMirrorWindow::ByteSize() const
 T CVRMsg_CompositorHideMirrorWindow::CVRMsg_CompositorHideMirrorWindow()
 T CVRMsg_CompositorHideMirrorWindow::Clear()
 T CVRMsg_CompositorHideMirrorWindow::GetCachedSize() const
 T CVRMsg_CompositorHideMirrorWindow::GetMetadata() const
 T CVRMsg_CompositorHideMirrorWindow::IsInitialized() const
 T CVRMsg_CompositorHideMirrorWindow::MergeFrom(CVRMsg_CompositorHideMirrorWindow const&)
 T CVRMsg_CompositorHideMirrorWindow::New() const
 T CVRMsg_CompositorHideMirrorWindow::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorHideMirrorWindow::SetCachedSize(int) const
 T CVRMsg_CompositorHideMirrorWindow::~CVRMsg_CompositorHideMirrorWindow()
 T CVRMsg_CompositorPrepareInternalProcessTransition::ByteSize() const
 T CVRMsg_CompositorPrepareInternalProcessTransition::CVRMsg_CompositorPrepareInternalProcessTransition()
 T CVRMsg_CompositorPrepareInternalProcessTransition::Clear()
 T CVRMsg_CompositorPrepareInternalProcessTransition::GetCachedSize() const
 T CVRMsg_CompositorPrepareInternalProcessTransition::GetMetadata() const
 T CVRMsg_CompositorPrepareInternalProcessTransition::IsInitialized() const
 T CVRMsg_CompositorPrepareInternalProcessTransition::MergeFrom(CVRMsg_CompositorPrepareInternalProcessTransition const&)
 T CVRMsg_CompositorPrepareInternalProcessTransition::New() const
 T CVRMsg_CompositorPrepareInternalProcessTransition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorPrepareInternalProcessTransition::SetCachedSize(int) const
 T CVRMsg_CompositorPrepareInternalProcessTransition::~CVRMsg_CompositorPrepareInternalProcessTransition()
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::ByteSize() const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::CVRMsg_CompositorPrepareInternalProcessTransitionResponse()
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::Clear()
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::GetCachedSize() const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::GetMetadata() const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::IsInitialized() const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::MergeFrom(CVRMsg_CompositorPrepareInternalProcessTransitionResponse const&)
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::New() const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::SetCachedSize(int) const
 T CVRMsg_CompositorPrepareInternalProcessTransitionResponse::~CVRMsg_CompositorPrepareInternalProcessTransitionResponse()
 T CVRMsg_CompositorQuit::ByteSize() const
 T CVRMsg_CompositorQuit::CVRMsg_CompositorQuit()
 T CVRMsg_CompositorQuit::Clear()
 T CVRMsg_CompositorQuit::GetCachedSize() const
 T CVRMsg_CompositorQuit::GetMetadata() const
 T CVRMsg_CompositorQuit::IsInitialized() const
 T CVRMsg_CompositorQuit::MergeFrom(CVRMsg_CompositorQuit const&)
 T CVRMsg_CompositorQuit::New() const
 T CVRMsg_CompositorQuit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorQuit::SetCachedSize(int) const
 T CVRMsg_CompositorQuit::~CVRMsg_CompositorQuit()
 T CVRMsg_CompositorRequestScreenshot::ByteSize() const
 T CVRMsg_CompositorRequestScreenshot::CVRMsg_CompositorRequestScreenshot()
 T CVRMsg_CompositorRequestScreenshot::Clear()
 T CVRMsg_CompositorRequestScreenshot::GetCachedSize() const
 T CVRMsg_CompositorRequestScreenshot::GetMetadata() const
 T CVRMsg_CompositorRequestScreenshot::IsInitialized() const
 T CVRMsg_CompositorRequestScreenshot::MergeFrom(CVRMsg_CompositorRequestScreenshot const&)
 T CVRMsg_CompositorRequestScreenshot::New() const
 T CVRMsg_CompositorRequestScreenshot::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorRequestScreenshot::SetCachedSize(int) const
 T CVRMsg_CompositorRequestScreenshot::~CVRMsg_CompositorRequestScreenshot()
 T CVRMsg_CompositorRequestScreenshotResponse::ByteSize() const
 T CVRMsg_CompositorRequestScreenshotResponse::CVRMsg_CompositorRequestScreenshotResponse()
 T CVRMsg_CompositorRequestScreenshotResponse::Clear()
 T CVRMsg_CompositorRequestScreenshotResponse::GetCachedSize() const
 T CVRMsg_CompositorRequestScreenshotResponse::GetMetadata() const
 T CVRMsg_CompositorRequestScreenshotResponse::IsInitialized() const
 T CVRMsg_CompositorRequestScreenshotResponse::MergeFrom(CVRMsg_CompositorRequestScreenshotResponse const&)
 T CVRMsg_CompositorRequestScreenshotResponse::New() const
 T CVRMsg_CompositorRequestScreenshotResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorRequestScreenshotResponse::SetCachedSize(int) const
 T CVRMsg_CompositorRequestScreenshotResponse::~CVRMsg_CompositorRequestScreenshotResponse()
 T CVRMsg_CompositorSetOverlay::ByteSize() const
 T CVRMsg_CompositorSetOverlay::CVRMsg_CompositorSetOverlay()
 T CVRMsg_CompositorSetOverlay::Clear()
 T CVRMsg_CompositorSetOverlay::GetCachedSize() const
 T CVRMsg_CompositorSetOverlay::GetMetadata() const
 T CVRMsg_CompositorSetOverlay::IsInitialized() const
 T CVRMsg_CompositorSetOverlay::MergeFrom(CVRMsg_CompositorSetOverlay const&)
 T CVRMsg_CompositorSetOverlay::New() const
 T CVRMsg_CompositorSetOverlay::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorSetOverlay::SetCachedSize(int) const
 T CVRMsg_CompositorSetOverlay::~CVRMsg_CompositorSetOverlay()
 T CVRMsg_CompositorSetOverlayFromFile::ByteSize() const
 T CVRMsg_CompositorSetOverlayFromFile::CVRMsg_CompositorSetOverlayFromFile()
 T CVRMsg_CompositorSetOverlayFromFile::Clear()
 T CVRMsg_CompositorSetOverlayFromFile::GetCachedSize() const
 T CVRMsg_CompositorSetOverlayFromFile::GetMetadata() const
 T CVRMsg_CompositorSetOverlayFromFile::IsInitialized() const
 T CVRMsg_CompositorSetOverlayFromFile::MergeFrom(CVRMsg_CompositorSetOverlayFromFile const&)
 T CVRMsg_CompositorSetOverlayFromFile::New() const
 T CVRMsg_CompositorSetOverlayFromFile::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorSetOverlayFromFile::SetCachedSize(int) const
 T CVRMsg_CompositorSetOverlayFromFile::~CVRMsg_CompositorSetOverlayFromFile()
 T CVRMsg_CompositorSetOverlayFromFileResponse::ByteSize() const
 T CVRMsg_CompositorSetOverlayFromFileResponse::CVRMsg_CompositorSetOverlayFromFileResponse()
 T CVRMsg_CompositorSetOverlayFromFileResponse::Clear()
 T CVRMsg_CompositorSetOverlayFromFileResponse::GetCachedSize() const
 T CVRMsg_CompositorSetOverlayFromFileResponse::GetMetadata() const
 T CVRMsg_CompositorSetOverlayFromFileResponse::IsInitialized() const
 T CVRMsg_CompositorSetOverlayFromFileResponse::MergeFrom(CVRMsg_CompositorSetOverlayFromFileResponse const&)
 T CVRMsg_CompositorSetOverlayFromFileResponse::New() const
 T CVRMsg_CompositorSetOverlayFromFileResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorSetOverlayFromFileResponse::SetCachedSize(int) const
 T CVRMsg_CompositorSetOverlayFromFileResponse::~CVRMsg_CompositorSetOverlayFromFileResponse()
 T CVRMsg_CompositorShowDashboard::ByteSize() const
 T CVRMsg_CompositorShowDashboard::CVRMsg_CompositorShowDashboard()
 T CVRMsg_CompositorShowDashboard::Clear()
 T CVRMsg_CompositorShowDashboard::GetCachedSize() const
 T CVRMsg_CompositorShowDashboard::GetMetadata() const
 T CVRMsg_CompositorShowDashboard::IsInitialized() const
 T CVRMsg_CompositorShowDashboard::MergeFrom(CVRMsg_CompositorShowDashboard const&)
 T CVRMsg_CompositorShowDashboard::New() const
 T CVRMsg_CompositorShowDashboard::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorShowDashboard::SetCachedSize(int) const
 T CVRMsg_CompositorShowDashboard::~CVRMsg_CompositorShowDashboard()
 T CVRMsg_CompositorShowDashboardResponse::ByteSize() const
 T CVRMsg_CompositorShowDashboardResponse::CVRMsg_CompositorShowDashboardResponse()
 T CVRMsg_CompositorShowDashboardResponse::Clear()
 T CVRMsg_CompositorShowDashboardResponse::GetCachedSize() const
 T CVRMsg_CompositorShowDashboardResponse::GetMetadata() const
 T CVRMsg_CompositorShowDashboardResponse::IsInitialized() const
 T CVRMsg_CompositorShowDashboardResponse::MergeFrom(CVRMsg_CompositorShowDashboardResponse const&)
 T CVRMsg_CompositorShowDashboardResponse::New() const
 T CVRMsg_CompositorShowDashboardResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorShowDashboardResponse::SetCachedSize(int) const
 T CVRMsg_CompositorShowDashboardResponse::~CVRMsg_CompositorShowDashboardResponse()
 T CVRMsg_CompositorShowMirrorWindow::ByteSize() const
 T CVRMsg_CompositorShowMirrorWindow::CVRMsg_CompositorShowMirrorWindow()
 T CVRMsg_CompositorShowMirrorWindow::Clear()
 T CVRMsg_CompositorShowMirrorWindow::GetCachedSize() const
 T CVRMsg_CompositorShowMirrorWindow::GetMetadata() const
 T CVRMsg_CompositorShowMirrorWindow::IsInitialized() const
 T CVRMsg_CompositorShowMirrorWindow::MergeFrom(CVRMsg_CompositorShowMirrorWindow const&)
 T CVRMsg_CompositorShowMirrorWindow::New() const
 T CVRMsg_CompositorShowMirrorWindow::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorShowMirrorWindow::SetCachedSize(int) const
 T CVRMsg_CompositorShowMirrorWindow::~CVRMsg_CompositorShowMirrorWindow()
 T CVRMsg_CompositorToggleCameraRoomView::ByteSize() const
 T CVRMsg_CompositorToggleCameraRoomView::CVRMsg_CompositorToggleCameraRoomView()
 T CVRMsg_CompositorToggleCameraRoomView::Clear()
 T CVRMsg_CompositorToggleCameraRoomView::GetCachedSize() const
 T CVRMsg_CompositorToggleCameraRoomView::GetMetadata() const
 T CVRMsg_CompositorToggleCameraRoomView::IsInitialized() const
 T CVRMsg_CompositorToggleCameraRoomView::MergeFrom(CVRMsg_CompositorToggleCameraRoomView const&)
 T CVRMsg_CompositorToggleCameraRoomView::New() const
 T CVRMsg_CompositorToggleCameraRoomView::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CompositorToggleCameraRoomView::SetCachedSize(int) const
 T CVRMsg_CompositorToggleCameraRoomView::~CVRMsg_CompositorToggleCameraRoomView()
 T CVRMsg_ComputeDistortion::ByteSize() const
 T CVRMsg_ComputeDistortion::CVRMsg_ComputeDistortion()
 T CVRMsg_ComputeDistortion::Clear()
 T CVRMsg_ComputeDistortion::GetCachedSize() const
 T CVRMsg_ComputeDistortion::GetMetadata() const
 T CVRMsg_ComputeDistortion::IsInitialized() const
 T CVRMsg_ComputeDistortion::MergeFrom(CVRMsg_ComputeDistortion const&)
 T CVRMsg_ComputeDistortion::New() const
 T CVRMsg_ComputeDistortion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ComputeDistortion::SetCachedSize(int) const
 T CVRMsg_ComputeDistortion::~CVRMsg_ComputeDistortion()
 T CVRMsg_ComputeDistortionResponse::ByteSize() const
 T CVRMsg_ComputeDistortionResponse::CVRMsg_ComputeDistortionResponse()
 T CVRMsg_ComputeDistortionResponse::Clear()
 T CVRMsg_ComputeDistortionResponse::GetCachedSize() const
 T CVRMsg_ComputeDistortionResponse::GetMetadata() const
 T CVRMsg_ComputeDistortionResponse::IsInitialized() const
 T CVRMsg_ComputeDistortionResponse::MergeFrom(CVRMsg_ComputeDistortionResponse const&)
 T CVRMsg_ComputeDistortionResponse::New() const
 T CVRMsg_ComputeDistortionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ComputeDistortionResponse::SetCachedSize(int) const
 T CVRMsg_ComputeDistortionResponse::~CVRMsg_ComputeDistortionResponse()
 T CVRMsg_Connect::ByteSize() const
 T CVRMsg_Connect::CVRMsg_Connect()
 T CVRMsg_Connect::Clear()
 T CVRMsg_Connect::GetCachedSize() const
 T CVRMsg_Connect::GetMetadata() const
 T CVRMsg_Connect::IsInitialized() const
 T CVRMsg_Connect::MergeFrom(CVRMsg_Connect const&)
 T CVRMsg_Connect::New() const
 T CVRMsg_Connect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Connect::SetCachedSize(int) const
 T CVRMsg_Connect::SharedCtor()
 T CVRMsg_Connect::~CVRMsg_Connect()
 T CVRMsg_ConnectResponse::ByteSize() const
 T CVRMsg_ConnectResponse::CVRMsg_ConnectResponse()
 T CVRMsg_ConnectResponse::Clear()
 T CVRMsg_ConnectResponse::GetCachedSize() const
 T CVRMsg_ConnectResponse::GetMetadata() const
 T CVRMsg_ConnectResponse::IsInitialized() const
 T CVRMsg_ConnectResponse::MergeFrom(CVRMsg_ConnectResponse const&)
 T CVRMsg_ConnectResponse::New() const
 T CVRMsg_ConnectResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_ConnectResponse::SetCachedSize(int) const
 T CVRMsg_ConnectResponse::~CVRMsg_ConnectResponse()
 T CVRMsg_CreateSwapTextureSet::ByteSize() const
 T CVRMsg_CreateSwapTextureSet::CVRMsg_CreateSwapTextureSet()
 T CVRMsg_CreateSwapTextureSet::Clear()
 T CVRMsg_CreateSwapTextureSet::GetCachedSize() const
 T CVRMsg_CreateSwapTextureSet::GetMetadata() const
 T CVRMsg_CreateSwapTextureSet::IsInitialized() const
 T CVRMsg_CreateSwapTextureSet::MergeFrom(CVRMsg_CreateSwapTextureSet const&)
 T CVRMsg_CreateSwapTextureSet::New() const
 T CVRMsg_CreateSwapTextureSet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CreateSwapTextureSet::SetCachedSize(int) const
 T CVRMsg_CreateSwapTextureSet::~CVRMsg_CreateSwapTextureSet()
 T CVRMsg_CreateSwapTextureSetResponse::ByteSize() const
 T CVRMsg_CreateSwapTextureSetResponse::CVRMsg_CreateSwapTextureSetResponse()
 T CVRMsg_CreateSwapTextureSetResponse::Clear()
 T CVRMsg_CreateSwapTextureSetResponse::GetCachedSize() const
 T CVRMsg_CreateSwapTextureSetResponse::GetMetadata() const
 T CVRMsg_CreateSwapTextureSetResponse::IsInitialized() const
 T CVRMsg_CreateSwapTextureSetResponse::MergeFrom(CVRMsg_CreateSwapTextureSetResponse const&)
 T CVRMsg_CreateSwapTextureSetResponse::New() const
 T CVRMsg_CreateSwapTextureSetResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_CreateSwapTextureSetResponse::SetCachedSize(int) const
 T CVRMsg_CreateSwapTextureSetResponse::~CVRMsg_CreateSwapTextureSetResponse()
 T CVRMsg_DestroySwapTextureSet::ByteSize() const
 T CVRMsg_DestroySwapTextureSet::CVRMsg_DestroySwapTextureSet()
 T CVRMsg_DestroySwapTextureSet::Clear()
 T CVRMsg_DestroySwapTextureSet::GetCachedSize() const
 T CVRMsg_DestroySwapTextureSet::GetMetadata() const
 T CVRMsg_DestroySwapTextureSet::IsInitialized() const
 T CVRMsg_DestroySwapTextureSet::MergeFrom(CVRMsg_DestroySwapTextureSet const&)
 T CVRMsg_DestroySwapTextureSet::New() const
 T CVRMsg_DestroySwapTextureSet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_DestroySwapTextureSet::SetCachedSize(int) const
 T CVRMsg_DestroySwapTextureSet::~CVRMsg_DestroySwapTextureSet()
 T CVRMsg_DriverDebugRequest::ByteSize() const
 T CVRMsg_DriverDebugRequest::CVRMsg_DriverDebugRequest()
 T CVRMsg_DriverDebugRequest::Clear()
 T CVRMsg_DriverDebugRequest::GetCachedSize() const
 T CVRMsg_DriverDebugRequest::GetMetadata() const
 T CVRMsg_DriverDebugRequest::IsInitialized() const
 T CVRMsg_DriverDebugRequest::MergeFrom(CVRMsg_DriverDebugRequest const&)
 T CVRMsg_DriverDebugRequest::New() const
 T CVRMsg_DriverDebugRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_DriverDebugRequest::SetCachedSize(int) const
 T CVRMsg_DriverDebugRequest::~CVRMsg_DriverDebugRequest()
 T CVRMsg_DriverDebugResponse::ByteSize() const
 T CVRMsg_DriverDebugResponse::CVRMsg_DriverDebugResponse()
 T CVRMsg_DriverDebugResponse::Clear()
 T CVRMsg_DriverDebugResponse::GetCachedSize() const
 T CVRMsg_DriverDebugResponse::GetMetadata() const
 T CVRMsg_DriverDebugResponse::IsInitialized() const
 T CVRMsg_DriverDebugResponse::MergeFrom(CVRMsg_DriverDebugResponse const&)
 T CVRMsg_DriverDebugResponse::New() const
 T CVRMsg_DriverDebugResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_DriverDebugResponse::SetCachedSize(int) const
 T CVRMsg_DriverDebugResponse::~CVRMsg_DriverDebugResponse()
 T CVRMsg_GetApplicationInfo::ByteSize() const
 T CVRMsg_GetApplicationInfo::CVRMsg_GetApplicationInfo()
 T CVRMsg_GetApplicationInfo::Clear()
 T CVRMsg_GetApplicationInfo::GetCachedSize() const
 T CVRMsg_GetApplicationInfo::GetMetadata() const
 T CVRMsg_GetApplicationInfo::IsInitialized() const
 T CVRMsg_GetApplicationInfo::MergeFrom(CVRMsg_GetApplicationInfo const&)
 T CVRMsg_GetApplicationInfo::New() const
 T CVRMsg_GetApplicationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetApplicationInfo::SetCachedSize(int) const
 T CVRMsg_GetApplicationInfo::~CVRMsg_GetApplicationInfo()
 T CVRMsg_GetDisplayInfo::ByteSize() const
 T CVRMsg_GetDisplayInfo::CVRMsg_GetDisplayInfo()
 T CVRMsg_GetDisplayInfo::Clear()
 T CVRMsg_GetDisplayInfo::GetCachedSize() const
 T CVRMsg_GetDisplayInfo::GetMetadata() const
 T CVRMsg_GetDisplayInfo::IsInitialized() const
 T CVRMsg_GetDisplayInfo::MergeFrom(CVRMsg_GetDisplayInfo const&)
 T CVRMsg_GetDisplayInfo::New() const
 T CVRMsg_GetDisplayInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDisplayInfo::SetCachedSize(int) const
 T CVRMsg_GetDisplayInfo::~CVRMsg_GetDisplayInfo()
 T CVRMsg_GetDisplayInfoResponse::ByteSize() const
 T CVRMsg_GetDisplayInfoResponse::CVRMsg_GetDisplayInfoResponse()
 T CVRMsg_GetDisplayInfoResponse::Clear()
 T CVRMsg_GetDisplayInfoResponse::GetCachedSize() const
 T CVRMsg_GetDisplayInfoResponse::GetMetadata() const
 T CVRMsg_GetDisplayInfoResponse::IsInitialized() const
 T CVRMsg_GetDisplayInfoResponse::MergeFrom(CVRMsg_GetDisplayInfoResponse const&)
 T CVRMsg_GetDisplayInfoResponse::New() const
 T CVRMsg_GetDisplayInfoResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDisplayInfoResponse::SetCachedSize(int) const
 T CVRMsg_GetDisplayInfoResponse::~CVRMsg_GetDisplayInfoResponse()
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::ByteSize() const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::CVRMsg_GetDisplayInfoResponse_DisplayInfo()
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::Clear()
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::GetCachedSize() const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::GetMetadata() const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::IsInitialized() const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::MergeFrom(CVRMsg_GetDisplayInfoResponse_DisplayInfo const&)
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::New() const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::SetCachedSize(int) const
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::SharedDtor()
 T CVRMsg_GetDisplayInfoResponse_DisplayInfo::~CVRMsg_GetDisplayInfoResponse_DisplayInfo()
 T CVRMsg_GetDriverDetail::ByteSize() const
 T CVRMsg_GetDriverDetail::CVRMsg_GetDriverDetail()
 T CVRMsg_GetDriverDetail::Clear()
 T CVRMsg_GetDriverDetail::GetCachedSize() const
 T CVRMsg_GetDriverDetail::GetMetadata() const
 T CVRMsg_GetDriverDetail::IsInitialized() const
 T CVRMsg_GetDriverDetail::MergeFrom(CVRMsg_GetDriverDetail const&)
 T CVRMsg_GetDriverDetail::New() const
 T CVRMsg_GetDriverDetail::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDriverDetail::SetCachedSize(int) const
 T CVRMsg_GetDriverDetail::~CVRMsg_GetDriverDetail()
 T CVRMsg_GetDriverDetailResponse::ByteSize() const
 T CVRMsg_GetDriverDetailResponse::CVRMsg_GetDriverDetailResponse()
 T CVRMsg_GetDriverDetailResponse::Clear()
 T CVRMsg_GetDriverDetailResponse::GetCachedSize() const
 T CVRMsg_GetDriverDetailResponse::GetMetadata() const
 T CVRMsg_GetDriverDetailResponse::IsInitialized() const
 T CVRMsg_GetDriverDetailResponse::MergeFrom(CVRMsg_GetDriverDetailResponse const&)
 T CVRMsg_GetDriverDetailResponse::New() const
 T CVRMsg_GetDriverDetailResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDriverDetailResponse::SetCachedSize(int) const
 T CVRMsg_GetDriverDetailResponse::~CVRMsg_GetDriverDetailResponse()
 T CVRMsg_GetDriverInfo::ByteSize() const
 T CVRMsg_GetDriverInfo::CVRMsg_GetDriverInfo()
 T CVRMsg_GetDriverInfo::Clear()
 T CVRMsg_GetDriverInfo::GetCachedSize() const
 T CVRMsg_GetDriverInfo::GetMetadata() const
 T CVRMsg_GetDriverInfo::IsInitialized() const
 T CVRMsg_GetDriverInfo::MergeFrom(CVRMsg_GetDriverInfo const&)
 T CVRMsg_GetDriverInfo::New() const
 T CVRMsg_GetDriverInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDriverInfo::SetCachedSize(int) const
 T CVRMsg_GetDriverInfo::~CVRMsg_GetDriverInfo()
 T CVRMsg_GetDriverInfoResponse::ByteSize() const
 T CVRMsg_GetDriverInfoResponse::CVRMsg_GetDriverInfoResponse()
 T CVRMsg_GetDriverInfoResponse::Clear()
 T CVRMsg_GetDriverInfoResponse::GetCachedSize() const
 T CVRMsg_GetDriverInfoResponse::GetMetadata() const
 T CVRMsg_GetDriverInfoResponse::IsInitialized() const
 T CVRMsg_GetDriverInfoResponse::MergeFrom(CVRMsg_GetDriverInfoResponse const&)
 T CVRMsg_GetDriverInfoResponse::New() const
 T CVRMsg_GetDriverInfoResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDriverInfoResponse::SetCachedSize(int) const
 T CVRMsg_GetDriverInfoResponse::~CVRMsg_GetDriverInfoResponse()
 T CVRMsg_GetDriverInfoResponse_DriverInfo::ByteSize() const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::CVRMsg_GetDriverInfoResponse_DriverInfo()
 T CVRMsg_GetDriverInfoResponse_DriverInfo::Clear()
 T CVRMsg_GetDriverInfoResponse_DriverInfo::GetCachedSize() const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::GetMetadata() const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::IsInitialized() const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::MergeFrom(CVRMsg_GetDriverInfoResponse_DriverInfo const&)
 T CVRMsg_GetDriverInfoResponse_DriverInfo::New() const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::SetCachedSize(int) const
 T CVRMsg_GetDriverInfoResponse_DriverInfo::~CVRMsg_GetDriverInfoResponse_DriverInfo()
 T CVRMsg_GetProperty::ByteSize() const
 T CVRMsg_GetProperty::CVRMsg_GetProperty()
 T CVRMsg_GetProperty::Clear()
 T CVRMsg_GetProperty::GetCachedSize() const
 T CVRMsg_GetProperty::GetMetadata() const
 T CVRMsg_GetProperty::IsInitialized() const
 T CVRMsg_GetProperty::MergeFrom(CVRMsg_GetProperty const&)
 T CVRMsg_GetProperty::New() const
 T CVRMsg_GetProperty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetProperty::SetCachedSize(int) const
 T CVRMsg_GetProperty::~CVRMsg_GetProperty()
 T CVRMsg_GetPropertyResponse::ByteSize() const
 T CVRMsg_GetPropertyResponse::CVRMsg_GetPropertyResponse()
 T CVRMsg_GetPropertyResponse::Clear()
 T CVRMsg_GetPropertyResponse::CopyFrom(CVRMsg_GetPropertyResponse const&)
 T CVRMsg_GetPropertyResponse::GetCachedSize() const
 T CVRMsg_GetPropertyResponse::GetMetadata() const
 T CVRMsg_GetPropertyResponse::IsInitialized() const
 T CVRMsg_GetPropertyResponse::MergeFrom(CVRMsg_GetPropertyResponse const&)
 T CVRMsg_GetPropertyResponse::New() const
 T CVRMsg_GetPropertyResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_GetPropertyResponse::SetCachedSize(int) const
 T CVRMsg_GetPropertyResponse::~CVRMsg_GetPropertyResponse()
 T CVRMsg_InputCaptureRequest::ByteSize() const
 T CVRMsg_InputCaptureRequest::CVRMsg_InputCaptureRequest()
 T CVRMsg_InputCaptureRequest::Clear()
 T CVRMsg_InputCaptureRequest::GetCachedSize() const
 T CVRMsg_InputCaptureRequest::GetMetadata() const
 T CVRMsg_InputCaptureRequest::IsInitialized() const
 T CVRMsg_InputCaptureRequest::MergeFrom(CVRMsg_InputCaptureRequest const&)
 T CVRMsg_InputCaptureRequest::New() const
 T CVRMsg_InputCaptureRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_InputCaptureRequest::SetCachedSize(int) const
 T CVRMsg_InputCaptureRequest::~CVRMsg_InputCaptureRequest()
 T CVRMsg_InputCaptureResponse::ByteSize() const
 T CVRMsg_InputCaptureResponse::CVRMsg_InputCaptureResponse()
 T CVRMsg_InputCaptureResponse::Clear()
 T CVRMsg_InputCaptureResponse::GetCachedSize() const
 T CVRMsg_InputCaptureResponse::GetMetadata() const
 T CVRMsg_InputCaptureResponse::IsInitialized() const
 T CVRMsg_InputCaptureResponse::MergeFrom(CVRMsg_InputCaptureResponse const&)
 T CVRMsg_InputCaptureResponse::New() const
 T CVRMsg_InputCaptureResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_InputCaptureResponse::SetCachedSize(int) const
 T CVRMsg_InputCaptureResponse::~CVRMsg_InputCaptureResponse()
 T CVRMsg_LaunchApplication::ByteSize() const
 T CVRMsg_LaunchApplication::CVRMsg_LaunchApplication()
 T CVRMsg_LaunchApplication::Clear()
 T CVRMsg_LaunchApplication::GetCachedSize() const
 T CVRMsg_LaunchApplication::GetMetadata() const
 T CVRMsg_LaunchApplication::IsInitialized() const
 T CVRMsg_LaunchApplication::MergeFrom(CVRMsg_LaunchApplication const&)
 T CVRMsg_LaunchApplication::New() const
 T CVRMsg_LaunchApplication::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchApplication::SetCachedSize(int) const
 T CVRMsg_LaunchApplication::~CVRMsg_LaunchApplication()
 T CVRMsg_LaunchApplicationResponse::ByteSize() const
 T CVRMsg_LaunchApplicationResponse::CVRMsg_LaunchApplicationResponse()
 T CVRMsg_LaunchApplicationResponse::Clear()
 T CVRMsg_LaunchApplicationResponse::GetCachedSize() const
 T CVRMsg_LaunchApplicationResponse::GetMetadata() const
 T CVRMsg_LaunchApplicationResponse::IsInitialized() const
 T CVRMsg_LaunchApplicationResponse::MergeFrom(CVRMsg_LaunchApplicationResponse const&)
 T CVRMsg_LaunchApplicationResponse::New() const
 T CVRMsg_LaunchApplicationResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchApplicationResponse::SetCachedSize(int) const
 T CVRMsg_LaunchApplicationResponse::~CVRMsg_LaunchApplicationResponse()
 T CVRMsg_LaunchInternalProcess::ByteSize() const
 T CVRMsg_LaunchInternalProcess::CVRMsg_LaunchInternalProcess()
 T CVRMsg_LaunchInternalProcess::Clear()
 T CVRMsg_LaunchInternalProcess::GetCachedSize() const
 T CVRMsg_LaunchInternalProcess::GetMetadata() const
 T CVRMsg_LaunchInternalProcess::IsInitialized() const
 T CVRMsg_LaunchInternalProcess::MergeFrom(CVRMsg_LaunchInternalProcess const&)
 T CVRMsg_LaunchInternalProcess::New() const
 T CVRMsg_LaunchInternalProcess::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchInternalProcess::SetCachedSize(int) const
 T CVRMsg_LaunchInternalProcess::SharedDtor()
 T CVRMsg_LaunchInternalProcess::~CVRMsg_LaunchInternalProcess()
 T CVRMsg_LaunchInternalProcessResponse::ByteSize() const
 T CVRMsg_LaunchInternalProcessResponse::CVRMsg_LaunchInternalProcessResponse()
 T CVRMsg_LaunchInternalProcessResponse::Clear()
 T CVRMsg_LaunchInternalProcessResponse::GetCachedSize() const
 T CVRMsg_LaunchInternalProcessResponse::GetMetadata() const
 T CVRMsg_LaunchInternalProcessResponse::IsInitialized() const
 T CVRMsg_LaunchInternalProcessResponse::MergeFrom(CVRMsg_LaunchInternalProcessResponse const&)
 T CVRMsg_LaunchInternalProcessResponse::New() const
 T CVRMsg_LaunchInternalProcessResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchInternalProcessResponse::SetCachedSize(int) const
 T CVRMsg_LaunchInternalProcessResponse::~CVRMsg_LaunchInternalProcessResponse()
 T CVRMsg_LaunchTemplateApplication::ByteSize() const
 T CVRMsg_LaunchTemplateApplication::CVRMsg_LaunchTemplateApplication()
 T CVRMsg_LaunchTemplateApplication::Clear()
 T CVRMsg_LaunchTemplateApplication::GetCachedSize() const
 T CVRMsg_LaunchTemplateApplication::GetMetadata() const
 T CVRMsg_LaunchTemplateApplication::IsInitialized() const
 T CVRMsg_LaunchTemplateApplication::MergeFrom(CVRMsg_LaunchTemplateApplication const&)
 T CVRMsg_LaunchTemplateApplication::New() const
 T CVRMsg_LaunchTemplateApplication::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchTemplateApplication::SetCachedSize(int) const
 T CVRMsg_LaunchTemplateApplication::~CVRMsg_LaunchTemplateApplication()
 T CVRMsg_LaunchTemplateApplicationResponse::ByteSize() const
 T CVRMsg_LaunchTemplateApplicationResponse::CVRMsg_LaunchTemplateApplicationResponse()
 T CVRMsg_LaunchTemplateApplicationResponse::Clear()
 T CVRMsg_LaunchTemplateApplicationResponse::GetCachedSize() const
 T CVRMsg_LaunchTemplateApplicationResponse::GetMetadata() const
 T CVRMsg_LaunchTemplateApplicationResponse::IsInitialized() const
 T CVRMsg_LaunchTemplateApplicationResponse::MergeFrom(CVRMsg_LaunchTemplateApplicationResponse const&)
 T CVRMsg_LaunchTemplateApplicationResponse::New() const
 T CVRMsg_LaunchTemplateApplicationResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchTemplateApplicationResponse::SetCachedSize(int) const
 T CVRMsg_LaunchTemplateApplicationResponse::~CVRMsg_LaunchTemplateApplicationResponse()
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::ByteSize() const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::CVRMsg_LaunchTemplateApplication_AppOverrideKey()
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::Clear()
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::GetCachedSize() const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::GetMetadata() const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::IsInitialized() const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::MergeFrom(CVRMsg_LaunchTemplateApplication_AppOverrideKey const&)
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::New() const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::SetCachedSize(int) const
 T CVRMsg_LaunchTemplateApplication_AppOverrideKey::~CVRMsg_LaunchTemplateApplication_AppOverrideKey()
 T CVRMsg_PerformApplicationPrelaunchCheck::ByteSize() const
 T CVRMsg_PerformApplicationPrelaunchCheck::CVRMsg_PerformApplicationPrelaunchCheck()
 T CVRMsg_PerformApplicationPrelaunchCheck::Clear()
 T CVRMsg_PerformApplicationPrelaunchCheck::GetCachedSize() const
 T CVRMsg_PerformApplicationPrelaunchCheck::GetMetadata() const
 T CVRMsg_PerformApplicationPrelaunchCheck::IsInitialized() const
 T CVRMsg_PerformApplicationPrelaunchCheck::MergeFrom(CVRMsg_PerformApplicationPrelaunchCheck const&)
 T CVRMsg_PerformApplicationPrelaunchCheck::New() const
 T CVRMsg_PerformApplicationPrelaunchCheck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_PerformApplicationPrelaunchCheck::SetCachedSize(int) const
 T CVRMsg_PerformApplicationPrelaunchCheck::~CVRMsg_PerformApplicationPrelaunchCheck()
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::ByteSize() const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::CVRMsg_PerformApplicationPrelaunchCheckResponse()
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::Clear()
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::GetCachedSize() const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::GetMetadata() const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::IsInitialized() const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::MergeFrom(CVRMsg_PerformApplicationPrelaunchCheckResponse const&)
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::New() const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::SetCachedSize(int) const
 T CVRMsg_PerformApplicationPrelaunchCheckResponse::~CVRMsg_PerformApplicationPrelaunchCheckResponse()
 T CVRMsg_PowerOffTrackedDevice::ByteSize() const
 T CVRMsg_PowerOffTrackedDevice::CVRMsg_PowerOffTrackedDevice()
 T CVRMsg_PowerOffTrackedDevice::Clear()
 T CVRMsg_PowerOffTrackedDevice::GetCachedSize() const
 T CVRMsg_PowerOffTrackedDevice::GetMetadata() const
 T CVRMsg_PowerOffTrackedDevice::IsInitialized() const
 T CVRMsg_PowerOffTrackedDevice::MergeFrom(CVRMsg_PowerOffTrackedDevice const&)
 T CVRMsg_PowerOffTrackedDevice::New() const
 T CVRMsg_PowerOffTrackedDevice::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_PowerOffTrackedDevice::SetCachedSize(int) const
 T CVRMsg_PowerOffTrackedDevice::~CVRMsg_PowerOffTrackedDevice()
 T CVRMsg_QuitProcessRequest::ByteSize() const
 T CVRMsg_QuitProcessRequest::CVRMsg_QuitProcessRequest()
 T CVRMsg_QuitProcessRequest::Clear()
 T CVRMsg_QuitProcessRequest::GetCachedSize() const
 T CVRMsg_QuitProcessRequest::GetMetadata() const
 T CVRMsg_QuitProcessRequest::IsInitialized() const
 T CVRMsg_QuitProcessRequest::MergeFrom(CVRMsg_QuitProcessRequest const&)
 T CVRMsg_QuitProcessRequest::New() const
 T CVRMsg_QuitProcessRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_QuitProcessRequest::SetCachedSize(int) const
 T CVRMsg_QuitProcessRequest::~CVRMsg_QuitProcessRequest()
 T CVRMsg_QuitProcessResponse::ByteSize() const
 T CVRMsg_QuitProcessResponse::CVRMsg_QuitProcessResponse()
 T CVRMsg_QuitProcessResponse::Clear()
 T CVRMsg_QuitProcessResponse::GetCachedSize() const
 T CVRMsg_QuitProcessResponse::GetMetadata() const
 T CVRMsg_QuitProcessResponse::IsInitialized() const
 T CVRMsg_QuitProcessResponse::MergeFrom(CVRMsg_QuitProcessResponse const&)
 T CVRMsg_QuitProcessResponse::New() const
 T CVRMsg_QuitProcessResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_QuitProcessResponse::SetCachedSize(int) const
 T CVRMsg_QuitProcessResponse::~CVRMsg_QuitProcessResponse()
 T CVRMsg_SetApplicationOptions::ByteSize() const
 T CVRMsg_SetApplicationOptions::CVRMsg_SetApplicationOptions()
 T CVRMsg_SetApplicationOptions::Clear()
 T CVRMsg_SetApplicationOptions::GetCachedSize() const
 T CVRMsg_SetApplicationOptions::GetMetadata() const
 T CVRMsg_SetApplicationOptions::IsInitialized() const
 T CVRMsg_SetApplicationOptions::MergeFrom(CVRMsg_SetApplicationOptions const&)
 T CVRMsg_SetApplicationOptions::New() const
 T CVRMsg_SetApplicationOptions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetApplicationOptions::SetCachedSize(int) const
 T CVRMsg_SetApplicationOptions::~CVRMsg_SetApplicationOptions()
 T CVRMsg_SetApplicationOptionsResponse::ByteSize() const
 T CVRMsg_SetApplicationOptionsResponse::CVRMsg_SetApplicationOptionsResponse()
 T CVRMsg_SetApplicationOptionsResponse::Clear()
 T CVRMsg_SetApplicationOptionsResponse::GetCachedSize() const
 T CVRMsg_SetApplicationOptionsResponse::GetMetadata() const
 T CVRMsg_SetApplicationOptionsResponse::IsInitialized() const
 T CVRMsg_SetApplicationOptionsResponse::MergeFrom(CVRMsg_SetApplicationOptionsResponse const&)
 T CVRMsg_SetApplicationOptionsResponse::New() const
 T CVRMsg_SetApplicationOptionsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetApplicationOptionsResponse::SetCachedSize(int) const
 T CVRMsg_SetApplicationOptionsResponse::~CVRMsg_SetApplicationOptionsResponse()
 T CVRMsg_SetApplicationProcessId::ByteSize() const
 T CVRMsg_SetApplicationProcessId::CVRMsg_SetApplicationProcessId()
 T CVRMsg_SetApplicationProcessId::Clear()
 T CVRMsg_SetApplicationProcessId::GetCachedSize() const
 T CVRMsg_SetApplicationProcessId::GetMetadata() const
 T CVRMsg_SetApplicationProcessId::IsInitialized() const
 T CVRMsg_SetApplicationProcessId::MergeFrom(CVRMsg_SetApplicationProcessId const&)
 T CVRMsg_SetApplicationProcessId::New() const
 T CVRMsg_SetApplicationProcessId::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetApplicationProcessId::SetCachedSize(int) const
 T CVRMsg_SetApplicationProcessId::~CVRMsg_SetApplicationProcessId()
 T CVRMsg_SetApplicationProcessIdResponse::ByteSize() const
 T CVRMsg_SetApplicationProcessIdResponse::CVRMsg_SetApplicationProcessIdResponse()
 T CVRMsg_SetApplicationProcessIdResponse::Clear()
 T CVRMsg_SetApplicationProcessIdResponse::GetCachedSize() const
 T CVRMsg_SetApplicationProcessIdResponse::GetMetadata() const
 T CVRMsg_SetApplicationProcessIdResponse::IsInitialized() const
 T CVRMsg_SetApplicationProcessIdResponse::MergeFrom(CVRMsg_SetApplicationProcessIdResponse const&)
 T CVRMsg_SetApplicationProcessIdResponse::New() const
 T CVRMsg_SetApplicationProcessIdResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetApplicationProcessIdResponse::SetCachedSize(int) const
 T CVRMsg_SetApplicationProcessIdResponse::~CVRMsg_SetApplicationProcessIdResponse()
 T CVRMsg_SetMasterProcess::ByteSize() const
 T CVRMsg_SetMasterProcess::CVRMsg_SetMasterProcess()
 T CVRMsg_SetMasterProcess::Clear()
 T CVRMsg_SetMasterProcess::GetCachedSize() const
 T CVRMsg_SetMasterProcess::GetMetadata() const
 T CVRMsg_SetMasterProcess::IsInitialized() const
 T CVRMsg_SetMasterProcess::MergeFrom(CVRMsg_SetMasterProcess const&)
 T CVRMsg_SetMasterProcess::New() const
 T CVRMsg_SetMasterProcess::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetMasterProcess::SetCachedSize(int) const
 T CVRMsg_SetMasterProcess::~CVRMsg_SetMasterProcess()
 T CVRMsg_SetMasterProcessResponse::ByteSize() const
 T CVRMsg_SetMasterProcessResponse::CVRMsg_SetMasterProcessResponse()
 T CVRMsg_SetMasterProcessResponse::Clear()
 T CVRMsg_SetMasterProcessResponse::GetCachedSize() const
 T CVRMsg_SetMasterProcessResponse::GetMetadata() const
 T CVRMsg_SetMasterProcessResponse::IsInitialized() const
 T CVRMsg_SetMasterProcessResponse::MergeFrom(CVRMsg_SetMasterProcessResponse const&)
 T CVRMsg_SetMasterProcessResponse::New() const
 T CVRMsg_SetMasterProcessResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetMasterProcessResponse::SetCachedSize(int) const
 T CVRMsg_SetMasterProcessResponse::~CVRMsg_SetMasterProcessResponse()
 T CVRMsg_SetNotificationImage::ByteSize() const
 T CVRMsg_SetNotificationImage::CVRMsg_SetNotificationImage()
 T CVRMsg_SetNotificationImage::Clear()
 T CVRMsg_SetNotificationImage::GetCachedSize() const
 T CVRMsg_SetNotificationImage::GetMetadata() const
 T CVRMsg_SetNotificationImage::IsInitialized() const
 T CVRMsg_SetNotificationImage::MergeFrom(CVRMsg_SetNotificationImage const&)
 T CVRMsg_SetNotificationImage::New() const
 T CVRMsg_SetNotificationImage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetNotificationImage::SetCachedSize(int) const
 T CVRMsg_SetNotificationImage::~CVRMsg_SetNotificationImage()
 T CVRMsg_SetNotificationImageResponse::ByteSize() const
 T CVRMsg_SetNotificationImageResponse::CVRMsg_SetNotificationImageResponse()
 T CVRMsg_SetNotificationImageResponse::Clear()
 T CVRMsg_SetNotificationImageResponse::GetCachedSize() const
 T CVRMsg_SetNotificationImageResponse::GetMetadata() const
 T CVRMsg_SetNotificationImageResponse::IsInitialized() const
 T CVRMsg_SetNotificationImageResponse::MergeFrom(CVRMsg_SetNotificationImageResponse const&)
 T CVRMsg_SetNotificationImageResponse::New() const
 T CVRMsg_SetNotificationImageResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_SetNotificationImageResponse::SetCachedSize(int) const
 T CVRMsg_SetNotificationImageResponse::~CVRMsg_SetNotificationImageResponse()
 T CVRMsg_Settings_GetBool::ByteSize() const
 T CVRMsg_Settings_GetBool::CVRMsg_Settings_GetBool()
 T CVRMsg_Settings_GetBool::Clear()
 T CVRMsg_Settings_GetBool::GetCachedSize() const
 T CVRMsg_Settings_GetBool::GetMetadata() const
 T CVRMsg_Settings_GetBool::IsInitialized() const
 T CVRMsg_Settings_GetBool::MergeFrom(CVRMsg_Settings_GetBool const&)
 T CVRMsg_Settings_GetBool::New() const
 T CVRMsg_Settings_GetBool::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetBool::SetCachedSize(int) const
 T CVRMsg_Settings_GetBool::~CVRMsg_Settings_GetBool()
 T CVRMsg_Settings_GetBool_Response::ByteSize() const
 T CVRMsg_Settings_GetBool_Response::CVRMsg_Settings_GetBool_Response()
 T CVRMsg_Settings_GetBool_Response::Clear()
 T CVRMsg_Settings_GetBool_Response::CopyFrom(CVRMsg_Settings_GetBool_Response const&)
 T CVRMsg_Settings_GetBool_Response::GetCachedSize() const
 T CVRMsg_Settings_GetBool_Response::GetMetadata() const
 T CVRMsg_Settings_GetBool_Response::IsInitialized() const
 T CVRMsg_Settings_GetBool_Response::MergeFrom(CVRMsg_Settings_GetBool_Response const&)
 T CVRMsg_Settings_GetBool_Response::New() const
 T CVRMsg_Settings_GetBool_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetBool_Response::SetCachedSize(int) const
 T CVRMsg_Settings_GetBool_Response::~CVRMsg_Settings_GetBool_Response()
 T CVRMsg_Settings_GetFloat::ByteSize() const
 T CVRMsg_Settings_GetFloat::CVRMsg_Settings_GetFloat()
 T CVRMsg_Settings_GetFloat::Clear()
 T CVRMsg_Settings_GetFloat::GetCachedSize() const
 T CVRMsg_Settings_GetFloat::GetMetadata() const
 T CVRMsg_Settings_GetFloat::IsInitialized() const
 T CVRMsg_Settings_GetFloat::MergeFrom(CVRMsg_Settings_GetFloat const&)
 T CVRMsg_Settings_GetFloat::New() const
 T CVRMsg_Settings_GetFloat::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetFloat::SetCachedSize(int) const
 T CVRMsg_Settings_GetFloat::~CVRMsg_Settings_GetFloat()
 T CVRMsg_Settings_GetFloat_Response::ByteSize() const
 T CVRMsg_Settings_GetFloat_Response::CVRMsg_Settings_GetFloat_Response()
 T CVRMsg_Settings_GetFloat_Response::Clear()
 T CVRMsg_Settings_GetFloat_Response::CopyFrom(CVRMsg_Settings_GetFloat_Response const&)
 T CVRMsg_Settings_GetFloat_Response::GetCachedSize() const
 T CVRMsg_Settings_GetFloat_Response::GetMetadata() const
 T CVRMsg_Settings_GetFloat_Response::IsInitialized() const
 T CVRMsg_Settings_GetFloat_Response::MergeFrom(CVRMsg_Settings_GetFloat_Response const&)
 T CVRMsg_Settings_GetFloat_Response::New() const
 T CVRMsg_Settings_GetFloat_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetFloat_Response::SetCachedSize(int) const
 T CVRMsg_Settings_GetFloat_Response::~CVRMsg_Settings_GetFloat_Response()
 T CVRMsg_Settings_GetInt32::ByteSize() const
 T CVRMsg_Settings_GetInt32::CVRMsg_Settings_GetInt32()
 T CVRMsg_Settings_GetInt32::Clear()
 T CVRMsg_Settings_GetInt32::GetCachedSize() const
 T CVRMsg_Settings_GetInt32::GetMetadata() const
 T CVRMsg_Settings_GetInt32::IsInitialized() const
 T CVRMsg_Settings_GetInt32::MergeFrom(CVRMsg_Settings_GetInt32 const&)
 T CVRMsg_Settings_GetInt32::New() const
 T CVRMsg_Settings_GetInt32::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetInt32::SetCachedSize(int) const
 T CVRMsg_Settings_GetInt32::~CVRMsg_Settings_GetInt32()
 T CVRMsg_Settings_GetInt32_Response::ByteSize() const
 T CVRMsg_Settings_GetInt32_Response::CVRMsg_Settings_GetInt32_Response()
 T CVRMsg_Settings_GetInt32_Response::Clear()
 T CVRMsg_Settings_GetInt32_Response::CopyFrom(CVRMsg_Settings_GetInt32_Response const&)
 T CVRMsg_Settings_GetInt32_Response::GetCachedSize() const
 T CVRMsg_Settings_GetInt32_Response::GetMetadata() const
 T CVRMsg_Settings_GetInt32_Response::IsInitialized() const
 T CVRMsg_Settings_GetInt32_Response::MergeFrom(CVRMsg_Settings_GetInt32_Response const&)
 T CVRMsg_Settings_GetInt32_Response::New() const
 T CVRMsg_Settings_GetInt32_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetInt32_Response::SetCachedSize(int) const
 T CVRMsg_Settings_GetInt32_Response::~CVRMsg_Settings_GetInt32_Response()
 T CVRMsg_Settings_GetString::ByteSize() const
 T CVRMsg_Settings_GetString::CVRMsg_Settings_GetString()
 T CVRMsg_Settings_GetString::Clear()
 T CVRMsg_Settings_GetString::GetCachedSize() const
 T CVRMsg_Settings_GetString::GetMetadata() const
 T CVRMsg_Settings_GetString::IsInitialized() const
 T CVRMsg_Settings_GetString::MergeFrom(CVRMsg_Settings_GetString const&)
 T CVRMsg_Settings_GetString::New() const
 T CVRMsg_Settings_GetString::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetString::SetCachedSize(int) const
 T CVRMsg_Settings_GetString::SharedCtor()
 T CVRMsg_Settings_GetString::SharedDtor()
 T CVRMsg_Settings_GetString::~CVRMsg_Settings_GetString()
 T CVRMsg_Settings_GetString_Response::ByteSize() const
 T CVRMsg_Settings_GetString_Response::CVRMsg_Settings_GetString_Response()
 T CVRMsg_Settings_GetString_Response::Clear()
 T CVRMsg_Settings_GetString_Response::CopyFrom(CVRMsg_Settings_GetString_Response const&)
 T CVRMsg_Settings_GetString_Response::GetCachedSize() const
 T CVRMsg_Settings_GetString_Response::GetMetadata() const
 T CVRMsg_Settings_GetString_Response::IsInitialized() const
 T CVRMsg_Settings_GetString_Response::MergeFrom(CVRMsg_Settings_GetString_Response const&)
 T CVRMsg_Settings_GetString_Response::New() const
 T CVRMsg_Settings_GetString_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_GetString_Response::SetCachedSize(int) const
 T CVRMsg_Settings_GetString_Response::~CVRMsg_Settings_GetString_Response()
 T CVRMsg_Settings_RemoveKeyInSection::ByteSize() const
 T CVRMsg_Settings_RemoveKeyInSection::CVRMsg_Settings_RemoveKeyInSection()
 T CVRMsg_Settings_RemoveKeyInSection::Clear()
 T CVRMsg_Settings_RemoveKeyInSection::GetCachedSize() const
 T CVRMsg_Settings_RemoveKeyInSection::GetMetadata() const
 T CVRMsg_Settings_RemoveKeyInSection::IsInitialized() const
 T CVRMsg_Settings_RemoveKeyInSection::MergeFrom(CVRMsg_Settings_RemoveKeyInSection const&)
 T CVRMsg_Settings_RemoveKeyInSection::New() const
 T CVRMsg_Settings_RemoveKeyInSection::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_RemoveKeyInSection::SetCachedSize(int) const
 T CVRMsg_Settings_RemoveKeyInSection::~CVRMsg_Settings_RemoveKeyInSection()
 T CVRMsg_Settings_RemoveSection::ByteSize() const
 T CVRMsg_Settings_RemoveSection::CVRMsg_Settings_RemoveSection()
 T CVRMsg_Settings_RemoveSection::Clear()
 T CVRMsg_Settings_RemoveSection::GetCachedSize() const
 T CVRMsg_Settings_RemoveSection::GetMetadata() const
 T CVRMsg_Settings_RemoveSection::IsInitialized() const
 T CVRMsg_Settings_RemoveSection::MergeFrom(CVRMsg_Settings_RemoveSection const&)
 T CVRMsg_Settings_RemoveSection::New() const
 T CVRMsg_Settings_RemoveSection::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_RemoveSection::SetCachedSize(int) const
 T CVRMsg_Settings_RemoveSection::~CVRMsg_Settings_RemoveSection()
 T CVRMsg_Settings_SetBool::ByteSize() const
 T CVRMsg_Settings_SetBool::CVRMsg_Settings_SetBool()
 T CVRMsg_Settings_SetBool::Clear()
 T CVRMsg_Settings_SetBool::GetCachedSize() const
 T CVRMsg_Settings_SetBool::GetMetadata() const
 T CVRMsg_Settings_SetBool::IsInitialized() const
 T CVRMsg_Settings_SetBool::MergeFrom(CVRMsg_Settings_SetBool const&)
 T CVRMsg_Settings_SetBool::New() const
 T CVRMsg_Settings_SetBool::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_SetBool::SetCachedSize(int) const
 T CVRMsg_Settings_SetBool::~CVRMsg_Settings_SetBool()
 T CVRMsg_Settings_SetFloat::ByteSize() const
 T CVRMsg_Settings_SetFloat::CVRMsg_Settings_SetFloat()
 T CVRMsg_Settings_SetFloat::Clear()
 T CVRMsg_Settings_SetFloat::GetCachedSize() const
 T CVRMsg_Settings_SetFloat::GetMetadata() const
 T CVRMsg_Settings_SetFloat::IsInitialized() const
 T CVRMsg_Settings_SetFloat::MergeFrom(CVRMsg_Settings_SetFloat const&)
 T CVRMsg_Settings_SetFloat::New() const
 T CVRMsg_Settings_SetFloat::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_SetFloat::SetCachedSize(int) const
 T CVRMsg_Settings_SetFloat::~CVRMsg_Settings_SetFloat()
 T CVRMsg_Settings_SetInt32::ByteSize() const
 T CVRMsg_Settings_SetInt32::CVRMsg_Settings_SetInt32()
 T CVRMsg_Settings_SetInt32::Clear()
 T CVRMsg_Settings_SetInt32::GetCachedSize() const
 T CVRMsg_Settings_SetInt32::GetMetadata() const
 T CVRMsg_Settings_SetInt32::IsInitialized() const
 T CVRMsg_Settings_SetInt32::MergeFrom(CVRMsg_Settings_SetInt32 const&)
 T CVRMsg_Settings_SetInt32::New() const
 T CVRMsg_Settings_SetInt32::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_SetInt32::SetCachedSize(int) const
 T CVRMsg_Settings_SetInt32::~CVRMsg_Settings_SetInt32()
 T CVRMsg_Settings_SetString::ByteSize() const
 T CVRMsg_Settings_SetString::CVRMsg_Settings_SetString()
 T CVRMsg_Settings_SetString::Clear()
 T CVRMsg_Settings_SetString::GetCachedSize() const
 T CVRMsg_Settings_SetString::GetMetadata() const
 T CVRMsg_Settings_SetString::IsInitialized() const
 T CVRMsg_Settings_SetString::MergeFrom(CVRMsg_Settings_SetString const&)
 T CVRMsg_Settings_SetString::New() const
 T CVRMsg_Settings_SetString::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_SetString::SetCachedSize(int) const
 T CVRMsg_Settings_SetString::SharedDtor()
 T CVRMsg_Settings_SetString::~CVRMsg_Settings_SetString()
 T CVRMsg_Settings_SetValue_Response::ByteSize() const
 T CVRMsg_Settings_SetValue_Response::CVRMsg_Settings_SetValue_Response()
 T CVRMsg_Settings_SetValue_Response::Clear()
 T CVRMsg_Settings_SetValue_Response::GetCachedSize() const
 T CVRMsg_Settings_SetValue_Response::GetMetadata() const
 T CVRMsg_Settings_SetValue_Response::IsInitialized() const
 T CVRMsg_Settings_SetValue_Response::MergeFrom(CVRMsg_Settings_SetValue_Response const&)
 T CVRMsg_Settings_SetValue_Response::New() const
 T CVRMsg_Settings_SetValue_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_SetValue_Response::SetCachedSize(int) const
 T CVRMsg_Settings_SetValue_Response::~CVRMsg_Settings_SetValue_Response()
 T CVRMsg_Settings_Sync::ByteSize() const
 T CVRMsg_Settings_Sync::CVRMsg_Settings_Sync()
 T CVRMsg_Settings_Sync::Clear()
 T CVRMsg_Settings_Sync::GetCachedSize() const
 T CVRMsg_Settings_Sync::GetMetadata() const
 T CVRMsg_Settings_Sync::IsInitialized() const
 T CVRMsg_Settings_Sync::MergeFrom(CVRMsg_Settings_Sync const&)
 T CVRMsg_Settings_Sync::New() const
 T CVRMsg_Settings_Sync::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_Sync::SetCachedSize(int) const
 T CVRMsg_Settings_Sync::~CVRMsg_Settings_Sync()
 T CVRMsg_Settings_Sync_Response::ByteSize() const
 T CVRMsg_Settings_Sync_Response::CVRMsg_Settings_Sync_Response()
 T CVRMsg_Settings_Sync_Response::Clear()
 T CVRMsg_Settings_Sync_Response::GetCachedSize() const
 T CVRMsg_Settings_Sync_Response::GetMetadata() const
 T CVRMsg_Settings_Sync_Response::IsInitialized() const
 T CVRMsg_Settings_Sync_Response::MergeFrom(CVRMsg_Settings_Sync_Response const&)
 T CVRMsg_Settings_Sync_Response::New() const
 T CVRMsg_Settings_Sync_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_Settings_Sync_Response::SetCachedSize(int) const
 T CVRMsg_Settings_Sync_Response::~CVRMsg_Settings_Sync_Response()
 T CVRMsg_StartAutolaunchOverlays::ByteSize() const
 T CVRMsg_StartAutolaunchOverlays::CVRMsg_StartAutolaunchOverlays()
 T CVRMsg_StartAutolaunchOverlays::Clear()
 T CVRMsg_StartAutolaunchOverlays::GetCachedSize() const
 T CVRMsg_StartAutolaunchOverlays::GetMetadata() const
 T CVRMsg_StartAutolaunchOverlays::IsInitialized() const
 T CVRMsg_StartAutolaunchOverlays::MergeFrom(CVRMsg_StartAutolaunchOverlays const&)
 T CVRMsg_StartAutolaunchOverlays::New() const
 T CVRMsg_StartAutolaunchOverlays::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_StartAutolaunchOverlays::SetCachedSize(int) const
 T CVRMsg_StartAutolaunchOverlays::~CVRMsg_StartAutolaunchOverlays()
 T CVRMsg_StartProcess::ByteSize() const
 T CVRMsg_StartProcess::CVRMsg_StartProcess()
 T CVRMsg_StartProcess::Clear()
 T CVRMsg_StartProcess::GetCachedSize() const
 T CVRMsg_StartProcess::GetMetadata() const
 T CVRMsg_StartProcess::IsInitialized() const
 T CVRMsg_StartProcess::MergeFrom(CVRMsg_StartProcess const&)
 T CVRMsg_StartProcess::New() const
 T CVRMsg_StartProcess::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_StartProcess::SetCachedSize(int) const
 T CVRMsg_StartProcess::~CVRMsg_StartProcess()
 T CVRMsg_StartProcessResponse::ByteSize() const
 T CVRMsg_StartProcessResponse::CVRMsg_StartProcessResponse()
 T CVRMsg_StartProcessResponse::Clear()
 T CVRMsg_StartProcessResponse::GetCachedSize() const
 T CVRMsg_StartProcessResponse::GetMetadata() const
 T CVRMsg_StartProcessResponse::IsInitialized() const
 T CVRMsg_StartProcessResponse::MergeFrom(CVRMsg_StartProcessResponse const&)
 T CVRMsg_StartProcessResponse::New() const
 T CVRMsg_StartProcessResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_StartProcessResponse::SetCachedSize(int) const
 T CVRMsg_StartProcessResponse::~CVRMsg_StartProcessResponse()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::ByteSize() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::CVRMsg_TrackedCamera_AcquireVideoStreamingService()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::Clear()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::GetCachedSize() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::GetMetadata() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::IsInitialized() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::MergeFrom(CVRMsg_TrackedCamera_AcquireVideoStreamingService const&)
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::New() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingService::~CVRMsg_TrackedCamera_AcquireVideoStreamingService()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::ByteSize() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::Clear()
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::MergeFrom(CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse const&)
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::New() const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse::~CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse()
 T CVRMsg_TrackedCamera_Enable::ByteSize() const
 T CVRMsg_TrackedCamera_Enable::CVRMsg_TrackedCamera_Enable()
 T CVRMsg_TrackedCamera_Enable::Clear()
 T CVRMsg_TrackedCamera_Enable::GetCachedSize() const
 T CVRMsg_TrackedCamera_Enable::GetMetadata() const
 T CVRMsg_TrackedCamera_Enable::IsInitialized() const
 T CVRMsg_TrackedCamera_Enable::MergeFrom(CVRMsg_TrackedCamera_Enable const&)
 T CVRMsg_TrackedCamera_Enable::New() const
 T CVRMsg_TrackedCamera_Enable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_Enable::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_Enable::~CVRMsg_TrackedCamera_Enable()
 T CVRMsg_TrackedCamera_EnableResponse::ByteSize() const
 T CVRMsg_TrackedCamera_EnableResponse::CVRMsg_TrackedCamera_EnableResponse()
 T CVRMsg_TrackedCamera_EnableResponse::Clear()
 T CVRMsg_TrackedCamera_EnableResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_EnableResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_EnableResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_EnableResponse::MergeFrom(CVRMsg_TrackedCamera_EnableResponse const&)
 T CVRMsg_TrackedCamera_EnableResponse::New() const
 T CVRMsg_TrackedCamera_EnableResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_EnableResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_EnableResponse::~CVRMsg_TrackedCamera_EnableResponse()
 T CVRMsg_TrackedCamera_GetDistortion::ByteSize() const
 T CVRMsg_TrackedCamera_GetDistortion::CVRMsg_TrackedCamera_GetDistortion()
 T CVRMsg_TrackedCamera_GetDistortion::Clear()
 T CVRMsg_TrackedCamera_GetDistortion::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetDistortion::GetMetadata() const
 T CVRMsg_TrackedCamera_GetDistortion::IsInitialized() const
 T CVRMsg_TrackedCamera_GetDistortion::MergeFrom(CVRMsg_TrackedCamera_GetDistortion const&)
 T CVRMsg_TrackedCamera_GetDistortion::New() const
 T CVRMsg_TrackedCamera_GetDistortion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetDistortion::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetDistortion::~CVRMsg_TrackedCamera_GetDistortion()
 T CVRMsg_TrackedCamera_GetDistortionResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetDistortionResponse::CVRMsg_TrackedCamera_GetDistortionResponse()
 T CVRMsg_TrackedCamera_GetDistortionResponse::Clear()
 T CVRMsg_TrackedCamera_GetDistortionResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetDistortionResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetDistortionResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetDistortionResponse::MergeFrom(CVRMsg_TrackedCamera_GetDistortionResponse const&)
 T CVRMsg_TrackedCamera_GetDistortionResponse::New() const
 T CVRMsg_TrackedCamera_GetDistortionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetDistortionResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetDistortionResponse::~CVRMsg_TrackedCamera_GetDistortionResponse()
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::ByteSize() const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::Clear()
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::GetMetadata() const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::IsInitialized() const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::MergeFrom(CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord const&)
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::New() const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord::~CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord()
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::ByteSize() const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::CVRMsg_TrackedCamera_GetDistortion_InputCoord()
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::Clear()
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::GetMetadata() const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::IsInitialized() const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::MergeFrom(CVRMsg_TrackedCamera_GetDistortion_InputCoord const&)
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::New() const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetDistortion_InputCoord::~CVRMsg_TrackedCamera_GetDistortion_InputCoord()
 T CVRMsg_TrackedCamera_GetFormatDimensions::ByteSize() const
 T CVRMsg_TrackedCamera_GetFormatDimensions::CVRMsg_TrackedCamera_GetFormatDimensions()
 T CVRMsg_TrackedCamera_GetFormatDimensions::Clear()
 T CVRMsg_TrackedCamera_GetFormatDimensions::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetFormatDimensions::GetMetadata() const
 T CVRMsg_TrackedCamera_GetFormatDimensions::IsInitialized() const
 T CVRMsg_TrackedCamera_GetFormatDimensions::MergeFrom(CVRMsg_TrackedCamera_GetFormatDimensions const&)
 T CVRMsg_TrackedCamera_GetFormatDimensions::New() const
 T CVRMsg_TrackedCamera_GetFormatDimensions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetFormatDimensions::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetFormatDimensions::~CVRMsg_TrackedCamera_GetFormatDimensions()
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::CVRMsg_TrackedCamera_GetFormatDimensionsResponse()
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::Clear()
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::MergeFrom(CVRMsg_TrackedCamera_GetFormatDimensionsResponse const&)
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::New() const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetFormatDimensionsResponse::~CVRMsg_TrackedCamera_GetFormatDimensionsResponse()
 T CVRMsg_TrackedCamera_GetFrameBounds::ByteSize() const
 T CVRMsg_TrackedCamera_GetFrameBounds::CVRMsg_TrackedCamera_GetFrameBounds()
 T CVRMsg_TrackedCamera_GetFrameBounds::Clear()
 T CVRMsg_TrackedCamera_GetFrameBounds::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetFrameBounds::GetMetadata() const
 T CVRMsg_TrackedCamera_GetFrameBounds::IsInitialized() const
 T CVRMsg_TrackedCamera_GetFrameBounds::MergeFrom(CVRMsg_TrackedCamera_GetFrameBounds const&)
 T CVRMsg_TrackedCamera_GetFrameBounds::New() const
 T CVRMsg_TrackedCamera_GetFrameBounds::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetFrameBounds::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetFrameBounds::~CVRMsg_TrackedCamera_GetFrameBounds()
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::CVRMsg_TrackedCamera_GetFrameBoundsResponse()
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::Clear()
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::MergeFrom(CVRMsg_TrackedCamera_GetFrameBoundsResponse const&)
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::New() const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetFrameBoundsResponse::~CVRMsg_TrackedCamera_GetFrameBoundsResponse()
 T CVRMsg_TrackedCamera_GetIntrinsics::ByteSize() const
 T CVRMsg_TrackedCamera_GetIntrinsics::CVRMsg_TrackedCamera_GetIntrinsics()
 T CVRMsg_TrackedCamera_GetIntrinsics::Clear()
 T CVRMsg_TrackedCamera_GetIntrinsics::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetIntrinsics::GetMetadata() const
 T CVRMsg_TrackedCamera_GetIntrinsics::IsInitialized() const
 T CVRMsg_TrackedCamera_GetIntrinsics::MergeFrom(CVRMsg_TrackedCamera_GetIntrinsics const&)
 T CVRMsg_TrackedCamera_GetIntrinsics::New() const
 T CVRMsg_TrackedCamera_GetIntrinsics::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetIntrinsics::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetIntrinsics::~CVRMsg_TrackedCamera_GetIntrinsics()
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::CVRMsg_TrackedCamera_GetIntrinsicsResponse()
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::Clear()
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::MergeFrom(CVRMsg_TrackedCamera_GetIntrinsicsResponse const&)
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::New() const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetIntrinsicsResponse::~CVRMsg_TrackedCamera_GetIntrinsicsResponse()
 T CVRMsg_TrackedCamera_GetProjection::ByteSize() const
 T CVRMsg_TrackedCamera_GetProjection::CVRMsg_TrackedCamera_GetProjection()
 T CVRMsg_TrackedCamera_GetProjection::Clear()
 T CVRMsg_TrackedCamera_GetProjection::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetProjection::GetMetadata() const
 T CVRMsg_TrackedCamera_GetProjection::IsInitialized() const
 T CVRMsg_TrackedCamera_GetProjection::MergeFrom(CVRMsg_TrackedCamera_GetProjection const&)
 T CVRMsg_TrackedCamera_GetProjection::New() const
 T CVRMsg_TrackedCamera_GetProjection::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetProjection::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetProjection::~CVRMsg_TrackedCamera_GetProjection()
 T CVRMsg_TrackedCamera_GetProjectionResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetProjectionResponse::CVRMsg_TrackedCamera_GetProjectionResponse()
 T CVRMsg_TrackedCamera_GetProjectionResponse::Clear()
 T CVRMsg_TrackedCamera_GetProjectionResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetProjectionResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetProjectionResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetProjectionResponse::MergeFrom(CVRMsg_TrackedCamera_GetProjectionResponse const&)
 T CVRMsg_TrackedCamera_GetProjectionResponse::New() const
 T CVRMsg_TrackedCamera_GetProjectionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetProjectionResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetProjectionResponse::~CVRMsg_TrackedCamera_GetProjectionResponse()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::ByteSize() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::CVRMsg_TrackedCamera_GetRecommendedUndistortion()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::Clear()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::GetMetadata() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::IsInitialized() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::MergeFrom(CVRMsg_TrackedCamera_GetRecommendedUndistortion const&)
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::New() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortion::~CVRMsg_TrackedCamera_GetRecommendedUndistortion()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::Clear()
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::MergeFrom(CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse const&)
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::New() const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse::~CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse()
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::ByteSize() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::CVRMsg_TrackedCamera_GetVideoStreamFormat()
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::Clear()
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::GetMetadata() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::IsInitialized() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::MergeFrom(CVRMsg_TrackedCamera_GetVideoStreamFormat const&)
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::New() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetVideoStreamFormat::~CVRMsg_TrackedCamera_GetVideoStreamFormat()
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::ByteSize() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::CVRMsg_TrackedCamera_GetVideoStreamFormatResponse()
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::Clear()
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::MergeFrom(CVRMsg_TrackedCamera_GetVideoStreamFormatResponse const&)
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::New() const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_GetVideoStreamFormatResponse::~CVRMsg_TrackedCamera_GetVideoStreamFormatResponse()
 T CVRMsg_TrackedCamera_IsVideoStreamActive::ByteSize() const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::CVRMsg_TrackedCamera_IsVideoStreamActive()
 T CVRMsg_TrackedCamera_IsVideoStreamActive::Clear()
 T CVRMsg_TrackedCamera_IsVideoStreamActive::GetCachedSize() const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::GetMetadata() const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::IsInitialized() const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::MergeFrom(CVRMsg_TrackedCamera_IsVideoStreamActive const&)
 T CVRMsg_TrackedCamera_IsVideoStreamActive::New() const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_IsVideoStreamActive::~CVRMsg_TrackedCamera_IsVideoStreamActive()
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::ByteSize() const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::CVRMsg_TrackedCamera_IsVideoStreamActiveResponse()
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::Clear()
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::MergeFrom(CVRMsg_TrackedCamera_IsVideoStreamActiveResponse const&)
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::New() const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_IsVideoStreamActiveResponse::~CVRMsg_TrackedCamera_IsVideoStreamActiveResponse()
 T CVRMsg_TrackedCamera_PauseVideoStream::ByteSize() const
 T CVRMsg_TrackedCamera_PauseVideoStream::CVRMsg_TrackedCamera_PauseVideoStream()
 T CVRMsg_TrackedCamera_PauseVideoStream::Clear()
 T CVRMsg_TrackedCamera_PauseVideoStream::GetCachedSize() const
 T CVRMsg_TrackedCamera_PauseVideoStream::GetMetadata() const
 T CVRMsg_TrackedCamera_PauseVideoStream::IsInitialized() const
 T CVRMsg_TrackedCamera_PauseVideoStream::MergeFrom(CVRMsg_TrackedCamera_PauseVideoStream const&)
 T CVRMsg_TrackedCamera_PauseVideoStream::New() const
 T CVRMsg_TrackedCamera_PauseVideoStream::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_PauseVideoStream::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_PauseVideoStream::~CVRMsg_TrackedCamera_PauseVideoStream()
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::ByteSize() const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::CVRMsg_TrackedCamera_PauseVideoStreamResponse()
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::Clear()
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::MergeFrom(CVRMsg_TrackedCamera_PauseVideoStreamResponse const&)
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::New() const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_PauseVideoStreamResponse::~CVRMsg_TrackedCamera_PauseVideoStreamResponse()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::ByteSize() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::CVRMsg_TrackedCamera_ReleaseVideoStreamingService()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::Clear()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::GetCachedSize() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::GetMetadata() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::IsInitialized() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::MergeFrom(CVRMsg_TrackedCamera_ReleaseVideoStreamingService const&)
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::New() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingService::~CVRMsg_TrackedCamera_ReleaseVideoStreamingService()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::ByteSize() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::Clear()
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::MergeFrom(CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse const&)
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::New() const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse::~CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse()
 T CVRMsg_TrackedCamera_ResumeVideoStream::ByteSize() const
 T CVRMsg_TrackedCamera_ResumeVideoStream::CVRMsg_TrackedCamera_ResumeVideoStream()
 T CVRMsg_TrackedCamera_ResumeVideoStream::Clear()
 T CVRMsg_TrackedCamera_ResumeVideoStream::GetCachedSize() const
 T CVRMsg_TrackedCamera_ResumeVideoStream::GetMetadata() const
 T CVRMsg_TrackedCamera_ResumeVideoStream::IsInitialized() const
 T CVRMsg_TrackedCamera_ResumeVideoStream::MergeFrom(CVRMsg_TrackedCamera_ResumeVideoStream const&)
 T CVRMsg_TrackedCamera_ResumeVideoStream::New() const
 T CVRMsg_TrackedCamera_ResumeVideoStream::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_ResumeVideoStream::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_ResumeVideoStream::~CVRMsg_TrackedCamera_ResumeVideoStream()
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::ByteSize() const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::CVRMsg_TrackedCamera_ResumeVideoStreamResponse()
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::Clear()
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::MergeFrom(CVRMsg_TrackedCamera_ResumeVideoStreamResponse const&)
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::New() const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_ResumeVideoStreamResponse::~CVRMsg_TrackedCamera_ResumeVideoStreamResponse()
 T CVRMsg_TrackedCamera_SetAutoExposure::ByteSize() const
 T CVRMsg_TrackedCamera_SetAutoExposure::CVRMsg_TrackedCamera_SetAutoExposure()
 T CVRMsg_TrackedCamera_SetAutoExposure::Clear()
 T CVRMsg_TrackedCamera_SetAutoExposure::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetAutoExposure::GetMetadata() const
 T CVRMsg_TrackedCamera_SetAutoExposure::IsInitialized() const
 T CVRMsg_TrackedCamera_SetAutoExposure::MergeFrom(CVRMsg_TrackedCamera_SetAutoExposure const&)
 T CVRMsg_TrackedCamera_SetAutoExposure::New() const
 T CVRMsg_TrackedCamera_SetAutoExposure::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetAutoExposure::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetAutoExposure::~CVRMsg_TrackedCamera_SetAutoExposure()
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::ByteSize() const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::CVRMsg_TrackedCamera_SetAutoExposureResponse()
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::Clear()
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::MergeFrom(CVRMsg_TrackedCamera_SetAutoExposureResponse const&)
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::New() const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetAutoExposureResponse::~CVRMsg_TrackedCamera_SetAutoExposureResponse()
 T CVRMsg_TrackedCamera_SetCompatibilityMode::ByteSize() const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::CVRMsg_TrackedCamera_SetCompatibilityMode()
 T CVRMsg_TrackedCamera_SetCompatibilityMode::Clear()
 T CVRMsg_TrackedCamera_SetCompatibilityMode::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::GetMetadata() const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::IsInitialized() const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::MergeFrom(CVRMsg_TrackedCamera_SetCompatibilityMode const&)
 T CVRMsg_TrackedCamera_SetCompatibilityMode::New() const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetCompatibilityMode::~CVRMsg_TrackedCamera_SetCompatibilityMode()
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::ByteSize() const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::CVRMsg_TrackedCamera_SetCompatibilityModeResponse()
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::Clear()
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::MergeFrom(CVRMsg_TrackedCamera_SetCompatibilityModeResponse const&)
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::New() const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetCompatibilityModeResponse::~CVRMsg_TrackedCamera_SetCompatibilityModeResponse()
 T CVRMsg_TrackedCamera_SetUndistortion::ByteSize() const
 T CVRMsg_TrackedCamera_SetUndistortion::CVRMsg_TrackedCamera_SetUndistortion()
 T CVRMsg_TrackedCamera_SetUndistortion::Clear()
 T CVRMsg_TrackedCamera_SetUndistortion::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetUndistortion::GetMetadata() const
 T CVRMsg_TrackedCamera_SetUndistortion::IsInitialized() const
 T CVRMsg_TrackedCamera_SetUndistortion::MergeFrom(CVRMsg_TrackedCamera_SetUndistortion const&)
 T CVRMsg_TrackedCamera_SetUndistortion::New() const
 T CVRMsg_TrackedCamera_SetUndistortion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetUndistortion::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetUndistortion::~CVRMsg_TrackedCamera_SetUndistortion()
 T CVRMsg_TrackedCamera_SetUndistortionResponse::ByteSize() const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::CVRMsg_TrackedCamera_SetUndistortionResponse()
 T CVRMsg_TrackedCamera_SetUndistortionResponse::Clear()
 T CVRMsg_TrackedCamera_SetUndistortionResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::MergeFrom(CVRMsg_TrackedCamera_SetUndistortionResponse const&)
 T CVRMsg_TrackedCamera_SetUndistortionResponse::New() const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetUndistortionResponse::~CVRMsg_TrackedCamera_SetUndistortionResponse()
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::ByteSize() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::CVRMsg_TrackedCamera_SetVideoStreamFormat()
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::Clear()
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::GetMetadata() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::IsInitialized() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::MergeFrom(CVRMsg_TrackedCamera_SetVideoStreamFormat const&)
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::New() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetVideoStreamFormat::~CVRMsg_TrackedCamera_SetVideoStreamFormat()
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::ByteSize() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::CVRMsg_TrackedCamera_SetVideoStreamFormatResponse()
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::Clear()
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::MergeFrom(CVRMsg_TrackedCamera_SetVideoStreamFormatResponse const&)
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::New() const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_SetVideoStreamFormatResponse::~CVRMsg_TrackedCamera_SetVideoStreamFormatResponse()
 T CVRMsg_TrackedCamera_StartVideoStream::ByteSize() const
 T CVRMsg_TrackedCamera_StartVideoStream::CVRMsg_TrackedCamera_StartVideoStream()
 T CVRMsg_TrackedCamera_StartVideoStream::Clear()
 T CVRMsg_TrackedCamera_StartVideoStream::GetCachedSize() const
 T CVRMsg_TrackedCamera_StartVideoStream::GetMetadata() const
 T CVRMsg_TrackedCamera_StartVideoStream::IsInitialized() const
 T CVRMsg_TrackedCamera_StartVideoStream::MergeFrom(CVRMsg_TrackedCamera_StartVideoStream const&)
 T CVRMsg_TrackedCamera_StartVideoStream::New() const
 T CVRMsg_TrackedCamera_StartVideoStream::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_StartVideoStream::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_StartVideoStream::~CVRMsg_TrackedCamera_StartVideoStream()
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::ByteSize() const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::CVRMsg_TrackedCamera_StartVideoStreamResponse()
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::Clear()
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::MergeFrom(CVRMsg_TrackedCamera_StartVideoStreamResponse const&)
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::New() const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_StartVideoStreamResponse::~CVRMsg_TrackedCamera_StartVideoStreamResponse()
 T CVRMsg_TrackedCamera_StopVideoStream::ByteSize() const
 T CVRMsg_TrackedCamera_StopVideoStream::CVRMsg_TrackedCamera_StopVideoStream()
 T CVRMsg_TrackedCamera_StopVideoStream::Clear()
 T CVRMsg_TrackedCamera_StopVideoStream::GetCachedSize() const
 T CVRMsg_TrackedCamera_StopVideoStream::GetMetadata() const
 T CVRMsg_TrackedCamera_StopVideoStream::IsInitialized() const
 T CVRMsg_TrackedCamera_StopVideoStream::MergeFrom(CVRMsg_TrackedCamera_StopVideoStream const&)
 T CVRMsg_TrackedCamera_StopVideoStream::New() const
 T CVRMsg_TrackedCamera_StopVideoStream::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_StopVideoStream::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_StopVideoStream::~CVRMsg_TrackedCamera_StopVideoStream()
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::ByteSize() const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::CVRMsg_TrackedCamera_StopVideoStreamResponse()
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::Clear()
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::GetCachedSize() const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::GetMetadata() const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::IsInitialized() const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::MergeFrom(CVRMsg_TrackedCamera_StopVideoStreamResponse const&)
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::New() const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::SetCachedSize(int) const
 T CVRMsg_TrackedCamera_StopVideoStreamResponse::~CVRMsg_TrackedCamera_StopVideoStreamResponse()
 T CVRMsg_TriggerHapticPulse::ByteSize() const
 T CVRMsg_TriggerHapticPulse::CVRMsg_TriggerHapticPulse()
 T CVRMsg_TriggerHapticPulse::Clear()
 T CVRMsg_TriggerHapticPulse::GetCachedSize() const
 T CVRMsg_TriggerHapticPulse::GetMetadata() const
 T CVRMsg_TriggerHapticPulse::IsInitialized() const
 T CVRMsg_TriggerHapticPulse::MergeFrom(CVRMsg_TriggerHapticPulse const&)
 T CVRMsg_TriggerHapticPulse::New() const
 T CVRMsg_TriggerHapticPulse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CVRMsg_TriggerHapticPulse::SetCachedSize(int) const
 T CVRMsg_TriggerHapticPulse::~CVRMsg_TriggerHapticPulse()
 T CVRNotifications_001::CreateNotification(unsigned long long, unsigned long long, char const*, char const*, char const*, vr::NotificationBitmap_t const*, unsigned int*)
 T CVRNotifications_001::DismissNotification(unsigned int)
 T CVRNotifications_001::GetErrorString(vr::EVRNotificationError, char*, unsigned int)
 T CVROverlay_001::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_001::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_001::DestroyOverlay(unsigned long long)
 T CVROverlay_001::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_001::GetHighQualityOverlay()
 T CVROverlay_001::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_001::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_001::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_001::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_001::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_001::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_001::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_001::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_001::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_001::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_001::GetOverlayVisibility(unsigned long long, VROverlayVisibility*)
 T CVROverlay_001::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_001::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_001::HideOverlay(unsigned long long)
 T CVROverlay_001::IsActiveSystemOverlay(unsigned long long)
 T CVROverlay_001::IsOverlayVisible(unsigned long long)
 T CVROverlay_001::IsSystemOverlayVisible()
 T CVROverlay_001::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_001::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_001::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_001::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_001::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_001::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_001::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_001::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_001::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_001::SetOverlayTexture(unsigned long long, void*)
 T CVROverlay_001::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_001::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_001::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_001::SetOverlayVisibility(unsigned long long, VROverlayVisibility)
 T CVROverlay_001::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_001::ShowOverlay(unsigned long long)
 T CVROverlay_002::ClearOverlayTexture(unsigned long long)
 T CVROverlay_002::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_002::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_002::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_002::DestroyOverlay(unsigned long long)
 T CVROverlay_002::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_002::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_002::GetHighQualityOverlay()
 T CVROverlay_002::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_002::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_002::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_002::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_002::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_002::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_002::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_002::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_002::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_002::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_002::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_002::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_002::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_002::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_002::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_002::HideOverlay(unsigned long long)
 T CVROverlay_002::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_002::IsDashboardVisible()
 T CVROverlay_002::IsOverlayVisible(unsigned long long)
 T CVROverlay_002::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_002::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_002::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_002::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_002::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_002::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_002::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_002::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_002::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_002::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_002::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_002::SetOverlayTexture(unsigned long long, vr::EGraphicsAPIConvention, void*)
 T CVROverlay_002::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_002::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_002::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_002::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_002::ShowDashboard(char const*)
 T CVROverlay_002::ShowOverlay(unsigned long long)
 T CVROverlay_003::ClearOverlayTexture(unsigned long long)
 T CVROverlay_003::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_003::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_003::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_003::DestroyOverlay(unsigned long long)
 T CVROverlay_003::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_003::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_003::GetHighQualityOverlay()
 T CVROverlay_003::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_003::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_003::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_003::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_003::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_003::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_003::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_003::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_003::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_003::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_003::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_003::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_003::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_003::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_003::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_003::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_003::HideOverlay(unsigned long long)
 T CVROverlay_003::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_003::IsDashboardVisible()
 T CVROverlay_003::IsOverlayVisible(unsigned long long)
 T CVROverlay_003::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_003::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_003::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_003::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_003::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_003::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_003::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_003::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_003::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_003::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_003::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_003::SetOverlayTexture(unsigned long long, vr::EGraphicsAPIConvention, void*)
 T CVROverlay_003::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_003::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_003::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_003::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_003::ShowDashboard(char const*)
 T CVROverlay_003::ShowOverlay(unsigned long long)
 T CVROverlay_004::ClearOverlayTexture(unsigned long long)
 T CVROverlay_004::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_004::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_004::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_004::DestroyOverlay(unsigned long long)
 T CVROverlay_004::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_004::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_004::GetHighQualityOverlay()
 T CVROverlay_004::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_004::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_004::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_004::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_004::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_004::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_004::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_004::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_004::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_004::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_004::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_004::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_004::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_004::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_004::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_004::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_004::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_004::HideOverlay(unsigned long long)
 T CVROverlay_004::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_004::IsDashboardVisible()
 T CVROverlay_004::IsOverlayVisible(unsigned long long)
 T CVROverlay_004::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_004::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_004::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_004::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_004::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_004::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_004::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_004::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_004::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_004::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_004::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_004::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_004::SetOverlayTexture(unsigned long long, vr::EGraphicsAPIConvention, void*)
 T CVROverlay_004::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_004::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_004::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_004::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_004::ShowDashboard(char const*)
 T CVROverlay_004::ShowOverlay(unsigned long long)
 T CVROverlay_005::ClearOverlayTexture(unsigned long long)
 T CVROverlay_005::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_005::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_005::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_005::DestroyOverlay(unsigned long long)
 T CVROverlay_005::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_005::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_005::GetHighQualityOverlay()
 T CVROverlay_005::GetKeyboardText(char*, unsigned int)
 T CVROverlay_005::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_005::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_005::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_005::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_005::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_005::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_005::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_005::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_005::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_005::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_005::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_005::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_005::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_005::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_005::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_005::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_005::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_005::HideKeyboard()
 T CVROverlay_005::HideOverlay(unsigned long long)
 T CVROverlay_005::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_005::IsDashboardVisible()
 T CVROverlay_005::IsFocusOverlay(unsigned long long)
 T CVROverlay_005::IsOverlayVisible(unsigned long long)
 T CVROverlay_005::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_005::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_005::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_005::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_005::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_005::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_005::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_005::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_005::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_005::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_005::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_005::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_005::SetOverlayTexture(unsigned long long, vr::EGraphicsAPIConvention, void*)
 T CVROverlay_005::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_005::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_005::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_005::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_005::ShowDashboard(char const*)
 T CVROverlay_005::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool)
 T CVROverlay_005::ShowOverlay(unsigned long long)
 T CVROverlay_006::ClearOverlayTexture(unsigned long long)
 T CVROverlay_006::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_006::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_006::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_006::DestroyOverlay(unsigned long long)
 T CVROverlay_006::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_006::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_006::GetGamepadFocusOverlay()
 T CVROverlay_006::GetHighQualityOverlay()
 T CVROverlay_006::GetKeyboardText(char*, unsigned int)
 T CVROverlay_006::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_006::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_006::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_006::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_006::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_006::GetOverlayGamma(unsigned long long, float*)
 T CVROverlay_006::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_006::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_006::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_006::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_006::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_006::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_006::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_006::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_006::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_006::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_006::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_006::HideKeyboard()
 T CVROverlay_006::HideOverlay(unsigned long long)
 T CVROverlay_006::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_006::IsDashboardVisible()
 T CVROverlay_006::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_006::IsOverlayVisible(unsigned long long)
 T CVROverlay_006::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_006::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_006::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_006::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_006::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_006::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_006::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_006::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_006::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_006::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_006::SetOverlayGamma(unsigned long long, float)
 T CVROverlay_006::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_006::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_006::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_006::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_006::SetOverlayTexture(unsigned long long, vr::EGraphicsAPIConvention, void*)
 T CVROverlay_006::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_006::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_006::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_006::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_006::ShowDashboard(char const*)
 T CVROverlay_006::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_006::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_006::ShowOverlay(unsigned long long)
 T CVROverlay_007::ClearOverlayTexture(unsigned long long)
 T CVROverlay_007::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_007::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_007::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_007::DestroyOverlay(unsigned long long)
 T CVROverlay_007::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_007::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_007::GetGamepadFocusOverlay()
 T CVROverlay_007::GetHighQualityOverlay()
 T CVROverlay_007::GetKeyboardText(char*, unsigned int)
 T CVROverlay_007::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_007::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_007::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_007::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_007::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_007::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_007::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_007::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_007::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_007::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_007::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_007::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVROverlay_007::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_007::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_007::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_007::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_007::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_007::HideKeyboard()
 T CVROverlay_007::HideOverlay(unsigned long long)
 T CVROverlay_007::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_007::IsDashboardVisible()
 T CVROverlay_007::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_007::IsOverlayVisible(unsigned long long)
 T CVROverlay_007::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_007::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_007::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_007::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_007::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_007::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVROverlay_007::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_007::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_007::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_007::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_007::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_007::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_007::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_007::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_007::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_007::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_007::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVROverlay_007::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_007::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVROverlay_007::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_007::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_007::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_007::ShowDashboard(char const*)
 T CVROverlay_007::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_007::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_007::ShowOverlay(unsigned long long)
 T CVROverlay_008::ClearOverlayTexture(unsigned long long)
 T CVROverlay_008::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_008::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_008::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_008::DestroyOverlay(unsigned long long)
 T CVROverlay_008::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_008::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_008::GetGamepadFocusOverlay()
 T CVROverlay_008::GetHighQualityOverlay()
 T CVROverlay_008::GetKeyboardText(char*, unsigned int)
 T CVROverlay_008::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_008::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_008::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_008::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_008::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_008::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_008::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_008::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_008::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_008::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_008::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_008::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVROverlay_008::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_008::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_008::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_008::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_008::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T CVROverlay_008::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_008::HideKeyboard()
 T CVROverlay_008::HideOverlay(unsigned long long)
 T CVROverlay_008::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_008::IsDashboardVisible()
 T CVROverlay_008::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_008::IsOverlayVisible(unsigned long long)
 T CVROverlay_008::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_008::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_008::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_008::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_008::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_008::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVROverlay_008::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_008::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_008::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_008::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_008::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_008::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_008::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_008::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_008::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_008::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_008::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVROverlay_008::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_008::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVROverlay_008::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_008::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_008::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_008::ShowDashboard(char const*)
 T CVROverlay_008::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_008::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_008::ShowOverlay(unsigned long long)
 T CVROverlay_009::ClearOverlayTexture(unsigned long long)
 T CVROverlay_009::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_009::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_009::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_009::DestroyOverlay(unsigned long long)
 T CVROverlay_009::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_009::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_009::GetGamepadFocusOverlay()
 T CVROverlay_009::GetHighQualityOverlay()
 T CVROverlay_009::GetKeyboardText(char*, unsigned int)
 T CVROverlay_009::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_009::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_009::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_009::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_009::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_009::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_009::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_009::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_009::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_009::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_009::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_009::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVROverlay_009::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_009::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_009::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_009::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_009::GetPrimaryDashboardDevice()
 T CVROverlay_009::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T CVROverlay_009::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_009::HideKeyboard()
 T CVROverlay_009::HideOverlay(unsigned long long)
 T CVROverlay_009::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_009::IsDashboardVisible()
 T CVROverlay_009::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_009::IsOverlayVisible(unsigned long long)
 T CVROverlay_009::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_009::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*)
 T CVROverlay_009::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_009::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_009::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_009::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVROverlay_009::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_009::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_009::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_009::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_009::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_009::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_009::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_009::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_009::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_009::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_009::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVROverlay_009::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_009::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVROverlay_009::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_009::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_009::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_009::ShowDashboard(char const*)
 T CVROverlay_009::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_009::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_009::ShowOverlay(unsigned long long)
 T CVROverlay_010::ClearOverlayTexture(unsigned long long)
 T CVROverlay_010::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_010::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_010::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_010::DestroyOverlay(unsigned long long)
 T CVROverlay_010::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_010::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_010::GetGamepadFocusOverlay()
 T CVROverlay_010::GetHighQualityOverlay()
 T CVROverlay_010::GetKeyboardText(char*, unsigned int)
 T CVROverlay_010::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_010::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_010::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_010::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_010::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_010::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_010::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_010::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_010::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_010::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_010::GetOverlayRenderingPid(unsigned long long)
 T CVROverlay_010::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_010::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVROverlay_010::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_010::GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 T CVROverlay_010::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_010::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_010::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_010::GetPrimaryDashboardDevice()
 T CVROverlay_010::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T CVROverlay_010::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_010::HideKeyboard()
 T CVROverlay_010::HideOverlay(unsigned long long)
 T CVROverlay_010::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_010::IsDashboardVisible()
 T CVROverlay_010::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_010::IsOverlayVisible(unsigned long long)
 T CVROverlay_010::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_010::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T CVROverlay_010::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_010::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_010::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_010::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVROverlay_010::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_010::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_010::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_010::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_010::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_010::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_010::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_010::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_010::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_010::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_010::SetOverlayRenderingPid(unsigned long long, unsigned int)
 T CVROverlay_010::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVROverlay_010::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_010::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVROverlay_010::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_010::SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 T CVROverlay_010::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_010::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_010::ShowDashboard(char const*)
 T CVROverlay_010::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_010::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_010::ShowOverlay(unsigned long long)
 T CVROverlay_011::ClearOverlayTexture(unsigned long long)
 T CVROverlay_011::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T CVROverlay_011::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T CVROverlay_011::CreateOverlay(char const*, char const*, unsigned long long*)
 T CVROverlay_011::DestroyOverlay(unsigned long long)
 T CVROverlay_011::FindOverlay(char const*, unsigned long long*)
 T CVROverlay_011::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T CVROverlay_011::GetGamepadFocusOverlay()
 T CVROverlay_011::GetHighQualityOverlay()
 T CVROverlay_011::GetKeyboardText(char*, unsigned int)
 T CVROverlay_011::GetOverlayAlpha(unsigned long long, float*)
 T CVROverlay_011::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T CVROverlay_011::GetOverlayColor(unsigned long long, float*, float*, float*)
 T CVROverlay_011::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T CVROverlay_011::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T CVROverlay_011::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T CVROverlay_011::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T CVROverlay_011::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_011::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T CVROverlay_011::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T CVROverlay_011::GetOverlayRenderingPid(unsigned long long)
 T CVROverlay_011::GetOverlayTexture(unsigned long long, void**, void*, unsigned int*, unsigned int*, unsigned int*, vr::EGraphicsAPIConvention*, vr::EColorSpace*)
 T CVROverlay_011::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T CVROverlay_011::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T CVROverlay_011::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T CVROverlay_011::GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 T CVROverlay_011::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T CVROverlay_011::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T CVROverlay_011::GetOverlayWidthInMeters(unsigned long long, float*)
 T CVROverlay_011::GetPrimaryDashboardDevice()
 T CVROverlay_011::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T CVROverlay_011::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T CVROverlay_011::HideKeyboard()
 T CVROverlay_011::HideOverlay(unsigned long long)
 T CVROverlay_011::IsActiveDashboardOverlay(unsigned long long)
 T CVROverlay_011::IsDashboardVisible()
 T CVROverlay_011::IsHoverTargetOverlay(unsigned long long)
 T CVROverlay_011::IsOverlayVisible(unsigned long long)
 T CVROverlay_011::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T CVROverlay_011::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T CVROverlay_011::ReleaseNativeOverlayHandle(unsigned long long, void*)
 T CVROverlay_011::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T CVROverlay_011::SetGamepadFocusOverlay(unsigned long long)
 T CVROverlay_011::SetHighQualityOverlay(unsigned long long)
 T CVROverlay_011::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T CVROverlay_011::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_011::SetOverlayAlpha(unsigned long long, float)
 T CVROverlay_011::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T CVROverlay_011::SetOverlayColor(unsigned long long, float, float, float)
 T CVROverlay_011::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T CVROverlay_011::SetOverlayFromFile(unsigned long long, char const*)
 T CVROverlay_011::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T CVROverlay_011::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T CVROverlay_011::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T CVROverlay_011::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T CVROverlay_011::SetOverlayRenderingPid(unsigned long long, unsigned int)
 T CVROverlay_011::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T CVROverlay_011::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T CVROverlay_011::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T CVROverlay_011::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T CVROverlay_011::SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 T CVROverlay_011::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T CVROverlay_011::SetOverlayWidthInMeters(unsigned long long, float)
 T CVROverlay_011::ShowDashboard(char const*)
 T CVROverlay_011::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_011::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T CVROverlay_011::ShowOverlay(unsigned long long)
 T CVRPathRegistry::BLoadFromFile()
 T CVRPathRegistry::BSaveToFile() const
 T CVRPathRegistry::CVRPathRegistry()
 T CVRPathRegistry::GetOpenVRConfigPath()
 T CVRPathRegistry::GetPaths(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, char const*, char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
 T CVRPathRegistry::GetVRPathRegistryFilename()
 T CVRPathRegistry::SetConfigPath(char const*)
 T CVRPathRegistry::SetLogPath(char const*)
 T CVRPathRegistry::SetRuntimePath(char const*)
 T CVRRenderModels_001::FreeRenderModel(RenderModel001_t*)
 T CVRRenderModels_001::GetComponentButtonMask(char const*, char const*)
 T CVRRenderModels_001::GetComponentCount(char const*)
 T CVRRenderModels_001::GetComponentName(char const*, unsigned int, char*, unsigned int)
 T CVRRenderModels_001::GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 T CVRRenderModels_001::GetComponentState(char const*, char const*, vr::VRControllerState001_t, vr::RenderModel_ComponentState_t*)
 T CVRRenderModels_001::GetRenderModelCount()
 T CVRRenderModels_001::GetRenderModelName(unsigned int, char*, unsigned int)
 T CVRRenderModels_001::LoadRenderModel(char const*, RenderModel001_t*)
 T CVRRenderModels_002::FreeRenderModel(vr::RenderModel_t*)
 T CVRRenderModels_002::FreeTexture(vr::RenderModel_TextureMap_t*)
 T CVRRenderModels_002::GetComponentButtonMask(char const*, char const*)
 T CVRRenderModels_002::GetComponentCount(char const*)
 T CVRRenderModels_002::GetComponentName(char const*, unsigned int, char*, unsigned int)
 T CVRRenderModels_002::GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 T CVRRenderModels_002::GetComponentState(char const*, char const*, vr::VRControllerState001_t const*, vr::RenderModel_ComponentState_t*)
 T CVRRenderModels_002::GetRenderModelCount()
 T CVRRenderModels_002::GetRenderModelName(unsigned int, char*, unsigned int)
 T CVRRenderModels_002::LoadRenderModel(char const*, vr::RenderModel_t**)
 T CVRRenderModels_002::LoadTexture(int, vr::RenderModel_TextureMap_t**)
 T CVRRenderModels_002::RenderModelHasComponent(char const*, char const*)
 T CVRRenderModels_003::FreeRenderModel(vr::RenderModel_t*)
 T CVRRenderModels_003::FreeTexture(vr::RenderModel_TextureMap_t*)
 T CVRRenderModels_003::FreeTextureD3D11(void*)
 T CVRRenderModels_003::GetComponentButtonMask(char const*, char const*)
 T CVRRenderModels_003::GetComponentCount(char const*)
 T CVRRenderModels_003::GetComponentName(char const*, unsigned int, char*, unsigned int)
 T CVRRenderModels_003::GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 T CVRRenderModels_003::GetComponentState(char const*, char const*, vr::VRControllerState001_t const*, vr::RenderModel_ComponentState_t*)
 T CVRRenderModels_003::GetRenderModelCount()
 T CVRRenderModels_003::GetRenderModelName(unsigned int, char*, unsigned int)
 T CVRRenderModels_003::LoadRenderModel_Async(char const*, vr::RenderModel_t**)
 T CVRRenderModels_003::LoadTextureD3D11_Async(int, void*, void**)
 T CVRRenderModels_003::LoadTexture_Async(int, vr::RenderModel_TextureMap_t**)
 T CVRRenderModels_003::RenderModelHasComponent(char const*, char const*)
 T CVRRenderModels_004::FreeRenderModel(vr::RenderModel_t*)
 T CVRRenderModels_004::FreeTexture(vr::RenderModel_TextureMap_t*)
 T CVRRenderModels_004::FreeTextureD3D11(void*)
 T CVRRenderModels_004::GetComponentButtonMask(char const*, char const*)
 T CVRRenderModels_004::GetComponentCount(char const*)
 T CVRRenderModels_004::GetComponentName(char const*, unsigned int, char*, unsigned int)
 T CVRRenderModels_004::GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 T CVRRenderModels_004::GetComponentState(char const*, char const*, vr::VRControllerState001_t const*, vr::RenderModel_ControllerMode_State_t const*, vr::RenderModel_ComponentState_t*)
 T CVRRenderModels_004::GetRenderModelCount()
 T CVRRenderModels_004::GetRenderModelName(unsigned int, char*, unsigned int)
 T CVRRenderModels_004::LoadIntoTextureD3D11_Async(int, void*)
 T CVRRenderModels_004::LoadRenderModel_Async(char const*, vr::RenderModel_t**)
 T CVRRenderModels_004::LoadTextureD3D11_Async(int, void*, void**)
 T CVRRenderModels_004::LoadTexture_Async(int, vr::RenderModel_TextureMap_t**)
 T CVRRenderModels_004::RenderModelHasComponent(char const*, char const*)
 T CVRSharedState::BInit(CVRSharedState::SharedStateRole, unsigned int, char const*, char const*)
 T CVRSharedState::Cleanup()
 T CVRSharedState::GetSharedStatePointer()
 T CVRSharedStatePtrBase::CVRSharedStatePtrBase(CVRSharedState*)
 T CVRSharedStatePtrBase::GetSharedStatePointer()
 T CVRSharedStatePtrBase::~CVRSharedStatePtrBase()
 T CVRSystemLatest::AcknowledgeQuit_Exiting()
 T CVRSystemLatest::AcknowledgeQuit_UserPrompt()
 T CVRSystemLatest::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 T CVRSystemLatest::CaptureInputFocus()
 T CVRSystemLatest::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystemLatest::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystemLatest::GenerateLocalMouseEvents(unsigned int, float, float, vr::VRControllerState001_t const&, bool, unsigned long long, unsigned long long, bool, bool, bool)
 T CVRSystemLatest::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystemLatest::GetChaperoneDataRefreshIndex() const
 T CVRSystemLatest::GetCompositorError()
 T CVRSystemLatest::GetCompositorProcessId()
 T CVRSystemLatest::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystemLatest::GetControllerRoleForTrackedDeviceIndex(unsigned int)
 T CVRSystemLatest::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystemLatest::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystemLatest::GetControllerStateWithPoseInternal(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystemLatest::GetD3D9AdapterIndex()
 T CVRSystemLatest::GetDXGIOutputInfo(int*)
 T CVRSystemLatest::GetDXGIOutputInfo(int*, int*)
 T CVRSystemLatest::GetDashboardProcessId()
 T CVRSystemLatest::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystemLatest::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystemLatest::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystemLatest::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystemLatest::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystemLatest::GetHoverTargetOverlay()
 T CVRSystemLatest::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetMCImage(unsigned int*, unsigned int*, unsigned int*, void*, unsigned int)
 T CVRSystemLatest::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystemLatest::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystemLatest::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystemLatest::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystemLatest::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystemLatest::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystemLatest::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystemLatest::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystemLatest::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystemLatest::GetTrackedDeviceClass(unsigned int)
 T CVRSystemLatest::GetTrackedDeviceIndexForControllerRole(vr::ETrackedControllerRole)
 T CVRSystemLatest::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystemLatest::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystemLatest::GetZeroPoseFromDevicePose(VRTrackingState_Pose_t const&, vr::HmdMatrix34_t*) const
 T CVRSystemLatest::HandleAutomaticControllerOverlayInteractionAsMouse(unsigned int, vr::VROverlayEventSettings_t const*, unsigned int, vr::ETrackingUniverseOrigin, vr::TrackedDevicePose_t*, unsigned int, unsigned long long, vr::HmdVector3_t*, unsigned int*, bool)
 T CVRSystemLatest::HasClientProvider() const
 T CVRSystemLatest::IncrementChaperoneDataRefreshIndex()
 T CVRSystemLatest::IsDisplayOnDesktop()
 T CVRSystemLatest::IsInputFocusCapturedByAnotherProcess()
 T CVRSystemLatest::IsTrackedDeviceConnected(unsigned int)
 T CVRSystemLatest::PerformFirmwareUpdate(unsigned int)
 T CVRSystemLatest::PollNextEvent(vr::VREvent_t*, unsigned int)
 T CVRSystemLatest::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, unsigned int, vr::TrackedDevicePose_t*)
 T CVRSystemLatest::PollNextEventWithPoseInternal(vr::ETrackingUniverseOrigin, vr::VREvent_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned long long)
 T CVRSystemLatest::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T CVRSystemLatest::PostGlobalEvent(vr::VREvent_t const&, unsigned int)
 T CVRSystemLatest::PostOverlayEvent(unsigned long long, vr::VREvent_t const&)
 T CVRSystemLatest::PostVsyncEvent(float, unsigned long long)
 T CVRSystemLatest::PredictRawPose(vr::ETrackingUniverseOrigin, double, vr::ChaperoneInfo*, VRTrackingState_DeviceInfo_t const&, VRTrackingState_Pose_t const&, vr::TrackedDevicePose_t*)
 T CVRSystemLatest::PushOverlayEvent(VRTrackingState_Event_t, unsigned long long)
 T CVRSystemLatest::ReleaseInputFocus()
 T CVRSystemLatest::Reset(CVRClient*, CRenderModelManager*, vr::IVRControlPanel*)
 T CVRSystemLatest::ResetSeatedZeroPose()
 T CVRSystemLatest::SetAbsoluteTrackingPoseOffset(vr::HmdMatrix34_t const*)
 T CVRSystemLatest::SetClientProvider(vr::IClientTrackedDeviceProvider*)
 T CVRSystemLatest::SetCompositorError(vr::EVRInitError)
 T CVRSystemLatest::SetDashboardProcessId(unsigned int)
 T CVRSystemLatest::SetDisplayVisibility(bool)
 T CVRSystemLatest::SetSceneFocusProcess(unsigned int)
 T CVRSystemLatest::ShouldBlockThisEventForThisProcess(vr::VREvent_t const&, unsigned long long, unsigned long long, unsigned int)
 T CVRSystemLatest::ThisProcessIsCompositor()
 T CVRSystemLatest::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_001::AttachToWindow(void*)
 T CVRSystem_001::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_001::FreeRenderModel(RenderModel001_t*)
 T CVRSystem_001::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetD3D9AdapterIndex()
 T CVRSystem_001::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_001::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_001::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_001::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_001::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_001::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_001::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_001::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_001::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_001::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_001::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_001::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_001::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_001::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_001::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_001::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_001::LoadRenderModel(char const*, RenderModel001_t*)
 T CVRSystem_001::PollNextEvent(VREvent001_t*)
 T CVRSystem_001::ResetSeatedZeroPose()
 T CVRSystem_002::AttachToWindow(void*)
 T CVRSystem_002::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_002::FreeRenderModel(RenderModel001_t*)
 T CVRSystem_002::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetD3D9AdapterIndex()
 T CVRSystem_002::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_002::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_002::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_002::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_002::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_002::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_002::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_002::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_002::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_002::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_002::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_002::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_002::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_002::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_002::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_002::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_002::LoadRenderModel(char const*, RenderModel001_t*)
 T CVRSystem_002::PollNextEvent(VREvent001_t*)
 T CVRSystem_002::ResetSeatedZeroPose()
 T CVRSystem_003::AttachToWindow(void*)
 T CVRSystem_003::CaptureInputFocus()
 T CVRSystem_003::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_003::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_003::FreeRenderModel(RenderModel001_t*)
 T CVRSystem_003::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_003::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_003::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_003::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_003::GetD3D9AdapterIndex()
 T CVRSystem_003::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_003::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_003::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_003::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_003::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_003::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_003::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_003::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_003::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_003::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_003::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_003::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_003::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_003::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_003::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_003::HandleControllerOverlayInteractionAsMouse(vr::Compositor_OverlaySettings const&, vr::HmdVector2_t, vr::HmdVector2_t, unsigned int, vr::EVRControllerEventOutputType)
 T CVRSystem_003::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_003::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_003::LoadRenderModel(char const*, RenderModel001_t*)
 T CVRSystem_003::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_003::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_003::ReleaseInputFocus()
 T CVRSystem_003::ResetSeatedZeroPose()
 T CVRSystem_003::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_004::AttachToWindow(void*)
 T CVRSystem_004::CaptureInputFocus()
 T CVRSystem_004::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_004::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_004::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_004::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_004::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_004::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_004::GetD3D9AdapterIndex()
 T CVRSystem_004::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_004::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_004::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_004::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_004::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_004::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_004::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_004::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_004::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_004::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_004::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_004::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_004::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_004::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_004::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_004::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_004::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_004::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_004::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_004::ReleaseInputFocus()
 T CVRSystem_004::ResetSeatedZeroPose()
 T CVRSystem_004::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_005::AttachToWindow(void*)
 T CVRSystem_005::CaptureInputFocus()
 T CVRSystem_005::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_005::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_005::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_005::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_005::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_005::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_005::GetD3D9AdapterIndex()
 T CVRSystem_005::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_005::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_005::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_005::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_005::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_005::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_005::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_005::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_005::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_005::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_005::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_005::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_005::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_005::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_005::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_005::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_005::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_005::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_005::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_005::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_005::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_005::ReleaseInputFocus()
 T CVRSystem_005::ResetSeatedZeroPose()
 T CVRSystem_005::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_006::AttachToWindow(void*)
 T CVRSystem_006::CaptureInputFocus()
 T CVRSystem_006::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_006::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_006::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_006::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_006::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_006::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_006::GetD3D9AdapterIndex()
 T CVRSystem_006::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_006::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_006::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_006::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_006::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_006::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_006::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_006::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_006::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_006::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_006::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_006::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_006::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_006::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_006::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_006::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_006::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_006::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_006::IsDisplayOnDesktop()
 T CVRSystem_006::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_006::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_006::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_006::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_006::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_006::ReleaseInputFocus()
 T CVRSystem_006::ResetSeatedZeroPose()
 T CVRSystem_006::SetDisplayVisibility(bool)
 T CVRSystem_006::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_007::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const&, vr::HmdMatrix34_t const&)
 T CVRSystem_007::AttachToWindow(void*)
 T CVRSystem_007::CaptureInputFocus()
 T CVRSystem_007::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_007::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_007::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_007::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_007::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_007::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_007::GetD3D9AdapterIndex()
 T CVRSystem_007::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_007::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_007::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_007::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_007::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_007::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_007::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_007::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_007::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_007::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_007::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_007::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_007::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_007::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_007::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_007::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_007::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_007::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_007::IsDisplayOnDesktop()
 T CVRSystem_007::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_007::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_007::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_007::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_007::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_007::ReleaseInputFocus()
 T CVRSystem_007::ResetSeatedZeroPose()
 T CVRSystem_007::SetDisplayVisibility(bool)
 T CVRSystem_007::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_008::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 T CVRSystem_008::AttachToWindow(void*)
 T CVRSystem_008::CaptureInputFocus()
 T CVRSystem_008::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_008::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_008::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_008::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_008::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_008::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_008::GetD3D9AdapterIndex()
 T CVRSystem_008::GetDXGIOutputInfo(int*, int*)
 T CVRSystem_008::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_008::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_008::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T CVRSystem_008::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_008::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_008::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_008::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_008::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_008::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_008::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_008::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_008::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_008::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_008::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_008::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_008::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_008::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T CVRSystem_008::IsDisplayOnDesktop()
 T CVRSystem_008::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_008::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_008::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_008::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_008::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_008::ReleaseInputFocus()
 T CVRSystem_008::ResetSeatedZeroPose()
 T CVRSystem_008::SetDisplayVisibility(bool)
 T CVRSystem_008::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_009::AcknowledgeQuit_Exiting()
 T CVRSystem_009::AcknowledgeQuit_UserPrompt()
 T CVRSystem_009::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 T CVRSystem_009::CaptureInputFocus()
 T CVRSystem_009::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_009::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_009::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_009::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_009::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_009::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_009::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_009::GetD3D9AdapterIndex()
 T CVRSystem_009::GetDXGIOutputInfo(int*)
 T CVRSystem_009::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_009::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_009::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_009::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_009::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_009::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_009::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_009::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_009::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_009::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_009::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_009::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_009::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_009::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_009::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_009::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_009::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_009::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_009::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_009::IsDisplayOnDesktop()
 T CVRSystem_009::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_009::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_009::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_009::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_009::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_009::ReleaseInputFocus()
 T CVRSystem_009::ResetSeatedZeroPose()
 T CVRSystem_009::SetDisplayVisibility(bool)
 T CVRSystem_009::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_010::AcknowledgeQuit_Exiting()
 T CVRSystem_010::AcknowledgeQuit_UserPrompt()
 T CVRSystem_010::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 T CVRSystem_010::CaptureInputFocus()
 T CVRSystem_010::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_010::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_010::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_010::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_010::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_010::GetControllerRoleForTrackedDeviceIndex(unsigned int)
 T CVRSystem_010::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_010::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_010::GetD3D9AdapterIndex()
 T CVRSystem_010::GetDXGIOutputInfo(int*)
 T CVRSystem_010::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_010::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_010::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_010::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_010::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_010::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_010::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_010::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_010::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_010::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_010::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_010::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_010::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_010::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_010::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_010::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_010::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_010::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_010::GetTrackedDeviceIndexForControllerRole(vr::ETrackedControllerRole)
 T CVRSystem_010::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_010::IsDisplayOnDesktop()
 T CVRSystem_010::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_010::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_010::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_010::PerformanceTestEnableCapture(bool)
 T CVRSystem_010::PerformanceTestReportFidelityLevelChange(int)
 T CVRSystem_010::PollNextEvent(vr::VREvent_t*)
 T CVRSystem_010::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_010::ReleaseInputFocus()
 T CVRSystem_010::ResetSeatedZeroPose()
 T CVRSystem_010::SetDisplayVisibility(bool)
 T CVRSystem_010::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRSystem_011::AcknowledgeQuit_Exiting()
 T CVRSystem_011::AcknowledgeQuit_UserPrompt()
 T CVRSystem_011::ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 T CVRSystem_011::CaptureInputFocus()
 T CVRSystem_011::ComputeDistortion(vr::EVREye, float, float)
 T CVRSystem_011::DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 T CVRSystem_011::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_011::GetButtonIdNameFromEnum(vr::EVRButtonId)
 T CVRSystem_011::GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 T CVRSystem_011::GetControllerRoleForTrackedDeviceIndex(unsigned int)
 T CVRSystem_011::GetControllerState(unsigned int, vr::VRControllerState001_t*)
 T CVRSystem_011::GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 T CVRSystem_011::GetD3D9AdapterIndex()
 T CVRSystem_011::GetDXGIOutputInfo(int*)
 T CVRSystem_011::GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 T CVRSystem_011::GetEventTypeNameFromEnum(vr::EVREventType)
 T CVRSystem_011::GetEyeToHeadTransform(vr::EVREye)
 T CVRSystem_011::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_011::GetHiddenAreaMesh(vr::EVREye)
 T CVRSystem_011::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_011::GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_011::GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 T CVRSystem_011::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 T CVRSystem_011::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 T CVRSystem_011::GetRawZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_011::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 T CVRSystem_011::GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 T CVRSystem_011::GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T CVRSystem_011::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T CVRSystem_011::GetTimeSinceLastVsync(float*, unsigned long long*)
 T CVRSystem_011::GetTrackedDeviceActivityLevel(unsigned int)
 T CVRSystem_011::GetTrackedDeviceClass(unsigned int)
 T CVRSystem_011::GetTrackedDeviceIndexForControllerRole(vr::ETrackedControllerRole)
 T CVRSystem_011::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T CVRSystem_011::IsDisplayOnDesktop()
 T CVRSystem_011::IsInputFocusCapturedByAnotherProcess()
 T CVRSystem_011::IsTrackedDeviceConnected(unsigned int)
 T CVRSystem_011::PerformFirmwareUpdate(unsigned int)
 T CVRSystem_011::PerformanceTestEnableCapture(bool)
 T CVRSystem_011::PerformanceTestReportFidelityLevelChange(int)
 T CVRSystem_011::PollNextEvent(vr::VREvent_t*, unsigned int)
 T CVRSystem_011::PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, unsigned int, vr::TrackedDevicePose_t*)
 T CVRSystem_011::ReleaseInputFocus()
 T CVRSystem_011::ResetSeatedZeroPose()
 T CVRSystem_011::SetDisplayVisibility(bool)
 T CVRSystem_011::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 T CVRTrackedCameraExternalService::CVRTrackedCameraExternalService()
 T CVRTrackedCameraExternalService::Init(CVRTrackedCameraExternalService::Role, unsigned int)
 T CVRTrackedCameraExternalService::~CVRTrackedCameraExternalService()
 T CVRTrackedCameraExternalServicePtrBase::CVRTrackedCameraExternalServicePtrBase(CVRTrackedCameraExternalService*, unsigned int)
 T CVRTrackedCameraExternalServicePtrBase::~CVRTrackedCameraExternalServicePtrBase()
 T CVRTrackedCameraExternalServiceWritablePtr::operator->()
 T CVRTrackedCameraStream::CVRTrackedCameraStream()
 T CVRTrackedCameraStream::Cleanup()
 T CVRTrackedCameraStream::GetFrameBuffer(int)
 T CVRTrackedCameraStream::GetFrameBufferCount()
 T CVRTrackedCameraStream::Init(CVRTrackedCameraStream::Role, unsigned int)
 T CVRTrackedCameraStream::InitFrameBuffering(CVRTrackedCameraStream::Role, int, int)
 T CVRTrackedCameraStream::~CVRTrackedCameraStream()
 T CVRTrackedCameraStreamPtrBase::CVRTrackedCameraStreamPtrBase(CVRTrackedCameraStream*, unsigned int)
 T CVRTrackedCameraStreamPtrBase::~CVRTrackedCameraStreamPtrBase()
 T CVRTrackedCameraStreamWritablePtr::operator->()
 T CVRTrackedCamera_002::AcquireVideoStreamingService(unsigned int, void**)
 T CVRTrackedCamera_002::GetCameraErrorNameFromEnum(vr::EVRTrackedCameraError)
 T CVRTrackedCamera_002::GetCameraFrameSize(unsigned int, vr::EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*)
 T CVRTrackedCamera_002::GetCameraIntrinisics(unsigned int, vr::EVRTrackedCameraFrameType, vr::HmdVector2_t*, vr::HmdVector2_t*)
 T CVRTrackedCamera_002::GetCameraProjection(unsigned int, vr::EVRTrackedCameraFrameType, float, float, vr::HmdMatrix44_t*)
 T CVRTrackedCamera_002::GetVideoStreamFrameBuffer(void*, vr::EVRTrackedCameraFrameType, void*, unsigned int, vr::CameraVideoStreamFrameHeader_t*, unsigned int)
 T CVRTrackedCamera_002::HasCamera(unsigned int, bool*)
 T CVRTrackedCamera_002::ReleaseVideoStreamingService(void*)
 T ChaperoneInterfaceRegistration<CVRChaperone_001>::GetInterface()
 T ChaperoneInterfaceRegistration<CVRChaperone_001>::~ChaperoneInterfaceRegistration()
 T ChaperoneInterfaceRegistration<CVRChaperone_002>::GetInterface()
 T ChaperoneInterfaceRegistration<CVRChaperone_002>::~ChaperoneInterfaceRegistration()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_001>::GetInterface()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_001>::~ChaperoneSetupInterfaceRegistration()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_002>::GetInterface()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_002>::~ChaperoneSetupInterfaceRegistration()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_003>::GetInterface()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_003>::~ChaperoneSetupInterfaceRegistration()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_004>::GetInterface()
 T ChaperoneSetupInterfaceRegistration<CVRChaperoneSetup_004>::~ChaperoneSetupInterfaceRegistration()
 T CloseLog()
 T CompositorInterfaceRegistration<CVRCompositor_001>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_001>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_002>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_002>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_003>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_003>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_004>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_004>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_005>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_005>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_006>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_006>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_007>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_007>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_008>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_008>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_009>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_009>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_010>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_010>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_011>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_011>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_012>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_012>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_013>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_013>::~CompositorInterfaceRegistration()
 T CompositorInterfaceRegistration<CVRCompositor_014>::GetInterface()
 T CompositorInterfaceRegistration<CVRCompositor_014>::~CompositorInterfaceRegistration()
 T ComputeOverlayIntersectionInternal(VRCompositor_OverlaySettings_t const*, float, vr::HmdVector3_t, vr::HmdVector3_t, vr::HmdVector2_t*, vr::HmdVector3_t*, vr::HmdVector3_t*, float*)
 T ControlPanelInterfaceRegistration<CVRControlPanel_001>::GetInterface()
 T ControlPanelInterfaceRegistration<CVRControlPanel_001>::~ControlPanelInterfaceRegistration()
 T CreateClientDriverProviderAdapter(void* (*)(char const*, int*), vr::IClientDriverHost*, vr::IDriverLog*, int*)
 T CreateOverlayInternal(VRCompositorState_t*, char const*, char const*, unsigned long long*)
 T CreateServerDriverProviderAdapter(void* (*)(char const*, int*), vr::IServerDriverHost*, vr::IDriverLog*, int*)
 T DXGI2::GetDisplayVisibility(int)
 T DriverCompare(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&)
 T EventWriteString(wchar_t const*)
 T FillDataStruct(_finddata_t*)
 T FindAppByKey(VRApplicationsState_t const*, char const*)
 T FindAppByProcessId(VRApplicationsState_t const*, unsigned int)
 T FindInterface(char const*)
 T FindOverlayByKey(VRCompositorState_t const*, char const*, unsigned long long*)
 T FnTableRegistration::~FnTableRegistration()
 T GenericInterfaceRegistration::GetInterface()
 T GenericInterfaceRegistration::~GenericInterfaceRegistration()
 T GetChaperoneInterfaceInternal()
 T GetEnglishStringForHmdError(vr::EVRInitError)
 T GetEnvironmentVariable(char const*)
 T GetFileLength(char const*)
 T GetGenericInterfaceInternal(char const*, vr::EVRInitError*)
 T GetHMDLatestInterfaceInternal()
 T GetHomeDir()
 T GetIDForVRInitError(vr::EVRInitError)
 T GetModuleRelativeRuntimeDir()
 T GetResourceBaseDir()
 T GetStringForCompositorError(vr::EVRCompositorError)
 T GetStringForRenderModelError(vr::EVRRenderModelError)
 T GetStringForVRApplicationTransitionState(vr::EVRApplicationTransitionState)
 T GetStringForVRApplicationType(vr::EVRApplicationType)
 T GetStringForVRApplicationsError(vr::EVRApplicationError)
 T GetStringForVRButtonId(vr::EVRButtonId)
 T GetStringForVRControllerAxisType(vr::EVRControllerAxisType)
 T GetStringForVREventType(vr::EVREventType)
 T GetStringForVRMsgType(VRMsgType)
 T GetStringForVROverlayError(vr::EVROverlayError)
 T GetStringForVRSettingsError(vr::EVRSettingsError)
 T GetStringForVRTrackedCameraError(vr::EVRTrackedCameraError)
 T GetSystemTicksFromTime(double)
 T GetSystemTime()
 T GetSystemTimeFrequency()
 T GetSystemTimeFromTicks(unsigned long long)
 T GetSystemTimeInTicks()
 T GetUniverseIDFromHMDLatest()
 T GetVRLogTimeString(bool)
 T HasInterfaceAdapter(char const*)
 T HmdInterfaceRegistration<CHmd_001>::GetInterface()
 T HmdInterfaceRegistration<CHmd_001>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CHmd_002>::GetInterface()
 T HmdInterfaceRegistration<CHmd_002>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CHmd_003>::GetInterface()
 T HmdInterfaceRegistration<CHmd_003>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CHmd_004>::GetInterface()
 T HmdInterfaceRegistration<CHmd_004>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CHmd_005>::GetInterface()
 T HmdInterfaceRegistration<CHmd_005>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CHmd_006>::GetInterface()
 T HmdInterfaceRegistration<CHmd_006>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_001>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_001>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_002>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_002>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_003>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_003>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_004>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_004>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_005>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_005>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_006>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_006>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_007>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_007>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_008>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_008>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_009>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_009>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_010>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_010>::~HmdInterfaceRegistration()
 T HmdInterfaceRegistration<CVRSystem_011>::GetInterface()
 T HmdInterfaceRegistration<CVRSystem_011>::~HmdInterfaceRegistration()
 T HmdMatrix_GetRotationEuler(vr::HmdMatrix34_t const&)
 T HmdSystemFactory
 T HmdVector2FromJson(Json::Value const&, vr::HmdVector2_t&)
 T HmdVector2ToJson(vr::HmdVector2_t const&)
 T HmdVector3FromJson(Json::Value const&, vr::HmdVector3_t&)
 T HmdVector3ToJson(vr::HmdVector3_t const&)
 T IHmdSystem_002::Cleanup()
 T IHmdSystem_002::GetCurrentHmd(char const*)
 T IHmdSystem_002::GetGenericInterface(char const*, vr::EVRInitError*)
 T IHmdSystem_002::Init(char const*, char const*)
 T IHmdSystem_002::IsInterfaceVersionValid(char const*)
 T IHmdSystem_003::BIsHmdPresent()
 T IHmdSystem_003::Cleanup()
 T IHmdSystem_003::GetCurrentHmd(char const*)
 T IHmdSystem_003::GetGenericInterface(char const*, vr::EVRInitError*)
 T IHmdSystem_003::GetStringForHmdError(vr::EVRInitError)
 T IHmdSystem_003::Init(char const*, char const*)
 T IHmdSystem_003::IsInterfaceVersionValid(char const*)
 T IPC::BinarySemaphore::Destroy()
 T IPC::BinarySemaphore::Init(char const*, bool, bool*, bool)
 T IPC::BinarySemaphore::Lock(unsigned int)
 T IPC::BinarySemaphore::Release()
 T IPC::BinarySemaphore::~BinarySemaphore()
 T IPC::CreateEvent(char const*, bool, bool, bool*)
 T IPC::CreateMutex(char const*, bool, bool*)
 T IPC::CreateSharedMem(char const*, unsigned int, IPC::ISharedMem::Access)
 T IPC::ISyncObject::GetOpaque()
 T IPC::PosixEvent::Destroy()
 T IPC::PosixEvent::Init(char const*, bool, bool, bool*, bool)
 T IPC::PosixEvent::ResetEvent()
 T IPC::PosixEvent::SetEvent()
 T IPC::PosixEvent::Wait(unsigned int)
 T IPC::PosixEvent::~PosixEvent()
 T IPC::PosixMutex::Destroy()
 T IPC::PosixMutex::Init(char const*, bool, bool*, bool)
 T IPC::PosixMutex::Release()
 T IPC::PosixMutex::Wait(unsigned int)
 T IPC::PosixMutex::~PosixMutex()
 T IPC::PosixSharedMemory::Destroy()
 T IPC::PosixSharedMemory::Init(char const*, unsigned int, IPC::ISharedMem::Access, bool*, bool)
 T IPC::PosixSharedMemory::IsValid() const
 T IPC::PosixSharedMemory::Pointer() const
 T IPC::PosixSharedMemory::~PosixSharedMemory()
 T IPC::crc32(unsigned int, void*, unsigned int)
 T InitLog(char const*, char const*)
 T InitSystemBaseTimeTicks(unsigned long long)
 T InitializeInterfaceAdapters()
 T InitializeInterfaceFnTables()
 T InterfaceRegistrationBase::InterfaceRegistrationBase(char const*)
 T InterfaceRegistrationBase::~InterfaceRegistrationBase()
 T IsPosix()
 T Json::Exception::what() const
 T Json::Exception::~Exception()
 T Json::LogicError::~LogicError()
 T Json::Reader::Reader()
 T Json::Reader::addComment(char const*, char const*, Json::CommentPlacement)
 T Json::Reader::addError(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Json::Reader::Token&, char const*)
 T Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&)
 T Json::Reader::decodeNumber(Json::Reader::Token&)
 T Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&)
 T Json::Reader::decodeString(Json::Reader::Token&)
 T Json::Reader::decodeString(Json::Reader::Token&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
 T Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&)
 T Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&)
 T Json::Reader::getFormattedErrorMessages() const
 T Json::Reader::getLocationSnippet(char const*) const
 T Json::Reader::parse(char const*, char const*, Json::Value&, bool)
 T Json::Reader::parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Json::Value&, bool)
 T Json::Reader::readArray(Json::Reader::Token&)
 T Json::Reader::readComment()
 T Json::Reader::readObject(Json::Reader::Token&)
 T Json::Reader::readToken(Json::Reader::Token&)
 T Json::Reader::readValue()
 T Json::RuntimeError::~RuntimeError()
 T Json::StyledWriter::StyledWriter()
 T Json::StyledWriter::isMultineArray(Json::Value const&)
 T Json::StyledWriter::write(Json::Value const&)
 T Json::StyledWriter::writeArrayValue(Json::Value const&)
 T Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
 T Json::StyledWriter::writeCommentBeforeValue(Json::Value const&)
 T Json::StyledWriter::writeValue(Json::Value const&)
 T Json::StyledWriter::writeWithIndent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Json::StyledWriter::~StyledWriter()
 T Json::Value::CZString::CZString(Json::Value::CZString const&)
 T Json::Value::CommentInfo::setComment(char const*, unsigned long)
 T Json::Value::Value(Json::Value const&)
 T Json::Value::Value(Json::ValueType)
 T Json::Value::Value(bool)
 T Json::Value::Value(char const*)
 T Json::Value::Value(double)
 T Json::Value::Value(int)
 T Json::Value::Value(long long)
 T Json::Value::Value(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Json::Value::Value(unsigned long long)
 T Json::Value::append(Json::Value const&)
 T Json::Value::asBool() const
 T Json::Value::asDouble() const
 T Json::Value::asInt() const
 T Json::Value::asInt64() const
 T Json::Value::asLargestInt() const
 T Json::Value::asLargestUInt() const
 T Json::Value::asString() const
 T Json::Value::asUInt() const
 T Json::Value::asUInt64() const
 T Json::Value::begin() const
 T Json::Value::end() const
 T Json::Value::find(char const*, char const*) const
 T Json::Value::get(char const*, Json::Value const&) const
 T Json::Value::getComment(Json::CommentPlacement) const
 T Json::Value::getMemberNames() const
 T Json::Value::getString(char const**, char const**) const
 T Json::Value::hasComment(Json::CommentPlacement) const
 T Json::Value::isArray() const
 T Json::Value::isMember(char const*) const
 T Json::Value::isObject() const
 T Json::Value::operator!() const
 T Json::Value::operator=(Json::Value)
 T Json::Value::operator[](char const*)
 T Json::Value::operator[](char const*) const
 T Json::Value::operator[](int)
 T Json::Value::operator[](int) const
 T Json::Value::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Json::Value::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
 T Json::Value::operator[](unsigned int)
 T Json::Value::operator[](unsigned int) const
 T Json::Value::resolveReference(char const*, char const*)
 T Json::Value::setComment(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Json::CommentPlacement)
 T Json::Value::setOffsetLimit(unsigned long)
 T Json::Value::setOffsetStart(unsigned long)
 T Json::Value::size() const
 T Json::Value::swapPayload(Json::Value&)
 T Json::Value::type() const
 T Json::Value::~Value()
 T Json::ValueIteratorBase::deref() const
 T Json::ValueIteratorBase::increment()
 T Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
 T Json::ValueIteratorBase::name() const
 T Json::Writer::~Writer()
 T Json::throwRuntimeError(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Json::valueToQuotedString(char const*)
 T Json::valueToString(double)
 T Json::valueToString(double, bool, unsigned int)
 T Json::valueToString(long long)
 T Json::valueToString(unsigned long long)
 T LiquidVR::GetDisplayVisibility(int, LiquidVR::DisplayInfo*)
 T LiquidVR::TopologyChanged()
 T Log(LogLevel, char const*, ...)
 T Log(char const*, ...)
 T NotificationsInterfaceRegistration<CVRNotifications_001>::GetInterface()
 T NotificationsInterfaceRegistration<CVRNotifications_001>::~NotificationsInterfaceRegistration()
 T NotifyVR_InitSuccess()
 T NotifyVR_Shutdown()
 T NvAPI::GetDisplayVisibility(int)
 T OverlayInterfaceRegistration<CVROverlay_001>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_001>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_002>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_002>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_003>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_003>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_004>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_004>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_005>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_005>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_006>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_006>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_007>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_007>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_008>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_008>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_009>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_009>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_010>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_010>::~OverlayInterfaceRegistration()
 T OverlayInterfaceRegistration<CVROverlay_011>::GetInterface()
 T OverlayInterfaceRegistration<CVROverlay_011>::~OverlayInterfaceRegistration()
 T Path_Compact(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_Exists(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_FilePathToUrl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_FixSlashes(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_GetExecutablePath()
 T Path_GetSlash()
 T Path_GetThisModulePath()
 T Path_GetWorkingDirectory()
 T Path_IsAbsolute(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_IsAppBundle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_IsDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_Join(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_Join(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_MakeAbsolute(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_ReadBinaryFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int*)
 T Path_ReadTextFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_SetWorkingDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_StripDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_StripExtension(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T Path_StripFilename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
 T Path_WriteStringToTextFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
 T Plat_IsInDebugSession()
 T RegisterInterface(char const*, void*)
 T RemoveNotificationsOwnedByOverlay(VRCompositorState_t*, unsigned long long)
 T RenderModelsInterfaceRegistration<CVRRenderModels_001>::GetInterface()
 T RenderModelsInterfaceRegistration<CVRRenderModels_001>::RenderModelsInterfaceRegistration(char const*)
 T RenderModelsInterfaceRegistration<CVRRenderModels_001>::~RenderModelsInterfaceRegistration()
 T RenderModelsInterfaceRegistration<CVRRenderModels_002>::GetInterface()
 T RenderModelsInterfaceRegistration<CVRRenderModels_002>::~RenderModelsInterfaceRegistration()
 T RenderModelsInterfaceRegistration<CVRRenderModels_003>::GetInterface()
 T RenderModelsInterfaceRegistration<CVRRenderModels_003>::~RenderModelsInterfaceRegistration()
 T RenderModelsInterfaceRegistration<CVRRenderModels_004>::GetInterface()
 T RenderModelsInterfaceRegistration<CVRRenderModels_004>::~RenderModelsInterfaceRegistration()
 T RepositionKeyboard(VRCompositorState_t*, vr::TrackedDevicePose_t)
 T ReturnStdString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char*, unsigned int)
 T SetDashboardEnabledInternal(VRCompositorState_t*, bool)
 T SetEnvironmentVariable(char const*, char const*)
 T SetOverlayTransformAbsoluteInternal(VRCompositorState_t*, unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T SharedLib_GetFunction(void*, char const*)
 T SharedLib_Load(char const*)
 T SharedLib_Unload(void*)
 T SortedTrackedDeviceIndicesOfClass(VRTrackingState_t const*, vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 T SteamThreadTools::CThread::CThread()
 T SteamThreadTools::CThread::GetThreadProc()
 T SteamThreadTools::CThread::Init()
 T SteamThreadTools::CThread::IsThreadRunning()
 T SteamThreadTools::CThread::Join(unsigned int)
 T SteamThreadTools::CThread::OnExit()
 T SteamThreadTools::CThread::Start(unsigned int)
 T SteamThreadTools::CThread::ThreadProc(void*)
 T SteamThreadTools::CThread::~CThread()
 T SteamThreadTools::CThreadEvent::CThreadEvent(bool)
 T SteamThreadTools::CThreadEvent::Reset()
 T SteamThreadTools::CThreadEvent::Set()
 T SteamThreadTools::CThreadLocalInt<long>::~CThreadLocalInt()
 T SteamThreadTools::CThreadLocalPtr<SteamThreadTools::CThread>::~CThreadLocalPtr()
 T SteamThreadTools::CThreadMutex::CThreadMutex()
 T SteamThreadTools::CThreadMutex::~CThreadMutex()
 T SteamThreadTools::CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
 T SteamThreadTools::CThreadSyncObject::CreateAnonymousSyncObjectInternal(bool, bool)
 T SteamThreadTools::CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
 T SteamThreadTools::CThreadSyncObject::EnsureSemaphorePostedInternal(int)
 T SteamThreadTools::CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
 T SteamThreadTools::CThreadSyncObject::Wait(unsigned int)
 T SteamThreadTools::CThreadSyncObject::~CThreadSyncObject()
 T StringHasPrefixCaseSensitive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T StringToLower(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T StringToUint64(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T SystemInterfaceRegistration<CHmdSystem_001>::GetInterface()
 T SystemInterfaceRegistration<CHmdSystem_001>::~SystemInterfaceRegistration()
 T SystemInterfaceRegistration<CHmdSystem_004>::GetInterface()
 T SystemInterfaceRegistration<CHmdSystem_004>::~SystemInterfaceRegistration()
 T SystemInterfaceRegistration<CVRClientCore_001>::GetInterface()
 T SystemInterfaceRegistration<CVRClientCore_001>::~SystemInterfaceRegistration()
 T SystemInterfaceRegistration<IHmdSystem_002>::GetInterface()
 T SystemInterfaceRegistration<IHmdSystem_002>::~SystemInterfaceRegistration()
 T SystemInterfaceRegistration<IHmdSystem_003>::GetInterface()
 T SystemInterfaceRegistration<IHmdSystem_003>::~SystemInterfaceRegistration()
 T SystemTimeSleep(unsigned int)
 T ThreadGetCurrentId
 T ThreadGetCurrentProcessId
 T ThreadResumeSignal(int)
 T ThreadSetDebugName
 T ThreadSleep
 T ThreadSuspendSignal(int)
 T TrackedCameraInterfaceRegistration<CVRTrackedCamera_002>::GetInterface()
 T TrackedCameraInterfaceRegistration<CVRTrackedCamera_002>::~TrackedCameraInterfaceRegistration()
 T Uint64ToString(unsigned long long)
 T VRClientCoreFactory
 T WillLog(LogLevel)
 T _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_
 T _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeESA_SA_
 T _ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_
 T _ZNSt3__16vectorIPKcNS_9allocatorIS2_EEEC2IPS2_EET_NS_9enable_ifIXaasr21__is_forward_iteratorIS8_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS8_E9referenceEEE5valueES8_E4typeE
 T __clang_call_terminate
 T _findfirst(char const*, _finddata_t*)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_ApplicationInfo>(unsigned int, unsigned int, CVRMsg_ApplicationInfo&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_ApplicationManifestResponse>(unsigned int, unsigned int, CVRMsg_ApplicationManifestResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CancelApplicationLaunchResponse>(unsigned int, unsigned int, CVRMsg_CancelApplicationLaunchResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorConnectResponse>(unsigned int, unsigned int, CVRMsg_CompositorConnectResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorHandleSystemButtonResponse>(unsigned int, unsigned int, CVRMsg_CompositorHandleSystemButtonResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorHideDashboardResponse>(unsigned int, unsigned int, CVRMsg_CompositorHideDashboardResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorPrepareInternalProcessTransitionResponse>(unsigned int, unsigned int, CVRMsg_CompositorPrepareInternalProcessTransitionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorRequestScreenshotResponse>(unsigned int, unsigned int, CVRMsg_CompositorRequestScreenshotResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorSetOverlayFromFileResponse>(unsigned int, unsigned int, CVRMsg_CompositorSetOverlayFromFileResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CompositorShowDashboardResponse>(unsigned int, unsigned int, CVRMsg_CompositorShowDashboardResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_ComputeDistortionResponse>(unsigned int, unsigned int, CVRMsg_ComputeDistortionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_ConnectResponse>(unsigned int, unsigned int, CVRMsg_ConnectResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_CreateSwapTextureSetResponse>(unsigned int, unsigned int, CVRMsg_CreateSwapTextureSetResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_DriverDebugResponse>(unsigned int, unsigned int, CVRMsg_DriverDebugResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_GetDisplayInfoResponse>(unsigned int, unsigned int, CVRMsg_GetDisplayInfoResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_GetDriverDetailResponse>(unsigned int, unsigned int, CVRMsg_GetDriverDetailResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_GetDriverInfoResponse>(unsigned int, unsigned int, CVRMsg_GetDriverInfoResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_GetPropertyResponse>(unsigned int, unsigned int, CVRMsg_GetPropertyResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_InputCaptureResponse>(unsigned int, unsigned int, CVRMsg_InputCaptureResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_LaunchApplicationResponse>(unsigned int, unsigned int, CVRMsg_LaunchApplicationResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_LaunchInternalProcessResponse>(unsigned int, unsigned int, CVRMsg_LaunchInternalProcessResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_LaunchTemplateApplicationResponse>(unsigned int, unsigned int, CVRMsg_LaunchTemplateApplicationResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_PerformApplicationPrelaunchCheckResponse>(unsigned int, unsigned int, CVRMsg_PerformApplicationPrelaunchCheckResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_QuitProcessResponse>(unsigned int, unsigned int, CVRMsg_QuitProcessResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_SetApplicationOptionsResponse>(unsigned int, unsigned int, CVRMsg_SetApplicationOptionsResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_SetApplicationProcessIdResponse>(unsigned int, unsigned int, CVRMsg_SetApplicationProcessIdResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_SetMasterProcessResponse>(unsigned int, unsigned int, CVRMsg_SetMasterProcessResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_SetNotificationImageResponse>(unsigned int, unsigned int, CVRMsg_SetNotificationImageResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_GetBool_Response>(unsigned int, unsigned int, CVRMsg_Settings_GetBool_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_GetFloat_Response>(unsigned int, unsigned int, CVRMsg_Settings_GetFloat_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_GetInt32_Response>(unsigned int, unsigned int, CVRMsg_Settings_GetInt32_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_GetString_Response>(unsigned int, unsigned int, CVRMsg_Settings_GetString_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_SetValue_Response>(unsigned int, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_Settings_Sync_Response>(unsigned int, unsigned int, CVRMsg_Settings_Sync_Response&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_StartProcessResponse>(unsigned int, unsigned int, CVRMsg_StartProcessResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_EnableResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_EnableResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetDistortionResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetDistortionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetFormatDimensionsResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetFormatDimensionsResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetFrameBoundsResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetFrameBoundsResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetIntrinsicsResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetIntrinsicsResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetProjectionResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetProjectionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_GetVideoStreamFormatResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_GetVideoStreamFormatResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_IsVideoStreamActiveResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_IsVideoStreamActiveResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_PauseVideoStreamResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_PauseVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_ResumeVideoStreamResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_ResumeVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_SetAutoExposureResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_SetAutoExposureResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_SetCompatibilityModeResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_SetCompatibilityModeResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_SetUndistortionResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_SetUndistortionResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_SetVideoStreamFormatResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_SetVideoStreamFormatResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_StartVideoStreamResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_StartVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::ReceiveProtobufMessage<CVRMsg_TrackedCamera_StopVideoStreamResponse>(unsigned int, unsigned int, CVRMsg_TrackedCamera_StopVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_ApplicationManifestRequest, CVRMsg_ApplicationManifestResponse>(unsigned int, CVRMsg_ApplicationManifestRequest const&, unsigned int, CVRMsg_ApplicationManifestResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CancelApplicationLaunch, CVRMsg_CancelApplicationLaunchResponse>(unsigned int, CVRMsg_CancelApplicationLaunch const&, unsigned int, CVRMsg_CancelApplicationLaunchResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorConnect, CVRMsg_CompositorConnectResponse>(unsigned int, CVRMsg_CompositorConnect const&, unsigned int, CVRMsg_CompositorConnectResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorHandleSystemButton, CVRMsg_CompositorHandleSystemButtonResponse>(unsigned int, CVRMsg_CompositorHandleSystemButton const&, unsigned int, CVRMsg_CompositorHandleSystemButtonResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorHideDashboard, CVRMsg_CompositorHideDashboardResponse>(unsigned int, CVRMsg_CompositorHideDashboard const&, unsigned int, CVRMsg_CompositorHideDashboardResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorPrepareInternalProcessTransition, CVRMsg_CompositorPrepareInternalProcessTransitionResponse>(unsigned int, CVRMsg_CompositorPrepareInternalProcessTransition const&, unsigned int, CVRMsg_CompositorPrepareInternalProcessTransitionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorRequestScreenshot, CVRMsg_CompositorRequestScreenshotResponse>(unsigned int, CVRMsg_CompositorRequestScreenshot const&, unsigned int, CVRMsg_CompositorRequestScreenshotResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorSetOverlayFromFile, CVRMsg_CompositorSetOverlayFromFileResponse>(unsigned int, CVRMsg_CompositorSetOverlayFromFile const&, unsigned int, CVRMsg_CompositorSetOverlayFromFileResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CompositorShowDashboard, CVRMsg_CompositorShowDashboardResponse>(unsigned int, CVRMsg_CompositorShowDashboard const&, unsigned int, CVRMsg_CompositorShowDashboardResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_ComputeDistortion, CVRMsg_ComputeDistortionResponse>(unsigned int, CVRMsg_ComputeDistortion const&, unsigned int, CVRMsg_ComputeDistortionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Connect, CVRMsg_ConnectResponse>(unsigned int, CVRMsg_Connect const&, unsigned int, CVRMsg_ConnectResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_CreateSwapTextureSet, CVRMsg_CreateSwapTextureSetResponse>(unsigned int, CVRMsg_CreateSwapTextureSet const&, unsigned int, CVRMsg_CreateSwapTextureSetResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_DriverDebugRequest, CVRMsg_DriverDebugResponse>(unsigned int, CVRMsg_DriverDebugRequest const&, unsigned int, CVRMsg_DriverDebugResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_GetApplicationInfo, CVRMsg_ApplicationInfo>(unsigned int, CVRMsg_GetApplicationInfo const&, unsigned int, CVRMsg_ApplicationInfo&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_GetDisplayInfo, CVRMsg_GetDisplayInfoResponse>(unsigned int, CVRMsg_GetDisplayInfo const&, unsigned int, CVRMsg_GetDisplayInfoResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_GetDriverDetail, CVRMsg_GetDriverDetailResponse>(unsigned int, CVRMsg_GetDriverDetail const&, unsigned int, CVRMsg_GetDriverDetailResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_GetDriverInfo, CVRMsg_GetDriverInfoResponse>(unsigned int, CVRMsg_GetDriverInfo const&, unsigned int, CVRMsg_GetDriverInfoResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_GetProperty, CVRMsg_GetPropertyResponse>(unsigned int, CVRMsg_GetProperty const&, unsigned int, CVRMsg_GetPropertyResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_InputCaptureRequest, CVRMsg_InputCaptureResponse>(unsigned int, CVRMsg_InputCaptureRequest const&, unsigned int, CVRMsg_InputCaptureResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_LaunchApplication, CVRMsg_LaunchApplicationResponse>(unsigned int, CVRMsg_LaunchApplication const&, unsigned int, CVRMsg_LaunchApplicationResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_LaunchInternalProcess, CVRMsg_LaunchInternalProcessResponse>(unsigned int, CVRMsg_LaunchInternalProcess const&, unsigned int, CVRMsg_LaunchInternalProcessResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_LaunchTemplateApplication, CVRMsg_LaunchTemplateApplicationResponse>(unsigned int, CVRMsg_LaunchTemplateApplication const&, unsigned int, CVRMsg_LaunchTemplateApplicationResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_PerformApplicationPrelaunchCheck, CVRMsg_PerformApplicationPrelaunchCheckResponse>(unsigned int, CVRMsg_PerformApplicationPrelaunchCheck const&, unsigned int, CVRMsg_PerformApplicationPrelaunchCheckResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_QuitProcessRequest, CVRMsg_QuitProcessResponse>(unsigned int, CVRMsg_QuitProcessRequest const&, unsigned int, CVRMsg_QuitProcessResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_SetApplicationOptions, CVRMsg_SetApplicationOptionsResponse>(unsigned int, CVRMsg_SetApplicationOptions const&, unsigned int, CVRMsg_SetApplicationOptionsResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_SetApplicationProcessId, CVRMsg_SetApplicationProcessIdResponse>(unsigned int, CVRMsg_SetApplicationProcessId const&, unsigned int, CVRMsg_SetApplicationProcessIdResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_SetMasterProcess, CVRMsg_SetMasterProcessResponse>(unsigned int, CVRMsg_SetMasterProcess const&, unsigned int, CVRMsg_SetMasterProcessResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_SetNotificationImage, CVRMsg_SetNotificationImageResponse>(unsigned int, CVRMsg_SetNotificationImage const&, unsigned int, CVRMsg_SetNotificationImageResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_GetBool, CVRMsg_Settings_GetBool_Response>(unsigned int, CVRMsg_Settings_GetBool const&, unsigned int, CVRMsg_Settings_GetBool_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_GetFloat, CVRMsg_Settings_GetFloat_Response>(unsigned int, CVRMsg_Settings_GetFloat const&, unsigned int, CVRMsg_Settings_GetFloat_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_GetInt32, CVRMsg_Settings_GetInt32_Response>(unsigned int, CVRMsg_Settings_GetInt32 const&, unsigned int, CVRMsg_Settings_GetInt32_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_GetString, CVRMsg_Settings_GetString_Response>(unsigned int, CVRMsg_Settings_GetString const&, unsigned int, CVRMsg_Settings_GetString_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_RemoveKeyInSection, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_RemoveKeyInSection const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_RemoveSection, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_RemoveSection const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_SetBool, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_SetBool const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_SetFloat, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_SetFloat const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_SetInt32, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_SetInt32 const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_SetString, CVRMsg_Settings_SetValue_Response>(unsigned int, CVRMsg_Settings_SetString const&, unsigned int, CVRMsg_Settings_SetValue_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_Settings_Sync, CVRMsg_Settings_Sync_Response>(unsigned int, CVRMsg_Settings_Sync const&, unsigned int, CVRMsg_Settings_Sync_Response&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_StartProcess, CVRMsg_StartProcessResponse>(unsigned int, CVRMsg_StartProcess const&, unsigned int, CVRMsg_StartProcessResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_AcquireVideoStreamingService, CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse>(unsigned int, CVRMsg_TrackedCamera_AcquireVideoStreamingService const&, unsigned int, CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_Enable, CVRMsg_TrackedCamera_EnableResponse>(unsigned int, CVRMsg_TrackedCamera_Enable const&, unsigned int, CVRMsg_TrackedCamera_EnableResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetDistortion, CVRMsg_TrackedCamera_GetDistortionResponse>(unsigned int, CVRMsg_TrackedCamera_GetDistortion const&, unsigned int, CVRMsg_TrackedCamera_GetDistortionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetFormatDimensions, CVRMsg_TrackedCamera_GetFormatDimensionsResponse>(unsigned int, CVRMsg_TrackedCamera_GetFormatDimensions const&, unsigned int, CVRMsg_TrackedCamera_GetFormatDimensionsResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetFrameBounds, CVRMsg_TrackedCamera_GetFrameBoundsResponse>(unsigned int, CVRMsg_TrackedCamera_GetFrameBounds const&, unsigned int, CVRMsg_TrackedCamera_GetFrameBoundsResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetIntrinsics, CVRMsg_TrackedCamera_GetIntrinsicsResponse>(unsigned int, CVRMsg_TrackedCamera_GetIntrinsics const&, unsigned int, CVRMsg_TrackedCamera_GetIntrinsicsResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetProjection, CVRMsg_TrackedCamera_GetProjectionResponse>(unsigned int, CVRMsg_TrackedCamera_GetProjection const&, unsigned int, CVRMsg_TrackedCamera_GetProjectionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetRecommendedUndistortion, CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse>(unsigned int, CVRMsg_TrackedCamera_GetRecommendedUndistortion const&, unsigned int, CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_GetVideoStreamFormat, CVRMsg_TrackedCamera_GetVideoStreamFormatResponse>(unsigned int, CVRMsg_TrackedCamera_GetVideoStreamFormat const&, unsigned int, CVRMsg_TrackedCamera_GetVideoStreamFormatResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_IsVideoStreamActive, CVRMsg_TrackedCamera_IsVideoStreamActiveResponse>(unsigned int, CVRMsg_TrackedCamera_IsVideoStreamActive const&, unsigned int, CVRMsg_TrackedCamera_IsVideoStreamActiveResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_PauseVideoStream, CVRMsg_TrackedCamera_PauseVideoStreamResponse>(unsigned int, CVRMsg_TrackedCamera_PauseVideoStream const&, unsigned int, CVRMsg_TrackedCamera_PauseVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_ReleaseVideoStreamingService, CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse>(unsigned int, CVRMsg_TrackedCamera_ReleaseVideoStreamingService const&, unsigned int, CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_ResumeVideoStream, CVRMsg_TrackedCamera_ResumeVideoStreamResponse>(unsigned int, CVRMsg_TrackedCamera_ResumeVideoStream const&, unsigned int, CVRMsg_TrackedCamera_ResumeVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_SetAutoExposure, CVRMsg_TrackedCamera_SetAutoExposureResponse>(unsigned int, CVRMsg_TrackedCamera_SetAutoExposure const&, unsigned int, CVRMsg_TrackedCamera_SetAutoExposureResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_SetCompatibilityMode, CVRMsg_TrackedCamera_SetCompatibilityModeResponse>(unsigned int, CVRMsg_TrackedCamera_SetCompatibilityMode const&, unsigned int, CVRMsg_TrackedCamera_SetCompatibilityModeResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_SetUndistortion, CVRMsg_TrackedCamera_SetUndistortionResponse>(unsigned int, CVRMsg_TrackedCamera_SetUndistortion const&, unsigned int, CVRMsg_TrackedCamera_SetUndistortionResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_SetVideoStreamFormat, CVRMsg_TrackedCamera_SetVideoStreamFormatResponse>(unsigned int, CVRMsg_TrackedCamera_SetVideoStreamFormat const&, unsigned int, CVRMsg_TrackedCamera_SetVideoStreamFormatResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_StartVideoStream, CVRMsg_TrackedCamera_StartVideoStreamResponse>(unsigned int, CVRMsg_TrackedCamera_StartVideoStream const&, unsigned int, CVRMsg_TrackedCamera_StartVideoStreamResponse&, unsigned int)
 T bool CIPCPipe::SendProtobufMessageAndWaitForResponse<CVRMsg_TrackedCamera_StopVideoStream, CVRMsg_TrackedCamera_StopVideoStreamResponse>(unsigned int, CVRMsg_TrackedCamera_StopVideoStream const&, unsigned int, CVRMsg_TrackedCamera_StopVideoStreamResponse&, unsigned int)
 T bool std::__1::__insertion_sort_incomplete<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T non-virtual thunk to CHmdSystemLatest::AbortTransition()
 T non-virtual thunk to CHmdSystemLatest::DismissDashboard()
 T non-virtual thunk to CHmdSystemLatest::ForceQuitProcess(unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T non-virtual thunk to CHmdSystemLatest::GetCurrentCompositorInterface(char const*)
 T non-virtual thunk to CHmdSystemLatest::GetCurrentDisplayInterface(char const*)
 T non-virtual thunk to CHmdSystemLatest::GetDashboardEnabled()
 T non-virtual thunk to CHmdSystemLatest::GetDriverCount()
 T non-virtual thunk to CHmdSystemLatest::GetDriverDisplayCount(char const*)
 T non-virtual thunk to CHmdSystemLatest::GetDriverDisplayId(char const*, unsigned int, char*, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetDriverDisplayModelNumber(char const*, char const*, char*, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetDriverDisplaySerialNumber(char const*, char const*, char*, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetDriverId(unsigned int, char*, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetDriverInitError(char const*)
 T non-virtual thunk to CHmdSystemLatest::GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T non-virtual thunk to CHmdSystemLatest::GetIPD()
 T non-virtual thunk to CHmdSystemLatest::GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T non-virtual thunk to CHmdSystemLatest::GetSettings(char const*)
 T non-virtual thunk to CHmdSystemLatest::GetSettingsDirtyCount()
 T non-virtual thunk to CHmdSystemLatest::GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 T non-virtual thunk to CHmdSystemLatest::GetTrackedDeviceClass(unsigned int)
 T non-virtual thunk to CHmdSystemLatest::GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 T non-virtual thunk to CHmdSystemLatest::GetVRMonitorState()
 T non-virtual thunk to CHmdSystemLatest::IsTrackedDeviceConnected(unsigned int)
 T non-virtual thunk to CHmdSystemLatest::LoadSharedResource(char const*, char*, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::PostOverlayEvent(unsigned long long, vr::VREvent_t const&)
 T non-virtual thunk to CHmdSystemLatest::PowerOffTrackedDevice(unsigned int)
 T non-virtual thunk to CHmdSystemLatest::PrepareInternalProcessTransition(unsigned int, unsigned int)
 T non-virtual thunk to CHmdSystemLatest::QuitProcess(unsigned int)
 T non-virtual thunk to CHmdSystemLatest::SetDashboardEnabled(bool)
 T non-virtual thunk to CHmdSystemLatest::SetIPD(float)
 T non-virtual thunk to CHmdSystemLatest::SetMasterProcessToThis()
 T non-virtual thunk to CHmdSystemLatest::SetVRMonitorState(vr::EVRState)
 T non-virtual thunk to CHmdSystemLatest::StartAutolaunchOverlays()
 T non-virtual thunk to CHmdSystemLatest::StartVRProcess(char const*, char const**, unsigned int, char const*)
 T non-virtual thunk to CHmdSystemLatest::TopologyChanged()
 T non-virtual thunk to CRenderModelManager::RegisterTextureFilePath(char const*)
 T non-virtual thunk to CVRCompositorClient::BeginFrame_DEPRECATED(vr::EVREye, vr::TrackedDevicePose_t*, unsigned int)
 T non-virtual thunk to CVRCompositorClient::ClearOverlayTexture(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 T non-virtual thunk to CVRCompositorClient::CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 T non-virtual thunk to CVRCompositorClient::CreateOverlay(char const*, char const*, unsigned long long*)
 T non-virtual thunk to CVRCompositorClient::DestroyOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::EndFrame_DEPRECATED(vr::EVREye, void*, vr::VRTextureBounds_t*)
 T non-virtual thunk to CVRCompositorClient::FindOverlay(char const*, unsigned long long*)
 T non-virtual thunk to CVRCompositorClient::GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 T non-virtual thunk to CVRCompositorClient::GetGamepadFocusOverlay()
 T non-virtual thunk to CVRCompositorClient::GetHighQualityOverlay()
 T non-virtual thunk to CVRCompositorClient::GetKeyboardText(char*, unsigned int)
 T non-virtual thunk to CVRCompositorClient::GetOverlayAlpha(unsigned long long, float*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayColor(unsigned long long, float*, float*, float*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 T non-virtual thunk to CVRCompositorClient::GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayRenderingPid(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTexture(unsigned long long, void**, void*, unsigned int*, unsigned int*, unsigned int*, vr::EGraphicsAPIConvention*, vr::EColorSpace*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTextureSize(unsigned long long, unsigned int*, unsigned int*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 T non-virtual thunk to CVRCompositorClient::GetOverlayWidthInMeters(unsigned long long, float*)
 T non-virtual thunk to CVRCompositorClient::GetPrimaryDashboardDevice()
 T non-virtual thunk to CVRCompositorClient::GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 T non-virtual thunk to CVRCompositorClient::HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 T non-virtual thunk to CVRCompositorClient::HideKeyboard()
 T non-virtual thunk to CVRCompositorClient::HideOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::IsActiveDashboardOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::IsDashboardVisible()
 T non-virtual thunk to CVRCompositorClient::IsHoverTargetOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::IsOverlayVisible(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 T non-virtual thunk to CVRCompositorClient::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T non-virtual thunk to CVRCompositorClient::ReleaseNativeOverlayHandle(unsigned long long, void*)
 T non-virtual thunk to CVRCompositorClient::SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 T non-virtual thunk to CVRCompositorClient::SetGamepadFocusOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::SetHighQualityOverlay(unsigned long long)
 T non-virtual thunk to CVRCompositorClient::SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 T non-virtual thunk to CVRCompositorClient::SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayAlpha(unsigned long long, float)
 T non-virtual thunk to CVRCompositorClient::SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 T non-virtual thunk to CVRCompositorClient::SetOverlayColor(unsigned long long, float, float, float)
 T non-virtual thunk to CVRCompositorClient::SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 T non-virtual thunk to CVRCompositorClient::SetOverlayFromFile(unsigned long long, char const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 T non-virtual thunk to CVRCompositorClient::SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 T non-virtual thunk to CVRCompositorClient::SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 T non-virtual thunk to CVRCompositorClient::SetOverlayRenderingPid(unsigned long long, unsigned int)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 T non-virtual thunk to CVRCompositorClient::SetOverlayWidthInMeters(unsigned long long, float)
 T non-virtual thunk to CVRCompositorClient::SetOverlay_DEPRECATED(void*, vr::Compositor_OverlaySettings*)
 T non-virtual thunk to CVRCompositorClient::ShowDashboard(char const*)
 T non-virtual thunk to CVRCompositorClient::ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T non-virtual thunk to CVRCompositorClient::ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 T non-virtual thunk to CVRCompositorClient::ShowOverlay(unsigned long long)
 T non-virtual thunk to CVRSystemLatest::GenerateLocalMouseEvents(unsigned int, float, float, vr::VRControllerState001_t const&, bool, unsigned long long, unsigned long long, bool, bool, bool)
 T non-virtual thunk to CVRSystemLatest::GetCompositorError()
 T non-virtual thunk to CVRSystemLatest::GetCompositorProcessId()
 T non-virtual thunk to CVRSystemLatest::GetDXGIOutputInfo(int*, int*)
 T non-virtual thunk to CVRSystemLatest::GetDashboardProcessId()
 T non-virtual thunk to CVRSystemLatest::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T non-virtual thunk to CVRSystemLatest::GetHoverTargetOverlay()
 T non-virtual thunk to CVRSystemLatest::GetMCImage(unsigned int*, unsigned int*, unsigned int*, void*, unsigned int)
 T non-virtual thunk to CVRSystemLatest::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 T non-virtual thunk to CVRSystemLatest::HandleAutomaticControllerOverlayInteractionAsMouse(unsigned int, vr::VROverlayEventSettings_t const*, unsigned int, vr::ETrackingUniverseOrigin, vr::TrackedDevicePose_t*, unsigned int, unsigned long long, vr::HmdVector3_t*, unsigned int*, bool)
 T non-virtual thunk to CVRSystemLatest::PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 T non-virtual thunk to CVRSystemLatest::PostGlobalEvent(vr::VREvent_t const&, unsigned int)
 T non-virtual thunk to CVRSystemLatest::PostOverlayEvent(unsigned long long, vr::VREvent_t const&)
 T non-virtual thunk to CVRSystemLatest::PostVsyncEvent(float, unsigned long long)
 T non-virtual thunk to CVRSystemLatest::SetAbsoluteTrackingPoseOffset(vr::HmdMatrix34_t const*)
 T non-virtual thunk to CVRSystemLatest::SetCompositorError(vr::EVRInitError)
 T non-virtual thunk to CVRSystemLatest::SetDashboardProcessId(unsigned int)
 T non-virtual thunk to CVRSystemLatest::SetSceneFocusProcess(unsigned int)
 T non-virtual thunk to CVRSystemLatest::ThisProcessIsCompositor()
 T non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
 T non-virtual thunk to vr::CVRChaperoneLatest::CommitWorkingCopy(vr::EChaperoneConfigFile)
 T non-virtual thunk to vr::CVRChaperoneLatest::ExportLiveToBuffer(char*, unsigned int*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetLiveCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetLiveCollisionBoundsTagsInfo(unsigned char*, unsigned int*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetLivePhysicalBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetLiveSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetWorkingPlayAreaRect(vr::HmdQuad_t*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetWorkingPlayAreaSize(float*, float*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T non-virtual thunk to vr::CVRChaperoneLatest::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T non-virtual thunk to vr::CVRChaperoneLatest::ImportFromBufferToWorking(char const*, unsigned int)
 T non-virtual thunk to vr::CVRChaperoneLatest::ReloadFromDisk(vr::EChaperoneConfigFile)
 T non-virtual thunk to vr::CVRChaperoneLatest::RevertWorkingCopy()
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingCollisionBoundsTagsInfo(unsigned char*, unsigned int)
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingPhysicalBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingPlayAreaSize(float, float)
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T non-virtual thunk to vr::CVRChaperoneLatest::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T non-virtual thunk to vr::CVRTrackedCamera::EnableCameraForStreaming(unsigned int, bool)
 T non-virtual thunk to vr::CVRTrackedCamera::GetCameraDistortion(unsigned int, float*, float*, float*, float*, int)
 T non-virtual thunk to vr::CVRTrackedCamera::GetCameraFormatDimensions(unsigned int, vr::ECameraVideoStreamFormat, unsigned int*, unsigned int*)
 T non-virtual thunk to vr::CVRTrackedCamera::GetCameraFrameBounds(unsigned int, vr::EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T non-virtual thunk to vr::CVRTrackedCamera::GetCameraVideoStreamFormat(unsigned int, vr::ECameraVideoStreamFormat*)
 T non-virtual thunk to vr::CVRTrackedCamera::GetRecommendedCameraUndistortion(unsigned int, unsigned int*, unsigned int*)
 T non-virtual thunk to vr::CVRTrackedCamera::GetVideoStreamFrame(unsigned int, vr::CameraVideoStreamFrame_t const**)
 T non-virtual thunk to vr::CVRTrackedCamera::GetVideoStreamFrameSharedTextureGL(unsigned long long, vr::EVRTrackedCameraFrameType, unsigned int*, vr::CameraVideoStreamFrame_t*)
 T non-virtual thunk to vr::CVRTrackedCamera::IsVideoStreamActive(unsigned int, bool*, bool*, float*)
 T non-virtual thunk to vr::CVRTrackedCamera::PauseVideoStream(unsigned int)
 T non-virtual thunk to vr::CVRTrackedCamera::ReleaseVideoStreamFrame(unsigned int, vr::CameraVideoStreamFrame_t const*)
 T non-virtual thunk to vr::CVRTrackedCamera::ReleaseVideoStreamFrameSharedTextureGL(unsigned long long, unsigned int)
 T non-virtual thunk to vr::CVRTrackedCamera::ResumeVideoStream(unsigned int)
 T non-virtual thunk to vr::CVRTrackedCamera::SetAutoExposure(unsigned int, bool)
 T non-virtual thunk to vr::CVRTrackedCamera::SetCameraCompatibilityMode(unsigned int, vr::ECameraCompatibilityMode)
 T non-virtual thunk to vr::CVRTrackedCamera::SetCameraUndistortion(unsigned int, unsigned int, unsigned int)
 T non-virtual thunk to vr::CVRTrackedCamera::SetCameraVideoStreamFormat(unsigned int, vr::ECameraVideoStreamFormat)
 T non-virtual thunk to vr::CVRTrackedCamera::StartVideoStream(unsigned int)
 T non-virtual thunk to vr::CVRTrackedCamera::StopVideoStream(unsigned int)
 T protobuf_AddDesc_vr_5fmessages_2eproto()
 T protobuf_AssignDesc_vr_5fmessages_2eproto()
 T protobuf_ShutdownFile_vr_5fmessages_2eproto()
 T stbi_failure_reason
 T stbi_image_free
 T stbi_load
 T std::__1::__deque_base<CRenderModelLoadThread::TextureEntry_t, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t> >::clear()
 T std::__1::__deque_base<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::clear()
 T std::__1::__deque_base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::clear()
 T std::__1::__split_buffer<CRenderModelLoadThread::TextureEntry_t*, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t*> >::push_back(CRenderModelLoadThread::TextureEntry_t*&&)
 T std::__1::__split_buffer<CRenderModelLoadThread::TextureEntry_t*, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t*> >::push_front(CRenderModelLoadThread::TextureEntry_t*&&)
 T std::__1::__split_buffer<CRenderModelLoadThread::TextureEntry_t*, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t*>&>::push_back(CRenderModelLoadThread::TextureEntry_t*&&)
 T std::__1::__split_buffer<CRenderModelLoadThread::TextureEntry_t*, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t*>&>::push_front(CRenderModelLoadThread::TextureEntry_t* const&)
 T std::__1::__split_buffer<Json::Reader::ErrorInfo*, std::__1::allocator<Json::Reader::ErrorInfo*> >::push_back(Json::Reader::ErrorInfo*&&)
 T std::__1::__split_buffer<Json::Reader::ErrorInfo*, std::__1::allocator<Json::Reader::ErrorInfo*> >::push_front(Json::Reader::ErrorInfo*&&)
 T std::__1::__split_buffer<Json::Reader::ErrorInfo*, std::__1::allocator<Json::Reader::ErrorInfo*>&>::push_back(Json::Reader::ErrorInfo*&&)
 T std::__1::__split_buffer<Json::Reader::ErrorInfo*, std::__1::allocator<Json::Reader::ErrorInfo*>&>::push_front(Json::Reader::ErrorInfo* const&)
 T std::__1::__split_buffer<Json::Value**, std::__1::allocator<Json::Value**> >::push_back(Json::Value**&&)
 T std::__1::__split_buffer<Json::Value**, std::__1::allocator<Json::Value**> >::push_front(Json::Value**&&)
 T std::__1::__split_buffer<Json::Value**, std::__1::allocator<Json::Value**>&>::push_back(Json::Value**&&)
 T std::__1::__split_buffer<Json::Value**, std::__1::allocator<Json::Value**>&>::push_front(Json::Value** const&)
 T std::__1::__split_buffer<char const*, std::__1::allocator<char const*>&>::~__split_buffer()
 T std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::push_back(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*&&)
 T std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::push_front(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*&&)
 T std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>&>::push_back(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*&&)
 T std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>&>::push_front(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >* const&)
 T std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>&>::~__split_buffer()
 T std::__1::__split_buffer<tinyobj::material_t, std::__1::allocator<tinyobj::material_t>&>::~__split_buffer()
 T std::__1::__split_buffer<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t>&>::~__split_buffer()
 T std::__1::__split_buffer<void (*)(), std::__1::allocator<void (*)()>&>::~__split_buffer()
 T std::__1::__split_buffer<void*, std::__1::allocator<void*>&>::~__split_buffer()
 T std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__insert_unique(int const&)
 T std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__node_insert_unique(std::__1::__tree_node<int, void*>*)
 T std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::destroy(std::__1::__tree_node<int, void*>*)
 T std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::destroy(std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*)
 T std::__1::__tree<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__node_insert_unique(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__node_insert_unique(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__node_insert_unique(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__node_insert_unique(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, int>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, long>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, int>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, long>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, int>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, long>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, int>)
 T std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, long>)
 T std::__1::__tree<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__map_value_compare<tinyobj::vertex_index, std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::less<tinyobj::vertex_index>, true>, std::__1::allocator<std::__1::__value_type<tinyobj::vertex_index, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*)
 T std::__1::__tree<std::__1::__value_type<unsigned int, CVRCompositorSharedTextures::SharedTextureEntry>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, CVRCompositorSharedTextures::SharedTextureEntry>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, CVRCompositorSharedTextures::SharedTextureEntry> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, CVRCompositorSharedTextures::SharedTextureEntry>, void*>*)
 T std::__1::__tree<std::__1::__value_type<unsigned long long, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*> >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*> >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*> >, void*>*)
 T std::__1::__tree<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*> > >::__node_insert_unique(std::__1::__tree_node<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, void*>*)
 T std::__1::__tree<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long long, vr::ChaperoneInfo*>, void*>*)
 T std::__1::__tree<std::__1::__value_type<vr::ETrackedDeviceProperty, CVRMsg_GetPropertyResponse>, std::__1::__map_value_compare<vr::ETrackedDeviceProperty, std::__1::__value_type<vr::ETrackedDeviceProperty, CVRMsg_GetPropertyResponse>, std::__1::less<vr::ETrackedDeviceProperty>, true>, std::__1::allocator<std::__1::__value_type<vr::ETrackedDeviceProperty, CVRMsg_GetPropertyResponse> > >::destroy(std::__1::__tree_node<std::__1::__value_type<vr::ETrackedDeviceProperty, CVRMsg_GetPropertyResponse>, void*>*)
 T std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__insert_node_at(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*&, std::__1::__tree_node_base<void*>*)
 T std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__insert_unique(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*)
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&) const
 T std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
 T std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__lower_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*) const
 T std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__insert_unique<std::__1::pair<Json::Value::CZString const, Json::Value> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int>, std::__1::pair<Json::Value::CZString const, Json::Value> const&)
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__insert_unique<std::__1::pair<Json::Value::CZString const, Json::Value>&>(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int>, std::__1::pair<Json::Value::CZString const, Json::Value>&)
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::find<Json::Value::CZString>(Json::Value::CZString const&)
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__insert_unique<std::__1::pair<Json::Value::CZString const, Json::Value> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long>, std::__1::pair<Json::Value::CZString const, Json::Value> const&)
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__insert_unique<std::__1::pair<Json::Value::CZString const, Json::Value>&>(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long>, std::__1::pair<Json::Value::CZString const, Json::Value>&)
 T std::__1::__tree_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long> std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::find<Json::Value::CZString>(Json::Value::CZString const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&>(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, int>, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&>(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long>, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int>, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> >&&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__upper_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long>, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> >&&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__upper_bound<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::__lower_bound<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*)
 T std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response>, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response> > >::find<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, int> std::__1::__tree<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__map_value_compare<tinyobj::vertex_index, std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::less<tinyobj::vertex_index>, true>, std::__1::allocator<std::__1::__value_type<tinyobj::vertex_index, unsigned int> > >::__insert_unique<std::__1::pair<tinyobj::vertex_index const, unsigned int> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, int>, std::__1::pair<tinyobj::vertex_index const, unsigned int> const&)
 T std::__1::__tree_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, long> std::__1::__tree<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__map_value_compare<tinyobj::vertex_index, std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::less<tinyobj::vertex_index>, true>, std::__1::allocator<std::__1::__value_type<tinyobj::vertex_index, unsigned int> > >::__insert_unique<std::__1::pair<tinyobj::vertex_index const, unsigned int> const&>(std::__1::__tree_const_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, long>, std::__1::pair<tinyobj::vertex_index const, unsigned int> const&)
 T std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__find_equal<int>(std::__1::__tree_node_base<void*>*&, int const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__find_equal<std::__1::__value_type<Json::Value::CZString, Json::Value> >(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, int>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<Json::Value::CZString, Json::Value> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__find_equal<std::__1::__value_type<Json::Value::CZString, Json::Value> >(std::__1::__tree_const_iterator<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>*, long>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<Json::Value::CZString, Json::Value> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__find_equal<std::__1::__value_type<Json::Value::CZString, Json::Value> >(std::__1::__tree_node_base<void*>*&, std::__1::__value_type<Json::Value::CZString, Json::Value> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, int>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > >(std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__find_equal<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > >(std::__1::__tree_node_base<void*>*&, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__map_value_compare<tinyobj::vertex_index, std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::less<tinyobj::vertex_index>, true>, std::__1::allocator<std::__1::__value_type<tinyobj::vertex_index, unsigned int> > >::__find_equal<std::__1::__value_type<tinyobj::vertex_index, unsigned int> >(std::__1::__tree_const_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, int>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<tinyobj::vertex_index, unsigned int> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__map_value_compare<tinyobj::vertex_index, std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::less<tinyobj::vertex_index>, true>, std::__1::allocator<std::__1::__value_type<tinyobj::vertex_index, unsigned int> > >::__find_equal<std::__1::__value_type<tinyobj::vertex_index, unsigned int> >(std::__1::__tree_const_iterator<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, std::__1::__tree_node<std::__1::__value_type<tinyobj::vertex_index, unsigned int>, void*>*, long>, std::__1::__tree_node_base<void*>*&, std::__1::__value_type<tinyobj::vertex_index, unsigned int> const&)
 T std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::__vector_base<char const*, std::__1::allocator<char const*> >::~__vector_base()
 T std::__1::__vector_base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::~__vector_base()
 T std::__1::__vector_base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::~__vector_base()
 T std::__1::__vector_base<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >::~__vector_base()
 T std::__1::__vector_base<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t> >::~__vector_base()
 T std::__1::__vector_base<void*, std::__1::allocator<void*> >::~__vector_base()
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::basic_filebuf()
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::overflow(int)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::pbackfail(int)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::setbuf(char*, int)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::sync()
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::underflow()
 T std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
 T std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
 T std::__1::basic_istream<char, std::__1::char_traits<char> >& std::__1::getline<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_istream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, char)
 T std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_istringstream()
 T std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
 T std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
 T std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
 T std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()
 T std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()
 T std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
 T std::__1::deque<CRenderModelLoadThread::TextureEntry_t, std::__1::allocator<CRenderModelLoadThread::TextureEntry_t> >::__add_back_capacity()
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::__add_back_capacity()
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::__add_back_capacity(unsigned long)
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::__append(unsigned long)
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::__erase_to_end(std::__1::__deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo const*, Json::Reader::ErrorInfo const&, Json::Reader::ErrorInfo const* const*, int, 146>)
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::__erase_to_end(std::__1::__deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo const*, Json::Reader::ErrorInfo const&, Json::Reader::ErrorInfo const* const*, long, 73l>)
 T std::__1::deque<Json::Reader::ErrorInfo, std::__1::allocator<Json::Reader::ErrorInfo> >::resize(unsigned long)
 T std::__1::deque<Json::Value*, std::__1::allocator<Json::Value*> >::__add_back_capacity()
 T std::__1::deque<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__add_back_capacity()
 T std::__1::map<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, int const&)
 T std::__1::map<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator[](int&&)
 T std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, CRenderModelManager::ModelInfo_t*> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CRenderModelManager::ModelInfo_t*, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, CRenderModelManager::ModelInfo_t*> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, CVRMsg_ApplicationInfo> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, CVRMsg_ApplicationInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, CVRMsg_ApplicationInfo> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, int> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetBool_Response> > >::__construct_node_with_key(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetBool_Response> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetBool_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetBool_Response> > >::operator[](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetFloat_Response> > >::__construct_node_with_key(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetFloat_Response> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetFloat_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetFloat_Response> > >::operator[](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetInt32_Response> > >::__construct_node_with_key(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetInt32_Response> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetInt32_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetInt32_Response> > >::operator[](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetString_Response> > >::__construct_node_with_key(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetString_Response> > >::__find_equal_key(std::__1::__tree_node_base<void*>*&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, CVRMsg_Settings_GetString_Response, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const, CVRMsg_Settings_GetString_Response> > >::operator[](std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
 T std::__1::map<tinyobj::vertex_index, unsigned int, std::__1::less<tinyobj::vertex_index>, std::__1::allocator<std::__1::pair<tinyobj::vertex_index const, unsigned int> > >::operator[](tinyobj::vertex_index const&)
 T std::__1::map<unsigned int, CVRCompositorSharedTextures::SharedTextureEntry, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, CVRCompositorSharedTextures::SharedTextureEntry> > >::operator[](unsigned int const&)
 T std::__1::map<unsigned long long, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<unsigned long long const, std::__1::pair<vr::RenderModel_t*, vr::RenderModel_TextureMap_t*> > > >::operator[](unsigned long long const&)
 T std::__1::map<vr::ETrackedDeviceProperty, CVRMsg_GetPropertyResponse, std::__1::less<vr::ETrackedDeviceProperty>, std::__1::allocator<std::__1::pair<vr::ETrackedDeviceProperty const, CVRMsg_GetPropertyResponse> > >::operator[](vr::ETrackedDeviceProperty const&)
 T std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
 T std::__1::pair<std::__1::__tree_iterator<int, std::__1::__tree_node<int, void*>*, int>, bool> std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__insert_unique<int>(int&&)
 T std::__1::pair<std::__1::__tree_iterator<int, std::__1::__tree_node<int, void*>*, long>, bool> std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::__insert_unique<int>(int&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> >&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> >&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__insert_unique<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__insert_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
 T std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__insert_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*> > > > std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__construct_node<std::__1::pair<Json::Value::CZString const, Json::Value> const&>(std::__1::pair<Json::Value::CZString const, Json::Value> const&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Json::Value::CZString, Json::Value>, void*> > > > std::__1::__tree<std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::__map_value_compare<Json::Value::CZString, std::__1::__value_type<Json::Value::CZString, Json::Value>, std::__1::less<Json::Value::CZString>, true>, std::__1::allocator<std::__1::__value_type<Json::Value::CZString, Json::Value> > >::__construct_node<std::__1::pair<Json::Value::CZString const, Json::Value>&>(std::__1::pair<Json::Value::CZString const, Json::Value>&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> >&&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<void const*, int> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::pair<void const*, int> > const&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> >, std::__1::less<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::pair<void const*, int> > > >::__construct_node<std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&>(std::__1::pair<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> const, std::__1::pair<void const*, int> > const&)
 T std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::vector<CRenderModelManager::DeviceTexturePair_t, std::__1::allocator<CRenderModelManager::DeviceTexturePair_t> >::vector(std::__1::vector<CRenderModelManager::DeviceTexturePair_t, std::__1::allocator<CRenderModelManager::DeviceTexturePair_t> > const&)
 T std::__1::vector<char const*, std::__1::allocator<char const*> >::__append(unsigned long)
 T std::__1::vector<char const*, std::__1::allocator<char const*> >::resize(unsigned long)
 T std::__1::vector<double, std::__1::allocator<double> >::__append(unsigned long)
 T std::__1::vector<float, std::__1::allocator<float> >::__append(unsigned long)
 T std::__1::vector<float, std::__1::allocator<float> >::vector(std::__1::vector<float, std::__1::allocator<float> > const&)
 T std::__1::vector<float, std::__1::allocator<float> >::vector(unsigned long)
 T std::__1::vector<float, std::__1::allocator<float> >::vector(unsigned long, float const&)
 T std::__1::vector<int, std::__1::allocator<int> >::vector(std::__1::vector<int, std::__1::allocator<int> > const&)
 T std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::__append(unsigned long)
 T std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::resize(unsigned long)
 T std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::insert(std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::reserve(unsigned long)
 T std::__1::vector<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t> >::__swap_out_circular_buffer(std::__1::__split_buffer<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t>&>&)
 T std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> >::vector(std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> > const&)
 T std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::vector(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
 T std::__1::vector<void*, std::__1::allocator<void*> >::__append(unsigned long)
 T std::__1::vector<void*, std::__1::allocator<void*> >::resize(unsigned long)
 T strcpy_safe(char*, unsigned long, char const*)
 T tinyobj::LoadMtl(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, int> > >&, std::__1::vector<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >&, std::__1::basic_istream<char, std::__1::char_traits<char> >&)
 T tinyobj::LoadObj(std::__1::vector<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t> >&, std::__1::vector<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >&, char const*, char const*)
 T tinyobj::LoadObj(std::__1::vector<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t> >&, std::__1::vector<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >&, std::__1::basic_istream<char, std::__1::char_traits<char> >&, tinyobj::MaterialReader&)
 T tinyobj::MaterialFileReader::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, int> > >&)
 T tinyobj::MaterialFileReader::~MaterialFileReader()
 T tinyobj::material_t::material_t(tinyobj::material_t const&)
 T tinyobj::mesh_t::mesh_t(tinyobj::mesh_t const&)
 T tinyobj::mesh_t::operator=(tinyobj::mesh_t&&)
 T unsigned int std::__1::__sort3<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T unsigned int std::__1::__sort4<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T unsigned int std::__1::__sort5<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T virtual thunk to std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
 T virtual thunk to std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_istringstream()
 T virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
 T virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
 T void std::__1::__insertion_sort_3<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T void std::__1::__sort<bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&), CDriverManager::HmdDriver_t*>(CDriverManager::HmdDriver_t*, CDriverManager::HmdDriver_t*, bool (*&)(CDriverManager::HmdDriver_t const&, CDriverManager::HmdDriver_t const&))
 T void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
 T void std::__1::__tree_remove<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
 T void std::__1::vector<CDriverManager::HmdDriver_t, std::__1::allocator<CDriverManager::HmdDriver_t> >::__push_back_slow_path<CDriverManager::HmdDriver_t const&>(CDriverManager::HmdDriver_t const&)
 T void std::__1::vector<CRenderModelManager::Component_t, std::__1::allocator<CRenderModelManager::Component_t> >::__push_back_slow_path<CRenderModelManager::Component_t const&>(CRenderModelManager::Component_t const&)
 T void std::__1::vector<CRenderModelManager::RenderModelContainer_t, std::__1::allocator<CRenderModelManager::RenderModelContainer_t> >::__push_back_slow_path<CRenderModelManager::RenderModelContainer_t const&>(CRenderModelManager::RenderModelContainer_t const&)
 T void std::__1::vector<CRenderModelManager::RenderModelTextureContainer_t, std::__1::allocator<CRenderModelManager::RenderModelTextureContainer_t> >::__push_back_slow_path<CRenderModelManager::RenderModelTextureContainer_t const&>(CRenderModelManager::RenderModelTextureContainer_t const&)
 T void std::__1::vector<IPC::ISharedMem*, std::__1::allocator<IPC::ISharedMem*> >::__push_back_slow_path<IPC::ISharedMem* const&>(IPC::ISharedMem* const&)
 T void std::__1::vector<char const*, std::__1::allocator<char const*> >::__push_back_slow_path<char const*>(char const*&&)
 T void std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float const&>(float const&)
 T void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
 T void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >* const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >* const&)
 T void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
 T void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 T void std::__1::vector<std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> >, std::__1::allocator<std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> > > >::__push_back_slow_path<std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> > const&>(std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> > const&)
 T void std::__1::vector<tinyobj::material_t, std::__1::allocator<tinyobj::material_t> >::__push_back_slow_path<tinyobj::material_t const&>(tinyobj::material_t const&)
 T void std::__1::vector<tinyobj::shape_t, std::__1::allocator<tinyobj::shape_t> >::__push_back_slow_path<tinyobj::shape_t const&>(tinyobj::shape_t const&)
 T void std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> >::__push_back_slow_path<tinyobj::vertex_index const&>(tinyobj::vertex_index const&)
 T void std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<unsigned int const&>(unsigned int const&)
 T void std::__1::vector<void (*)(), std::__1::allocator<void (*)()> >::__push_back_slow_path<void (* const&)()>(void (* const&)())
 T void std::__1::vector<void*, std::__1::allocator<void*> >::__push_back_slow_path<void* const&>(void* const&)
 T void std::__1::vector<vr::VREvent_t, std::__1::allocator<vr::VREvent_t> >::__push_back_slow_path<vr::VREvent_t const&>(vr::VREvent_t const&)
 T vr::CVRApplicationsLatest::AddApplicationManifest(char const*, bool)
 T vr::CVRApplicationsLatest::BInit(CVRSystemLatest*, CVRClient*, IVRClientInternal*)
 T vr::CVRApplicationsLatest::CVRApplicationsLatest()
 T vr::CVRApplicationsLatest::CancelApplicationLaunch(char const*)
 T vr::CVRApplicationsLatest::GetApplicationAutoLaunch(char const*)
 T vr::CVRApplicationsLatest::GetApplicationCount()
 T vr::CVRApplicationsLatest::GetApplicationInfo(char const*)
 T vr::CVRApplicationsLatest::GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 T vr::CVRApplicationsLatest::GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 T vr::CVRApplicationsLatest::GetApplicationProcessId(char const*)
 T vr::CVRApplicationsLatest::GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T vr::CVRApplicationsLatest::GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 T vr::CVRApplicationsLatest::GetApplicationPropertyUint64(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 T vr::CVRApplicationsLatest::GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 T vr::CVRApplicationsLatest::GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 T vr::CVRApplicationsLatest::GetStartingApplication(char*, unsigned int)
 T vr::CVRApplicationsLatest::GetTransitionState()
 T vr::CVRApplicationsLatest::IdentifyApplication(unsigned int, char const*)
 T vr::CVRApplicationsLatest::IsApplicationInstalled(char const*)
 T vr::CVRApplicationsLatest::IsQuitUserPromptRequested()
 T vr::CVRApplicationsLatest::LaunchApplication(char const*)
 T vr::CVRApplicationsLatest::LaunchDashboardOverlay(char const*)
 T vr::CVRApplicationsLatest::LaunchInternalProcess(char const*, char const*, char const*)
 T vr::CVRApplicationsLatest::LaunchTemplateApplication(char const*, char const*, vr::AppOverrideKeys_t const*, unsigned int)
 T vr::CVRApplicationsLatest::PerformApplicationPrelaunchCheck(char const*)
 T vr::CVRApplicationsLatest::RemoveApplicationManifest(char const*)
 T vr::CVRApplicationsLatest::SetApplicationAutoLaunch(char const*, bool)
 T vr::CVRApplicationsLatest::~CVRApplicationsLatest()
 T vr::CVRChaperoneLatest::AreBoundsVisible()
 T vr::CVRChaperoneLatest::BInit(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, CVRSystemLatest*)
 T vr::CVRChaperoneLatest::CVRChaperoneLatest()
 T vr::CVRChaperoneLatest::CommitWorkingCopy(vr::EChaperoneConfigFile)
 T vr::CVRChaperoneLatest::ExportLiveToBuffer(char*, unsigned int*)
 T vr::CVRChaperoneLatest::ForceBoundsVisible(bool)
 T vr::CVRChaperoneLatest::FromJson(Json::Value const&)
 T vr::CVRChaperoneLatest::GetBoundsColor(vr::HmdColor_t*, int, float, vr::HmdColor_t*)
 T vr::CVRChaperoneLatest::GetCalibrationState()
 T vr::CVRChaperoneLatest::GetCalibrationStateInternal(vr::ChaperoneInfo&)
 T vr::CVRChaperoneLatest::GetChaperoneInfo(vr::ChaperoneInfo&, unsigned long long)
 T vr::CVRChaperoneLatest::GetChaperoneInfoForEdit(unsigned long long)
 T vr::CVRChaperoneLatest::GetLiveCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T vr::CVRChaperoneLatest::GetLiveCollisionBoundsTagsInfo(unsigned char*, unsigned int*)
 T vr::CVRChaperoneLatest::GetLivePhysicalBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T vr::CVRChaperoneLatest::GetLiveSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T vr::CVRChaperoneLatest::GetPlayAreaRect(vr::HmdQuad_t*)
 T vr::CVRChaperoneLatest::GetPlayAreaSize(float*, float*)
 T vr::CVRChaperoneLatest::GetTrackerChangeState(vr::ChaperoneInfo&)
 T vr::CVRChaperoneLatest::GetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int*)
 T vr::CVRChaperoneLatest::GetWorkingPlayAreaRect(vr::HmdQuad_t*)
 T vr::CVRChaperoneLatest::GetWorkingPlayAreaSize(float*, float*)
 T vr::CVRChaperoneLatest::GetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T vr::CVRChaperoneLatest::GetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t*)
 T vr::CVRChaperoneLatest::ImportFromBufferToWorking(char const*, unsigned int)
 T vr::CVRChaperoneLatest::InitChaperoneInfo(vr::EChaperoneConfigFile)
 T vr::CVRChaperoneLatest::PostGlobalChaperoneEvent(vr::EVREventType, unsigned long long, unsigned long long)
 T vr::CVRChaperoneLatest::ReloadFromDisk(vr::EChaperoneConfigFile)
 T vr::CVRChaperoneLatest::ReloadInfo()
 T vr::CVRChaperoneLatest::RevertWorkingCopy()
 T vr::CVRChaperoneLatest::SetSceneColor(vr::HmdColor_t)
 T vr::CVRChaperoneLatest::SetUniverse(unsigned long long)
 T vr::CVRChaperoneLatest::SetWorkingCollisionBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T vr::CVRChaperoneLatest::SetWorkingCollisionBoundsTagsInfo(unsigned char*, unsigned int)
 T vr::CVRChaperoneLatest::SetWorkingPhysicalBoundsInfo(vr::HmdQuad_t*, unsigned int)
 T vr::CVRChaperoneLatest::SetWorkingPlayAreaSize(float, float)
 T vr::CVRChaperoneLatest::SetWorkingSeatedZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T vr::CVRChaperoneLatest::SetWorkingStandingZeroPoseToRawTrackingPose(vr::HmdMatrix34_t const*)
 T vr::CVRChaperoneLatest::ToJson() const
 T vr::CVRChaperoneLatest::~CVRChaperoneLatest()
 T vr::CVRDashboardManagerLatest::BInit(CVRSystemLatest*, CVRClient*, CVRCompositorClient*)
 T vr::CVRDashboardManagerLatest::CVRDashboardManagerLatest()
 T vr::CVRDashboardManagerLatest::CloseKeyboard()
 T vr::CVRDashboardManagerLatest::CreateDashboardCoreOverlay(char const*, char const*, unsigned long long*)
 T vr::CVRDashboardManagerLatest::FreeToastImageMemory(vr::DashboardNotificationInfo_t*)
 T vr::CVRDashboardManagerLatest::GetDashboardOverlays(vr::DashboardOverlayState_t*, unsigned int)
 T vr::CVRDashboardManagerLatest::GetKeyboardInputType(vr::EGamepadTextInputMode*, vr::EGamepadTextInputLineMode*, unsigned int*, bool*, char*, int)
 T vr::CVRDashboardManagerLatest::GetKeyboardOverlayHandle(unsigned long long*)
 T vr::CVRDashboardManagerLatest::GetKeyboardOwnerOverlay(unsigned long long*)
 T vr::CVRDashboardManagerLatest::GetKeyboardStats(vr::KeyboardStats_t*)
 T vr::CVRDashboardManagerLatest::GetNotificationPriority(char const*, unsigned int*)
 T vr::CVRDashboardManagerLatest::GetPrimaryDashboardDevice()
 T vr::CVRDashboardManagerLatest::GetToastInfo(unsigned int, vr::DashboardNotificationInfo_t*)
 T vr::CVRDashboardManagerLatest::GetToastOverlayHandle(unsigned long long*)
 T vr::CVRDashboardManagerLatest::HandleSystemButton(bool)
 T vr::CVRDashboardManagerLatest::HasCameraRoomViewCapability()
 T vr::CVRDashboardManagerLatest::HideDashboard()
 T vr::CVRDashboardManagerLatest::SendKeyboardDone()
 T vr::CVRDashboardManagerLatest::SetDashboardManager(unsigned long long)
 T vr::CVRDashboardManagerLatest::SetKeyboardMetrics(vr::HmdVector2_t, float, vr::HmdVector2_t, float)
 T vr::CVRDashboardManagerLatest::SetKeyboardOverlayRendererToThis()
 T vr::CVRDashboardManagerLatest::SetKeyboardResultText(char const*)
 T vr::CVRDashboardManagerLatest::SetKeyboardStats(vr::KeyboardStats_t*)
 T vr::CVRDashboardManagerLatest::SetNotificationPriority(char const*, unsigned int)
 T vr::CVRDashboardManagerLatest::SetToastOverlayRendererToThis()
 T vr::CVRDashboardManagerLatest::SetToastTexture(vr::Texture_t const*)
 T vr::CVRDashboardManagerLatest::ShowDashboard(unsigned int)
 T vr::CVRDashboardManagerLatest::ToggleCameraRoomView()
 T vr::CVRDashboardManagerLatest::UpdateKeyboardPosition()
 T vr::CVRDashboardManagerLatest::~CVRDashboardManagerLatest()
 T vr::CVRNotificationsLatest::BInit(CVRCompositorClient*)
 T vr::CVRNotificationsLatest::CVRNotificationsLatest()
 T vr::CVRNotificationsLatest::CreateNotification(unsigned long long, unsigned long long, vr::EVRNotificationType, char const*, vr::EVRNotificationStyle, vr::NotificationBitmap_t const*, unsigned int*)
 T vr::CVRNotificationsLatest::RemoveNotification(unsigned int)
 T vr::CVRNotificationsLatest::~CVRNotificationsLatest()
 T vr::CVRSettingsLatest::BInit(CVRSystemLatest*, CVRClient*)
 T vr::CVRSettingsLatest::CVRSettingsLatest()
 T vr::CVRSettingsLatest::Cleanup()
 T vr::CVRSettingsLatest::GetBool(char const*, char const*, bool, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::GetCurrentDirtyCount()
 T vr::CVRSettingsLatest::GetFloat(char const*, char const*, float, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::GetInt32(char const*, char const*, int, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::GetSettingsErrorNameFromEnum(vr::EVRSettingsError)
 T vr::CVRSettingsLatest::GetString(char const*, char const*, char*, unsigned int, char const*, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::RemoveKeyInSection(char const*, char const*, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::RemoveSection(char const*, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::SetBool(char const*, char const*, bool, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::SetFloat(char const*, char const*, float, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::SetInt32(char const*, char const*, int, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::SetString(char const*, char const*, char const*, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::Sync(bool, vr::EVRSettingsError*)
 T vr::CVRSettingsLatest::~CVRSettingsLatest()
 T vr::CVRTrackedCamera::AcquireVideoStreamingService(unsigned int, unsigned long long*)
 T vr::CVRTrackedCamera::CVRTrackedCamera()
 T vr::CVRTrackedCamera::EnableCameraForStreaming(unsigned int, bool)
 T vr::CVRTrackedCamera::GetCameraDistortion(unsigned int, float*, float*, float*, float*, int)
 T vr::CVRTrackedCamera::GetCameraErrorNameFromEnum(vr::EVRTrackedCameraError)
 T vr::CVRTrackedCamera::GetCameraFormatDimensions(unsigned int, vr::ECameraVideoStreamFormat, unsigned int*, unsigned int*)
 T vr::CVRTrackedCamera::GetCameraFrameBounds(unsigned int, vr::EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 T vr::CVRTrackedCamera::GetCameraFrameSize(unsigned int, vr::EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*)
 T vr::CVRTrackedCamera::GetCameraIntrinisics(unsigned int, vr::EVRTrackedCameraFrameType, vr::HmdVector2_t*, vr::HmdVector2_t*)
 T vr::CVRTrackedCamera::GetCameraProjection(unsigned int, vr::EVRTrackedCameraFrameType, float, float, vr::HmdMatrix44_t*)
 T vr::CVRTrackedCamera::GetCameraVideoStreamFormat(unsigned int, vr::ECameraVideoStreamFormat*)
 T vr::CVRTrackedCamera::GetRecommendedCameraUndistortion(unsigned int, unsigned int*, unsigned int*)
 T vr::CVRTrackedCamera::GetVideoStreamFrame(unsigned int, vr::CameraVideoStreamFrame_t const**)
 T vr::CVRTrackedCamera::GetVideoStreamFrameBuffer(unsigned long long, vr::EVRTrackedCameraFrameType, void*, unsigned int, vr::CameraVideoStreamFrameHeader_t*, unsigned int)
 T vr::CVRTrackedCamera::GetVideoStreamFrameSharedTextureGL(unsigned long long, vr::EVRTrackedCameraFrameType, unsigned int*, vr::CameraVideoStreamFrame_t*)
 T vr::CVRTrackedCamera::HasCamera(unsigned int, bool*)
 T vr::CVRTrackedCamera::Init(CVRSystemLatest*, CVRClient*, CVRCompositorClient*)
 T vr::CVRTrackedCamera::IsTrackedCameraHandleValid(unsigned long long)
 T vr::CVRTrackedCamera::IsVideoStreamActive(unsigned int, bool*, bool*, float*)
 T vr::CVRTrackedCamera::PauseVideoStream(unsigned int)
 T vr::CVRTrackedCamera::ReleaseVideoStreamFrame(unsigned int, vr::CameraVideoStreamFrame_t const*)
 T vr::CVRTrackedCamera::ReleaseVideoStreamFrameSharedTextureGL(unsigned long long, unsigned int)
 T vr::CVRTrackedCamera::ReleaseVideoStreamingService(unsigned long long)
 T vr::CVRTrackedCamera::ResumeVideoStream(unsigned int)
 T vr::CVRTrackedCamera::SetAutoExposure(unsigned int, bool)
 T vr::CVRTrackedCamera::SetCameraCompatibilityMode(unsigned int, vr::ECameraCompatibilityMode)
 T vr::CVRTrackedCamera::SetCameraUndistortion(unsigned int, unsigned int, unsigned int)
 T vr::CVRTrackedCamera::SetCameraVideoStreamFormat(unsigned int, vr::ECameraVideoStreamFormat)
 T vr::CVRTrackedCamera::StartVideoStream(unsigned int)
 T vr::CVRTrackedCamera::StopVideoStream(unsigned int)
 T vr::CVRTrackedCamera::~CVRTrackedCamera()
 T vr::ChaperoneInfo::ChaperoneInfo()
 T vr::ChaperoneInfo::ConvertLegacyCollisionBounds()
 T vr::ChaperoneInfo::FromJson(Json::Value const&, unsigned int)
 T vr::ChaperoneInfo::RefreshTrackedDevicePoses()
 T vr::ChaperoneInfo::ToJson() const
 T vr::ChaperoneInfo::operator=(vr::ChaperoneInfo const&)
 T vr::ChaperoneInfo::~ChaperoneInfo()
 T vr::TrackingOrigin_t::FromJson(Json::Value const&)
 T vr::TrackingOrigin_t::SetRawTrackingFromOriginPose(vr::HmdMatrix34_t const&)
 T vr::TrackingOrigin_t::ToJson() const
 _Block_copy
 _DefaultRuneLocale
 _NSGetExecutablePath
 _Unwind_Resume
 __assert_rtn
 __bzero
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_begin_catch
 __cxa_end_catch
 __cxa_free_exception
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_throw
 __divdi3
 __dynamic_cast
 __error
 __fixunsdfdi
 __gxx_personality_v0
 __isfinited
 __moddi3
 __sincos_stret
 __sincosf_stret
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __tolower
 __toupper
 __udivdi3
 __umoddi3
 _dyld_register_func_for_add_image
 _exit
 _objc_empty_cache
 _objc_empty_vtable
 alphasort$INODE64
 asin
 asprintf
 atan2
 atof
 atoi
 b (anonymous namespace)::CVRMsg_AbortApplicationTransition_descriptor_
 b (anonymous namespace)::CVRMsg_AbortApplicationTransition_reflection_
 b (anonymous namespace)::CVRMsg_AcknowledgeQuit_Exiting_descriptor_
 b (anonymous namespace)::CVRMsg_AcknowledgeQuit_Exiting_reflection_
 b (anonymous namespace)::CVRMsg_AcknowledgeQuit_UserPrompt_descriptor_
 b (anonymous namespace)::CVRMsg_AcknowledgeQuit_UserPrompt_reflection_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_Manifest_descriptor_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_Manifest_reflection_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_Options_descriptor_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_Options_reflection_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_descriptor_
 b (anonymous namespace)::CVRMsg_ApplicationInfo_reflection_
 b (anonymous namespace)::CVRMsg_ApplicationManifestRequest_descriptor_
 b (anonymous namespace)::CVRMsg_ApplicationManifestRequest_reflection_
 b (anonymous namespace)::CVRMsg_ApplicationManifestResponse_descriptor_
 b (anonymous namespace)::CVRMsg_ApplicationManifestResponse_reflection_
 b (anonymous namespace)::CVRMsg_CancelApplicationLaunchResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CancelApplicationLaunchResponse_reflection_
 b (anonymous namespace)::CVRMsg_CancelApplicationLaunch_descriptor_
 b (anonymous namespace)::CVRMsg_CancelApplicationLaunch_reflection_
 b (anonymous namespace)::CVRMsg_CompositorBringToFront_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorBringToFront_reflection_
 b (anonymous namespace)::CVRMsg_CompositorClearFrameBuffer_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorClearFrameBuffer_reflection_
 b (anonymous namespace)::CVRMsg_CompositorConnectResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorConnectResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorConnect_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorConnect_reflection_
 b (anonymous namespace)::CVRMsg_CompositorDumpImages_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorDumpImages_reflection_
 b (anonymous namespace)::CVRMsg_CompositorFadeGrid_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorFadeGrid_reflection_
 b (anonymous namespace)::CVRMsg_CompositorFadeToColor_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorFadeToColor_reflection_
 b (anonymous namespace)::CVRMsg_CompositorGoToBack_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorGoToBack_reflection_
 b (anonymous namespace)::CVRMsg_CompositorHandleSystemButtonResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorHandleSystemButtonResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorHandleSystemButton_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorHandleSystemButton_reflection_
 b (anonymous namespace)::CVRMsg_CompositorHideDashboardResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorHideDashboardResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorHideDashboard_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorHideDashboard_reflection_
 b (anonymous namespace)::CVRMsg_CompositorHideMirrorWindow_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorHideMirrorWindow_reflection_
 b (anonymous namespace)::CVRMsg_CompositorPrepareInternalProcessTransitionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorPrepareInternalProcessTransitionResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorPrepareInternalProcessTransition_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorPrepareInternalProcessTransition_reflection_
 b (anonymous namespace)::CVRMsg_CompositorQuit_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorQuit_reflection_
 b (anonymous namespace)::CVRMsg_CompositorRequestScreenshotResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorRequestScreenshotResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorRequestScreenshot_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorRequestScreenshot_reflection_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlayFromFileResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlayFromFileResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlayFromFile_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlayFromFile_reflection_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlay_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorSetOverlay_reflection_
 b (anonymous namespace)::CVRMsg_CompositorShowDashboardResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorShowDashboardResponse_reflection_
 b (anonymous namespace)::CVRMsg_CompositorShowDashboard_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorShowDashboard_reflection_
 b (anonymous namespace)::CVRMsg_CompositorShowMirrorWindow_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorShowMirrorWindow_reflection_
 b (anonymous namespace)::CVRMsg_CompositorToggleCameraRoomView_descriptor_
 b (anonymous namespace)::CVRMsg_CompositorToggleCameraRoomView_reflection_
 b (anonymous namespace)::CVRMsg_ComputeDistortionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_ComputeDistortionResponse_reflection_
 b (anonymous namespace)::CVRMsg_ComputeDistortion_descriptor_
 b (anonymous namespace)::CVRMsg_ComputeDistortion_reflection_
 b (anonymous namespace)::CVRMsg_ConnectResponse_descriptor_
 b (anonymous namespace)::CVRMsg_ConnectResponse_reflection_
 b (anonymous namespace)::CVRMsg_Connect_descriptor_
 b (anonymous namespace)::CVRMsg_Connect_reflection_
 b (anonymous namespace)::CVRMsg_CreateSwapTextureSetResponse_descriptor_
 b (anonymous namespace)::CVRMsg_CreateSwapTextureSetResponse_reflection_
 b (anonymous namespace)::CVRMsg_CreateSwapTextureSet_descriptor_
 b (anonymous namespace)::CVRMsg_CreateSwapTextureSet_reflection_
 b (anonymous namespace)::CVRMsg_DestroySwapTextureSet_descriptor_
 b (anonymous namespace)::CVRMsg_DestroySwapTextureSet_reflection_
 b (anonymous namespace)::CVRMsg_DriverDebugRequest_descriptor_
 b (anonymous namespace)::CVRMsg_DriverDebugRequest_reflection_
 b (anonymous namespace)::CVRMsg_DriverDebugResponse_descriptor_
 b (anonymous namespace)::CVRMsg_DriverDebugResponse_reflection_
 b (anonymous namespace)::CVRMsg_GetApplicationInfo_descriptor_
 b (anonymous namespace)::CVRMsg_GetApplicationInfo_reflection_
 b (anonymous namespace)::CVRMsg_GetDisplayInfoResponse_DisplayInfo_descriptor_
 b (anonymous namespace)::CVRMsg_GetDisplayInfoResponse_DisplayInfo_reflection_
 b (anonymous namespace)::CVRMsg_GetDisplayInfoResponse_descriptor_
 b (anonymous namespace)::CVRMsg_GetDisplayInfoResponse_reflection_
 b (anonymous namespace)::CVRMsg_GetDisplayInfo_descriptor_
 b (anonymous namespace)::CVRMsg_GetDisplayInfo_reflection_
 b (anonymous namespace)::CVRMsg_GetDriverDetailResponse_descriptor_
 b (anonymous namespace)::CVRMsg_GetDriverDetailResponse_reflection_
 b (anonymous namespace)::CVRMsg_GetDriverDetail_descriptor_
 b (anonymous namespace)::CVRMsg_GetDriverDetail_reflection_
 b (anonymous namespace)::CVRMsg_GetDriverInfoResponse_DriverInfo_descriptor_
 b (anonymous namespace)::CVRMsg_GetDriverInfoResponse_DriverInfo_reflection_
 b (anonymous namespace)::CVRMsg_GetDriverInfoResponse_descriptor_
 b (anonymous namespace)::CVRMsg_GetDriverInfoResponse_reflection_
 b (anonymous namespace)::CVRMsg_GetDriverInfo_descriptor_
 b (anonymous namespace)::CVRMsg_GetDriverInfo_reflection_
 b (anonymous namespace)::CVRMsg_GetPropertyResponse_descriptor_
 b (anonymous namespace)::CVRMsg_GetPropertyResponse_reflection_
 b (anonymous namespace)::CVRMsg_GetProperty_PropertyDataType_descriptor_
 b (anonymous namespace)::CVRMsg_GetProperty_descriptor_
 b (anonymous namespace)::CVRMsg_GetProperty_reflection_
 b (anonymous namespace)::CVRMsg_InputCaptureRequest_descriptor_
 b (anonymous namespace)::CVRMsg_InputCaptureRequest_reflection_
 b (anonymous namespace)::CVRMsg_InputCaptureResponse_descriptor_
 b (anonymous namespace)::CVRMsg_InputCaptureResponse_reflection_
 b (anonymous namespace)::CVRMsg_LaunchApplicationResponse_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchApplicationResponse_reflection_
 b (anonymous namespace)::CVRMsg_LaunchApplication_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchApplication_reflection_
 b (anonymous namespace)::CVRMsg_LaunchInternalProcessResponse_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchInternalProcessResponse_reflection_
 b (anonymous namespace)::CVRMsg_LaunchInternalProcess_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchInternalProcess_reflection_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplicationResponse_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplicationResponse_reflection_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplication_AppOverrideKey_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplication_AppOverrideKey_reflection_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplication_descriptor_
 b (anonymous namespace)::CVRMsg_LaunchTemplateApplication_reflection_
 b (anonymous namespace)::CVRMsg_PerformApplicationPrelaunchCheckResponse_descriptor_
 b (anonymous namespace)::CVRMsg_PerformApplicationPrelaunchCheckResponse_reflection_
 b (anonymous namespace)::CVRMsg_PerformApplicationPrelaunchCheck_descriptor_
 b (anonymous namespace)::CVRMsg_PerformApplicationPrelaunchCheck_reflection_
 b (anonymous namespace)::CVRMsg_PowerOffTrackedDevice_descriptor_
 b (anonymous namespace)::CVRMsg_PowerOffTrackedDevice_reflection_
 b (anonymous namespace)::CVRMsg_QuitProcessRequest_descriptor_
 b (anonymous namespace)::CVRMsg_QuitProcessRequest_reflection_
 b (anonymous namespace)::CVRMsg_QuitProcessResponse_descriptor_
 b (anonymous namespace)::CVRMsg_QuitProcessResponse_reflection_
 b (anonymous namespace)::CVRMsg_SetApplicationOptionsResponse_descriptor_
 b (anonymous namespace)::CVRMsg_SetApplicationOptionsResponse_reflection_
 b (anonymous namespace)::CVRMsg_SetApplicationOptions_descriptor_
 b (anonymous namespace)::CVRMsg_SetApplicationOptions_reflection_
 b (anonymous namespace)::CVRMsg_SetApplicationProcessIdResponse_descriptor_
 b (anonymous namespace)::CVRMsg_SetApplicationProcessIdResponse_reflection_
 b (anonymous namespace)::CVRMsg_SetApplicationProcessId_descriptor_
 b (anonymous namespace)::CVRMsg_SetApplicationProcessId_reflection_
 b (anonymous namespace)::CVRMsg_SetMasterProcessResponse_descriptor_
 b (anonymous namespace)::CVRMsg_SetMasterProcessResponse_reflection_
 b (anonymous namespace)::CVRMsg_SetMasterProcess_descriptor_
 b (anonymous namespace)::CVRMsg_SetMasterProcess_reflection_
 b (anonymous namespace)::CVRMsg_SetNotificationImageResponse_descriptor_
 b (anonymous namespace)::CVRMsg_SetNotificationImageResponse_reflection_
 b (anonymous namespace)::CVRMsg_SetNotificationImage_descriptor_
 b (anonymous namespace)::CVRMsg_SetNotificationImage_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetBool_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetBool_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetBool_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetBool_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetFloat_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetFloat_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetFloat_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetFloat_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetInt32_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetInt32_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetInt32_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetInt32_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetString_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetString_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_GetString_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_GetString_reflection_
 b (anonymous namespace)::CVRMsg_Settings_RemoveKeyInSection_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_RemoveKeyInSection_reflection_
 b (anonymous namespace)::CVRMsg_Settings_RemoveSection_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_RemoveSection_reflection_
 b (anonymous namespace)::CVRMsg_Settings_SetBool_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_SetBool_reflection_
 b (anonymous namespace)::CVRMsg_Settings_SetFloat_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_SetFloat_reflection_
 b (anonymous namespace)::CVRMsg_Settings_SetInt32_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_SetInt32_reflection_
 b (anonymous namespace)::CVRMsg_Settings_SetString_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_SetString_reflection_
 b (anonymous namespace)::CVRMsg_Settings_SetValue_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_SetValue_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_Sync_Response_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_Sync_Response_reflection_
 b (anonymous namespace)::CVRMsg_Settings_Sync_descriptor_
 b (anonymous namespace)::CVRMsg_Settings_Sync_reflection_
 b (anonymous namespace)::CVRMsg_StartAutolaunchOverlays_descriptor_
 b (anonymous namespace)::CVRMsg_StartAutolaunchOverlays_reflection_
 b (anonymous namespace)::CVRMsg_StartProcessResponse_descriptor_
 b (anonymous namespace)::CVRMsg_StartProcessResponse_reflection_
 b (anonymous namespace)::CVRMsg_StartProcess_descriptor_
 b (anonymous namespace)::CVRMsg_StartProcess_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_AcquireVideoStreamingService_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_AcquireVideoStreamingService_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_EnableResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_EnableResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_Enable_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_Enable_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortionResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortion_InputCoord_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortion_InputCoord_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortion_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetDistortion_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFormatDimensionsResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFormatDimensionsResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFormatDimensions_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFormatDimensions_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFrameBoundsResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFrameBoundsResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFrameBounds_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetFrameBounds_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetIntrinsicsResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetIntrinsicsResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetIntrinsics_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetIntrinsics_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetProjectionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetProjectionResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetProjection_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetProjection_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetRecommendedUndistortion_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetRecommendedUndistortion_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetVideoStreamFormatResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetVideoStreamFormatResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetVideoStreamFormat_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_GetVideoStreamFormat_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_IsVideoStreamActiveResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_IsVideoStreamActiveResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_IsVideoStreamActive_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_IsVideoStreamActive_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_PauseVideoStreamResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_PauseVideoStreamResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_PauseVideoStream_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_PauseVideoStream_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ReleaseVideoStreamingService_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ReleaseVideoStreamingService_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ResumeVideoStreamResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ResumeVideoStreamResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ResumeVideoStream_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_ResumeVideoStream_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetAutoExposureResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetAutoExposureResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetAutoExposure_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetAutoExposure_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetCompatibilityModeResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetCompatibilityModeResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetCompatibilityMode_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetCompatibilityMode_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetUndistortionResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetUndistortionResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetUndistortion_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetUndistortion_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetVideoStreamFormatResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetVideoStreamFormatResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetVideoStreamFormat_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_SetVideoStreamFormat_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StartVideoStreamResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StartVideoStreamResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StartVideoStream_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StartVideoStream_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StopVideoStreamResponse_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StopVideoStreamResponse_reflection_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StopVideoStream_descriptor_
 b (anonymous namespace)::CVRMsg_TrackedCamera_StopVideoStream_reflection_
 b (anonymous namespace)::CVRMsg_TriggerHapticPulse_descriptor_
 b (anonymous namespace)::CVRMsg_TriggerHapticPulse_reflection_
 b (anonymous namespace)::protobuf_AssignDescriptors_once_
 b BlockingWait(int*, unsigned int, int*)::_systemTickFrequency
 b BlockingWait(int*, unsigned int, int*)::nAttempts
 b CVRCompositorClient::Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)::s_bFirstTime
 b CVRCompositorSharedTextures::GetSharedTextureHandle(vr::Texture_t const*, vr::VRTextureBounds_t*, int, int, vr::EVRSubmitFlags, CVRCompositorSharedTextures::Error*, bool*)::s_nCounter
 b CVRLog::InitLog(char const*, char const*, bool, unsigned long)::sb_combinedLogging
 b CVRSystemLatest::GetPropErrorNameFromEnum(vr::ETrackedPropertyError)::buf
 b CVRSystemLatest::PollNextEventWithPoseInternal(vr::ETrackingUniverseOrigin, vr::VREvent_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned long long)::bLogOnce
 b CVRSystemLatest::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)::k_ulHapticRequestEnforcedDelayMS
 b Demangled
 b GetEnglishStringForHmdError(vr::EVRInitError)::buf
 b GetIDForVRInitError(vr::EVRInitError)::buf
 b GetStringForCompositorError(vr::EVRCompositorError)::buf
 b GetStringForRenderModelError(vr::EVRRenderModelError)::buf
 b GetStringForVRApplicationTransitionState(vr::EVRApplicationTransitionState)::buf
 b GetStringForVRApplicationType(vr::EVRApplicationType)::buf
 b GetStringForVRApplicationsError(vr::EVRApplicationError)::buf
 b GetStringForVRButtonId(vr::EVRButtonId)::buf
 b GetStringForVRControllerAxisType(vr::EVRControllerAxisType)::buf
 b GetStringForVREventType(vr::EVREventType)::buf
 b GetStringForVRMsgType(VRMsgType)::buf
 b GetStringForVROverlayError(vr::EVROverlayError)::buf
 b GetStringForVRSettingsError(vr::EVRSettingsError)::buf
 b GetStringForVRTrackedCameraError(vr::EVRTrackedCameraError)::buf
 b NSAutoreleasePool_class
 b NSConstantString_class
 b NSMutableDictionary_class
 b NSString_class
 b NSUndoManagerProxy_targetClass
 b add_image_hook_ARC(mach_header const*, long)::patches
 b add_image_hook_autoreleasepool(mach_header const*, long)::patches
 b add_image_hook_swiftV1(mach_header const*, long)::patches
 b chaperone001
 b chaperone002
 b clientCore001
 b compositor001
 b compositor002
 b compositor003
 b compositor004
 b compositor005
 b g_ThreadMainThreadID
 b g_VRLog
 b g_pApplicationsLatest
 b g_pChaperoneLatest
 b g_pChaperoneSetupLatest
 b g_pClientCoreLatest
 b g_pCompositorLatest
 b g_pControlPanelLatest
 b g_pDashboardManagerLatest
 b g_pExtendedDisplayLatest
 b g_pHmdLatest
 b g_pIVRApplications
 b g_pIVRChaperone
 b g_pIVRChaperoneSetup
 b g_pIVRCompositor
 b g_pIVRExtendedDisplay
 b g_pIVRNotifications
 b g_pIVROverlay
 b g_pIVRRenderModels
 b g_pIVRSettings
 b g_pIVRSystem
 b g_pIVRTrackedCamera
 b g_pLoggingMutex
 b g_pNotificationsLatest
 b g_pOverlayLatest
 b g_pRenderModelsLatest
 b g_pTrackedCameraLatest
 b guard variable for BlockingWait(int*, unsigned int, int*)::_systemTickFrequency
 b guard variable for CVRLog::InitLog(char const*, char const*, bool, unsigned long)::sb_combinedLogging
 b guard variable for CVRSystemLatest::TriggerHapticPulse(unsigned int, unsigned int, unsigned short)::k_ulHapticRequestEnforcedDelayMS
 b guard variable for add_image_hook_ARC(mach_header const*, long)::patches
 b guard variable for add_image_hook_autoreleasepool(mach_header const*, long)::patches
 b guard variable for add_image_hook_swiftV1(mach_header const*, long)::patches
 b hmd001
 b hmd002
 b hmd003
 b hmd004
 b hmd005
 b hmd006
 b original_NSKKMS_fastIndexForKnownKey
 b original_NSKKMS_indexForKey
 b original_NSKKsD_addEntriesFromDictionary
 b original_NSKKsD_objectForKey
 b original_NSKKsD_removeObjectForKey
 b original_NSKKsD_setObject_forKey
 b original_NSManagedObject_allocBatch
 b original_NSManagedObject_allocWithEntity
 b original_NSManagedObject_init
 b original_class_getName
 b original_objc_allocateClassPair
 b original_objc_copyClassNamesForImage
 b original_objc_getClass
 b original_objc_getMetaClass
 b original_objc_getProtocol
 b original_objc_getRequiredClass
 b original_objc_lookUpClass
 b original_object_getIndexedIvars
 b original_protocol_getName
 b protobuf_AddDesc_vr_5fmessages_2eproto()::already_here
 b selectBuf
 b sg_bAcquireSyncInPresent
 b sg_bAcquireSyncInSubmit
 b stackDepth_g
 b stbi__de_iphone_flag
 b stbi__g_failure_reason
 b stbi__unpremultiply_on_load
 b stbi__vertically_flip_on_load
 b stbi__zdefault_distance
 b stbi__zdefault_length
 b system001
 b system002
 b system003
 b system004
 b systemBaseTicks
 b systemSecondsPerTick
 b systemTicksPerSecond
 b systemTimeInitialized
 b vr::CVRChaperoneLatest::GetBoundsColor(vr::HmdColor_t*, int, float, vr::HmdColor_t*)::s_bFirstTime
 b vrapplications001
 b vrapplications002
 b vrapplications003
 b vrapplications004
 b vrchaperonesetup001
 b vrchaperonesetup002
 b vrchaperonesetup003
 b vrchaperonesetup004
 b vrcompositor006
 b vrcompositor007
 b vrcompositor008
 b vrcompositor009
 b vrcompositor010
 b vrcompositor011
 b vrcompositor012
 b vrcompositor013
 b vrcompositor014
 b vrcontrolpanel001
 b vrnotifications001
 b vroverlay001
 b vroverlay002
 b vroverlay003
 b vroverlay004
 b vroverlay005
 b vroverlay006
 b vroverlay007
 b vroverlay008
 b vroverlay009
 b vroverlay010
 b vroverlay011
 b vrrendermodels001
 b vrrendermodels002
 b vrrendermodels003
 b vrrendermodels004
 b vrsystem001
 b vrsystem002
 b vrsystem003
 b vrsystem004
 b vrsystem005
 b vrsystem006
 b vrsystem007
 b vrsystem008
 b vrsystem009
 b vrsystem010
 b vrsystem011
 b vrtrackedcamera002
 bootstrap_look_up
 bootstrap_port
 bzero
 calloc
 ceilf
 chdir
 chmod
 chmod$UNIX2003
 class_addMethod
 class_addProperty
 class_addProtocol
 class_getInstanceMethod
 class_getInstanceSize
 class_getInstanceVariable
 class_getIvarLayout
 class_getName
 class_getSuperclass
 class_isMetaClass
 class_replaceMethod
 class_respondsToSelector
 close
 close$UNIX2003
 connect
 connect$UNIX2003
 cos
 cosf
 d OBJC_$_CLASS_METHODS___ARCLite__
 d OBJC_CLASS_$___ARCLite__
 d OBJC_CLASS_RO_$___ARCLite__
 d OBJC_METACLASS_RO_$___ARCLite__
 d demangleLock
 d g_IVRApplications_004_FnTable
 d g_IVRCompositor_013_FnTable
 d g_IVRCompositor_014_FnTable
 d g_IVROverlay_010_FnTable
 d g_IVROverlay_011_FnTable
 d g_IVRRenderModels_004_FnTable
 d g_IVRSystem_011_FnTable
 d g_IVRTrackedCamera_002_FnTable
 d g_VR_IVRApplications_FnTable
 d g_VR_IVRChaperoneSetup_FnTable
 d g_VR_IVRChaperone_FnTable
 d g_VR_IVRCompositor_FnTable
 d g_VR_IVRExtendedDisplay_FnTable
 d g_VR_IVRNotifications_FnTable
 d g_VR_IVROverlay_FnTable
 d g_VR_IVRRenderModels_FnTable
 d g_VR_IVRSettings_FnTable
 d g_VR_IVRSystem_FnTable
 d g_VR_IVRTrackedCamera_FnTable
 d stbi__h2l_gamma_i
 d stbi__h2l_scale_i
 d stbi__parse_png_file(stbi__png*, int, int)::invalid_chunk
 d stbi__stdio_callbacks
 dladdr
 dlclose
 dlopen
 dlsym
 dyld_stub_binder
 execvp
 fclose
 feof
 fflush
 fmod
 fmodf
 fopen
 fopen$UNIX2003
 fork
 fprintf
 fputs
 fputs$UNIX2003
 fread
 free
 fseek
 fseeko
 ftell
 ftello
 ftruncate
 fwrite
 fwrite$UNIX2003
 getcwd
 getenv
 getpid
 gettimeofday
 glBindFramebuffer
 glBindRenderbuffer
 glBindTexture
 glBlitFramebuffer
 glCheckFramebufferStatus
 glDeleteFramebuffers
 glDeleteTextures
 glDisable
 glEnable
 glFramebufferRenderbuffer
 glFramebufferTexture2D
 glGenFramebuffers
 glGenTextures
 glGetRenderbufferParameteriv
 glGetTexLevelParameteriv
 glTexParameteri
 hash_create
 hash_search
 ivar_getName
 ivar_getOffset
 kCFCoreFoundationVersionNumber
 kIOSurfaceBytesPerElement
 kIOSurfaceHeight
 kIOSurfaceIsGlobal
 kIOSurfaceWidth
 kill
 kill$UNIX2003
 launch_data_alloc
 launch_data_dict_insert
 launch_data_free
 launch_data_new_string
 launch_msg
 ldexp
 localtime
 mach_absolute_time
 mach_msg
 mach_port_allocate
 mach_port_deallocate
 mach_task_self_
 mach_thread_self
 mach_timebase_info
 malloc
 memcmp
 memcpy
 memmove
 memset
 method_setImplementation
 mkdir
 mmap
 mmap$UNIX2003
 munmap
 munmap$UNIX2003
 nanosleep
 nanosleep$UNIX2003
 non-virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
 objc_allocateClassPair
 objc_autoreleasePoolPop
 objc_autoreleasePoolPush
 objc_collectingEnabled
 objc_constructInstance
 objc_copyClassNamesForImage
 objc_getClass
 objc_getMetaClass
 objc_getProtocol
 objc_getRequiredClass
 objc_initializeClassPair
 objc_lookUpClass
 objc_msgSend
 objc_readClassPair
 objc_registerClassPair
 objc_retain
 object_getClass
 object_getIndexedIvars
 object_getIvar
 object_setIvar
 open
 open$UNIX2003
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 pow
 powf
 property_copyAttributeList
 protocol_getMethodDescription
 protocol_getName
 pthread_attr_init
 pthread_attr_setstacksize
 pthread_cond_destroy
 pthread_cond_init
 pthread_cond_init$UNIX2003
 pthread_cond_signal
 pthread_cond_timedwait
 pthread_cond_timedwait$UNIX2003
 pthread_create
 pthread_getspecific
 pthread_join
 pthread_join$UNIX2003
 pthread_key_create
 pthread_key_delete
 pthread_kill
 pthread_mach_thread_np
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_destroy
 pthread_mutexattr_destroy$UNIX2003
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_self
 pthread_setspecific
 qsort
 r IPC::gTable
 r Json::kNull
 r crc32(unsigned long, void const*, unsigned long)::crcTable
 r first_row_filter
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_AbortApplicationTransition_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_AcknowledgeQuit_Exiting_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_AcknowledgeQuit_UserPrompt_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ApplicationInfo_Manifest_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ApplicationInfo_Options_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ApplicationInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ApplicationManifestRequest_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ApplicationManifestResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CancelApplicationLaunchResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CancelApplicationLaunch_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorBringToFront_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorClearFrameBuffer_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorConnectResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorConnect_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorDumpImages_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorFadeGrid_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorFadeToColor_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorGoToBack_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorHandleSystemButtonResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorHandleSystemButton_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorHideDashboardResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorHideDashboard_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorHideMirrorWindow_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorPrepareInternalProcessTransitionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorPrepareInternalProcessTransition_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorQuit_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorRequestScreenshotResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorRequestScreenshot_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorSetOverlayFromFileResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorSetOverlayFromFile_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorSetOverlay_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorShowDashboardResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorShowDashboard_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorShowMirrorWindow_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CompositorToggleCameraRoomView_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ComputeDistortionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ComputeDistortion_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_ConnectResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Connect_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CreateSwapTextureSetResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_CreateSwapTextureSet_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_DestroySwapTextureSet_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_DriverDebugRequest_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_DriverDebugResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetApplicationInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDisplayInfoResponse_DisplayInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDisplayInfoResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDisplayInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDriverDetailResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDriverDetail_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDriverInfoResponse_DriverInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDriverInfoResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetDriverInfo_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetPropertyResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_GetProperty_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_InputCaptureRequest_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_InputCaptureResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchApplicationResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchApplication_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchInternalProcessResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchInternalProcess_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchTemplateApplicationResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchTemplateApplication_AppOverrideKey_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_LaunchTemplateApplication_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_PerformApplicationPrelaunchCheckResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_PerformApplicationPrelaunchCheck_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_PowerOffTrackedDevice_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_QuitProcessRequest_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_QuitProcessResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetApplicationOptionsResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetApplicationOptions_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetApplicationProcessIdResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetApplicationProcessId_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetMasterProcessResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetMasterProcess_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetNotificationImageResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_SetNotificationImage_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetBool_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetBool_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetFloat_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetFloat_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetInt32_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetInt32_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetString_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_GetString_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_RemoveKeyInSection_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_RemoveSection_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_SetBool_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_SetFloat_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_SetInt32_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_SetString_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_SetValue_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_Sync_Response_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_Settings_Sync_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_StartAutolaunchOverlays_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_StartProcessResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_StartProcess_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_AcquireVideoStreamingServiceResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_AcquireVideoStreamingService_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_EnableResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_Enable_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetDistortionResponse_OutputCoord_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetDistortionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetDistortion_InputCoord_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetDistortion_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetFormatDimensionsResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetFormatDimensions_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetFrameBoundsResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetFrameBounds_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetIntrinsicsResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetIntrinsics_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetProjectionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetProjection_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetRecommendedUndistortionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetRecommendedUndistortion_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetVideoStreamFormatResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_GetVideoStreamFormat_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_IsVideoStreamActiveResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_IsVideoStreamActive_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_PauseVideoStreamResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_PauseVideoStream_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_ReleaseVideoStreamingServiceResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_ReleaseVideoStreamingService_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_ResumeVideoStreamResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_ResumeVideoStream_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetAutoExposureResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetAutoExposure_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetCompatibilityModeResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetCompatibilityMode_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetUndistortionResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetUndistortion_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetVideoStreamFormatResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_SetVideoStreamFormat_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_StartVideoStreamResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_StartVideoStream_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_StopVideoStreamResponse_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TrackedCamera_StopVideoStream_offsets_
 r protobuf_AssignDesc_vr_5fmessages_2eproto()::CVRMsg_TriggerHapticPulse_offsets_
 r s_mat34Identity
 r stbi__bmask
 r stbi__check_png_header(stbi__context*)::png_sig
 r stbi__compute_huffman_codes(stbi__zbuf*)::length_dezigzag
 r stbi__depth_scale_table
 r stbi__jbias
 r stbi__jpeg_dezigzag
 r stbi__zdist_base
 r stbi__zdist_extra
 r stbi__zlength_base
 r stbi__zlength_extra
 read
 read$UNIX2003
 realloc
 rename
 scandir$INODE64
 sched_yield
 sel_getUid
 select$DARWIN_EXTSN
 sem_close
 sem_open
 sem_post
 sem_trywait
 sem_unlink
 sem_wait
 sem_wait$UNIX2003
 semctl
 semctl$UNIX2003
 semop
 setenv
 setenv$UNIX2003
 setpgid
 setsockopt
 shm_open
 shutdown
 sigaction
 sin
 sinf
 snprintf
 socket
 sprintf
 sscanf
 stat$INODE64
 std::__1::__basic_string_common<true>::__throw_length_error() const
 std::__1::__next_prime(unsigned long)
 std::__1::__vector_base_common<true>::__throw_length_error() const
 std::__1::basic_ios<char, std::__1::char_traits<char> >::~basic_ios()
 std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
 std::__1::basic_istream<char, std::__1::char_traits<char> >::getline(char*, int, char)
 std::__1::basic_istream<char, std::__1::char_traits<char> >::getline(char*, long, char)
 std::__1::basic_istream<char, std::__1::char_traits<char> >::operator>>(double&)
 std::__1::basic_istream<char, std::__1::char_traits<char> >::peek()
 std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char> >&, bool)
 std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::flush()
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::put(char)
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
 std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::basic_streambuf()
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, int)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, int)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, long)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, int)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long)
 std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::at(unsigned long) const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, char const*)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::replace(unsigned long, unsigned long, char const*)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
 std::__1::codecvt<char, char, __mbstate_t>::id
 std::__1::ctype<char>::id
 std::__1::ios_base::__set_badbit_and_consider_rethrow()
 std::__1::ios_base::clear(unsigned int)
 std::__1::ios_base::getloc() const
 std::__1::ios_base::init(void*)
 std::__1::locale::has_facet(std::__1::locale::id&) const
 std::__1::locale::locale(std::__1::locale const&)
 std::__1::locale::use_facet(std::__1::locale::id&) const
 std::__1::locale::~locale()
 std::__1::to_string(int)
 std::__1::to_string(unsigned int)
 std::bad_cast::bad_cast()
 std::bad_cast::~bad_cast()
 std::exception::~exception()
 std::terminate()
 strcasecmp
 strchr
 strcmp
 strcpy
 strcspn
 strerror
 strerror$UNIX2003
 strftime
 strftime$UNIX2003
 strlcpy
 strlen
 strncasecmp
 strncmp
 strncpy
 strpbrk
 strrchr
 strspn
 strstr
 strtod
 strtod$UNIX2003
 strtof
 strtof$UNIX2003
 strtol
 strtoll
 strtoul
 strtoull
 swprintf
 sysctl
 system
 system$UNIX2003
 t (anonymous namespace)::CWaitForVrServerExit::~CWaitForVrServerExit()
 t (anonymous namespace)::GetChildVector2d(double*, char const*, Json::Value const&)
 t (anonymous namespace)::GetChildVector3d(vr::HmdVector3d_t*, char const*, Json::Value const&)
 t (anonymous namespace)::protobuf_RegisterTypes(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
 t BlockingWait(int*, unsigned int, int*)
 t CompareTrackedDeviceEntry(void const*, void const*)
 t FileSelect(dirent const*)
 t IVRApplications_004_FnTable_AddApplicationManifest(char const*, bool)
 t IVRApplications_004_FnTable_CancelApplicationLaunch(char const*)
 t IVRApplications_004_FnTable_GetApplicationAutoLaunch(char const*)
 t IVRApplications_004_FnTable_GetApplicationCount()
 t IVRApplications_004_FnTable_GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 t IVRApplications_004_FnTable_GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 t IVRApplications_004_FnTable_GetApplicationProcessId(char const*)
 t IVRApplications_004_FnTable_GetApplicationPropertyBool(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 t IVRApplications_004_FnTable_GetApplicationPropertyString(char const*, vr::EVRApplicationProperty, char*, unsigned int, vr::EVRApplicationError*)
 t IVRApplications_004_FnTable_GetApplicationPropertyUint64(char const*, vr::EVRApplicationProperty, vr::EVRApplicationError*)
 t IVRApplications_004_FnTable_GetApplicationsErrorNameFromEnum(vr::EVRApplicationError)
 t IVRApplications_004_FnTable_GetApplicationsTransitionStateNameFromEnum(vr::EVRApplicationTransitionState)
 t IVRApplications_004_FnTable_GetStartingApplication(char*, unsigned int)
 t IVRApplications_004_FnTable_GetTransitionState()
 t IVRApplications_004_FnTable_IdentifyApplication(unsigned int, char const*)
 t IVRApplications_004_FnTable_IsApplicationInstalled(char const*)
 t IVRApplications_004_FnTable_IsQuitUserPromptRequested()
 t IVRApplications_004_FnTable_LaunchApplication(char const*)
 t IVRApplications_004_FnTable_LaunchDashboardOverlay(char const*)
 t IVRApplications_004_FnTable_LaunchInternalProcess(char const*, char const*, char const*)
 t IVRApplications_004_FnTable_PerformApplicationPrelaunchCheck(char const*)
 t IVRApplications_004_FnTable_RemoveApplicationManifest(char const*)
 t IVRApplications_004_FnTable_SetApplicationAutoLaunch(char const*, bool)
 t IVRCompositor_013_FnTable_CanRenderScene()
 t IVRCompositor_013_FnTable_ClearLastSubmittedFrame()
 t IVRCompositor_013_FnTable_ClearSkyboxOverride()
 t IVRCompositor_013_FnTable_CompositorBringToFront()
 t IVRCompositor_013_FnTable_CompositorDumpImages()
 t IVRCompositor_013_FnTable_CompositorGoToBack()
 t IVRCompositor_013_FnTable_CompositorQuit()
 t IVRCompositor_013_FnTable_FadeGrid(float, bool)
 t IVRCompositor_013_FnTable_FadeToColor(float, float, float, float, float, bool)
 t IVRCompositor_013_FnTable_ForceInterleavedReprojectionOn(bool)
 t IVRCompositor_013_FnTable_ForceReconnectProcess()
 t IVRCompositor_013_FnTable_GetCurrentSceneFocusProcess()
 t IVRCompositor_013_FnTable_GetFrameTimeRemaining()
 t IVRCompositor_013_FnTable_GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 t IVRCompositor_013_FnTable_GetLastFrameRenderer()
 t IVRCompositor_013_FnTable_GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 t IVRCompositor_013_FnTable_GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 t IVRCompositor_013_FnTable_GetTrackingSpace()
 t IVRCompositor_013_FnTable_HideMirrorWindow()
 t IVRCompositor_013_FnTable_IsFullscreen()
 t IVRCompositor_013_FnTable_IsMirrorWindowVisible()
 t IVRCompositor_013_FnTable_PostPresentHandoff()
 t IVRCompositor_013_FnTable_SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 t IVRCompositor_013_FnTable_SetTrackingSpace(vr::ETrackingUniverseOrigin)
 t IVRCompositor_013_FnTable_ShouldAppRenderWithLowResources()
 t IVRCompositor_013_FnTable_ShowMirrorWindow()
 t IVRCompositor_013_FnTable_Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 t IVRCompositor_013_FnTable_WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 t IVRCompositor_014_FnTable_CanRenderScene()
 t IVRCompositor_014_FnTable_ClearLastSubmittedFrame()
 t IVRCompositor_014_FnTable_ClearSkyboxOverride()
 t IVRCompositor_014_FnTable_CompositorBringToFront()
 t IVRCompositor_014_FnTable_CompositorDumpImages()
 t IVRCompositor_014_FnTable_CompositorGoToBack()
 t IVRCompositor_014_FnTable_CompositorQuit()
 t IVRCompositor_014_FnTable_FadeGrid(float, bool)
 t IVRCompositor_014_FnTable_FadeToColor(float, float, float, float, float, bool)
 t IVRCompositor_014_FnTable_ForceInterleavedReprojectionOn(bool)
 t IVRCompositor_014_FnTable_ForceReconnectProcess()
 t IVRCompositor_014_FnTable_GetCurrentSceneFocusProcess()
 t IVRCompositor_014_FnTable_GetCurrentScreenshotType()
 t IVRCompositor_014_FnTable_GetFrameTimeRemaining()
 t IVRCompositor_014_FnTable_GetFrameTiming(vr::Compositor_FrameTiming*, unsigned int)
 t IVRCompositor_014_FnTable_GetLastFrameRenderer()
 t IVRCompositor_014_FnTable_GetLastPoseForTrackedDeviceIndex(unsigned int, vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t*)
 t IVRCompositor_014_FnTable_GetLastPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 t IVRCompositor_014_FnTable_GetTrackingSpace()
 t IVRCompositor_014_FnTable_HideMirrorWindow()
 t IVRCompositor_014_FnTable_IsFullscreen()
 t IVRCompositor_014_FnTable_IsMirrorWindowVisible()
 t IVRCompositor_014_FnTable_PostPresentHandoff()
 t IVRCompositor_014_FnTable_RequestScreenshot(vr::EVRScreenshotType, char const*)
 t IVRCompositor_014_FnTable_SetSkyboxOverride(vr::Texture_t const*, unsigned int)
 t IVRCompositor_014_FnTable_SetTrackingSpace(vr::ETrackingUniverseOrigin)
 t IVRCompositor_014_FnTable_ShouldAppRenderWithLowResources()
 t IVRCompositor_014_FnTable_ShowMirrorWindow()
 t IVRCompositor_014_FnTable_Submit(vr::EVREye, vr::Texture_t const*, vr::VRTextureBounds_t const*, vr::EVRSubmitFlags)
 t IVRCompositor_014_FnTable_SuspendRendering(bool)
 t IVRCompositor_014_FnTable_WaitGetPoses(vr::TrackedDevicePose_t*, unsigned int, vr::TrackedDevicePose_t*, unsigned int)
 t IVROverlay_010_FnTable_ClearOverlayTexture(unsigned long long)
 t IVROverlay_010_FnTable_ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 t IVROverlay_010_FnTable_CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 t IVROverlay_010_FnTable_CreateOverlay(char const*, char const*, unsigned long long*)
 t IVROverlay_010_FnTable_DestroyOverlay(unsigned long long)
 t IVROverlay_010_FnTable_FindOverlay(char const*, unsigned long long*)
 t IVROverlay_010_FnTable_GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 t IVROverlay_010_FnTable_GetGamepadFocusOverlay()
 t IVROverlay_010_FnTable_GetHighQualityOverlay()
 t IVROverlay_010_FnTable_GetKeyboardText(char*, unsigned int)
 t IVROverlay_010_FnTable_GetOverlayAlpha(unsigned long long, float*)
 t IVROverlay_010_FnTable_GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 t IVROverlay_010_FnTable_GetOverlayColor(unsigned long long, float*, float*, float*)
 t IVROverlay_010_FnTable_GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 t IVROverlay_010_FnTable_GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 t IVROverlay_010_FnTable_GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 t IVROverlay_010_FnTable_GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 t IVROverlay_010_FnTable_GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 t IVROverlay_010_FnTable_GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 t IVROverlay_010_FnTable_GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 t IVROverlay_010_FnTable_GetOverlayRenderingPid(unsigned long long)
 t IVROverlay_010_FnTable_GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 t IVROverlay_010_FnTable_GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 t IVROverlay_010_FnTable_GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 t IVROverlay_010_FnTable_GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 t IVROverlay_010_FnTable_GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 t IVROverlay_010_FnTable_GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 t IVROverlay_010_FnTable_GetOverlayWidthInMeters(unsigned long long, float*)
 t IVROverlay_010_FnTable_GetPrimaryDashboardDevice()
 t IVROverlay_010_FnTable_GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 t IVROverlay_010_FnTable_HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 t IVROverlay_010_FnTable_HideKeyboard()
 t IVROverlay_010_FnTable_HideOverlay(unsigned long long)
 t IVROverlay_010_FnTable_IsActiveDashboardOverlay(unsigned long long)
 t IVROverlay_010_FnTable_IsDashboardVisible()
 t IVROverlay_010_FnTable_IsHoverTargetOverlay(unsigned long long)
 t IVROverlay_010_FnTable_IsOverlayVisible(unsigned long long)
 t IVROverlay_010_FnTable_MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 t IVROverlay_010_FnTable_PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 t IVROverlay_010_FnTable_SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 t IVROverlay_010_FnTable_SetGamepadFocusOverlay(unsigned long long)
 t IVROverlay_010_FnTable_SetHighQualityOverlay(unsigned long long)
 t IVROverlay_010_FnTable_SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 t IVROverlay_010_FnTable_SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 t IVROverlay_010_FnTable_SetOverlayAlpha(unsigned long long, float)
 t IVROverlay_010_FnTable_SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 t IVROverlay_010_FnTable_SetOverlayColor(unsigned long long, float, float, float)
 t IVROverlay_010_FnTable_SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 t IVROverlay_010_FnTable_SetOverlayFromFile(unsigned long long, char const*)
 t IVROverlay_010_FnTable_SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 t IVROverlay_010_FnTable_SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 t IVROverlay_010_FnTable_SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 t IVROverlay_010_FnTable_SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 t IVROverlay_010_FnTable_SetOverlayRenderingPid(unsigned long long, unsigned int)
 t IVROverlay_010_FnTable_SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 t IVROverlay_010_FnTable_SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 t IVROverlay_010_FnTable_SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 t IVROverlay_010_FnTable_SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 t IVROverlay_010_FnTable_SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 t IVROverlay_010_FnTable_SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 t IVROverlay_010_FnTable_SetOverlayWidthInMeters(unsigned long long, float)
 t IVROverlay_010_FnTable_ShowDashboard(char const*)
 t IVROverlay_010_FnTable_ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 t IVROverlay_010_FnTable_ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 t IVROverlay_010_FnTable_ShowOverlay(unsigned long long)
 t IVROverlay_011_FnTable_ClearOverlayTexture(unsigned long long)
 t IVROverlay_011_FnTable_ComputeOverlayIntersection(unsigned long long, vr::VROverlayIntersectionParams_t const*, vr::VROverlayIntersectionResults_t*)
 t IVROverlay_011_FnTable_CreateDashboardOverlay(char const*, char const*, unsigned long long*, unsigned long long*)
 t IVROverlay_011_FnTable_CreateOverlay(char const*, char const*, unsigned long long*)
 t IVROverlay_011_FnTable_DestroyOverlay(unsigned long long)
 t IVROverlay_011_FnTable_FindOverlay(char const*, unsigned long long*)
 t IVROverlay_011_FnTable_GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 t IVROverlay_011_FnTable_GetGamepadFocusOverlay()
 t IVROverlay_011_FnTable_GetHighQualityOverlay()
 t IVROverlay_011_FnTable_GetKeyboardText(char*, unsigned int)
 t IVROverlay_011_FnTable_GetOverlayAlpha(unsigned long long, float*)
 t IVROverlay_011_FnTable_GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 t IVROverlay_011_FnTable_GetOverlayColor(unsigned long long, float*, float*, float*)
 t IVROverlay_011_FnTable_GetOverlayErrorNameFromEnum(vr::EVROverlayError)
 t IVROverlay_011_FnTable_GetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool*)
 t IVROverlay_011_FnTable_GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 t IVROverlay_011_FnTable_GetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod*)
 t IVROverlay_011_FnTable_GetOverlayKey(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 t IVROverlay_011_FnTable_GetOverlayMouseScale(unsigned long long, vr::HmdVector2_t*)
 t IVROverlay_011_FnTable_GetOverlayName(unsigned long long, char*, unsigned int, vr::EVROverlayError*)
 t IVROverlay_011_FnTable_GetOverlayRenderingPid(unsigned long long)
 t IVROverlay_011_FnTable_GetOverlayTexture(unsigned long long, void**, void*, unsigned int*, unsigned int*, unsigned int*, vr::EGraphicsAPIConvention*, vr::EColorSpace*)
 t IVROverlay_011_FnTable_GetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t*)
 t IVROverlay_011_FnTable_GetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace*)
 t IVROverlay_011_FnTable_GetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin*, vr::HmdMatrix34_t*)
 t IVROverlay_011_FnTable_GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 t IVROverlay_011_FnTable_GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, vr::HmdMatrix34_t*)
 t IVROverlay_011_FnTable_GetOverlayTransformType(unsigned long long, vr::VROverlayTransformType*)
 t IVROverlay_011_FnTable_GetOverlayWidthInMeters(unsigned long long, float*)
 t IVROverlay_011_FnTable_GetPrimaryDashboardDevice()
 t IVROverlay_011_FnTable_GetTransformForOverlayCoordinates(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdVector2_t, vr::HmdMatrix34_t*)
 t IVROverlay_011_FnTable_HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 t IVROverlay_011_FnTable_HideKeyboard()
 t IVROverlay_011_FnTable_HideOverlay(unsigned long long)
 t IVROverlay_011_FnTable_IsActiveDashboardOverlay(unsigned long long)
 t IVROverlay_011_FnTable_IsDashboardVisible()
 t IVROverlay_011_FnTable_IsHoverTargetOverlay(unsigned long long)
 t IVROverlay_011_FnTable_IsOverlayVisible(unsigned long long)
 t IVROverlay_011_FnTable_MoveGamepadFocusToNeighbor(vr::EOverlayDirection, unsigned long long)
 t IVROverlay_011_FnTable_PollNextOverlayEvent(unsigned long long, vr::VREvent_t*, unsigned int)
 t IVROverlay_011_FnTable_ReleaseNativeOverlayHandle(unsigned long long, void*)
 t IVROverlay_011_FnTable_SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 t IVROverlay_011_FnTable_SetGamepadFocusOverlay(unsigned long long)
 t IVROverlay_011_FnTable_SetHighQualityOverlay(unsigned long long)
 t IVROverlay_011_FnTable_SetKeyboardPositionForOverlay(unsigned long long, vr::HmdRect2_t)
 t IVROverlay_011_FnTable_SetKeyboardTransformAbsolute(vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 t IVROverlay_011_FnTable_SetOverlayAlpha(unsigned long long, float)
 t IVROverlay_011_FnTable_SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 t IVROverlay_011_FnTable_SetOverlayColor(unsigned long long, float, float, float)
 t IVROverlay_011_FnTable_SetOverlayFlag(unsigned long long, vr::VROverlayFlags, bool)
 t IVROverlay_011_FnTable_SetOverlayFromFile(unsigned long long, char const*)
 t IVROverlay_011_FnTable_SetOverlayInputMethod(unsigned long long, vr::VROverlayInputMethod)
 t IVROverlay_011_FnTable_SetOverlayMouseScale(unsigned long long, vr::HmdVector2_t const*)
 t IVROverlay_011_FnTable_SetOverlayNeighbor(vr::EOverlayDirection, unsigned long long, unsigned long long)
 t IVROverlay_011_FnTable_SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 t IVROverlay_011_FnTable_SetOverlayRenderingPid(unsigned long long, unsigned int)
 t IVROverlay_011_FnTable_SetOverlayTexture(unsigned long long, vr::Texture_t const*)
 t IVROverlay_011_FnTable_SetOverlayTextureBounds(unsigned long long, vr::VRTextureBounds_t const*)
 t IVROverlay_011_FnTable_SetOverlayTextureColorSpace(unsigned long long, vr::EColorSpace)
 t IVROverlay_011_FnTable_SetOverlayTransformAbsolute(unsigned long long, vr::ETrackingUniverseOrigin, vr::HmdMatrix34_t const*)
 t IVROverlay_011_FnTable_SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char const*)
 t IVROverlay_011_FnTable_SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, vr::HmdMatrix34_t const*)
 t IVROverlay_011_FnTable_SetOverlayWidthInMeters(unsigned long long, float)
 t IVROverlay_011_FnTable_ShowDashboard(char const*)
 t IVROverlay_011_FnTable_ShowKeyboard(vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 t IVROverlay_011_FnTable_ShowKeyboardForOverlay(unsigned long long, vr::EGamepadTextInputMode, vr::EGamepadTextInputLineMode, char const*, unsigned int, char const*, bool, unsigned long long)
 t IVROverlay_011_FnTable_ShowOverlay(unsigned long long)
 t IVRRenderModels_004_FnTable_FreeRenderModel(vr::RenderModel_t*)
 t IVRRenderModels_004_FnTable_FreeTexture(vr::RenderModel_TextureMap_t*)
 t IVRRenderModels_004_FnTable_FreeTextureD3D11(void*)
 t IVRRenderModels_004_FnTable_GetComponentButtonMask(char const*, char const*)
 t IVRRenderModels_004_FnTable_GetComponentCount(char const*)
 t IVRRenderModels_004_FnTable_GetComponentName(char const*, unsigned int, char*, unsigned int)
 t IVRRenderModels_004_FnTable_GetComponentRenderModelName(char const*, char const*, char*, unsigned int)
 t IVRRenderModels_004_FnTable_GetComponentState(char const*, char const*, vr::VRControllerState001_t const*, vr::RenderModel_ControllerMode_State_t const*, vr::RenderModel_ComponentState_t*)
 t IVRRenderModels_004_FnTable_GetRenderModelCount()
 t IVRRenderModels_004_FnTable_GetRenderModelName(unsigned int, char*, unsigned int)
 t IVRRenderModels_004_FnTable_LoadIntoTextureD3D11_Async(int, void*)
 t IVRRenderModels_004_FnTable_LoadRenderModel_Async(char const*, vr::RenderModel_t**)
 t IVRRenderModels_004_FnTable_LoadTextureD3D11_Async(int, void*, void**)
 t IVRRenderModels_004_FnTable_LoadTexture_Async(int, vr::RenderModel_TextureMap_t**)
 t IVRRenderModels_004_FnTable_RenderModelHasComponent(char const*, char const*)
 t IVRSystem_011_FnTable_AcknowledgeQuit_Exiting()
 t IVRSystem_011_FnTable_AcknowledgeQuit_UserPrompt()
 t IVRSystem_011_FnTable_ApplyTransform(vr::TrackedDevicePose_t*, vr::TrackedDevicePose_t const*, vr::HmdMatrix34_t const*)
 t IVRSystem_011_FnTable_CaptureInputFocus()
 t IVRSystem_011_FnTable_ComputeDistortion(vr::EVREye, float, float)
 t IVRSystem_011_FnTable_DriverDebugRequest(unsigned int, char const*, char*, unsigned int)
 t IVRSystem_011_FnTable_GetBoolTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_GetButtonIdNameFromEnum(vr::EVRButtonId)
 t IVRSystem_011_FnTable_GetControllerAxisTypeNameFromEnum(vr::EVRControllerAxisType)
 t IVRSystem_011_FnTable_GetControllerRoleForTrackedDeviceIndex(unsigned int)
 t IVRSystem_011_FnTable_GetControllerState(unsigned int, vr::VRControllerState001_t*)
 t IVRSystem_011_FnTable_GetControllerStateWithPose(vr::ETrackingUniverseOrigin, unsigned int, vr::VRControllerState001_t*, vr::TrackedDevicePose_t*)
 t IVRSystem_011_FnTable_GetD3D9AdapterIndex()
 t IVRSystem_011_FnTable_GetDXGIOutputInfo(int*)
 t IVRSystem_011_FnTable_GetDeviceToAbsoluteTrackingPose(vr::ETrackingUniverseOrigin, float, vr::TrackedDevicePose_t*, unsigned int)
 t IVRSystem_011_FnTable_GetEventTypeNameFromEnum(vr::EVREventType)
 t IVRSystem_011_FnTable_GetEyeToHeadTransform(vr::EVREye)
 t IVRSystem_011_FnTable_GetFloatTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_GetHiddenAreaMesh(vr::EVREye)
 t IVRSystem_011_FnTable_GetInt32TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_GetMatrix34TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_GetProjectionMatrix(vr::EVREye, float, float, vr::EGraphicsAPIConvention)
 t IVRSystem_011_FnTable_GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
 t IVRSystem_011_FnTable_GetPropErrorNameFromEnum(vr::ETrackedPropertyError)
 t IVRSystem_011_FnTable_GetRawZeroPoseToStandingAbsoluteTrackingPose()
 t IVRSystem_011_FnTable_GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 t IVRSystem_011_FnTable_GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 t IVRSystem_011_FnTable_GetSortedTrackedDeviceIndicesOfClass(vr::ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 t IVRSystem_011_FnTable_GetStringTrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, char*, unsigned int, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_GetTimeSinceLastVsync(float*, unsigned long long*)
 t IVRSystem_011_FnTable_GetTrackedDeviceActivityLevel(unsigned int)
 t IVRSystem_011_FnTable_GetTrackedDeviceClass(unsigned int)
 t IVRSystem_011_FnTable_GetTrackedDeviceIndexForControllerRole(vr::ETrackedControllerRole)
 t IVRSystem_011_FnTable_GetUint64TrackedDeviceProperty(unsigned int, vr::ETrackedDeviceProperty, vr::ETrackedPropertyError*)
 t IVRSystem_011_FnTable_IsDisplayOnDesktop()
 t IVRSystem_011_FnTable_IsInputFocusCapturedByAnotherProcess()
 t IVRSystem_011_FnTable_IsTrackedDeviceConnected(unsigned int)
 t IVRSystem_011_FnTable_PerformFirmwareUpdate(unsigned int)
 t IVRSystem_011_FnTable_PerformanceTestEnableCapture(bool)
 t IVRSystem_011_FnTable_PerformanceTestReportFidelityLevelChange(int)
 t IVRSystem_011_FnTable_PollNextEvent(vr::VREvent_t*, unsigned int)
 t IVRSystem_011_FnTable_PollNextEventWithPose(vr::ETrackingUniverseOrigin, vr::VREvent_t*, unsigned int, vr::TrackedDevicePose_t*)
 t IVRSystem_011_FnTable_ReleaseInputFocus()
 t IVRSystem_011_FnTable_ResetSeatedZeroPose()
 t IVRSystem_011_FnTable_SetDisplayVisibility(bool)
 t IVRSystem_011_FnTable_TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 t IVRTrackedCamera_002_FnTable_AcquireVideoStreamingService(unsigned int, void**)
 t IVRTrackedCamera_002_FnTable_GetCameraErrorNameFromEnum(vr::EVRTrackedCameraError)
 t IVRTrackedCamera_002_FnTable_GetCameraFrameSize(unsigned int, vr::EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*)
 t IVRTrackedCamera_002_FnTable_GetCameraIntrinisics(unsigned int, vr::EVRTrackedCameraFrameType, vr::HmdVector2_t*, vr::HmdVector2_t*)
 t IVRTrackedCamera_002_FnTable_GetCameraProjection(unsigned int, vr::EVRTrackedCameraFrameType, float, float, vr::HmdMatrix44_t*)
 t IVRTrackedCamera_002_FnTable_GetVideoStreamFrameBuffer(void*, vr::EVRTrackedCameraFrameType, void*, unsigned int, vr::CameraVideoStreamFrameHeader_t*, unsigned int)
 t IVRTrackedCamera_002_FnTable_HasCamera(unsigned int, bool*)
 t IVRTrackedCamera_002_FnTable_ReleaseVideoStreamingService(void*)
 t Json::codePointToUTF8(unsigned int)
 t Json::duplicateAndPrefixStringValue(char const*, unsigned int)
 t Json::normalizeEOL(char const*, char const*)
 t Json::valueToQuotedStringN(char const*, unsigned int)
 t ParseStringListFromJson(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, Json::Value const&, char const*)
 t StaticCompositorPresent(int)
 t StringListToJson(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, Json::Value&, char const*)
 t VR_IVRApplications_FnTable_AddApplicationManifest(char*, bool)
 t VR_IVRApplications_FnTable_CancelApplicationLaunch(char*)
 t VR_IVRApplications_FnTable_GetApplicationAutoLaunch(char*)
 t VR_IVRApplications_FnTable_GetApplicationCount()
 t VR_IVRApplications_FnTable_GetApplicationKeyByIndex(unsigned int, char*, unsigned int)
 t VR_IVRApplications_FnTable_GetApplicationKeyByProcessId(unsigned int, char*, unsigned int)
 t VR_IVRApplications_FnTable_GetApplicationProcessId(char*)
 t VR_IVRApplications_FnTable_GetApplicationPropertyBool(char*, EVRApplicationProperty, EVRApplicationError*)
 t VR_IVRApplications_FnTable_GetApplicationPropertyString(char*, EVRApplicationProperty, char*, unsigned int, EVRApplicationError*)
 t VR_IVRApplications_FnTable_GetApplicationPropertyUint64(char*, EVRApplicationProperty, EVRApplicationError*)
 t VR_IVRApplications_FnTable_GetApplicationsErrorNameFromEnum(EVRApplicationError)
 t VR_IVRApplications_FnTable_GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState)
 t VR_IVRApplications_FnTable_GetStartingApplication(char*, unsigned int)
 t VR_IVRApplications_FnTable_GetTransitionState()
 t VR_IVRApplications_FnTable_IdentifyApplication(unsigned int, char*)
 t VR_IVRApplications_FnTable_IsApplicationInstalled(char*)
 t VR_IVRApplications_FnTable_IsQuitUserPromptRequested()
 t VR_IVRApplications_FnTable_LaunchApplication(char*)
 t VR_IVRApplications_FnTable_LaunchDashboardOverlay(char*)
 t VR_IVRApplications_FnTable_LaunchInternalProcess(char*, char*, char*)
 t VR_IVRApplications_FnTable_LaunchTemplateApplication(char*, char*, AppOverrideKeys_t*, unsigned int)
 t VR_IVRApplications_FnTable_PerformApplicationPrelaunchCheck(char*)
 t VR_IVRApplications_FnTable_RemoveApplicationManifest(char*)
 t VR_IVRApplications_FnTable_SetApplicationAutoLaunch(char*, bool)
 t VR_IVRChaperoneSetup_FnTable_CommitWorkingCopy(EChaperoneConfigFile)
 t VR_IVRChaperoneSetup_FnTable_ExportLiveToBuffer(char*, unsigned int*)
 t VR_IVRChaperoneSetup_FnTable_GetLiveCollisionBoundsInfo(HmdQuad_t*, unsigned int*)
 t VR_IVRChaperoneSetup_FnTable_GetLiveCollisionBoundsTagsInfo(unsigned char*, unsigned int*)
 t VR_IVRChaperoneSetup_FnTable_GetLivePhysicalBoundsInfo(HmdQuad_t*, unsigned int*)
 t VR_IVRChaperoneSetup_FnTable_GetLiveSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t*)
 t VR_IVRChaperoneSetup_FnTable_GetWorkingCollisionBoundsInfo(HmdQuad_t*, unsigned int*)
 t VR_IVRChaperoneSetup_FnTable_GetWorkingPlayAreaRect(HmdQuad_t*)
 t VR_IVRChaperoneSetup_FnTable_GetWorkingPlayAreaSize(float*, float*)
 t VR_IVRChaperoneSetup_FnTable_GetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t*)
 t VR_IVRChaperoneSetup_FnTable_GetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t*)
 t VR_IVRChaperoneSetup_FnTable_ImportFromBufferToWorking(char*, unsigned int)
 t VR_IVRChaperoneSetup_FnTable_ReloadFromDisk(EChaperoneConfigFile)
 t VR_IVRChaperoneSetup_FnTable_RevertWorkingCopy()
 t VR_IVRChaperoneSetup_FnTable_SetWorkingCollisionBoundsInfo(HmdQuad_t*, unsigned int)
 t VR_IVRChaperoneSetup_FnTable_SetWorkingCollisionBoundsTagsInfo(unsigned char*, unsigned int)
 t VR_IVRChaperoneSetup_FnTable_SetWorkingPhysicalBoundsInfo(HmdQuad_t*, unsigned int)
 t VR_IVRChaperoneSetup_FnTable_SetWorkingPlayAreaSize(float, float)
 t VR_IVRChaperoneSetup_FnTable_SetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t*)
 t VR_IVRChaperoneSetup_FnTable_SetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t*)
 t VR_IVRChaperone_FnTable_AreBoundsVisible()
 t VR_IVRChaperone_FnTable_ForceBoundsVisible(bool)
 t VR_IVRChaperone_FnTable_GetBoundsColor(HmdColor_t*, int, float, HmdColor_t*)
 t VR_IVRChaperone_FnTable_GetCalibrationState()
 t VR_IVRChaperone_FnTable_GetPlayAreaRect(HmdQuad_t*)
 t VR_IVRChaperone_FnTable_GetPlayAreaSize(float*, float*)
 t VR_IVRChaperone_FnTable_ReloadInfo()
 t VR_IVRChaperone_FnTable_SetSceneColor(HmdColor_t)
 t VR_IVRCompositor_FnTable_CanRenderScene()
 t VR_IVRCompositor_FnTable_ClearLastSubmittedFrame()
 t VR_IVRCompositor_FnTable_ClearSkyboxOverride()
 t VR_IVRCompositor_FnTable_CompositorBringToFront()
 t VR_IVRCompositor_FnTable_CompositorDumpImages()
 t VR_IVRCompositor_FnTable_CompositorGoToBack()
 t VR_IVRCompositor_FnTable_CompositorQuit()
 t VR_IVRCompositor_FnTable_FadeGrid(float, bool)
 t VR_IVRCompositor_FnTable_FadeToColor(float, float, float, float, float, bool)
 t VR_IVRCompositor_FnTable_ForceInterleavedReprojectionOn(bool)
 t VR_IVRCompositor_FnTable_ForceReconnectProcess()
 t VR_IVRCompositor_FnTable_GetCumulativeStats(Compositor_CumulativeStats*, unsigned int)
 t VR_IVRCompositor_FnTable_GetCurrentSceneFocusProcess()
 t VR_IVRCompositor_FnTable_GetCurrentScreenshotType()
 t VR_IVRCompositor_FnTable_GetFrameTimeRemaining()
 t VR_IVRCompositor_FnTable_GetFrameTiming(Compositor_FrameTiming*, unsigned int)
 t VR_IVRCompositor_FnTable_GetLastFrameRenderer()
 t VR_IVRCompositor_FnTable_GetLastPoseForTrackedDeviceIndex(unsigned int, TrackedDevicePose_t*, TrackedDevicePose_t*)
 t VR_IVRCompositor_FnTable_GetLastPoses(TrackedDevicePose_t*, unsigned int, TrackedDevicePose_t*, unsigned int)
 t VR_IVRCompositor_FnTable_GetMirrorTextureD3D11(EVREye, void*, void**)
 t VR_IVRCompositor_FnTable_GetMirrorTextureGL(EVREye, unsigned int*, void**)
 t VR_IVRCompositor_FnTable_GetTrackingSpace()
 t VR_IVRCompositor_FnTable_HideMirrorWindow()
 t VR_IVRCompositor_FnTable_IsFullscreen()
 t VR_IVRCompositor_FnTable_IsMirrorWindowVisible()
 t VR_IVRCompositor_FnTable_LockGLSharedTextureForAccess(void*)
 t VR_IVRCompositor_FnTable_PostPresentHandoff()
 t VR_IVRCompositor_FnTable_ReleaseSharedGLTexture(unsigned int, void*)
 t VR_IVRCompositor_FnTable_RequestScreenshot(EVRScreenshotType, char*, char*)
 t VR_IVRCompositor_FnTable_SetSkyboxOverride(Texture_t*, unsigned int)
 t VR_IVRCompositor_FnTable_SetTrackingSpace(ETrackingUniverseOrigin)
 t VR_IVRCompositor_FnTable_ShouldAppRenderWithLowResources()
 t VR_IVRCompositor_FnTable_ShowMirrorWindow()
 t VR_IVRCompositor_FnTable_Submit(EVREye, Texture_t*, VRTextureBounds_t*, EVRSubmitFlags)
 t VR_IVRCompositor_FnTable_SuspendRendering(bool)
 t VR_IVRCompositor_FnTable_UnlockGLSharedTextureForAccess(void*)
 t VR_IVRCompositor_FnTable_WaitGetPoses(TrackedDevicePose_t*, unsigned int, TrackedDevicePose_t*, unsigned int)
 t VR_IVRExtendedDisplay_FnTable_GetDXGIOutputInfo(int*, int*)
 t VR_IVRExtendedDisplay_FnTable_GetEyeOutputViewport(EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
 t VR_IVRExtendedDisplay_FnTable_GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
 t VR_IVRNotifications_FnTable_CreateNotification(unsigned long long, unsigned long long, EVRNotificationType, char*, EVRNotificationStyle, NotificationBitmap_t*, unsigned int*)
 t VR_IVRNotifications_FnTable_RemoveNotification(unsigned int)
 t VR_IVROverlay_FnTable_ClearOverlayTexture(unsigned long long)
 t VR_IVROverlay_FnTable_ComputeOverlayIntersection(unsigned long long, VROverlayIntersectionParams_t*, VROverlayIntersectionResults_t*)
 t VR_IVROverlay_FnTable_CreateDashboardOverlay(char*, char*, unsigned long long*, unsigned long long*)
 t VR_IVROverlay_FnTable_CreateOverlay(char*, char*, unsigned long long*)
 t VR_IVROverlay_FnTable_DestroyOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_FindOverlay(char*, unsigned long long*)
 t VR_IVROverlay_FnTable_GetDashboardOverlaySceneProcess(unsigned long long, unsigned int*)
 t VR_IVROverlay_FnTable_GetGamepadFocusOverlay()
 t VR_IVROverlay_FnTable_GetHighQualityOverlay()
 t VR_IVROverlay_FnTable_GetKeyboardText(char*, unsigned int)
 t VR_IVROverlay_FnTable_GetOverlayAlpha(unsigned long long, float*)
 t VR_IVROverlay_FnTable_GetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float*, float*)
 t VR_IVROverlay_FnTable_GetOverlayColor(unsigned long long, float*, float*, float*)
 t VR_IVROverlay_FnTable_GetOverlayErrorNameFromEnum(EVROverlayError)
 t VR_IVROverlay_FnTable_GetOverlayFlag(unsigned long long, VROverlayFlags, bool*)
 t VR_IVROverlay_FnTable_GetOverlayImageData(unsigned long long, void*, unsigned int, unsigned int*, unsigned int*)
 t VR_IVROverlay_FnTable_GetOverlayInputMethod(unsigned long long, VROverlayInputMethod*)
 t VR_IVROverlay_FnTable_GetOverlayKey(unsigned long long, char*, unsigned int, EVROverlayError*)
 t VR_IVROverlay_FnTable_GetOverlayMouseScale(unsigned long long, HmdVector2_t*)
 t VR_IVROverlay_FnTable_GetOverlayName(unsigned long long, char*, unsigned int, EVROverlayError*)
 t VR_IVROverlay_FnTable_GetOverlayRenderingPid(unsigned long long)
 t VR_IVROverlay_FnTable_GetOverlayTexture(unsigned long long, void**, void*, unsigned int*, unsigned int*, unsigned int*, EGraphicsAPIConvention*, EColorSpace*)
 t VR_IVROverlay_FnTable_GetOverlayTextureBounds(unsigned long long, VRTextureBounds_t*)
 t VR_IVROverlay_FnTable_GetOverlayTextureColorSpace(unsigned long long, EColorSpace*)
 t VR_IVROverlay_FnTable_GetOverlayTextureSize(unsigned long long, unsigned int*, unsigned int*)
 t VR_IVROverlay_FnTable_GetOverlayTransformAbsolute(unsigned long long, ETrackingUniverseOrigin*, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_GetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int*, char*, unsigned int)
 t VR_IVROverlay_FnTable_GetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int*, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_GetOverlayTransformType(unsigned long long, VROverlayTransformType*)
 t VR_IVROverlay_FnTable_GetOverlayWidthInMeters(unsigned long long, float*)
 t VR_IVROverlay_FnTable_GetPrimaryDashboardDevice()
 t VR_IVROverlay_FnTable_GetTransformForOverlayCoordinates(unsigned long long, ETrackingUniverseOrigin, HmdVector2_t, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_HandleControllerOverlayInteractionAsMouse(unsigned long long, unsigned int)
 t VR_IVROverlay_FnTable_HideKeyboard()
 t VR_IVROverlay_FnTable_HideOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_IsActiveDashboardOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_IsDashboardVisible()
 t VR_IVROverlay_FnTable_IsHoverTargetOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_IsOverlayVisible(unsigned long long)
 t VR_IVROverlay_FnTable_MoveGamepadFocusToNeighbor(EOverlayDirection, unsigned long long)
 t VR_IVROverlay_FnTable_PollNextOverlayEvent(unsigned long long, VREvent_t*, unsigned int)
 t VR_IVROverlay_FnTable_ReleaseNativeOverlayHandle(unsigned long long, void*)
 t VR_IVROverlay_FnTable_SetDashboardOverlaySceneProcess(unsigned long long, unsigned int)
 t VR_IVROverlay_FnTable_SetGamepadFocusOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_SetHighQualityOverlay(unsigned long long)
 t VR_IVROverlay_FnTable_SetKeyboardPositionForOverlay(unsigned long long, HmdRect2_t)
 t VR_IVROverlay_FnTable_SetKeyboardTransformAbsolute(ETrackingUniverseOrigin, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_SetOverlayAlpha(unsigned long long, float)
 t VR_IVROverlay_FnTable_SetOverlayAutoCurveDistanceRangeInMeters(unsigned long long, float, float)
 t VR_IVROverlay_FnTable_SetOverlayColor(unsigned long long, float, float, float)
 t VR_IVROverlay_FnTable_SetOverlayFlag(unsigned long long, VROverlayFlags, bool)
 t VR_IVROverlay_FnTable_SetOverlayFromFile(unsigned long long, char*)
 t VR_IVROverlay_FnTable_SetOverlayInputMethod(unsigned long long, VROverlayInputMethod)
 t VR_IVROverlay_FnTable_SetOverlayMouseScale(unsigned long long, HmdVector2_t*)
 t VR_IVROverlay_FnTable_SetOverlayNeighbor(EOverlayDirection, unsigned long long, unsigned long long)
 t VR_IVROverlay_FnTable_SetOverlayRaw(unsigned long long, void*, unsigned int, unsigned int, unsigned int)
 t VR_IVROverlay_FnTable_SetOverlayRenderingPid(unsigned long long, unsigned int)
 t VR_IVROverlay_FnTable_SetOverlayTexture(unsigned long long, Texture_t*)
 t VR_IVROverlay_FnTable_SetOverlayTextureBounds(unsigned long long, VRTextureBounds_t*)
 t VR_IVROverlay_FnTable_SetOverlayTextureColorSpace(unsigned long long, EColorSpace)
 t VR_IVROverlay_FnTable_SetOverlayTransformAbsolute(unsigned long long, ETrackingUniverseOrigin, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_SetOverlayTransformTrackedDeviceComponent(unsigned long long, unsigned int, char*)
 t VR_IVROverlay_FnTable_SetOverlayTransformTrackedDeviceRelative(unsigned long long, unsigned int, HmdMatrix34_t*)
 t VR_IVROverlay_FnTable_SetOverlayWidthInMeters(unsigned long long, float)
 t VR_IVROverlay_FnTable_ShowDashboard(char*)
 t VR_IVROverlay_FnTable_ShowKeyboard(EGamepadTextInputMode, EGamepadTextInputLineMode, char*, unsigned int, char*, bool, unsigned long long)
 t VR_IVROverlay_FnTable_ShowKeyboardForOverlay(unsigned long long, EGamepadTextInputMode, EGamepadTextInputLineMode, char*, unsigned int, char*, bool, unsigned long long)
 t VR_IVROverlay_FnTable_ShowOverlay(unsigned long long)
 t VR_IVRRenderModels_FnTable_FreeRenderModel(RenderModel_t*)
 t VR_IVRRenderModels_FnTable_FreeTexture(RenderModel_TextureMap_t*)
 t VR_IVRRenderModels_FnTable_FreeTextureD3D11(void*)
 t VR_IVRRenderModels_FnTable_GetComponentButtonMask(char*, char*)
 t VR_IVRRenderModels_FnTable_GetComponentCount(char*)
 t VR_IVRRenderModels_FnTable_GetComponentName(char*, unsigned int, char*, unsigned int)
 t VR_IVRRenderModels_FnTable_GetComponentRenderModelName(char*, char*, char*, unsigned int)
 t VR_IVRRenderModels_FnTable_GetComponentState(char*, char*, VRControllerState_t*, RenderModel_ControllerMode_State_t*, RenderModel_ComponentState_t*)
 t VR_IVRRenderModels_FnTable_GetRenderModelCount()
 t VR_IVRRenderModels_FnTable_GetRenderModelErrorNameFromEnum(EVRRenderModelError)
 t VR_IVRRenderModels_FnTable_GetRenderModelName(unsigned int, char*, unsigned int)
 t VR_IVRRenderModels_FnTable_GetRenderModelOriginalPath(char*, char*, unsigned int, EVRRenderModelError*)
 t VR_IVRRenderModels_FnTable_GetRenderModelThumbnailURL(char*, char*, unsigned int, EVRRenderModelError*)
 t VR_IVRRenderModels_FnTable_LoadIntoTextureD3D11_Async(int, void*)
 t VR_IVRRenderModels_FnTable_LoadRenderModel_Async(char*, RenderModel_t**)
 t VR_IVRRenderModels_FnTable_LoadTextureD3D11_Async(int, void*, void**)
 t VR_IVRRenderModels_FnTable_LoadTexture_Async(int, RenderModel_TextureMap_t**)
 t VR_IVRRenderModels_FnTable_RenderModelHasComponent(char*, char*)
 t VR_IVRSettings_FnTable_GetBool(char*, char*, bool, EVRSettingsError*)
 t VR_IVRSettings_FnTable_GetFloat(char*, char*, float, EVRSettingsError*)
 t VR_IVRSettings_FnTable_GetInt32(char*, char*, int, EVRSettingsError*)
 t VR_IVRSettings_FnTable_GetSettingsErrorNameFromEnum(EVRSettingsError)
 t VR_IVRSettings_FnTable_GetString(char*, char*, char*, unsigned int, char*, EVRSettingsError*)
 t VR_IVRSettings_FnTable_RemoveKeyInSection(char*, char*, EVRSettingsError*)
 t VR_IVRSettings_FnTable_RemoveSection(char*, EVRSettingsError*)
 t VR_IVRSettings_FnTable_SetBool(char*, char*, bool, EVRSettingsError*)
 t VR_IVRSettings_FnTable_SetFloat(char*, char*, float, EVRSettingsError*)
 t VR_IVRSettings_FnTable_SetInt32(char*, char*, int, EVRSettingsError*)
 t VR_IVRSettings_FnTable_SetString(char*, char*, char*, EVRSettingsError*)
 t VR_IVRSettings_FnTable_Sync(bool, EVRSettingsError*)
 t VR_IVRSystem_FnTable_AcknowledgeQuit_Exiting()
 t VR_IVRSystem_FnTable_AcknowledgeQuit_UserPrompt()
 t VR_IVRSystem_FnTable_ApplyTransform(TrackedDevicePose_t*, TrackedDevicePose_t*, HmdMatrix34_t*)
 t VR_IVRSystem_FnTable_CaptureInputFocus()
 t VR_IVRSystem_FnTable_ComputeDistortion(EVREye, float, float)
 t VR_IVRSystem_FnTable_DriverDebugRequest(unsigned int, char*, char*, unsigned int)
 t VR_IVRSystem_FnTable_GetBoolTrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_GetButtonIdNameFromEnum(EVRButtonId)
 t VR_IVRSystem_FnTable_GetControllerAxisTypeNameFromEnum(EVRControllerAxisType)
 t VR_IVRSystem_FnTable_GetControllerRoleForTrackedDeviceIndex(unsigned int)
 t VR_IVRSystem_FnTable_GetControllerState(unsigned int, VRControllerState_t*)
 t VR_IVRSystem_FnTable_GetControllerStateWithPose(ETrackingUniverseOrigin, unsigned int, VRControllerState_t*, TrackedDevicePose_t*)
 t VR_IVRSystem_FnTable_GetD3D9AdapterIndex()
 t VR_IVRSystem_FnTable_GetDXGIOutputInfo(int*)
 t VR_IVRSystem_FnTable_GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin, float, TrackedDevicePose_t*, unsigned int)
 t VR_IVRSystem_FnTable_GetEventTypeNameFromEnum(EVREventType)
 t VR_IVRSystem_FnTable_GetEyeToHeadTransform(EVREye)
 t VR_IVRSystem_FnTable_GetFloatTrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_GetHiddenAreaMesh(EVREye)
 t VR_IVRSystem_FnTable_GetInt32TrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_GetMatrix34TrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_GetProjectionMatrix(EVREye, float, float, EGraphicsAPIConvention)
 t VR_IVRSystem_FnTable_GetProjectionRaw(EVREye, float*, float*, float*, float*)
 t VR_IVRSystem_FnTable_GetPropErrorNameFromEnum(ETrackedPropertyError)
 t VR_IVRSystem_FnTable_GetRawZeroPoseToStandingAbsoluteTrackingPose()
 t VR_IVRSystem_FnTable_GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
 t VR_IVRSystem_FnTable_GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
 t VR_IVRSystem_FnTable_GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass, unsigned int*, unsigned int, unsigned int)
 t VR_IVRSystem_FnTable_GetStringTrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, char*, unsigned int, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_GetTimeSinceLastVsync(float*, unsigned long long*)
 t VR_IVRSystem_FnTable_GetTrackedDeviceActivityLevel(unsigned int)
 t VR_IVRSystem_FnTable_GetTrackedDeviceClass(unsigned int)
 t VR_IVRSystem_FnTable_GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole)
 t VR_IVRSystem_FnTable_GetUint64TrackedDeviceProperty(unsigned int, ETrackedDeviceProperty, ETrackedPropertyError*)
 t VR_IVRSystem_FnTable_IsDisplayOnDesktop()
 t VR_IVRSystem_FnTable_IsInputFocusCapturedByAnotherProcess()
 t VR_IVRSystem_FnTable_IsTrackedDeviceConnected(unsigned int)
 t VR_IVRSystem_FnTable_PerformFirmwareUpdate(unsigned int)
 t VR_IVRSystem_FnTable_PollNextEvent(VREvent_t*, unsigned int)
 t VR_IVRSystem_FnTable_PollNextEventWithPose(ETrackingUniverseOrigin, VREvent_t*, unsigned int, TrackedDevicePose_t*)
 t VR_IVRSystem_FnTable_ReleaseInputFocus()
 t VR_IVRSystem_FnTable_ResetSeatedZeroPose()
 t VR_IVRSystem_FnTable_SetDisplayVisibility(bool)
 t VR_IVRSystem_FnTable_TriggerHapticPulse(unsigned int, unsigned int, unsigned short)
 t VR_IVRTrackedCamera_FnTable_AcquireVideoStreamingService(unsigned int, unsigned long long*)
 t VR_IVRTrackedCamera_FnTable_GetCameraErrorNameFromEnum(EVRTrackedCameraError)
 t VR_IVRTrackedCamera_FnTable_GetCameraFrameSize(unsigned int, EVRTrackedCameraFrameType, unsigned int*, unsigned int*, unsigned int*)
 t VR_IVRTrackedCamera_FnTable_GetCameraIntrinisics(unsigned int, EVRTrackedCameraFrameType, HmdVector2_t*, HmdVector2_t*)
 t VR_IVRTrackedCamera_FnTable_GetCameraProjection(unsigned int, EVRTrackedCameraFrameType, float, float, HmdMatrix44_t*)
 t VR_IVRTrackedCamera_FnTable_GetVideoStreamFrameBuffer(unsigned long long, EVRTrackedCameraFrameType, void*, unsigned int, CameraVideoStreamFrameHeader_t*, unsigned int)
 t VR_IVRTrackedCamera_FnTable_HasCamera(unsigned int, bool*)
 t VR_IVRTrackedCamera_FnTable_ReleaseVideoStreamingService(unsigned long long)
 t _GLOBAL__sub_I__dynamic_o.tmp.steamvr_rel_osx_builder.80533.ii
 t _GLOBAL__sub_I__dynamic_o.tmp.steamvr_rel_osx_builder.80625.ii
 t _GLOBAL__sub_I_descriptor.cc
 t _GLOBAL__sub_I_descriptor.pb.cc
 t _GLOBAL__sub_I_extension_set.cc
 t _GLOBAL__sub_I_interface_.tmp.steamvr_rel_osx_builder.80535.ii
 t _GLOBAL__sub_I_interface_.tmp.steamvr_rel_osx_builder.80634.ii
 t _GLOBAL__sub_I_ipcposix2.tmp.steamvr_rel_osx_builder.57289.ii
 t _GLOBAL__sub_I_ipcposix2.tmp.steamvr_rel_osx_builder.57467.ii
 t _GLOBAL__sub_I_threadtool.tmp.steamvr_rel_osx_builder.11678.ii
 t _GLOBAL__sub_I_threadtool.tmp.steamvr_rel_osx_builder.11784.ii
 t _GLOBAL__sub_I_vr_message.tmp.steamvr_rel_osx_builder.2365.ii
 t _GLOBAL__sub_I_vr_message.tmp.steamvr_rel_osx_builder.2454.ii
 t _GLOBAL__sub_I_vrclientco.tmp.steamvr_rel_osx_builder.80581.ii
 t _GLOBAL__sub_I_vrclientco.tmp.steamvr_rel_osx_builder.80675.ii
 t _GLOBAL__sub_I_vrlog.tmp.steamvr_rel_osx_builder.75020.ii
 t _GLOBAL__sub_I_vrlog.tmp.steamvr_rel_osx_builder.75170.ii
 t __ARCLite__load()
 t __arclite_NSArray_objectAtIndexedSubscript(NSArray*, objc_selector*, unsigned long)
 t __arclite_NSDictionary_objectForKeyedSubscript(NSDictionary*, objc_selector*, objc_object*)
 t __arclite_NSKKMS_fastIndexForKnownKey(objc_object*, objc_selector*, objc_object*)
 t __arclite_NSKKMS_indexForKey(objc_object*, objc_selector*, objc_object*)
 t __arclite_NSKKsD_addEntriesFromDictionary(objc_object*, objc_selector*, NSDictionary*)
 t __arclite_NSKKsD_objectForKey(objc_object*, objc_selector*, objc_object*)
 t __arclite_NSKKsD_removeObjectForKey(objc_object*, objc_selector*, objc_object*)
 t __arclite_NSKKsD_setObject_forKey(objc_object*, objc_selector*, objc_object*, objc_object*)
 t __arclite_NSManagedObject_allocBatch(objc_object*, objc_selector*, objc_object**, objc_object*, unsigned int)
 t __arclite_NSManagedObject_allocWithEntity(objc_object*, objc_selector*, objc_object*)
 t __arclite_NSManagedObject_init(objc_object*, objc_selector*)
 t __arclite_NSMutableArray_setObject_atIndexedSubscript(NSMutableArray*, objc_selector*, objc_object*, unsigned long)
 t __arclite_NSMutableDictionary__setObject_forKeyedSubscript(NSMutableDictionary*, objc_selector*, objc_object*, objc_object*)
 t __arclite_NSMutableOrderedSet_setObject_atIndexedSubscript(NSMutableOrderedSet*, objc_selector*, objc_object*, unsigned long)
 t __arclite_NSOrderedSet_objectAtIndexedSubscript(NSOrderedSet*, objc_selector*, unsigned long)
 t __arclite_NSUndoManagerProxy_isKindOfClass(objc_object*, objc_selector*, objc_class*)
 t __arclite_class_getName(objc_class*)
 t __arclite_objc_allocateClassPair(objc_class*, char const*, unsigned long)
 t __arclite_objc_autorelease(objc_object*)
 t __arclite_objc_autoreleasePoolPop(void*)
 t __arclite_objc_autoreleasePoolPush()
 t __arclite_objc_autoreleaseReturnValue(objc_object*)
 t __arclite_objc_copyClassNamesForImage(char const*, unsigned int*)
 t __arclite_objc_getClass(char const*)
 t __arclite_objc_getMetaClass(char const*)
 t __arclite_objc_getProtocol(char const*)
 t __arclite_objc_getRequiredClass(char const*)
 t __arclite_objc_lookUpClass(char const*)
 t __arclite_objc_readClassPair(objc_class*, objc_image_info const*)
 t __arclite_objc_release(objc_object*)
 t __arclite_objc_retain(objc_object*)
 t __arclite_objc_retainAutorelease(objc_object*)
 t __arclite_objc_retainAutoreleaseReturnValue(objc_object*)
 t __arclite_objc_retainAutoreleasedReturnValue(objc_object*)
 t __arclite_objc_retainBlock(objc_object*)
 t __arclite_objc_storeStrong(objc_object**, objc_object*)
 t __arclite_object_copy(objc_object*, unsigned long)
 t __arclite_object_getIndexedIvars(objc_object*)
 t __arclite_object_setInstanceVariable(objc_object*, char const*, void*)
 t __arclite_object_setIvar(objc_object*, objc_ivar*, objc_object*)
 t __arclite_protocol_getName(Protocol*)
 t _class_name
 t _load_method_name
 t _load_method_type
 t add_image_hook_ARC(mach_header const*, long)
 t add_image_hook_autoreleasepool(mach_header const*, long)
 t add_image_hook_swiftV1(mach_header const*, long)
 t allocateMaybeSwift(glue_swift_class_t*, unsigned long)
 t arclite_uninitialized_function()
 t copySwiftV1MangledName(char const*, bool)
 t cxxConstruct(objc_object*)
 t demangledName(char const*, bool)
 t fixStringForCoreData(objc_object*)
 t initialize_imp(objc_object*, objc_selector*)
 t patch_lazy_pointers(mach_header const*, patch_t*, unsigned long)
 t replaceMethod(objc_class*, objc_selector*, objc_object* (*)(objc_object*, objc_selector*, ...), objc_object* (**)(objc_object*, objc_selector*, ...))
 t resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int)
 t scanMangledField(char const*&, char const*, char const*&, int&)
 t stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int)
 t stbi__build_huffman(stbi__huffman*, int*)
 t stbi__cleanup_jpeg(stbi__jpeg*)
 t stbi__convert_format(unsigned char*, int, int, unsigned int, unsigned int)
 t stbi__create_png_image_raw(stbi__png*, unsigned char*, unsigned int, int, unsigned int, unsigned int, int, int)
 t stbi__decode_jpeg_header(stbi__jpeg*, int)
 t stbi__do_zlib(stbi__zbuf*, char*, int, int, int)
 t stbi__get32be(stbi__context*)
 t stbi__get32le(stbi__context*)
 t stbi__get8(stbi__context*)
 t stbi__get_marker(stbi__jpeg*)
 t stbi__gif_header(stbi__context*, stbi__gif*, int*, int)
 t stbi__hdr_convert(float*, unsigned char*, int)
 t stbi__hdr_gettoken(stbi__context*, char*)
 t stbi__hdr_load(stbi__context*, int*, int*, int*, int)
 t stbi__idct_block(unsigned char*, int, short*)
 t stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned char*)
 t stbi__jpeg_decode_block_prog_dc(stbi__jpeg*, short*, stbi__huffman*, int)
 t stbi__load_flip(stbi__context*, int*, int*, int*, int)
 t stbi__load_main(stbi__context*, int*, int*, int*, int)
 t stbi__out_gif_code(stbi__gif*, unsigned short)
 t stbi__parse_png_file(stbi__png*, int, int)
 t stbi__pic_is4(stbi__context*, char const*)
 t stbi__pnm_info(stbi__context*, int*, int*, int*)
 t stbi__process_marker(stbi__jpeg*, int)
 t stbi__readval(stbi__context*, int, unsigned char*)
 t stbi__resample_row_generic(unsigned char*, unsigned char*, unsigned char*, int, int)
 t stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int)
 t stbi__resample_row_hv_2(unsigned char*, unsigned char*, unsigned char*, int, int)
 t stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int)
 t stbi__stdio_eof(void*)
 t stbi__stdio_read(void*, char*, int)
 t stbi__stdio_skip(void*, int)
 t stbi__zbuild_huffman(stbi__zhuffman*, unsigned char*, int)
 t tinyobj::exportFaceGroupToShape(tinyobj::shape_t&, std::__1::map<tinyobj::vertex_index, unsigned int, std::__1::less<tinyobj::vertex_index>, std::__1::allocator<std::__1::pair<tinyobj::vertex_index const, unsigned int> > >, std::__1::vector<float, std::__1::allocator<float> > const&, std::__1::vector<float, std::__1::allocator<float> > const&, std::__1::vector<float, std::__1::allocator<float> > const&, std::__1::vector<std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> >, std::__1::allocator<std::__1::vector<tinyobj::vertex_index, std::__1::allocator<tinyobj::vertex_index> > > > const&, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
 t tinyobj::updateVertex(std::__1::map<tinyobj::vertex_index, unsigned int, std::__1::less<tinyobj::vertex_index>, std::__1::allocator<std::__1::pair<tinyobj::vertex_index const, unsigned int> > >&, std::__1::vector<float, std::__1::allocator<float> >&, std::__1::vector<float, std::__1::allocator<float> >&, std::__1::vector<float, std::__1::allocator<float> >&, std::__1::vector<float, std::__1::allocator<float> > const&, std::__1::vector<float, std::__1::allocator<float> > const&, std::__1::vector<float, std::__1::allocator<float> > const&, tinyobj::vertex_index const&)
 t transcribeMethods(objc_class*, glue_class_ro_t*)
 t transcribeProperties(objc_class*, glue_class_ro_t*)
 t transcribeProtocols(objc_class*, glue_class_ro_t*)
 typeinfo for std::__1::basic_iostream<char, std::__1::char_traits<char> >
 typeinfo for std::__1::basic_istream<char, std::__1::char_traits<char> >
 typeinfo for std::__1::basic_ostream<char, std::__1::char_traits<char> >
 typeinfo for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
 typeinfo for std::bad_cast
 typeinfo for std::exception
 unlink
 unsetenv
 unsetenv$UNIX2003
 usleep
 usleep$UNIX2003
 virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
 virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
 virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
 vsnprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 write
 write$UNIX2003
