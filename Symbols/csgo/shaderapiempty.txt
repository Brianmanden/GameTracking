 A __bss_start
 A _edata
 A _end
 B s_pInterfaceRegs
 CommandLine
 ConMsg(char const*, ...)
 DevWarning(char const*, ...)
 Error
 LOG_GENERAL
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 Msg
 Plat_ExitProcess
 Plat_FloatTime
 Plat_IsInDebugSession
 T CreateInterface
 T _fini
 T _init
 V typeinfo for __cxxabiv1::__forced_unwind
 V typeinfo for __cxxabiv1::__foreign_exception
 V typeinfo for __gnu_cxx::__concurrence_lock_error
 V typeinfo for __gnu_cxx::__concurrence_unlock_error
 V typeinfo for __gnu_cxx::recursive_init_error
 V typeinfo name for __cxxabiv1::__forced_unwind
 V typeinfo name for __cxxabiv1::__foreign_exception
 V typeinfo name for __gnu_cxx::__concurrence_lock_error
 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
 V typeinfo name for __gnu_cxx::recursive_init_error
 V vtable for __cxxabiv1::__forced_unwind
 V vtable for __cxxabiv1::__foreign_exception
 V vtable for __gnu_cxx::__concurrence_lock_error
 V vtable for __gnu_cxx::__concurrence_unlock_error
 V vtable for __gnu_cxx::recursive_init_error
 Warning
 WriteMiniDump
 _Jv_RegisterClasses
 ___tls_get_addr@@GLIBC_2.3
 __cxa_atexit@@GLIBC_2.1.3
 __cxa_finalize@@GLIBC_2.1.3
 __gmon_start__
 a _DYNAMIC
 a _GLOBAL_OFFSET_TABLE_
 abort@@GLIBC_2.0
 b (anonymous namespace)::emergency_mutex
 b (anonymous namespace)::get_global()::global
 b CEmptyMesh::Lock(int, bool, IndexDesc_t&)::s_BogusIndex
 b CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
 b CShaderAPIEmpty::GetAspectRatioInfo() const::dummy
 b CShaderAPIEmpty::GetCascadedShadowMappingState(ITexture**, bool) const::dummyState
 b CShaderAPIEmpty::GetFlashlightState(VMatrix&) const::blah
 b CShaderAPIEmpty::GetFlashlightStateEx(VMatrix&, ITexture**) const::blah
 b CShaderAPIEmpty::GetToneMappingScaleLinear() const::dummy
 b CShaderDeviceEmpty::GetAspectRatioInfo() const::dummy
 b ConCommandBase::s_pAccessor
 b ConCommandBase::s_pConCommandBases
 b UNSPECIFIED_LOGGING_COLOR
 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::built
 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::s_BreakSetIncludingColons
 b V_pretifymem(float, int, bool)::current
 b V_pretifymem(float, int, bool)::output
 b V_pretifynum(long long)::current
 b V_pretifynum(long long)::output
 b __g_CreateCShaderAPIEmptyIDebugTextureInfo_reg
 b __g_CreateCShaderAPIEmptyIMaterialSystemHardwareConfig_reg
 b __g_CreateCShaderAPIEmptyIShaderAPI_reg
 b __g_CreateCShaderDeviceEmptyIShaderDevice_reg
 b __g_CreateCShaderDeviceMgrEmptyIShaderDeviceMgr_reg
 b __g_CreateCShaderShadowEmptyIShaderShadow_reg
 b __gnu_cxx::__verbose_terminate_handler()::terminating
 b colorcorrection
 b completed.5793
 b cvar
 b dependents_buffer
 b dependents_used
 b dtor_idx.5795
 b dwarf_reg_size_table
 b emergency_buffer
 b emergency_used
 b frame_hdr_cache
 b frame_hdr_cache_head
 b g_ShaderAPIEmpty
 b g_ShaderShadow
 b g_VBAllocTracker
 b g_pAVI
 b g_pAsyncFileSystem
 b g_pBIK
 b g_pCVar
 b g_pDataCache
 b g_pDmeMakefileUtils
 b g_pEventSystem
 b g_pFullFileSystem
 b g_pGameUISystemMgr
 b g_pInputStackSystem
 b g_pInputSystem
 b g_pLocalize
 b g_pMDLCache
 b g_pMatSystemSurface
 b g_pMatchFramework
 b g_pMaterialSystem
 b g_pMaterialSystem2
 b g_pMaterialSystemDebugTextureInfo
 b g_pMaterialSystemHardwareConfig
 b g_pMeshSystem
 b g_pNetworkSystem
 b g_pPhysics2
 b g_pPhysics2ActorManager
 b g_pPhysics2ResourceManager
 b g_pPhysicsCollision
 b g_pPrecacheSystem
 b g_pProcessUtils
 b g_pQueuedLoader
 b g_pRenderDevice
 b g_pRenderDeviceMgr
 b g_pRenderHardwareConfig
 b g_pResourceAccessControl
 b g_pResourceSystem
 b g_pSceneSystem
 b g_pShaderUtil
 b g_pSoundEmitterSystem
 b g_pSoundSystem
 b g_pStudioRender
 b g_pUtlSortVectorQSortContext
 b g_pVGui
 b g_pVGuiInput
 b g_pVGuiLocalize
 b g_pVGuiPanel
 b g_pVGuiRenderSurface
 b g_pVGuiSchemeManager
 b g_pVGuiSurface
 b g_pVGuiSystem
 b g_pWorldRendererMgr
 b guard variable for CShaderAPIEmpty::GetAspectRatioInfo() const::dummy
 b guard variable for CShaderAPIEmpty::GetCascadedShadowMappingState(ITexture**, bool) const::dummyState
 b guard variable for CShaderAPIEmpty::GetFlashlightState(VMatrix&) const::blah
 b guard variable for CShaderAPIEmpty::GetFlashlightStateEx(VMatrix&, ITexture**) const::blah
 b guard variable for CShaderAPIEmpty::GetToneMappingScaleLinear() const::dummy
 b guard variable for CShaderDeviceEmpty::GetAspectRatioInfo() const::dummy
 b marker.7234
 b materials
 b mdlcache
 b mdllib
 b object_mutex
 b once_regsizes.7669
 b p4
 b s_BreakSet
 b s_EmptyConVar
 b s_NoEscConversion
 b s_ShaderDeviceEmpty
 b s_StringCharConversion
 b s_bBuiltBreakSet
 b s_bRegistered
 b s_bRunningWithDebugModules
 b s_nCVarFlag
 b s_nConnectionCount
 b s_nRegistrationCount
 b s_pConnectionRegistration
 b seen_objects
 b studiorender
 b subs.7497
 b terminator.7340
 b unseen_objects
 b vec2_invalid
 b vec2_origin
 b vec4_invalid
 b vec4_origin
 chdir@@GLIBC_2.0
 d ConVarRef::Init(char const*, bool)::bFirst
 d DW.ref._ZTISt9exception
 d DW.ref.__gxx_personality_v0
 d SplitScreenConVarRef::Init(char const*, bool)::bFirst
 d __CTOR_END__
 d __CTOR_LIST__
 d __DTOR_END__
 d __DTOR_LIST__
 d __JCR_END__
 d __JCR_LIST__
 d __cxxabiv1::__terminate_handler
 d __cxxabiv1::__unexpected_handler
 d __dso_handle
 d adds.7496
 d cplus_demangle_builtin_types
 d cplus_demangle_operators
 d g_PrintConVarFlags
 d g_pszModule
 d s_BackSlashMap
 d s_DefaultAccessor
 d s_ShaderDeviceMgrEmpty
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d standard_subs
 d typeinfo for std::bad_exception
 d typeinfo for std::exception
 d vtable for std::bad_exception
 d vtable for std::exception
 dl_iterate_phdr@@GLIBC_2.2.4
 dlclose@@GLIBC_2.0
 dlerror@@GLIBC_2.0
 dlopen@@GLIBC_2.1
 dlsym@@GLIBC_2.0
 fputc@@GLIBC_2.0
 fputs@@GLIBC_2.0
 free@@GLIBC_2.0
 g_pMemAlloc
 getcwd@@GLIBC_2.0
 iconv@@GLIBC_2.1
 iconv_close@@GLIBC_2.1
 iconv_open@@GLIBC_2.1
 isalnum@@GLIBC_2.0
 iscntrl@@GLIBC_2.0
 isprint@@GLIBC_2.0
 iswalnum@@GLIBC_2.0
 iswspace@@GLIBC_2.0
 malloc@@GLIBC_2.0
 mbstowcs@@GLIBC_2.0
 memcmp@@GLIBC_2.0
 memcpy@@GLIBC_2.0
 memmove@@GLIBC_2.0
 memset@@GLIBC_2.0
 pow@@GLIBC_2.0
 printf@@GLIBC_2.0
 pthread_cancel@@GLIBC_2.0
 pthread_mutex_lock@@GLIBC_2.0
 pthread_mutex_unlock@@GLIBC_2.0
 pthread_once@@GLIBC_2.0
 r V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)::HEX
 r __FRAME_END__
 r g_pInterfaceGlobals
 r s_hex
 r typeinfo for CBaseAppSystem<IShaderDeviceMgr>
 r typeinfo for CDefaultAccessor
 r typeinfo for CDllDemandLoader
 r typeinfo for CEmptyConVar
 r typeinfo for CEmptyMesh
 r typeinfo for CFmtStrN<256, false>
 r typeinfo for CShaderAPIEmpty
 r typeinfo for CShaderDeviceEmpty
 r typeinfo for CShaderDeviceMgrEmpty
 r typeinfo for CShaderShadowEmpty
 r typeinfo for CSplitScreenAddedConVar
 r typeinfo for CUtlCStringConversion
 r typeinfo for CUtlCharConversion
 r typeinfo for CUtlNoEscConversion
 r typeinfo for ConCommand
 r typeinfo for ConCommandBase
 r typeinfo for ConVar
 r typeinfo for ConVar_ServerBounded
 r typeinfo for IAppSystem
 r typeinfo for IConCommandBaseAccessor
 r typeinfo for IConVar
 r typeinfo for IDebugTextureInfo
 r typeinfo for IHardwareConfigInternal
 r typeinfo for IIndexBuffer
 r typeinfo for IMaterialSystemHardwareConfig
 r typeinfo for IMesh
 r typeinfo for IShaderAPI
 r typeinfo for IShaderDevice
 r typeinfo for IShaderDeviceMgr
 r typeinfo for IShaderDynamicAPI
 r typeinfo for IShaderShadow
 r typeinfo for IVertexBuffer
 r typeinfo name for CBaseAppSystem<IShaderDeviceMgr>
 r typeinfo name for CDefaultAccessor
 r typeinfo name for CDllDemandLoader
 r typeinfo name for CEmptyConVar
 r typeinfo name for CEmptyMesh
 r typeinfo name for CFmtStrN<256, false>
 r typeinfo name for CShaderAPIEmpty
 r typeinfo name for CShaderDeviceEmpty
 r typeinfo name for CShaderDeviceMgrEmpty
 r typeinfo name for CShaderShadowEmpty
 r typeinfo name for CSplitScreenAddedConVar
 r typeinfo name for CUtlCStringConversion
 r typeinfo name for CUtlCharConversion
 r typeinfo name for CUtlNoEscConversion
 r typeinfo name for ConCommand
 r typeinfo name for ConCommandBase
 r typeinfo name for ConVar
 r typeinfo name for ConVar_ServerBounded
 r typeinfo name for IAppSystem
 r typeinfo name for IConCommandBaseAccessor
 r typeinfo name for IConVar
 r typeinfo name for IDebugTextureInfo
 r typeinfo name for IHardwareConfigInternal
 r typeinfo name for IIndexBuffer
 r typeinfo name for IMaterialSystemHardwareConfig
 r typeinfo name for IMesh
 r typeinfo name for IShaderAPI
 r typeinfo name for IShaderDevice
 r typeinfo name for IShaderDeviceMgr
 r typeinfo name for IShaderDynamicAPI
 r typeinfo name for IShaderShadow
 r typeinfo name for IVertexBuffer
 r typeinfo name for std::bad_exception
 r typeinfo name for std::exception
 r vtable for CDefaultAccessor
 r vtable for CDllDemandLoader
 r vtable for CEmptyConVar
 r vtable for CEmptyMesh
 r vtable for CFmtStrN<256, false>
 r vtable for CShaderAPIEmpty
 r vtable for CShaderDeviceEmpty
 r vtable for CShaderDeviceMgrEmpty
 r vtable for CShaderShadowEmpty
 r vtable for CSplitScreenAddedConVar
 r vtable for CUtlCStringConversion
 r vtable for CUtlCharConversion
 r vtable for CUtlNoEscConversion
 r vtable for ConCommand
 r vtable for ConCommandBase
 r vtable for ConVar
 r vtable for IConVar
 r vtable for IDebugTextureInfo
 r vtable for IHardwareConfigInternal
 r vtable for IIndexBuffer
 r vtable for IMaterialSystemHardwareConfig
 r vtable for IMesh
 r vtable for IShaderAPI
 r vtable for IShaderDynamicAPI
 r vtable for IShaderShadow
 r vtable for IVertexBuffer
 r wszCantBeginLine
 r wszCantEndLine
 rand@@GLIBC_2.0
 realloc@@GLIBC_2.0
 sprintf@@GLIBC_2.0
 sscanf@@GLIBC_2.0
 stderr@@GLIBC_2.0
 strcasecmp@@GLIBC_2.0
 strchr@@GLIBC_2.0
 strcmp@@GLIBC_2.0
 strcpy@@GLIBC_2.0
 strlen@@GLIBC_2.0
 strncat@@GLIBC_2.0
 strncmp@@GLIBC_2.0
 strnlen@@GLIBC_2.0
 strstr@@GLIBC_2.0
 strtod@@GLIBC_2.0
 strtol@@GLIBC_2.0
 strtoll@@GLIBC_2.0
 strtoul@@GLIBC_2.0
 syscall@@GLIBC_2.0
 t .L12
 t .L155
 t .L156
 t .L157
 t .L158
 t .L159
 t .L160
 t .L161
 t .L162
 t .L163
 t .L164
 t .L165
 t .L166
 t .L167
 t .L168
 t .L169
 t .L17
 t .L19
 t .L20
 t .L214
 t .L215
 t .L216
 t .L217
 t .L218
 t .L219
 t .L220
 t .L221
 t .L222
 t .L223
 t .L224
 t .L225
 t .L226
 t .L227
 t .L228
 t .L229
 t .L23
 t .L230
 t .L24
 t .L244
 t .L25
 t .L26
 t .L271
 t .L272
 t .L273
 t .L274
 t .L275
 t .L28
 t .L29
 t .L32
 t .L327
 t .L328
 t .L329
 t .L33
 t .L330
 t .L331
 t .L34
 t .L35
 t .L43
 t .L45
 t .L46
 t .L47
 t .L48
 t .L49
 t .L50
 t .L51
 t .L52
 t .L53
 t .L54
 t .L542
 t .L543
 t .L544
 t .L545
 t .L546
 t .L547
 t .L549
 t .L55
 t .L550
 t .L551
 t .L552
 t .L553
 t .L554
 t .L555
 t .L556
 t .L557
 t .L558
 t .L559
 t .L56
 t .L560
 t .L561
 t .L562
 t .L563
 t .L564
 t .L565
 t .L566
 t .L567
 t .L568
 t .L569
 t .L57
 t .L570
 t .L571
 t .L572
 t .L573
 t .L574
 t .L575
 t .L576
 t .L577
 t .L579
 t .L58
 t .L581
 t .L582
 t .L583
 t .L584
 t .L585
 t .L586
 t .L587
 t .L588
 t .L589
 t .L59
 t .L590
 t .L591
 t .L6
 t .L60
 t .L61
 t .L62
 t .L63
 t .L64
 t .L65
 t .L66
 t .L663
 t .L664
 t .L665
 t .L666
 t .L667
 t .L67
 t .L68
 t .L683
 t .L69
 t .L7
 t .L70
 t .L700
 t .L71
 t .L711
 t .L712
 t .L713
 t .L714
 t .L715
 t .L716
 t .L717
 t .L718
 t .L719
 t .L720
 t .L721
 t .L722
 t .L723
 t .L8
 t .L9
 t AllocString(char const*, int)
 t AllocWString(wchar_t const*, int)
 t AppendPrintf(char*, unsigned int, char const*, ...)
 t AsianWordWrap::CanBeginLine(wchar_t)
 t AsianWordWrap::CanBreakAfter(wchar_t const*)
 t AsianWordWrap::CanBreakRepeated(wchar_t)
 t AsianWordWrap::CanEndLine(wchar_t)
 t CBaseAppSystem<IShaderDeviceMgr>::GetDependencies()
 t CBaseAppSystem<IShaderDeviceMgr>::GetTier()
 t CBaseAppSystem<IShaderDeviceMgr>::Reconnect(void* (*)(char const*, int*), char const*)
 t CBoyerMooreSearch::CBoyerMooreSearch(unsigned char const*, int)
 t CBoyerMooreSearch::Search(unsigned char const*, int)
 t CCommand::CCommand()
 t CCommand::CCommand(int, char const**, cmd_source_t)
 t CCommand::DefaultBreakSet()
 t CCommand::FindArg(char const*) const
 t CCommand::FindArgInt(char const*, int) const
 t CCommand::Reset()
 t CCommand::Tokenize(char const*, cmd_source_t, characterset_t*)
 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 t CDllDemandLoader::CDllDemandLoader(char const*)
 t CDllDemandLoader::GetFactory()
 t CDllDemandLoader::Unload()
 t CDllDemandLoader::~CDllDemandLoader()
 t CEmptyConVar::GetName() const
 t CEmptyConVar::IsFlagSet(int) const
 t CEmptyConVar::SetValue(char const*)
 t CEmptyConVar::SetValue(float)
 t CEmptyConVar::SetValue(int)
 t CEmptyConVar::~CEmptyConVar()
 t CEmptyMesh::AccessRawHardwareDataStream(unsigned char, unsigned int, unsigned int, void*)
 t CEmptyMesh::BeginCastBuffer(MaterialIndexFormat_t)
 t CEmptyMesh::BeginCastBuffer(unsigned long long)
 t CEmptyMesh::CEmptyMesh(bool)
 t CEmptyMesh::ComputeMemoryUsed()
 t CEmptyMesh::CopyToMeshBuilder(int, int, int, int, int, CMeshBuilder&)
 t CEmptyMesh::DisableFlexMesh()
 t CEmptyMesh::Draw(CPrimList*, int)
 t CEmptyMesh::Draw(int, int)
 t CEmptyMesh::DrawModulated(Vector4D const&, int, int)
 t CEmptyMesh::EndCastBuffer()
 t CEmptyMesh::GetCachedPerFrameMeshData()
 t CEmptyMesh::GetMaterial()
 t CEmptyMesh::GetMesh()
 t CEmptyMesh::GetRoomRemaining() const
 t CEmptyMesh::GetVertexFormat() const
 t CEmptyMesh::IndexCount() const
 t CEmptyMesh::IndexFormat() const
 t CEmptyMesh::IsDynamic() const
 t CEmptyMesh::Lock(int, bool, IndexDesc_t&)
 t CEmptyMesh::Lock(int, bool, VertexDesc_t&)
 t CEmptyMesh::LockMesh(int, int, MeshDesc_t&, MeshBuffersAllocationSettings_t*)
 t CEmptyMesh::MarkAsDrawn()
 t CEmptyMesh::ModifyBegin(bool, int, int, IndexDesc_t&)
 t CEmptyMesh::ModifyBegin(int, int, int, int, MeshDesc_t&)
 t CEmptyMesh::ModifyBeginEx(bool, int, int, int, int, MeshDesc_t&)
 t CEmptyMesh::ModifyEnd(IndexDesc_t&)
 t CEmptyMesh::ModifyEnd(MeshDesc_t&)
 t CEmptyMesh::ReconstructFromCachedPerFrameMeshData(ICachedPerFrameMeshData*)
 t CEmptyMesh::SetColorMesh(IMesh*, int)
 t CEmptyMesh::SetFlexMesh(IMesh*, int)
 t CEmptyMesh::SetPrimitiveType(MaterialPrimitiveType_t)
 t CEmptyMesh::Spew(int, IndexDesc_t const&)
 t CEmptyMesh::Spew(int, VertexDesc_t const&)
 t CEmptyMesh::Spew(int, int, MeshDesc_t const&)
 t CEmptyMesh::Unlock(int, IndexDesc_t&)
 t CEmptyMesh::Unlock(int, VertexDesc_t&)
 t CEmptyMesh::UnlockMesh(int, int, MeshDesc_t&)
 t CEmptyMesh::ValidateData(int, IndexDesc_t const&)
 t CEmptyMesh::ValidateData(int, VertexDesc_t const&)
 t CEmptyMesh::ValidateData(int, int, MeshDesc_t const&)
 t CEmptyMesh::VertexCount() const
 t CEmptyMesh::~CEmptyMesh()
 t CFmtStrN<256, false>::CFmtStrN(char const*, ...)
 t CFmtStrN<256, false>::InitQuietTruncation()
 t CShaderAPIEmpty::AcquireThreadOwnership()
 t CShaderAPIEmpty::ActualHasFastVertexTextures() const
 t CShaderAPIEmpty::AddShaderComboInformation(ShaderComboSemantics_t const*)
 t CShaderAPIEmpty::AntiAliasingHint(int)
 t CShaderAPIEmpty::BeginFrame()
 t CShaderAPIEmpty::BeginGeneratingCSMs()
 t CShaderAPIEmpty::BeginOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
 t CShaderAPIEmpty::BeginPIXEvent(unsigned long, char const*)
 t CShaderAPIEmpty::BeginPass(short)
 t CShaderAPIEmpty::Bind(IMaterial*)
 t CShaderAPIEmpty::BindGeometryShader(GeometryShaderHandle_t__*)
 t CShaderAPIEmpty::BindIndexBuffer(IIndexBuffer*, int)
 t CShaderAPIEmpty::BindPixelShader(PixelShaderHandle_t__*)
 t CShaderAPIEmpty::BindStandardTexture(Sampler_t, TextureBindFlags_t, StandardTextureId_t)
 t CShaderAPIEmpty::BindStandardVertexTexture(VertexTextureSampler_t, StandardTextureId_t)
 t CShaderAPIEmpty::BindTexture(Sampler_t, TextureBindFlags_t, int)
 t CShaderAPIEmpty::BindVertexBuffer(int, IVertexBuffer*, int, int, int, unsigned long long, int)
 t CShaderAPIEmpty::BindVertexShader(VertexShaderHandle_t__*)
 t CShaderAPIEmpty::BindVertexTexture(VertexTextureSampler_t, int)
 t CShaderAPIEmpty::CShaderAPIEmpty()
 t CShaderAPIEmpty::CanDoSRGBReadFromRTs() const
 t CShaderAPIEmpty::CanDownloadTextures() const
 t CShaderAPIEmpty::ChangeVideoMode(ShaderDeviceInfo_t const&)
 t CShaderAPIEmpty::ClearBuffers(bool, bool, bool, int, int)
 t CShaderAPIEmpty::ClearBuffersEx(bool, bool, bool, bool, unsigned char, unsigned char, unsigned char, unsigned char)
 t CShaderAPIEmpty::ClearBuffersObeyStencil(bool, bool)
 t CShaderAPIEmpty::ClearBuffersObeyStencilEx(bool, bool, bool)
 t CShaderAPIEmpty::ClearColor3ub(unsigned char, unsigned char, unsigned char)
 t CShaderAPIEmpty::ClearColor4ub(unsigned char, unsigned char, unsigned char, unsigned char)
 t CShaderAPIEmpty::ClearSelectionNames()
 t CShaderAPIEmpty::ClearSnapshots()
 t CShaderAPIEmpty::ClearStencilBufferRectangle(int, int, int, int, int)
 t CShaderAPIEmpty::ClearVertexAndPixelShaderRefCounts()
 t CShaderAPIEmpty::CommitPixelShaderLighting(int)
 t CShaderAPIEmpty::CompareSnapshots(short, short)
 t CShaderAPIEmpty::ComputeVertexDescription(unsigned char*, unsigned long long, MeshDesc_t&) const
 t CShaderAPIEmpty::ComputeVertexFormat(int, short*) const
 t CShaderAPIEmpty::ComputeVertexUsage(int, short*) const
 t CShaderAPIEmpty::CopyRenderTargetToTexture(int)
 t CShaderAPIEmpty::CopyRenderTargetToTextureEx(int, int, Rect_t*, Rect_t*)
 t CShaderAPIEmpty::CopyTextureToRenderTargetEx(int, int, Rect_t*, Rect_t*)
 t CShaderAPIEmpty::CreateDepthTexture(ImageFormat, int, int, char const*, bool, bool)
 t CShaderAPIEmpty::CreateOcclusionQueryObject()
 t CShaderAPIEmpty::CreateTexture(int, int, int, ImageFormat, int, int, int, char const*, char const*)
 t CShaderAPIEmpty::CreateTextures(int*, int, int, int, int, ImageFormat, int, int, int, char const*, char const*)
 t CShaderAPIEmpty::CullMode(MaterialCullMode_t)
 t CShaderAPIEmpty::CurrentTime() const
 t CShaderAPIEmpty::DXSupportLevelChanged(int)
 t CShaderAPIEmpty::DeleteTexture(int)
 t CShaderAPIEmpty::DestroyOcclusionQueryObject(ShaderAPIOcclusionQuery_t__*)
 t CShaderAPIEmpty::DestroyVertexBuffers(bool)
 t CShaderAPIEmpty::DisableAllLocalLights()
 t CShaderAPIEmpty::DisableAlphaToCoverage()
 t CShaderAPIEmpty::DoRenderTargetsNeedSeparateDepthBuffer() const
 t CShaderAPIEmpty::Draw(MaterialPrimitiveType_t, int, int)
 t CShaderAPIEmpty::DrawInstances(int, MeshInstanceData_t const*)
 t CShaderAPIEmpty::EnableAlphaToCoverage()
 t CShaderAPIEmpty::EnableBuffer2FramesAhead(bool)
 t CShaderAPIEmpty::EnableClipPlane(int, bool)
 t CShaderAPIEmpty::EnableDebugTextureList(bool)
 t CShaderAPIEmpty::EnableFastClip(bool)
 t CShaderAPIEmpty::EnableGetAllTextures(bool)
 t CShaderAPIEmpty::EnableHWMorphing(bool)
 t CShaderAPIEmpty::EnableLinearColorSpaceFrameBuffer(bool)
 t CShaderAPIEmpty::EnableShaderShaderMutex(bool)
 t CShaderAPIEmpty::EnableSinglePassFlashlightMode(bool)
 t CShaderAPIEmpty::EnableUserClipTransformOverride(bool)
 t CShaderAPIEmpty::EndFrame()
 t CShaderAPIEmpty::EndGeneratingCSMs()
 t CShaderAPIEmpty::EndOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
 t CShaderAPIEmpty::EndPIXEvent()
 t CShaderAPIEmpty::EvictManagedResources()
 t CShaderAPIEmpty::ExecuteCommandBuffer(unsigned char*)
 t CShaderAPIEmpty::FakeSRGBWrite() const
 t CShaderAPIEmpty::FindTexture(char const*)
 t CShaderAPIEmpty::FlipCullMode()
 t CShaderAPIEmpty::FlipCulling(bool)
 t CShaderAPIEmpty::FlushHardware()
 t CShaderAPIEmpty::FogColor3f(float, float, float)
 t CShaderAPIEmpty::FogColor3fv(float const*)
 t CShaderAPIEmpty::FogColor3ub(unsigned char, unsigned char, unsigned char)
 t CShaderAPIEmpty::FogColor3ubv(unsigned char const*)
 t CShaderAPIEmpty::FogEnd(float)
 t CShaderAPIEmpty::FogMaxDensity(float)
 t CShaderAPIEmpty::FogMode(MaterialFogMode_t)
 t CShaderAPIEmpty::FogStart(float)
 t CShaderAPIEmpty::ForceDepthFuncEquals(bool)
 t CShaderAPIEmpty::ForceHardwareSync()
 t CShaderAPIEmpty::GammaToLinear_HardwareSpecific(float) const
 t CShaderAPIEmpty::GetActualProjectionMatrix(float*)
 t CShaderAPIEmpty::GetAspectRatioInfo() const
 t CShaderAPIEmpty::GetBackBufferDimensions(int&, int&) const
 t CShaderAPIEmpty::GetCSMAccurateBlending() const
 t CShaderAPIEmpty::GetCSMQuality() const
 t CShaderAPIEmpty::GetCSMShaderMode(CSMQualityMode_t) const
 t CShaderAPIEmpty::GetCascadedShadowMappingState(ITexture**, bool) const
 t CShaderAPIEmpty::GetCurrentColorCorrection(ShaderColorCorrectionInfo_t*)
 t CShaderAPIEmpty::GetCurrentDynamicVBSize()
 t CShaderAPIEmpty::GetCurrentDynamicVBSize(int)
 t CShaderAPIEmpty::GetCurrentFogType() const
 t CShaderAPIEmpty::GetCurrentNumBones() const
 t CShaderAPIEmpty::GetCurrentRenderTargetDimensions(int&, int&) const
 t CShaderAPIEmpty::GetCurrentViewport(int&, int&, int&, int&) const
 t CShaderAPIEmpty::GetD3DTexturePtr(int)
 t CShaderAPIEmpty::GetDX9LightState(LightState_t*) const
 t CShaderAPIEmpty::GetDXSupportLevel() const
 t CShaderAPIEmpty::GetDebugTextureList()
 t CShaderAPIEmpty::GetDynamicMesh(IMaterial*, int, bool, IMesh*, IMesh*)
 t CShaderAPIEmpty::GetDynamicMeshEx(IMaterial*, unsigned long long, int, bool, IMesh*, IMesh*)
 t CShaderAPIEmpty::GetFarZ()
 t CShaderAPIEmpty::GetFlashlightAmbientOcclusion() const
 t CShaderAPIEmpty::GetFlashlightShaderInfo(bool*, bool*) const
 t CShaderAPIEmpty::GetFlashlightState(VMatrix&) const
 t CShaderAPIEmpty::GetFlashlightStateEx(VMatrix&, ITexture**) const
 t CShaderAPIEmpty::GetFlexMesh()
 t CShaderAPIEmpty::GetFloatRenderingParameter(int) const
 t CShaderAPIEmpty::GetFogDistances(float*, float*, float*)
 t CShaderAPIEmpty::GetFrameBufferColorDepth() const
 t CShaderAPIEmpty::GetGPUMemoryStats(GPUMemoryStats&)
 t CShaderAPIEmpty::GetHDREnabled() const
 t CShaderAPIEmpty::GetHDRType() const
 t CShaderAPIEmpty::GetHWSpecificShaderDLLName() const
 t CShaderAPIEmpty::GetHardwareHDRType() const
 t CShaderAPIEmpty::GetHighPrecisionShadowDepthTextureFormat() const
 t CShaderAPIEmpty::GetIntRenderingParameter(int) const
 t CShaderAPIEmpty::GetLightMapScaleFactor() const
 t CShaderAPIEmpty::GetLightmapDimensions(int*, int*)
 t CShaderAPIEmpty::GetMatrix(MaterialMatrixMode_t, float*)
 t CShaderAPIEmpty::GetMaxDXSupportLevel() const
 t CShaderAPIEmpty::GetMaxIndicesToRender()
 t CShaderAPIEmpty::GetMaxToRender(IMesh*, bool, int*, int*)
 t CShaderAPIEmpty::GetMaxVertexTextureDimension() const
 t CShaderAPIEmpty::GetMaxVerticesToRender(IMaterial*)
 t CShaderAPIEmpty::GetMinDXSupportLevel() const
 t CShaderAPIEmpty::GetNearestRenderTargetFormat(ImageFormat) const
 t CShaderAPIEmpty::GetNearestSupportedFormat(ImageFormat, bool) const
 t CShaderAPIEmpty::GetNullTextureFormat() const
 t CShaderAPIEmpty::GetNumActiveDeformations() const
 t CShaderAPIEmpty::GetPackedDeformationInformation(int, float*, int, int, int*) const
 t CShaderAPIEmpty::GetPixelFogCombo()
 t CShaderAPIEmpty::GetRenderTargetEx(int) const
 t CShaderAPIEmpty::GetSamplerCount() const
 t CShaderAPIEmpty::GetSceneFogColor(unsigned char*)
 t CShaderAPIEmpty::GetSceneFogMode()
 t CShaderAPIEmpty::GetShaderDLLName() const
 t CShaderAPIEmpty::GetShadowDepthBias() const
 t CShaderAPIEmpty::GetShadowDepthTextureFormat() const
 t CShaderAPIEmpty::GetShadowFilterMode(bool, bool) const
 t CShaderAPIEmpty::GetShadowSlopeScaleDepthBias() const
 t CShaderAPIEmpty::GetStandardTextureDimensions(int*, int*, StandardTextureId_t)
 t CShaderAPIEmpty::GetStandardTextureHandle(StandardTextureId_t)
 t CShaderAPIEmpty::GetSubDHeight()
 t CShaderAPIEmpty::GetTessellationMode() const
 t CShaderAPIEmpty::GetTextureDimensions(int, int&, int&, int&)
 t CShaderAPIEmpty::GetTextureMemoryUsed(IDebugTextureInfo::TextureMemoryType)
 t CShaderAPIEmpty::GetTextureRenderingParameter(int) const
 t CShaderAPIEmpty::GetToneMappingScaleLinear() const
 t CShaderAPIEmpty::GetVectorRenderingParameter(int) const
 t CShaderAPIEmpty::GetVertexBufferCompression() const
 t CShaderAPIEmpty::GetVertexModifyBuilder()
 t CShaderAPIEmpty::GetVertexSamplerCount() const
 t CShaderAPIEmpty::GetVertexTextureCount() const
 t CShaderAPIEmpty::GetViewports(ShaderViewport_t*, int) const
 t CShaderAPIEmpty::GetWorldSpaceCameraDirection(float*) const
 t CShaderAPIEmpty::GetWorldSpaceCameraPosition(float*) const
 t CShaderAPIEmpty::HandleDeviceLost()
 t CShaderAPIEmpty::HasDestAlphaBuffer() const
 t CShaderAPIEmpty::HasFastVertexTextures() const
 t CShaderAPIEmpty::HasFullResolutionDepthTexture() const
 t CShaderAPIEmpty::HasSetDeviceGammaRamp() const
 t CShaderAPIEmpty::HasStencilBuffer() const
 t CShaderAPIEmpty::InEditorMode() const
 t CShaderAPIEmpty::InFlashlightMode() const
 t CShaderAPIEmpty::InvalidateDelayedShaderConstants()
 t CShaderAPIEmpty::IsAAEnabled() const
 t CShaderAPIEmpty::IsAlphaTested(short) const
 t CShaderAPIEmpty::IsCascadedShadowMapping() const
 t CShaderAPIEmpty::IsDX10Card() const
 t CShaderAPIEmpty::IsDebugTextureListFresh(int)
 t CShaderAPIEmpty::IsDepthWriteEnabled(short) const
 t CShaderAPIEmpty::IsHWMorphingEnabled() const
 t CShaderAPIEmpty::IsRenderingPaint() const
 t CShaderAPIEmpty::IsStandardTextureHandleValid(StandardTextureId_t)
 t CShaderAPIEmpty::IsStereoActiveThisFrame() const
 t CShaderAPIEmpty::IsStereoSupported() const
 t CShaderAPIEmpty::IsTexture(int)
 t CShaderAPIEmpty::IsTextureResident(int)
 t CShaderAPIEmpty::IsTranslucent(short) const
 t CShaderAPIEmpty::IsUnsupported() const
 t CShaderAPIEmpty::Knob(char*, float*)
 t CShaderAPIEmpty::LinearToGamma_HardwareSpecific(float) const
 t CShaderAPIEmpty::LoadBoneMatrix(int, float const*)
 t CShaderAPIEmpty::LoadCameraToWorld()
 t CShaderAPIEmpty::LoadIdentity()
 t CShaderAPIEmpty::LoadMatrix(float*)
 t CShaderAPIEmpty::LoadSelectionName(int)
 t CShaderAPIEmpty::LockDebugTextureList()
 t CShaderAPIEmpty::LockTex(int)
 t CShaderAPIEmpty::MarkUnusedVertexFields(unsigned int, int, bool*)
 t CShaderAPIEmpty::MatrixMode(MaterialMatrixMode_t)
 t CShaderAPIEmpty::MaxHWMorphBatchCount() const
 t CShaderAPIEmpty::MaxNumLights() const
 t CShaderAPIEmpty::MaxTextureAspectRatio() const
 t CShaderAPIEmpty::MaxTextureDepth() const
 t CShaderAPIEmpty::MaxTextureHeight() const
 t CShaderAPIEmpty::MaxTextureWidth() const
 t CShaderAPIEmpty::MaxUserClipPlanes() const
 t CShaderAPIEmpty::MaxVertexShaderBlendMatrices() const
 t CShaderAPIEmpty::MaxViewports() const
 t CShaderAPIEmpty::MaximumAnisotropicLevel() const
 t CShaderAPIEmpty::ModifyTexture(int)
 t CShaderAPIEmpty::MultMatrix(float*)
 t CShaderAPIEmpty::MultMatrixLocal(float*)
 t CShaderAPIEmpty::NeedsAAClamp() const
 t CShaderAPIEmpty::NeedsATICentroidHack() const
 t CShaderAPIEmpty::NeedsShaderSRGBConversion() const
 t CShaderAPIEmpty::NumBooleanVertexShaderConstants() const
 t CShaderAPIEmpty::NumIntegerVertexShaderConstants() const
 t CShaderAPIEmpty::NumPixelShaderConstants() const
 t CShaderAPIEmpty::NumVertexShaderConstants() const
 t CShaderAPIEmpty::OcclusionQuery_GetNumPixelsRendered(ShaderAPIOcclusionQuery_t__*, bool)
 t CShaderAPIEmpty::OnPresent()
 t CShaderAPIEmpty::Ortho(double, double, double, double, double, double)
 t CShaderAPIEmpty::OverrideAlphaWriteEnable(bool, bool)
 t CShaderAPIEmpty::OverrideColorWriteEnable(bool, bool)
 t CShaderAPIEmpty::OverrideDepthEnable(bool, bool, bool)
 t CShaderAPIEmpty::OverrideStreamOffsetSupport(bool, bool)
 t CShaderAPIEmpty::OwnGPUResources(bool)
 t CShaderAPIEmpty::PerformFullScreenStencilOperation()
 t CShaderAPIEmpty::PerpareForCascadeDraw(int, float, float)
 t CShaderAPIEmpty::PerspectiveOffCenterX(double, double, double, double, double, double, double, double)
 t CShaderAPIEmpty::PerspectiveX(double, double, double, double)
 t CShaderAPIEmpty::PickMatrix(int, int, int, int)
 t CShaderAPIEmpty::PopDeformation()
 t CShaderAPIEmpty::PopMatrix()
 t CShaderAPIEmpty::PopSelectionName()
 t CShaderAPIEmpty::PreferDynamicTextures() const
 t CShaderAPIEmpty::PreferHardwareSync() const
 t CShaderAPIEmpty::PreferTexturesInHWMemory() const
 t CShaderAPIEmpty::PreferZPrepass() const
 t CShaderAPIEmpty::Printf(char*, ...)
 t CShaderAPIEmpty::PrintfVA(char*, char*)
 t CShaderAPIEmpty::PurgeUnusedVertexAndPixelShaders()
 t CShaderAPIEmpty::PushDeformation(DeformationBase_t const*)
 t CShaderAPIEmpty::PushMatrix()
 t CShaderAPIEmpty::PushSelectionName(int)
 t CShaderAPIEmpty::ReadPixels(Rect_t*, Rect_t*, unsigned char*, ImageFormat, int)
 t CShaderAPIEmpty::ReadPixels(int, int, int, int, unsigned char*, ImageFormat, ITexture*)
 t CShaderAPIEmpty::ReadPixelsAsync(int, int, int, int, unsigned char*, ImageFormat, ITexture*, CThreadEvent*)
 t CShaderAPIEmpty::ReadPixelsAsyncGetResult(int, int, int, int, unsigned char*, ImageFormat, CThreadEvent*)
 t CShaderAPIEmpty::ReadPixelsFromFrontBuffer() const
 t CShaderAPIEmpty::RecordString(char const*)
 t CShaderAPIEmpty::ReleaseThreadOwnership()
 t CShaderAPIEmpty::RenderPass(unsigned char const*, int, int)
 t CShaderAPIEmpty::ResetRenderState(bool)
 t CShaderAPIEmpty::Rotate(float, float, float, float)
 t CShaderAPIEmpty::Scale(float, float, float)
 t CShaderAPIEmpty::ScaleXY(float, float)
 t CShaderAPIEmpty::SceneFogColor3ub(unsigned char, unsigned char, unsigned char)
 t CShaderAPIEmpty::SceneFogMode(MaterialFogMode_t)
 t CShaderAPIEmpty::SelectionBuffer(unsigned int*, int)
 t CShaderAPIEmpty::SelectionMode(bool)
 t CShaderAPIEmpty::SetAmbientLightCube(Vector4D*)
 t CShaderAPIEmpty::SetAnisotropicLevel(int)
 t CShaderAPIEmpty::SetBooleanPixelShaderConstant(int, int const*, int, bool)
 t CShaderAPIEmpty::SetBooleanVertexShaderConstant(int, int const*, int, bool)
 t CShaderAPIEmpty::SetCSMAccurateBlending(bool)
 t CShaderAPIEmpty::SetCascadedShadowMapping(bool)
 t CShaderAPIEmpty::SetCascadedShadowMappingState(CascadedShadowMappingState_t const&, ITexture*)
 t CShaderAPIEmpty::SetClipPlane(int, float const*)
 t CShaderAPIEmpty::SetDebugTextureRendering(bool)
 t CShaderAPIEmpty::SetDefaultState()
 t CShaderAPIEmpty::SetDepthFeatheringShaderConstants(int, float)
 t CShaderAPIEmpty::SetDisallowAccess(bool)
 t CShaderAPIEmpty::SetFastClipPlane(float const*)
 t CShaderAPIEmpty::SetFlashlightState(FlashlightState_t const&, VMatrix const&)
 t CShaderAPIEmpty::SetFlashlightStateEx(FlashlightState_t const&, VMatrix const&, ITexture*)
 t CShaderAPIEmpty::SetFlexWeights(int, int, MorphWeight_t const*)
 t CShaderAPIEmpty::SetFloatRenderingParameter(int, float)
 t CShaderAPIEmpty::SetFogZ(float)
 t CShaderAPIEmpty::SetFullScreenTextureHandle(int)
 t CShaderAPIEmpty::SetHDREnabled(bool)
 t CShaderAPIEmpty::SetHeightClipMode(MaterialHeightClipMode_t)
 t CShaderAPIEmpty::SetHeightClipZ(float)
 t CShaderAPIEmpty::SetIntRenderingParameter(int, int)
 t CShaderAPIEmpty::SetIntegerPixelShaderConstant(int, int const*, int, bool)
 t CShaderAPIEmpty::SetIntegerVertexShaderConstant(int, int const*, int, bool)
 t CShaderAPIEmpty::SetLightingOrigin(Vector)
 t CShaderAPIEmpty::SetLightingState(MaterialLightingState_t const&)
 t CShaderAPIEmpty::SetLights(int, LightDesc_t const*)
 t CShaderAPIEmpty::SetLinearToGammaConversionTextures(int, int)
 t CShaderAPIEmpty::SetMode(void*, int, ShaderDeviceInfo_t const&)
 t CShaderAPIEmpty::SetNumBoneWeights(int)
 t CShaderAPIEmpty::SetPIXMarker(unsigned long, char const*)
 t CShaderAPIEmpty::SetPixelShaderConstant(int, float const*, int, bool)
 t CShaderAPIEmpty::SetPixelShaderFogParams(int)
 t CShaderAPIEmpty::SetPixelShaderIndex(int)
 t CShaderAPIEmpty::SetRasterState(ShaderRasterState_t const&)
 t CShaderAPIEmpty::SetRenderTarget(int, int)
 t CShaderAPIEmpty::SetRenderTargetEx(int, int, int)
 t CShaderAPIEmpty::SetSRGBWrite(bool)
 t CShaderAPIEmpty::SetScissorRect(int, int, int, int, bool)
 t CShaderAPIEmpty::SetScreenSizeForVPOS(int)
 t CShaderAPIEmpty::SetShadowDepthBiasFactors(float, float)
 t CShaderAPIEmpty::SetSkinningMatrices(MeshInstanceData_t const&)
 t CShaderAPIEmpty::SetStandardTextureHandle(StandardTextureId_t, int)
 t CShaderAPIEmpty::SetStandardVertexShaderConstants(float)
 t CShaderAPIEmpty::SetStencilState(ShaderStencilState_t const&)
 t CShaderAPIEmpty::SetTextureFilterMode(Sampler_t, TextureFilterMode_t)
 t CShaderAPIEmpty::SetTextureRenderingParameter(int, ITexture*)
 t CShaderAPIEmpty::SetToneMappingScaleLinear(Vector const&)
 t CShaderAPIEmpty::SetVSNearAndFarZ(int)
 t CShaderAPIEmpty::SetVectorRenderingParameter(int, Vector const&)
 t CShaderAPIEmpty::SetVertexShaderCameraPos()
 t CShaderAPIEmpty::SetVertexShaderConstant(int, float const*, int, bool)
 t CShaderAPIEmpty::SetVertexShaderIndex(int)
 t CShaderAPIEmpty::SetVertexShaderModelViewProjAndModelView()
 t CShaderAPIEmpty::SetVertexShaderViewProj()
 t CShaderAPIEmpty::SetViewports(int, ShaderViewport_t const*, bool)
 t CShaderAPIEmpty::ShadeMode(ShaderShadeMode_t)
 t CShaderAPIEmpty::ShaderLock()
 t CShaderAPIEmpty::ShaderUnlock()
 t CShaderAPIEmpty::ShouldWriteDepthToDestAlpha() const
 t CShaderAPIEmpty::SinglePassFlashlightModeEnabled()
 t CShaderAPIEmpty::SpecifiesFogColorInLinearSpace() const
 t CShaderAPIEmpty::SpinPresent(unsigned int)
 t CShaderAPIEmpty::StencilBufferBits() const
 t CShaderAPIEmpty::SupportsBilinearPCFSampling() const
 t CShaderAPIEmpty::SupportsBorderColor() const
 t CShaderAPIEmpty::SupportsCSAAMode(int, int)
 t CShaderAPIEmpty::SupportsCascadedShadowMapping() const
 t CShaderAPIEmpty::SupportsColorOnSecondStream() const
 t CShaderAPIEmpty::SupportsCompressedTextures() const
 t CShaderAPIEmpty::SupportsCompressedVertices() const
 t CShaderAPIEmpty::SupportsFetch4()
 t CShaderAPIEmpty::SupportsFetch4() const
 t CShaderAPIEmpty::SupportsGLMixedSizeTargets() const
 t CShaderAPIEmpty::SupportsHDR() const
 t CShaderAPIEmpty::SupportsHDRMode(HDRType_t) const
 t CShaderAPIEmpty::SupportsMSAAMode(int)
 t CShaderAPIEmpty::SupportsMipmappedCubemaps() const
 t CShaderAPIEmpty::SupportsResolveDepth() const
 t CShaderAPIEmpty::SupportsSRGB() const
 t CShaderAPIEmpty::SupportsShadowDepthTextures()
 t CShaderAPIEmpty::SupportsShadowDepthTextures() const
 t CShaderAPIEmpty::SupportsStaticControlFlow() const
 t CShaderAPIEmpty::SupportsStaticPlusDynamicLighting() const
 t CShaderAPIEmpty::SupportsStreamOffset() const
 t CShaderAPIEmpty::SuppressPixelShaderCentroidHackFixup() const
 t CShaderAPIEmpty::SyncToken(char const*)
 t CShaderAPIEmpty::TakeSnapshot()
 t CShaderAPIEmpty::TexImage2D(int, int, ImageFormat, int, int, int, ImageFormat, bool, void*)
 t CShaderAPIEmpty::TexLock(int, int, int, int, int, int, CPixelWriter&)
 t CShaderAPIEmpty::TexMagFilter(ShaderTexFilterMode_t)
 t CShaderAPIEmpty::TexMinFilter(ShaderTexFilterMode_t)
 t CShaderAPIEmpty::TexSetPriority(int)
 t CShaderAPIEmpty::TexSubImage2D(int, int, int, int, int, int, int, ImageFormat, int, bool, void*)
 t CShaderAPIEmpty::TexUnlock()
 t CShaderAPIEmpty::TexWrap(ShaderTexCoordComponent_t, ShaderTexWrapMode_t)
 t CShaderAPIEmpty::TextureMemorySize() const
 t CShaderAPIEmpty::Translate(float, float, float)
 t CShaderAPIEmpty::UnlockDebugTextureList()
 t CShaderAPIEmpty::UnlockTex(int)
 t CShaderAPIEmpty::UpdateGameTime(float)
 t CShaderAPIEmpty::UpdateStereoTexture(int, bool*)
 t CShaderAPIEmpty::UpdateTexture(int, int, int, int, int, int)
 t CShaderAPIEmpty::UpdateVertexShaderMatrix(int)
 t CShaderAPIEmpty::UseFastClipping() const
 t CShaderAPIEmpty::UseSnapshot(short)
 t CShaderAPIEmpty::UserClipTransform(VMatrix const&)
 t CShaderAPIEmpty::UsesSRGBCorrectBlending() const
 t CShaderAPIEmpty::UsesVertexAndPixelShaders(short) const
 t CShaderAPIEmpty::VertexFormatSize(unsigned long long) const
 t CShaderAPIEmpty::~CShaderAPIEmpty()
 t CShaderDeviceEmpty::AddView(void*)
 t CShaderDeviceEmpty::CompileShader(char const*, unsigned int, char const*)
 t CShaderDeviceEmpty::CreateGeometryShader(IShaderBuffer*)
 t CShaderDeviceEmpty::CreateIndexBuffer(ShaderBufferType_t, MaterialIndexFormat_t, int, char const*)
 t CShaderDeviceEmpty::CreatePixelShader(IShaderBuffer*)
 t CShaderDeviceEmpty::CreateStaticMesh(unsigned long long, char const*, IMaterial*, VertexStreamSpec_t*)
 t CShaderDeviceEmpty::CreateVertexBuffer(ShaderBufferType_t, unsigned long long, int, char const*)
 t CShaderDeviceEmpty::CreateVertexShader(IShaderBuffer*)
 t CShaderDeviceEmpty::DestroyGeometryShader(GeometryShaderHandle_t__*)
 t CShaderDeviceEmpty::DestroyIndexBuffer(IIndexBuffer*)
 t CShaderDeviceEmpty::DestroyPixelShader(PixelShaderHandle_t__*)
 t CShaderDeviceEmpty::DestroyStaticMesh(IMesh*)
 t CShaderDeviceEmpty::DestroyVertexBuffer(IVertexBuffer*)
 t CShaderDeviceEmpty::DestroyVertexShader(VertexShaderHandle_t__*)
 t CShaderDeviceEmpty::DoStartupShaderPreloading()
 t CShaderDeviceEmpty::EnableNonInteractiveMode(MaterialNonInteractiveMode_t, ShaderNonInteractiveInfo_t*)
 t CShaderDeviceEmpty::GetAspectRatioInfo() const
 t CShaderDeviceEmpty::GetBackBufferDimensions(int&, int&) const
 t CShaderDeviceEmpty::GetBackBufferFormat() const
 t CShaderDeviceEmpty::GetCurrentAdapter() const
 t CShaderDeviceEmpty::GetDynamicIndexBuffer()
 t CShaderDeviceEmpty::GetDynamicVertexBuffer(int, unsigned long long, bool)
 t CShaderDeviceEmpty::GetWindowSize(int&, int&) const
 t CShaderDeviceEmpty::HandleThreadEvent(unsigned int)
 t CShaderDeviceEmpty::IsAAEnabled() const
 t CShaderDeviceEmpty::IsUsingGraphics() const
 t CShaderDeviceEmpty::Present()
 t CShaderDeviceEmpty::ReacquireResources()
 t CShaderDeviceEmpty::RefreshFrontBufferNonInteractive()
 t CShaderDeviceEmpty::ReleaseResources(bool)
 t CShaderDeviceEmpty::RemoveView(void*)
 t CShaderDeviceEmpty::SetHardwareGammaRamp(float, float, float, float, bool)
 t CShaderDeviceEmpty::SetView(void*)
 t CShaderDeviceEmpty::SpewDriverInfo() const
 t CShaderDeviceEmpty::StencilBufferBits() const
 t CShaderDeviceEmpty::~CShaderDeviceEmpty()
 t CShaderDeviceMgrEmpty::AddDeviceDependentObject(IShaderDeviceDependentObject*)
 t CShaderDeviceMgrEmpty::AddModeChangeCallback(void (*)())
 t CShaderDeviceMgrEmpty::Connect(void* (*)(char const*, int*))
 t CShaderDeviceMgrEmpty::Disconnect()
 t CShaderDeviceMgrEmpty::GetAdapterCount() const
 t CShaderDeviceMgrEmpty::GetAdapterInfo(int, MaterialAdapterInfo_t&) const
 t CShaderDeviceMgrEmpty::GetCurrentModeInfo(ShaderDisplayMode_t*, int) const
 t CShaderDeviceMgrEmpty::GetModeCount(int) const
 t CShaderDeviceMgrEmpty::GetModeInfo(ShaderDisplayMode_t*, int, int) const
 t CShaderDeviceMgrEmpty::GetRecommendedConfigurationInfo(int, int, KeyValues*)
 t CShaderDeviceMgrEmpty::GetRecommendedVideoConfig(int, KeyValues*)
 t CShaderDeviceMgrEmpty::Init()
 t CShaderDeviceMgrEmpty::QueryInterface(char const*)
 t CShaderDeviceMgrEmpty::RemoveDeviceDependentObject(IShaderDeviceDependentObject*)
 t CShaderDeviceMgrEmpty::RemoveModeChangeCallback(void (*)())
 t CShaderDeviceMgrEmpty::SetAdapter(int, int)
 t CShaderDeviceMgrEmpty::SetMode(void*, int, ShaderDeviceInfo_t const&)
 t CShaderDeviceMgrEmpty::Shutdown()
 t CShaderShadowEmpty::AlphaFunc(ShaderAlphaFunc_t, float)
 t CShaderShadowEmpty::BlendFunc(ShaderBlendFactor_t, ShaderBlendFactor_t)
 t CShaderShadowEmpty::BlendFuncSeparateAlpha(ShaderBlendFactor_t, ShaderBlendFactor_t)
 t CShaderShadowEmpty::BlendOp(ShaderBlendOp_t)
 t CShaderShadowEmpty::BlendOpSeparateAlpha(ShaderBlendOp_t)
 t CShaderShadowEmpty::CShaderShadowEmpty()
 t CShaderShadowEmpty::DepthFunc(ShaderDepthFunc_t)
 t CShaderShadowEmpty::DisableFogGammaCorrection(bool)
 t CShaderShadowEmpty::EnableAlphaTest(bool)
 t CShaderShadowEmpty::EnableAlphaToCoverage(bool)
 t CShaderShadowEmpty::EnableAlphaWrites(bool)
 t CShaderShadowEmpty::EnableBlending(bool)
 t CShaderShadowEmpty::EnableBlendingForceOpaque(bool)
 t CShaderShadowEmpty::EnableBlendingSeparateAlpha(bool)
 t CShaderShadowEmpty::EnableColorWrites(bool)
 t CShaderShadowEmpty::EnableCulling(bool)
 t CShaderShadowEmpty::EnableDepthTest(bool)
 t CShaderShadowEmpty::EnableDepthWrites(bool)
 t CShaderShadowEmpty::EnablePolyOffset(PolygonOffsetMode_t)
 t CShaderShadowEmpty::EnableSRGBRead(Sampler_t, bool)
 t CShaderShadowEmpty::EnableSRGBWrite(bool)
 t CShaderShadowEmpty::EnableTexture(Sampler_t, bool)
 t CShaderShadowEmpty::EnableVertexTexture(VertexTextureSampler_t, bool)
 t CShaderShadowEmpty::ExecuteCommandBuffer(unsigned char*)
 t CShaderShadowEmpty::FogMode(ShaderFogMode_t, bool)
 t CShaderShadowEmpty::GetLightMapScaleFactor() const
 t CShaderShadowEmpty::PolyMode(ShaderPolyModeFace_t, ShaderPolyMode_t)
 t CShaderShadowEmpty::SetDefaultState()
 t CShaderShadowEmpty::SetPixelShader(char const*, int)
 t CShaderShadowEmpty::SetShadowDepthFiltering(Sampler_t)
 t CShaderShadowEmpty::SetVertexShader(char const*, int)
 t CShaderShadowEmpty::VertexShaderVertexFormat(unsigned int, int, int*, int)
 t CShaderShadowEmpty::~CShaderShadowEmpty()
 t CSplitScreenAddedConVar::GetBaseName() const
 t CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
 t CUtlBinaryBlock::Get(void*, int) const
 t CUtlBinaryBlock::Set(void const*, int)
 t CUtlBinaryBlock::SetLength(int)
 t CUtlBinaryBlock::operator=(CUtlBinaryBlock const&)
 t CUtlBinaryBlock::operator==(CUtlBinaryBlock const&) const
 t CUtlBuffer::ActivateByteSwapping(bool)
 t CUtlBuffer::AddNullTermination(int)
 t CUtlBuffer::AssumeMemory(void*, int, int, int)
 t CUtlBuffer::CUtlBuffer(int, int, int)
 t CUtlBuffer::CUtlBuffer(void const*, int, int)
 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 t CUtlBuffer::CheckGet(int)
 t CUtlBuffer::CheckPeekGet(int, int)
 t CUtlBuffer::CheckPut(int)
 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
 t CUtlBuffer::DetachMemory()
 t CUtlBuffer::EatCPPComment()
 t CUtlBuffer::EatWhiteSpace()
 t CUtlBuffer::EnsureCapacity(int)
 t CUtlBuffer::Get(void*, int)
 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 t CUtlBuffer::GetLine(char*, int)
 t CUtlBuffer::GetOverflow(int)
 t CUtlBuffer::GetString(char*, int)
 t CUtlBuffer::GetToken(char const*)
 t CUtlBuffer::GetUpTo(void*, int)
 t CUtlBuffer::IsBigEndian()
 t CUtlBuffer::OnGetOverflow(int)
 t CUtlBuffer::OnPutOverflow(int)
 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 t CUtlBuffer::PeekGet(int, int)
 t CUtlBuffer::PeekLineLength()
 t CUtlBuffer::PeekStringLength()
 t CUtlBuffer::PeekStringMatch(int, char const*, int)
 t CUtlBuffer::PeekWhiteSpace(int)
 t CUtlBuffer::Printf(char const*, ...)
 t CUtlBuffer::Put(void const*, int)
 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
 t CUtlBuffer::PutOverflow(int)
 t CUtlBuffer::PutString(char const*)
 t CUtlBuffer::Scanf(char const*, ...)
 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 t CUtlBuffer::SetBigEndian(bool)
 t CUtlBuffer::SetBufferType(bool, bool)
 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
 t CUtlBuffer::Swap(CUtlBuffer&)
 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
 t CUtlBuffer::VaPrintf(char const*, char*)
 t CUtlBuffer::VaScanf(char const*, char*)
 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 t CUtlCStringConversion::FindConversion(char const*, int*)
 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 t CUtlCharConversion::FindConversion(char const*, int*)
 t CUtlCharConversion::GetConversionLength(char) const
 t CUtlCharConversion::GetConversionString(char) const
 t CUtlCharConversion::GetDelimiter() const
 t CUtlCharConversion::GetDelimiterLength() const
 t CUtlCharConversion::GetEscapeChar() const
 t CUtlCharConversion::MaxConversionLength() const
 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
 t CUtlInplaceBuffer::InplaceGetLinePtr()
 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
 t CUtlMemory<CUtlString, int>::Grow(int)
 t CUtlMemory<char*, int>::Grow(int)
 t CUtlMemory<unsigned char, int>::ConvertToGrowableMemory(int) [clone .part.32]
 t CUtlMemory<unsigned char, int>::Grow(int)
 t CUtlMemory<unsigned char, int>::Purge()
 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::~CUtlMemory()
 t CUtlMemory<wchar_t*, int>::Grow(int)
 t CUtlNoEscConversion::FindConversion(char const*, int*)
 t CUtlString::AbsPath(char const*)
 t CUtlString::Append(char const*)
 t CUtlString::CUtlString()
 t CUtlString::CUtlString(CUtlString const&)
 t CUtlString::CUtlString(char const*)
 t CUtlString::CUtlString(void const*, int)
 t CUtlString::CUtlString(void*, int, int)
 t CUtlString::DirName()
 t CUtlString::Format(char const*, ...)
 t CUtlString::FormatV(char const*, char*)
 t CUtlString::Get()
 t CUtlString::Get() const
 t CUtlString::GetBaseFilename() const
 t CUtlString::GetExtension() const
 t CUtlString::Left(int)
 t CUtlString::Length() const
 t CUtlString::MatchesPattern(CUtlString const&, int)
 t CUtlString::PathJoin(char const*, char const*)
 t CUtlString::Purge()
 t CUtlString::Replace(char, char)
 t CUtlString::Right(int)
 t CUtlString::Set(char const*)
 t CUtlString::SetDirect(char const*, int)
 t CUtlString::SetLength(int)
 t CUtlString::Slice(int, int)
 t CUtlString::StripExtension() const
 t CUtlString::StripFilename() const
 t CUtlString::StripTrailingSlash()
 t CUtlString::ToLower()
 t CUtlString::UnqualifiedFilename()
 t CUtlString::operator char const*() const
 t CUtlString::operator+=(CUtlString const&)
 t CUtlString::operator+=(char const*)
 t CUtlString::operator+=(char)
 t CUtlString::operator+=(double)
 t CUtlString::operator+=(int)
 t CUtlString::operator=(CUtlString const&)
 t CUtlString::operator=(char const*)
 t CUtlString::operator==(CUtlString const&) const
 t CUtlString::operator==(char const*) const
 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::InsertBefore(int, void (* const&)(IConVar*, char const*, float))
 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
 t CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::InsertBefore(int, wchar_t* const&)
 t CharacterSetBuild(characterset_t*, char const*)
 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t ConCommand::CanAutoComplete()
 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
 t ConCommand::Dispatch(CCommand const&)
 t ConCommand::IsCommand() const
 t ConCommand::~ConCommand()
 t ConCommandBase::AddFlags(int)
 t ConCommandBase::ConCommandBase()
 t ConCommandBase::ConCommandBase(char const*, char const*, int)
 t ConCommandBase::CopyString(char const*)
 t ConCommandBase::Create(char const*, char const*, int)
 t ConCommandBase::GetDLLIdentifier() const
 t ConCommandBase::GetFlags() const
 t ConCommandBase::GetHelpText() const
 t ConCommandBase::GetName() const
 t ConCommandBase::GetNext()
 t ConCommandBase::GetNext() const
 t ConCommandBase::Init()
 t ConCommandBase::IsCommand() const
 t ConCommandBase::IsFlagSet(int) const
 t ConCommandBase::IsRegistered() const
 t ConCommandBase::RemoveFlags(int)
 t ConCommandBase::Shutdown()
 t ConCommandBase::~ConCommandBase()
 t ConVar::AddFlags(int)
 t ConVar::ChangeStringValue(char const*, float)
 t ConVar::ClampValue(float&)
 t ConVar::ConVar(char const*, char const*, int)
 t ConVar::ConVar(char const*, char const*, int, char const*)
 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 t ConVar::GetBaseName() const
 t ConVar::GetDefault() const
 t ConVar::GetFlags() const
 t ConVar::GetFloat() const
 t ConVar::GetHelpText() const
 t ConVar::GetInt() const
 t ConVar::GetMax(float&) const
 t ConVar::GetMaxValue() const
 t ConVar::GetMin(float&) const
 t ConVar::GetMinValue() const
 t ConVar::GetName() const
 t ConVar::GetSplitScreenPlayerSlot() const
 t ConVar::HasMax() const
 t ConVar::HasMin() const
 t ConVar::Init()
 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float), bool)
 t ConVar::InternalSetColorFromString(char const*)
 t ConVar::InternalSetColorValue(Color)
 t ConVar::InternalSetFloatValue(float)
 t ConVar::InternalSetIntValue(int)
 t ConVar::InternalSetValue(char const*)
 t ConVar::IsCommand() const
 t ConVar::IsFlagSet(int) const
 t ConVar::IsRegistered() const
 t ConVar::RemoveChangeCallback(void (*)(IConVar*, char const*, float))
 t ConVar::Revert()
 t ConVar::SetDefault(char const*)
 t ConVar::SetValue(Color)
 t ConVar::SetValue(char const*)
 t ConVar::SetValue(float)
 t ConVar::SetValue(int)
 t ConVar::~ConVar()
 t ConVarRef::ConVarRef(IConVar*)
 t ConVarRef::ConVarRef(char const*)
 t ConVarRef::ConVarRef(char const*, bool)
 t ConVarRef::Init(char const*, bool)
 t ConVarRef::IsValid() const
 t ConVar_AppendFlags(ConCommandBase const*, char*, unsigned int)
 t ConVar_PrintDescription(ConCommandBase const*)
 t ConVar_Register(int, IConCommandBaseAccessor*)
 t ConVar_Unregister()
 t ConnectInterfaces(void* (**)(char const*, int*), int)
 t CopyMemory3D(void*, void const*, int, int, int, int, int, int, int)
 t CreateInterfaceInternal(char const*, int*)
 t DefaultCompletionFunc(char const*, char (*) [64])
 t DisconnectInterfaces()
 t GetCStringCharConversion()
 t GetModuleHandle(char const*)
 t GetNoEscCharConversion()
 t HexToValue(char)
 t IAppSystem::IsSingleton()
 t IShaderDevice::OnDebugEvent(char const*)
 t IShaderDynamicAPI::BeginPerfEEvent(wchar_t*)
 t IShaderDynamicAPI::EndPerfEvent()
 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
 t LengthOfMatchingPaths(char const*, char const*)
 t Q_URLDecode(char*, int, char const*, int)
 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
 t Q_URLDecodeRaw(char*, int, char const*, int)
 t Q_URLEncode(char*, int, char const*, int)
 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
 t Q_URLEncodeRaw(char*, int, char const*, int)
 t ReconnectInterface(void* (*)(char const*, int*), char const*)
 t ReconnectInterface(void* (*)(char const*, int*), char const*, void**)
 t RegisterInterface(void* (*)(char const*, int*), char const*, void**)
 t ShaderInterfaceFactory(char const*, int*)
 t SplitScreenConVarRef::Init(char const*, bool)
 t SplitScreenConVarRef::IsValid() const
 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
 t StringAfterPrefix(char const*, char const*)
 t StringAfterPrefixCaseSensitive(char const*, char const*)
 t Sys_GetFactory(CSysModule*)
 t Sys_GetFactory(char const*)
 t Sys_GetFactoryThis()
 t Sys_IsDebuggerPresent()
 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
 t Sys_LoadLibrary(char const*)
 t Sys_LoadLibraryGuts(char const*)
 t Sys_LoadModule(char const*)
 t Sys_RunningWithDebugModules()
 t Sys_UnloadModule(CSysModule*)
 t V_AddBackSlashesToSpecialChars(char const*)
 t V_AppendSlash(char*, int, char)
 t V_BinToString(char*, void*, unsigned int)
 t V_BoyerMooreSearch(unsigned char const*, int, unsigned char const*, int)
 t V_ComposeFileName(char const*, char const*, char*, int)
 t V_DefaultExtension(char*, char const*, int)
 t V_ExtractFileExtension(char const*, char*, int)
 t V_ExtractFilePath(char const*, char*, int)
 t V_FileBase(char const*, char*, int)
 t V_FixDoubleSlashes(char*)
 t V_FixSlashes(char*, char)
 t V_FixupPathName(char*, int, char const*)
 t V_FixupPathSpaceToUnderscore(char*)
 t V_GetCurrentDirectory(char*, int)
 t V_GetFileExtension(char const*)
 t V_GetFileExtensionSafe(char const*)
 t V_IsAbsolutePath(char const*)
 t V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)
 t V_MakeAbsolutePath(char*, int, char const*, char const*)
 t V_MakeRelativePath(char const*, char const*, char*, int)
 t V_ParseLine(char const*, char*, int, bool*)
 t V_ParseToken(char const*, char*, int, bool*, characterset_t*)
 t V_PathsMatch(char const*, char const*)
 t V_RandomString(int)
 t V_RemoveDotSlashes(char*, char)
 t V_SetCurrentDirectory(char const*)
 t V_SetExtension(char*, char const*, int)
 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 t V_SplitWString(wchar_t const*, wchar_t const*, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
 t V_SplitWString2(wchar_t const*, wchar_t const**, int, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
 t V_StrLeft(char const*, int, char*, int)
 t V_StrRight(char const*, int, char*, int)
 t V_StrSlice(char const*, int, int, char*, int)
 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
 t V_StringMatchesPattern(char const*, char const*, int)
 t V_StringToBin(char const*, void*, unsigned int)
 t V_StringToColor32(color32_s*, char const*)
 t V_StringToFloatArray(float*, int, char const*)
 t V_StringToIntArray(int*, int, char const*)
 t V_StringToVector(float*, char const*)
 t V_StripExtension(char const*, char*, int)
 t V_StripFilename(char*)
 t V_StripLastDir(char*, int)
 t V_StripLeadingWhitespace(char*)
 t V_StripSurroundingQuotes(char*)
 t V_StripTrailingSlash(char*)
 t V_StripTrailingWhitespace(char*)
 t V_TokenWaiting(char const*)
 t V_TranslateLineFeedsToUnix(char*)
 t V_UnqualifiedFileName(char const*)
 t V_atod(char const*)
 t V_atof(char const*)
 t V_atoi(char const*)
 t V_atoi64(char const*)
 t V_atoui64(char const*)
 t V_binarytohex(unsigned char const*, int, char*, int)
 t V_hextobinary(char const*, int, unsigned char*, int)
 t V_nibble(char)
 t V_normalizeFloatString(char*)
 t V_pretifymem(float, int, bool)
 t V_pretifynum(long long)
 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
 t V_snprintf(char*, int, char const*, ...)
 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 t V_strcasecmp(char const*, char const*)
 t V_stristr(char const*, char const*)
 t V_stristr(char*, char const*)
 t V_strncasecmp(char const*, char const*, int)
 t V_strncat(char*, char const*, unsigned int, int)
 t V_strnchr(char const*, char, int)
 t V_strncmp(char const*, char const*, int)
 t V_strncpy(char*, char const*, int)
 t V_strnicmp(char const*, char const*, int)
 t V_strnistr(char const*, char const*, int)
 t V_strnlwr(char*, unsigned int)
 t V_strtowcs(char const*, int, wchar_t*, int)
 t V_vsnprintf(char*, int, char const*, char*)
 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
 t V_wcsistr(wchar_t const*, wchar_t const*)
 t V_wcsistr(wchar_t*, wchar_t const*)
 t V_wcsncat(wchar_t*, wchar_t const*, int, int)
 t V_wcsncpy(wchar_t*, wchar_t const*, int)
 t V_wcstostr(wchar_t const*, int, char*, int)
 t _GLOBAL__sub_I__Z9_V_memsetPvii
 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
 t _GLOBAL__sub_I__ZN15CUtlBinaryBlockC2Eii
 t _GLOBAL__sub_I___cxa_pure_virtual
 t _GLOBAL__sub_I_cvar
 t _GLOBAL__sub_I_eh_alloc.cc
 t _GLOBAL__sub_I_g_pShaderUtil
 t _GLOBAL__sub_I_s_StringCharConversion
 t _GLOBAL__sub_I_s_pInterfaceRegs
 t _Unwind_Backtrace
 t _Unwind_DebugHook
 t _Unwind_DeleteException
 t _Unwind_FindEnclosingFunction
 t _Unwind_Find_FDE
 t _Unwind_ForcedUnwind
 t _Unwind_ForcedUnwind_Phase2
 t _Unwind_GetCFA
 t _Unwind_GetDataRelBase
 t _Unwind_GetGR
 t _Unwind_GetIP
 t _Unwind_GetIPInfo
 t _Unwind_GetLanguageSpecificData
 t _Unwind_GetRegionStart
 t _Unwind_GetTextRelBase
 t _Unwind_IteratePhdrCallback
 t _Unwind_RaiseException
 t _Unwind_RaiseException_Phase2
 t _Unwind_Resume
 t _Unwind_Resume_or_Rethrow
 t _Unwind_SetGR
 t _Unwind_SetIP
 t _Unwind_SetSpColumn
 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
 t _V_UTF8ToUnicode(char const*, wchar_t*, int)
 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
 t _V_UnicodeToUTF8(wchar_t const*, char*, int)
 t _V_memcmp(void const*, void const*, int)
 t _V_memcpy(void*, void const*, int)
 t _V_memmove(void*, void const*, int)
 t _V_memset(void*, int, int)
 t _V_strcmp(char const*, char const*)
 t _V_strcpy(char*, char const*)
 t _V_stricmp(char const*, char const*)
 t _V_stricmp_NegativeForUnequal(char const*, char const*)
 t _V_strlen(char const*)
 t _V_strlower(char*)
 t _V_strnlen(char const*, int)
 t _V_strrchr(char const*, char)
 t _V_strstr(char const*, char const*)
 t _V_strupr(char*)
 t _V_wcscmp(wchar_t const*, wchar_t const*)
 t _V_wcslen(wchar_t const*)
 t _V_wcslower(wchar_t*)
 t _V_wcsupr(wchar_t*)
 t __CreateCShaderAPIEmptyIDebugTextureInfo_interface()
 t __CreateCShaderAPIEmptyIMaterialSystemHardwareConfig_interface()
 t __CreateCShaderAPIEmptyIShaderAPI_interface()
 t __CreateCShaderDeviceEmptyIShaderDevice_interface()
 t __CreateCShaderDeviceMgrEmptyIShaderDeviceMgr_interface()
 t __CreateCShaderShadowEmptyIShaderShadow_interface()
 t __cxa_allocate_dependent_exception
 t __cxa_allocate_exception
 t __cxa_begin_catch
 t __cxa_call_terminate
 t __cxa_call_unexpected
 t __cxa_current_exception_type
 t __cxa_demangle
 t __cxa_end_catch
 t __cxa_free_dependent_exception
 t __cxa_free_exception
 t __cxa_get_exception_ptr
 t __cxa_get_globals
 t __cxa_get_globals_fast
 t __cxa_guard_abort
 t __cxa_guard_acquire
 t __cxa_guard_release
 t __cxa_pure_virtual
 t __cxa_rethrow
 t __cxa_throw
 t __cxxabiv1::__forced_unwind::~__forced_unwind()
 t __cxxabiv1::__foreign_exception::~__foreign_exception()
 t __cxxabiv1::__terminate(void (*)())
 t __cxxabiv1::__unexpected(void (*)())
 t __deregister_frame
 t __deregister_frame_info
 t __deregister_frame_info_bases
 t __do_global_ctors_aux
 t __do_global_dtors_aux
 t __dynamic_cast
 t __frame_state_for
 t __gcclibcxx_demangle_callback
 t __gnu_cxx::__concurrence_lock_error::what() const
 t __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
 t __gnu_cxx::__concurrence_unlock_error::what() const
 t __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
 t __gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)
 t __gnu_cxx::__scoped_lock::~__scoped_lock()
 t __gnu_cxx::__verbose_terminate_handler()
 t __gnu_cxx::recursive_init_error::~recursive_init_error()
 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
 t __gxx_personality_v0
 t __i686.get_pc_thunk.bx
 t __i686.get_pc_thunk.cx
 t __i686.get_pc_thunk.dx
 t __register_frame
 t __register_frame_info
 t __register_frame_info_bases
 t __register_frame_info_table
 t __register_frame_info_table_bases
 t __register_frame_table
 t __udivdi3
 t _calloc_dbg
 t _expand_dbg
 t _free_dbg
 t _malloc_dbg
 t _msize_dbg
 t _nh_malloc_dbg
 t _realloc_dbg
 t add_fdes
 t base_from_cb_data
 t base_from_object
 t base_of_encoded_value(unsigned char, _Unwind_Context*)
 t cIntToHexDigit(int)
 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long) [clone .constprop.4]
 t classify_object_over_fdes
 t d_add_substitution
 t d_append_buffer
 t d_append_char
 t d_append_num
 t d_append_string
 t d_bare_function_type
 t d_call_offset
 t d_compact_number
 t d_cv_qualifiers
 t d_demangle_callback.constprop.18
 t d_encoding
 t d_expr_primary
 t d_expression
 t d_exprlist
 t d_find_pack
 t d_growable_string_callback_adapter
 t d_index_template_argument
 t d_make_builtin_type
 t d_make_comp
 t d_make_empty
 t d_make_name
 t d_mangled_name
 t d_name
 t d_number.isra.0
 t d_operator_name
 t d_parmlist
 t d_print_array_type.isra.10
 t d_print_cast.isra.13.part.14
 t d_print_comp
 t d_print_expr_op
 t d_print_flush
 t d_print_function_type.isra.12
 t d_print_mod
 t d_print_mod_list
 t d_print_subexpr
 t d_source_name
 t d_substitution
 t d_template_args
 t d_template_param
 t d_type
 t d_unqualified_name
 t execute_cfa_program
 t execute_stack_op
 t fde_mixed_encoding_compare
 t fde_single_encoding_compare
 t fde_unencoded_compare
 t frame_downheap
 t frame_dummy
 t frame_heapsort
 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
 t get_cie_encoding
 t get_fde_encoding
 t get_ttype_entry(lsda_header_info*, unsigned long) [clone .constprop.6]
 t iHexCharToInt(char)
 t init_dwarf_reg_size_table
 t isbreakablewspace(wchar_t)
 t linear_search_fdes
 t nexttoken(char*, char const*, char)
 t non-virtual thunk to CEmptyConVar::GetName() const
 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
 t non-virtual thunk to CEmptyConVar::SetValue(float)
 t non-virtual thunk to CEmptyConVar::SetValue(int)
 t non-virtual thunk to CEmptyMesh::BeginCastBuffer(MaterialIndexFormat_t)
 t non-virtual thunk to CEmptyMesh::EndCastBuffer()
 t non-virtual thunk to CEmptyMesh::GetMesh()
 t non-virtual thunk to CEmptyMesh::GetRoomRemaining() const
 t non-virtual thunk to CEmptyMesh::IndexCount() const
 t non-virtual thunk to CEmptyMesh::IndexFormat() const
 t non-virtual thunk to CEmptyMesh::IsDynamic() const
 t non-virtual thunk to CEmptyMesh::Lock(int, bool, IndexDesc_t&)
 t non-virtual thunk to CEmptyMesh::ModifyBegin(bool, int, int, IndexDesc_t&)
 t non-virtual thunk to CEmptyMesh::ModifyEnd(IndexDesc_t&)
 t non-virtual thunk to CEmptyMesh::Spew(int, IndexDesc_t const&)
 t non-virtual thunk to CEmptyMesh::Unlock(int, IndexDesc_t&)
 t non-virtual thunk to CEmptyMesh::ValidateData(int, IndexDesc_t const&)
 t non-virtual thunk to CShaderAPIEmpty::ActualHasFastVertexTextures() const
 t non-virtual thunk to CShaderAPIEmpty::CanDoSRGBReadFromRTs() const
 t non-virtual thunk to CShaderAPIEmpty::EnableDebugTextureList(bool)
 t non-virtual thunk to CShaderAPIEmpty::EnableGetAllTextures(bool)
 t non-virtual thunk to CShaderAPIEmpty::FakeSRGBWrite() const
 t non-virtual thunk to CShaderAPIEmpty::GetCSMAccurateBlending() const
 t non-virtual thunk to CShaderAPIEmpty::GetCSMQuality() const
 t non-virtual thunk to CShaderAPIEmpty::GetCSMShaderMode(CSMQualityMode_t) const
 t non-virtual thunk to CShaderAPIEmpty::GetDXSupportLevel() const
 t non-virtual thunk to CShaderAPIEmpty::GetFrameBufferColorDepth() const
 t non-virtual thunk to CShaderAPIEmpty::GetHDREnabled() const
 t non-virtual thunk to CShaderAPIEmpty::GetHDRType() const
 t non-virtual thunk to CShaderAPIEmpty::GetHWSpecificShaderDLLName() const
 t non-virtual thunk to CShaderAPIEmpty::GetHardwareHDRType() const
 t non-virtual thunk to CShaderAPIEmpty::GetHighPrecisionShadowDepthTextureFormat() const
 t non-virtual thunk to CShaderAPIEmpty::GetLightMapScaleFactor() const
 t non-virtual thunk to CShaderAPIEmpty::GetMaxDXSupportLevel() const
 t non-virtual thunk to CShaderAPIEmpty::GetMaxVertexTextureDimension() const
 t non-virtual thunk to CShaderAPIEmpty::GetMinDXSupportLevel() const
 t non-virtual thunk to CShaderAPIEmpty::GetNullTextureFormat() const
 t non-virtual thunk to CShaderAPIEmpty::GetSamplerCount() const
 t non-virtual thunk to CShaderAPIEmpty::GetShaderDLLName() const
 t non-virtual thunk to CShaderAPIEmpty::GetShadowDepthBias() const
 t non-virtual thunk to CShaderAPIEmpty::GetShadowDepthTextureFormat() const
 t non-virtual thunk to CShaderAPIEmpty::GetShadowFilterMode(bool, bool) const
 t non-virtual thunk to CShaderAPIEmpty::GetShadowSlopeScaleDepthBias() const
 t non-virtual thunk to CShaderAPIEmpty::GetTextureMemoryUsed(IDebugTextureInfo::TextureMemoryType)
 t non-virtual thunk to CShaderAPIEmpty::GetVertexSamplerCount() const
 t non-virtual thunk to CShaderAPIEmpty::HasFastVertexTextures() const
 t non-virtual thunk to CShaderAPIEmpty::HasFullResolutionDepthTexture() const
 t non-virtual thunk to CShaderAPIEmpty::HasSetDeviceGammaRamp() const
 t non-virtual thunk to CShaderAPIEmpty::IsAAEnabled() const
 t non-virtual thunk to CShaderAPIEmpty::IsDebugTextureListFresh(int)
 t non-virtual thunk to CShaderAPIEmpty::IsUnsupported() const
 t non-virtual thunk to CShaderAPIEmpty::LockDebugTextureList()
 t non-virtual thunk to CShaderAPIEmpty::MaxHWMorphBatchCount() const
 t non-virtual thunk to CShaderAPIEmpty::MaxNumLights() const
 t non-virtual thunk to CShaderAPIEmpty::MaxTextureAspectRatio() const
 t non-virtual thunk to CShaderAPIEmpty::MaxTextureDepth() const
 t non-virtual thunk to CShaderAPIEmpty::MaxTextureHeight() const
 t non-virtual thunk to CShaderAPIEmpty::MaxTextureWidth() const
 t non-virtual thunk to CShaderAPIEmpty::MaxUserClipPlanes() const
 t non-virtual thunk to CShaderAPIEmpty::MaxVertexShaderBlendMatrices() const
 t non-virtual thunk to CShaderAPIEmpty::MaxViewports() const
 t non-virtual thunk to CShaderAPIEmpty::MaximumAnisotropicLevel() const
 t non-virtual thunk to CShaderAPIEmpty::NeedsAAClamp() const
 t non-virtual thunk to CShaderAPIEmpty::NeedsATICentroidHack() const
 t non-virtual thunk to CShaderAPIEmpty::NeedsShaderSRGBConversion() const
 t non-virtual thunk to CShaderAPIEmpty::NumPixelShaderConstants() const
 t non-virtual thunk to CShaderAPIEmpty::NumVertexShaderConstants() const
 t non-virtual thunk to CShaderAPIEmpty::OverrideStreamOffsetSupport(bool, bool)
 t non-virtual thunk to CShaderAPIEmpty::PreferDynamicTextures() const
 t non-virtual thunk to CShaderAPIEmpty::PreferHardwareSync() const
 t non-virtual thunk to CShaderAPIEmpty::PreferTexturesInHWMemory() const
 t non-virtual thunk to CShaderAPIEmpty::PreferZPrepass() const
 t non-virtual thunk to CShaderAPIEmpty::ReadPixelsFromFrontBuffer() const
 t non-virtual thunk to CShaderAPIEmpty::SetCSMAccurateBlending(bool)
 t non-virtual thunk to CShaderAPIEmpty::SetDebugTextureRendering(bool)
 t non-virtual thunk to CShaderAPIEmpty::SetHDREnabled(bool)
 t non-virtual thunk to CShaderAPIEmpty::SpecifiesFogColorInLinearSpace() const
 t non-virtual thunk to CShaderAPIEmpty::StencilBufferBits() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsBilinearPCFSampling() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsBorderColor() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsCascadedShadowMapping() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsCompressedVertices() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsFetch4() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsGLMixedSizeTargets() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsHDR() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsHDRMode(HDRType_t) const
 t non-virtual thunk to CShaderAPIEmpty::SupportsMipmappedCubemaps() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsResolveDepth() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsSRGB() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsShadowDepthTextures() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsStaticControlFlow() const
 t non-virtual thunk to CShaderAPIEmpty::SupportsStreamOffset() const
 t non-virtual thunk to CShaderAPIEmpty::SuppressPixelShaderCentroidHackFixup() const
 t non-virtual thunk to CShaderAPIEmpty::TextureMemorySize() const
 t non-virtual thunk to CShaderAPIEmpty::UnlockDebugTextureList()
 t non-virtual thunk to CShaderAPIEmpty::UseFastClipping() const
 t non-virtual thunk to CShaderAPIEmpty::UsesSRGBCorrectBlending() const
 t non-virtual thunk to CSplitScreenAddedConVar::GetBaseName() const
 t non-virtual thunk to CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
 t non-virtual thunk to ConVar::GetBaseName() const
 t non-virtual thunk to ConVar::GetName() const
 t non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
 t non-virtual thunk to ConVar::IsFlagSet(int) const
 t non-virtual thunk to ConVar::SetValue(Color)
 t non-virtual thunk to ConVar::SetValue(char const*)
 t non-virtual thunk to ConVar::SetValue(float)
 t non-virtual thunk to ConVar::SetValue(int)
 t operator delete(void*)
 t operator delete[](void*)
 t operator new(unsigned int)
 t operator new(unsigned int, int, char const*, int)
 t operator new[](unsigned int)
 t operator new[](unsigned int, int, char const*, int)
 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*) [clone .constprop.5]
 t read_encoded_value
 t read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)
 t read_encoded_value_with_base
 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
 t read_sleb128
 t read_sleb128(unsigned char const*, long*)
 t read_uleb128
 t read_uleb128(unsigned char const*, unsigned long*)
 t search_object
 t set_fast_math
 t size_of_encoded_value
 t std::bad_exception::what() const
 t std::bad_exception::~bad_exception()
 t std::exception::what() const
 t std::exception::~exception()
 t std::set_terminate(void (*)())
 t std::set_unexpected(void (*)())
 t std::terminate()
 t std::uncaught_exception()
 t std::unexpected()
 t uw_frame_state_for
 t uw_init_context_1
 t uw_install_context_1
 t uw_update_context
 t uw_update_context_1
 tolower@@GLIBC_2.0
 toupper@@GLIBC_2.0
 towlower@@GLIBC_2.0
 towupper@@GLIBC_2.0
 vsnprintf@@GLIBC_2.0
 vswprintf@@GLIBC_2.2
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 wcslen@@GLIBC_2.0
 wcsncat@@GLIBC_2.0
 wcsncpy@@GLIBC_2.0
 wcstombs@@GLIBC_2.0
