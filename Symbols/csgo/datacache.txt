 A __bss_start
 A _edata
 A _end
 B s_pInterfaceRegs
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Reset()
 CThreadEvent::Set()
 CThreadEvent::Wait(unsigned int)
 CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSpinRWLock::SpinLockForRead()
 CThreadSpinRWLock::SpinLockForWrite()
 CThreadSyncObject::~CThreadSyncObject()
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CallAssertFailedNotifyFunc
 CommandLine
 ConMsg(char const*, ...)
 CreateSimpleThread
 DevMsg
 DevMsg(char const*, ...)
 DevWarning(char const*, ...)
 DoNewAssertDialog
 Error
 GetCPUInformation
 KeyValuesSystem
 LOG_GENERAL
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 LoggingSystem_LogAssert
 Msg
 Plat_ExitProcess
 Plat_FloatTime
 Plat_IsInDebugSession
 Plat_MSTime
 RandomFloat
 RandomSeed
 ShouldUseNewAssertDialog
 T CreateInterface
 T _fini
 T _init
 ThreadGetCurrentId
 ThreadInMainThread
 ThreadInterlockedAssignIf64
 ThreadSetDebugName
 ThreadSleep
 V typeinfo for ECombinedResult
 V typeinfo for __cxxabiv1::__enum_type_info
 V typeinfo for __cxxabiv1::__forced_unwind
 V typeinfo for __cxxabiv1::__foreign_exception
 V typeinfo for __gnu_cxx::__concurrence_lock_error
 V typeinfo for __gnu_cxx::__concurrence_unlock_error
 V typeinfo for __gnu_cxx::recursive_init_error
 V typeinfo name for ECombinedResult
 V typeinfo name for __cxxabiv1::__enum_type_info
 V typeinfo name for __cxxabiv1::__forced_unwind
 V typeinfo name for __cxxabiv1::__foreign_exception
 V typeinfo name for __gnu_cxx::__concurrence_lock_error
 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
 V typeinfo name for __gnu_cxx::recursive_init_error
 V vtable for __cxxabiv1::__enum_type_info
 V vtable for __cxxabiv1::__forced_unwind
 V vtable for __cxxabiv1::__foreign_exception
 V vtable for __gnu_cxx::__concurrence_lock_error
 V vtable for __gnu_cxx::__concurrence_unlock_error
 V vtable for __gnu_cxx::recursive_init_error
 Warning
 WriteMiniDump
 _ExitOnFatalAssert
 _Jv_RegisterClasses
 ___tls_get_addr@@GLIBC_2.3
 __cxa_atexit@@GLIBC_2.1.3
 __cxa_finalize@@GLIBC_2.1.3
 __errno_location@@GLIBC_2.0
 __gmon_start__
 a _DYNAMIC
 a _GLOBAL_OFFSET_TABLE_
 abort@@GLIBC_2.0
 acos@@GLIBC_2.0
 acosf@@GLIBC_2.0
 asin@@GLIBC_2.0
 atan2@@GLIBC_2.0
 atan2f@@GLIBC_2.0
 atan@@GLIBC_2.0
 b (anonymous namespace)::__future_category_instance()::__fec
 b (anonymous namespace)::emergency_mutex
 b (anonymous namespace)::generic_category_instance
 b (anonymous namespace)::get_global()::global
 b (anonymous namespace)::system_category_instance
 b Bias(float, float)::lastExponent
 b CBaseResourcePrecacher::sm_pFirst
 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
 b CFixedBudgetMemoryPool<33792u, 530>::Alloc()::autoMutex__
 b CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
 b CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b CKeyValuesTokenReader::s_pTokenBuf
 b CMDLCache::GetStudioHdr(unsigned short)::developer
 b CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugHandle
 b CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugStudioData
 b CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugStudioHdr
 b CMDLCache::ProcessPendingAsyncs(MDLCacheDataType_t)::bReentering
 b CMDLCache::ReadMDLFile(unsigned short, char const*, CMDLCacheData&)::developer
 b CMDLCache::ReloadVCollide(unsigned short)::__executeCount
 b CModelCombine::m_nNextAssetID
 b CModelSwapper::LatchEffectiveGPULevel()::gpu_level
 b CSchemaClassBindingBase::sm_pClassBindingList
 b CStudioHdr::GroupStudioHdr(int)::__executeCount
 b CUtlMemoryPool::g_ReportFunc
 b CUtlSymbol::Initialize()::symbolsInitialized
 b CUtlSymbol::s_pSymbolTable
 b ConCommandBase::s_pAccessor
 b ConCommandBase::s_pConCommandBases
 b DataCacheItem_t::s_Allocator
 b GetTextureCombiner()::s_TextureCombiner
 b KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)::buf
 b KeyValues::s_pGrowableStringTable
 b NO_ASYNC
 b OptimizedModel::BodyPartHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::BoneStateChangeHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::FileHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::MaterialReplacementHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::MaterialReplacementListHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::MeshHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::ModelHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::ModelLODHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::StripGroupHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::StripHeader_t_DataDescInit::g_DataMapHolder
 b OptimizedModel::Vertex_t_DataDescInit::g_DataMapHolder
 b SinCosTable
 b StudioByteSwap::g_Swap
 b StudioByteSwap::g_bNativeSrc
 b StudioByteSwap::g_pFilename
 b StudioByteSwap::legacysurfaceheader_t_DataDescInit::g_DataMapHolder
 b StudioByteSwap::pCollision
 b StudioByteSwap::swapcompactsurfaceheader_t_DataDescInit::g_DataMapHolder
 b UNSPECIFIED_LOGGING_COLOR
 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::built
 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::s_BreakSetIncludingColons
 b V_pretifymem(float, int, bool)::current
 b V_pretifymem(float, int, bool)::output
 b V_pretifynum(long long)::current
 b V_pretifynum(long long)::output
 b __g_CreateCDataCacheIDataCache_reg
 b __g_CreateCMDLCacheIMDLCache_reg
 b __g_CreateCMDLCacheIStudioDataCache_reg
 b __g_CreateCPrecacheSystemIPrecacheSystem_reg
 b __g_CreateCResourceAccessControlIResourceAccessControl_reg
 b __gnu_cxx::__verbose_terminate_handler()::terminating
 b clear_anim_cache_command
 b colorcorrection
 b completed.5793
 b cvar
 b datacachesize
 b datamap_t* DataMapInit<mstudio_frame_anim_t>(mstudio_frame_anim_t*)::nameHolder
 b datamap_t* DataMapInit<mstudio_meshvertexdata_t>(mstudio_meshvertexdata_t*)::nameHolder
 b datamap_t* DataMapInit<mstudio_modelvertexdata_t>(mstudio_modelvertexdata_t*)::nameHolder
 b datamap_t* DataMapInit<mstudio_rle_anim_t>(mstudio_rle_anim_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioactivitymodifier_t>(mstudioactivitymodifier_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioaimatbone_t>(mstudioaimatbone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioaimconstraint_t>(mstudioaimconstraint_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioanim_valueptr_t>(mstudioanim_valueptr_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioanimblock_t>(mstudioanimblock_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioanimdesc_t>(mstudioanimdesc_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioanimsections_t>(mstudioanimsections_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioattachment_t>(mstudioattachment_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioautolayer_t>(mstudioautolayer_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioaxisinterpbone_t>(mstudioaxisinterpbone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiobbox_t>(mstudiobbox_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiobodyparts_t>(mstudiobodyparts_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiobone_t>(mstudiobone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiobonecontroller_t>(mstudiobonecontroller_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioboneflexdriver_t>(mstudioboneflexdriver_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioboneflexdrivercontrol_t>(mstudioboneflexdrivercontrol_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioboneweight_t>(mstudioboneweight_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiocompressedikerror_t>(mstudiocompressedikerror_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioconstraintslave_t>(mstudioconstraintslave_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioconstrainttarget_t>(mstudioconstrainttarget_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioevent_t>(mstudioevent_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioeyeball_t>(mstudioeyeball_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflex_t>(mstudioflex_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflexcontroller_t>(mstudioflexcontroller_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflexcontrollerui_t>(mstudioflexcontrollerui_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflexdesc_t>(mstudioflexdesc_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflexop_t>(mstudioflexop_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioflexrule_t>(mstudioflexrule_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiohitboxset_t>(mstudiohitboxset_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioikchain_t>(mstudioikchain_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioikconstraint_t>(mstudioikconstraint_t*)::dataDesc
 b datamap_t* DataMapInit<mstudioikconstraint_t>(mstudioikconstraint_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioikerror_t>(mstudioikerror_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioiklink_t>(mstudioiklink_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioiklock_t>(mstudioiklock_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioikrule_t>(mstudioikrule_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiojigglebone_t>(mstudiojigglebone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiolinearbone_t>(mstudiolinearbone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiolocalhierarchy_t>(mstudiolocalhierarchy_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiomesh_t>(mstudiomesh_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiomodel_t>(mstudiomodel_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiomodelgroup_t>(mstudiomodelgroup_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiomouth_t>(mstudiomouth_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiomovement_t>(mstudiomovement_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioorientconstraint_t>(mstudioorientconstraint_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioparentconstraint_t>(mstudioparentconstraint_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiopointconstraint_t>(mstudiopointconstraint_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioposeparamdesc_t>(mstudioposeparamdesc_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioquatinterpbone_t>(mstudioquatinterpbone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioquatinterpinfo_t>(mstudioquatinterpinfo_t*)::nameHolder
 b datamap_t* DataMapInit<mstudioseqdesc_t>(mstudioseqdesc_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiosrcbonetransform_t>(mstudiosrcbonetransform_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiotexture_t>(mstudiotexture_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiotwistbone_t>(mstudiotwistbone_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiotwistbonetarget_t>(mstudiotwistbonetarget_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiovertanim_t>(mstudiovertanim_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiovertanim_wrinkle_t>(mstudiovertanim_wrinkle_t*)::nameHolder
 b datamap_t* DataMapInit<mstudiovertex_t>(mstudiovertex_t*)::nameHolder
 b datamap_t* DataMapInit<phyheader_s>(phyheader_s*)::nameHolder
 b datamap_t* DataMapInit<studiohdr2_t>(studiohdr2_t*)::nameHolder
 b datamap_t* DataMapInit<studiohdr_t>(studiohdr_t*)::nameHolder
 b datamap_t* DataMapInit<vertexFileFixup_t>(vertexFileFixup_t*)::nameHolder
 b datamap_t* DataMapInit<vertexFileHeader_t>(vertexFileHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BodyPartHeader_t>(OptimizedModel::BodyPartHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BoneStateChangeHeader_t>(OptimizedModel::BoneStateChangeHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::FileHeader_t>(OptimizedModel::FileHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementHeader_t>(OptimizedModel::MaterialReplacementHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementListHeader_t>(OptimizedModel::MaterialReplacementListHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MeshHeader_t>(OptimizedModel::MeshHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelHeader_t>(OptimizedModel::ModelHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelLODHeader_t>(OptimizedModel::ModelLODHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripGroupHeader_t>(OptimizedModel::StripGroupHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripHeader_t>(OptimizedModel::StripHeader_t*)::nameHolder
 b datamap_t* OptimizedModel::DataMapInit<OptimizedModel::Vertex_t>(OptimizedModel::Vertex_t*)::nameHolder
 b datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::legacysurfaceheader_t>(StudioByteSwap::legacysurfaceheader_t*)::nameHolder
 b datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::swapcompactsurfaceheader_t>(StudioByteSwap::swapcompactsurfaceheader_t*)::nameHolder
 b dependents_buffer
 b dependents_used
 b dtor_idx.5795
 b dwarf_reg_size_table
 b emergency_buffer
 b emergency_used
 b emptyMapping
 b frame_hdr_cache
 b frame_hdr_cache_head
 b g_ActivityModifiersTable
 b g_AnimBlockAllocator
 b g_AsyncInfoMap
 b g_AsyncInfoMapMutex
 b g_CleanupSymbolTable
 b g_CombinerWriter
 b g_DataCache
 b g_ExpressionEvaluator
 b g_KVMutex
 b g_KeyValuesErrorStack
 b g_MDLCache
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_MatrixIdentity
 b g_ModelCombiner
 b g_ModelLookup
 b g_PrecacheSystem
 b g_ResourceAccessControl
 b g_StudioHdrToActivityMaps
 b g_StudioHdrToActivityMapsLock
 b g_VBAllocTracker
 b g_iDontForceFlush
 b g_nResourceFrameCount
 b g_pAVI
 b g_pAsyncFileSystem
 b g_pBIK
 b g_pCVar
 b g_pDataCache
 b g_pDmeMakefileUtils
 b g_pEventSystem
 b g_pFullFileSystem
 b g_pGameUISystemMgr
 b g_pInputStackSystem
 b g_pInputSystem
 b g_pLocalize
 b g_pMDLCache
 b g_pMatSystemSurface
 b g_pMatchFramework
 b g_pMaterialSystem
 b g_pMaterialSystem2
 b g_pMaterialSystemDebugTextureInfo
 b g_pMaterialSystemHardwareConfig
 b g_pMeshSystem
 b g_pNetworkSystem
 b g_pPhysics2
 b g_pPhysics2ActorManager
 b g_pPhysics2ResourceManager
 b g_pPhysicsCollision
 b g_pPrecacheSystem
 b g_pProcessUtils
 b g_pQueuedLoader
 b g_pRenderDevice
 b g_pRenderDeviceMgr
 b g_pRenderHardwareConfig
 b g_pResourceAccessControl
 b g_pResourceSystem
 b g_pSceneSystem
 b g_pSoundEmitterSystem
 b g_pSoundSystem
 b g_pStudioRender
 b g_pUtlSortVectorQSortContext
 b g_pVGui
 b g_pVGuiInput
 b g_pVGuiLocalize
 b g_pVGuiPanel
 b g_pVGuiRenderSurface
 b g_pVGuiSchemeManager
 b g_pVGuiSurface
 b g_pVGuiSystem
 b g_pWorldRendererMgr
 b guard variable for (anonymous namespace)::__future_category_instance()::__fec
 b guard variable for CFixedBudgetMemoryPool<33792u, 530>::Alloc()::autoMutex__
 b guard variable for CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b guard variable for CMDLCache::GetStudioHdr(unsigned short)::developer
 b guard variable for CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugHandle
 b guard variable for CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugStudioData
 b guard variable for CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)::pDebugStudioHdr
 b guard variable for CMDLCache::ReadMDLFile(unsigned short, char const*, CMDLCacheData&)::developer
 b guard variable for CModelSwapper::LatchEffectiveGPULevel()::gpu_level
 b guard variable for GetTextureCombiner()::s_TextureCombiner
 b guard variable for datamap_t* DataMapInit<mstudio_frame_anim_t>(mstudio_frame_anim_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudio_meshvertexdata_t>(mstudio_meshvertexdata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudio_modelvertexdata_t>(mstudio_modelvertexdata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudio_rle_anim_t>(mstudio_rle_anim_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioactivitymodifier_t>(mstudioactivitymodifier_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioaimatbone_t>(mstudioaimatbone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioaimconstraint_t>(mstudioaimconstraint_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioanim_valueptr_t>(mstudioanim_valueptr_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioanimblock_t>(mstudioanimblock_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioanimdesc_t>(mstudioanimdesc_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioanimsections_t>(mstudioanimsections_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioattachment_t>(mstudioattachment_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioautolayer_t>(mstudioautolayer_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioaxisinterpbone_t>(mstudioaxisinterpbone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiobbox_t>(mstudiobbox_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiobodyparts_t>(mstudiobodyparts_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiobone_t>(mstudiobone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiobonecontroller_t>(mstudiobonecontroller_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioboneflexdriver_t>(mstudioboneflexdriver_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioboneflexdrivercontrol_t>(mstudioboneflexdrivercontrol_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioboneweight_t>(mstudioboneweight_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiocompressedikerror_t>(mstudiocompressedikerror_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioconstraintslave_t>(mstudioconstraintslave_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioconstrainttarget_t>(mstudioconstrainttarget_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioevent_t>(mstudioevent_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioeyeball_t>(mstudioeyeball_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflex_t>(mstudioflex_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflexcontroller_t>(mstudioflexcontroller_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflexcontrollerui_t>(mstudioflexcontrollerui_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflexdesc_t>(mstudioflexdesc_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflexop_t>(mstudioflexop_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioflexrule_t>(mstudioflexrule_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiohitboxset_t>(mstudiohitboxset_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioikchain_t>(mstudioikchain_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioikconstraint_t>(mstudioikconstraint_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioikerror_t>(mstudioikerror_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioiklink_t>(mstudioiklink_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioiklock_t>(mstudioiklock_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioikrule_t>(mstudioikrule_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiojigglebone_t>(mstudiojigglebone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiolinearbone_t>(mstudiolinearbone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiolocalhierarchy_t>(mstudiolocalhierarchy_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiomesh_t>(mstudiomesh_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiomodel_t>(mstudiomodel_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiomodelgroup_t>(mstudiomodelgroup_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiomouth_t>(mstudiomouth_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiomovement_t>(mstudiomovement_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioorientconstraint_t>(mstudioorientconstraint_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioparentconstraint_t>(mstudioparentconstraint_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiopointconstraint_t>(mstudiopointconstraint_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioposeparamdesc_t>(mstudioposeparamdesc_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioquatinterpbone_t>(mstudioquatinterpbone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioquatinterpinfo_t>(mstudioquatinterpinfo_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudioseqdesc_t>(mstudioseqdesc_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiosrcbonetransform_t>(mstudiosrcbonetransform_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiotexture_t>(mstudiotexture_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiotwistbone_t>(mstudiotwistbone_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiotwistbonetarget_t>(mstudiotwistbonetarget_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiovertanim_t>(mstudiovertanim_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiovertanim_wrinkle_t>(mstudiovertanim_wrinkle_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<mstudiovertex_t>(mstudiovertex_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<phyheader_s>(phyheader_s*)::nameHolder
 b guard variable for datamap_t* DataMapInit<studiohdr2_t>(studiohdr2_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<studiohdr_t>(studiohdr_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<vertexFileFixup_t>(vertexFileFixup_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<vertexFileHeader_t>(vertexFileHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BodyPartHeader_t>(OptimizedModel::BodyPartHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BoneStateChangeHeader_t>(OptimizedModel::BoneStateChangeHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::FileHeader_t>(OptimizedModel::FileHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementHeader_t>(OptimizedModel::MaterialReplacementHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementListHeader_t>(OptimizedModel::MaterialReplacementListHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MeshHeader_t>(OptimizedModel::MeshHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelHeader_t>(OptimizedModel::ModelHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelLODHeader_t>(OptimizedModel::ModelLODHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripGroupHeader_t>(OptimizedModel::StripGroupHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripHeader_t>(OptimizedModel::StripHeader_t*)::nameHolder
 b guard variable for datamap_t* OptimizedModel::DataMapInit<OptimizedModel::Vertex_t>(OptimizedModel::Vertex_t*)::nameHolder
 b guard variable for datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::legacysurfaceheader_t>(StudioByteSwap::legacysurfaceheader_t*)::nameHolder
 b guard variable for datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::swapcompactsurfaceheader_t>(StudioByteSwap::swapcompactsurfaceheader_t*)::nameHolder
 b lineartolightmap
 b lineartoscreen
 b lineartotexture
 b lineartovertex
 b marker.7234
 b materials
 b mdlcache
 b mdlcache_dump_dictionary_state_command
 b mdllib
 b mem_force_flush
 b mem_force_flush_section
 b mod_check_vcollide
 b mod_dont_load_vertices
 b mod_forcedata
 b mod_load_anims_async
 b mod_load_fakestall
 b mod_load_mesh_async
 b mod_load_preload
 b mod_load_showstall
 b mod_load_vcollide_async
 b mod_lock_mdls_on_load
 b mod_lock_meshes_on_load
 b mod_test_mesh_not_available
 b mod_test_not_available
 b mod_test_verts_not_available
 b mod_trace_load
 b mstudio_frame_anim_t_DataDescInit::g_DataMapHolder
 b mstudio_meshvertexdata_t_DataDescInit::g_DataMapHolder
 b mstudio_modelvertexdata_t_DataDescInit::g_DataMapHolder
 b mstudio_rle_anim_t_DataDescInit::g_DataMapHolder
 b mstudioactivitymodifier_t_DataDescInit::g_DataMapHolder
 b mstudioaimatbone_t_DataDescInit::g_DataMapHolder
 b mstudioaimconstraint_t_DataDescInit::g_DataMapHolder
 b mstudioanim_valueptr_t_DataDescInit::g_DataMapHolder
 b mstudioanimblock_t_DataDescInit::g_DataMapHolder
 b mstudioanimdesc_t_DataDescInit::g_DataMapHolder
 b mstudioanimsections_t_DataDescInit::g_DataMapHolder
 b mstudioattachment_t_DataDescInit::g_DataMapHolder
 b mstudioautolayer_t_DataDescInit::g_DataMapHolder
 b mstudioaxisinterpbone_t_DataDescInit::g_DataMapHolder
 b mstudiobbox_t_DataDescInit::g_DataMapHolder
 b mstudiobodyparts_t_DataDescInit::g_DataMapHolder
 b mstudiobone_t_DataDescInit::g_DataMapHolder
 b mstudiobonecontroller_t_DataDescInit::g_DataMapHolder
 b mstudioboneflexdriver_t_DataDescInit::g_DataMapHolder
 b mstudioboneflexdrivercontrol_t_DataDescInit::g_DataMapHolder
 b mstudioboneweight_t_DataDescInit::g_DataMapHolder
 b mstudiocompressedikerror_t_DataDescInit::g_DataMapHolder
 b mstudioconstraintslave_t_DataDescInit::g_DataMapHolder
 b mstudioconstrainttarget_t_DataDescInit::g_DataMapHolder
 b mstudioevent_t_DataDescInit::g_DataMapHolder
 b mstudioeyeball_t_DataDescInit::g_DataMapHolder
 b mstudioflex_t_DataDescInit::g_DataMapHolder
 b mstudioflexcontroller_t_DataDescInit::g_DataMapHolder
 b mstudioflexcontrollerui_t_DataDescInit::g_DataMapHolder
 b mstudioflexdesc_t_DataDescInit::g_DataMapHolder
 b mstudioflexop_t_DataDescInit::g_DataMapHolder
 b mstudioflexrule_t_DataDescInit::g_DataMapHolder
 b mstudiohitboxset_t_DataDescInit::g_DataMapHolder
 b mstudioikchain_t_DataDescInit::g_DataMapHolder
 b mstudioikconstraint_t_DataDescInit::g_DataMapHolder
 b mstudioikerror_t_DataDescInit::g_DataMapHolder
 b mstudioiklink_t_DataDescInit::g_DataMapHolder
 b mstudioiklock_t_DataDescInit::g_DataMapHolder
 b mstudioikrule_t_DataDescInit::g_DataMapHolder
 b mstudiojigglebone_t_DataDescInit::g_DataMapHolder
 b mstudiolinearbone_t_DataDescInit::g_DataMapHolder
 b mstudiolocalhierarchy_t_DataDescInit::g_DataMapHolder
 b mstudiomesh_t_DataDescInit::g_DataMapHolder
 b mstudiomodel_t_DataDescInit::g_DataMapHolder
 b mstudiomodelgroup_t_DataDescInit::g_DataMapHolder
 b mstudiomouth_t_DataDescInit::g_DataMapHolder
 b mstudiomovement_t_DataDescInit::g_DataMapHolder
 b mstudioorientconstraint_t_DataDescInit::g_DataMapHolder
 b mstudioparentconstraint_t_DataDescInit::g_DataMapHolder
 b mstudiopointconstraint_t_DataDescInit::g_DataMapHolder
 b mstudioposeparamdesc_t_DataDescInit::g_DataMapHolder
 b mstudioquatinterpbone_t_DataDescInit::g_DataMapHolder
 b mstudioquatinterpinfo_t_DataDescInit::g_DataMapHolder
 b mstudioseqdesc_t_DataDescInit::g_DataMapHolder
 b mstudiosrcbonetransform_t_DataDescInit::g_DataMapHolder
 b mstudiotexture_t_DataDescInit::g_DataMapHolder
 b mstudiotwistbone_t_DataDescInit::g_DataMapHolder
 b mstudiotwistbonetarget_t_DataDescInit::g_DataMapHolder
 b mstudiovertanim_t_DataDescInit::g_DataMapHolder
 b mstudiovertanim_wrinkle_t_DataDescInit::g_DataMapHolder
 b mstudiovertex_t_DataDescInit::g_DataMapHolder
 b object_mutex
 b once_regsizes.7669
 b p4
 b phyheader_t_DataDescInit::g_DataMapHolder
 b physprops
 b quat_identity
 b r_rootlod
 b res_restrict_access
 b s_BreakSet
 b s_EmptyConVar
 b s_NoEscConversion
 b s_SIMDRandContexts
 b s_StringCharConversion
 b s_bBuiltBreakSet
 b s_bMathlibInitialized
 b s_bPrecachesRegistered
 b s_bRegistered
 b s_bResourceFCRegistered
 b s_bRunningWithDebugModules
 b s_mp_SortFlexData
 b s_nCVarFlag
 b s_nConnectionCount
 b s_nRandContextsInUse
 b s_nRegistrationCount
 b s_pConnectionRegistration
 b seen_objects
 b std::string::_Rep::_S_empty_rep_storage
 b studiodata_t::s_Allocator
 b studiohdr2_t_DataDescInit::g_DataMapHolder
 b studiohdr_t_DataDescInit::g_DataMapHolder
 b studiorender
 b subs.7497
 b terminator.7340
 b texgammatable
 b texturetolinear
 b unseen_objects
 b vec2_invalid
 b vec2_origin
 b vec3_angle
 b vec3_invalid
 b vec3_origin
 b vec4_invalid
 b vec4_origin
 b vertexFileFixup_t_DataDescInit::g_DataMapHolder
 b vertexFileHeader_t_DataDescInit::g_DataMapHolder
 cbrtf@@GLIBC_2.0
 chdir@@GLIBC_2.0
 cos@@GLIBC_2.0
 d CUtlSymbol::s_bAllowStaticSymbolTable
 d ConVarRef::Init(char const*, bool)::bFirst
 d DW.ref._ZTISt9exception
 d DW.ref.__gxx_personality_v0
 d KeyValues::s_pfGetStringForSymbol
 d KeyValues::s_pfGetSymbolForString
 d OptimizedModel::BodyPartHeader_t::m_DataMap
 d OptimizedModel::BoneStateChangeHeader_t::m_DataMap
 d OptimizedModel::FileHeader_t::m_DataMap
 d OptimizedModel::MaterialReplacementHeader_t::m_DataMap
 d OptimizedModel::MaterialReplacementListHeader_t::m_DataMap
 d OptimizedModel::MeshHeader_t::m_DataMap
 d OptimizedModel::ModelHeader_t::m_DataMap
 d OptimizedModel::ModelLODHeader_t::m_DataMap
 d OptimizedModel::StripGroupHeader_t::m_DataMap
 d OptimizedModel::StripHeader_t::m_DataMap
 d OptimizedModel::Vertex_t::m_DataMap
 d SplitScreenConVarRef::Init(char const*, bool)::bFirst
 d StudioByteSwap::g_bVerbose
 d StudioByteSwap::legacysurfaceheader_t::m_DataMap
 d StudioByteSwap::swapcompactsurfaceheader_t::m_DataMap
 d __CTOR_END__
 d __CTOR_LIST__
 d __DTOR_END__
 d __DTOR_LIST__
 d __JCR_END__
 d __JCR_LIST__
 d __cxxabiv1::__terminate_handler
 d __cxxabiv1::__unexpected_handler
 d __dso_handle
 d adds.7496
 d cplus_demangle_builtin_types
 d cplus_demangle_operators
 d datamap_t* DataMapInit<mstudio_frame_anim_t>(mstudio_frame_anim_t*)::dataDesc
 d datamap_t* DataMapInit<mstudio_meshvertexdata_t>(mstudio_meshvertexdata_t*)::dataDesc
 d datamap_t* DataMapInit<mstudio_modelvertexdata_t>(mstudio_modelvertexdata_t*)::dataDesc
 d datamap_t* DataMapInit<mstudio_rle_anim_t>(mstudio_rle_anim_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioactivitymodifier_t>(mstudioactivitymodifier_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioaimatbone_t>(mstudioaimatbone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioaimconstraint_t>(mstudioaimconstraint_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioanim_valueptr_t>(mstudioanim_valueptr_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioanimblock_t>(mstudioanimblock_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioanimdesc_t>(mstudioanimdesc_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioanimsections_t>(mstudioanimsections_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioattachment_t>(mstudioattachment_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioautolayer_t>(mstudioautolayer_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioaxisinterpbone_t>(mstudioaxisinterpbone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiobbox_t>(mstudiobbox_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiobodyparts_t>(mstudiobodyparts_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiobone_t>(mstudiobone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiobonecontroller_t>(mstudiobonecontroller_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioboneflexdriver_t>(mstudioboneflexdriver_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioboneflexdrivercontrol_t>(mstudioboneflexdrivercontrol_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioboneweight_t>(mstudioboneweight_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiocompressedikerror_t>(mstudiocompressedikerror_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioconstraintslave_t>(mstudioconstraintslave_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioconstrainttarget_t>(mstudioconstrainttarget_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioevent_t>(mstudioevent_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioeyeball_t>(mstudioeyeball_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflex_t>(mstudioflex_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflexcontroller_t>(mstudioflexcontroller_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflexcontrollerui_t>(mstudioflexcontrollerui_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflexdesc_t>(mstudioflexdesc_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflexop_t>(mstudioflexop_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioflexrule_t>(mstudioflexrule_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiohitboxset_t>(mstudiohitboxset_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioikchain_t>(mstudioikchain_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioikerror_t>(mstudioikerror_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioiklink_t>(mstudioiklink_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioiklock_t>(mstudioiklock_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioikrule_t>(mstudioikrule_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiojigglebone_t>(mstudiojigglebone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiolinearbone_t>(mstudiolinearbone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiolocalhierarchy_t>(mstudiolocalhierarchy_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiomesh_t>(mstudiomesh_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiomodel_t>(mstudiomodel_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiomodelgroup_t>(mstudiomodelgroup_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiomouth_t>(mstudiomouth_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiomovement_t>(mstudiomovement_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioorientconstraint_t>(mstudioorientconstraint_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioparentconstraint_t>(mstudioparentconstraint_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiopointconstraint_t>(mstudiopointconstraint_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioposeparamdesc_t>(mstudioposeparamdesc_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioquatinterpbone_t>(mstudioquatinterpbone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioquatinterpinfo_t>(mstudioquatinterpinfo_t*)::dataDesc
 d datamap_t* DataMapInit<mstudioseqdesc_t>(mstudioseqdesc_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiosrcbonetransform_t>(mstudiosrcbonetransform_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiotexture_t>(mstudiotexture_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiotwistbone_t>(mstudiotwistbone_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiotwistbonetarget_t>(mstudiotwistbonetarget_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiovertanim_t>(mstudiovertanim_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiovertanim_wrinkle_t>(mstudiovertanim_wrinkle_t*)::dataDesc
 d datamap_t* DataMapInit<mstudiovertex_t>(mstudiovertex_t*)::dataDesc
 d datamap_t* DataMapInit<phyheader_s>(phyheader_s*)::dataDesc
 d datamap_t* DataMapInit<studiohdr2_t>(studiohdr2_t*)::dataDesc
 d datamap_t* DataMapInit<studiohdr_t>(studiohdr_t*)::dataDesc
 d datamap_t* DataMapInit<vertexFileFixup_t>(vertexFileFixup_t*)::dataDesc
 d datamap_t* DataMapInit<vertexFileHeader_t>(vertexFileHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BodyPartHeader_t>(OptimizedModel::BodyPartHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BoneStateChangeHeader_t>(OptimizedModel::BoneStateChangeHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::FileHeader_t>(OptimizedModel::FileHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementHeader_t>(OptimizedModel::MaterialReplacementHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementListHeader_t>(OptimizedModel::MaterialReplacementListHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MeshHeader_t>(OptimizedModel::MeshHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelHeader_t>(OptimizedModel::ModelHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelLODHeader_t>(OptimizedModel::ModelLODHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripGroupHeader_t>(OptimizedModel::StripGroupHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripHeader_t>(OptimizedModel::StripHeader_t*)::dataDesc
 d datamap_t* OptimizedModel::DataMapInit<OptimizedModel::Vertex_t>(OptimizedModel::Vertex_t*)::dataDesc
 d datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::legacysurfaceheader_t>(StudioByteSwap::legacysurfaceheader_t*)::dataDesc
 d datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::swapcompactsurfaceheader_t>(StudioByteSwap::swapcompactsurfaceheader_t*)::dataDesc
 d g_ModelLookupIndex
 d g_PrintConVarFlags
 d g_aFadeData
 d g_pszModule
 d mstudio_frame_anim_t::m_DataMap
 d mstudio_meshvertexdata_t::m_DataMap
 d mstudio_modelvertexdata_t::m_DataMap
 d mstudio_rle_anim_t::m_DataMap
 d mstudioactivitymodifier_t::m_DataMap
 d mstudioaimatbone_t::m_DataMap
 d mstudioaimconstraint_t::m_DataMap
 d mstudioanim_valueptr_t::m_DataMap
 d mstudioanimblock_t::m_DataMap
 d mstudioanimdesc_t::m_DataMap
 d mstudioanimsections_t::m_DataMap
 d mstudioattachment_t::m_DataMap
 d mstudioautolayer_t::m_DataMap
 d mstudioaxisinterpbone_t::m_DataMap
 d mstudiobbox_t::m_DataMap
 d mstudiobodyparts_t::m_DataMap
 d mstudiobone_t::m_DataMap
 d mstudiobonecontroller_t::m_DataMap
 d mstudioboneflexdriver_t::m_DataMap
 d mstudioboneflexdrivercontrol_t::m_DataMap
 d mstudioboneweight_t::m_DataMap
 d mstudiocompressedikerror_t::m_DataMap
 d mstudioconstraintslave_t::m_DataMap
 d mstudioconstrainttarget_t::m_DataMap
 d mstudioevent_t::m_DataMap
 d mstudioeyeball_t::m_DataMap
 d mstudioflex_t::m_DataMap
 d mstudioflexcontroller_t::m_DataMap
 d mstudioflexcontrollerui_t::m_DataMap
 d mstudioflexdesc_t::m_DataMap
 d mstudioflexop_t::m_DataMap
 d mstudioflexrule_t::m_DataMap
 d mstudiohitboxset_t::m_DataMap
 d mstudioikchain_t::m_DataMap
 d mstudioikconstraint_t::m_DataMap
 d mstudioikerror_t::m_DataMap
 d mstudioiklink_t::m_DataMap
 d mstudioiklock_t::m_DataMap
 d mstudioikrule_t::m_DataMap
 d mstudiojigglebone_t::m_DataMap
 d mstudiolinearbone_t::m_DataMap
 d mstudiolocalhierarchy_t::m_DataMap
 d mstudiomesh_t::m_DataMap
 d mstudiomodel_t::m_DataMap
 d mstudiomodelgroup_t::m_DataMap
 d mstudiomouth_t::m_DataMap
 d mstudiomovement_t::m_DataMap
 d mstudioorientconstraint_t::m_DataMap
 d mstudioparentconstraint_t::m_DataMap
 d mstudiopointconstraint_t::m_DataMap
 d mstudioposeparamdesc_t::m_DataMap
 d mstudioquatinterpbone_t::m_DataMap
 d mstudioquatinterpinfo_t::m_DataMap
 d mstudioseqdesc_t::m_DataMap
 d mstudiosrcbonetransform_t::m_DataMap
 d mstudiotexture_t::m_DataMap
 d mstudiotwistbone_t::m_DataMap
 d mstudiotwistbonetarget_t::m_DataMap
 d mstudiovertanim_t::m_DataMap
 d mstudiovertanim_wrinkle_t::m_DataMap
 d mstudiovertex_t::m_DataMap
 d pfVectorNormalizeFast
 d phyheader_s::m_DataMap
 d power2_n
 d s_BackSlashMap
 d s_DefaultAccessor
 d s_LastFileLoadingFrom
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d standard_subs
 d studiohdr2_t::m_DataMap
 d studiohdr_t::m_DataMap
 d szCustomHeroTextures
 d szVertexLitGenericTextures
 d typeinfo for std::bad_alloc
 d typeinfo for std::bad_cast
 d typeinfo for std::bad_exception
 d typeinfo for std::bad_typeid
 d typeinfo for std::exception
 d typeinfo for std::type_info
 d vertexFileFixup_t::m_DataMap
 d vertexFileHeader_t::m_DataMap
 d vtable for std::bad_alloc
 d vtable for std::bad_cast
 d vtable for std::bad_exception
 d vtable for std::bad_typeid
 d vtable for std::exception
 d vtable for std::type_info
 dl_iterate_phdr@@GLIBC_2.2.4
 dlclose@@GLIBC_2.0
 dlerror@@GLIBC_2.0
 dlopen@@GLIBC_2.1
 dlsym@@GLIBC_2.0
 expf@@GLIBC_2.0
 fputc@@GLIBC_2.0
 fputs@@GLIBC_2.0
 free@@GLIBC_2.0
 g_VProfCurrentProfile
 g_nThreadID
 g_pMemAlloc
 getcwd@@GLIBC_2.0
 iconv@@GLIBC_2.1
 iconv_close@@GLIBC_2.1
 iconv_open@@GLIBC_2.1
 isalnum@@GLIBC_2.0
 iscntrl@@GLIBC_2.0
 isprint@@GLIBC_2.0
 iswalnum@@GLIBC_2.0
 iswspace@@GLIBC_2.0
 log@@GLIBC_2.0
 malloc@@GLIBC_2.0
 mbstowcs@@GLIBC_2.0
 memchr@@GLIBC_2.0
 memcmp@@GLIBC_2.0
 memcpy@@GLIBC_2.0
 memmove@@GLIBC_2.0
 memset@@GLIBC_2.0
 modf@@GLIBC_2.0
 pow@@GLIBC_2.0
 printf@@GLIBC_2.0
 pthread_cancel@@GLIBC_2.0
 pthread_cond_broadcast@@GLIBC_2.3.2
 pthread_cond_destroy@@GLIBC_2.3.2
 pthread_cond_signal@@GLIBC_2.3.2
 pthread_cond_wait@@GLIBC_2.3.2
 pthread_mutex_destroy@@GLIBC_2.0
 pthread_mutex_init@@GLIBC_2.0
 pthread_mutex_lock@@GLIBC_2.0
 pthread_mutex_unlock@@GLIBC_2.0
 pthread_mutexattr_init@@GLIBC_2.0
 pthread_mutexattr_settype@@GLIBC_2.1
 pthread_once@@GLIBC_2.0
 qsort@@GLIBC_2.0
 r Four_2ToThe21s
 r Four_2ToThe22s
 r Four_2ToThe23s
 r Four_2ToThe24s
 r Four_DegToRad
 r Four_Epsilons
 r Four_FLT_MAX
 r Four_Fours
 r Four_GammaToLinearCoefficients_A
 r Four_GammaToLinearCoefficients_B
 r Four_GammaToLinearCoefficients_C
 r Four_GammaToLinearCoefficients_D
 r Four_LinearToGammaCoefficients_A
 r Four_LinearToGammaCoefficients_B
 r Four_LinearToGammaCoefficients_C
 r Four_LinearToGammaCoefficients_D
 r Four_LinearToGammaCoefficients_E
 r Four_NegativeOnes
 r Four_Negative_FLT_MAX
 r Four_Ones
 r Four_Origin
 r Four_Point225s
 r Four_PointFives
 r Four_Thirds
 r Four_Threes
 r Four_TwoThirds
 r Four_Twos
 r Four_Zeros
 r MaterialToTexture
 r V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)::HEX
 r __FRAME_END__
 r g_SIMD_0123
 r g_SIMD_AllOnesMask
 r g_SIMD_ComponentMask
 r g_SIMD_EveryOtherMask
 r g_SIMD_Identity
 r g_SIMD_Low16BitsMask
 r g_SIMD_SkipTailMask
 r g_SIMD_clear_signmask
 r g_SIMD_clear_wmask
 r g_SIMD_lsbmask
 r g_SIMD_signmask
 r g_nRandomValues
 r g_pInterfaceGlobals
 r g_ppszTypes
 r nanmask
 r pszFlatTextures
 r s_ModelSwapperExtensions
 r s_hex
 r s_pResourceSystemName
 r s_pResourceTypeName
 r std::string::_Rep::_S_max_size
 r std::string::_Rep::_S_terminal
 r std::string::npos
 r typeinfo for (anonymous namespace)::future_error_category
 r typeinfo for (anonymous namespace)::generic_error_category
 r typeinfo for (anonymous namespace)::system_error_category
 r typeinfo for CBaseAppSystem<IDataCache>
 r typeinfo for CBaseAppSystem<IMDLCache>
 r typeinfo for CBaseAppSystem<IPrecacheSystem>
 r typeinfo for CBaseAppSystem<IResourceAccessControl>
 r typeinfo for CDataCache
 r typeinfo for CDataCacheSection
 r typeinfo for CDataCacheSectionFastFind
 r typeinfo for CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>
 r typeinfo for CDataManagerBase
 r typeinfo for CDefaultAccessor
 r typeinfo for CDefaultDataCacheClient
 r typeinfo for CDllDemandLoader
 r typeinfo for CEmptyConVar
 r typeinfo for CFmtStrN<256, false>
 r typeinfo for CKeyValuesDumpContextAsDevMsg
 r typeinfo for CMDLCache
 r typeinfo for CPrecacheSystem
 r typeinfo for CRefCountServiceBase<true, CRefMT>
 r typeinfo for CRefCounted<CRefCountServiceBase<true, CRefMT> >
 r typeinfo for CResourceAccessControl
 r typeinfo for CSplitScreenAddedConVar
 r typeinfo for CStudioVCollide
 r typeinfo for CTier0AppSystem<IDataCache>
 r typeinfo for CTier0AppSystem<IMDLCache>
 r typeinfo for CTier0AppSystem<IPrecacheSystem>
 r typeinfo for CTier0AppSystem<IResourceAccessControl>
 r typeinfo for CTier1AppSystem<IDataCache, 0>
 r typeinfo for CTier1AppSystem<IMDLCache, 0>
 r typeinfo for CTier1AppSystem<IPrecacheSystem, 0>
 r typeinfo for CTier1AppSystem<IResourceAccessControl, 0>
 r typeinfo for CTier2AppSystem<IDataCache, 0>
 r typeinfo for CTier2AppSystem<IMDLCache, 0>
 r typeinfo for CTier2AppSystem<IPrecacheSystem, 0>
 r typeinfo for CTier3AppSystem<IDataCache, 0>
 r typeinfo for CTier3AppSystem<IMDLCache, 0>
 r typeinfo for CUtlCStringConversion
 r typeinfo for CUtlCharConversion
 r typeinfo for CUtlNoEscConversion
 r typeinfo for ConCommand
 r typeinfo for ConCommandBase
 r typeinfo for ConVar
 r typeinfo for ConVar_ServerBounded
 r typeinfo for DataLinker::IBasicStream
 r typeinfo for DataLinker::ILinkStream
 r typeinfo for DataLinker::IStream
 r typeinfo for DataLinker::Stream
 r typeinfo for IAppSystem
 r typeinfo for IConCommandBaseAccessor
 r typeinfo for IConVar
 r typeinfo for IDataCache
 r typeinfo for IDataCacheClient
 r typeinfo for IDataCacheSection
 r typeinfo for IKeyValuesDumpContext
 r typeinfo for IKeyValuesDumpContextAsText
 r typeinfo for IMDLCache
 r typeinfo for IPrecacheSystem
 r typeinfo for IResourceAccessControl
 r typeinfo for IStudioDataCache
 r typeinfo for std::__future_base::_Result_base
 r typeinfo for std::__future_base::_State_base
 r typeinfo for std::bad_function_call
 r typeinfo for std::domain_error
 r typeinfo for std::error_category
 r typeinfo for std::future_error
 r typeinfo for std::invalid_argument
 r typeinfo for std::ios_base::failure
 r typeinfo for std::length_error
 r typeinfo for std::logic_error
 r typeinfo for std::out_of_range
 r typeinfo for std::overflow_error
 r typeinfo for std::range_error
 r typeinfo for std::regex_error
 r typeinfo for std::runtime_error
 r typeinfo for std::system_error
 r typeinfo for std::underflow_error
 r typeinfo name for (anonymous namespace)::future_error_category
 r typeinfo name for (anonymous namespace)::generic_error_category
 r typeinfo name for (anonymous namespace)::system_error_category
 r typeinfo name for CBaseAppSystem<IDataCache>
 r typeinfo name for CBaseAppSystem<IMDLCache>
 r typeinfo name for CBaseAppSystem<IPrecacheSystem>
 r typeinfo name for CBaseAppSystem<IResourceAccessControl>
 r typeinfo name for CDataCache
 r typeinfo name for CDataCacheSection
 r typeinfo name for CDataCacheSectionFastFind
 r typeinfo name for CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>
 r typeinfo name for CDataManagerBase
 r typeinfo name for CDefaultAccessor
 r typeinfo name for CDefaultDataCacheClient
 r typeinfo name for CDllDemandLoader
 r typeinfo name for CEmptyConVar
 r typeinfo name for CFmtStrN<256, false>
 r typeinfo name for CKeyValuesDumpContextAsDevMsg
 r typeinfo name for CMDLCache
 r typeinfo name for CPrecacheSystem
 r typeinfo name for CRefCountServiceBase<true, CRefMT>
 r typeinfo name for CRefCounted<CRefCountServiceBase<true, CRefMT> >
 r typeinfo name for CResourceAccessControl
 r typeinfo name for CSplitScreenAddedConVar
 r typeinfo name for CStudioVCollide
 r typeinfo name for CTier0AppSystem<IDataCache>
 r typeinfo name for CTier0AppSystem<IMDLCache>
 r typeinfo name for CTier0AppSystem<IPrecacheSystem>
 r typeinfo name for CTier0AppSystem<IResourceAccessControl>
 r typeinfo name for CTier1AppSystem<IDataCache, 0>
 r typeinfo name for CTier1AppSystem<IMDLCache, 0>
 r typeinfo name for CTier1AppSystem<IPrecacheSystem, 0>
 r typeinfo name for CTier1AppSystem<IResourceAccessControl, 0>
 r typeinfo name for CTier2AppSystem<IDataCache, 0>
 r typeinfo name for CTier2AppSystem<IMDLCache, 0>
 r typeinfo name for CTier2AppSystem<IPrecacheSystem, 0>
 r typeinfo name for CTier3AppSystem<IDataCache, 0>
 r typeinfo name for CTier3AppSystem<IMDLCache, 0>
 r typeinfo name for CUtlCStringConversion
 r typeinfo name for CUtlCharConversion
 r typeinfo name for CUtlNoEscConversion
 r typeinfo name for ConCommand
 r typeinfo name for ConCommandBase
 r typeinfo name for ConVar
 r typeinfo name for ConVar_ServerBounded
 r typeinfo name for DataLinker::IBasicStream
 r typeinfo name for DataLinker::ILinkStream
 r typeinfo name for DataLinker::IStream
 r typeinfo name for DataLinker::Stream
 r typeinfo name for IAppSystem
 r typeinfo name for IConCommandBaseAccessor
 r typeinfo name for IConVar
 r typeinfo name for IDataCache
 r typeinfo name for IDataCacheClient
 r typeinfo name for IDataCacheSection
 r typeinfo name for IKeyValuesDumpContext
 r typeinfo name for IKeyValuesDumpContextAsText
 r typeinfo name for IMDLCache
 r typeinfo name for IPrecacheSystem
 r typeinfo name for IResourceAccessControl
 r typeinfo name for IStudioDataCache
 r typeinfo name for std::__future_base::_Result_base
 r typeinfo name for std::__future_base::_State_base
 r typeinfo name for std::bad_alloc
 r typeinfo name for std::bad_cast
 r typeinfo name for std::bad_exception
 r typeinfo name for std::bad_function_call
 r typeinfo name for std::bad_typeid
 r typeinfo name for std::domain_error
 r typeinfo name for std::error_category
 r typeinfo name for std::exception
 r typeinfo name for std::future_error
 r typeinfo name for std::invalid_argument
 r typeinfo name for std::ios_base::failure
 r typeinfo name for std::length_error
 r typeinfo name for std::logic_error
 r typeinfo name for std::out_of_range
 r typeinfo name for std::overflow_error
 r typeinfo name for std::range_error
 r typeinfo name for std::regex_error
 r typeinfo name for std::runtime_error
 r typeinfo name for std::system_error
 r typeinfo name for std::type_info
 r typeinfo name for std::underflow_error
 r vtable for (anonymous namespace)::future_error_category
 r vtable for (anonymous namespace)::generic_error_category
 r vtable for (anonymous namespace)::system_error_category
 r vtable for CBaseAppSystem<IDataCache>
 r vtable for CBaseAppSystem<IMDLCache>
 r vtable for CBaseAppSystem<IPrecacheSystem>
 r vtable for CBaseAppSystem<IResourceAccessControl>
 r vtable for CDataCache
 r vtable for CDataCacheSection
 r vtable for CDataCacheSectionFastFind
 r vtable for CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>
 r vtable for CDataManagerBase
 r vtable for CDefaultAccessor
 r vtable for CDefaultDataCacheClient
 r vtable for CDllDemandLoader
 r vtable for CEmptyConVar
 r vtable for CFmtStrN<256, false>
 r vtable for CKeyValuesDumpContextAsDevMsg
 r vtable for CMDLCache
 r vtable for CPrecacheSystem
 r vtable for CRefCountServiceBase<true, CRefMT>
 r vtable for CRefCounted<CRefCountServiceBase<true, CRefMT> >
 r vtable for CResourceAccessControl
 r vtable for CSplitScreenAddedConVar
 r vtable for CStudioVCollide
 r vtable for CTier0AppSystem<IDataCache>
 r vtable for CTier0AppSystem<IMDLCache>
 r vtable for CTier0AppSystem<IPrecacheSystem>
 r vtable for CTier0AppSystem<IResourceAccessControl>
 r vtable for CTier1AppSystem<IDataCache, 0>
 r vtable for CTier1AppSystem<IMDLCache, 0>
 r vtable for CTier1AppSystem<IPrecacheSystem, 0>
 r vtable for CTier1AppSystem<IResourceAccessControl, 0>
 r vtable for CTier2AppSystem<IDataCache, 0>
 r vtable for CTier2AppSystem<IMDLCache, 0>
 r vtable for CTier2AppSystem<IPrecacheSystem, 0>
 r vtable for CTier3AppSystem<IDataCache, 0>
 r vtable for CTier3AppSystem<IMDLCache, 0>
 r vtable for CUtlCStringConversion
 r vtable for CUtlCharConversion
 r vtable for CUtlNoEscConversion
 r vtable for ConCommand
 r vtable for ConCommandBase
 r vtable for ConVar
 r vtable for DataLinker::IBasicStream
 r vtable for DataLinker::ILinkStream
 r vtable for DataLinker::IStream
 r vtable for DataLinker::Stream
 r vtable for IAppSystem
 r vtable for IConVar
 r vtable for IDataCache
 r vtable for IDataCacheClient
 r vtable for IDataCacheSection
 r vtable for IKeyValuesDumpContextAsText
 r vtable for IMDLCache
 r vtable for IPrecacheSystem
 r vtable for IResourceAccessControl
 r vtable for IStudioDataCache
 r vtable for std::__future_base::_Result_base
 r vtable for std::__future_base::_State_base
 r vtable for std::bad_function_call
 r vtable for std::domain_error
 r vtable for std::error_category
 r vtable for std::future_error
 r vtable for std::invalid_argument
 r vtable for std::ios_base::failure
 r vtable for std::length_error
 r vtable for std::logic_error
 r vtable for std::out_of_range
 r vtable for std::overflow_error
 r vtable for std::range_error
 r vtable for std::regex_error
 r vtable for std::runtime_error
 r vtable for std::system_error
 r vtable for std::underflow_error
 r wszCantBeginLine
 r wszCantEndLine
 rand@@GLIBC_2.0
 realloc@@GLIBC_2.0
 sin@@GLIBC_2.0
 sincosf@@GLIBC_2.1
 sinf@@GLIBC_2.0
 sprintf@@GLIBC_2.0
 sscanf@@GLIBC_2.0
 stderr@@GLIBC_2.0
 strcasecmp@@GLIBC_2.0
 strchr@@GLIBC_2.0
 strcmp@@GLIBC_2.0
 strcpy@@GLIBC_2.0
 strerror@@GLIBC_2.0
 strlen@@GLIBC_2.0
 strncat@@GLIBC_2.0
 strncmp@@GLIBC_2.0
 strncpy@@GLIBC_2.0
 strnlen@@GLIBC_2.0
 strstr@@GLIBC_2.0
 strtod@@GLIBC_2.0
 strtol@@GLIBC_2.0
 strtoll@@GLIBC_2.0
 strtoul@@GLIBC_2.0
 swprintf@@GLIBC_2.2
 swscanf@@GLIBC_2.2
 syscall@@GLIBC_2.0
 t (anonymous namespace)::future_error_category::message(int) const
 t (anonymous namespace)::future_error_category::name() const
 t (anonymous namespace)::future_error_category::~future_error_category()
 t (anonymous namespace)::generic_error_category::message(int) const
 t (anonymous namespace)::generic_error_category::name() const
 t (anonymous namespace)::generic_error_category::~generic_error_category()
 t (anonymous namespace)::system_error_category::message(int) const
 t (anonymous namespace)::system_error_category::name() const
 t (anonymous namespace)::system_error_category::~system_error_category()
 t .L12
 t .L155
 t .L156
 t .L157
 t .L158
 t .L159
 t .L160
 t .L161
 t .L162
 t .L163
 t .L164
 t .L165
 t .L166
 t .L167
 t .L168
 t .L169
 t .L17
 t .L19
 t .L20
 t .L214
 t .L215
 t .L216
 t .L217
 t .L218
 t .L219
 t .L220
 t .L221
 t .L222
 t .L223
 t .L224
 t .L225
 t .L226
 t .L227
 t .L228
 t .L229
 t .L23
 t .L230
 t .L24
 t .L244
 t .L25
 t .L26
 t .L271
 t .L272
 t .L273
 t .L274
 t .L275
 t .L28
 t .L29
 t .L32
 t .L327
 t .L328
 t .L329
 t .L33
 t .L330
 t .L331
 t .L34
 t .L35
 t .L43
 t .L45
 t .L46
 t .L47
 t .L48
 t .L49
 t .L50
 t .L51
 t .L52
 t .L53
 t .L54
 t .L542
 t .L543
 t .L544
 t .L545
 t .L546
 t .L547
 t .L549
 t .L55
 t .L550
 t .L551
 t .L552
 t .L553
 t .L554
 t .L555
 t .L556
 t .L557
 t .L558
 t .L559
 t .L56
 t .L560
 t .L561
 t .L562
 t .L563
 t .L564
 t .L565
 t .L566
 t .L567
 t .L568
 t .L569
 t .L57
 t .L570
 t .L571
 t .L572
 t .L573
 t .L574
 t .L575
 t .L576
 t .L577
 t .L579
 t .L58
 t .L581
 t .L582
 t .L583
 t .L584
 t .L585
 t .L586
 t .L587
 t .L588
 t .L589
 t .L59
 t .L590
 t .L591
 t .L6
 t .L60
 t .L61
 t .L62
 t .L63
 t .L64
 t .L65
 t .L66
 t .L663
 t .L664
 t .L665
 t .L666
 t .L667
 t .L67
 t .L68
 t .L683
 t .L69
 t .L7
 t .L70
 t .L700
 t .L71
 t .L711
 t .L712
 t .L713
 t .L714
 t .L715
 t .L716
 t .L717
 t .L718
 t .L719
 t .L720
 t .L721
 t .L722
 t .L723
 t .L8
 t .L9
 t AddFilesToList(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*, char const*, char const*)
 t AddPointToBounds(Vector const&, Vector&, Vector&)
 t AllocString(char const*, int)
 t AllocWString(wchar_t const*, int)
 t AngleDiff(float, float)
 t AngleDistance(float, float)
 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 t AngleIMatrix(QAngle const&, matrix3x4_t&)
 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 t AngleMatrix(QAngle const&, matrix3x4_t&)
 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
 t AngleNormalize(float)
 t AngleNormalizePositive(float)
 t AngleQuaternion(QAngle const&, Quaternion&)
 t AngleQuaternion(RadianEuler const&, Quaternion&)
 t AngleVectors(QAngle const&, Vector*)
 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 t AngleVectorsFLU(QAngle const&, Vector*, Vector*, Vector*)
 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
 t AnglesAreEqual(float, float, float)
 t AppendPrintf(char*, unsigned int, char const*, ...)
 t ApproachAngle(float, float, float)
 t AreBoundsValid(Vector const&, Vector const&)
 t AsianWordWrap::CanBeginLine(wchar_t)
 t AsianWordWrap::CanBreakAfter(wchar_t const*)
 t AsianWordWrap::CanBreakRepeated(wchar_t)
 t AsianWordWrap::CanEndLine(wchar_t)
 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
 t Bias(float, float)
 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
 t BuildGammaTable(float, float, float, int)
 t BuildTransformedBox(Vector*, Vector const&, Vector const&, matrix3x4_t const&)
 t CBaseAppSystem<IDataCache>::Connect(void* (*)(char const*, int*))
 t CBaseAppSystem<IDataCache>::Disconnect()
 t CBaseAppSystem<IDataCache>::GetDependencies()
 t CBaseAppSystem<IDataCache>::GetTier()
 t CBaseAppSystem<IDataCache>::Init()
 t CBaseAppSystem<IDataCache>::QueryInterface(char const*)
 t CBaseAppSystem<IDataCache>::Reconnect(void* (*)(char const*, int*), char const*)
 t CBaseAppSystem<IDataCache>::Shutdown()
 t CBaseAppSystem<IMDLCache>::Connect(void* (*)(char const*, int*))
 t CBaseAppSystem<IMDLCache>::Disconnect()
 t CBaseAppSystem<IMDLCache>::GetDependencies()
 t CBaseAppSystem<IMDLCache>::GetTier()
 t CBaseAppSystem<IMDLCache>::Init()
 t CBaseAppSystem<IMDLCache>::QueryInterface(char const*)
 t CBaseAppSystem<IMDLCache>::Reconnect(void* (*)(char const*, int*), char const*)
 t CBaseAppSystem<IMDLCache>::Shutdown()
 t CBaseAppSystem<IPrecacheSystem>::Connect(void* (*)(char const*, int*))
 t CBaseAppSystem<IPrecacheSystem>::Disconnect()
 t CBaseAppSystem<IPrecacheSystem>::GetDependencies()
 t CBaseAppSystem<IPrecacheSystem>::GetTier()
 t CBaseAppSystem<IPrecacheSystem>::Init()
 t CBaseAppSystem<IPrecacheSystem>::QueryInterface(char const*)
 t CBaseAppSystem<IPrecacheSystem>::Reconnect(void* (*)(char const*, int*), char const*)
 t CBaseAppSystem<IPrecacheSystem>::Shutdown()
 t CBaseAppSystem<IResourceAccessControl>::Connect(void* (*)(char const*, int*))
 t CBaseAppSystem<IResourceAccessControl>::Disconnect()
 t CBaseAppSystem<IResourceAccessControl>::GetDependencies()
 t CBaseAppSystem<IResourceAccessControl>::GetTier()
 t CBaseAppSystem<IResourceAccessControl>::Init()
 t CBaseAppSystem<IResourceAccessControl>::QueryInterface(char const*)
 t CBaseAppSystem<IResourceAccessControl>::Reconnect(void* (*)(char const*, int*), char const*)
 t CBaseAppSystem<IResourceAccessControl>::Shutdown()
 t CBaseFile::ReadFile(CUtlBuffer&)
 t CBaseFile::ReadLines(CUtlStringList&, int)
 t CBaseResourcePrecacher::RegisterAll()
 t CBoyerMooreSearch::CBoyerMooreSearch(unsigned char const*, int)
 t CBoyerMooreSearch::Search(unsigned char const*, int)
 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 t CCombinerMemoryWriter::AlignWrite(int)
 t CCombinerMemoryWriter::AlignWrite(int) [clone .constprop.17]
 t CCombinerMemoryWriter::AlignWrite(int) [clone .part.14]
 t CCombinerMemoryWriter::AllocWrite(int)
 t CCombinerMemoryWriter::CCombinerMemoryWriter()
 t CCombinerMemoryWriter::Init()
 t CCombinerMemoryWriter::InitWriteArea(int, char*)
 t CCombinerMemoryWriter::SetWriteArea(int)
 t CCombinerMemoryWriter::WriteBuffer(void const*, int)
 t CCombinerMemoryWriter::WriteBufferWithOffset(void const*, int, int&)
 t CCombinerMemoryWriter::WriteOffset(int&)
 t CCombinerMemoryWriter::WriteOffset(int&, void*)
 t CCombinerMemoryWriter::WriteOffset(short&, void*)
 t CCombinerMemoryWriter::WriteString(char const*)
 t CCombinerMemoryWriter::WriteText(char const*)
 t CCombinerMemoryWriter::~CCombinerMemoryWriter()
 t CCommand::CCommand()
 t CCommand::CCommand(int, char const**, cmd_source_t)
 t CCommand::DefaultBreakSet()
 t CCommand::FindArg(char const*) const
 t CCommand::FindArgInt(char const*, int) const
 t CCommand::Reset()
 t CCommand::Tokenize(char const*, cmd_source_t, characterset_t*)
 t CCountedStringPoolBase<unsigned int>::RestoreFromBuffer(CUtlBuffer&)
 t CCountedStringPoolBase<unsigned short>::RestoreFromBuffer(CUtlBuffer&)
 t CDataCache::AddSection(IDataCacheClient*, char const*, DataCacheLimits_t const&, bool)
 t CDataCache::CDataCache()
 t CDataCache::Connect(void* (*)(char const*, int*))
 t CDataCache::Disconnect()
 t CDataCache::EnsureCapacity(unsigned int)
 t CDataCache::FindSection(char const*)
 t CDataCache::FindSectionIndex(char const*)
 t CDataCache::Flush(bool, bool)
 t CDataCache::GetSectionCount()
 t CDataCache::GetSectionName(int)
 t CDataCache::GetStatus(DataCacheStatus_t*, DataCacheLimits_t*)
 t CDataCache::Init()
 t CDataCache::OutputItemReport(memhandle_t__*, void*)
 t CDataCache::OutputReport(DataCacheReportType_t, char const*)
 t CDataCache::Purge(unsigned int)
 t CDataCache::QueryInterface(char const*)
 t CDataCache::RemoveSection(char const*, bool)
 t CDataCache::SetOptions(unsigned int)
 t CDataCache::SetSectionLimits(char const*, DataCacheLimits_t const&)
 t CDataCache::SetSize(int)
 t CDataCache::Shutdown()
 t CDataCache::SortMemhandlesBySizeLessFunc(memhandle_t__* const&, memhandle_t__* const&)
 t CDataCache::~CDataCache()
 t CDataCacheSection::Add(unsigned int, void const*, unsigned int, memhandle_t__**)
 t CDataCacheSection::AddEx(unsigned int, void const*, unsigned int, unsigned int, memhandle_t__**)
 t CDataCacheSection::Age(memhandle_t__*)
 t CDataCacheSection::BeginFrameLocking()
 t CDataCacheSection::BreakLock(memhandle_t__*)
 t CDataCacheSection::CDataCacheSection(CDataCache*, IDataCacheClient*, char const*)
 t CDataCacheSection::DiscardItem(memhandle_t__*, DataCacheNotificationType_t)
 t CDataCacheSection::DiscardItemData(DataCacheItem_t*, DataCacheNotificationType_t)
 t CDataCacheSection::DoFind(unsigned int)
 t CDataCacheSection::EndFrameLocking()
 t CDataCacheSection::EnsureCapacity(unsigned int, unsigned int)
 t CDataCacheSection::Find(unsigned int)
 t CDataCacheSection::Flush(bool, bool)
 t CDataCacheSection::ForceFlushDebug(bool)
 t CDataCacheSection::FrameLock(memhandle_t__*)
 t CDataCacheSection::Get(memhandle_t__*, bool)
 t CDataCacheSection::GetAndLockMultiple(void**, int, memhandle_t__**)
 t CDataCacheSection::GetFirstLockedItem()
 t CDataCacheSection::GetFirstUnlockedItem()
 t CDataCacheSection::GetFrameUnlockCounterPtr()
 t CDataCacheSection::GetLimits()
 t CDataCacheSection::GetLockCount(memhandle_t__*)
 t CDataCacheSection::GetName()
 t CDataCacheSection::GetNextItem(memhandle_t__*)
 t CDataCacheSection::GetNoTouch(memhandle_t__*, bool)
 t CDataCacheSection::GetOptions()
 t CDataCacheSection::GetSharedCache()
 t CDataCacheSection::GetStatus(DataCacheStatus_t*, DataCacheLimits_t*)
 t CDataCacheSection::IsFrameLocking()
 t CDataCacheSection::IsPresent(memhandle_t__*)
 t CDataCacheSection::Lock(memhandle_t__*)
 t CDataCacheSection::LockMutex()
 t CDataCacheSection::OnAdd(unsigned int, memhandle_t__*)
 t CDataCacheSection::OnRemove(unsigned int)
 t CDataCacheSection::OutputReport(DataCacheReportType_t)
 t CDataCacheSection::Purge(unsigned int)
 t CDataCacheSection::PurgeItems(unsigned int)
 t CDataCacheSection::Remove(memhandle_t__*, void const**, unsigned int*, bool)
 t CDataCacheSection::SetLimits(DataCacheLimits_t const&)
 t CDataCacheSection::SetOptions(unsigned int)
 t CDataCacheSection::Touch(memhandle_t__*)
 t CDataCacheSection::Unlock(memhandle_t__*)
 t CDataCacheSection::UnlockMutex()
 t CDataCacheSection::UpdateSize(memhandle_t__*, unsigned int)
 t CDataCacheSection::~CDataCacheSection()
 t CDataCacheSectionFastFind::DoFind(unsigned int)
 t CDataCacheSectionFastFind::OnAdd(unsigned int, memhandle_t__*)
 t CDataCacheSectionFastFind::OnRemove(unsigned int)
 t CDataCacheSectionFastFind::~CDataCacheSectionFastFind()
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::DestroyResourceStorage(void*)
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::GetRealSize(void*)
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::Lock()
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::TryLock()
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::Unlock()
 t CDataManager<DataCacheItem_t, DataCacheItemData_t, DataCacheItem_t*, CThreadFastMutex>::~CDataManager()
 t CDataManagerBase::AvailableSize()
 t CDataManagerBase::BreakAllLocks()
 t CDataManagerBase::BreakLock(memhandle_t__*)
 t CDataManagerBase::CDataManagerBase(unsigned int)
 t CDataManagerBase::CreateHandle(bool)
 t CDataManagerBase::DestroyResource(memhandle_t__*)
 t CDataManagerBase::EnsureCapacity(unsigned int)
 t CDataManagerBase::FlushAll()
 t CDataManagerBase::FlushAllUnlocked()
 t CDataManagerBase::FlushToTargetSize()
 t CDataManagerBase::GetForFreeByIndex(unsigned short)
 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
 t CDataManagerBase::Lock()
 t CDataManagerBase::LockResource(memhandle_t__*)
 t CDataManagerBase::LockResourceReturnCount(int*, memhandle_t__*)
 t CDataManagerBase::MarkAsStale(memhandle_t__*)
 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
 t CDataManagerBase::Purge(unsigned int)
 t CDataManagerBase::SetTargetSize(unsigned int)
 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
 t CDataManagerBase::TargetSize()
 t CDataManagerBase::ToHandle(unsigned short)
 t CDataManagerBase::TouchByIndex(unsigned short)
 t CDataManagerBase::TouchResource(memhandle_t__*)
 t CDataManagerBase::TryLock()
 t CDataManagerBase::Unlock()
 t CDataManagerBase::UnlockResource(memhandle_t__*)
 t CDataManagerBase::UsedSize()
 t CDataManagerBase::~CDataManagerBase()
 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 t CDefOps<int>::LessFunc(int const&, int const&)
 t CDefOps<studiohdr_t const*>::LessFunc(studiohdr_t const* const&, studiohdr_t const* const&)
 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 t CDefaultDataCacheClient::GetItemName(unsigned int, void const*, char*, unsigned int)
 t CDefaultDataCacheClient::HandleCacheNotification(DataCacheNotification_t const&)
 t CDefaultDataCacheClient::~CDefaultDataCacheClient()
 t CDllDemandLoader::CDllDemandLoader(char const*)
 t CDllDemandLoader::GetFactory()
 t CDllDemandLoader::Unload()
 t CDllDemandLoader::~CDllDemandLoader()
 t CEmptyConVar::GetName() const
 t CEmptyConVar::IsFlagSet(int) const
 t CEmptyConVar::SetValue(char const*)
 t CEmptyConVar::SetValue(float)
 t CEmptyConVar::SetValue(int)
 t CEmptyConVar::~CEmptyConVar()
 t CExpressionEvaluator::AllocateNode()
 t CExpressionEvaluator::BuildExpression()
 t CExpressionEvaluator::CExpressionEvaluator()
 t CExpressionEvaluator::Evaluate(bool&, char const*, bool (*)(char const*), void (*)(char const*))
 t CExpressionEvaluator::FreeNode(ExprNode*)
 t CExpressionEvaluator::FreeTree(ExprNode*&)
 t CExpressionEvaluator::GetNextToken()
 t CExpressionEvaluator::IsConditional(bool&, char)
 t CExpressionEvaluator::IsIdentifierOrConstant(char)
 t CExpressionEvaluator::IsNotOp(char)
 t CExpressionEvaluator::MakeExprNode(ExprNode*&, char, Kind, ExprNode*, ExprNode*)
 t CExpressionEvaluator::MakeExpression(ExprNode*&)
 t CExpressionEvaluator::MakeFactor(ExprNode*&)
 t CExpressionEvaluator::MakeTerm(ExprNode*&)
 t CExpressionEvaluator::SimplifyNode(ExprNode*&)
 t CExpressionEvaluator::~CExpressionEvaluator()
 t CFixedBudgetMemoryPool<33792u, 530>::~CFixedBudgetMemoryPool()
 t CFmtStrN<256, false>::CFmtStrN(char const*, ...)
 t CFmtStrN<256, false>::InitQuietTruncation()
 t CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)
 t CKeyValuesDumpContextAsDevMsg::KvWriteText(char const*)
 t CKeyValuesTokenReader::CKeyValuesTokenReader(KeyValues*, CUtlBuffer&)
 t CKeyValuesTokenReader::ReadToken(bool&, bool&)
 t CKeyValuesTokenReader::SeekBackOneToken()
 t CMDLCache::AddRef(unsigned short)
 t CMDLCache::AllocData(MDLCacheDataType_t, int)
 t CMDLCache::AllocateAnimBlocks(studiodata_t*, int)
 t CMDLCache::AllocateAutoplaySequences(studiodata_t*, int)
 t CMDLCache::AllocateVirtualModel(unsigned short)
 t CMDLCache::BeginCoarseLock()
 t CMDLCache::BeginLock()
 t CMDLCache::BeginMapLoad()
 t CMDLCache::BreakFrameLock(bool, bool, bool)
 t CMDLCache::BuildAndCacheVertexData(studiohdr_t*, CMDLCacheData&)
 t CMDLCache::BuildHardwareData(unsigned short, studiodata_t*, studiohdr_t*, CMDLCacheData&)
 t CMDLCache::CMDLCache()
 t CMDLCache::CacheData(memhandle_t__**, void*, int, char const*, MDLCacheDataType_t, unsigned int)
 t CMDLCache::CacheVertexData(studiohdr_t*)
 t CMDLCache::CheckCombinerFlagChanges(int)
 t CMDLCache::CheckData(memhandle_t__*, MDLCacheDataType_t)
 t CMDLCache::CheckDataNoTouch(memhandle_t__*, MDLCacheDataType_t)
 t CMDLCache::ClearAsync(unsigned short, MDLCacheDataType_t, int, bool)
 t CMDLCache::ClearCombinerFlags(unsigned int)
 t CMDLCache::CombinerThread()
 t CMDLCache::Connect(void* (*)(char const*, int*))
 t CMDLCache::ConvertFlexData(studiohdr_t*)
 t CMDLCache::CreateCombinedModel(char const*)
 t CMDLCache::CreateCombinedModel(unsigned short)
 t CMDLCache::CreateNullVertexes(vertexFileHeader_t*, studiohdr_t const*, int*)
 t CMDLCache::CreateThinVertexes(vertexFileHeader_t*, studiohdr_t const*, int*)
 t CMDLCache::DebugCombinerInfo()
 t CMDLCache::DestroyVCollide(studiodata_t*)
 t CMDLCache::DisableFileNotFoundWarnings()
 t CMDLCache::DisableVCollideLoad()
 t CMDLCache::Disconnect()
 t CMDLCache::DumpDictionaryState()
 t CMDLCache::EnableFileNotFoundWarnings()
 t CMDLCache::EnableVCollideLoad()
 t CMDLCache::EndCoarseLock()
 t CMDLCache::EndLock()
 t CMDLCache::EndMapLoad()
 t CMDLCache::FindMDL(char const*)
 t CMDLCache::FinishCombinedModel(unsigned short, void (*)(void*, unsigned short, unsigned short, SCombinedResults&), void*)
 t CMDLCache::FinishPendingLoads()
 t CMDLCache::Flush(MDLCacheFlush_t)
 t CMDLCache::Flush(studiodata_t*, MDLCacheFlush_t)
 t CMDLCache::Flush(unsigned short, int)
 t CMDLCache::FlushImmediate(studiodata_t*, MDLCacheFlush_t)
 t CMDLCache::FreeAnimBlocks(studiodata_t*)
 t CMDLCache::FreeAutoplaySequences(studiodata_t*)
 t CMDLCache::FreeCombinedGeneratedData(studiodata_t*)
 t CMDLCache::FreeData(MDLCacheDataType_t, void*)
 t CMDLCache::FreeVirtualModel(studiodata_t*)
 t CMDLCache::GetActualModelName(unsigned short)
 t CMDLCache::GetAnimBlock(unsigned short, int, bool)
 t CMDLCache::GetAsyncLoad(MDLCacheDataType_t)
 t CMDLCache::GetAutoplayList(unsigned short, unsigned short**)
 t CMDLCache::GetCacheSection(MDLCacheDataType_t)
 t CMDLCache::GetCombinedData(unsigned short)
 t CMDLCache::GetCombinedInternalAsset(ECombinedAsset, char const*, int*)
 t CMDLCache::GetCombinedMaterialKV(unsigned short, int)
 t CMDLCache::GetCombinedSubModelFilename(unsigned short, int, char*, int)
 t CMDLCache::GetDependencies()
 t CMDLCache::GetFrameUnlockCounterPtr(MDLCacheDataType_t)
 t CMDLCache::GetFrameUnlockCounterPtrOLD()
 t CMDLCache::GetHardwareData(unsigned short)
 t CMDLCache::GetItemName(unsigned int, void const*, char*, unsigned int)
 t CMDLCache::GetModelName(unsigned short)
 t CMDLCache::GetNumCombinedSubModels(unsigned short)
 t CMDLCache::GetRef(unsigned short)
 t CMDLCache::GetStudioHdr(unsigned short)
 t CMDLCache::GetTier()
 t CMDLCache::GetUserData(unsigned short)
 t CMDLCache::GetVCollide(unsigned short)
 t CMDLCache::GetVCollideEx(unsigned short, bool)
 t CMDLCache::GetVCollideSize(unsigned short, int*)
 t CMDLCache::GetVTXExtension()
 t CMDLCache::GetVertexData(unsigned short)
 t CMDLCache::GetVirtualModel(unsigned short)
 t CMDLCache::GetVirtualModelFast(studiohdr_t const*, unsigned short)
 t CMDLCache::HandleCacheNotification(DataCacheNotification_t const&)
 t CMDLCache::HasAnimBlockBeenPreloaded(unsigned short, int)
 t CMDLCache::Init()
 t CMDLCache::InitCombiner()
 t CMDLCache::InitPreloadData(bool)
 t CMDLCache::InitStudioData(unsigned short)
 t CMDLCache::IsCombinedModel(unsigned short)
 t CMDLCache::IsCombinedPlaceholder(unsigned short)
 t CMDLCache::IsDataLoaded(unsigned short, MDLCacheDataType_t)
 t CMDLCache::IsErrorModel(unsigned short)
 t CMDLCache::IsOverBudget(unsigned short)
 t CMDLCache::LoadData(char const*, char const*, void*, int, int, bool, FSAsyncControl_t__**, unsigned short)
 t CMDLCache::LoadVertexData(studiohdr_t*)
 t CMDLCache::LockStudioHdr(unsigned short)
 t CMDLCache::MarkAsLoaded(unsigned short)
 t CMDLCache::MarkFrame()
 t CMDLCache::OnAsyncHardwareDataComplete(ModelParts_t::BufferType_t, ModelParts_t*, void*, int, FSAsyncStatus_t)
 t CMDLCache::PreloadModel(unsigned short)
 t CMDLCache::ProcessDataIntoCache(unsigned short, CMDLCacheData&, int)
 t CMDLCache::ProcessPendingAsync(int)
 t CMDLCache::ProcessPendingAsyncs(MDLCacheDataType_t)
 t CMDLCache::ProcessPendingHardwareRestore()
 t CMDLCache::ProcessQueuedData(ModelParts_t*)
 t CMDLCache::QueryInterface(char const*)
 t CMDLCache::QueuedLoaderCallback_MDL(void*, void*, void const*, int, LoaderError_t)
 t CMDLCache::ReadFileNative(char*, char const*, CUtlBuffer&, int)
 t CMDLCache::ReadMDLFile(unsigned short, char const*, CMDLCacheData&)
 t CMDLCache::Reconnect(void* (*)(char const*, int*), char const*)
 t CMDLCache::Release(unsigned short)
 t CMDLCache::ReleaseAnimBlockAllocator()
 t CMDLCache::ReleaseMaterialSystemObjects(int)
 t CMDLCache::ReloadVCollide(unsigned short)
 t CMDLCache::ResetErrorModelStatus(unsigned short)
 t CMDLCache::RestoreFrameLock()
 t CMDLCache::RestoreHardwareData(unsigned short, FSAsyncControl_t__**, FSAsyncControl_t__**)
 t CMDLCache::RestoreMaterialSystemObjects(int)
 t CMDLCache::SetAsyncLoad(MDLCacheDataType_t, bool)
 t CMDLCache::SetCacheNotify(IMDLCacheNotify*)
 t CMDLCache::SetCombineModels(unsigned short, CUtlVector<SCombinerModelInput_t, CUtlMemory<SCombinerModelInput_t, int> > const&)
 t CMDLCache::SetCombinerFlags(unsigned int)
 t CMDLCache::SetUserData(unsigned short, void*)
 t CMDLCache::Shutdown()
 t CMDLCache::ShutdownCombiner()
 t CMDLCache::ShutdownPreloadData()
 t CMDLCache::ShutdownStudioData(unsigned short, bool)
 t CMDLCache::StaticCombinerThread(void*)
 t CMDLCache::TouchAllData(unsigned short)
 t CMDLCache::UncacheData(memhandle_t__*, MDLCacheDataType_t, bool)
 t CMDLCache::UnloadHardwareData(studiodata_t*)
 t CMDLCache::UnloadQueuedHardwareData()
 t CMDLCache::UnlockStudioHdr(unsigned short)
 t CMDLCache::UnserializeAllVirtualModelsAndAnimBlocks(unsigned short)
 t CMDLCache::UnserializeAnimBlock(unsigned short, bool, int)
 t CMDLCache::UnserializeCombinedHardwareData(unsigned short)
 t CMDLCache::UnserializeHardwareData(unsigned short, bool)
 t CMDLCache::UnserializeMDL(unsigned short, CMDLCacheData&)
 t CMDLCache::UnserializeVCollide(unsigned short, bool, bool)
 t CMDLCache::UpdateCombiner()
 t CMDLCache::UpdateOrCreate(studiohdr_t*, char const*, char*, int, char const*, bool)
 t CMDLCache::VerifyHeaders(studiohdr_t*)
 t CMDLCache::~CMDLCache()
 t CMDLCacheData::Purge()
 t CMemoryPoolMT::Free(void*)
 t CMemoryPoolMT::~CMemoryPoolMT()
 t CModelCombine::AddMaterialToTextureCombiner(int, int, int)
 t CModelCombine::AddToStringTable(void*, int*, char const*)
 t CModelCombine::BeginStringTable()
 t CModelCombine::BoneNameCompare(void const*, void const*)
 t CModelCombine::CModelCombine()
 t CModelCombine::CalcVTXInfo()
 t CModelCombine::CombineMDL(bool)
 t CModelCombine::CombineMDL_Anims()
 t CModelCombine::CombineMDL_AssignMeshIDs()
 t CModelCombine::CombineMDL_BoneFlexDrivers()
 t CModelCombine::CombineMDL_BoneTransforms()
 t CModelCombine::CombineMDL_Bones()
 t CModelCombine::CombineMDL_KeyValues()
 t CModelCombine::CombineMDL_Model()
 t CModelCombine::CombineMDL_PreintStrings()
 t CModelCombine::CombineMDL_SequenceInfo()
 t CModelCombine::CombineMDL_Textures()
 t CModelCombine::CombineTextures()
 t CModelCombine::CombineVTX()
 t CModelCombine::CombineVVD()
 t CModelCombine::CombineVVD_OffsetVerts()
 t CModelCombine::DetermineMasterBoneList()
 t CModelCombine::Init(SCombinedStudioData*)
 t CModelCombine::MergeStripGroup(int, OptimizedModel::StripGroupHeader_t*, int, OptimizedModel::StripGroupHeader_t*)
 t CModelCombine::Resolve()
 t CModelCombine::VerifyField(int, char const*)
 t CModelCombine::VerifyField2(int, char const*)
 t CModelCombine::VerifyOffset(void*, char const*, void*)
 t CModelCombine::WriteAnimation(mstudioanimdesc_t*, void*, int)
 t CModelCombine::WriteBodyPart(int)
 t CModelCombine::WriteBoneAttachments()
 t CModelCombine::WriteBoneConstraints()
 t CModelCombine::WriteBoneProc(int, int, int)
 t CModelCombine::WriteBoneQuatInterp()
 t CModelCombine::WriteBoneTable()
 t CModelCombine::WriteBoneTwist()
 t CModelCombine::WriteHitBoxes()
 t CModelCombine::WriteMeshes(int, int, OptimizedModel::ModelLODHeader_t*, OptimizedModel::ModelLODHeader_t*)
 t CModelCombine::WriteModel(int)
 t CModelCombine::WriteModel(int, OptimizedModel::BodyPartHeader_t*, OptimizedModel::BodyPartHeader_t*)
 t CModelCombine::WriteModelLOD(int, OptimizedModel::ModelHeader_t*, OptimizedModel::ModelHeader_t*)
 t CModelCombine::WriteStringTable()
 t CModelCombine::WriteStrip(OptimizedModel::StripGroupHeader_t*, int, OptimizedModel::StripGroupHeader_t*, OptimizedModel::StripHeader_t*)
 t CModelCombine::WriteStripGroup(int, int, unsigned char, OptimizedModel::MeshHeader_t*)
 t CModelCombine::~CModelCombine()
 t CModelLookupContext::CModelLookupContext(int, studiohdr_t const*)
 t CModelLookupContext::~CModelLookupContext()
 t CModelSwapper::ModelSubstitution_t::AreEqual(CModelSwapper::ModelSubstitution_t const&, CModelSwapper::ModelSubstitution_t const&)
 t CModelSwapper::ModelSubstitution_t::Hash(CModelSwapper::ModelSubstitution_t const&)
 t CModelSwapper::~CModelSwapper()
 t CPrecacheSystem::CPrecacheSystem()
 t CPrecacheSystem::Cache(IPrecacheHandler*, PrecacheSystem_t, char const*, bool, ResourceList_t__*, bool)
 t CPrecacheSystem::EndLimitedResourceAccess()
 t CPrecacheSystem::LimitResourceAccess(PrecacheSystem_t, char const*)
 t CPrecacheSystem::Register(IResourcePrecacher*, PrecacheSystem_t)
 t CPrecacheSystem::UncacheAll(IPrecacheHandler*)
 t CPrecacheSystem::~CPrecacheSystem()
 t CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
 t CRefCountServiceBase<true, CRefMT>::~CRefCountServiceBase()
 t CRefCounted<CRefCountServiceBase<true, CRefMT> >::~CRefCounted()
 t CResourceAccessControl::AddResource(ResourceList_t__*, ResourceTypeOld_t, char const*)
 t CResourceAccessControl::AddResource(ResourceList_t__*, ResourceTypeOld_t, char const*) [clone .part.21]
 t CResourceAccessControl::CResourceAccessControl()
 t CResourceAccessControl::ContainsResource(ResourceList_t__*, ResourceTypeOld_t, char const*)
 t CResourceAccessControl::CreateResourceList(char const*)
 t CResourceAccessControl::DestroyAllResourceLists()
 t CResourceAccessControl::FindOrAddCurrentThreadID()
 t CResourceAccessControl::FixupResourceName(char const*, char*, int)
 t CResourceAccessControl::IsAccessAllowed(ResourceTypeOld_t, char const*)
 t CResourceAccessControl::LimitAccess(ResourceList_t__*)
 t CResourceAccessControl::Shutdown()
 t CResourceAccessControl::~CResourceAccessControl()
 t CSchemaClassBindingBase::GetIntrospection() const
 t CSchemaClassBindingBase::Install()
 t CSimpleTexturePacker::AddTexture(int, int, int)
 t CSimpleTexturePacker::BruteIterate()
 t CSimpleTexturePacker::CSimpleTexturePacker()
 t CSimpleTexturePacker::FindOpenSpace(CSimpleTexturePacker::STextureInfo*)
 t CSimpleTexturePacker::GetTextureLocation(int, int&, int&)
 t CSimpleTexturePacker::GetTextureSize(int, int&, int&)
 t CSimpleTexturePacker::Init(int, int)
 t CSimpleTexturePacker::IterateTextures()
 t CSimpleTexturePacker::Reset()
 t CSimpleTexturePacker::Resolve()
 t CSimpleTexturePacker::ResolveBrute()
 t CSimpleTexturePacker::TextureSizeCompare(void const*, void const*)
 t CSplitScreenAddedConVar::GetBaseName() const
 t CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
 t CStudioHdr::CActivityToSequenceMapping::FindMapping(CStudioHdr const*)
 t CStudioHdr::CActivityToSequenceMapping::GetSequences(int, int*, int*)
 t CStudioHdr::CActivityToSequenceMapping::Initialize(CStudioHdr const*)
 t CStudioHdr::CActivityToSequenceMapping::NumSequencesForActivity(int)
 t CStudioHdr::CActivityToSequenceMapping::Reinitialize(CStudioHdr*)
 t CStudioHdr::CActivityToSequenceMapping::ReleaseMapping(CStudioHdr::CActivityToSequenceMapping*)
 t CStudioHdr::CActivityToSequenceMapping::ResetMappings()
 t CStudioHdr::CActivityToSequenceMapping::SetValidation(CStudioHdr const*)
 t CStudioHdr::CActivityToSequenceMapping::ValidateAgainst(CStudioHdr const*)
 t CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
 t CStudioHdr::CStudioHdr()
 t CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
 t CStudioHdr::EntryNode(int)
 t CStudioHdr::ExitNode(int)
 t CStudioHdr::FreeSoftbody()
 t CStudioHdr::GetActivityListVersion()
 t CStudioHdr::GetAttachmentBone(int)
 t CStudioHdr::GetEventListVersion()
 t CStudioHdr::GetNumAttachments() const
 t CStudioHdr::GetNumIKAutoplayLocks() const
 t CStudioHdr::GetNumPoseParameters() const
 t CStudioHdr::GetNumSeq_Internal() const
 t CStudioHdr::GetSharedPoseParameter(int, int) const
 t CStudioHdr::GetTransition(int, int) const
 t CStudioHdr::GroupStudioHdr(int)
 t CStudioHdr::Init(studiohdr_t const*, IMDLCache*)
 t CStudioHdr::InitSoftbody(CSoftbodyEnvironment*)
 t CStudioHdr::LookupSequence(char const*)
 t CStudioHdr::RemapAnimBone(int, int) const
 t CStudioHdr::RemapSeqBone(int, int) const
 t CStudioHdr::ResetVModel(virtualmodel_t const*) const
 t CStudioHdr::RunFlexRules(float const*, float*)
 t CStudioHdr::RunFlexRulesNew(float const*, float*)
 t CStudioHdr::RunFlexRulesOld(float const*, float*)
 t CStudioHdr::SequencesAvailable() const
 t CStudioHdr::SetActivityListVersion(int)
 t CStudioHdr::SetAttachmentBone(int, int)
 t CStudioHdr::SetEventListVersion(int)
 t CStudioHdr::Term()
 t CStudioHdr::clearBoneFlags(int, int)
 t CStudioHdr::iRelativeAnim_Internal(int, int) const
 t CStudioHdr::iRelativeSeq(int, int) const
 t CStudioHdr::pAnimStudioHdr(int)
 t CStudioHdr::pAnimdesc_Internal(int)
 t CStudioHdr::pAttachment(int)
 t CStudioHdr::pIKAutoplayLock(int)
 t CStudioHdr::pPoseParameter(int)
 t CStudioHdr::pSeqStudioHdr(int)
 t CStudioHdr::pSeqdesc_Internal(int)
 t CStudioHdr::pszNodeName(int)
 t CStudioHdr::setBoneFlags(int, int)
 t CStudioVCollide::~CStudioVCollide()
 t CTSListBase::~CTSListBase()
 t CTSQueue<AsyncHardwareLoad_t, false>::~CTSQueue()
 t CTSQueue<SCombinedStudioData*, false>::~CTSQueue()
 t CTSQueue<studiodata_t*, false>::~CTSQueue()
 t CTSSimpleList<CDataCacheSection::FrameLock_t>::~CTSSimpleList()
 t CTextureCombine::AddMaterial(char const*)
 t CTextureCombine::AddNonAtlasedMaterial(int)
 t CTextureCombine::CTextureCombine()
 t CTextureCombine::Cleanup()
 t CTextureCombine::CombineTexture(int, int, char const*, char const*)
 t CTextureCombine::FindMaterialToTexture()
 t CTextureCombine::FreeCombinedMaterials()
 t CTextureCombine::GatherAtlasInfo()
 t CTextureCombine::GetTextureInfo(int, Vector2D&, Vector2D&, Vector2D&)
 t CTextureCombine::Init(SCombinedStudioData*)
 t CTextureCombine::LoadVTFs(int, char const*, char const*, char (*) [260])
 t CTextureCombine::Resolve()
 t CTier1AppSystem<IDataCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier1AppSystem<IDataCache, 0>::Disconnect()
 t CTier1AppSystem<IDataCache, 0>::GetTier()
 t CTier1AppSystem<IDataCache, 0>::Init()
 t CTier1AppSystem<IDataCache, 0>::Shutdown()
 t CTier1AppSystem<IMDLCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier1AppSystem<IMDLCache, 0>::Disconnect()
 t CTier1AppSystem<IMDLCache, 0>::GetTier()
 t CTier1AppSystem<IMDLCache, 0>::Init()
 t CTier1AppSystem<IMDLCache, 0>::Shutdown()
 t CTier1AppSystem<IPrecacheSystem, 0>::Connect(void* (*)(char const*, int*))
 t CTier1AppSystem<IPrecacheSystem, 0>::Disconnect()
 t CTier1AppSystem<IPrecacheSystem, 0>::GetTier()
 t CTier1AppSystem<IPrecacheSystem, 0>::Init()
 t CTier1AppSystem<IPrecacheSystem, 0>::Shutdown()
 t CTier1AppSystem<IResourceAccessControl, 0>::Connect(void* (*)(char const*, int*))
 t CTier1AppSystem<IResourceAccessControl, 0>::Disconnect()
 t CTier1AppSystem<IResourceAccessControl, 0>::GetTier()
 t CTier1AppSystem<IResourceAccessControl, 0>::Init()
 t CTier1AppSystem<IResourceAccessControl, 0>::Shutdown()
 t CTier2AppSystem<IDataCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier2AppSystem<IDataCache, 0>::Disconnect()
 t CTier2AppSystem<IDataCache, 0>::GetTier()
 t CTier2AppSystem<IDataCache, 0>::Init()
 t CTier2AppSystem<IDataCache, 0>::Shutdown()
 t CTier2AppSystem<IMDLCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier2AppSystem<IMDLCache, 0>::Disconnect()
 t CTier2AppSystem<IMDLCache, 0>::GetTier()
 t CTier2AppSystem<IMDLCache, 0>::Init()
 t CTier2AppSystem<IMDLCache, 0>::Shutdown()
 t CTier2AppSystem<IPrecacheSystem, 0>::Connect(void* (*)(char const*, int*))
 t CTier2AppSystem<IPrecacheSystem, 0>::Disconnect()
 t CTier2AppSystem<IPrecacheSystem, 0>::GetTier()
 t CTier2AppSystem<IPrecacheSystem, 0>::Init()
 t CTier2AppSystem<IPrecacheSystem, 0>::Shutdown()
 t CTier3AppSystem<IDataCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier3AppSystem<IDataCache, 0>::Disconnect()
 t CTier3AppSystem<IDataCache, 0>::GetTier()
 t CTier3AppSystem<IMDLCache, 0>::Connect(void* (*)(char const*, int*))
 t CTier3AppSystem<IMDLCache, 0>::Disconnect()
 t CTier3AppSystem<IMDLCache, 0>::GetTier()
 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
 t CUtlBinaryBlock::Get(void*, int) const
 t CUtlBinaryBlock::Set(void const*, int)
 t CUtlBinaryBlock::SetLength(int)
 t CUtlBinaryBlock::operator=(CUtlBinaryBlock const&)
 t CUtlBinaryBlock::operator==(CUtlBinaryBlock const&) const
 t CUtlBuffer::ActivateByteSwapping(bool)
 t CUtlBuffer::AddNullTermination(int)
 t CUtlBuffer::AssumeMemory(void*, int, int, int)
 t CUtlBuffer::CUtlBuffer(int, int, int)
 t CUtlBuffer::CUtlBuffer(void const*, int, int)
 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 t CUtlBuffer::CheckGet(int)
 t CUtlBuffer::CheckPeekGet(int, int)
 t CUtlBuffer::CheckPut(int)
 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
 t CUtlBuffer::DetachMemory()
 t CUtlBuffer::EatCPPComment()
 t CUtlBuffer::EatWhiteSpace()
 t CUtlBuffer::EnsureCapacity(int)
 t CUtlBuffer::Get(void*, int)
 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 t CUtlBuffer::GetLine(char*, int)
 t CUtlBuffer::GetOverflow(int)
 t CUtlBuffer::GetString(char*, int)
 t CUtlBuffer::GetToken(char const*)
 t CUtlBuffer::GetUpTo(void*, int)
 t CUtlBuffer::IsBigEndian()
 t CUtlBuffer::OnGetOverflow(int)
 t CUtlBuffer::OnPutOverflow(int)
 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 t CUtlBuffer::PeekGet(int, int)
 t CUtlBuffer::PeekLineLength()
 t CUtlBuffer::PeekStringLength()
 t CUtlBuffer::PeekStringMatch(int, char const*, int)
 t CUtlBuffer::PeekWhiteSpace(int)
 t CUtlBuffer::Printf(char const*, ...)
 t CUtlBuffer::Put(void const*, int)
 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
 t CUtlBuffer::PutOverflow(int)
 t CUtlBuffer::PutString(char const*)
 t CUtlBuffer::Scanf(char const*, ...)
 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 t CUtlBuffer::SetBigEndian(bool)
 t CUtlBuffer::SetBufferType(bool, bool)
 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
 t CUtlBuffer::Swap(CUtlBuffer&)
 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
 t CUtlBuffer::VaPrintf(char const*, char*)
 t CUtlBuffer::VaScanf(char const*, char*)
 t CUtlBuffer::~CUtlBuffer()
 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 t CUtlCStringConversion::FindConversion(char const*, int*)
 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 t CUtlCharConversion::FindConversion(char const*, int*)
 t CUtlCharConversion::GetConversionLength(char) const
 t CUtlCharConversion::GetConversionString(char) const
 t CUtlCharConversion::GetDelimiter() const
 t CUtlCharConversion::GetDelimiterLength() const
 t CUtlCharConversion::GetEscapeChar() const
 t CUtlCharConversion::MaxConversionLength() const
 t CUtlDict<int, int>::CUtlDict(int, int, int)
 t CUtlDict<int, int>::Insert(char const*, int const&)
 t CUtlDict<int, int>::~CUtlDict()
 t CUtlDict<short, short>::CUtlDict(int, int, int)
 t CUtlDict<short, short>::Insert(char const*, short const&)
 t CUtlDict<short, short>::~CUtlDict()
 t CUtlDict<studiodata_t*, unsigned short>::CUtlDict(int, int, int)
 t CUtlDict<studiodata_t*, unsigned short>::Insert(char const*, studiodata_t* const&)
 t CUtlDict<studiodata_t*, unsigned short>::Purge()
 t CUtlDict<studiodata_t*, unsigned short>::~CUtlDict()
 t CUtlFilenameSymbolTable::FindFileName(char const*)
 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
 t CUtlFilenameSymbolTable::RemoveAll()
 t CUtlFilenameSymbolTable::RestoreFromBuffer(CUtlBuffer&)
 t CUtlFilenameSymbolTable::SaveToBuffer(CUtlBuffer&)
 t CUtlFilenameSymbolTable::SpewStrings()
 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
 t CUtlFixedLinkedList<AsyncInfo_t>::~CUtlFixedLinkedList()
 t CUtlFixedMemory<UtlLinkedListElem_t<AsyncInfo_t, int> >::Grow(int)
 t CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int> >::Grow(int)
 t CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int> >::Purge() [clone .isra.55]
 t CUtlHash<CModelSwapper::ModelSubstitution_t, bool (*)(CModelSwapper::ModelSubstitution_t const&, CModelSwapper::ModelSubstitution_t const&), unsigned int (*)(CModelSwapper::ModelSubstitution_t const&)>::CUtlHash(int, int, int, bool (*)(CModelSwapper::ModelSubstitution_t const&, CModelSwapper::ModelSubstitution_t const&), unsigned int (*)(CModelSwapper::ModelSubstitution_t const&))
 t CUtlHash<CModelSwapper::ModelSubstitution_t, bool (*)(CModelSwapper::ModelSubstitution_t const&, CModelSwapper::ModelSubstitution_t const&), unsigned int (*)(CModelSwapper::ModelSubstitution_t const&)>::~CUtlHash()
 t CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
 t CUtlHash<int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&>::CUtlHash(int, int, int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&)
 t CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::CUtlHashFast()
 t CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::~CUtlHashFast()
 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
 t CUtlInplaceBuffer::InplaceGetLinePtr()
 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
 t CUtlLinkedList<AsyncInfo_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AsyncInfo_t, int> > >::AllocInternal(bool)
 t CUtlLinkedList<AsyncInfo_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AsyncInfo_t, int> > >::InsertBefore(int, AsyncInfo_t const&)
 t CUtlLinkedList<AsyncInfo_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AsyncInfo_t, int> > >::RemoveAll()
 t CUtlLinkedList<AsyncInfo_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AsyncInfo_t, int> > >::Unlink(int)
 t CUtlLinkedList<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int> > >::AllocInternal(bool)
 t CUtlLinkedList<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int> > >::RemoveAll()
 t CUtlLinkedList<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<memhandle_t__*, CUtlHashFastNoHash>::HashFastData_t_<memhandle_t__*>, int> > >::Unlink(int)
 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 t CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::~CUtlMap()
 t CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::~CUtlMap()
 t CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int>::Grow(int)
 t CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int>::Grow(int)
 t CUtlMemory<CDataCacheSection*, int>::Grow(int)
 t CUtlMemory<CDataCacheSection*, int>::~CUtlMemory()
 t CUtlMemory<CModelSwapper::ModelSubstitution_t, int>::Grow(int)
 t CUtlMemory<CModelSwapper::ModelSubstitution_t, int>::~CUtlMemory()
 t CUtlMemory<CResourceAccessControl::ResourceInfo_t, int>::Grow(int)
 t CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
 t CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::~CUtlMemory()
 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::~CUtlMemory()
 t CUtlMemory<CUtlString, int>::Grow(int)
 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::~CUtlMemory()
 t CUtlMemory<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, int>::Grow(int)
 t CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
 t CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int>::Grow(int)
 t CUtlMemory<DataLinker::Stream::StringTableElement_t, int>::Grow(int)
 t CUtlMemory<DataLinker::Stream::StringTableElement_t, int>::~CUtlMemory()
 t CUtlMemory<KeyValues*, int>::Grow(int)
 t CUtlMemory<ResourceList_t__*, int>::Grow(int)
 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 t CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int>::Grow(int)
 t CUtlMemory<char const*, int>::~CUtlMemory()
 t CUtlMemory<char*, int>::Grow(int)
 t CUtlMemory<char, int>::Grow(int)
 t CUtlMemory<int, int>::Grow(int)
 t CUtlMemory<int, int>::~CUtlMemory()
 t CUtlMemory<memhandle_t__*, int>::Grow(int)
 t CUtlMemory<memhandle_t__*, int>::~CUtlMemory()
 t CUtlMemory<modellookup_t, int>::Grow(int)
 t CUtlMemory<studiohdr_t const*, int>::Grow(int)
 t CUtlMemory<unsigned char, int>::ConvertToGrowableMemory(int) [clone .part.32]
 t CUtlMemory<unsigned char, int>::Grow(int)
 t CUtlMemory<unsigned char, int>::Purge()
 t CUtlMemory<unsigned int, int>::Grow(int)
 t CUtlMemory<unsigned long, int>::Grow(int)
 t CUtlMemory<unsigned long, int>::~CUtlMemory()
 t CUtlMemory<unsigned short, int>::Grow(int)
 t CUtlMemory<unsigned short, int>::~CUtlMemory()
 t CUtlMemory<virtualgeneric_t, int>::Grow(int)
 t CUtlMemory<virtualgroup_t, int>::Grow(int)
 t CUtlMemory<virtualsequence_t, int>::Grow(int)
 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::~CUtlMemory()
 t CUtlMemory<void*, int>::Grow(int)
 t CUtlMemory<wchar_t*, int>::Grow(int)
 t CUtlMemoryPool::AddNewBlob()
 t CUtlMemoryPool::Alloc()
 t CUtlMemoryPool::Alloc(unsigned int)
 t CUtlMemoryPool::AllocZero()
 t CUtlMemoryPool::AllocZero(unsigned int)
 t CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
 t CUtlMemoryPool::Clear()
 t CUtlMemoryPool::Free(void*)
 t CUtlMemoryPool::Init()
 t CUtlMemoryPool::IsAllocationWithinPool(void*) const
 t CUtlMemoryPool::ReportLeaks()
 t CUtlMemoryPool::SetErrorReportFunc(void (*)(char const*, ...))
 t CUtlMemoryPool::Size() const
 t CUtlMemoryPool::~CUtlMemoryPool()
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
 t CUtlNoEscConversion::FindConversion(char const*, int*)
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Find(CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t const&) const
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NextInorder(int) const
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 t CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Find(CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t const&) const
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Insert(CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::InsertRebalance(short)
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NewNode()
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NextInorder(short) const
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RemoveAll()
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateLeft(short)
 t CUtlRBTree<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, short, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateRight(short)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&) const
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 t CUtlRBTree<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, studiodata_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t const&) const
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 t CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t const&) const
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t const&)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 t CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Find(CUtlSymbolTable::CStringPoolIndex const&) const
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::Insert(memhandle_t__* const&)
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::InsertRebalance(int)
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::NewNode()
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::NextInorder(int) const
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::RemoveAll()
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::RotateLeft(int)
 t CUtlRBTree<memhandle_t__*, int, bool (*)(memhandle_t__* const&, memhandle_t__* const&), CUtlMemory<UtlRBTreeNode_t<memhandle_t__*, int>, int> >::RotateRight(int)
 t CUtlString::AbsPath(char const*)
 t CUtlString::Append(char const*)
 t CUtlString::CUtlString()
 t CUtlString::CUtlString(CUtlString const&)
 t CUtlString::CUtlString(char const*)
 t CUtlString::CUtlString(void const*, int)
 t CUtlString::CUtlString(void*, int, int)
 t CUtlString::DirName()
 t CUtlString::Format(char const*, ...)
 t CUtlString::FormatV(char const*, char*)
 t CUtlString::Get()
 t CUtlString::Get() const
 t CUtlString::GetBaseFilename() const
 t CUtlString::GetExtension() const
 t CUtlString::Left(int)
 t CUtlString::Length() const
 t CUtlString::MatchesPattern(CUtlString const&, int)
 t CUtlString::PathJoin(char const*, char const*)
 t CUtlString::Purge()
 t CUtlString::Replace(char, char)
 t CUtlString::Right(int)
 t CUtlString::Set(char const*)
 t CUtlString::SetDirect(char const*, int)
 t CUtlString::SetLength(int)
 t CUtlString::Slice(int, int)
 t CUtlString::StripExtension() const
 t CUtlString::StripFilename() const
 t CUtlString::StripTrailingSlash()
 t CUtlString::ToLower()
 t CUtlString::UnqualifiedFilename()
 t CUtlString::operator char const*() const
 t CUtlString::operator+=(CUtlString const&)
 t CUtlString::operator+=(char const*)
 t CUtlString::operator+=(char)
 t CUtlString::operator+=(double)
 t CUtlString::operator+=(int)
 t CUtlString::operator=(CUtlString const&)
 t CUtlString::operator=(char const*)
 t CUtlString::operator==(CUtlString const&) const
 t CUtlString::operator==(char const*) const
 t CUtlString::~CUtlString()
 t CUtlStringMap<DataLinker::Stream::StringTableElement_t>::~CUtlStringMap()
 t CUtlStringMap<ResourceList_t__*>::~CUtlStringMap()
 t CUtlSymbol::CUtlSymbol(char const*)
 t CUtlSymbol::CurrTable()
 t CUtlSymbol::DisableStaticSymbolTable()
 t CUtlSymbol::Initialize()
 t CUtlSymbol::LockTableForRead()
 t CUtlSymbol::String() const
 t CUtlSymbol::StringNoLock() const
 t CUtlSymbol::UnlockTableForRead()
 t CUtlSymbol::operator==(char const*) const
 t CUtlSymbolTable::AddString(char const*)
 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
 t CUtlSymbolTable::CTree::~CTree()
 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
 t CUtlSymbolTable::Find(char const*) const
 t CUtlSymbolTable::FindPoolWithSpace(int) const
 t CUtlSymbolTable::RemoveAll()
 t CUtlSymbolTable::String(CUtlSymbol) const
 t CUtlSymbolTable::~CUtlSymbolTable()
 t CUtlVector<CCountedStringPoolBase<unsigned int>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int> >::GrowVector(int)
 t CUtlVector<CCountedStringPoolBase<unsigned int>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int> >::ShiftElementsRight(int, int)
 t CUtlVector<CCountedStringPoolBase<unsigned short>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int> >::GrowVector(int)
 t CUtlVector<CCountedStringPoolBase<unsigned short>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int> >::ShiftElementsRight(int, int)
 t CUtlVector<CDataCacheSection*, CUtlMemory<CDataCacheSection*, int> >::InsertBefore(int, CDataCacheSection* const&)
 t CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >::SetCount(int)
 t CUtlVector<CResourceAccessControl::ResourceInfo_t, CUtlMemory<CResourceAccessControl::ResourceInfo_t, int> >::InsertBefore(int)
 t CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::GrowVector(int)
 t CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::ShiftElementsRight(int, int)
 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int)
 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
 t CUtlVector<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, CUtlMemory<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, int> >::RemoveAll()
 t CUtlVector<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, CUtlMemory<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, int> >::SetCount(int)
 t CUtlVector<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, CUtlMemory<CUtlVector<CModelSwapper::ModelSubstitution_t, CUtlMemory<CModelSwapper::ModelSubstitution_t, int> >, int> >::~CUtlVector()
 t CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::RemoveAll()
 t CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::SetCount(int)
 t CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::~CUtlVector()
 t CUtlVector<CUtlVector<int, CUtlMemory<int, int> >, CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int> >::RemoveAll()
 t CUtlVector<CUtlVector<int, CUtlMemory<int, int> >, CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int> >::SetCount(int)
 t CUtlVector<CUtlVector<int, CUtlMemory<int, int> >, CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int> >::~CUtlVector()
 t CUtlVector<DataLinker::Stream::StringTableElement_t, CUtlMemory<DataLinker::Stream::StringTableElement_t, int> >::EnsureCount(int)
 t CUtlVector<DataLinker::Stream::StringTableElement_t, CUtlMemory<DataLinker::Stream::StringTableElement_t, int> >::~CUtlVector()
 t CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::InsertBefore(int, KeyValues* const&)
 t CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
 t CUtlVector<ResourceList_t__*, CUtlMemory<ResourceList_t__*, int> >::EnsureCount(int)
 t CUtlVector<ResourceList_t__*, CUtlMemory<ResourceList_t__*, int> >::~CUtlVector()
 t CUtlVector<char const*, CUtlMemory<char const*, int> >::~CUtlVector()
 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
 t CUtlVector<char, CUtlMemory<char, int> >::GrowVector(int)
 t CUtlVector<char, CUtlMemory<char, int> >::ShiftElementsRight(int, int)
 t CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.101]
 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
 t CUtlVector<int, CUtlMemory<int, int> >::SetCount(int)
 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::EnsureCount(int)
 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::~CUtlVector()
 t CUtlVector<modellookup_t, CUtlMemory<modellookup_t, int> >::InsertBefore(int)
 t CUtlVector<modellookup_t, CUtlMemory<modellookup_t, int> >::~CUtlVector()
 t CUtlVector<studiohdr_t const*, CUtlMemory<studiohdr_t const*, int> >::SetCount(int)
 t CUtlVector<studiohdr_t const*, CUtlMemory<studiohdr_t const*, int> >::~CUtlVector()
 t CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::SetCount(int)
 t CUtlVector<unsigned long, CUtlMemory<unsigned long, int> >::EnsureCount(int)
 t CUtlVector<unsigned long, CUtlMemory<unsigned long, int> >::~CUtlVector()
 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::EnsureCount(int)
 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::SetCount(int)
 t CUtlVector<virtualgeneric_t, CUtlMemory<virtualgeneric_t, int> >::GrowVector(int)
 t CUtlVector<virtualgeneric_t, CUtlMemory<virtualgeneric_t, int> >::ShiftElementsRight(int, int)
 t CUtlVector<virtualgeneric_t, CUtlMemory<virtualgeneric_t, int> >::~CUtlVector()
 t CUtlVector<virtualgroup_t, CUtlMemory<virtualgroup_t, int> >::InsertBefore(int)
 t CUtlVector<virtualgroup_t, CUtlMemory<virtualgroup_t, int> >::RemoveAll()
 t CUtlVector<virtualgroup_t, CUtlMemory<virtualgroup_t, int> >::~CUtlVector()
 t CUtlVector<virtualsequence_t, CUtlMemory<virtualsequence_t, int> >::GrowVector(int)
 t CUtlVector<virtualsequence_t, CUtlMemory<virtualsequence_t, int> >::ShiftElementsRight(int, int)
 t CUtlVector<virtualsequence_t, CUtlMemory<virtualsequence_t, int> >::~CUtlVector()
 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::InsertBefore(int, void (* const&)(IConVar*, char const*, float))
 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
 t CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
 t CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::InsertBefore(int, wchar_t* const&)
 t CVProfScope::~CVProfScope()
 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 t CalcFovX(float, float)
 t CalcFovY(float, float)
 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
 t CalculateAABBFromProjectionMatrix(VMatrix const&, Vector*, Vector*)
 t CalculateAABBFromProjectionMatrixInverse(VMatrix const&, Vector*, Vector*)
 t CalculateSphereFromProjectionMatrix(VMatrix const&, Vector*, float*)
 t CalculateSphereFromProjectionMatrixInverse(VMatrix const&, Vector*, float*)
 t CaselessStringLessThan(char const* const&, char const* const&)
 t CaselessStringLessThanIgnoreSlashes(char const* const&, char const* const&)
 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t CeilPow2(int)
 t CharacterSetBuild(characterset_t*, char const*)
 t ClearBounds(Vector&, Vector&)
 t ClipLineSegmentToPlane(Vector const&, Vector const&, Vector*, Vector*, float)
 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
 t ClipPolyToPlane_SIMD(float __vector(4)*, int, float __vector(4)*, float __vector(4) const&, float)
 t ClipPolyToPlane_SIMD(float __vector*, int, float __vector*, float __vector const&, float)
 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
 t ComputeMaxRealBoneInfluences(vertexFileHeader_t*, int)
 t ComputeModContentFilename(char const*, char*, unsigned int)
 t ComputeModFilename(char const*, char*, unsigned int)
 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t ConCommand::CanAutoComplete()
 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
 t ConCommand::Dispatch(CCommand const&)
 t ConCommand::IsCommand() const
 t ConCommand::~ConCommand()
 t ConCommandBase::AddFlags(int)
 t ConCommandBase::ConCommandBase()
 t ConCommandBase::ConCommandBase(char const*, char const*, int)
 t ConCommandBase::CopyString(char const*)
 t ConCommandBase::Create(char const*, char const*, int)
 t ConCommandBase::GetDLLIdentifier() const
 t ConCommandBase::GetFlags() const
 t ConCommandBase::GetHelpText() const
 t ConCommandBase::GetName() const
 t ConCommandBase::GetNext()
 t ConCommandBase::GetNext() const
 t ConCommandBase::Init()
 t ConCommandBase::IsCommand() const
 t ConCommandBase::IsFlagSet(int) const
 t ConCommandBase::IsRegistered() const
 t ConCommandBase::RemoveFlags(int)
 t ConCommandBase::Shutdown()
 t ConCommandBase::~ConCommandBase()
 t ConVar::AddFlags(int)
 t ConVar::ChangeStringValue(char const*, float)
 t ConVar::ClampValue(float&)
 t ConVar::ConVar(char const*, char const*, int)
 t ConVar::ConVar(char const*, char const*, int, char const*)
 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 t ConVar::GetBaseName() const
 t ConVar::GetDefault() const
 t ConVar::GetFlags() const
 t ConVar::GetFloat() const
 t ConVar::GetHelpText() const
 t ConVar::GetInt() const
 t ConVar::GetMax(float&) const
 t ConVar::GetMaxValue() const
 t ConVar::GetMin(float&) const
 t ConVar::GetMinValue() const
 t ConVar::GetName() const
 t ConVar::GetSplitScreenPlayerSlot() const
 t ConVar::HasMax() const
 t ConVar::HasMin() const
 t ConVar::Init()
 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float), bool)
 t ConVar::InternalSetColorFromString(char const*)
 t ConVar::InternalSetColorValue(Color)
 t ConVar::InternalSetFloatValue(float)
 t ConVar::InternalSetIntValue(int)
 t ConVar::InternalSetValue(char const*)
 t ConVar::IsCommand() const
 t ConVar::IsFlagSet(int) const
 t ConVar::IsRegistered() const
 t ConVar::RemoveChangeCallback(void (*)(IConVar*, char const*, float))
 t ConVar::Revert()
 t ConVar::SetDefault(char const*)
 t ConVar::SetValue(Color)
 t ConVar::SetValue(char const*)
 t ConVar::SetValue(float)
 t ConVar::SetValue(int)
 t ConVar::~ConVar()
 t ConVarRef::ConVarRef(IConVar*)
 t ConVarRef::ConVarRef(char const*)
 t ConVarRef::ConVarRef(char const*, bool)
 t ConVarRef::Init(char const*, bool)
 t ConVarRef::IsValid() const
 t ConVar_AppendFlags(ConCommandBase const*, char*, unsigned int)
 t ConVar_PrintDescription(ConCommandBase const*)
 t ConVar_Register(int, IConCommandBaseAccessor*)
 t ConVar_Unregister()
 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
 t ConcatTransforms_Aligned(matrix3x4a_t const&, matrix3x4a_t const&, matrix3x4a_t&)
 t ConnectInterfaces(void* (**)(char const*, int*), int)
 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
 t ConnectTier2Libraries(void* (**)(char const*, int*), int)
 t ConnectTier3Libraries(void* (**)(char const*, int*), int)
 t CopyMemory3D(void*, void const*, int, int, int, int, int, int, int)
 t CreateInterfaceInternal(char const*, int*)
 t CreatePlatformFilename(char const*, char*, int)
 t CrossProduct(float const*, float const*, float*)
 t CubicBasis0(float)
 t CubicBasis1(float)
 t CubicBasis2(float)
 t CubicBasis3(float)
 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t DataCacheItem_t::DestroyResource()
 t DataCacheSize_f(IConVar*, char const*, float)
 t DataLinker::Chunk::Chunk(unsigned int, unsigned int)
 t DataLinker::Chunk::Free()
 t DataLinker::Stream::Align(unsigned int, int)
 t DataLinker::Stream::Begin(char const*, unsigned int)
 t DataLinker::Stream::ClearStats()
 t DataLinker::Stream::Compile(void*)
 t DataLinker::Stream::End()
 t DataLinker::Stream::EnsureAvailable(unsigned int)
 t DataLinker::Stream::GetOffsetTo(void const*) const
 t DataLinker::Stream::GetTotalSize() const
 t DataLinker::Stream::IsDeclared(DataLinker::LinkTarget_t) const
 t DataLinker::Stream::IsDefined(DataLinker::LinkSource_t) const
 t DataLinker::Stream::IsLinked(DataLinker::LinkSource_t) const
 t DataLinker::Stream::IsSet(DataLinker::LinkTarget_t) const
 t DataLinker::Stream::Link(DataLinker::LinkSource_t, DataLinker::LinkTarget_t, char const*)
 t DataLinker::Stream::Link(int*, DataLinker::LinkTarget_t, char const*)
 t DataLinker::Stream::Link(int*, void const*)
 t DataLinker::Stream::Link(short*, void const*)
 t DataLinker::Stream::LinkToHere(int*, char const*)
 t DataLinker::Stream::NewLinkSource(int, DataLinker::OffsetTypeEnum, int, char const*)
 t DataLinker::Stream::NewOffset(int*, char const*)
 t DataLinker::Stream::NewTarget()
 t DataLinker::Stream::NewTarget(void*)
 t DataLinker::Stream::NewTargetHere()
 t DataLinker::Stream::PrintStats()
 t DataLinker::Stream::SetTarget(DataLinker::LinkTarget_t, int)
 t DataLinker::Stream::SetTargetHere(DataLinker::LinkTarget_t)
 t DataLinker::Stream::SetTargetNull(DataLinker::LinkTarget_t)
 t DataLinker::Stream::Stream()
 t DataLinker::Stream::Tell()
 t DataLinker::Stream::WriteAndLinkString(DataLinker::Offset_t<char, 0>*, char const*)
 t DataLinker::Stream::WriteBytes(unsigned int)
 t DataLinker::Stream::WriteNullOffset(char const*)
 t DataLinker::Stream::WriteOffset(DataLinker::LinkTarget_t, char const*)
 t DataLinker::Stream::WriteOffset(char const*)
 t DataLinker::Stream::~Stream()
 t DefaultCompletionFunc(char const*, char (*) [64])
 t DefaultConditionalErrorProc(char const*)
 t DefaultConditionalSymbolProc(char const*)
 t DisconnectInterfaces()
 t DisconnectTier1Libraries()
 t DisconnectTier2Libraries()
 t DisconnectTier3Libraries()
 t ExtractClipPlanesFromNonTransposedMatrix(VMatrix const&, VPlane*, bool)
 t FloorDivMod(double, double, int*, int*)
 t FloorPow2(int)
 t FourVectors::CalcClosestPointOnLineSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&, float __vector(4)*)
 t FourVectors::CalcClosestPointOnLineSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&, float __vector*)
 t FourVectors::CalcClosestPointToLineTSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&)
 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&, FourVectors*)
 t FreeAnimBlock(void*)
 t FrustumPlanesFromMatrix(VMatrix const&, Frustum_t&)
 t Frustum_t::Contains(Vector const&, Vector const&) const
 t Frustum_t::CreateOrthoFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float)
 t Frustum_t::CreateOrthoFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float)
 t Frustum_t::CreatePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float)
 t Frustum_t::CreatePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float)
 t Frustum_t::CreatePerspectiveFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float)
 t Frustum_t::CullBox(Vector const&, Vector const&) const
 t Frustum_t::CullBox(float __vector const&, float __vector const&) const
 t Frustum_t::CullBox(float __vector(4) const&, float __vector(4) const&) const
 t Frustum_t::CullBoxCenterExtents(Vector const&, Vector const&) const
 t Frustum_t::CullBoxCenterExtents(float __vector const&, float __vector const&) const
 t Frustum_t::CullBoxCenterExtents(float __vector(4) const&, float __vector(4) const&) const
 t Frustum_t::Frustum_t()
 t Frustum_t::GetCorners(Vector*) const
 t Frustum_t::GetPlane(int, Vector*, float*) const
 t Frustum_t::GetPlanes(VPlane*) const
 t Frustum_t::Intersects(Frustum_t&) const
 t Frustum_t::Intersects(Vector const&, Vector const&) const
 t Frustum_t::Intersects(float __vector const&, float __vector const&) const
 t Frustum_t::Intersects(float __vector(4) const&, float __vector(4) const&) const
 t Frustum_t::IntersectsCenterExtents(Vector const&, Vector const&) const
 t Frustum_t::IntersectsCenterExtents(float __vector const&, float __vector const&) const
 t Frustum_t::IntersectsCenterExtents(float __vector(4) const&, float __vector(4) const&) const
 t Frustum_t::SetPlane(int, Vector const&, float)
 t Frustum_t::SetPlanes(VPlane const*)
 t Gain(float, float)
 t GammaToLinear(float)
 t GammaToLinearFullRange(float)
 t GenerateFullPath(char const*, char const*, char*, int)
 t GenerateOrthoFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float, VPlane*)
 t GenerateOrthoFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float, VPlane*)
 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
 t GeneratePerspectiveFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
 t GetAsyncInfoIndex(unsigned short, MDLCacheDataType_t, int)
 t GetCStringCharConversion()
 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
 t GetModContentSubdirectory(char const*, char*, int)
 t GetModSubdirectory(char const*, char*, int)
 t GetModuleHandle(char const*)
 t GetNoEscCharConversion()
 t GetSIMDRandContext()
 t GetSearchPath(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*)
 t GetTextureCombiner()
 t GreatestCommonDivisor(int, int)
 t HSVtoRGB(Vector const&, Vector&)
 t Hash12(void const*)
 t Hash16(void const*)
 t Hash4(void const*)
 t Hash8(void const*)
 t HashBlock(void const*, unsigned int)
 t HashInt(int)
 t HashString(char const*)
 t HashStringCaseless(char const*)
 t HashStringCaselessConventional(char const*)
 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
 t Hermite_Spline(float, float, float, float)
 t Hermite_Spline(float, float, float, float, float)
 t Hermite_SplineBasis(float, float*)
 t HexToValue(char)
 t IAppSystem::GetDependencies()
 t IAppSystem::GetTier()
 t IAppSystem::IsSingleton()
 t IAppSystem::Reconnect(void* (*)(char const*, int*), char const*)
 t IDataCacheClient::~IDataCacheClient()
 t IDataCacheSection::~IDataCacheSection()
 t IKeyValuesDumpContextAsText::KvBeginKey(KeyValues*, int)
 t IKeyValuesDumpContextAsText::KvEndKey(KeyValues*, int)
 t IKeyValuesDumpContextAsText::KvWriteIndent(int)
 t IKeyValuesDumpContextAsText::KvWriteValue(KeyValues*, int)
 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 t InitSinCosTable()
 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
 t IsDenormal(float const&)
 t IsPointInBounds(Vector const&, Vector const&, Vector const&)
 t KeyValues::AddSubKey(KeyValues*)
 t KeyValues::AddSubkeyUsingKnownLastChild(KeyValues*, KeyValues*)
 t KeyValues::AppendIncludedKeys(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 t KeyValues::ChainKeyValue(KeyValues*)
 t KeyValues::Clear()
 t KeyValues::ContainsSubKey(KeyValues*)
 t KeyValues::CopySubkeys(KeyValues*) const
 t KeyValues::CreateKey(char const*)
 t KeyValues::CreateKeyUsingKnownLastChild(char const*, KeyValues*)
 t KeyValues::CreateNewKey()
 t KeyValues::Dump(IKeyValuesDumpContext*, int)
 t KeyValues::ElideSubKey(KeyValues*)
 t KeyValues::EvaluateConditional(char const*, bool (*)(char const*))
 t KeyValues::FindKey(char const*, bool)
 t KeyValues::FindKey(int) const
 t KeyValues::FindLastSubKey()
 t KeyValues::FromString(char const*, char const*, char const**)
 t KeyValues::GetColor(char const*, Color const&)
 t KeyValues::GetDataType() const
 t KeyValues::GetDataType(char const*)
 t KeyValues::GetFirstSubKey() const
 t KeyValues::GetFirstTrueSubKey()
 t KeyValues::GetFirstValue()
 t KeyValues::GetFloat(char const*, float)
 t KeyValues::GetInt(char const*, int)
 t KeyValues::GetName() const
 t KeyValues::GetNameSymbol() const
 t KeyValues::GetNameSymbolCaseSensitive() const
 t KeyValues::GetNextKey() const
 t KeyValues::GetNextTrueSubKey()
 t KeyValues::GetNextValue()
 t KeyValues::GetPtr(char const*, void*)
 t KeyValues::GetString(char const*, char const*)
 t KeyValues::GetStringForSymbolClassic(int)
 t KeyValues::GetStringForSymbolGrowable(int)
 t KeyValues::GetSymbolForStringClassic(char const*, bool)
 t KeyValues::GetSymbolForStringGrowable(char const*, bool)
 t KeyValues::GetUint64(char const*, unsigned long long)
 t KeyValues::GetWString(char const*, wchar_t const*)
 t KeyValues::Init()
 t KeyValues::InsertSubKey(int, KeyValues*)
 t KeyValues::InternalWrite(IBaseFileSystem*, void*, CUtlBuffer*, void const*, int)
 t KeyValues::IsEmpty(char const*)
 t KeyValues::IsEqual(KeyValues*)
 t KeyValues::KeyValues(char const*)
 t KeyValues::KeyValues(char const*, char const*, char const*)
 t KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
 t KeyValues::KeyValues(char const*, char const*, int)
 t KeyValues::KeyValues(char const*, char const*, int, char const*, int)
 t KeyValues::KeyValues(char const*, char const*, wchar_t const*)
 t KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*, bool (*)(char const*))
 t KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*, bool (*)(char const*))
 t KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool (*)(char const*))
 t KeyValues::MakeCopy() const
 t KeyValues::MergeBaseKeys(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 t KeyValues::MergeFrom(KeyValues*, KeyValues::MergeKeyValuesOp_t)
 t KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, bool (*)(char const*))
 t KeyValues::ProcessResolutionKeys(char const*)
 t KeyValues::ReadAsBinary(CUtlBuffer&, int)
 t KeyValues::ReadAsBinaryFiltered(CUtlBuffer&, int)
 t KeyValues::ReadAsBinaryPooledFormat(CUtlBuffer&, IBaseFileSystem*, unsigned int, bool (*)(char const*))
 t KeyValues::RecursiveCopyKeyValues(KeyValues&)
 t KeyValues::RecursiveLoadFromBuffer(char const*, CKeyValuesTokenReader&, bool (*)(char const*))
 t KeyValues::RecursiveMergeKeyValues(KeyValues*)
 t KeyValues::RecursiveSaveToFile(CUtlBuffer&, int)
 t KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)
 t KeyValues::RemoveEverything()
 t KeyValues::RemoveSubKey(KeyValues*)
 t KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool)
 t KeyValues::SetColor(char const*, Color)
 t KeyValues::SetFloat(char const*, float)
 t KeyValues::SetInt(char const*, int)
 t KeyValues::SetName(char const*)
 t KeyValues::SetNextKey(KeyValues*)
 t KeyValues::SetPtr(char const*, void*)
 t KeyValues::SetString(char const*, char const*)
 t KeyValues::SetStringValue(char const*)
 t KeyValues::SetUint64(char const*, unsigned long long)
 t KeyValues::SetUseGrowableStringTable(bool)
 t KeyValues::SetWString(char const*, wchar_t const*)
 t KeyValues::SwapSubKey(KeyValues*, KeyValues*)
 t KeyValues::UnpackIntoStructure(KeyValuesUnpackStructure const*, void*)
 t KeyValues::UsesEscapeSequences(bool)
 t KeyValues::WriteAsBinary(CUtlBuffer&) const
 t KeyValues::WriteAsBinaryFiltered(CUtlBuffer&)
 t KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
 t KeyValues::WriteIndents(IBaseFileSystem*, void*, CUtlBuffer*, int)
 t KeyValues::deleteThis()
 t KeyValues::operator delete(void*)
 t KeyValues::operator delete(void*, int, char const*, int)
 t KeyValues::operator new(unsigned int)
 t KeyValues::operator new(unsigned int, int, char const*, int)
 t KeyValues::operator=(KeyValues&)
 t KeyValues::~KeyValues()
 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t LengthOfMatchingPaths(char const*, char const*)
 t LinearToGamma(float)
 t LinearToGammaFullRange(float)
 t LinearToScreenGamma(float)
 t LinearToTexture(float)
 t MakeFilename(char*, studiohdr_t*, char const*)
 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
 t MathLib_MMXEnabled()
 t MathLib_SSE2Enabled()
 t MathLib_SSEEnabled()
 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
 t MatrixAngles(matrix3x4_t const&, float*)
 t MatrixBuildOrtho(VMatrix&, double, double, double, double, double, double)
 t MatrixBuildPerspective(VMatrix&, float, float, float, float)
 t MatrixBuildPerspectiveOffCenterX(VMatrix&, double, double, double, double, double, double, double, double)
 t MatrixBuildPerspectiveX(VMatrix&, double, double, double, double)
 t MatrixBuildRotateZ(VMatrix&, float)
 t MatrixBuildRotation(VMatrix&, Vector const&, Vector const&)
 t MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
 t MatrixBuildScale(VMatrix&, Vector const&)
 t MatrixBuildScale(VMatrix&, float, float, float)
 t MatrixBuildTranslation(VMatrix&, Vector const&)
 t MatrixBuildTranslation(VMatrix&, float, float, float)
 t MatrixCopy(VMatrix const&, VMatrix&)
 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
 t MatrixFromAngles(QAngle const&, VMatrix&)
 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
 t MatrixInverseGeneral(VMatrix const&, VMatrix&)
 t MatrixInverseTR(VMatrix const&, VMatrix&)
 t MatrixInverseTranspose(VMatrix const&, VMatrix&)
 t MatrixInverseTranspose(matrix3x4_t const&, matrix3x4_t&)
 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
 t MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
 t MatrixNormalize(matrix3x4_t const&, matrix3x4_t&)
 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
 t MatrixQuaternionFast(matrix3x4_t const&, Quaternion&)
 t MatrixQuaternionFastTest(unsigned int)
 t MatrixQuaternionTest(unsigned int)
 t MatrixQuaternionTest2(unsigned int)
 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
 t MatrixSetIdentity(VMatrix&)
 t MatrixToAngles(VMatrix const&, QAngle&)
 t MatrixTransformPlane(VMatrix const&, cplane_t const&, cplane_t&)
 t MatrixTranspose(VMatrix const&, VMatrix&)
 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
 t MatrixTranspose(matrix3x4_t&)
 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
 t MatrixVectorsFLU(matrix3x4_t const&, Vector*, Vector*, Vector*)
 t MdlcacheCreateCallback(char const*, char const*, char const*, void*)
 t MurmurHash2(void const*, int, unsigned int)
 t MurmurHash2LowerCase(char const*, unsigned int)
 t MurmurHash64(void const*, int, unsigned int)
 t OptimizedModel::BodyPartHeader_t::GetBaseMap()
 t OptimizedModel::BoneStateChangeHeader_t::GetBaseMap()
 t OptimizedModel::FileHeader_t::GetBaseMap()
 t OptimizedModel::MaterialReplacementHeader_t::GetBaseMap()
 t OptimizedModel::MaterialReplacementListHeader_t::GetBaseMap()
 t OptimizedModel::MeshHeader_t::GetBaseMap()
 t OptimizedModel::ModelHeader_t::GetBaseMap()
 t OptimizedModel::ModelLODHeader_t::GetBaseMap()
 t OptimizedModel::StripGroupHeader_t::GetBaseMap()
 t OptimizedModel::StripHeader_t::GetBaseMap()
 t OptimizedModel::Vertex_t::GetBaseMap()
 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 t ParseStringToken(char const*, char const**)
 t PlaneIntersection(VPlane const&, VPlane const&, VPlane const&, Vector&)
 t PointsFromBox(Vector const&, Vector const&, Vector*)
 t PolyFromPlane(Vector*, Vector const&, float, float)
 t PolyFromPlane_SIMD(float __vector(4)*, float __vector(4) const&, float)
 t PolyFromPlane_SIMD(float __vector*, float __vector const&, float)
 t Q_URLDecode(char*, int, char const*, int)
 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
 t Q_URLDecodeRaw(char*, int, char const*, int)
 t Q_URLEncode(char*, int, char const*, int)
 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
 t Q_URLEncodeRaw(char*, int, char const*, int)
 t Q_log2(unsigned int)
 t Quaternion::GetForward() const
 t Quaternion::GetLeft() const
 t Quaternion::GetUp() const
 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
 t QuaternionAngles(Quaternion const&, QAngle&)
 t QuaternionAngles(Quaternion const&, RadianEuler&)
 t QuaternionAverageExponential(Quaternion&, int, Quaternion const*, float const*)
 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 t QuaternionConjugate(Quaternion const&, Quaternion&)
 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
 t QuaternionExp(Quaternion const&, Quaternion&)
 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
 t QuaternionInvert(Quaternion const&, Quaternion&)
 t QuaternionLn(Quaternion const&, Quaternion&)
 t QuaternionLookAt(Vector const&, Vector const&, Quaternion&)
 t QuaternionMatrix(Quaternion const&, Vector const&, Vector const&, matrix3x4_t&)
 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
 t QuaternionMultiply(Quaternion const&, Vector const&, Vector&)
 t QuaternionNormalize(Quaternion&)
 t QuaternionScale(Quaternion const&, float, Quaternion&)
 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 t QuaternionVectorsFLU(Quaternion const&, Vector*, Vector*, Vector*)
 t QuaternionVectorsForward(Quaternion const&, Vector*)
 t QuaternionionGetPitch(Quaternion const&)
 t QuaternionionGetRoll(Quaternion const&)
 t QuaternionionGetYaw(Quaternion const&)
 t RGBtoHSV(Vector const&, Vector&)
 t RandSIMD()
 t RandSIMD(int)
 t RandomQuaternion()
 t RandomQuaternion(IUniformRandomStream*)
 t RandomVectorInUnitCircle(Vector2D*)
 t RandomVectorInUnitSphere()
 t RandomVectorInUnitSphere(IUniformRandomStream*)
 t RandomVectorInUnitSphere(Vector*)
 t RandomVectorOnUnitSphere()
 t RandomVectorOnUnitSphere(IUniformRandomStream*)
 t RangeCompressor(float, float, float, float)
 t ReconnectInterface(void* (*)(char const*, int*), char const*)
 t ReconnectInterface(void* (*)(char const*, int*), char const*, void**)
 t RecursiveFindFilesMatchingName(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*, char const*, char const*, char const*)
 t RegisterInterface(void* (*)(char const*, int*), char const*, void**)
 t ReleaseMaterialSystemObjects(int)
 t ReleaseSIMDRandContext(int)
 t RestoreFilename(char const*, char*, int)
 t RestoreMaterialSystemObjects(int)
 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 t RotateBetween(Vector const&, Vector const&)
 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
 t SeedRandSIMD(unsigned int)
 t SetIdentityMatrix(matrix3x4_t&)
 t SetScaleMatrix(float, float, float, matrix3x4_t&)
 t SetupMatrixAngles(QAngle const&)
 t SetupMatrixAxisRot(Vector const&, float)
 t SetupMatrixAxisToAxisRot(Vector const&, Vector const&)
 t SetupMatrixIdentity()
 t SetupMatrixOrgAngles(Vector const&, QAngle const&)
 t SetupMatrixProjection(Vector const&, VPlane const&)
 t SetupMatrixReflection(VPlane const&)
 t SetupMatrixScale(Vector const&)
 t SetupMatrixTranslation(Vector const&)
 t SignbitsForPlane(cplane_t*)
 t SmoothCurve(float)
 t SmoothCurve_Tweak(float, float, float)
 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
 t SolveQuadratic(float, float, float, float&, float&)
 t SortLessFunc(mstudiovertanim_t const&, mstudiovertanim_t const&)
 t SortLessFuncWrinkle(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&)
 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
 t SplitScreenConVarRef::Init(char const*, bool)
 t SplitScreenConVarRef::IsValid() const
 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
 t SrgbGammaTo360Gamma(float)
 t SrgbGammaToLinear(float)
 t SrgbLinearToGamma(float)
 t StringAfterPrefix(char const*, char const*)
 t StringAfterPrefixCaseSensitive(char const*, char const*)
 t StringLessThan(char const* const&, char const* const&)
 t StudioByteSwap::ActivateByteSwapping(bool)
 t StudioByteSwap::ByteswapANI(studiohdr_t*, void*, int, void const*, int, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::ByteswapFrameAnimData(studiohdr_t*&, mstudioanimdesc_t*, int, unsigned char*&, unsigned char*&)
 t StudioByteSwap::ByteswapIKErrors(unsigned char*&, unsigned char*&, int, int, int)
 t StudioByteSwap::ByteswapIKRules(studiohdr_t*&, int, int, unsigned char*&, unsigned char*&, int)
 t StudioByteSwap::ByteswapMDL(void*, int, void const*, int, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::ByteswapPHY(void*, int, void const*, int, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::ByteswapRLEAnimData(mstudioanimdesc_t*, int, unsigned char*&, unsigned char*&)
 t StudioByteSwap::ByteswapStudioFile(char const*, void*, int, void const*, int, studiohdr_t*, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::ByteswapVTX(void*, int, void const*, int, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::ByteswapVTX_Indices(unsigned char*, unsigned char*, int)
 t StudioByteSwap::ByteswapVVD(void*, int, void const*, int, bool (*)(void const*, int, void**, int*))
 t StudioByteSwap::SetCollisionInterface(IPhysicsCollision*)
 t StudioByteSwap::SetVerbose(bool)
 t StudioByteSwap::SourceIsNative(bool)
 t StudioByteSwap::legacysurfaceheader_t::GetBaseMap()
 t StudioByteSwap::swapcompactsurfaceheader_t::GetBaseMap()
 t Sys_GetFactory(CSysModule*)
 t Sys_GetFactory(char const*)
 t Sys_GetFactoryThis()
 t Sys_IsDebuggerPresent()
 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
 t Sys_LoadLibrary(char const*)
 t Sys_LoadLibraryGuts(char const*)
 t Sys_LoadModule(char const*)
 t Sys_RunningWithDebugModules()
 t Sys_UnloadModule(CSysModule*)
 t TetrahedronVolume(Vector const&, Vector const&, Vector const&, Vector const&)
 t TextureToLinear(int)
 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
 t TriangleArea(Vector const&, Vector const&, Vector const&)
 t UnitTestQuatExpLog()
 t UnitTestRotateBetween()
 t UnitTestVectorFLU()
 t UpdateOrCreate(char const*, char*, int, char const*, bool (*)(char const*, char const*, char const*, void*), bool, void*)
 t VMatrix::GetScale() const
 t VMatrix::InverseGeneral(VMatrix&) const
 t VMatrix::InverseTR() const
 t VMatrix::InverseTR(VMatrix&) const
 t VMatrix::IsRotationMatrix() const
 t VMatrix::MatrixMul(VMatrix const&, VMatrix&) const
 t VMatrix::NormalizeBasisVectors() const
 t VMatrix::Scale(Vector const&)
 t VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
 t VMatrix::Transpose() const
 t VMatrix::Transpose3x3() const
 t VMatrix::operator*(VMatrix const&) const
 t VMatrix::operator*(VPlane const&) const
 t VMatrix::operator=(VMatrix const&)
 t VMatrix::operator==(VMatrix const&) const
 t V_AddBackSlashesToSpecialChars(char const*)
 t V_AppendSlash(char*, int, char)
 t V_BinToString(char*, void*, unsigned int)
 t V_BoyerMooreSearch(unsigned char const*, int, unsigned char const*, int)
 t V_ComposeFileName(char const*, char const*, char*, int)
 t V_DefaultExtension(char*, char const*, int)
 t V_ExtractFileExtension(char const*, char*, int)
 t V_ExtractFilePath(char const*, char*, int)
 t V_FileBase(char const*, char*, int)
 t V_FixDoubleSlashes(char*)
 t V_FixSlashes(char*, char)
 t V_FixupPathName(char*, int, char const*)
 t V_FixupPathSpaceToUnderscore(char*)
 t V_GetCurrentDirectory(char*, int)
 t V_GetFileExtension(char const*)
 t V_GetFileExtensionSafe(char const*)
 t V_IsAbsolutePath(char const*)
 t V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)
 t V_MakeAbsolutePath(char*, int, char const*, char const*)
 t V_MakeRelativePath(char const*, char const*, char*, int)
 t V_ParseLine(char const*, char*, int, bool*)
 t V_ParseToken(char const*, char*, int, bool*, characterset_t*)
 t V_PathsMatch(char const*, char const*)
 t V_RandomString(int)
 t V_RemoveDotSlashes(char*, char)
 t V_SetCurrentDirectory(char const*)
 t V_SetExtension(char*, char const*, int)
 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 t V_SplitWString(wchar_t const*, wchar_t const*, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
 t V_SplitWString2(wchar_t const*, wchar_t const**, int, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
 t V_StrLeft(char const*, int, char*, int)
 t V_StrRight(char const*, int, char*, int)
 t V_StrSlice(char const*, int, int, char*, int)
 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
 t V_StringMatchesPattern(char const*, char const*, int)
 t V_StringToBin(char const*, void*, unsigned int)
 t V_StringToColor32(color32_s*, char const*)
 t V_StringToFloatArray(float*, int, char const*)
 t V_StringToIntArray(int*, int, char const*)
 t V_StringToVector(float*, char const*)
 t V_StripExtension(char const*, char*, int)
 t V_StripFilename(char*)
 t V_StripLastDir(char*, int)
 t V_StripLeadingWhitespace(char*)
 t V_StripSurroundingQuotes(char*)
 t V_StripTrailingSlash(char*)
 t V_StripTrailingWhitespace(char*)
 t V_TokenWaiting(char const*)
 t V_TranslateLineFeedsToUnix(char*)
 t V_UnqualifiedFileName(char const*)
 t V_atod(char const*)
 t V_atof(char const*)
 t V_atoi(char const*)
 t V_atoi64(char const*)
 t V_atoui64(char const*)
 t V_binarytohex(unsigned char const*, int, char*, int)
 t V_hextobinary(char const*, int, unsigned char*, int)
 t V_nibble(char)
 t V_normalizeFloatString(char*)
 t V_pretifymem(float, int, bool)
 t V_pretifynum(long long)
 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
 t V_snprintf(char*, int, char const*, ...)
 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 t V_strcasecmp(char const*, char const*)
 t V_stristr(char const*, char const*)
 t V_stristr(char*, char const*)
 t V_strncasecmp(char const*, char const*, int)
 t V_strncat(char*, char const*, unsigned int, int)
 t V_strnchr(char const*, char, int)
 t V_strncmp(char const*, char const*, int)
 t V_strncpy(char*, char const*, int)
 t V_strnicmp(char const*, char const*, int)
 t V_strnistr(char const*, char const*, int)
 t V_strnlwr(char*, unsigned int)
 t V_strtowcs(char const*, int, wchar_t*, int)
 t V_vsnprintf(char*, int, char const*, char*)
 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
 t V_wcsistr(wchar_t const*, wchar_t const*)
 t V_wcsistr(wchar_t*, wchar_t const*)
 t V_wcsncat(wchar_t*, wchar_t const*, int, int)
 t V_wcsncpy(wchar_t*, wchar_t const*, int)
 t V_wcstostr(wchar_t const*, int, char*, int)
 t Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
 t Vector3DMultiplyPositionProjective(VMatrix const&, Vector const&, Vector&)
 t Vector3DMultiplyProjective(VMatrix const&, Vector const&, Vector&)
 t Vector3DMultiplyTranspose(VMatrix const&, Vector const&, Vector&)
 t Vector4DMultiply(VMatrix const&, Vector4D const&, Vector4D&)
 t Vector4DMultiplyPosition(VMatrix const&, Vector const&, Vector4D&)
 t Vector4DMultiplyTranspose(VMatrix const&, Vector4D const&, Vector4D&)
 t VectorAngles(Vector const&, QAngle&)
 t VectorAngles(Vector const&, Vector const&, QAngle&)
 t VectorAngles(float const*, float*)
 t VectorCompare(float const*, float const*)
 t VectorIRotate(float const*, matrix3x4_t const&, float*)
 t VectorITransform(float const*, matrix3x4_t const&, float*)
 t VectorMatrix(Vector const&, matrix3x4_t&)
 t VectorNormalize(Vector&)
 t VectorPerpendicularToVector(Vector const&, Vector*)
 t VectorRotate(Vector const&, QAngle const&, Vector&)
 t VectorRotate(Vector const&, Quaternion const&, Vector&)
 t VectorRotate(float const*, matrix3x4_t const&, float*)
 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
 t VectorTransform(float const*, matrix3x4_t const&, float*)
 t VectorVectors(Vector const&, Vector&, Vector&)
 t VectorYawRotate(Vector const&, float, Vector&)
 t VectorsEqual(float const*, float const*)
 t X360GammaToLinear(float)
 t X360LinearToGamma(float)
 t _GLOBAL__sub_I_Four_PointFives
 t _GLOBAL__sub_I__Z10HashStringPKc
 t _GLOBAL__sub_I__Z12SeedRandSIMDj
 t _GLOBAL__sub_I__Z18GetModSubdirectoryPKcPci
 t _GLOBAL__sub_I__Z18GetTextureCombinerv
 t _GLOBAL__sub_I__Z19SetupMatrixIdentityv
 t _GLOBAL__sub_I__Z21ConnectTier1LibrariesPPFPvPKcPiEi
 t _GLOBAL__sub_I__Z21ConnectTier3LibrariesPPFPvPKcPiEi
 t _GLOBAL__sub_I__Z28DefaultConditionalSymbolProcPKc
 t _GLOBAL__sub_I__Z9_V_memsetPvii
 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
 t _GLOBAL__sub_I__ZN10DataLinker6StreamC2Ev
 t _GLOBAL__sub_I__ZN12studiodata_t11s_AllocatorE
 t _GLOBAL__sub_I__ZN14CUtlMemoryPool12g_ReportFuncE
 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
 t _GLOBAL__sub_I__ZN14StudioByteSwap11g_pFilenameE
 t _GLOBAL__sub_I__ZN15CUtlBinaryBlockC2Eii
 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
 t _GLOBAL__sub_I__ZN19CModelLookupContextC2EiPK11studiohdr_t
 t _GLOBAL__sub_I__ZN22CBaseResourcePrecacher9sm_pFirstE
 t _GLOBAL__sub_I__ZN23CSchemaClassBindingBase20sm_pClassBindingListE
 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
 t _GLOBAL__sub_I__ZN9KeyValues22s_pfGetSymbolForStringE
 t _GLOBAL__sub_I__ZNSt14error_categoryC2Ev
 t _GLOBAL__sub_I___cxa_pure_virtual
 t _GLOBAL__sub_I_cvar
 t _GLOBAL__sub_I_eh_alloc.cc
 t _GLOBAL__sub_I_g_CombinerWriter
 t _GLOBAL__sub_I_g_DataCache
 t _GLOBAL__sub_I_g_PrecacheSystem
 t _GLOBAL__sub_I_g_ResourceAccessControl
 t _GLOBAL__sub_I_g_aFadeData
 t _GLOBAL__sub_I_lineartovertex
 t _GLOBAL__sub_I_mod_load_preload
 t _GLOBAL__sub_I_s_StringCharConversion
 t _GLOBAL__sub_I_s_bMathlibInitialized
 t _GLOBAL__sub_I_s_pInterfaceRegs
 t _InvRSquared(float const*)
 t _Unwind_Backtrace
 t _Unwind_DebugHook
 t _Unwind_DeleteException
 t _Unwind_FindEnclosingFunction
 t _Unwind_Find_FDE
 t _Unwind_ForcedUnwind
 t _Unwind_ForcedUnwind_Phase2
 t _Unwind_GetCFA
 t _Unwind_GetDataRelBase
 t _Unwind_GetGR
 t _Unwind_GetIP
 t _Unwind_GetIPInfo
 t _Unwind_GetLanguageSpecificData
 t _Unwind_GetRegionStart
 t _Unwind_GetTextRelBase
 t _Unwind_IteratePhdrCallback
 t _Unwind_RaiseException
 t _Unwind_RaiseException_Phase2
 t _Unwind_Resume
 t _Unwind_Resume_or_Rethrow
 t _Unwind_SetGR
 t _Unwind_SetIP
 t _Unwind_SetSpColumn
 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
 t _V_UTF8ToUnicode(char const*, wchar_t*, int)
 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
 t _V_UnicodeToUTF8(wchar_t const*, char*, int)
 t _V_memcmp(void const*, void const*, int)
 t _V_memcpy(void*, void const*, int)
 t _V_memmove(void*, void const*, int)
 t _V_memset(void*, int, int)
 t _V_strcmp(char const*, char const*)
 t _V_strcpy(char*, char const*)
 t _V_stricmp(char const*, char const*)
 t _V_stricmp_NegativeForUnequal(char const*, char const*)
 t _V_strlen(char const*)
 t _V_strlower(char*)
 t _V_strnlen(char const*, int)
 t _V_strrchr(char const*, char)
 t _V_strstr(char const*, char const*)
 t _V_strupr(char*)
 t _V_wcscmp(wchar_t const*, wchar_t const*)
 t _V_wcslen(wchar_t const*)
 t _V_wcslower(wchar_t*)
 t _V_wcsupr(wchar_t*)
 t _VectorNormalizeFast(Vector&)
 t __CreateCDataCacheIDataCache_interface()
 t __CreateCMDLCacheIMDLCache_interface()
 t __CreateCMDLCacheIStudioDataCache_interface()
 t __CreateCPrecacheSystemIPrecacheSystem_interface()
 t __CreateCResourceAccessControlIResourceAccessControl_interface()
 t __cxa_allocate_dependent_exception
 t __cxa_allocate_exception
 t __cxa_begin_catch
 t __cxa_call_terminate
 t __cxa_call_unexpected
 t __cxa_current_exception_type
 t __cxa_demangle
 t __cxa_end_catch
 t __cxa_free_dependent_exception
 t __cxa_free_exception
 t __cxa_get_exception_ptr
 t __cxa_get_globals
 t __cxa_get_globals_fast
 t __cxa_guard_abort
 t __cxa_guard_acquire
 t __cxa_guard_release
 t __cxa_pure_virtual
 t __cxa_rethrow
 t __cxa_throw
 t __cxxabiv1::__enum_type_info::~__enum_type_info()
 t __cxxabiv1::__forced_unwind::~__forced_unwind()
 t __cxxabiv1::__foreign_exception::~__foreign_exception()
 t __cxxabiv1::__terminate(void (*)())
 t __cxxabiv1::__unexpected(void (*)())
 t __deregister_frame
 t __deregister_frame_info
 t __deregister_frame_info_bases
 t __do_global_ctors_aux
 t __do_global_dtors_aux
 t __dynamic_cast
 t __frame_state_for
 t __gcclibcxx_demangle_callback
 t __gnu_cxx::__concurrence_lock_error::what() const
 t __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
 t __gnu_cxx::__concurrence_unlock_error::what() const
 t __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
 t __gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)
 t __gnu_cxx::__scoped_lock::~__scoped_lock()
 t __gnu_cxx::__verbose_terminate_handler()
 t __gnu_cxx::recursive_init_error::~recursive_init_error()
 t __gxx_dependent_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
 t __gxx_personality_v0
 t __i686.get_pc_thunk.bx
 t __i686.get_pc_thunk.cx
 t __i686.get_pc_thunk.dx
 t __register_frame
 t __register_frame_info
 t __register_frame_info_bases
 t __register_frame_info_table
 t __register_frame_info_table_bases
 t __register_frame_table
 t __udivdi3
 t _calloc_dbg
 t _expand_dbg
 t _free_dbg
 t _malloc_dbg
 t _msize_dbg
 t _nh_malloc_dbg
 t _realloc_dbg
 t _rsqrtf(float)
 t _sqrtf(float)
 t add_fdes
 t base_from_cb_data
 t base_from_object
 t base_of_encoded_value(unsigned char, _Unwind_Context*)
 t bool __gnu_cxx::operator==<char const*, std::string>(__gnu_cxx::__normal_iterator<char const*, std::string> const&, __gnu_cxx::__normal_iterator<char const*, std::string> const&)
 t bool __gnu_cxx::operator==<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)
 t cIntToHexDigit(int)
 t char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long) [clone .constprop.4]
 t classify_object_over_fdes
 t clear_anim_cache(CCommand const&)
 t d_add_substitution
 t d_append_buffer
 t d_append_char
 t d_append_num
 t d_append_string
 t d_bare_function_type
 t d_call_offset
 t d_compact_number
 t d_cv_qualifiers
 t d_demangle_callback.constprop.18
 t d_encoding
 t d_expr_primary
 t d_expression
 t d_exprlist
 t d_find_pack
 t d_growable_string_callback_adapter
 t d_index_template_argument
 t d_make_builtin_type
 t d_make_comp
 t d_make_empty
 t d_make_name
 t d_mangled_name
 t d_name
 t d_number.isra.0
 t d_operator_name
 t d_parmlist
 t d_print_array_type.isra.10
 t d_print_cast.isra.13.part.14
 t d_print_comp
 t d_print_expr_op
 t d_print_flush
 t d_print_function_type.isra.12
 t d_print_mod
 t d_print_mod_list
 t d_print_subexpr
 t d_source_name
 t d_substitution
 t d_template_args
 t d_template_param
 t d_type
 t d_unqualified_name
 t datamap_t* DataMapInit<mstudio_frame_anim_t>(mstudio_frame_anim_t*)
 t datamap_t* DataMapInit<mstudio_meshvertexdata_t>(mstudio_meshvertexdata_t*)
 t datamap_t* DataMapInit<mstudio_modelvertexdata_t>(mstudio_modelvertexdata_t*)
 t datamap_t* DataMapInit<mstudio_rle_anim_t>(mstudio_rle_anim_t*)
 t datamap_t* DataMapInit<mstudioactivitymodifier_t>(mstudioactivitymodifier_t*)
 t datamap_t* DataMapInit<mstudioaimatbone_t>(mstudioaimatbone_t*)
 t datamap_t* DataMapInit<mstudioaimconstraint_t>(mstudioaimconstraint_t*)
 t datamap_t* DataMapInit<mstudioanim_valueptr_t>(mstudioanim_valueptr_t*)
 t datamap_t* DataMapInit<mstudioanimblock_t>(mstudioanimblock_t*)
 t datamap_t* DataMapInit<mstudioanimdesc_t>(mstudioanimdesc_t*)
 t datamap_t* DataMapInit<mstudioanimsections_t>(mstudioanimsections_t*)
 t datamap_t* DataMapInit<mstudioattachment_t>(mstudioattachment_t*)
 t datamap_t* DataMapInit<mstudioautolayer_t>(mstudioautolayer_t*)
 t datamap_t* DataMapInit<mstudioaxisinterpbone_t>(mstudioaxisinterpbone_t*)
 t datamap_t* DataMapInit<mstudiobbox_t>(mstudiobbox_t*)
 t datamap_t* DataMapInit<mstudiobodyparts_t>(mstudiobodyparts_t*)
 t datamap_t* DataMapInit<mstudiobone_t>(mstudiobone_t*)
 t datamap_t* DataMapInit<mstudiobonecontroller_t>(mstudiobonecontroller_t*)
 t datamap_t* DataMapInit<mstudioboneflexdriver_t>(mstudioboneflexdriver_t*)
 t datamap_t* DataMapInit<mstudioboneflexdrivercontrol_t>(mstudioboneflexdrivercontrol_t*)
 t datamap_t* DataMapInit<mstudioboneweight_t>(mstudioboneweight_t*)
 t datamap_t* DataMapInit<mstudiocompressedikerror_t>(mstudiocompressedikerror_t*)
 t datamap_t* DataMapInit<mstudioconstraintslave_t>(mstudioconstraintslave_t*)
 t datamap_t* DataMapInit<mstudioconstrainttarget_t>(mstudioconstrainttarget_t*)
 t datamap_t* DataMapInit<mstudioevent_t>(mstudioevent_t*)
 t datamap_t* DataMapInit<mstudioeyeball_t>(mstudioeyeball_t*)
 t datamap_t* DataMapInit<mstudioflex_t>(mstudioflex_t*)
 t datamap_t* DataMapInit<mstudioflexcontroller_t>(mstudioflexcontroller_t*)
 t datamap_t* DataMapInit<mstudioflexcontrollerui_t>(mstudioflexcontrollerui_t*)
 t datamap_t* DataMapInit<mstudioflexdesc_t>(mstudioflexdesc_t*)
 t datamap_t* DataMapInit<mstudioflexop_t>(mstudioflexop_t*)
 t datamap_t* DataMapInit<mstudioflexrule_t>(mstudioflexrule_t*)
 t datamap_t* DataMapInit<mstudiohitboxset_t>(mstudiohitboxset_t*)
 t datamap_t* DataMapInit<mstudioikchain_t>(mstudioikchain_t*)
 t datamap_t* DataMapInit<mstudioikconstraint_t>(mstudioikconstraint_t*)
 t datamap_t* DataMapInit<mstudioikerror_t>(mstudioikerror_t*)
 t datamap_t* DataMapInit<mstudioiklink_t>(mstudioiklink_t*)
 t datamap_t* DataMapInit<mstudioiklock_t>(mstudioiklock_t*)
 t datamap_t* DataMapInit<mstudioikrule_t>(mstudioikrule_t*)
 t datamap_t* DataMapInit<mstudiojigglebone_t>(mstudiojigglebone_t*)
 t datamap_t* DataMapInit<mstudiolinearbone_t>(mstudiolinearbone_t*)
 t datamap_t* DataMapInit<mstudiolocalhierarchy_t>(mstudiolocalhierarchy_t*)
 t datamap_t* DataMapInit<mstudiomesh_t>(mstudiomesh_t*)
 t datamap_t* DataMapInit<mstudiomodel_t>(mstudiomodel_t*)
 t datamap_t* DataMapInit<mstudiomodelgroup_t>(mstudiomodelgroup_t*)
 t datamap_t* DataMapInit<mstudiomouth_t>(mstudiomouth_t*)
 t datamap_t* DataMapInit<mstudiomovement_t>(mstudiomovement_t*)
 t datamap_t* DataMapInit<mstudioorientconstraint_t>(mstudioorientconstraint_t*)
 t datamap_t* DataMapInit<mstudioparentconstraint_t>(mstudioparentconstraint_t*)
 t datamap_t* DataMapInit<mstudiopointconstraint_t>(mstudiopointconstraint_t*)
 t datamap_t* DataMapInit<mstudioposeparamdesc_t>(mstudioposeparamdesc_t*)
 t datamap_t* DataMapInit<mstudioquatinterpbone_t>(mstudioquatinterpbone_t*)
 t datamap_t* DataMapInit<mstudioquatinterpinfo_t>(mstudioquatinterpinfo_t*)
 t datamap_t* DataMapInit<mstudioseqdesc_t>(mstudioseqdesc_t*)
 t datamap_t* DataMapInit<mstudiosrcbonetransform_t>(mstudiosrcbonetransform_t*)
 t datamap_t* DataMapInit<mstudiotexture_t>(mstudiotexture_t*)
 t datamap_t* DataMapInit<mstudiotwistbone_t>(mstudiotwistbone_t*)
 t datamap_t* DataMapInit<mstudiotwistbonetarget_t>(mstudiotwistbonetarget_t*)
 t datamap_t* DataMapInit<mstudiovertanim_t>(mstudiovertanim_t*)
 t datamap_t* DataMapInit<mstudiovertanim_wrinkle_t>(mstudiovertanim_wrinkle_t*)
 t datamap_t* DataMapInit<mstudiovertex_t>(mstudiovertex_t*)
 t datamap_t* DataMapInit<phyheader_s>(phyheader_s*)
 t datamap_t* DataMapInit<studiohdr2_t>(studiohdr2_t*)
 t datamap_t* DataMapInit<studiohdr_t>(studiohdr_t*)
 t datamap_t* DataMapInit<vertexFileFixup_t>(vertexFileFixup_t*)
 t datamap_t* DataMapInit<vertexFileHeader_t>(vertexFileHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BodyPartHeader_t>(OptimizedModel::BodyPartHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::BoneStateChangeHeader_t>(OptimizedModel::BoneStateChangeHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::FileHeader_t>(OptimizedModel::FileHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementHeader_t>(OptimizedModel::MaterialReplacementHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MaterialReplacementListHeader_t>(OptimizedModel::MaterialReplacementListHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::MeshHeader_t>(OptimizedModel::MeshHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelHeader_t>(OptimizedModel::ModelHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::ModelLODHeader_t>(OptimizedModel::ModelLODHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripGroupHeader_t>(OptimizedModel::StripGroupHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::StripHeader_t>(OptimizedModel::StripHeader_t*)
 t datamap_t* OptimizedModel::DataMapInit<OptimizedModel::Vertex_t>(OptimizedModel::Vertex_t*)
 t datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::legacysurfaceheader_t>(StudioByteSwap::legacysurfaceheader_t*)
 t datamap_t* StudioByteSwap::DataMapInit<StudioByteSwap::swapcompactsurfaceheader_t>(StudioByteSwap::swapcompactsurfaceheader_t*)
 t execute_cfa_program
 t execute_stack_op
 t fde_mixed_encoding_compare
 t fde_single_encoding_compare
 t fde_unencoded_compare
 t float StudioByteSwap::SrcNative<float>(float*)
 t fourplanes_t::ComputeSignbits()
 t fourplanes_t::Get2Planes(VPlane*) const
 t fourplanes_t::Get4Planes(VPlane*) const
 t fourplanes_t::GetPlane(int, Vector*, float*) const
 t fourplanes_t::Set2Planes(VPlane const*)
 t fourplanes_t::Set4Planes(VPlane const*)
 t fourplanes_t::SetPlane(int, Vector const&, float)
 t frame_downheap
 t frame_dummy
 t frame_heapsort
 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
 t get_cie_encoding
 t get_fde_encoding
 t get_ttype_entry(lsda_header_info*, unsigned long) [clone .constprop.6]
 t iHexCharToInt(char)
 t init_dwarf_reg_size_table
 t int StudioByteSwap::DestNative<int>(int*)
 t int StudioByteSwap::SrcNative<int>(int*)
 t int V_sprintf_safe<128u>(char (&) [128u], char const*, ...)
 t int V_sprintf_safe<256u>(char (&) [256u], char const*, ...)
 t int V_sprintf_safe<260u>(char (&) [260u], char const*, ...)
 t int V_sprintf_safe<4096u>(char (&) [4096u], char const*, ...)
 t isbreakablewspace(wchar_t)
 t linear_search_fdes
 t mdlcache_dump_dictionary_state(CCommand const&)
 t mstudio_frame_anim_t::GetBaseMap()
 t mstudio_meshvertexdata_t::GetBaseMap()
 t mstudio_modelvertexdata_t::GetBaseMap()
 t mstudio_rle_anim_t::GetBaseMap()
 t mstudioactivitymodifier_t::GetBaseMap()
 t mstudioaimatbone_t::GetBaseMap()
 t mstudioaimconstraint_t::GetBaseMap()
 t mstudioanim_valueptr_t::GetBaseMap()
 t mstudioanimblock_t::GetBaseMap()
 t mstudioanimdesc_t::GetBaseMap()
 t mstudioanimdesc_t::hasAnimBlockBeenPreloaded(int) const
 t mstudioanimdesc_t::pAnim(int*) const
 t mstudioanimdesc_t::pAnim(int*, float&) const
 t mstudioanimdesc_t::pAnimBlock(int, int, bool) const
 t mstudioanimdesc_t::pHierarchy(int) const
 t mstudioanimdesc_t::pIKRule(int) const
 t mstudioanimsections_t::GetBaseMap()
 t mstudioattachment_t::GetBaseMap()
 t mstudioautolayer_t::GetBaseMap()
 t mstudioaxisinterpbone_t::GetBaseMap()
 t mstudiobbox_t::GetBaseMap()
 t mstudiobodyparts_t::GetBaseMap()
 t mstudiobone_t::GetBaseMap()
 t mstudiobonecontroller_t::GetBaseMap()
 t mstudioboneflexdriver_t::GetBaseMap()
 t mstudioboneflexdrivercontrol_t::GetBaseMap()
 t mstudioboneweight_t::GetBaseMap()
 t mstudiocompressedikerror_t::GetBaseMap()
 t mstudioconstraintslave_t::GetBaseMap()
 t mstudioconstrainttarget_t::GetBaseMap()
 t mstudioevent_t::GetBaseMap()
 t mstudioeyeball_t::GetBaseMap()
 t mstudioflex_t::GetBaseMap()
 t mstudioflexcontroller_t::GetBaseMap()
 t mstudioflexcontrollerui_t::GetBaseMap()
 t mstudioflexdesc_t::GetBaseMap()
 t mstudioflexop_t::GetBaseMap()
 t mstudioflexrule_t::GetBaseMap()
 t mstudiohitboxset_t::GetBaseMap()
 t mstudioikchain_t::GetBaseMap()
 t mstudioikconstraint_t::GetBaseMap()
 t mstudioikerror_t::GetBaseMap()
 t mstudioiklink_t::GetBaseMap()
 t mstudioiklock_t::GetBaseMap()
 t mstudioikrule_t::GetBaseMap()
 t mstudiojigglebone_t::GetBaseMap()
 t mstudiolinearbone_t::GetBaseMap()
 t mstudiolocalhierarchy_t::GetBaseMap()
 t mstudiomesh_t::GetBaseMap()
 t mstudiomodel_t::GetBaseMap()
 t mstudiomodelgroup_t::GetBaseMap()
 t mstudiomouth_t::GetBaseMap()
 t mstudiomovement_t::GetBaseMap()
 t mstudioorientconstraint_t::GetBaseMap()
 t mstudioparentconstraint_t::GetBaseMap()
 t mstudiopointconstraint_t::GetBaseMap()
 t mstudioposeparamdesc_t::GetBaseMap()
 t mstudioquatinterpbone_t::GetBaseMap()
 t mstudioquatinterpinfo_t::GetBaseMap()
 t mstudioseqdesc_t::GetBaseMap()
 t mstudiosrcbonetransform_t::GetBaseMap()
 t mstudiotexture_t::GetBaseMap()
 t mstudiotwistbone_t::GetBaseMap()
 t mstudiotwistbonetarget_t::GetBaseMap()
 t mstudiovertanim_t::GetBaseMap()
 t mstudiovertanim_wrinkle_t::GetBaseMap()
 t mstudiovertex_t::GetBaseMap()
 t nexttoken(char*, char const*, char)
 t non-virtual thunk to CEmptyConVar::GetName() const
 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
 t non-virtual thunk to CEmptyConVar::SetValue(float)
 t non-virtual thunk to CEmptyConVar::SetValue(int)
 t non-virtual thunk to CMDLCache::CacheVertexData(studiohdr_t*)
 t non-virtual thunk to CMDLCache::Connect(void* (*)(char const*, int*))
 t non-virtual thunk to CMDLCache::Disconnect()
 t non-virtual thunk to CMDLCache::GetDependencies()
 t non-virtual thunk to CMDLCache::GetItemName(unsigned int, void const*, char*, unsigned int)
 t non-virtual thunk to CMDLCache::GetTier()
 t non-virtual thunk to CMDLCache::HandleCacheNotification(DataCacheNotification_t const&)
 t non-virtual thunk to CMDLCache::Init()
 t non-virtual thunk to CMDLCache::QueryInterface(char const*)
 t non-virtual thunk to CMDLCache::Reconnect(void* (*)(char const*, int*), char const*)
 t non-virtual thunk to CMDLCache::Shutdown()
 t non-virtual thunk to CMDLCache::VerifyHeaders(studiohdr_t*)
 t non-virtual thunk to CMDLCache::~CMDLCache()
 t non-virtual thunk to CSplitScreenAddedConVar::GetBaseName() const
 t non-virtual thunk to CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
 t non-virtual thunk to ConVar::GetBaseName() const
 t non-virtual thunk to ConVar::GetName() const
 t non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
 t non-virtual thunk to ConVar::IsFlagSet(int) const
 t non-virtual thunk to ConVar::SetValue(Color)
 t non-virtual thunk to ConVar::SetValue(char const*)
 t non-virtual thunk to ConVar::SetValue(float)
 t non-virtual thunk to ConVar::SetValue(int)
 t operator delete(void*)
 t operator delete[](void*)
 t operator new(unsigned int)
 t operator new(unsigned int, int, char const*, int)
 t operator new[](unsigned int)
 t operator new[](unsigned int, int, char const*, int)
 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*) [clone .constprop.5]
 t phyheader_s::GetBaseMap()
 t read_encoded_value
 t read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)
 t read_encoded_value_with_base
 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
 t read_sleb128
 t read_sleb128(unsigned char const*, long*)
 t read_uleb128
 t read_uleb128(unsigned char const*, unsigned long*)
 t search_object
 t set_fast_math
 t short StudioByteSwap::SrcNative<short>(short*)
 t size_of_encoded_value
 t std::_Rb_tree<int, std::pair<int const, DataLinker::LinkSourceDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkSourceDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkSourceDesc_t> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, DataLinker::LinkSourceDesc_t> >*)
 t std::_Rb_tree<int, std::pair<int const, DataLinker::LinkTargetDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkTargetDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkTargetDesc_t> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, DataLinker::LinkTargetDesc_t> >*)
 t std::_Rb_tree<std::string, std::pair<std::string const, DataLinker::Stream::BlockStats_t>, std::_Select1st<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >*)
 t std::_Rb_tree_black_count(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*)
 t std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
 t std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 t std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 t std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 t std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 t std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkSourceDesc_t> > std::_Rb_tree<int, std::pair<int const, DataLinker::LinkSourceDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkSourceDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkSourceDesc_t> > >::_M_insert_<std::pair<int const, DataLinker::LinkSourceDesc_t> >(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<int const, DataLinker::LinkSourceDesc_t>&&)
 t std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkSourceDesc_t> > std::_Rb_tree<int, std::pair<int const, DataLinker::LinkSourceDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkSourceDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkSourceDesc_t> > >::_M_insert_unique_<std::pair<int const, DataLinker::LinkSourceDesc_t> >(std::_Rb_tree_const_iterator<std::pair<int const, DataLinker::LinkSourceDesc_t> >, std::pair<int const, DataLinker::LinkSourceDesc_t>&&)
 t std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkTargetDesc_t> > std::_Rb_tree<int, std::pair<int const, DataLinker::LinkTargetDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkTargetDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkTargetDesc_t> > >::_M_insert_<std::pair<int const, DataLinker::LinkTargetDesc_t> >(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<int const, DataLinker::LinkTargetDesc_t>&&)
 t std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkTargetDesc_t> > std::_Rb_tree<int, std::pair<int const, DataLinker::LinkTargetDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkTargetDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkTargetDesc_t> > >::_M_insert_unique_<std::pair<int const, DataLinker::LinkTargetDesc_t> >(std::_Rb_tree_const_iterator<std::pair<int const, DataLinker::LinkTargetDesc_t> >, std::pair<int const, DataLinker::LinkTargetDesc_t>&&)
 t std::_Rb_tree_iterator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > std::_Rb_tree<std::string, std::pair<std::string const, DataLinker::Stream::BlockStats_t>, std::_Select1st<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > >::_M_insert_<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, DataLinker::Stream::BlockStats_t>&&)
 t std::_Rb_tree_iterator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > std::_Rb_tree<std::string, std::pair<std::string const, DataLinker::Stream::BlockStats_t>, std::_Select1st<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > >::_M_insert_unique_<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >(std::_Rb_tree_const_iterator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, std::pair<std::string const, DataLinker::Stream::BlockStats_t>&&)
 t std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 t std::_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)
 t std::_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)
 t std::__exception_ptr::exception_ptr::_M_addref()
 t std::__exception_ptr::exception_ptr::_M_get() const
 t std::__exception_ptr::exception_ptr::_M_release()
 t std::__exception_ptr::exception_ptr::_M_safe_bool_dummy()
 t std::__exception_ptr::exception_ptr::__cxa_exception_type() const
 t std::__exception_ptr::exception_ptr::exception_ptr()
 t std::__exception_ptr::exception_ptr::exception_ptr(std::__exception_ptr::exception_ptr const&)
 t std::__exception_ptr::exception_ptr::exception_ptr(void (std::__exception_ptr::exception_ptr::*)())
 t std::__exception_ptr::exception_ptr::exception_ptr(void*)
 t std::__exception_ptr::exception_ptr::operator void (std::__exception_ptr::exception_ptr::*)()() const
 t std::__exception_ptr::exception_ptr::operator!() const
 t std::__exception_ptr::exception_ptr::operator=(std::__exception_ptr::exception_ptr const&)
 t std::__exception_ptr::exception_ptr::swap(std::__exception_ptr::exception_ptr&)
 t std::__exception_ptr::exception_ptr::~exception_ptr()
 t std::__exception_ptr::operator!=(std::__exception_ptr::exception_ptr const&, std::__exception_ptr::exception_ptr const&)
 t std::__exception_ptr::operator==(std::__exception_ptr::exception_ptr const&, std::__exception_ptr::exception_ptr const&)
 t std::__future_base::_Result_base::_Result_base()
 t std::__future_base::_Result_base::~_Result_base()
 t std::__future_base::_State_base::_M_run_deferred()
 t std::__future_base::_State_base::~_State_base()
 t std::__throw_bad_alloc()
 t std::__throw_bad_cast()
 t std::__throw_bad_exception()
 t std::__throw_bad_function_call()
 t std::__throw_bad_typeid()
 t std::__throw_domain_error(char const*)
 t std::__throw_future_error(int)
 t std::__throw_invalid_argument(char const*)
 t std::__throw_ios_failure(char const*)
 t std::__throw_length_error(char const*)
 t std::__throw_logic_error(char const*)
 t std::__throw_out_of_range(char const*)
 t std::__throw_overflow_error(char const*)
 t std::__throw_range_error(char const*)
 t std::__throw_regex_error(std::regex_constants::error_type)
 t std::__throw_runtime_error(char const*)
 t std::__throw_system_error(int)
 t std::__throw_underflow_error(char const*)
 t std::bad_alloc::what() const
 t std::bad_alloc::~bad_alloc()
 t std::bad_cast::what() const
 t std::bad_cast::~bad_cast()
 t std::bad_exception::what() const
 t std::bad_exception::~bad_exception()
 t std::bad_function_call::~bad_function_call()
 t std::bad_typeid::what() const
 t std::bad_typeid::~bad_typeid()
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned int, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::initializer_list<char>, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned int, unsigned int)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned int, unsigned int, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string&&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned int, char, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 t std::condition_variable::condition_variable()
 t std::condition_variable::notify_all()
 t std::condition_variable::notify_one()
 t std::condition_variable::wait(std::unique_lock<std::mutex>&)
 t std::condition_variable::~condition_variable()
 t std::condition_variable_any::condition_variable_any()
 t std::condition_variable_any::~condition_variable_any()
 t std::current_exception()
 t std::domain_error::domain_error(std::string const&)
 t std::domain_error::~domain_error()
 t std::error_category::default_error_condition(int) const
 t std::error_category::equivalent(int, std::error_condition const&) const
 t std::error_category::equivalent(std::error_code const&, int) const
 t std::error_category::error_category()
 t std::error_category::~error_category()
 t std::error_code::default_error_condition() const
 t std::exception::what() const
 t std::exception::~exception()
 t std::future_category()
 t std::future_error::what() const
 t std::future_error::~future_error()
 t std::generic_category()
 t std::invalid_argument::invalid_argument(std::string const&)
 t std::invalid_argument::~invalid_argument()
 t std::ios_base::failure::failure(std::string const&)
 t std::ios_base::failure::what() const
 t std::ios_base::failure::~failure()
 t std::length_error::length_error(std::string const&)
 t std::length_error::~length_error()
 t std::local_Rb_tree_rotate_left(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)
 t std::local_Rb_tree_rotate_right(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&)
 t std::logic_error::logic_error(std::string const&)
 t std::logic_error::what() const
 t std::logic_error::~logic_error()
 t std::out_of_range::out_of_range(std::string const&)
 t std::out_of_range::~out_of_range()
 t std::overflow_error::overflow_error(std::string const&)
 t std::overflow_error::~overflow_error()
 t std::pair<std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkSourceDesc_t> >, bool> std::_Rb_tree<int, std::pair<int const, DataLinker::LinkSourceDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkSourceDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkSourceDesc_t> > >::_M_insert_unique<std::pair<int const, DataLinker::LinkSourceDesc_t> >(std::pair<int const, DataLinker::LinkSourceDesc_t>&&)
 t std::pair<std::_Rb_tree_iterator<std::pair<int const, DataLinker::LinkTargetDesc_t> >, bool> std::_Rb_tree<int, std::pair<int const, DataLinker::LinkTargetDesc_t>, std::_Select1st<std::pair<int const, DataLinker::LinkTargetDesc_t> >, std::less<int>, std::allocator<std::pair<int const, DataLinker::LinkTargetDesc_t> > >::_M_insert_unique<std::pair<int const, DataLinker::LinkTargetDesc_t> >(std::pair<int const, DataLinker::LinkTargetDesc_t>&&)
 t std::pair<std::_Rb_tree_iterator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, bool> std::_Rb_tree<std::string, std::pair<std::string const, DataLinker::Stream::BlockStats_t>, std::_Select1st<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, DataLinker::Stream::BlockStats_t> > >::_M_insert_unique<std::pair<std::string const, DataLinker::Stream::BlockStats_t> >(std::pair<std::string const, DataLinker::Stream::BlockStats_t>&&)
 t std::range_error::range_error(std::string const&)
 t std::range_error::~range_error()
 t std::regex_error::regex_error(std::regex_constants::error_type)
 t std::regex_error::~regex_error()
 t std::rethrow_exception(std::__exception_ptr::exception_ptr)
 t std::runtime_error::runtime_error(std::string const&)
 t std::runtime_error::what() const
 t std::runtime_error::~runtime_error()
 t std::set_terminate(void (*)())
 t std::set_unexpected(void (*)())
 t std::string::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
 t std::string::_M_assign(char*, unsigned int, char)
 t std::string::_M_check(unsigned int, char const*) const
 t std::string::_M_check_length(unsigned int, unsigned int, char const*) const
 t std::string::_M_copy(char*, char const*, unsigned int)
 t std::string::_M_data() const
 t std::string::_M_data(char*)
 t std::string::_M_disjunct(char const*) const
 t std::string::_M_ibegin() const
 t std::string::_M_iend() const
 t std::string::_M_leak()
 t std::string::_M_leak_hard()
 t std::string::_M_limit(unsigned int, unsigned int) const
 t std::string::_M_move(char*, char const*, unsigned int)
 t std::string::_M_mutate(unsigned int, unsigned int, unsigned int)
 t std::string::_M_rep() const
 t std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
 t std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)
 t std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned int)
 t std::string::_Rep::_M_destroy(std::allocator<char> const&)
 t std::string::_Rep::_M_dispose(std::allocator<char> const&)
 t std::string::_Rep::_M_grab(std::allocator<char> const&, std::allocator<char> const&)
 t std::string::_Rep::_M_is_leaked() const
 t std::string::_Rep::_M_is_shared() const
 t std::string::_Rep::_M_refcopy()
 t std::string::_Rep::_M_refdata()
 t std::string::_Rep::_M_set_leaked()
 t std::string::_Rep::_M_set_length_and_sharable(unsigned int)
 t std::string::_Rep::_M_set_sharable()
 t std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
 t std::string::_Rep::_S_empty_rep()
 t std::string::_S_compare(unsigned int, unsigned int)
 t std::string::_S_construct(unsigned int, char, std::allocator<char> const&)
 t std::string::_S_construct_aux_2(unsigned int, char, std::allocator<char> const&)
 t std::string::_S_copy_chars(char*, __gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>)
 t std::string::_S_copy_chars(char*, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
 t std::string::_S_copy_chars(char*, char const*, char const*)
 t std::string::_S_copy_chars(char*, char*, char*)
 t std::string::_S_empty_rep()
 t std::string::append(char const*)
 t std::string::append(char const*, unsigned int)
 t std::string::append(std::initializer_list<char>)
 t std::string::append(std::string const&)
 t std::string::append(std::string const&, unsigned int, unsigned int)
 t std::string::append(unsigned int, char)
 t std::string::assign(char const*)
 t std::string::assign(char const*, unsigned int)
 t std::string::assign(std::initializer_list<char>)
 t std::string::assign(std::string const&)
 t std::string::assign(std::string const&, unsigned int, unsigned int)
 t std::string::assign(std::string&&)
 t std::string::assign(unsigned int, char)
 t std::string::at(unsigned int)
 t std::string::at(unsigned int) const
 t std::string::back()
 t std::string::back() const
 t std::string::begin()
 t std::string::begin() const
 t std::string::c_str() const
 t std::string::capacity() const
 t std::string::cbegin() const
 t std::string::cend() const
 t std::string::clear()
 t std::string::compare(char const*) const
 t std::string::compare(std::string const&) const
 t std::string::compare(unsigned int, unsigned int, char const*) const
 t std::string::compare(unsigned int, unsigned int, char const*, unsigned int) const
 t std::string::compare(unsigned int, unsigned int, std::string const&) const
 t std::string::compare(unsigned int, unsigned int, std::string const&, unsigned int, unsigned int) const
 t std::string::copy(char*, unsigned int, unsigned int) const
 t std::string::crbegin() const
 t std::string::crend() const
 t std::string::data() const
 t std::string::empty() const
 t std::string::end()
 t std::string::end() const
 t std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>)
 t std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
 t std::string::erase(unsigned int, unsigned int)
 t std::string::find(char const*, unsigned int) const
 t std::string::find(char const*, unsigned int, unsigned int) const
 t std::string::find(char, unsigned int) const
 t std::string::find(std::string const&, unsigned int) const
 t std::string::find_first_not_of(char const*, unsigned int) const
 t std::string::find_first_not_of(char const*, unsigned int, unsigned int) const
 t std::string::find_first_not_of(char, unsigned int) const
 t std::string::find_first_not_of(std::string const&, unsigned int) const
 t std::string::find_first_of(char const*, unsigned int) const
 t std::string::find_first_of(char const*, unsigned int, unsigned int) const
 t std::string::find_first_of(char, unsigned int) const
 t std::string::find_first_of(std::string const&, unsigned int) const
 t std::string::find_last_not_of(char const*, unsigned int) const
 t std::string::find_last_not_of(char const*, unsigned int, unsigned int) const
 t std::string::find_last_not_of(char, unsigned int) const
 t std::string::find_last_not_of(std::string const&, unsigned int) const
 t std::string::find_last_of(char const*, unsigned int) const
 t std::string::find_last_of(char const*, unsigned int, unsigned int) const
 t std::string::find_last_of(char, unsigned int) const
 t std::string::find_last_of(std::string const&, unsigned int) const
 t std::string::front()
 t std::string::front() const
 t std::string::get_allocator() const
 t std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)
 t std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, std::initializer_list<char>)
 t std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, unsigned int, char)
 t std::string::insert(unsigned int, char const*)
 t std::string::insert(unsigned int, char const*, unsigned int)
 t std::string::insert(unsigned int, std::string const&)
 t std::string::insert(unsigned int, std::string const&, unsigned int, unsigned int)
 t std::string::insert(unsigned int, unsigned int, char)
 t std::string::length() const
 t std::string::max_size() const
 t std::string::operator+=(char const*)
 t std::string::operator+=(char)
 t std::string::operator+=(std::initializer_list<char>)
 t std::string::operator+=(std::string const&)
 t std::string::operator=(char const*)
 t std::string::operator=(char)
 t std::string::operator=(std::initializer_list<char>)
 t std::string::operator=(std::string const&)
 t std::string::operator=(std::string&&)
 t std::string::operator[](unsigned int)
 t std::string::operator[](unsigned int) const
 t std::string::push_back(char)
 t std::string::rbegin()
 t std::string::rbegin() const
 t std::string::rend()
 t std::string::rend() const
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*, char const*)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*, unsigned int)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char*, char*)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::initializer_list<char>)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::string const&)
 t std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, unsigned int, char)
 t std::string::replace(unsigned int, unsigned int, char const*)
 t std::string::replace(unsigned int, unsigned int, char const*, unsigned int)
 t std::string::replace(unsigned int, unsigned int, std::string const&)
 t std::string::replace(unsigned int, unsigned int, std::string const&, unsigned int, unsigned int)
 t std::string::replace(unsigned int, unsigned int, unsigned int, char)
 t std::string::reserve(unsigned int)
 t std::string::resize(unsigned int)
 t std::string::resize(unsigned int, char)
 t std::string::rfind(char const*, unsigned int) const
 t std::string::rfind(char const*, unsigned int, unsigned int) const
 t std::string::rfind(char, unsigned int) const
 t std::string::rfind(std::string const&, unsigned int) const
 t std::string::shrink_to_fit()
 t std::string::size() const
 t std::string::substr(unsigned int, unsigned int) const
 t std::string::swap(std::string&)
 t std::system_category()
 t std::system_error::~system_error()
 t std::terminate()
 t std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const
 t std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
 t std::type_info::__is_function_p() const
 t std::type_info::__is_pointer_p() const
 t std::type_info::~type_info()
 t std::uncaught_exception()
 t std::underflow_error::underflow_error(std::string const&)
 t std::underflow_error::~underflow_error()
 t std::unexpected()
 t std::vector<DataLinker::Chunk, std::allocator<DataLinker::Chunk> >::reserve(unsigned int)
 t std::vector<DataLinker::Stream::Block_t, std::allocator<DataLinker::Stream::Block_t> >::reserve(unsigned int)
 t std::vector<DataLinker::Stream::Block_t, std::allocator<DataLinker::Stream::Block_t> >::~vector()
 t studiohdr2_t::GetBaseMap()
 t studiohdr_t::CopyAutoplaySequences(unsigned short*, int) const
 t studiohdr_t::CountAutoplaySequences() const
 t studiohdr_t::EntryNode(int)
 t studiohdr_t::ExitNode(int)
 t studiohdr_t::FindModel(void**, char const*) const
 t studiohdr_t::GetActivityListVersion()
 t studiohdr_t::GetAnimBlock(int, bool) const
 t studiohdr_t::GetAttachmentBone(int)
 t studiohdr_t::GetAutoplayList(unsigned short**) const
 t studiohdr_t::GetBaseMap()
 t studiohdr_t::GetNumAttachments() const
 t studiohdr_t::GetNumIKAutoplayLocks() const
 t studiohdr_t::GetNumPoseParameters() const
 t studiohdr_t::GetNumSeq_Internal() const
 t studiohdr_t::GetSharedPoseParameter(int, int) const
 t studiohdr_t::GetTransition(int, int) const
 t studiohdr_t::GetVirtualModel() const
 t studiohdr_t::RemapAnimBone(int, int) const
 t studiohdr_t::RemapSeqBone(int, int) const
 t studiohdr_t::SequencesAvailable() const
 t studiohdr_t::SetActivityListVersion(int) const
 t studiohdr_t::SetAttachmentBone(int, int)
 t studiohdr_t::hasAnimBlockBeenPreloaded(int) const
 t studiohdr_t::iRelativeAnim_Internal(int, int) const
 t studiohdr_t::iRelativeSeq_Internal(int, int) const
 t studiohdr_t::pAnimdesc_Internal(int) const
 t studiohdr_t::pAttachment(int) const
 t studiohdr_t::pIKAutoplayLock(int)
 t studiohdr_t::pPoseParameter(int)
 t studiohdr_t::pSeqdesc_Internal(int) const
 t studiohdr_t::pszName() const
 t studiohdr_t::pszNodeName(int)
 t uw_frame_state_for
 t uw_init_context_1
 t uw_install_context_1
 t uw_update_context
 t uw_update_context_1
 t vertexFileFixup_t::GetBaseMap()
 t vertexFileHeader_t::GetBaseMap()
 t virtualgroup_t::GetStudioHdr() const
 t virtualmodel_t::AppendAnimations(int, studiohdr_t const*)
 t virtualmodel_t::AppendAttachments(int, studiohdr_t const*)
 t virtualmodel_t::AppendBonemap(int, studiohdr_t const*)
 t virtualmodel_t::AppendIKLocks(int, studiohdr_t const*)
 t virtualmodel_t::AppendModels(int, studiohdr_t const*)
 t virtualmodel_t::AppendNodes(int, studiohdr_t const*)
 t virtualmodel_t::AppendPoseParameters(int, studiohdr_t const*)
 t virtualmodel_t::AppendSequences(int, studiohdr_t const*)
 t virtualmodel_t::UpdateAutoplaySequences(studiohdr_t const*)
 t void CByteswap::SwapBufferToTargetEndian<float>(float*, float*, int) [clone .part.31] [clone .constprop.89]
 t void CByteswap::SwapBufferToTargetEndian<int>(int*, int*, int) [clone .part.60] [clone .constprop.92]
 t void CByteswap::SwapBufferToTargetEndian<long long>(long long*, long long*, int) [clone .part.63] [clone .constprop.88]
 t void CByteswap::SwapBufferToTargetEndian<unsigned short>(unsigned short*, unsigned short*, int) [clone .part.57] [clone .constprop.91]
 t void StudioByteSwap::WriteBuffer<float>(unsigned char**, unsigned char**, int)
 t void StudioByteSwap::WriteBuffer<int>(unsigned char**, unsigned char**, int)
 t void StudioByteSwap::WriteBuffer<short>(unsigned char**, unsigned char**, int)
 t void StudioByteSwap::WriteObjects<studiohdr_t>(studiohdr_t*, studiohdr_t*, int)
 t void std::__adjust_heap<mstudiovertanim_t*, int, mstudiovertanim_t, bool (*)(mstudiovertanim_t const&, mstudiovertanim_t const&)>(mstudiovertanim_t*, int, int, mstudiovertanim_t, bool (*)(mstudiovertanim_t const&, mstudiovertanim_t const&))
 t void std::__adjust_heap<mstudiovertanim_wrinkle_t*, int, mstudiovertanim_wrinkle_t, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&)>(mstudiovertanim_wrinkle_t*, int, int, mstudiovertanim_wrinkle_t, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&))
 t void std::__push_heap<mstudiovertanim_t*, int, mstudiovertanim_t, bool (*)(mstudiovertanim_t const&, mstudiovertanim_t const&)>(mstudiovertanim_t*, int, int, mstudiovertanim_t, bool (*)(mstudiovertanim_t const&, mstudiovertanim_t const&))
 t void std::__push_heap<mstudiovertanim_wrinkle_t*, int, mstudiovertanim_wrinkle_t, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&)>(mstudiovertanim_wrinkle_t*, int, int, mstudiovertanim_wrinkle_t, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&))
 t void std::sort_heap<mstudiovertanim_wrinkle_t*, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&)>(mstudiovertanim_wrinkle_t*, mstudiovertanim_wrinkle_t*, bool (*)(mstudiovertanim_wrinkle_t const&, mstudiovertanim_wrinkle_t const&))
 t void std::vector<DataLinker::Chunk, std::allocator<DataLinker::Chunk> >::_M_insert_aux<DataLinker::Chunk>(__gnu_cxx::__normal_iterator<DataLinker::Chunk*, std::vector<DataLinker::Chunk, std::allocator<DataLinker::Chunk> > >, DataLinker::Chunk&&)
 t void std::vector<DataLinker::Stream::Block_t, std::allocator<DataLinker::Stream::Block_t> >::_M_insert_aux<DataLinker::Stream::Block_t const&>(__gnu_cxx::__normal_iterator<DataLinker::Stream::Block_t*, std::vector<DataLinker::Stream::Block_t, std::allocator<DataLinker::Stream::Block_t> > >, DataLinker::Stream::Block_t const&)
 tan@@GLIBC_2.0
 tanf@@GLIBC_2.0
 tolower@@GLIBC_2.0
 toupper@@GLIBC_2.0
 towlower@@GLIBC_2.0
 towupper@@GLIBC_2.0
 vsnprintf@@GLIBC_2.0
 vswprintf@@GLIBC_2.2
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 wcslen@@GLIBC_2.0
 wcsncat@@GLIBC_2.0
 wcsncpy@@GLIBC_2.0
 wcstof@@GLIBC_2.0
 wcstol@@GLIBC_2.0
 wcstombs@@GLIBC_2.0
