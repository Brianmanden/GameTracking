 AddMemoryInfoCallback
 B AIAgentSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIAgentScheduleState_t_DataDescInit::g_DataMapHolder
 B AIBehaviorChannelSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIChannelScheduleState_t_DataDescInit::g_DataMapHolder
 B AIExtendedSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIN_NO_DEST
 B AIScheduleState_t_DataDescInit::g_DataMapHolder
 B AISquadEnemyInfo_t_DataDescInit::g_DataMapHolder
 B AI_EnemyInfo_t_DataDescInit::g_DataMapHolder
 B AI_FollowNavInfo_t_DataDescInit::g_DataMapHolder
 B AI_FollowParams_t_DataDescInit::g_DataMapHolder
 B AI_FreePassParams_t_DataDescInit::g_DataMapHolder
 B AI_LeadArgs_t_DataDescInit::g_DataMapHolder
 B AI_ResponseParams_DataDescInit::g_DataMapHolder
 B AI_Response_DataDescInit::g_DataMapHolder
 B AI_StandoffParams_t_DataDescInit::g_DataMapHolder
 B AI_Waypoint_t::s_Allocator
 B AI_Waypoint_t_DataDescInit::g_DataMapHolder
 B AccountActivity::default_instance_
 B BotChatterInterface::m_encourageTimer
 B BotChatterInterface::m_radioSilenceInterval
 B CAISound_DataDescInit::g_DataMapHolder
 B CAI_AccelDecay_DataDescInit::g_DataMapHolder
 B CAI_AddOn::gm_ClassScheduleIdSpace
 B CAI_AddOn_DataDescInit::g_DataMapHolder
 B CAI_Agent::gm_ClassScheduleIdSpace
 B CAI_Agent::gm_SchedulingSymbols
 B CAI_Agent_DataDescInit::g_DataMapHolder
 B CAI_AllySpeechManager::gm_pSpeechManager
 B CAI_AllySpeechManager_DataDescInit::g_DataMapHolder
 B CAI_AssaultBehavior::gm_ClassScheduleIdSpace
 B CAI_AssaultBehavior_DataDescInit::g_DataMapHolder
 B CAI_AssaultGoal_DataDescInit::g_DataMapHolder
 B CAI_BaseActor_DataDescInit::g_DataMapHolder
 B CAI_BaseFlyingBot_DataDescInit::g_DataMapHolder
 B CAI_BaseNPC::gm_ClassScheduleIdSpace
 B CAI_BaseNPC::gm_SchedulingSymbols
 B CAI_BaseNPC::gm_SquadSlotIdSpace
 B CAI_BaseNPC::gm_SquadSlotNamespace
 B CAI_BaseNPC::gm_flTimeLastSpawn
 B CAI_BaseNPC::gm_iNextThinkRebalanceTick
 B CAI_BaseNPC::gm_iszPlayerSquad
 B CAI_BaseNPC::gm_nSpawnedThisFrame
 B CAI_BaseNPC::m_AnyUpdateEnemyPosTimer
 B CAI_BaseNPC::m_iNumActivities
 B CAI_BaseNPC::m_iNumEvents
 B CAI_BaseNPC::m_nDebugBits
 B CAI_BaseNPC::m_pActivitySR
 B CAI_BaseNPC::m_pDebugNPC
 B CAI_BaseNPC::m_pEventSR
 B CAI_BaseNPC_DataDescInit::g_DataMapHolder
 B CAI_BasePhysicsFlyingBot_DataDescInit::g_DataMapHolder
 B CAI_BattleLine_DataDescInit::g_DataMapHolder
 B CAI_BehaviorBase_DataDescInit::g_DataMapHolder
 B CAI_BlendedMotor_DataDescInit::g_DataMapHolder
 B CAI_ChangeHintGroup_DataDescInit::g_DataMapHolder
 B CAI_ChangeTarget_DataDescInit::g_DataMapHolder
 B CAI_DynamicLink::gm_bInitialized
 B CAI_DynamicLink::m_pAllDynamicLinks
 B CAI_DynamicLinkController_DataDescInit::g_DataMapHolder
 B CAI_DynamicLink_DataDescInit::g_DataMapHolder
 B CAI_Enemies_DataDescInit::g_DataMapHolder
 B CAI_Expresser_DataDescInit::g_DataMapHolder
 B CAI_FearBehavior::gm_ClassScheduleIdSpace
 B CAI_FearBehavior_DataDescInit::g_DataMapHolder
 B CAI_FightFromCoverBehavior::gm_ClassScheduleIdSpace
 B CAI_FightFromCoverBehavior_DataDescInit::g_DataMapHolder
 B CAI_FightFromCoverGoal_DataDescInit::g_DataMapHolder
 B CAI_FollowBehavior::gm_ClassScheduleIdSpace
 B CAI_FollowBehavior_DataDescInit::g_DataMapHolder
 B CAI_FollowGoal_DataDescInit::g_DataMapHolder
 B CAI_FreePass_DataDescInit::g_DataMapHolder
 B CAI_GoalEntity_DataDescInit::g_DataMapHolder
 B CAI_HintManager::gm_AllHints
 B CAI_HintManager::gm_TypedHints
 B CAI_HintManager::gm_nFoundHintIndex
 B CAI_HintManager::gm_pLastFoundHints
 B CAI_Hint_DataDescInit::g_DataMapHolder
 B CAI_InterestTarget_t_DataDescInit::g_DataMapHolder
 B CAI_LeadBehavior::gm_ClassScheduleIdSpace
 B CAI_LeadBehavior_DataDescInit::g_DataMapHolder
 B CAI_LeadGoal_DataDescInit::g_DataMapHolder
 B CAI_LeadGoal_Weapon_DataDescInit::g_DataMapHolder
 B CAI_LocalNavigator_DataDescInit::g_DataMapHolder
 B CAI_LookTarget_DataDescInit::g_DataMapHolder
 B CAI_Motor_DataDescInit::g_DataMapHolder
 B CAI_MoveAndShootOverlay_DataDescInit::g_DataMapHolder
 B CAI_MoveMonitor_DataDescInit::g_DataMapHolder
 B CAI_MoveProbe_DataDescInit::g_DataMapHolder
 B CAI_Navigator_DataDescInit::g_DataMapHolder
 B CAI_NetworkEditTools::m_bAirEditMode
 B CAI_NetworkEditTools::m_bLinkEditMode
 B CAI_NetworkEditTools::m_iHullDrawNum
 B CAI_NetworkEditTools::m_pLastDeletedNode
 B CAI_NetworkManager::gm_fNetworksLoaded
 B CAI_NetworkManager_DataDescInit::g_DataMapHolder
 B CAI_Path::gm_InvalidWaypoint
 B CAI_Path_DataDescInit::g_DataMapHolder
 B CAI_Pathfinder_DataDescInit::g_DataMapHolder
 B CAI_PlaneSolver::s_GlobalObstacles
 B CAI_PlayerAlly::gm_ClassScheduleIdSpace
 B CAI_PlayerAlly::gm_SquadSlotIdSpace
 B CAI_PlayerAlly_DataDescInit::g_DataMapHolder
 B CAI_ProxTester_DataDescInit::g_DataMapHolder
 B CAI_RadialLinkController_DataDescInit::g_DataMapHolder
 B CAI_RappelBehavior::gm_ClassScheduleIdSpace
 B CAI_RappelBehavior_DataDescInit::g_DataMapHolder
 B CAI_ScriptConditionsElement_DataDescInit::g_DataMapHolder
 B CAI_ScriptConditions_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSchedule_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSentence_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSequence_DataDescInit::g_DataMapHolder
 B CAI_Senses_DataDescInit::g_DataMapHolder
 B CAI_SentenceBase_DataDescInit::g_DataMapHolder
 B CAI_ShotRegulator_DataDescInit::g_DataMapHolder
 B CAI_SpeechFilter_DataDescInit::g_DataMapHolder
 B CAI_Squad_DataDescInit::g_DataMapHolder
 B CAI_StandoffBehavior::gm_ClassScheduleIdSpace
 B CAI_StandoffBehavior_DataDescInit::g_DataMapHolder
 B CAI_StandoffGoal_DataDescInit::g_DataMapHolder
 B CAI_TacticalServices_DataDescInit::g_DataMapHolder
 B CAI_TestHull::pTestHull
 B CAI_TrackPather_DataDescInit::g_DataMapHolder
 B CAmbientGeneric_DataDescInit::g_DataMapHolder
 B CAnimationLayer_DataDescInit::g_DataMapHolder
 B CAreaPortal_DataDescInit::g_DataMapHolder
 B CAssaultPoint_DataDescInit::g_DataMapHolder
 B CAttributeContainerPlayer_DataDescInit::g_DataMapHolder
 B CAttributeContainer_DataDescInit::g_DataMapHolder
 B CAttributeList_DataDescInit::g_DataMapHolder
 B CAttributeManager_DataDescInit::g_DataMapHolder
 B CAttribute_String::default_instance_
 B CBaseAchievement_DataDescInit::g_DataMapHolder
 B CBaseAnimatingOverlay_DataDescInit::g_DataMapHolder
 B CBaseAnimating_DataDescInit::g_DataMapHolder
 B CBaseAttributableItem_DataDescInit::g_DataMapHolder
 B CBaseButton_DataDescInit::g_DataMapHolder
 B CBaseCSGrenadeProjectile_DataDescInit::g_DataMapHolder
 B CBaseCSGrenade_DataDescInit::g_DataMapHolder
 B CBaseCombatCharacter::m_DefaultRelationship
 B CBaseCombatCharacter::m_FactionRelationship
 B CBaseCombatCharacter::m_aFactions
 B CBaseCombatCharacter::m_lastInteraction
 B CBaseCombatCharacter_DataDescInit::g_DataMapHolder
 B CBaseCombatWeapon_DataDescInit::g_DataMapHolder
 B CBaseDMStart_DataDescInit::g_DataMapHolder
 B CBaseDoor_DataDescInit::g_DataMapHolder
 B CBaseEntity::m_bAllowPrecache
 B CBaseEntity::m_bDebugPause
 B CBaseEntity::m_bInDebugSelect
 B CBaseEntity::m_pPredictionPlayer
 B CBaseEntity::sm_bDisableTouchFuncs
 B CBaseEntityOutput_DataDescInit::g_DataMapHolder
 B CBaseEntity_DataDescInit::g_DataMapHolder
 B CBaseFilter_DataDescInit::g_DataMapHolder
 B CBaseFire_DataDescInit::g_DataMapHolder
 B CBaseFlex_DataDescInit::g_DataMapHolder
 B CBaseGrenade_DataDescInit::g_DataMapHolder
 B CBaseMoveBehavior_DataDescInit::g_DataMapHolder
 B CBasePlatTrain_DataDescInit::g_DataMapHolder
 B CBasePlayer::s_PlayerEdict
 B CBasePlayer_DataDescInit::g_DataMapHolder
 B CBaseProjectile_DataDescInit::g_DataMapHolder
 B CBasePropDoor_DataDescInit::g_DataMapHolder
 B CBaseResourcePrecacher::sm_pFirst
 B CBaseServerVehicle_DataDescInit::g_DataMapHolder
 B CBaseTeamObjectiveResource_DataDescInit::g_DataMapHolder
 B CBaseTempEntity::s_pTempEntities
 B CBaseToggle_DataDescInit::g_DataMapHolder
 B CBaseTrigger_DataDescInit::g_DataMapHolder
 B CBaseVPhysicsTrigger_DataDescInit::g_DataMapHolder
 B CBaseViewModel_DataDescInit::g_DataMapHolder
 B CBeamSpotlight_DataDescInit::g_DataMapHolder
 B CBeam_DataDescInit::g_DataMapHolder
 B CBlendingCycler_DataDescInit::g_DataMapHolder
 B CBlood_DataDescInit::g_DataMapHolder
 B CBombTarget_DataDescInit::g_DataMapHolder
 B CBoneFollowerManager_DataDescInit::g_DataMapHolder
 B CBoneFollower_DataDescInit::g_DataMapHolder
 B CBreakableProp_DataDescInit::g_DataMapHolder
 B CBreakableSurface_DataDescInit::g_DataMapHolder
 B CBreakable_DataDescInit::g_DataMapHolder
 B CBubbling_DataDescInit::g_DataMapHolder
 B CBuyZone_DataDescInit::g_DataMapHolder
 B CCLCMsg_BaselineAck::default_instance_
 B CCLCMsg_ClientInfo::default_instance_
 B CCLCMsg_CmdKeyValues::default_instance_
 B CCLCMsg_FileCRCCheck::default_instance_
 B CCLCMsg_ListenEvents::default_instance_
 B CCLCMsg_LoadingProgress::default_instance_
 B CCLCMsg_Move::default_instance_
 B CCLCMsg_RespondCvarValue::default_instance_
 B CCLCMsg_SplitPlayerConnect::default_instance_
 B CCLCMsg_VoiceData::default_instance_
 B CCSBot::m_partInfo
 B CCSBotManager::m_isMapDataLoaded
 B CCSBot_DataDescInit::g_DataMapHolder
 B CCSGameRules::sm_QueuedServerReservation
 B CCSGameRules::sm_mapGcBanInformation
 B CCSGameStats::s_StatLists
 B CCSPlayerResource_DataDescInit::g_DataMapHolder
 B CCSPlayer_DataDescInit::g_DataMapHolder
 B CCSUsrMsg_AchievementEvent::default_instance_
 B CCSUsrMsg_AdjustMoney::default_instance_
 B CCSUsrMsg_AmmoDenied::default_instance_
 B CCSUsrMsg_BarTime::default_instance_
 B CCSUsrMsg_CallVoteFailed::default_instance_
 B CCSUsrMsg_ClientInfo::default_instance_
 B CCSUsrMsg_CloseCaption::default_instance_
 B CCSUsrMsg_CloseCaptionDirect::default_instance_
 B CCSUsrMsg_CurrentTimescale::default_instance_
 B CCSUsrMsg_Damage::default_instance_
 B CCSUsrMsg_DesiredTimescale::default_instance_
 B CCSUsrMsg_DisconnectToLobby::default_instance_
 B CCSUsrMsg_DisplayInventory::default_instance_
 B CCSUsrMsg_Fade::default_instance_
 B CCSUsrMsg_GameTitle::default_instance_
 B CCSUsrMsg_Geiger::default_instance_
 B CCSUsrMsg_GlowPropTurnOff::default_instance_
 B CCSUsrMsg_HintText::default_instance_
 B CCSUsrMsg_HudMsg::default_instance_
 B CCSUsrMsg_HudText::default_instance_
 B CCSUsrMsg_ItemDrop::default_instance_
 B CCSUsrMsg_ItemPickup::default_instance_
 B CCSUsrMsg_KeyHintText::default_instance_
 B CCSUsrMsg_KillCam::default_instance_
 B CCSUsrMsg_MarkAchievement::default_instance_
 B CCSUsrMsg_MatchEndConditions::default_instance_
 B CCSUsrMsg_MatchStatsUpdate::default_instance_
 B CCSUsrMsg_PlayerStatsUpdate::default_instance_
 B CCSUsrMsg_PlayerStatsUpdate_Stat::default_instance_
 B CCSUsrMsg_ProcessSpottedEntityUpdate::default_instance_
 B CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::default_instance_
 B CCSUsrMsg_RadioText::default_instance_
 B CCSUsrMsg_RawAudio::default_instance_
 B CCSUsrMsg_ReloadEffect::default_instance_
 B CCSUsrMsg_ReportHit::default_instance_
 B CCSUsrMsg_RequestState::default_instance_
 B CCSUsrMsg_ResetHud::default_instance_
 B CCSUsrMsg_RoundBackupFilenames::default_instance_
 B CCSUsrMsg_Rumble::default_instance_
 B CCSUsrMsg_SayText2::default_instance_
 B CCSUsrMsg_SayText::default_instance_
 B CCSUsrMsg_SendAudio::default_instance_
 B CCSUsrMsg_SendLastKillerDamageToClient::default_instance_
 B CCSUsrMsg_SendPlayerItemDrops::default_instance_
 B CCSUsrMsg_SendPlayerItemFound::default_instance_
 B CCSUsrMsg_ServerRankRevealAll::default_instance_
 B CCSUsrMsg_ServerRankUpdate::default_instance_
 B CCSUsrMsg_ServerRankUpdate_RankUpdate::default_instance_
 B CCSUsrMsg_Shake::default_instance_
 B CCSUsrMsg_ShowMenu::default_instance_
 B CCSUsrMsg_StopSpectatorMode::default_instance_
 B CCSUsrMsg_TextMsg::default_instance_
 B CCSUsrMsg_Train::default_instance_
 B CCSUsrMsg_VGUIMenu::default_instance_
 B CCSUsrMsg_VGUIMenu_Subkey::default_instance_
 B CCSUsrMsg_VoiceMask::default_instance_
 B CCSUsrMsg_VoiceMask_PlayerMask::default_instance_
 B CCSUsrMsg_VoteFailed::default_instance_
 B CCSUsrMsg_VotePass::default_instance_
 B CCSUsrMsg_VoteSetup::default_instance_
 B CCSUsrMsg_VoteStart::default_instance_
 B CCSUsrMsg_WarmupHasEnded::default_instance_
 B CCSUsrMsg_XRankGet::default_instance_
 B CCSUsrMsg_XRankUpd::default_instance_
 B CCSWeaponInfo::m_bCSWeaponInfoLookupInitialized
 B CCS_GameStats
 B CCascadeLight::m_EnvLightShadowAngles
 B CCascadeLight::m_bEnvLightShadowValid
 B CCascadeLight::m_flEnvLightShadowPitch
 B CCascadeLight_DataDescInit::g_DataMapHolder
 B CChangeLevel_DataDescInit::g_DataMapHolder
 B CChicken_DataDescInit::g_DataMapHolder
 B CChoreoScene::s_bEditingDisabled
 B CClientHeaderOverwatchEvidence::default_instance_
 B CCollisionProperty_DataDescInit::g_DataMapHolder
 B CColorCorrectionVolume_DataDescInit::g_DataMapHolder
 B CColorCorrection_DataDescInit::g_DataMapHolder
 B CCommentaryAuto_DataDescInit::g_DataMapHolder
 B CCommentarySystem_DataDescInit::g_DataMapHolder
 B CConstantForceController_DataDescInit::g_DataMapHolder
 B CConstraintAnchor_DataDescInit::g_DataMapHolder
 B CCopyRecipientFilter_DataDescInit::g_DataMapHolder
 B CCredits_DataDescInit::g_DataMapHolder
 B CCycler_DataDescInit::g_DataMapHolder
 B CDataGCCStrike15_v2_MatchInfo::default_instance_
 B CDataGCCStrike15_v2_MatchmakingLockedInMatch::default_instance_
 B CDataGCCStrike15_v2_TournamentGroup::default_instance_
 B CDataGCCStrike15_v2_TournamentGroupTeam::default_instance_
 B CDataGCCStrike15_v2_TournamentInfo::default_instance_
 B CDataGCCStrike15_v2_TournamentMatchDraft::default_instance_
 B CDataGCCStrike15_v2_TournamentMatchDraft_Entry::default_instance_
 B CDataGCCStrike15_v2_TournamentSection::default_instance_
 B CDebugHistory_DataDescInit::g_DataMapHolder
 B CDecal_DataDescInit::g_DataMapHolder
 B CDecoyGrenade_DataDescInit::g_DataMapHolder
 B CDecoyProjectile_DataDescInit::g_DataMapHolder
 B CDmxAttribute::s_AttributeNameSymbols
 B CDmxAttribute::s_pAttributeTypeName
 B CDmxElement::s_TypeSymbols
 B CDmxKeyValues2ErrorStack::m_ErrorSymbolTable
 B CDynamicLight_DataDescInit::g_DataMapHolder
 B CDynamicProp_DataDescInit::g_DataMapHolder
 B CEconEntity_DataDescInit::g_DataMapHolder
 B CEconItemPreviewDataBlock::default_instance_
 B CEconItemPreviewDataBlock_Sticker::default_instance_
 B CEconItemSchema::m_RandomStream
 B CEconItemView_DataDescInit::g_DataMapHolder
 B CEmbers_DataDescInit::g_DataMapHolder
 B CEntityClassList<CPhysicsNPCSolver>::m_pClassList
 B CEntityClassList<CPointCamera>::m_pClassList
 B CEntityClassList<CSkyCamera>::m_pClassList
 B CEntityDissolve_DataDescInit::g_DataMapHolder
 B CEntityFlame_DataDescInit::g_DataMapHolder
 B CEntityFreezing_DataDescInit::g_DataMapHolder
 B CEntityParticleTrail_DataDescInit::g_DataMapHolder
 B CEnvAmbientLight_DataDescInit::g_DataMapHolder
 B CEnvBeam_DataDescInit::g_DataMapHolder
 B CEnvBeverage_DataDescInit::g_DataMapHolder
 B CEnvDOFController_DataDescInit::g_DataMapHolder
 B CEnvDustPuff_DataDescInit::g_DataMapHolder
 B CEnvEffectsScript_DataDescInit::g_DataMapHolder
 B CEnvEntityIgniter_DataDescInit::g_DataMapHolder
 B CEnvEntityMaker_DataDescInit::g_DataMapHolder
 B CEnvExplosion_DataDescInit::g_DataMapHolder
 B CEnvFade_DataDescInit::g_DataMapHolder
 B CEnvFireSensor_DataDescInit::g_DataMapHolder
 B CEnvFireSource_DataDescInit::g_DataMapHolder
 B CEnvFunnel_DataDescInit::g_DataMapHolder
 B CEnvGlobal_DataDescInit::g_DataMapHolder
 B CEnvGunfire_DataDescInit::g_DataMapHolder
 B CEnvHudHint_DataDescInit::g_DataMapHolder
 B CEnvInstructorHint_DataDescInit::g_DataMapHolder
 B CEnvLaser_DataDescInit::g_DataMapHolder
 B CEnvMicrophone_DataDescInit::g_DataMapHolder
 B CEnvMuzzleFlash_DataDescInit::g_DataMapHolder
 B CEnvParticleScript_DataDescInit::g_DataMapHolder
 B CEnvPlayerSurfaceTrigger_DataDescInit::g_DataMapHolder
 B CEnvProjectedTexture_DataDescInit::g_DataMapHolder
 B CEnvQuadraticBeam_DataDescInit::g_DataMapHolder
 B CEnvScreenEffect_DataDescInit::g_DataMapHolder
 B CEnvScreenOverlay_DataDescInit::g_DataMapHolder
 B CEnvShake_DataDescInit::g_DataMapHolder
 B CEnvShooter_DataDescInit::g_DataMapHolder
 B CEnvSoundscapeProxy_DataDescInit::g_DataMapHolder
 B CEnvSoundscapeTriggerable_DataDescInit::g_DataMapHolder
 B CEnvSoundscape_DataDescInit::g_DataMapHolder
 B CEnvSpark_DataDescInit::g_DataMapHolder
 B CEnvSplash_DataDescInit::g_DataMapHolder
 B CEnvTilt_DataDescInit::g_DataMapHolder
 B CEnvTonemapController_DataDescInit::g_DataMapHolder
 B CEnvTracer_DataDescInit::g_DataMapHolder
 B CEnvViewPunch_DataDescInit::g_DataMapHolder
 B CEnvWind_DataDescInit::g_DataMapHolder
 B CEnvZoom_DataDescInit::g_DataMapHolder
 B CEventAction::s_iNextIDStamp
 B CEventAction_DataDescInit::g_DataMapHolder
 B CEventQueue_DataDescInit::g_DataMapHolder
 B CFailableAchievement_DataDescInit::g_DataMapHolder
 B CFilterClass_DataDescInit::g_DataMapHolder
 B CFilterContext_DataDescInit::g_DataMapHolder
 B CFilterEnemy_DataDescInit::g_DataMapHolder
 B CFilterMassGreater_DataDescInit::g_DataMapHolder
 B CFilterModel_DataDescInit::g_DataMapHolder
 B CFilterMultiple_DataDescInit::g_DataMapHolder
 B CFilterName_DataDescInit::g_DataMapHolder
 B CFireSmoke_DataDescInit::g_DataMapHolder
 B CFireTrail_DataDescInit::g_DataMapHolder
 B CFire_DataDescInit::g_DataMapHolder
 B CFishPool_DataDescInit::g_DataMapHolder
 B CFish_DataDescInit::g_DataMapHolder
 B CFlashbangProjectile_DataDescInit::g_DataMapHolder
 B CFlashbang_DataDescInit::g_DataMapHolder
 B CFlexCycler_DataDescInit::g_DataMapHolder
 B CFlexExpresser_DataDescInit::g_DataMapHolder
 B CFlextalkActor_DataDescInit::g_DataMapHolder
 B CFogController_DataDescInit::g_DataMapHolder
 B CFogTrigger_DataDescInit::g_DataMapHolder
 B CFogVolume_DataDescInit::g_DataMapHolder
 B CFootstepControl_DataDescInit::g_DataMapHolder
 B CFourWheelServerVehicle_DataDescInit::g_DataMapHolder
 B CFourWheelVehiclePhysics_DataDescInit::g_DataMapHolder
 B CFuncAreaPortalBase_DataDescInit::g_DataMapHolder
 B CFuncAreaPortalWindow_DataDescInit::g_DataMapHolder
 B CFuncBrush_DataDescInit::g_DataMapHolder
 B CFuncConveyor_DataDescInit::g_DataMapHolder
 B CFuncInstanceIoProxy_DataDescInit::g_DataMapHolder
 B CFuncLadder::s_Ladders
 B CFuncLadder_DataDescInit::g_DataMapHolder
 B CFuncMonitor_DataDescInit::g_DataMapHolder
 B CFuncMoveLinear_DataDescInit::g_DataMapHolder
 B CFuncNavBlocker::gm_NavBlockers
 B CFuncNavBlocker_DataDescInit::g_DataMapHolder
 B CFuncNavObstruction_DataDescInit::g_DataMapHolder
 B CFuncOccluder_DataDescInit::g_DataMapHolder
 B CFuncPlatRot_DataDescInit::g_DataMapHolder
 B CFuncPlat_DataDescInit::g_DataMapHolder
 B CFuncReflectiveGlass_DataDescInit::g_DataMapHolder
 B CFuncRotating_DataDescInit::g_DataMapHolder
 B CFuncSmokeVolume_DataDescInit::g_DataMapHolder
 B CFuncTankTrain_DataDescInit::g_DataMapHolder
 B CFuncTrackAuto_DataDescInit::g_DataMapHolder
 B CFuncTrackChange_DataDescInit::g_DataMapHolder
 B CFuncTrackTrain_DataDescInit::g_DataMapHolder
 B CFuncTrainControls_DataDescInit::g_DataMapHolder
 B CFuncTrain_DataDescInit::g_DataMapHolder
 B CFuncVPhysicsClip_DataDescInit::g_DataMapHolder
 B CFuncVehicleClip_DataDescInit::g_DataMapHolder
 B CFuncWallToggle_DataDescInit::g_DataMapHolder
 B CFuncWall_DataDescInit::g_DataMapHolder
 B CFunc_Dust_DataDescInit::g_DataMapHolder
 B CFunc_LOD_DataDescInit::g_DataMapHolder
 B CGCMsgGetIPLocation::default_instance_
 B CGCMsgGetIPLocationResponse::default_instance_
 B CGCMsgGetSystemStats::default_instance_
 B CGCMsgGetSystemStatsResponse::default_instance_
 B CGCMsgMemCachedDelete::default_instance_
 B CGCMsgMemCachedGet::default_instance_
 B CGCMsgMemCachedGetResponse::default_instance_
 B CGCMsgMemCachedGetResponse_ValueTag::default_instance_
 B CGCMsgMemCachedSet::default_instance_
 B CGCMsgMemCachedSet_KeyPair::default_instance_
 B CGCMsgMemCachedStats::default_instance_
 B CGCMsgMemCachedStatsResponse::default_instance_
 B CGCMsgSQLStats::default_instance_
 B CGCMsgSQLStatsResponse::default_instance_
 B CGCMsgSystemStatsSchema::default_instance_
 B CGCStorePurchaseInit_LineItem::default_instance_
 B CGCSystemMsg_GetAccountDetails::default_instance_
 B CGCSystemMsg_GetAccountDetails_Response::default_instance_
 B CGCSystemMsg_GetPurchaseTrust_Request::default_instance_
 B CGCSystemMsg_GetPurchaseTrust_Response::default_instance_
 B CGCToGCMsgMasterAck::default_instance_
 B CGCToGCMsgMasterAck_Response::default_instance_
 B CGCToGCMsgMasterStartupComplete::default_instance_
 B CGCToGCMsgRouted::default_instance_
 B CGCToGCMsgRoutedReply::default_instance_
 B CGameEnd_DataDescInit::g_DataMapHolder
 B CGameGibManager_DataDescInit::g_DataMapHolder
 B CGameMoney_DataDescInit::g_DataMapHolder
 B CGamePlayerEquip_DataDescInit::g_DataMapHolder
 B CGamePlayerZone_DataDescInit::g_DataMapHolder
 B CGameRoundEnd_DataDescInit::g_DataMapHolder
 B CGameRulesProxy::s_pGameRulesProxy
 B CGameRulesRegister::s_pHead
 B CGameScore_DataDescInit::g_DataMapHolder
 B CGameText_DataDescInit::g_DataMapHolder
 B CGameUI_DataDescInit::g_DataMapHolder
 B CGameWeaponManager_DataDescInit::g_DataMapHolder
 B CGenericActor_DataDescInit::g_DataMapHolder
 B CGib::s_ExtantGibs
 B CGibShooter_DataDescInit::g_DataMapHolder
 B CGib_DataDescInit::g_DataMapHolder
 B CGlobalState_DataDescInit::g_DataMapHolder
 B CGunTarget_DataDescInit::g_DataMapHolder
 B CHEGrenadeProjectile_DataDescInit::g_DataMapHolder
 B CHEGrenade_DataDescInit::g_DataMapHolder
 B CHostageCarriableProp_DataDescInit::g_DataMapHolder
 B CHostageRescueZone_DataDescInit::g_DataMapHolder
 B CHostage_DataDescInit::g_DataMapHolder
 B CIPLocationInfo::default_instance_
 B CInferno_DataDescInit::g_DataMapHolder
 B CInfoCameraLink_DataDescInit::g_DataMapHolder
 B CInfoGameEventProxy_DataDescInit::g_DataMapHolder
 B CInfoInstructorHintBombTargetA_DataDescInit::g_DataMapHolder
 B CInfoInstructorHintBombTargetB_DataDescInit::g_DataMapHolder
 B CInfoInstructorHintHostageRescueZone_DataDescInit::g_DataMapHolder
 B CInfoInstructorHintTarget_DataDescInit::g_DataMapHolder
 B CInfoOverlayAccessor_DataDescInit::g_DataMapHolder
 B CInfoRemarkable_DataDescInit::g_DataMapHolder
 B CInfoViewParameters_DataDescInit::g_DataMapHolder
 B CInstancedSceneEntity_DataDescInit::g_DataMapHolder
 B CItemDefuser_DataDescInit::g_DataMapHolder
 B CItemSoda_DataDescInit::g_DataMapHolder
 B CItem_DataDescInit::g_DataMapHolder
 B CKeepUpright_DataDescInit::g_DataMapHolder
 B CKeyValuesTokenReader::s_pTokenBuf
 B CLightGlow_DataDescInit::g_DataMapHolder
 B CLight_DataDescInit::g_DataMapHolder
 B CLogicActiveAutosave_DataDescInit::g_DataMapHolder
 B CLogicAuto_DataDescInit::g_DataMapHolder
 B CLogicAutosave_DataDescInit::g_DataMapHolder
 B CLogicBranchList_DataDescInit::g_DataMapHolder
 B CLogicBranch_DataDescInit::g_DataMapHolder
 B CLogicCase_DataDescInit::g_DataMapHolder
 B CLogicCollisionPair_DataDescInit::g_DataMapHolder
 B CLogicCompareInteger_DataDescInit::g_DataMapHolder
 B CLogicCompare_DataDescInit::g_DataMapHolder
 B CLogicEventListenerItemEquip_DataDescInit::g_DataMapHolder
 B CLogicEventListener_DataDescInit::g_DataMapHolder
 B CLogicLineToEntity_DataDescInit::g_DataMapHolder
 B CLogicMeasureMovement_DataDescInit::g_DataMapHolder
 B CLogicNavigation_DataDescInit::g_DataMapHolder
 B CLogicPlayMovie_DataDescInit::g_DataMapHolder
 B CLogicPlayerProxy_DataDescInit::g_DataMapHolder
 B CLogicRandomOutputs_DataDescInit::g_DataMapHolder
 B CLogicRegisterActivator_DataDescInit::g_DataMapHolder
 B CLogicRelay_DataDescInit::g_DataMapHolder
 B CLogicScript_DataDescInit::g_DataMapHolder
 B CMapInfo_DataDescInit::g_DataMapHolder
 B CMaterialModifyControl_DataDescInit::g_DataMapHolder
 B CMathColorBlend_DataDescInit::g_DataMapHolder
 B CMathCounter_DataDescInit::g_DataMapHolder
 B CMathRemap_DataDescInit::g_DataMapHolder
 B CMessageEntity_DataDescInit::g_DataMapHolder
 B CMessage_DataDescInit::g_DataMapHolder
 B CMolotovGrenade_DataDescInit::g_DataMapHolder
 B CMomentaryRotButton_DataDescInit::g_DataMapHolder
 B CMotorController_DataDescInit::g_DataMapHolder
 B CMovementSpeedMod_DataDescInit::g_DataMapHolder
 B CMovieDisplay_DataDescInit::g_DataMapHolder
 B CMsgAMAddFreeLicense::default_instance_
 B CMsgAMAddFreeLicenseResponse::default_instance_
 B CMsgAMFindAccounts::default_instance_
 B CMsgAMFindAccountsResponse::default_instance_
 B CMsgAMGetLicenses::default_instance_
 B CMsgAMGetLicensesResponse::default_instance_
 B CMsgAMGetUserGameStats::default_instance_
 B CMsgAMGetUserGameStatsResponse::default_instance_
 B CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_
 B CMsgAMGetUserGameStatsResponse_Stats::default_instance_
 B CMsgAMGrantGuestPasses2::default_instance_
 B CMsgAMGrantGuestPasses2Response::default_instance_
 B CMsgAMSendEmail::default_instance_
 B CMsgAMSendEmailResponse::default_instance_
 B CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_
 B CMsgAMSendEmail_ReplacementToken::default_instance_
 B CMsgAccountDetails::default_instance_
 B CMsgAdjustItemEquippedState::default_instance_
 B CMsgApplyAutograph::default_instance_
 B CMsgApplyEggEssence::default_instance_
 B CMsgApplyPennantUpgrade::default_instance_
 B CMsgApplyStatTrakSwap::default_instance_
 B CMsgApplySticker::default_instance_
 B CMsgApplyStrangePart::default_instance_
 B CMsgCStrike15Welcome::default_instance_
 B CMsgClientHello::default_instance_
 B CMsgClientWelcome::default_instance_
 B CMsgClientWelcome_Location::default_instance_
 B CMsgConVarValue::default_instance_
 B CMsgConnectionStatus::default_instance_
 B CMsgConsumableExhausted::default_instance_
 B CMsgDevNewItemRequest::default_instance_
 B CMsgGCBannedWord::default_instance_
 B CMsgGCBannedWordListRequest::default_instance_
 B CMsgGCBannedWordListResponse::default_instance_
 B CMsgGCCStrike15_v2_AccountPrivacySettings::default_instance_
 B CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::default_instance_
 B CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::default_instance_
 B CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::default_instance_
 B CMsgGCCStrike15_v2_Client2GCTextMsg::default_instance_
 B CMsgGCCStrike15_v2_ClientCommendPlayer::default_instance_
 B CMsgGCCStrike15_v2_ClientReportPlayer::default_instance_
 B CMsgGCCStrike15_v2_ClientReportResponse::default_instance_
 B CMsgGCCStrike15_v2_ClientReportServer::default_instance_
 B CMsgGCCStrike15_v2_ClientRequestJoinFriendData::default_instance_
 B CMsgGCCStrike15_v2_ClientRequestJoinServerData::default_instance_
 B CMsgGCCStrike15_v2_ClientRequestPlayersProfile::default_instance_
 B CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::default_instance_
 B CMsgGCCStrike15_v2_ClientSubmitSurveyVote::default_instance_
 B CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::default_instance_
 B CMsgGCCStrike15_v2_GC2ClientTextMsg::default_instance_
 B CMsgGCCStrike15_v2_GC2ClientTournamentInfo::default_instance_
 B CMsgGCCStrike15_v2_GC2ServerReservationUpdate::default_instance_
 B CMsgGCCStrike15_v2_GiftsLeaderboardRequest::default_instance_
 B CMsgGCCStrike15_v2_GiftsLeaderboardResponse::default_instance_
 B CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::default_instance_
 B CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::default_instance_
 B CMsgGCCStrike15_v2_MatchEndRunRewardDrops::default_instance_
 B CMsgGCCStrike15_v2_MatchList::default_instance_
 B CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::default_instance_
 B CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::default_instance_
 B CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::default_instance_
 B CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::default_instance_
 B CMsgGCCStrike15_v2_MatchListRequestTournamentGames::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingClient2GCHello::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingServer2GCKick::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingServerRoundStats::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingStart::default_instance_
 B CMsgGCCStrike15_v2_MatchmakingStop::default_instance_
 B CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::default_instance_
 B CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::default_instance_
 B CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::default_instance_
 B CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::default_instance_
 B CMsgGCCStrike15_v2_PlayersProfile::default_instance_
 B CMsgGCCStrike15_v2_Predictions::default_instance_
 B CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::default_instance_
 B CMsgGCCStrike15_v2_Server2GCClientValidate::default_instance_
 B CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::default_instance_
 B CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::default_instance_
 B CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::default_instance_
 B CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::default_instance_
 B CMsgGCCStrike15_v2_WatchInfoUsers::default_instance_
 B CMsgGCCheckFriendship::default_instance_
 B CMsgGCCheckFriendship_Response::default_instance_
 B CMsgGCClientDisplayNotification::default_instance_
 B CMsgGCClientVersionUpdated::default_instance_
 B CMsgGCCollectItem::default_instance_
 B CMsgGCCstrike15_v2_ClientRequestNewMission::default_instance_
 B CMsgGCError::default_instance_
 B CMsgGCGetCommandList::default_instance_
 B CMsgGCGetCommandListResponse::default_instance_
 B CMsgGCGetEmailTemplate::default_instance_
 B CMsgGCGetEmailTemplateResponse::default_instance_
 B CMsgGCGetPartnerAccountLink::default_instance_
 B CMsgGCGetPartnerAccountLink_Response::default_instance_
 B CMsgGCGetPersonaNames::default_instance_
 B CMsgGCGetPersonaNames_Response::default_instance_
 B CMsgGCGetPersonaNames_Response_PersonaName::default_instance_
 B CMsgGCGiftedItems::default_instance_
 B CMsgGCHAccountVacStatusChange::default_instance_
 B CMsgGCHUpdateSession::default_instance_
 B CMsgGCHUpdateSession_ExtraField::default_instance_
 B CMsgGCIncrementKillCountResponse::default_instance_
 B CMsgGCItemPreviewItemBoughtNotification::default_instance_
 B CMsgGCMsgMasterSetClientMsgRouting::default_instance_
 B CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance_
 B CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance_
 B CMsgGCMsgMasterSetDirectory::default_instance_
 B CMsgGCMsgMasterSetDirectory_Response::default_instance_
 B CMsgGCMsgMasterSetDirectory_SubGC::default_instance_
 B CMsgGCMsgMasterSetWebAPIRouting::default_instance_
 B CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance_
 B CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance_
 B CMsgGCMsgSetOptions::default_instance_
 B CMsgGCMsgSetOptions_MessageRange::default_instance_
 B CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance_
 B CMsgGCMultiplexMessage::default_instance_
 B CMsgGCNameItemNotification::default_instance_
 B CMsgGCReportAbuse::default_instance_
 B CMsgGCReportAbuseResponse::default_instance_
 B CMsgGCRequestAnnouncements::default_instance_
 B CMsgGCRequestAnnouncementsResponse::default_instance_
 B CMsgGCRequestSessionIP::default_instance_
 B CMsgGCRequestSessionIPResponse::default_instance_
 B CMsgGCRoutingInfo::default_instance_
 B CMsgGCServerVersionUpdated::default_instance_
 B CMsgGCShowItemsPickedUp::default_instance_
 B CMsgGCStorePurchaseCancel::default_instance_
 B CMsgGCStorePurchaseCancelResponse::default_instance_
 B CMsgGCStorePurchaseFinalize::default_instance_
 B CMsgGCStorePurchaseFinalizeResponse::default_instance_
 B CMsgGCStorePurchaseInit::default_instance_
 B CMsgGCStorePurchaseInitResponse::default_instance_
 B CMsgGCToGCBannedWordListBroadcast::default_instance_
 B CMsgGCToGCBannedWordListUpdated::default_instance_
 B CMsgGCToGCBroadcastConsoleCommand::default_instance_
 B CMsgGCToGCDirtyMultipleSDOCache::default_instance_
 B CMsgGCToGCDirtySDOCache::default_instance_
 B CMsgGCToGCIsTrustedServer::default_instance_
 B CMsgGCToGCIsTrustedServerResponse::default_instance_
 B CMsgGCToGCReloadVersions::default_instance_
 B CMsgGCToGCRequestPassportItemGrant::default_instance_
 B CMsgGCToGCUpdateSQLKeyValue::default_instance_
 B CMsgGCToGCWebAPIAccountChanged::default_instance_
 B CMsgGCUpdateSessionIP::default_instance_
 B CMsgGC_ServerQuestUpdateData::default_instance_
 B CMsgGC_ServerQuestUpdateData_PlayerQuestData::default_instance_
 B CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::default_instance_
 B CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::default_instance_
 B CMsgGameServerInfo::default_instance_
 B CMsgHttpRequest::default_instance_
 B CMsgHttpRequest_QueryParam::default_instance_
 B CMsgHttpRequest_RequestHeader::default_instance_
 B CMsgHttpResponse::default_instance_
 B CMsgHttpResponse_ResponseHeader::default_instance_
 B CMsgIncrementKillCountAttribute::default_instance_
 B CMsgInvitationCreated::default_instance_
 B CMsgInviteToParty::default_instance_
 B CMsgItemAcknowledged::default_instance_
 B CMsgItemAcknowledged__DEPRECATED::default_instance_
 B CMsgKickFromParty::default_instance_
 B CMsgLANServerAvailable::default_instance_
 B CMsgLeaveParty::default_instance_
 B CMsgNotificationOfSuspiciousActivity::default_instance_
 B CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance_
 B CMsgNotifyWatchdog::default_instance_
 B CMsgPackageLicense::default_instance_
 B CMsgPartyInviteResponse::default_instance_
 B CMsgProtoBufHeader::default_instance_
 B CMsgQAngle::default_instance_
 B CMsgRGBA::default_instance_
 B CMsgReplayUploadedToYouTube::default_instance_
 B CMsgReplicateConVars::default_instance_
 B CMsgRequestInventoryRefresh::default_instance_
 B CMsgSDONoMemcached::default_instance_
 B CMsgSOCacheHaveVersion::default_instance_
 B CMsgSOCacheSubscribed::default_instance_
 B CMsgSOCacheSubscribed_SubscribedType::default_instance_
 B CMsgSOCacheSubscriptionCheck::default_instance_
 B CMsgSOCacheSubscriptionRefresh::default_instance_
 B CMsgSOCacheUnsubscribed::default_instance_
 B CMsgSOCacheVersion::default_instance_
 B CMsgSOIDOwner::default_instance_
 B CMsgSOMultipleObjects::default_instance_
 B CMsgSOMultipleObjects_SingleObject::default_instance_
 B CMsgSOSingleObject::default_instance_
 B CMsgSelectItemPresetForClass::default_instance_
 B CMsgSelectItemPresetForClassReply::default_instance_
 B CMsgServerAvailable::default_instance_
 B CMsgSetItemPositions::default_instance_
 B CMsgSetItemPositions_ItemPosition::default_instance_
 B CMsgSetPresetItemPosition::default_instance_
 B CMsgSortItems::default_instance_
 B CMsgStoreGetUserData::default_instance_
 B CMsgStoreGetUserDataResponse::default_instance_
 B CMsgSystemBroadcast::default_instance_
 B CMsgUpdateItemSchema::default_instance_
 B CMsgUseItem::default_instance_
 B CMsgVector2D::default_instance_
 B CMsgVector::default_instance_
 B CMsgWebAPIKey::default_instance_
 B CMsgWebAPIRequest::default_instance_
 B CMsg_CVars::default_instance_
 B CMsg_CVars_CVar::default_instance_
 B CMultiDamage_DataDescInit::g_DataMapHolder
 B CMultiSource_DataDescInit::g_DataMapHolder
 B CMultiplayRules::m_MapList
 B CMultiplayRules::m_nMapCycleTimeStamp
 B CMultiplayRules::m_nMapCycleindex
 B CNETMsg_Disconnect::default_instance_
 B CNETMsg_File::default_instance_
 B CNETMsg_NOP::default_instance_
 B CNETMsg_PlayerAvatarData::default_instance_
 B CNETMsg_SetConVar::default_instance_
 B CNETMsg_SignonState::default_instance_
 B CNETMsg_SplitScreenUser::default_instance_
 B CNETMsg_StringCmd::default_instance_
 B CNETMsg_Tick::default_instance_
 B CNPC_Furniture_DataDescInit::g_DataMapHolder
 B CNPC_HearDanger_DataDescInit::g_DataMapHolder
 B CNPC_VehicleDriver::gm_ClassScheduleIdSpace
 B CNPC_VehicleDriver::gm_SquadSlotIdSpace
 B CNPC_VehicleDriver_DataDescInit::g_DataMapHolder
 B CNavArea::m_isReset
 B CNavArea::m_openList
 B CNavArea::m_openListTail
 B CNavNode::m_list
 B CNavNode::m_listLength
 B CNavVectorNoEditAllocator::m_memory
 B CNavVectorNoEditAllocator::m_nBytesCurrent
 B CNavVectorNoEditAllocator::m_pCurrent
 B CNoDefuseArea_DataDescInit::g_DataMapHolder
 B CNodeEnt::m_nNodeCount
 B CNodeEnt_DataDescInit::g_DataMapHolder
 B COrnamentProp_DataDescInit::g_DataMapHolder
 B COuttroStats_DataDescInit::g_DataMapHolder
 B CParticleFire_DataDescInit::g_DataMapHolder
 B CParticleLight_DataDescInit::g_DataMapHolder
 B CParticlePerformanceMonitor_DataDescInit::g_DataMapHolder
 B CParticleSystemMgr::s_AttributeTable
 B CParticleSystem_DataDescInit::g_DataMapHolder
 B CPassengerInfo_DataDescInit::g_DataMapHolder
 B CPathCorner_DataDescInit::g_DataMapHolder
 B CPathKeyFrame_DataDescInit::g_DataMapHolder
 B CPathTrack::s_bIsIterating
 B CPathTrack::s_nCurrIterVal
 B CPathTrack_DataDescInit::g_DataMapHolder
 B CPhysBoxMultiplayer_DataDescInit::g_DataMapHolder
 B CPhysBox_DataDescInit::g_DataMapHolder
 B CPhysConstraintSystem_DataDescInit::g_DataMapHolder
 B CPhysConstraint_DataDescInit::g_DataMapHolder
 B CPhysConvert_DataDescInit::g_DataMapHolder
 B CPhysExplosion_DataDescInit::g_DataMapHolder
 B CPhysForce_DataDescInit::g_DataMapHolder
 B CPhysHinge_DataDescInit::g_DataMapHolder
 B CPhysImpact_DataDescInit::g_DataMapHolder
 B CPhysLength_DataDescInit::g_DataMapHolder
 B CPhysMagnet_DataDescInit::g_DataMapHolder
 B CPhysMotor_DataDescInit::g_DataMapHolder
 B CPhysPulley_DataDescInit::g_DataMapHolder
 B CPhysSlideConstraint_DataDescInit::g_DataMapHolder
 B CPhysThruster_DataDescInit::g_DataMapHolder
 B CPhysTorque_DataDescInit::g_DataMapHolder
 B CPhysicsCannister_DataDescInit::g_DataMapHolder
 B CPhysicsEntitySolver_DataDescInit::g_DataMapHolder
 B CPhysicsNPCSolver_DataDescInit::g_DataMapHolder
 B CPhysicsPropMultiplayer_DataDescInit::g_DataMapHolder
 B CPhysicsPropRespawnable_DataDescInit::g_DataMapHolder
 B CPhysicsProp_DataDescInit::g_DataMapHolder
 B CPhysicsShake_DataDescInit::g_DataMapHolder
 B CPhysicsSpring_DataDescInit::g_DataMapHolder
 B CPhysicsWind_DataDescInit::g_DataMapHolder
 B CPhysicsWire_DataDescInit::g_DataMapHolder
 B CPlantedC4Training_DataDescInit::g_DataMapHolder
 B CPlantedC4_DataDescInit::g_DataMapHolder
 B CPlasma_DataDescInit::g_DataMapHolder
 B CPlayerLocalData_DataDescInit::g_DataMapHolder
 B CPlayerResource_DataDescInit::g_DataMapHolder
 B CPlayerState_DataDescInit::g_DataMapHolder
 B CPointAngleSensor_DataDescInit::g_DataMapHolder
 B CPointAngularVelocitySensor_DataDescInit::g_DataMapHolder
 B CPointBonusMapsAccessor_DataDescInit::g_DataMapHolder
 B CPointBroadcastClientCommand_DataDescInit::g_DataMapHolder
 B CPointCamera_DataDescInit::g_DataMapHolder
 B CPointClientCommand_DataDescInit::g_DataMapHolder
 B CPointCommentaryNode_DataDescInit::g_DataMapHolder
 B CPointDevShotCamera_DataDescInit::g_DataMapHolder
 B CPointEntityFinder_DataDescInit::g_DataMapHolder
 B CPointGamestatsCounter_DataDescInit::g_DataMapHolder
 B CPointHurt_DataDescInit::g_DataMapHolder
 B CPointPlayerMoveConstraint_DataDescInit::g_DataMapHolder
 B CPointProximitySensor_DataDescInit::g_DataMapHolder
 B CPointServerCommand_DataDescInit::g_DataMapHolder
 B CPointSpotlight_DataDescInit::g_DataMapHolder
 B CPointTeleport_DataDescInit::g_DataMapHolder
 B CPointTemplate_DataDescInit::g_DataMapHolder
 B CPointVelocitySensor_DataDescInit::g_DataMapHolder
 B CPortalTouchScope::m_CallQueue
 B CPoseController_DataDescInit::g_DataMapHolder
 B CPostProcessController_DataDescInit::g_DataMapHolder
 B CPreMatchInfoData::default_instance_
 B CPreMatchInfoData_TeamStats::default_instance_
 B CPrecipitationBlocker_DataDescInit::g_DataMapHolder
 B CPrecipitation_DataDescInit::g_DataMapHolder
 B CProjectedDecal_DataDescInit::g_DataMapHolder
 B CPropDoorRotatingBreakable_DataDescInit::g_DataMapHolder
 B CPropDoorRotating_DataDescInit::g_DataMapHolder
 B CPropJeep_DataDescInit::g_DataMapHolder
 B CPropVehicleDriveable_DataDescInit::g_DataMapHolder
 B CPropVehicle_DataDescInit::g_DataMapHolder
 B CProp_Hallucination_DataDescInit::g_DataMapHolder
 B CPushBlockerEnum::s_nEnumCount
 B CRTime::sm_nTimeCur
 B CRTime::sm_nTimeLastSystemTimeUpdate
 B CRTime::sm_rgchLocalDateCur
 B CRTime::sm_rgchLocalTimeCur
 B CRagdollBoogie_DataDescInit::g_DataMapHolder
 B CRagdollConstraint_DataDescInit::g_DataMapHolder
 B CRagdollMagnet_DataDescInit::g_DataMapHolder
 B CRagdollManager_DataDescInit::g_DataMapHolder
 B CRagdollPropAttached_DataDescInit::g_DataMapHolder
 B CRagdollProp_DataDescInit::g_DataMapHolder
 B CRallyPoint_DataDescInit::g_DataMapHolder
 B CRandSimTimer_DataDescInit::g_DataMapHolder
 B CRandStopwatch_DataDescInit::g_DataMapHolder
 B CRevertSaved_DataDescInit::g_DataMapHolder
 B CRopeAnchor_DataDescInit::g_DataMapHolder
 B CRopeKeyframe_DataDescInit::g_DataMapHolder
 B CRotDoor_DataDescInit::g_DataMapHolder
 B CRotorWashShooter_DataDescInit::g_DataMapHolder
 B CRuleEntity_DataDescInit::g_DataMapHolder
 B CRulePointEntity_DataDescInit::g_DataMapHolder
 B CSOEconClaimCode::default_instance_
 B CSOEconDefaultEquippedDefinitionInstanceClient::default_instance_
 B CSOEconGameAccountClient::default_instance_
 B CSOEconItem::default_instance_
 B CSOEconItemAttribute::default_instance_
 B CSOEconItemDropRateBonus::default_instance_
 B CSOEconItemEquipped::default_instance_
 B CSOEconItemEventTicket::default_instance_
 B CSOEconItemLeagueViewPass::default_instance_
 B CSOEconItemPresetInstance::default_instance_
 B CSOItemCriteria::default_instance_
 B CSOItemCriteriaCondition::default_instance_
 B CSOItemRecipe::default_instance_
 B CSOLobbyInvite::default_instance_
 B CSOPartyInvite::default_instance_
 B CSOSelectedItemPreset::default_instance_
 B CSStatProperty_Table
 B CSVCMsg_BSPDecal::default_instance_
 B CSVCMsg_ClassInfo::default_instance_
 B CSVCMsg_ClassInfo_class_t::default_instance_
 B CSVCMsg_CmdKeyValues::default_instance_
 B CSVCMsg_CreateStringTable::default_instance_
 B CSVCMsg_CrosshairAngle::default_instance_
 B CSVCMsg_EncryptedData::default_instance_
 B CSVCMsg_EntityMsg::default_instance_
 B CSVCMsg_FixAngle::default_instance_
 B CSVCMsg_GameEvent::default_instance_
 B CSVCMsg_GameEventList::default_instance_
 B CSVCMsg_GameEventList_descriptor_t::default_instance_
 B CSVCMsg_GameEventList_key_t::default_instance_
 B CSVCMsg_GameEvent_key_t::default_instance_
 B CSVCMsg_GetCvarValue::default_instance_
 B CSVCMsg_Menu::default_instance_
 B CSVCMsg_PacketEntities::default_instance_
 B CSVCMsg_PaintmapData::default_instance_
 B CSVCMsg_Prefetch::default_instance_
 B CSVCMsg_Print::default_instance_
 B CSVCMsg_SendTable::default_instance_
 B CSVCMsg_SendTable_sendprop_t::default_instance_
 B CSVCMsg_ServerInfo::default_instance_
 B CSVCMsg_SetPause::default_instance_
 B CSVCMsg_SetView::default_instance_
 B CSVCMsg_Sounds::default_instance_
 B CSVCMsg_Sounds_sounddata_t::default_instance_
 B CSVCMsg_SplitScreen::default_instance_
 B CSVCMsg_TempEntities::default_instance_
 B CSVCMsg_UpdateStringTable::default_instance_
 B CSVCMsg_UserMessage::default_instance_
 B CSVCMsg_VoiceData::default_instance_
 B CSVCMsg_VoiceInit::default_instance_
 B CS_WarnFriendlyDamageInterval
 B CSceneEntity_DataDescInit::g_DataMapHolder
 B CSceneListManager_DataDescInit::g_DataMapHolder
 B CSceneManager_DataDescInit::g_DataMapHolder
 B CSchemaAttributeStats::m_pHead
 B CSchemaClassBindingBase::sm_pClassBindingList
 B CScriptedTarget_DataDescInit::g_DataMapHolder
 B CServerBenchmarkHook::s_pBenchmarkHook
 B CServerNetworkProperty_DataDescInit::g_DataMapHolder
 B CShadowControl_DataDescInit::g_DataMapHolder
 B CSimTimer_DataDescInit::g_DataMapHolder
 B CSimpleSimTimer_DataDescInit::g_DataMapHolder
 B CSkyCamera_DataDescInit::g_DataMapHolder
 B CSkyboxSwapper_DataDescInit::g_DataMapHolder
 B CSlideshowDisplay_DataDescInit::g_DataMapHolder
 B CSmokeGrenadeProjectile_DataDescInit::g_DataMapHolder
 B CSmokeGrenade_DataDescInit::g_DataMapHolder
 B CSmokeStackLightInfo_DataDescInit::g_DataMapHolder
 B CSmokeStack_DataDescInit::g_DataMapHolder
 B CSoundEnt_DataDescInit::g_DataMapHolder
 B CSoundEnvelope_DataDescInit::g_DataMapHolder
 B CSoundPatch::g_SoundPatchCount
 B CSoundPatch::s_Allocator
 B CSoundPatch_DataDescInit::g_DataMapHolder
 B CSound_DataDescInit::g_DataMapHolder
 B CSpatialEntity_DataDescInit::g_DataMapHolder
 B CSpotlightEnd_DataDescInit::g_DataMapHolder
 B CSpriteTrail_DataDescInit::g_DataMapHolder
 B CSprite_DataDescInit::g_DataMapHolder
 B CStatueProp_DataDescInit::g_DataMapHolder
 B CSteamJet_DataDescInit::g_DataMapHolder
 B CStopwatchBase_DataDescInit::g_DataMapHolder
 B CStopwatch_DataDescInit::g_DataMapHolder
 B CStressEntityReg::s_pHead
 B CStripWeapons_DataDescInit::g_DataMapHolder
 B CSun_DataDescInit::g_DataMapHolder
 B CSunlightShadowControl_DataDescInit::g_DataMapHolder
 B CSurroundTest_DataDescInit::g_DataMapHolder
 B CTakeDamageInfo_DataDescInit::g_DataMapHolder
 B CTankTargetChange_DataDescInit::g_DataMapHolder
 B CTankTrainAI_DataDescInit::g_DataMapHolder
 B CTargetCDAudioRep_DataDescInit::g_DataMapHolder
 B CTargetChangeGravity_DataDescInit::g_DataMapHolder
 B CTeamSpawnPoint_DataDescInit::g_DataMapHolder
 B CTeamVehicleSpawnPoint_DataDescInit::g_DataMapHolder
 B CTeamplayRoundBasedRulesProxy_DataDescInit::g_DataMapHolder
 B CTesla_DataDescInit::g_DataMapHolder
 B CTestTraceline_DataDescInit::g_DataMapHolder
 B CTextStatFile::s_pHead
 B CTextureToggle_DataDescInit::g_DataMapHolder
 B CThrustController_DataDescInit::g_DataMapHolder
 B CTimeline_DataDescInit::g_DataMapHolder
 B CTimerEntity_DataDescInit::g_DataMapHolder
 B CTonemapTrigger_DataDescInit::g_DataMapHolder
 B CTriggerAutoCrouch_DataDescInit::g_DataMapHolder
 B CTriggerBombReset_DataDescInit::g_DataMapHolder
 B CTriggerBrush_DataDescInit::g_DataMapHolder
 B CTriggerCameraMultiplayer_DataDescInit::g_DataMapHolder
 B CTriggerCamera_DataDescInit::g_DataMapHolder
 B CTriggerGravity_DataDescInit::g_DataMapHolder
 B CTriggerHierarchy_DataDescInit::g_DataMapHolder
 B CTriggerHurt_DataDescInit::g_DataMapHolder
 B CTriggerImpact_DataDescInit::g_DataMapHolder
 B CTriggerLook_DataDescInit::g_DataMapHolder
 B CTriggerMultiple_DataDescInit::g_DataMapHolder
 B CTriggerPlayerMovement_DataDescInit::g_DataMapHolder
 B CTriggerProximity_DataDescInit::g_DataMapHolder
 B CTriggerPush_DataDescInit::g_DataMapHolder
 B CTriggerRemove_DataDescInit::g_DataMapHolder
 B CTriggerSave_DataDescInit::g_DataMapHolder
 B CTriggerSoundscape_DataDescInit::g_DataMapHolder
 B CTriggerTeleport_DataDescInit::g_DataMapHolder
 B CTriggerToggleSave_DataDescInit::g_DataMapHolder
 B CTriggerVPhysicsMotion_DataDescInit::g_DataMapHolder
 B CTriggerViewProxy_DataDescInit::g_DataMapHolder
 B CTriggerWind_DataDescInit::g_DataMapHolder
 B CUtlSymbol::s_pSymbolTable
 B CVGuiScreen_DataDescInit::g_DataMapHolder
 B CVoteController_DataDescInit::g_DataMapHolder
 B CWC_UpdateIgnoreList_DataDescInit::g_DataMapHolder
 B CWaterBullet_DataDescInit::g_DataMapHolder
 B CWaterLODControl_DataDescInit::g_DataMapHolder
 B CWeaponCSBase_DataDescInit::g_DataMapHolder
 B CWeaponCycler_DataDescInit::g_DataMapHolder
 B CWeightButton_DataDescInit::g_DataMapHolder
 B CWindowPane_DataDescInit::g_DataMapHolder
 B CWorkshop_GetContributors_Request::default_instance_
 B CWorkshop_GetContributors_Response::default_instance_
 B CWorkshop_PopulateItemDescriptions_Request::default_instance_
 B CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::default_instance_
 B CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::default_instance_
 B CWorkshop_SetItemPaymentRules_Request::default_instance_
 B CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::default_instance_
 B CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::default_instance_
 B CWorkshop_SetItemPaymentRules_Response::default_instance_
 B CWorldItem_DataDescInit::g_DataMapHolder
 B CWorld_DataDescInit::g_DataMapHolder
 B CWreckage_DataDescInit::g_DataMapHolder
 B CaptionLookup_t_DataDescInit::g_DataMapHolder
 B ClientGamePrecachePrecache::s_ResourcePrecacher
 B ClientPrecachePrecache::s_ResourcePrecacher
 B CompiledCaptionHeader_t_DataDescInit::g_DataMapHolder
 B ConCommandBase::s_pAccessor
 B ConCommandBase::s_pConCommandBases
 B ConceptHistory_t_DataDescInit::g_DataMapHolder
 B DT_AI_BaseNPC::g_SendTable
 B DT_AI_BaseNPC::g_SendTableInit
 B DT_AnimTimeMustBeFirst::g_SendTable
 B DT_AnimTimeMustBeFirst::g_SendTableInit
 B DT_Animationlayer::g_SendTable
 B DT_Animationlayer::g_SendTableInit
 B DT_AttributeContainer::g_SendTable
 B DT_AttributeContainer::g_SendTableInit
 B DT_AttributeContainerPlayer::g_SendTable
 B DT_AttributeContainerPlayer::g_SendTableInit
 B DT_AttributeList::g_SendTable
 B DT_AttributeList::g_SendTableInit
 B DT_AttributeManager::g_SendTable
 B DT_AttributeManager::g_SendTableInit
 B DT_BCCLocalPlayerExclusive::g_SendTable
 B DT_BCCLocalPlayerExclusive::g_SendTableInit
 B DT_BCCNonLocalPlayerExclusive::g_SendTable
 B DT_BCCNonLocalPlayerExclusive::g_SendTableInit
 B DT_BaseAnimating::g_SendTable
 B DT_BaseAnimating::g_SendTableInit
 B DT_BaseAnimatingOverlay::g_SendTable
 B DT_BaseAnimatingOverlay::g_SendTableInit
 B DT_BaseAttributableItem::g_SendTable
 B DT_BaseAttributableItem::g_SendTableInit
 B DT_BaseBeam::g_SendTable
 B DT_BaseBeam::g_SendTableInit
 B DT_BaseButton::g_SendTable
 B DT_BaseButton::g_SendTableInit
 B DT_BaseCSGrenade::g_SendTable
 B DT_BaseCSGrenade::g_SendTableInit
 B DT_BaseCSGrenadeProjectile::g_SendTable
 B DT_BaseCSGrenadeProjectile::g_SendTableInit
 B DT_BaseCombatCharacter::g_SendTable
 B DT_BaseCombatCharacter::g_SendTableInit
 B DT_BaseCombatWeapon::g_SendTable
 B DT_BaseCombatWeapon::g_SendTableInit
 B DT_BaseDoor::g_SendTable
 B DT_BaseDoor::g_SendTableInit
 B DT_BaseEntity::g_SendTable
 B DT_BaseEntity::g_SendTableInit
 B DT_BaseFlex::g_SendTable
 B DT_BaseFlex::g_SendTableInit
 B DT_BaseGrenade::g_SendTable
 B DT_BaseGrenade::g_SendTableInit
 B DT_BaseParticleEntity::g_SendTable
 B DT_BaseParticleEntity::g_SendTableInit
 B DT_BasePlayer::g_SendTable
 B DT_BasePlayer::g_SendTableInit
 B DT_BasePropDoor::g_SendTable
 B DT_BasePropDoor::g_SendTableInit
 B DT_BaseTeamObjectiveResource::g_SendTable
 B DT_BaseTeamObjectiveResource::g_SendTableInit
 B DT_BaseTempEntity::g_SendTable
 B DT_BaseTempEntity::g_SendTableInit
 B DT_BaseToggle::g_SendTable
 B DT_BaseToggle::g_SendTableInit
 B DT_BaseTrigger::g_SendTable
 B DT_BaseTrigger::g_SendTableInit
 B DT_BaseVPhysicsTrigger::g_SendTable
 B DT_BaseVPhysicsTrigger::g_SendTableInit
 B DT_BaseViewModel::g_SendTable
 B DT_BaseViewModel::g_SendTableInit
 B DT_Beam::g_SendTable
 B DT_Beam::g_SendTableInit
 B DT_BeamSpotlight::g_SendTable
 B DT_BeamSpotlight::g_SendTableInit
 B DT_BoneFollower::g_SendTable
 B DT_BoneFollower::g_SendTableInit
 B DT_BreakableProp::g_SendTable
 B DT_BreakableProp::g_SendTableInit
 B DT_BreakableSurface::g_SendTable
 B DT_BreakableSurface::g_SendTableInit
 B DT_CChicken::g_SendTable
 B DT_CChicken::g_SendTableInit
 B DT_CFish::g_SendTable
 B DT_CFish::g_SendTableInit
 B DT_CHostage::g_SendTable
 B DT_CHostage::g_SendTableInit
 B DT_CSGameRules::g_SendTable
 B DT_CSGameRules::g_SendTableInit
 B DT_CSGameRulesProxy::g_SendTable
 B DT_CSGameRulesProxy::g_SendTableInit
 B DT_CSLocalPlayerExclusive::g_SendTable
 B DT_CSLocalPlayerExclusive::g_SendTableInit
 B DT_CSNonLocalPlayerExclusive::g_SendTable
 B DT_CSNonLocalPlayerExclusive::g_SendTableInit
 B DT_CSPlayer::g_SendTable
 B DT_CSPlayer::g_SendTableInit
 B DT_CSPlayerResource::g_SendTable
 B DT_CSPlayerResource::g_SendTableInit
 B DT_CSRagdoll::g_SendTable
 B DT_CSRagdoll::g_SendTableInit
 B DT_CSTeam::g_SendTable
 B DT_CSTeam::g_SendTableInit
 B DT_CascadeLight::g_SendTable
 B DT_CascadeLight::g_SendTableInit
 B DT_CollisionProperty::g_SendTable
 B DT_CollisionProperty::g_SendTableInit
 B DT_ColorCorrection::g_SendTable
 B DT_ColorCorrection::g_SendTableInit
 B DT_ColorCorrectionVolume::g_SendTable
 B DT_ColorCorrectionVolume::g_SendTableInit
 B DT_CountdownTimer::g_SendTable
 B DT_CountdownTimer::g_SendTableInit
 B DT_DecoyGrenade::g_SendTable
 B DT_DecoyGrenade::g_SendTableInit
 B DT_DecoyProjectile::g_SendTable
 B DT_DecoyProjectile::g_SendTableInit
 B DT_DetailController::g_SendTable
 B DT_DetailController::g_SendTableInit
 B DT_DustTrail::g_SendTable
 B DT_DustTrail::g_SendTableInit
 B DT_DynamicLight::g_SendTable
 B DT_DynamicLight::g_SendTableInit
 B DT_DynamicProp::g_SendTable
 B DT_DynamicProp::g_SendTableInit
 B DT_EconEntity::g_SendTable
 B DT_EconEntity::g_SendTableInit
 B DT_EffectData::g_SendTable
 B DT_EffectData::g_SendTableInit
 B DT_Embers::g_SendTable
 B DT_Embers::g_SendTableInit
 B DT_EntityDissolve::g_SendTable
 B DT_EntityDissolve::g_SendTableInit
 B DT_EntityFlame::g_SendTable
 B DT_EntityFlame::g_SendTableInit
 B DT_EntityFreezing::g_SendTable
 B DT_EntityFreezing::g_SendTableInit
 B DT_EntityParticleTrail::g_SendTable
 B DT_EntityParticleTrail::g_SendTableInit
 B DT_EntityParticleTrailInfo::g_SendTable
 B DT_EntityParticleTrailInfo::g_SendTableInit
 B DT_EnvAmbientLight::g_SendTable
 B DT_EnvAmbientLight::g_SendTableInit
 B DT_EnvDOFController::g_SendTable
 B DT_EnvDOFController::g_SendTableInit
 B DT_EnvParticleScript::g_SendTable
 B DT_EnvParticleScript::g_SendTableInit
 B DT_EnvProjectedTexture::g_SendTable
 B DT_EnvProjectedTexture::g_SendTableInit
 B DT_EnvScreenEffect::g_SendTable
 B DT_EnvScreenEffect::g_SendTableInit
 B DT_EnvScreenOverlay::g_SendTable
 B DT_EnvScreenOverlay::g_SendTableInit
 B DT_EnvTonemapController::g_SendTable
 B DT_EnvTonemapController::g_SendTableInit
 B DT_EnvWind::g_SendTable
 B DT_EnvWind::g_SendTableInit
 B DT_EnvWindShared::g_SendTable
 B DT_EnvWindShared::g_SendTableInit
 B DT_FireCrackerBlast::g_SendTable
 B DT_FireCrackerBlast::g_SendTableInit
 B DT_FireSmoke::g_SendTable
 B DT_FireSmoke::g_SendTableInit
 B DT_FireTrail::g_SendTable
 B DT_FireTrail::g_SendTableInit
 B DT_Flashbang::g_SendTable
 B DT_Flashbang::g_SendTableInit
 B DT_FogController::g_SendTable
 B DT_FogController::g_SendTableInit
 B DT_FootstepControl::g_SendTable
 B DT_FootstepControl::g_SendTableInit
 B DT_FuncAreaPortalWindow::g_SendTable
 B DT_FuncAreaPortalWindow::g_SendTableInit
 B DT_FuncBrush::g_SendTable
 B DT_FuncBrush::g_SendTableInit
 B DT_FuncConveyor::g_SendTable
 B DT_FuncConveyor::g_SendTableInit
 B DT_FuncLadder::g_SendTable
 B DT_FuncLadder::g_SendTableInit
 B DT_FuncMonitor::g_SendTable
 B DT_FuncMonitor::g_SendTableInit
 B DT_FuncMoveLinear::g_SendTable
 B DT_FuncMoveLinear::g_SendTableInit
 B DT_FuncOccluder::g_SendTable
 B DT_FuncOccluder::g_SendTableInit
 B DT_FuncReflectiveGlass::g_SendTable
 B DT_FuncReflectiveGlass::g_SendTableInit
 B DT_FuncRotating::g_SendTable
 B DT_FuncRotating::g_SendTableInit
 B DT_FuncSmokeVolume::g_SendTable
 B DT_FuncSmokeVolume::g_SendTableInit
 B DT_FuncTrackTrain::g_SendTable
 B DT_FuncTrackTrain::g_SendTableInit
 B DT_Func_Dust::g_SendTable
 B DT_Func_Dust::g_SendTableInit
 B DT_Func_LOD::g_SendTable
 B DT_Func_LOD::g_SendTableInit
 B DT_GameRulesProxy::g_SendTable
 B DT_GameRulesProxy::g_SendTableInit
 B DT_HEGrenade::g_SendTable
 B DT_HEGrenade::g_SendTableInit
 B DT_HandleTest::g_SendTable
 B DT_HandleTest::g_SendTableInit
 B DT_HostageCarriableProp::g_SendTable
 B DT_HostageCarriableProp::g_SendTableInit
 B DT_IncendiaryGrenade::g_SendTable
 B DT_IncendiaryGrenade::g_SendTableInit
 B DT_Inferno::g_SendTable
 B DT_Inferno::g_SendTableInit
 B DT_InfoLadderDismount::g_SendTable
 B DT_InfoLadderDismount::g_SendTableInit
 B DT_InfoOverlayAccessor::g_SendTable
 B DT_InfoOverlayAccessor::g_SendTableInit
 B DT_IntervalTimer::g_SendTable
 B DT_IntervalTimer::g_SendTableInit
 B DT_LightGlow::g_SendTable
 B DT_LightGlow::g_SendTableInit
 B DT_Local::g_SendTable
 B DT_Local::g_SendTableInit
 B DT_LocalActiveWeaponData::g_SendTable
 B DT_LocalActiveWeaponData::g_SendTableInit
 B DT_LocalPlayerExclusive::g_SendTable
 B DT_LocalPlayerExclusive::g_SendTableInit
 B DT_LocalWeaponData::g_SendTable
 B DT_LocalWeaponData::g_SendTableInit
 B DT_MaterialModifyControl::g_SendTable
 B DT_MaterialModifyControl::g_SendTableInit
 B DT_MolotovGrenade::g_SendTable
 B DT_MolotovGrenade::g_SendTableInit
 B DT_MolotovProjectile::g_SendTable
 B DT_MolotovProjectile::g_SendTableInit
 B DT_MovieDisplay::g_SendTable
 B DT_MovieDisplay::g_SendTableInit
 B DT_MovieExplosion::g_SendTable
 B DT_MovieExplosion::g_SendTableInit
 B DT_OverlayVars::g_SendTable
 B DT_OverlayVars::g_SendTableInit
 B DT_ParticleFire::g_SendTable
 B DT_ParticleFire::g_SendTableInit
 B DT_ParticlePerformanceMonitor::g_SendTable
 B DT_ParticlePerformanceMonitor::g_SendTableInit
 B DT_ParticleSmokeGrenade::g_SendTable
 B DT_ParticleSmokeGrenade::g_SendTableInit
 B DT_ParticleSystem::g_SendTable
 B DT_ParticleSystem::g_SendTableInit
 B DT_PhysBox::g_SendTable
 B DT_PhysBox::g_SendTableInit
 B DT_PhysBoxMultiplayer::g_SendTable
 B DT_PhysBoxMultiplayer::g_SendTableInit
 B DT_PhysMagnet::g_SendTable
 B DT_PhysMagnet::g_SendTableInit
 B DT_PhysicsProp::g_SendTable
 B DT_PhysicsProp::g_SendTableInit
 B DT_PhysicsPropMultiplayer::g_SendTable
 B DT_PhysicsPropMultiplayer::g_SendTableInit
 B DT_PlantedC4::g_SendTable
 B DT_PlantedC4::g_SendTableInit
 B DT_Plasma::g_SendTable
 B DT_Plasma::g_SendTableInit
 B DT_PlayerResource::g_SendTable
 B DT_PlayerResource::g_SendTableInit
 B DT_PlayerState::g_SendTable
 B DT_PlayerState::g_SendTableInit
 B DT_PointCamera::g_SendTable
 B DT_PointCamera::g_SendTableInit
 B DT_PointCommentaryNode::g_SendTable
 B DT_PointCommentaryNode::g_SendTableInit
 B DT_PoseController::g_SendTable
 B DT_PoseController::g_SendTableInit
 B DT_PostProcessController::g_SendTable
 B DT_PostProcessController::g_SendTableInit
 B DT_Precipitation::g_SendTable
 B DT_Precipitation::g_SendTableInit
 B DT_PrecipitationBlocker::g_SendTable
 B DT_PrecipitationBlocker::g_SendTableInit
 B DT_PredictedViewModel::g_SendTable
 B DT_PredictedViewModel::g_SendTableInit
 B DT_PropDoorRotating::g_SendTable
 B DT_PropDoorRotating::g_SendTableInit
 B DT_PropJeep::g_SendTable
 B DT_PropJeep::g_SendTableInit
 B DT_PropVehicleDriveable::g_SendTable
 B DT_PropVehicleDriveable::g_SendTableInit
 B DT_Prop_Hallucination::g_SendTable
 B DT_Prop_Hallucination::g_SendTableInit
 B DT_ProxyToggle::g_SendTable
 B DT_ProxyToggle::g_SendTableInit
 B DT_ProxyToggle_ProxiedData::g_SendTable
 B DT_ProxyToggle_ProxiedData::g_SendTableInit
 B DT_QuadraticBeam::g_SendTable
 B DT_QuadraticBeam::g_SendTableInit
 B DT_Ragdoll::g_SendTable
 B DT_Ragdoll::g_SendTableInit
 B DT_RagdollManager::g_SendTable
 B DT_RagdollManager::g_SendTableInit
 B DT_Ragdoll_Attached::g_SendTable
 B DT_Ragdoll_Attached::g_SendTableInit
 B DT_RocketTrail::g_SendTable
 B DT_RocketTrail::g_SendTableInit
 B DT_RopeKeyframe::g_SendTable
 B DT_RopeKeyframe::g_SendTableInit
 B DT_SceneEntity::g_SendTable
 B DT_SceneEntity::g_SendTableInit
 B DT_ScriptCreatedAttribute::g_SendTable
 B DT_ScriptCreatedAttribute::g_SendTableInit
 B DT_ScriptCreatedItem::g_SendTable
 B DT_ScriptCreatedItem::g_SendTableInit
 B DT_ServerAnimationData::g_SendTable
 B DT_ServerAnimationData::g_SendTableInit
 B DT_ShadowControl::g_SendTable
 B DT_ShadowControl::g_SendTableInit
 B DT_SlideshowDisplay::g_SendTable
 B DT_SlideshowDisplay::g_SendTableInit
 B DT_SmokeGrenade::g_SendTable
 B DT_SmokeGrenade::g_SendTableInit
 B DT_SmokeGrenadeProjectile::g_SendTable
 B DT_SmokeGrenadeProjectile::g_SendTableInit
 B DT_SmokeStack::g_SendTable
 B DT_SmokeStack::g_SendTableInit
 B DT_SmokeTrail::g_SendTable
 B DT_SmokeTrail::g_SendTableInit
 B DT_SpatialEntity::g_SendTable
 B DT_SpatialEntity::g_SendTableInit
 B DT_SporeExplosion::g_SendTable
 B DT_SporeExplosion::g_SendTableInit
 B DT_SporeTrail::g_SendTable
 B DT_SporeTrail::g_SendTableInit
 B DT_SpotlightEnd::g_SendTable
 B DT_SpotlightEnd::g_SendTableInit
 B DT_Sprite::g_SendTable
 B DT_Sprite::g_SendTableInit
 B DT_SpriteOriented::g_SendTable
 B DT_SpriteOriented::g_SendTableInit
 B DT_SpriteTrail::g_SendTable
 B DT_SpriteTrail::g_SendTableInit
 B DT_StatueProp::g_SendTable
 B DT_StatueProp::g_SendTableInit
 B DT_SteamJet::g_SendTable
 B DT_SteamJet::g_SendTableInit
 B DT_Sun::g_SendTable
 B DT_Sun::g_SendTableInit
 B DT_SunlightShadowControl::g_SendTable
 B DT_SunlightShadowControl::g_SendTableInit
 B DT_TEArmorRicochet::g_SendTable
 B DT_TEArmorRicochet::g_SendTableInit
 B DT_TEBSPDecal::g_SendTable
 B DT_TEBSPDecal::g_SendTableInit
 B DT_TEBeamEntPoint::g_SendTable
 B DT_TEBeamEntPoint::g_SendTableInit
 B DT_TEBeamEnts::g_SendTable
 B DT_TEBeamEnts::g_SendTableInit
 B DT_TEBeamFollow::g_SendTable
 B DT_TEBeamFollow::g_SendTableInit
 B DT_TEBeamLaser::g_SendTable
 B DT_TEBeamLaser::g_SendTableInit
 B DT_TEBeamPoints::g_SendTable
 B DT_TEBeamPoints::g_SendTableInit
 B DT_TEBeamRing::g_SendTable
 B DT_TEBeamRing::g_SendTableInit
 B DT_TEBeamRingPoint::g_SendTable
 B DT_TEBeamRingPoint::g_SendTableInit
 B DT_TEBeamSpline::g_SendTable
 B DT_TEBeamSpline::g_SendTableInit
 B DT_TEBloodSprite::g_SendTable
 B DT_TEBloodSprite::g_SendTableInit
 B DT_TEBloodStream::g_SendTable
 B DT_TEBloodStream::g_SendTableInit
 B DT_TEBreakModel::g_SendTable
 B DT_TEBreakModel::g_SendTableInit
 B DT_TEBubbleTrail::g_SendTable
 B DT_TEBubbleTrail::g_SendTableInit
 B DT_TEBubbles::g_SendTable
 B DT_TEBubbles::g_SendTableInit
 B DT_TEClientProjectile::g_SendTable
 B DT_TEClientProjectile::g_SendTableInit
 B DT_TEDecal::g_SendTable
 B DT_TEDecal::g_SendTableInit
 B DT_TEDust::g_SendTable
 B DT_TEDust::g_SendTableInit
 B DT_TEDynamicLight::g_SendTable
 B DT_TEDynamicLight::g_SendTableInit
 B DT_TEEffectDispatch::g_SendTable
 B DT_TEEffectDispatch::g_SendTableInit
 B DT_TEEnergySplash::g_SendTable
 B DT_TEEnergySplash::g_SendTableInit
 B DT_TEExplosion::g_SendTable
 B DT_TEExplosion::g_SendTableInit
 B DT_TEFireBullets::g_SendTable
 B DT_TEFireBullets::g_SendTableInit
 B DT_TEFizz::g_SendTable
 B DT_TEFizz::g_SendTableInit
 B DT_TEFootprintDecal::g_SendTable
 B DT_TEFootprintDecal::g_SendTableInit
 B DT_TEFoundryHelpers::g_SendTable
 B DT_TEFoundryHelpers::g_SendTableInit
 B DT_TEGaussExplosion::g_SendTable
 B DT_TEGaussExplosion::g_SendTableInit
 B DT_TEGlowSprite::g_SendTable
 B DT_TEGlowSprite::g_SendTableInit
 B DT_TEImpact::g_SendTable
 B DT_TEImpact::g_SendTableInit
 B DT_TEKillPlayerAttachments::g_SendTable
 B DT_TEKillPlayerAttachments::g_SendTableInit
 B DT_TELargeFunnel::g_SendTable
 B DT_TELargeFunnel::g_SendTableInit
 B DT_TEMetalSparks::g_SendTable
 B DT_TEMetalSparks::g_SendTableInit
 B DT_TEMuzzleFlash::g_SendTable
 B DT_TEMuzzleFlash::g_SendTableInit
 B DT_TEParticleSystem::g_SendTable
 B DT_TEParticleSystem::g_SendTableInit
 B DT_TEPhysicsProp::g_SendTable
 B DT_TEPhysicsProp::g_SendTableInit
 B DT_TEPlantBomb::g_SendTable
 B DT_TEPlantBomb::g_SendTableInit
 B DT_TEPlayerAnimEvent::g_SendTable
 B DT_TEPlayerAnimEvent::g_SendTableInit
 B DT_TEPlayerDecal::g_SendTable
 B DT_TEPlayerDecal::g_SendTableInit
 B DT_TEProjectedDecal::g_SendTable
 B DT_TEProjectedDecal::g_SendTableInit
 B DT_TERadioIcon::g_SendTable
 B DT_TERadioIcon::g_SendTableInit
 B DT_TEShatterSurface::g_SendTable
 B DT_TEShatterSurface::g_SendTableInit
 B DT_TEShowLine::g_SendTable
 B DT_TEShowLine::g_SendTableInit
 B DT_TESmoke::g_SendTable
 B DT_TESmoke::g_SendTableInit
 B DT_TESparks::g_SendTable
 B DT_TESparks::g_SendTableInit
 B DT_TESprite::g_SendTable
 B DT_TESprite::g_SendTableInit
 B DT_TESpriteSpray::g_SendTable
 B DT_TESpriteSpray::g_SendTableInit
 B DT_TEWorldDecal::g_SendTable
 B DT_TEWorldDecal::g_SendTableInit
 B DT_Team::g_SendTable
 B DT_Team::g_SendTableInit
 B DT_TeamplayRoundBasedRules::g_SendTable
 B DT_TeamplayRoundBasedRules::g_SendTableInit
 B DT_TeamplayRoundBasedRulesProxy::g_SendTable
 B DT_TeamplayRoundBasedRulesProxy::g_SendTableInit
 B DT_Tesla::g_SendTable
 B DT_Tesla::g_SendTableInit
 B DT_TestTraceline::g_SendTable
 B DT_TestTraceline::g_SendTableInit
 B DT_Timeline::g_SendTable
 B DT_Timeline::g_SendTableInit
 B DT_TriggerPlayerMovement::g_SendTable
 B DT_TriggerPlayerMovement::g_SendTableInit
 B DT_VGuiScreen::g_SendTable
 B DT_VGuiScreen::g_SendTableInit
 B DT_VoteController::g_SendTable
 B DT_VoteController::g_SendTableInit
 B DT_WORLD::g_SendTable
 B DT_WORLD::g_SendTableInit
 B DT_WaterBullet::g_SendTable
 B DT_WaterBullet::g_SendTableInit
 B DT_WaterLODControl::g_SendTable
 B DT_WaterLODControl::g_SendTableInit
 B DT_WeaponAK47::g_SendTable
 B DT_WeaponAK47::g_SendTableInit
 B DT_WeaponAWP::g_SendTable
 B DT_WeaponAWP::g_SendTableInit
 B DT_WeaponAug::g_SendTable
 B DT_WeaponAug::g_SendTableInit
 B DT_WeaponBizon::g_SendTable
 B DT_WeaponBizon::g_SendTableInit
 B DT_WeaponC4::g_SendTable
 B DT_WeaponC4::g_SendTableInit
 B DT_WeaponCSBase::g_SendTable
 B DT_WeaponCSBase::g_SendTableInit
 B DT_WeaponCSBaseGun::g_SendTable
 B DT_WeaponCSBaseGun::g_SendTableInit
 B DT_WeaponCycler::g_SendTable
 B DT_WeaponCycler::g_SendTableInit
 B DT_WeaponDEagle::g_SendTable
 B DT_WeaponDEagle::g_SendTableInit
 B DT_WeaponElite::g_SendTable
 B DT_WeaponElite::g_SendTableInit
 B DT_WeaponFamas::g_SendTable
 B DT_WeaponFamas::g_SendTableInit
 B DT_WeaponFiveSeven::g_SendTable
 B DT_WeaponFiveSeven::g_SendTableInit
 B DT_WeaponG3SG1::g_SendTable
 B DT_WeaponG3SG1::g_SendTableInit
 B DT_WeaponGalil::g_SendTable
 B DT_WeaponGalil::g_SendTableInit
 B DT_WeaponGalilAR::g_SendTable
 B DT_WeaponGalilAR::g_SendTableInit
 B DT_WeaponGlock::g_SendTable
 B DT_WeaponGlock::g_SendTableInit
 B DT_WeaponHKP2000::g_SendTable
 B DT_WeaponHKP2000::g_SendTableInit
 B DT_WeaponKnife::g_SendTable
 B DT_WeaponKnife::g_SendTableInit
 B DT_WeaponKnifeGG::g_SendTable
 B DT_WeaponKnifeGG::g_SendTableInit
 B DT_WeaponM249::g_SendTable
 B DT_WeaponM249::g_SendTableInit
 B DT_WeaponM3::g_SendTable
 B DT_WeaponM3::g_SendTableInit
 B DT_WeaponM4A1::g_SendTable
 B DT_WeaponM4A1::g_SendTableInit
 B DT_WeaponMAC10::g_SendTable
 B DT_WeaponMAC10::g_SendTableInit
 B DT_WeaponMP5Navy::g_SendTable
 B DT_WeaponMP5Navy::g_SendTableInit
 B DT_WeaponMP7::g_SendTable
 B DT_WeaponMP7::g_SendTableInit
 B DT_WeaponMP9::g_SendTable
 B DT_WeaponMP9::g_SendTableInit
 B DT_WeaponMag7::g_SendTable
 B DT_WeaponMag7::g_SendTableInit
 B DT_WeaponNOVA::g_SendTable
 B DT_WeaponNOVA::g_SendTableInit
 B DT_WeaponNegev::g_SendTable
 B DT_WeaponNegev::g_SendTableInit
 B DT_WeaponP228::g_SendTable
 B DT_WeaponP228::g_SendTableInit
 B DT_WeaponP250::g_SendTable
 B DT_WeaponP250::g_SendTableInit
 B DT_WeaponP90::g_SendTable
 B DT_WeaponP90::g_SendTableInit
 B DT_WeaponSCAR17::g_SendTable
 B DT_WeaponSCAR17::g_SendTableInit
 B DT_WeaponSCAR20::g_SendTable
 B DT_WeaponSCAR20::g_SendTableInit
 B DT_WeaponSG550::g_SendTable
 B DT_WeaponSG550::g_SendTableInit
 B DT_WeaponSG552::g_SendTable
 B DT_WeaponSG552::g_SendTableInit
 B DT_WeaponSG556::g_SendTable
 B DT_WeaponSG556::g_SendTableInit
 B DT_WeaponSSG08::g_SendTable
 B DT_WeaponSSG08::g_SendTableInit
 B DT_WeaponSawedoff::g_SendTable
 B DT_WeaponSawedoff::g_SendTableInit
 B DT_WeaponScout::g_SendTable
 B DT_WeaponScout::g_SendTableInit
 B DT_WeaponTMP::g_SendTable
 B DT_WeaponTMP::g_SendTableInit
 B DT_WeaponTaser::g_SendTable
 B DT_WeaponTaser::g_SendTableInit
 B DT_WeaponTec9::g_SendTable
 B DT_WeaponTec9::g_SendTableInit
 B DT_WeaponUMP45::g_SendTable
 B DT_WeaponUMP45::g_SendTableInit
 B DT_WeaponUSP::g_SendTable
 B DT_WeaponUSP::g_SendTableInit
 B DT_WeaponXM1014::g_SendTable
 B DT_WeaponXM1014::g_SendTableInit
 B DetailedSearchStatistic::default_instance_
 B DevShotSystem
 B DrawBattleLines
 B DustTrail_DataDescInit::g_DataMapHolder
 B EditNav_PrecachePrecache::s_ResourcePrecacher
 B EffectsPrecachePrecache::s_ResourcePrecacher
 B EndRound
 B EntityParticleTrailInfo_t_DataDescInit::g_DataMapHolder
 B EventQueuePrioritizedEvent_t::s_Allocator
 B EventQueuePrioritizedEvent_t_DataDescInit::g_DataMapHolder
 B FileWeaponInfo_t::ms_bWeaponInfoLookupInitialized
 B FileWeaponInfo_t::ms_vecWeaponInfoLookup
 B FilterDamageType_DataDescInit::g_DataMapHolder
 B FilterTeam_DataDescInit::g_DataMapHolder
 B GCSDK::CMessageListRegistration::sm_pFirst
 B GCSDK::CNetPacketPool::sm_MemPoolNetPacket
 B GCSDK::CProtoBufMsgBase::s_PoolRegMutex
 B GCSDK::CSharedObject::sm_vecFactories
 B GCSDK::CWorkThreadPool::sm_pWorkItemsCompletedSignal
 B GCSDK::g_EGMessages
 B GCSDK::g_MemPoolMsg
 B GCSDK::g_bTextBuffersFreed
 B GCSDK::g_cNetPacket
 B GCSDK::g_mutexTempTextBuffer
 B GCSDK::g_pJobCur
 B GCSDK::g_theMessageList
 B GCSDK::g_vecTempTextBuffer
 B GameServerPing::default_instance_
 B GlobalEventLog
 B GlobalStatistics::default_instance_
 B HidingSpot::m_masterMarker
 B HintNodeData_DataDescInit::g_DataMapHolder
 B Human_Hull
 B IMoveHelper::sm_pSingleton
 B IPredictionSystem::g_pPredictionSystems
 B InfernoChildSpawnIntervalMultiplier
 B InfernoChildSpawnMaxDepth
 B InfernoDamage
 B InfernoDebug
 B InfernoFlameLifetime
 B InfernoFlameSpacing
 B InfernoFriendlyFireDuration
 B InfernoInitialSpawnInterval
 B InfernoMaxChildSpawnInterval
 B InfernoMaxFlames
 B InfernoMaxRange
 B InfernoPerFlameSpawnDuration
 B InfernoSpawnAngle
 B InfernoSurfaceOffset
 B InfernoVelocityDecayFactor
 B InfernoVelocityFactor
 B InfernoVelocityNormalFactor
 B IntervalTimer_DataDescInit::g_DataMapHolder
 B IpAddressMask::default_instance_
 B JeepWaterData_t_DataDescInit::g_DataMapHolder
 B KnifeDamageScale
 B LOG_CONSOLE
 B LOG_DEVELOPER_VERBOSE
 B LOG_SND_EMITTERSYSTEM
 B LOG_VScript
 B LOG_WORKSHOP
 B Large_Centered_Hull
 B Large_Hull
 B ListIssues
 B MediumBig_Hull
 B Medium_Hull
 B Medium_Tall_Hull
 B NavTraceMaxs
 B NavTraceMins
 B OperationalStatisticDescription::default_instance_
 B OperationalStatisticElement::default_instance_
 B OperationalStatisticsPacket::default_instance_
 B ParserResponse_DataDescInit::g_DataMapHolder
 B ParticleSmokeGrenade_DataDescInit::g_DataMapHolder
 B PhysBlockHeader_t_DataDescInit::g_DataMapHolder
 B PhysFrictionEffectPrecache::s_ResourcePrecacher
 B PhysObjectHeader_t_DataDescInit::g_DataMapHolder
 B PlatformInputDevice::s_AllInputDevices
 B PlatformInputDevice::s_Initialized
 B PlatformInputDevice::s_numberPlatformInputDevices
 B PlatformInputDevice::s_validPlatformInputDevices
 B PlayerCommendationInfo::default_instance_
 B PlayerMedalsInfo::default_instance_
 B PlayerModelInfo::s_PlayerModelInfo
 B PlayerRankingInfo::default_instance_
 B PrecachePointCommentaryNodePrecache::s_ResourcePrecacher
 B RR::sm_OpCopy
 B RR::sm_OpDecrement
 B RR::sm_OpIncrement
 B RR::sm_OpToggle
 B Relationship_t_DataDescInit::g_DataMapHolder
 B ResponseContext_t_DataDescInit::g_DataMapHolder
 B ResponseGroup_DataDescInit::g_DataMapHolder
 B ResponseRules::CResponseSystem::m_DebugExcludeList
 B ResponseRules::CriteriaSet::sm_CriteriaSymbols
 B ResponseRules::g_RS
 B ResponseRules::g_ResponseStrings
 B RocketTrail_DataDescInit::g_DataMapHolder
 B SaveRestoreBlockHeader_t_DataDescInit::g_DataMapHolder
 B ScriptedNPCInteraction_Phases_t_DataDescInit::g_DataMapHolder
 B ScriptedNPCInteraction_t_DataDescInit::g_DataMapHolder
 B ServerHltvInfo::default_instance_
 B SinCosTable
 B Small_Centered_Hull
 B SmokeTrail_DataDescInit::g_DataMapHolder
 B SoundCommand_t::s_Allocator
 B SoundCommand_t_DataDescInit::g_DataMapHolder
 B SpawnPoint_DataDescInit::g_DataMapHolder
 B SporeExplosion_DataDescInit::g_DataMapHolder
 B SporeTrail_DataDescInit::g_DataMapHolder
 B TemplateEntityData_t_DataDescInit::g_DataMapHolder
 B Test_EHandle
 B TheBotPhrases
 B TheBotProfiles
 B TheBots
 B TheFogVolumes
 B TheHidingSpots
 B TheNavAreas
 B TheNavMesh
 B Tiny_Centered_Hull
 B Tiny_Fluid_Hull
 B Tiny_Hull
 B TournamentEvent::default_instance_
 B TournamentMatchSetup::default_instance_
 B TournamentPlayer::default_instance_
 B TournamentTeam::default_instance_
 B UnreachableEnt_t_DataDescInit::g_DataMapHolder
 B ViewSmoothingData_t_DataDescInit::g_DataMapHolder
 B VisForce
 B VisibilityMonitor
 B WatchableMatchInfo::default_instance_
 B WeaponResourcesPrecache::s_ResourcePrecacher
 B Wide_Human_Hull
 B Wide_Short_Hull
 B ai_LOS_mode
 B ai_auto_contact_solver
 B ai_block_damage
 B ai_debug_assault
 B ai_debug_avoidancebounds
 B ai_debug_directnavprobe
 B ai_debug_doors
 B ai_debug_dyninteractions
 B ai_debug_efficiency
 B ai_debug_enemies
 B ai_debug_expressions
 B ai_debug_follow
 B ai_debug_loners
 B ai_debug_looktargets
 B ai_debug_los
 B ai_debug_nav
 B ai_debug_ragdoll_magnets
 B ai_debug_shoot_positions
 B ai_debug_speech
 B ai_debug_squads
 B ai_debug_think_ticks
 B ai_default_efficient
 B ai_drop_hint
 B ai_efficiency_override
 B ai_enable_fear_behavior
 B ai_expression_frametime
 B ai_expression_optimization
 B ai_fear_player_dist
 B ai_find_lateral_cover
 B ai_find_lateral_los
 B ai_follow_use_points
 B ai_follow_use_points_when_moving
 B ai_force_serverside_ragdoll
 B ai_frametime_limit
 B ai_lead_time
 B ai_moveprobe_debug
 B ai_moveprobe_jump_debug
 B ai_moveprobe_usetracelist
 B ai_nav_debug_experimental_pathing
 B ai_navigator_generate_spikes
 B ai_navigator_generate_spikes_strength
 B ai_no_local_paths
 B ai_no_node_cache
 B ai_no_select_box
 B ai_no_steer
 B ai_no_talk_delay
 B ai_path_adjust_speed_on_immediate_turns
 B ai_path_insert_pause_at_est_end
 B ai_path_insert_pause_at_obstruction
 B ai_post_frame_navigation
 B ai_radial_max_link_dist
 B ai_reaction_delay_alert
 B ai_reaction_delay_idle
 B ai_rebalance_thinks
 B ai_report_task_timings_on_limit
 B ai_sequence_debug
 B ai_setupbones_debug
 B ai_shot_bias
 B ai_shot_bias_max
 B ai_shot_bias_min
 B ai_shot_stats
 B ai_shot_stats_term
 B ai_show_hull_attacks
 B ai_show_think_tolerance
 B ai_simulate_task_overtime
 B ai_spread_cone_focus_time
 B ai_spread_defocused_cone_multiplier
 B ai_spread_pattern_focus_time
 B ai_strong_optimizations
 B ai_strong_optimizations_no_checkstand
 B ai_task_pre_script
 B ai_test_moveprobe_ignoresmall
 B ai_think_limit_label
 B ai_use_clipped_paths
 B ai_use_efficiency
 B ai_use_frame_think_limits
 B ai_use_think_optimizations
 B ai_use_visibility_cache
 B ai_vehicle_avoidance
 B aimcrosshair
 B allowNPCs
 B ammo_338mag_headshot_mult
 B ammo_338mag_impulse
 B ammo_338mag_max
 B ammo_357sig_headshot_mult
 B ammo_357sig_impulse
 B ammo_357sig_max
 B ammo_357sig_min_max
 B ammo_357sig_p250_max
 B ammo_357sig_small_max
 B ammo_45acp_headshot_mult
 B ammo_45acp_impulse
 B ammo_45acp_max
 B ammo_50AE_headshot_mult
 B ammo_50AE_impulse
 B ammo_50AE_max
 B ammo_556mm_box_headshot_mult
 B ammo_556mm_box_impulse
 B ammo_556mm_box_max
 B ammo_556mm_headshot_mult
 B ammo_556mm_impulse
 B ammo_556mm_max
 B ammo_556mm_small_max
 B ammo_57mm_headshot_mult
 B ammo_57mm_impulse
 B ammo_57mm_max
 B ammo_762mm_headshot_mult
 B ammo_762mm_impulse
 B ammo_762mm_max
 B ammo_9mm_headshot_mult
 B ammo_9mm_impulse
 B ammo_9mm_max
 B ammo_buckshot_headshot_mult
 B ammo_buckshot_impulse
 B ammo_buckshot_max
 B ammo_grenade_limit_default
 B ammo_grenade_limit_flashbang
 B ammo_grenade_limit_total
 B audioparams_t_DataDescInit::g_DataMapHolder
 B autoaim_max_deflect
 B autoaim_max_dist
 B autoaim_viewing_client
 B blackboxrecorder
 B bot_autodifficulty_threshold_high
 B bot_autodifficulty_threshold_low
 B bot_chatter_use_rr
 B bot_crouch
 B bot_freeze
 B bot_gungameselect_weapons_ct
 B bot_gungameselect_weapons_t
 B bot_join_delay
 B bot_join_in_warmup
 B bot_loadout
 B bot_max_vision_distance_override
 B bot_mimic
 B bot_mimic_yaw_offset
 B bot_randombuy
 B bot_show_battlefront
 B bot_show_occupy_time
 B breakable_disable_gib_limit
 B breakable_multiplayer
 B cash_player_bomb_defused
 B cash_player_bomb_planted
 B cash_player_damage_hostage
 B cash_player_get_killed
 B cash_player_interact_with_hostage
 B cash_player_killed_enemy_default
 B cash_player_killed_enemy_factor
 B cash_player_killed_hostage
 B cash_player_killed_teammate
 B cash_player_rescued_hostage
 B cash_player_respawn_amount
 B cash_team_elimination_bomb_map
 B cash_team_elimination_hostage_map_ct
 B cash_team_elimination_hostage_map_t
 B cash_team_hostage_alive
 B cash_team_hostage_interaction
 B cash_team_loser_bonus
 B cash_team_loser_bonus_consecutive_rounds
 B cash_team_planted_bomb_but_defused
 B cash_team_rescued_hostage
 B cash_team_terrorist_win_bomb
 B cash_team_win_by_defusing_bomb
 B cash_team_win_by_hostage_rescue
 B cash_team_win_by_time_running_out_bomb
 B cash_team_win_by_time_running_out_hostage
 B cc_CreatePredictionError
 B cc_Test_InitRandomEntitySpawner
 B cc_Test_ProxyToggle_EnableProxy
 B cc_Test_ProxyToggle_SetValue
 B cc_Test_RandomizeInPVS
 B cc_Test_RemoveAllRandomEntities
 B cc_Test_SpawnRandomEntities
 B cc_achievement_debug
 B cc_achievement_disable
 B cc_showmissing
 B chet_debug_idle
 B chickenPrecache::s_ResourcePrecacher
 B choreo_spew_filter
 B cl_csm_auto_entity
 B cl_remove_old_ugc_downloads
 B cl_use_simd_bones
 B collision_shake_amp
 B collision_shake_freq
 B collision_shake_time
 B colorcorrection
 B commentary
 B commentary_available
 B contributionscore_assist
 B contributionscore_bomb_defuse_major
 B contributionscore_bomb_defuse_minor
 B contributionscore_bomb_exploded
 B contributionscore_bomb_planted
 B contributionscore_hostage_kill
 B contributionscore_hostage_rescue_major
 B contributionscore_hostage_rescue_minor
 B contributionscore_kill
 B contributionscore_objective_kill
 B contributionscore_suicide
 B contributionscore_team_kill
 B cs_AssistDamageThreshold
 B cs_ShowStateTransitions
 B cs_enable_player_physics_box
 B cs_hostage_near_rescue_music_distance
 B currenttoken
 B custom_bot_difficulty
 B cv_bot_allow_grenades
 B cv_bot_allow_machine_guns
 B cv_bot_allow_pistols
 B cv_bot_allow_rifles
 B cv_bot_allow_rogues
 B cv_bot_allow_shotguns
 B cv_bot_allow_snipers
 B cv_bot_allow_sub_machine_guns
 B cv_bot_auto_follow
 B cv_bot_auto_vacate
 B cv_bot_chatter
 B cv_bot_controllable
 B cv_bot_debug
 B cv_bot_debug_target
 B cv_bot_defer_to_human_goals
 B cv_bot_defer_to_human_items
 B cv_bot_difficulty
 B cv_bot_dont_shoot
 B cv_bot_eco_limit
 B cv_bot_flipout
 B cv_bot_join_after_player
 B cv_bot_join_team
 B cv_bot_prefix
 B cv_bot_profile_db
 B cv_bot_quota
 B cv_bot_quota_mode
 B cv_bot_show_nav
 B cv_bot_stop
 B cv_bot_traceview
 B cv_bot_walk
 B cv_bot_zombie
 B cvar
 B datacache
 B debug_aim_angle
 B debug_materialmodifycontrol
 B debug_physimpact
 B debug_touchlinks
 B debug_visibility_monitor
 B debugoverlay
 B debugscriptconditions
 B decalfrequency
 B decoy_projectilePrecache::s_ResourcePrecacher
 B defaultteam
 B dev_reportmoneychanges
 B developer
 B displaysoundlist
 B engine
 B enginesound
 B enginetrace
 B ent_debugkeys
 B ent_messages_draw
 B ent_show_contexts
 B entityflamePrecache::s_ResourcePrecacher
 B entitytable_t_DataDescInit::g_DataMapHolder
 B env_entity_freezingPrecache::s_ResourcePrecacher
 B fSentencesInit
 B falldamage
 B ff_damage_bullet_penetration
 B ff_damage_reduction_bullets
 B ff_damage_reduction_grenade
 B ff_damage_reduction_grenade_self
 B ff_damage_reduction_other
 B filelogginglistener
 B filesystem
 B fire_absorbrate
 B fire_cracker_blastPrecache::s_ResourcePrecacher
 B fire_dmgbase
 B fire_dmginterval
 B fire_dmgscale
 B fire_extabsorb
 B fire_extscale
 B fire_growthrate
 B fire_heatscale
 B fire_incomingheatscale
 B fire_maxabsorb
 B fish_dormant
 B flashbang_projectilePrecache::s_ResourcePrecacher
 B flashlight
 B flex_expression
 B flex_looktime
 B flex_maxawaytime
 B flex_maxplayertime
 B flex_minawaytime
 B flex_minplayertime
 B flex_talk
 B flexsetting_t_DataDescInit::g_DataMapHolder
 B flexsettinghdr_t_DataDescInit::g_DataMapHolder
 B flexweight_t_DataDescInit::g_DataMapHolder
 B fog_volume_debug
 B fogparams_t_DataDescInit::g_DataMapHolder
 B fogplayerparams_t_DataDescInit::g_DataMapHolder
 B footsteps
 B forcerespawn
 B fraglimit
 B free_pass_peek_debug
 B func_break_max_pieces
 B func_break_reduction_factor
 B func_breakdmg_bullet
 B func_breakdmg_club
 B func_breakdmg_explosive
 B fx_new_sparks
 B gEntList
 B gEvilImpulse101
 B g_AIAgentTaskTimings
 B g_AIConditionsTimer
 B g_AIFoesTalkSemaphore
 B g_AIFollowManager
 B g_AIFriendliesTalkSemaphore
 B g_AIMaintainScheduleTimer
 B g_AIMoveTimer
 B g_AINetworkBuilder
 B g_AINextDisabledMessageTime
 B g_AIPostRunTimer
 B g_AIPrescheduleThinkTimer
 B g_AIRunTimer
 B g_AITaskTimings
 B g_AI_AgentSchedulesManager
 B g_AI_Manager
 B g_AI_MemoryListSaveRestoreOps
 B g_AI_SchedulesManager
 B g_AI_SensedObjectsManager
 B g_AI_SquadManager
 B g_ActiveGibCount
 B g_ActivityList
 B g_ActivityModifiersTable
 B g_ActivityStrings
 B g_AnimatingImagePanelLinkerHack
 B g_AnimatingImagePanelPullInModule
 B g_AreaPortals
 B g_AssaultPointString
 B g_AttribColorDefs
 B g_BanMasks
 B g_BitWriteMasks
 B g_BotUpdateInterval
 B g_BotUpkeepInterval
 B g_ButtonLinkerHack
 B g_ButtonPullInModule
 B g_ButtonSoundNames
 B g_CBaseAnimating_ScriptDesc
 B g_CBaseEntity_ScriptDesc
 B g_CBaseFlex_ScriptDesc
 B g_CBaseMultiplayerPlayer_ScriptDesc
 B g_CBasePlayer_ScriptDesc
 B g_CBitmapImagePanelLinkerHack
 B g_CBitmapImagePanelPullInModule
 B g_CEnvEntityMaker_ScriptDesc
 B g_CPlayerVoiceListener_ScriptDesc
 B g_CSEventLog
 B g_CSInventoryManager
 B g_CSMLightManager
 B g_CSceneEntity_ScriptDesc
 B g_CScriptEntityIterator_ScriptDesc
 B g_CScriptKeyValues_ScriptDesc
 B g_CTreeViewListControlLinkerHack
 B g_CTreeViewListControlPullInModule
 B g_CTriggerCamera_ScriptDesc
 B g_CheckButtonLinkerHack
 B g_CheckButtonPullInModule
 B g_CheckClient
 B g_CircularProgressBarLinkerHack
 B g_CircularProgressBarPullInModule
 B g_Collisions
 B g_ComboBoxLinkerHack
 B g_ComboBoxPullInModule
 B g_CommentarySystem
 B g_Commentary_SaveRestoreBlockHandler
 B g_ComputedVis
 B g_ConceptInfos
 B g_CvarToggleCheckButtonLinkerHack
 B g_CvarToggleCheckButtonPullInModule
 B g_DebugPathfindCounter
 B g_DedicatedServerWorkshopManager
 B g_DefaultResponseSystemSaveRestoreBlockHandler
 B g_DividerLinkerHack
 B g_DividerPullInModule
 B g_EconItemMap
 B g_EditablePanelLinkerHack
 B g_EditablePanelPullInModule
 B g_EntListMemPool
 B g_EntityClassnames
 B g_EntityCollisionHash
 B g_EntityListPool
 B g_EntityOrientations
 B g_EntityPositions
 B g_EntitySaveRestoreBlockHandler
 B g_EntsByClassname
 B g_EventList
 B g_EventQueue
 B g_EventQueue_SaveRestoreBlockHandler
 B g_EventStrings
 B g_ExpandButtonLinkerHack
 B g_ExpandButtonPullInModule
 B g_ExpressionEvaluator
 B g_ExtraMasks
 B g_FlexSceneFileManager
 B g_GameTimescale
 B g_GraphPanelLinkerHack
 B g_GraphPanelPullInModule
 B g_HandleTest
 B g_Hostages
 B g_ImagePanelLinkerHack
 B g_ImagePanelPullInModule
 B g_InfoCameraLinkList
 B g_ItemGenerationSystem
 B g_KeyValuesErrorStack
 B g_KillEaterAttr
 B g_LabelLinkerHack
 B g_LabelPullInModule
 B g_Language
 B g_ListPanelLinkerHack
 B g_ListPanelPullInModule
 B g_ListViewPanelLinkerHack
 B g_ListViewPanelPullInModule
 B g_MapEntityRefs
 B g_MatrixPool
 B g_MemoryLog
 B g_MenuBarLinkerHack
 B g_MenuBarPullInModule
 B g_MenuButtonLinkerHack
 B g_MenuButtonPullInModule
 B g_MenuItemLinkerHack
 B g_MenuItemPullInModule
 B g_MenuLinkerHack
 B g_MenuPullInModule
 B g_MessageBoxLinkerHack
 B g_MessageBoxPullInModule
 B g_MultiDamage
 B g_NetworkPropertyEventMgr
 B g_PanelLinkerHack
 B g_PanelPullInModule
 B g_PhysObjSaveRestoreOps
 B g_PhysSaveRestoreBlockHandler
 B g_PhysWorldObject
 B g_PhysicsHook
 B g_PlantedC4s
 B g_PlayerModEnable
 B g_PlayerSurfaceTriggers
 B g_PlayerVoiceListener
 B g_PointCameraList
 B g_PointTemplatePrecacher
 B g_PostFrameNavigationHook
 B g_PostSimulationQueue
 B g_PrecacheOtherList
 B g_ProgressBarLinkerHack
 B g_ProgressBarPullInModule
 B g_PropDataSystem
 B g_QuaternionPool
 B g_RadioButtonLinkerHack
 B g_RadioButtonPullInModule
 B g_RagdollLVManager
 B g_RallyPointString
 B g_RemarkableList
 B g_ResponseQueueManager
 B g_RichTextLinkerHack
 B g_RichTextPullInModule
 B g_SaveRestoreBlockSet
 B g_ScalableImagePanelLinkerHack
 B g_ScalableImagePanelPullInModule
 B g_ScriptEntityIterator
 B g_ScrollBarLinkerHack
 B g_ScrollBarPullInModule
 B g_ScrollBar_HorizontalLinkerHack
 B g_ScrollBar_HorizontalPullInModule
 B g_ScrollBar_VerticalLinkerHack
 B g_ScrollBar_VerticalPullInModule
 B g_SentBanMasks
 B g_SentGameRulesMasks
 B g_ServerGameDLL
 B g_SimThinkManager
 B g_SkyList
 B g_SolverList
 B g_SoundscapeSystem
 B g_StressEntities
 B g_StressEntityRegs
 B g_StringTableGameRules
 B g_StudioHdrToActivityMaps
 B g_StudioHdrToActivityMapsLock
 B g_Teams
 B g_TemplateEntityHook
 B g_Template_SaveRestoreBlockHandler
 B g_TextEntryLinkerHack
 B g_TextEntryPullInModule
 B g_TextStatsMgr
 B g_ToggleButtonLinkerHack
 B g_ToggleButtonPullInModule
 B g_TokenProcessor
 B g_TreeViewLinkerHack
 B g_TreeViewPullInModule
 B g_URLLabelLinkerHack
 B g_URLLabelPullInModule
 B g_VBAllocTracker
 B g_VScriptGameSystem
 B g_VScriptSaveRestoreBlockHandler
 B g_VectorPool
 B g_VguiScreenStringOps
 B g_VoiceGameMgr
 B g_VoiceGameMgrHelper
 B g_WeaponDatabase
 B g_WeaponList
 B g_WeaponRecoilData
 B g_WorkshopLogColor
 B g_WorldEntity
 B g_ai_norebuildgraph
 B g_ai_threadedgraphbuild
 B g_bAIDebugStep
 B g_bAIDisabledByUser
 B g_bBehaviorHost_PreventBaseClassGatherConditions
 B g_bDisableEhandleAccess
 B g_bInCommentaryMode
 B g_bReceivedChainedUpdateOnRemove
 B g_bUnget
 B g_bWantModEnable
 B g_botInitProfile
 B g_botInitTeam
 B g_cv_BlendBonesMode
 B g_debug_angularsensor
 B g_debug_constraint_sounds
 B g_debug_doors
 B g_debug_npc_vehicle_roles
 B g_debug_ragdoll_removal
 B g_debug_trackpather
 B g_debug_transitions
 B g_debug_vehiclebase
 B g_debug_vehicledriver
 B g_debug_vehicleexit
 B g_debug_vehiclesound
 B g_fGameOver
 B g_flLastBodyPitch
 B g_flLastBodyYaw
 B g_gcServerVersion
 B g_hActiveSkybox
 B g_hControlPointMasters
 B g_hWeaponFireTriggers
 B g_iCurrentTemplateInstance
 B g_iDevShotCameraCount
 B g_iFrameLastSimplified
 B g_iSkillLevel
 B g_interactionHitByPlayerThrownPhysObj
 B g_interactionScriptedTarget
 B g_iszFuncBrushClassname
 B g_iszPhysicsPropClassname
 B g_jeepexitspeed
 B g_nAITasksRun
 B g_nClientPutInServerOverrides
 B g_nInsideDispatchUpdateTransmitState
 B g_nResourceFrameCount
 B g_pAINetworkManager
 B g_pAVI
 B g_pAsyncFileSystem
 B g_pBIK
 B g_pBigAINet
 B g_pCVar
 B g_pCascadeLight
 B g_pCurVisArea
 B g_pDataCache
 B g_pDefuserEntity
 B g_pDeveloper
 B g_pDmeMakefileUtils
 B g_pEventSystem
 B g_pForceAttachEdict
 B g_pFullFileSystem
 B g_pGameRules
 B g_pGameUISystemMgr
 B g_pInputStackSystem
 B g_pInputSystem
 B g_pLastCTSpawn
 B g_pLastSpawn
 B g_pLastTerroristSpawn
 B g_pLocalize
 B g_pMDLCache
 B g_pMapInfo
 B g_pMatSystemSurface
 B g_pMatchFramework
 B g_pMaterialSystem
 B g_pMaterialSystem2
 B g_pMaterialSystemDebugTextureInfo
 B g_pMaterialSystemHardwareConfig
 B g_pMeshSystem
 B g_pNavNodeHash
 B g_pNavVisPairHash
 B g_pNetworkSystem
 B g_pPhysics2
 B g_pPhysics2ActorManager
 B g_pPhysics2ResourceManager
 B g_pPhysicsCollision
 B g_pPlayerResource
 B g_pPrecacheSystem
 B g_pProcessUtils
 B g_pQueuedLoader
 B g_pQueuedNavigationQueryJob
 B g_pRRConceptTable
 B g_pRenderDevice
 B g_pRenderDeviceMgr
 B g_pRenderHardwareConfig
 B g_pResourceAccessControl
 B g_pResourceSystem
 B g_pSceneSystem
 B g_pScriptVM
 B g_pServerClassHead
 B g_pShadowEntities
 B g_pSharedChangeInfo
 B g_pSoundEmitterSystem
 B g_pSoundSystem
 B g_pStringTableClientSideChoreoScenes
 B g_pStringTableEconItems
 B g_pStringTableEffectDispatch
 B g_pStringTableExtraParticleFiles
 B g_pStringTableInfoPanel
 B g_pStringTableMaterials
 B g_pStringTableMovies
 B g_pStringTableParticleEffectNames
 B g_pStringTableVguiScreen
 B g_pStudioRender
 B g_pUtlSortVectorQSortContext
 B g_pVGui
 B g_pVGuiInput
 B g_pVGuiLocalize
 B g_pVGuiPanel
 B g_pVGuiRenderSurface
 B g_pVGuiSchemeManager
 B g_pVGuiSurface
 B g_pVGuiSystem
 B g_pVoiceServer
 B g_pWorldRendererMgr
 B g_ragdoll_important_maxcount
 B g_ragdoll_maxcount
 B g_rowCommitTime
 B g_rowWriteTime
 B g_sModelIndexBloodDrop
 B g_sModelIndexBloodSpray
 B g_sModelIndexBubbles
 B g_sModelIndexFireball
 B g_sModelIndexSmoke
 B g_sModelIndexWExplosion
 B g_vecAttackDir
 B g_vecDefuserPosition
 B g_voteController
 B game_mode
 B game_online
 B game_public
 B game_type
 B gameeventmanager
 B gamestats_file_output_directory
 B gamestatsuploader
 B gg_knife_kill_demotes
 B giPrecacheGrunt
 B globalentity_t_DataDescInit::g_DataMapHolder
 B gpGlobals
 B groundlinksallocated
 B head_hull_maxs
 B head_hull_mins
 B hegrenade_projectilePrecache::s_ResourcePrecacher
 B hl2_episodic
 B hostage_carriable_propPrecache::s_ResourcePrecacher
 B hostage_debug
 B hostage_drop_time
 B hostage_feetyawrate
 B hud_jeephint_numentries
 B infernoPrecache::s_ResourcePrecacher
 B inferno_forward_reduction_factor
 B inferno_max_trace_per_tick
 B inferno_scorch_decals
 B item_defuserPrecache::s_ResourcePrecacher
 B key_field
 B lasterrorU
 B lineartolightmap
 B lineartovertex
 B linksallocated
 B locksound_t_DataDescInit::g_DataMapHolder
 B loopsingleplayermaps
 B lservercfgfile
 B m_debugOverlayLine
 B m_flLastMoveYaw
 B magnetted_objects_t_DataDescInit::g_DataMapHolder
 B mapcycledisabled
 B mapcyclefile
 B materials
 B mdlcache
 B mdllib
 B mod_load_preload
 B modelinfo
 B modifiedconvars_t_DataDescInit::g_DataMapHolder
 B molotov_projectilePrecache::s_ResourcePrecacher
 B molotov_throw_detonate_time
 B mp_afterroundmoney
 B mp_allowspectators
 B mp_autokick
 B mp_autoteambalance
 B mp_backup_restore_load_autopause
 B mp_backup_round_auto
 B mp_backup_round_file
 B mp_backup_round_file_last
 B mp_backup_round_file_pattern
 B mp_blockstyle
 B mp_bonusroundtime
 B mp_buy_allow_grenades
 B mp_buy_anywhere
 B mp_buy_during_immunity
 B mp_buytime
 B mp_c4timer
 B mp_capdeteriorate_time
 B mp_capstyle
 B mp_clan_ready_signal
 B mp_clan_readyrestart
 B mp_competitive_endofmatch_extra_time
 B mp_ct_default_grenades
 B mp_ct_default_melee
 B mp_ct_default_primary
 B mp_ct_default_secondary
 B mp_damage_scale_ct_body
 B mp_damage_scale_ct_head
 B mp_damage_scale_t_body
 B mp_damage_scale_t_head
 B mp_death_drop_c4
 B mp_death_drop_defuser
 B mp_death_drop_grenade
 B mp_death_drop_gun
 B mp_deathcam_skippable
 B mp_default_team_winner_no_objective
 B mp_defuser_allocation
 B mp_disable_respawn_times
 B mp_display_kill_assists
 B mp_dm_bonus_length_max
 B mp_dm_bonus_length_min
 B mp_dm_bonus_percent
 B mp_dm_time_between_bonus_max
 B mp_dm_time_between_bonus_min
 B mp_do_warmup_offine
 B mp_do_warmup_period
 B mp_enableroundwaittime
 B mp_endmatch_votenextleveltime
 B mp_endmatch_votenextmap
 B mp_endmatch_votenextmap_keepcurrent
 B mp_facefronttime
 B mp_feetyawrate
 B mp_flinch_punch_scale
 B mp_force_assign_teams
 B mp_force_pick_time
 B mp_forcecamera
 B mp_free_armor
 B mp_freezetime
 B mp_friendlyfire
 B mp_ggprogressive_random_weapon_kills_needed
 B mp_ggprogressive_round_restart_delay
 B mp_ggprogressive_use_random_weapons
 B mp_ggtr_bomb_defuse_bonus
 B mp_ggtr_bomb_detonation_bonus
 B mp_ggtr_bomb_pts_for_flash
 B mp_ggtr_bomb_pts_for_he
 B mp_ggtr_bomb_pts_for_molotov
 B mp_ggtr_bomb_pts_for_upgrade
 B mp_ggtr_bomb_respawn_delay
 B mp_ggtr_end_round_kill_bonus
 B mp_ggtr_halftime_delay
 B mp_ggtr_last_weapon_kill_ends_half
 B mp_ggtr_num_rounds_autoprogress
 B mp_give_player_c4
 B mp_halftime
 B mp_halftime_duration
 B mp_halftime_pausetimer
 B mp_hostagepenalty
 B mp_hostages_max
 B mp_hostages_rescuetime
 B mp_hostages_rescuetowin
 B mp_hostages_run_speed_modifier
 B mp_hostages_spawn_farthest
 B mp_hostages_spawn_force_positions
 B mp_hostages_spawn_same_every_round
 B mp_hostages_takedamage
 B mp_humanteam
 B mp_ignore_round_win_conditions
 B mp_ik
 B mp_join_grace_time
 B mp_limitteams
 B mp_logdetail
 B mp_match_can_clinch
 B mp_match_end_changelevel
 B mp_match_end_restart
 B mp_match_restart_delay
 B mp_maxmoney
 B mp_maxrounds
 B mp_molotovusedelay
 B mp_overtime_enable
 B mp_overtime_halftime_pausetimer
 B mp_overtime_maxrounds
 B mp_overtime_startmoney
 B mp_playercashawards
 B mp_playerid
 B mp_playerid_delay
 B mp_playerid_hold
 B mp_radar_showall
 B mp_randomspawn
 B mp_randomspawn_los
 B mp_respawn_immunitytime
 B mp_respawn_on_death_ct
 B mp_respawn_on_death_t
 B mp_respawnwavetime
 B mp_respawnwavetime_ct
 B mp_respawnwavetime_t
 B mp_restartgame
 B mp_restartround
 B mp_round_restart_delay
 B mp_roundtime
 B mp_roundtime_defuse
 B mp_roundtime_hostage
 B mp_showcleanedupents
 B mp_showroundtransitions
 B mp_solid_teammates
 B mp_spawnprotectiontime
 B mp_spec_swapplayersides
 B mp_spectators_max
 B mp_stalemate_at_timelimit
 B mp_stalemate_enable
 B mp_stalemate_timelimit
 B mp_startmoney
 B mp_t_default_grenades
 B mp_t_default_melee
 B mp_t_default_primary
 B mp_t_default_secondary
 B mp_tagging_scale
 B mp_td_dmgtokick
 B mp_td_dmgtowarn
 B mp_td_spawndmgthreshold
 B mp_teamcashawards
 B mp_teamflag_1
 B mp_teamflag_2
 B mp_teamlogo_1
 B mp_teamlogo_2
 B mp_teammatchstat_1
 B mp_teammatchstat_2
 B mp_teammatchstat_cycletime
 B mp_teammatchstat_holdtime
 B mp_teammatchstat_txt
 B mp_teammates_are_enemies
 B mp_teamname_1
 B mp_teamname_2
 B mp_teamprediction_pct
 B mp_teamprediction_txt
 B mp_teams_unbalance_limit
 B mp_timelimit
 B mp_tkpunish
 B mp_tournament
 B mp_tournament_whitelist
 B mp_use_respawn_waves
 B mp_verbose_changelevel_spew
 B mp_waitingforplayers_cancel
 B mp_waitingforplayers_restart
 B mp_waitingforplayers_time
 B mp_warmup_pausetimer
 B mp_warmuptime
 B mp_warmuptime_all_players_connected
 B mp_weapons_allow_map_placed
 B mp_weapons_allow_randomize
 B mp_weapons_allow_zeus
 B mp_weapons_glow_on_ground
 B mp_win_panel_display_time
 B mp_winlimit
 B msgpool_hard_limit
 B msgpool_soft_limit
 B name
 B nav_area_bgcolor
 B nav_area_max_size
 B nav_coplanar_slope_limit
 B nav_coplanar_slope_limit_displacement
 B nav_corner_adjust_adjacent
 B nav_create_area_at_feet
 B nav_create_place_on_ground
 B nav_debug_blocked
 B nav_displacement_test
 B nav_drag_selection_volume_zmax_offset
 B nav_drag_selection_volume_zmin_offset
 B nav_draw_limit
 B nav_edit
 B nav_generate_fencetops
 B nav_generate_fixup_jump_areas
 B nav_generate_incremental_range
 B nav_generate_incremental_tolerance
 B nav_max_view_distance
 B nav_max_vis_delta_list_length
 B nav_potentially_visible_dot_tolerance
 B nav_quicksave
 B nav_restart_after_analysis
 B nav_selected_set_border_color
 B nav_selected_set_color
 B nav_show_approach_points
 B nav_show_area_info
 B nav_show_compass
 B nav_show_contiguous
 B nav_show_danger
 B nav_show_light_intensity
 B nav_show_node_grid
 B nav_show_node_id
 B nav_show_nodes
 B nav_show_player_counts
 B nav_show_potentially_visible
 B nav_slope_limit
 B nav_slope_tolerance
 B nav_snap_to_grid
 B nav_solid_props
 B nav_split_place_on_ground
 B nav_test_node
 B nav_test_node_crouch
 B nav_test_node_crouch_dir
 B nav_update_visibility_on_edit
 B nav_world_center
 B networkstringtable
 B nextlevel
 B nextmap_print_enabled
 B noclip_fixup
 B notarget
 B npc_ally_deathmessage
 B npc_create_equipment
 B npc_height_adjust
 B npc_sentences
 B npc_vphysics
 B old_radius_damage
 B p4
 B panel_test_title_safe
 B particle_test_attach_attachment
 B particle_test_attach_mode
 B particle_test_file
 B partition
 B phys_debug_check_contacts
 B phys_headshotscale
 B phys_impactforcescale
 B phys_playerscale
 B phys_pushscale
 B phys_show_active
 B phys_speeds
 B phys_stressbodyweights
 B phys_timescale
 B phys_upimpactforcescale
 B physcollision
 B physenv
 B physfollower_t_DataDescInit::g_DataMapHolder
 B physics
 B physprops
 B placeDirectory
 B planted_c4Precache::s_ResourcePrecacher
 B planted_c4_trainingPrecache::s_ResourcePrecacher
 B playerPrecache::s_ResourcePrecacher
 B player_debug_print_damage
 B post_jump_crouch
 B prop_active_gib_limit
 B prop_active_gib_max_fade_time
 B prop_break_disable_float
 B props_break_max_pieces
 B props_break_max_pieces_perframe
 B r_AirboatViewDampenDamp
 B r_AirboatViewDampenFreq
 B r_AirboatViewZHeight
 B r_JeepFOV
 B r_JeepViewDampenDamp
 B r_JeepViewDampenFreq
 B r_JeepViewZHeight
 B r_VehicleViewDampen
 B r_vehicleBrakeRate
 B r_visualizetraces
 B radardist
 B radarmaxdot
 B radarpow
 B radarvis
 B random_valve
 B rgv3tStuckTable
 B rr_debug_qa
 B rr_debugresponseconcept
 B rr_debugresponses
 B rr_debugrule
 B rr_dumpresponses
 B rr_followup_maxdist
 B rr_remarkable_max_distance
 B rr_remarkable_world_entities_replay_limit
 B rr_remarkables_enabled
 B rr_thenany_score_slop
 B s_ChildrenInfoUnpack
 B s_ColorCorrectionSystem
 B s_DMXAllocator
 B s_DragDropHelper
 B s_FogSystem
 B s_NoEscConversion
 B s_PostProcessSystem
 B s_PushedEntities
 B s_RagdollLRU
 B s_StringCharConversion
 B s_TonemapSystem
 B s_bMathlibInitialized
 B s_dragSelectionSetAddColor
 B s_dragSelectionSetBorderColor
 B s_dragSelectionSetDeleteColor
 B s_pConv
 B s_pInterfaceRegs
 B s_pParticleSystemDefinitionUnpack
 B s_selectedSetBorderColor
 B s_selectedSetColor
 B s_vcollide_wireframe
 B scene_clientflex
 B scene_clientplayback
 B scene_flatturn
 B scene_print
 B scenefilecache
 B score_blind_enemy_bonus
 B score_blind_friendly_penalty
 B score_bomb_defuse_bonus
 B score_bomb_defuse_radius_inner
 B score_bomb_defuse_radius_outer
 B score_bomb_plant_bonus
 B score_bomb_plant_radius_inner
 B score_bomb_plant_radius_outer
 B score_damage
 B score_default
 B score_dropped_bomb_proximity_damage_bonus
 B score_dropped_bomb_proximity_damage_bonus_radius_inner
 B score_dropped_bomb_proximity_damage_bonus_radius_outer
 B score_dropped_defuser_proximity_damage_bonus
 B score_dropped_defuser_proximity_damage_radius_inner
 B score_dropped_defuser_proximity_damage_radius_outer
 B score_ff_damage
 B score_hostage_damage_penalty
 B score_hostage_proximity_damage_bonus
 B score_hostage_proximity_damage_radius_inner
 B score_hostage_proximity_damage_radius_outer
 B score_hostage_rescue_bonus
 B score_hostage_rescue_radius_inner
 B score_hostage_rescue_radius_outer
 B score_kill_enemy_bonus
 B score_planted_bomb_proximity_damage_bonus
 B score_planted_bomb_proximity_damage_radius_inner
 B score_planted_bomb_proximity_damage_radius_outer
 B score_team_damage_bonus
 B score_typical_good_score
 B script_connect_debugger_on_mapspawn
 B scriptmanager
 B servercfgfile
 B serverenginetools
 B serverfoundry
 B serverpluginhelpers
 B showanimstate_activities
 B showanimstate_log
 B showhitlocation
 B showtriggers
 B sk_ally_regen_time
 B sk_autoaim_mode
 B sk_npc_arm
 B sk_npc_chest
 B sk_npc_head
 B sk_npc_leg
 B sk_npc_stomach
 B sk_player_arm
 B sk_player_chest
 B sk_player_head
 B sk_player_leg
 B sk_player_stomach
 B skill
 B skip_next_map
 B sky3dparams_t_DataDescInit::g_DataMapHolder
 B smokegrenade_projectilePrecache::s_ResourcePrecacher
 B snd_music_boost
 B snd_prevent_ss_duplicates
 B snd_sos_show_server_xmit
 B soundemitterbase
 B soundscape_debug
 B spec_allow_roaming
 B spec_freeze_deathanim_time
 B spec_freeze_panel_extended_time
 B spec_freeze_target_fov
 B spec_freeze_target_fov_long
 B spec_freeze_time
 B spec_freeze_time_lock
 B spec_freeze_traveltime
 B spraycanPrecache::s_ResourcePrecacher
 B staticpropmgr
 B steamworks_sessionid_server
 B step_spline
 B studiorender
 B suitvolume
 B sv_accelerate
 B sv_accelerate_debug_speed
 B sv_accelerate_use_weapon_speed
 B sv_airaccelerate
 B sv_allchat
 B sv_allow_thirdperson
 B sv_allow_votes
 B sv_alltalk
 B sv_arms_race_vote_to_restart_disallowed_after
 B sv_auto_full_alltalk_during_warmup_half_end
 B sv_autobuyammo
 B sv_autosave
 B sv_backspeed
 B sv_bonus_challenge
 B sv_bot_difficulty_gamepad
 B sv_bot_difficulty_hydra
 B sv_bot_difficulty_kbm
 B sv_bot_difficulty_ps3move
 B sv_bot_difficulty_sharpshooter
 B sv_bounce
 B sv_broadcast_ugc_download_progress_interval
 B sv_broadcast_ugc_downloads
 B sv_cheats
 B sv_clearhinthistory
 B sv_coaching_enabled
 B sv_comp_mode_allow_dc
 B sv_competitive_official_5v5
 B sv_compute_per_bot_difficulty
 B sv_damage_print_enable
 B sv_dc_friends_reqd
 B sv_deadtalk
 B sv_debug_player_use
 B sv_debug_ugc_downloads
 B sv_debugroundstats
 B sv_disable_motd
 B sv_disable_observer_interpolation
 B sv_disable_querycache
 B sv_disable_show_team_select_menu
 B sv_disablefreezecam
 B sv_dumpmatchweaponmetrics
 B sv_enablebunnyhopping
 B sv_endmatch_item_drop_interval
 B sv_endmatch_item_drop_interval_ancient
 B sv_endmatch_item_drop_interval_legendary
 B sv_endmatch_item_drop_interval_mythical
 B sv_endmatch_item_drop_interval_rare
 B sv_extreme_strafe_accuracy_fishtail
 B sv_flashbang_strength
 B sv_footstep_sound_frequency
 B sv_footsteps
 B sv_force_transmit_ents
 B sv_force_transmit_players
 B sv_friction
 B sv_full_alltalk
 B sv_game_mode_convars
 B sv_gameinstructor_disable
 B sv_gravity
 B sv_grenade_trajectory
 B sv_grenade_trajectory_dash
 B sv_grenade_trajectory_thickness
 B sv_grenade_trajectory_time
 B sv_grenade_trajectory_time_spectator
 B sv_holiday_mode
 B sv_ignoregrenaderadio
 B sv_infinite_ammo
 B sv_kick_ban_duration
 B sv_kick_players_with_cooldown
 B sv_ladder_angle
 B sv_ladder_dampen
 B sv_lagcompensateself
 B sv_lagcompensationforcerestore
 B sv_lagflushbonecache
 B sv_lagpushticks
 B sv_massreport
 B sv_matchend_drops_enabled
 B sv_matchpause_auto_5v5
 B sv_max_allowed_net_graph
 B sv_max_usercmd_future_ticks
 B sv_maxreplay
 B sv_maxspeed
 B sv_maxunlag
 B sv_maxusrcmdprocessticks_warning
 B sv_maxvelocity
 B sv_netvisdist
 B sv_noclipaccelerate
 B sv_noclipduringpause
 B sv_noclipspeed
 B sv_nomvp
 B sv_nonemesis
 B sv_nowinpanel
 B sv_npc_talker_maxdist
 B sv_party_mode
 B sv_penetration_type
 B sv_pushaway_clientside
 B sv_pushaway_clientside_size
 B sv_pushaway_force
 B sv_pushaway_hostage_force
 B sv_pushaway_max_force
 B sv_pushaway_max_hostage_force
 B sv_pushaway_max_player_force
 B sv_pushaway_min_player_speed
 B sv_pushaway_player_force
 B sv_pvsskipanimation
 B sv_regeneration_force_on
 B sv_regeneration_wait_time
 B sv_remove_old_ugc_downloads
 B sv_repeatedduckslowdown
 B sv_rollangle
 B sv_rollspeed
 B sv_runcmds
 B sv_script_think_interval
 B sv_server_graphic1
 B sv_server_graphic2
 B sv_server_verify_blood_on_player
 B sv_show_bot_difficulty_in_name
 B sv_showanimstate
 B sv_showimpacts
 B sv_showimpacts_penetration
 B sv_showimpacts_time
 B sv_showladders
 B sv_showlagcompensation
 B sv_showplayerhitboxes
 B sv_skyname
 B sv_soundemitter_trace
 B sv_soundemitter_version
 B sv_spawn_afk_bomb_drop_time
 B sv_spec_hear
 B sv_specaccelerate
 B sv_specnoclip
 B sv_specspeed
 B sv_staminajumpcost
 B sv_staminalandcost
 B sv_staminamax
 B sv_staminarecoveryrate
 B sv_stepsize
 B sv_stopspeed
 B sv_strict_notarget
 B sv_suppress_viewpunch
 B sv_test_scripted_sequences
 B sv_test_steam_connection_failure
 B sv_teststepsimulation
 B sv_timebetweenducks
 B sv_timeconsideredfastduck
 B sv_turbophysics
 B sv_ugc_manager_max_new_file_check_interval_secs
 B sv_unlag
 B sv_unlag_debug
 B sv_unlag_fixstuck
 B sv_unlockedchapters
 B sv_usercmd_custom_random_seed
 B sv_vehicle_autoaim_scale
 B sv_vote_allow_in_warmup
 B sv_vote_allow_spectators
 B sv_vote_command_delay
 B sv_vote_creation_timer
 B sv_vote_failure_timer
 B sv_vote_issue_changelevel_allowed
 B sv_vote_issue_kick_allowed
 B sv_vote_issue_loadbackup_allowed
 B sv_vote_issue_matchready_allowed
 B sv_vote_issue_nextlevel_allowed
 B sv_vote_issue_nextlevel_allowextend
 B sv_vote_issue_nextlevel_choicesmode
 B sv_vote_issue_nextlevel_prevent_change
 B sv_vote_issue_pause_match_allowed
 B sv_vote_issue_restart_game_allowed
 B sv_vote_issue_scramble_teams_allowed
 B sv_vote_issue_surrender_allowed
 B sv_vote_issue_swap_teams_allowed
 B sv_vote_kick_ban_duration
 B sv_vote_quorum_ratio
 B sv_vote_timer_duration
 B sv_wateraccelerate
 B sv_waterdist
 B sv_waterfriction
 B sv_workshop_allow_other_maps
 B teamlist
 B teamoverride
 B teamplay
 B template_debug
 B template_t_DataDescInit::g_DataMapHolder
 B test_it
 B think_limit
 B thinkfunc_t_DataDescInit::g_DataMapHolder
 B throttle_expensive_ai
 B token
 B tokencount
 B tr_best_course_time
 B tr_completed_training
 B tr_valve_course_time
 B trace_report
 B tv_delaymapchange
 B vehicle_crashsound_t_DataDescInit::g_DataMapHolder
 B vehicle_gear_t_DataDescInit::g_DataMapHolder
 B vehiclesounds_t_DataDescInit::g_DataMapHolder
 B vgui::BuildGroup::m_HandleTable
 B vgui::Button::s_pUnpackParams
 B vgui::CBuildFactoryHelper::m_sHelpers
 B vgui::Label::s_pUnpackParams
 B vgui::Panel::s_NavLock
 B vgui::Panel::s_pUnpackParams
 B vgui_screenPrecache::s_ResourcePrecacher
 B view_punch_decay
 B view_recoil_tracking
 B vismon_poll_frequency
 B vismon_trace_limit
 B voice_player_speaking_delay_threshold
 B voice_serverdebug
 B vprof_scope_entity_gamephys
 B vprof_scope_entity_thinks
 B vprof_think_limit
 B weapon_accuracy_logging
 B weapon_accuracy_nospread
 B weapon_c4Precache::s_ResourcePrecacher
 B weapon_decoyPrecache::s_ResourcePrecacher
 B weapon_flashbangPrecache::s_ResourcePrecacher
 B weapon_hegrenadePrecache::s_ResourcePrecacher
 B weapon_incgrenadePrecache::s_ResourcePrecacher
 B weapon_knifePrecache::s_ResourcePrecacher
 B weapon_knifeggPrecache::s_ResourcePrecacher
 B weapon_land_dip_amt
 B weapon_legacy_recoiltable
 B weapon_molotovPrecache::s_ResourcePrecacher
 B weapon_molotov_maxdetonateslope
 B weapon_recoil_cooldown
 B weapon_recoil_decay1
 B weapon_recoil_decay2_exp
 B weapon_recoil_decay2_lin
 B weapon_recoil_scale
 B weapon_recoil_scale_motion_controller
 B weapon_recoil_suppression_factor
 B weapon_recoil_suppression_shots
 B weapon_recoil_variance
 B weapon_recoil_vel_decay
 B weapon_recoil_view_punch_extra
 B weapon_reticle_knife_show
 B weapon_showproficiency
 B weapon_smokegrenadePrecache::s_ResourcePrecacher
 B weaponstay
 B xbox_autothrottle
 B xbox_steering_deadzone
 B xbox_throttlebias
 B xbox_throttlespoof
 B xboxsystem
 B xc_crouch_debounce
 COM_TimestampedLog
 CThread::GetName()
 CThread::Join(unsigned int)
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
 CThreadMutex::TryLock()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSpinRWLock::SpinLockForRead()
 CThreadSpinRWLock::SpinLockForWrite()
 CThreadSyncObject::~CThreadSyncObject()
 CUniformRandomStream::CUniformRandomStream()
 CUniformRandomStream::RandomFloat(float, float)
 CUniformRandomStream::RandomInt(int, int)
 CUniformRandomStream::SetSeed(int)
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CVProfNode::MarkFrame()
 CVProfNode::Pause()
 CVProfNode::Reset()
 CVProfNode::Resume()
 CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
 CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 CVProfile::OutputReport(int, char const*, int)
 CallAssertFailedNotifyFunc
 CommandLine
 ConColorMsg(Color const&, char const*, ...)
 ConMsg(char const*, ...)
 Coroutine_Continue
 Coroutine_Create
 Coroutine_YieldToMain
 CreateSimpleThread
 D AIAgentSaveHeader_t::m_DataMap
 D AIAgentScheduleState_t::m_DataMap
 D AIBehaviorChannelSaveHeader_t::m_DataMap
 D AIChannelScheduleState_t::m_DataMap
 D AIExtendedSaveHeader_t::m_DataMap
 D AIScheduleState_t::m_DataMap
 D AISquadEnemyInfo_t::m_DataMap
 D AI_EnemyInfo_t::m_DataMap
 D AI_FollowNavInfo_t::m_DataMap
 D AI_FollowParams_t::m_DataMap
 D AI_FreePassParams_t::m_DataMap
 D AI_LeadArgs_t::m_DataMap
 D AI_StandoffParams_t::m_DataMap
 D AI_Waypoint_t::m_DataMap
 D AllocTempVector()::s_nIndex
 D AllocTempVector()::s_vecTemp
 D BotDifficultyName
 D CAISound::m_DataMap
 D CAI_AccelDecay::m_DataMap
 D CAI_AddOn::m_DataMap
 D CAI_Agent::m_DataMap
 D CAI_AllySpeechManager::m_DataMap
 D CAI_AssaultBehavior::m_DataMap
 D CAI_AssaultGoal::m_DataMap
 D CAI_BaseActor::m_DataMap
 D CAI_BaseFlyingBot::m_DataMap
 D CAI_BaseNPC::m_DataMap
 D CAI_BaseNPC::m_nDebugPauseIndex
 D CAI_BasePhysicsFlyingBot::m_DataMap
 D CAI_BattleLine::m_DataMap
 D CAI_BehaviorBase::m_DataMap
 D CAI_BlendedMotor::m_DataMap
 D CAI_ChangeHintGroup::m_DataMap
 D CAI_ChangeTarget::m_DataMap
 D CAI_DynamicLink::m_DataMap
 D CAI_DynamicLinkController::m_DataMap
 D CAI_Enemies::m_DataMap
 D CAI_Expresser::m_DataMap
 D CAI_FearBehavior::m_DataMap
 D CAI_FightFromCoverBehavior::m_DataMap
 D CAI_FightFromCoverGoal::m_DataMap
 D CAI_FollowBehavior::m_DataMap
 D CAI_FollowGoal::m_DataMap
 D CAI_FreePass::m_DataMap
 D CAI_GoalEntity::m_DataMap
 D CAI_Hint::m_DataMap
 D CAI_InterestTarget_t::m_DataMap
 D CAI_LeadBehavior::m_DataMap
 D CAI_LeadGoal::m_DataMap
 D CAI_LeadGoal_Weapon::m_DataMap
 D CAI_LocalNavigator::m_DataMap
 D CAI_LookTarget::m_DataMap
 D CAI_Motor::m_DataMap
 D CAI_MoveAndShootOverlay::m_DataMap
 D CAI_MoveMonitor::m_DataMap
 D CAI_MoveProbe::m_DataMap
 D CAI_Navigator::m_DataMap
 D CAI_Network::GetNode(int, bool) const::warningCount
 D CAI_NetworkEditTools::m_flAirEditDistance
 D CAI_NetworkEditTools::m_iGConnectivityNode
 D CAI_NetworkEditTools::m_iVisibilityNode
 D CAI_NetworkManager::m_DataMap
 D CAI_Path::m_DataMap
 D CAI_Pathfinder::m_DataMap
 D CAI_PlayerAlly::m_DataMap
 D CAI_ProxTester::m_DataMap
 D CAI_RadialLinkController::m_DataMap
 D CAI_RappelBehavior::m_DataMap
 D CAI_ScriptConditions::gm_Evaluators
 D CAI_ScriptConditions::m_DataMap
 D CAI_ScriptConditionsElement::m_DataMap
 D CAI_ScriptedSchedule::m_DataMap
 D CAI_ScriptedSentence::m_DataMap
 D CAI_ScriptedSequence::m_DataMap
 D CAI_Senses::m_DataMap
 D CAI_SentenceBase::m_DataMap
 D CAI_ShotRegulator::m_DataMap
 D CAI_SpeechFilter::m_DataMap
 D CAI_Squad::m_DataMap
 D CAI_StandoffBehavior::m_DataMap
 D CAI_StandoffGoal::m_DataMap
 D CAI_TacticalServices::m_DataMap
 D CAI_TrackPather::m_DataMap
 D CAmbientGeneric::m_DataMap
 D CAnimationLayer::m_DataMap
 D CAreaPortal::m_DataMap
 D CAssaultPoint::m_DataMap
 D CAttributeContainer::m_DataMap
 D CAttributeContainerPlayer::m_DataMap
 D CAttributeList::m_DataMap
 D CAttributeManager::m_DataMap
 D CBaseAchievement::m_DataMap
 D CBaseAnimating::m_DataMap
 D CBaseAnimating::m_pClassSendTable
 D CBaseAnimatingOverlay::m_DataMap
 D CBaseAnimatingOverlay::m_pClassSendTable
 D CBaseAttributableItem::m_DataMap
 D CBaseButton::m_DataMap
 D CBaseCSGrenade::m_DataMap
 D CBaseCSGrenade::m_pClassSendTable
 D CBaseCSGrenadeProjectile::m_DataMap
 D CBaseCSGrenadeProjectile::m_pClassSendTable
 D CBaseCombatCharacter::m_DataMap
 D CBaseCombatCharacter::m_pClassSendTable
 D CBaseCombatWeapon::m_DataMap
 D CBaseCombatWeapon::m_pClassSendTable
 D CBaseDMStart::m_DataMap
 D CBaseDoor::m_DataMap
 D CBaseEntity::GetPreTemplateName()::szStrippedName
 D CBaseEntity::ScriptEyePosition()::vec
 D CBaseEntity::ScriptGetAngles()::vec
 D CBaseEntity::ScriptGetForward()::vecForward
 D CBaseEntity::ScriptGetLeft()::vecLeft
 D CBaseEntity::ScriptGetUp()::vecUp
 D CBaseEntity::m_DataMap
 D CBaseEntity::m_nDebugPlayer
 D CBaseEntity::m_nDebugSteps
 D CBaseEntity::m_nPredictionRandomSeed
 D CBaseEntity::m_nPredictionRandomSeedServer
 D CBaseEntity::m_pClassSendTable
 D CBaseEntity::s_bAbsQueriesValid
 D CBaseEntity::sm_bAccurateTriggerBboxChecks
 D CBaseEntityOutput::m_DataMap
 D CBaseFilter::m_DataMap
 D CBaseFire::m_DataMap
 D CBaseFlex::m_DataMap
 D CBaseFlex::m_pClassSendTable
 D CBaseGrenade::m_DataMap
 D CBaseGrenade::m_pClassSendTable
 D CBaseMoveBehavior::m_DataMap
 D CBaseParticleEntity::m_pClassSendTable
 D CBasePlatTrain::m_DataMap
 D CBasePlayer::m_DataMap
 D CBasePlayer::m_pClassSendTable
 D CBaseProjectile::m_DataMap
 D CBasePropDoor::m_DataMap
 D CBasePropDoor::m_pClassSendTable
 D CBaseServerVehicle::m_DataMap
 D CBaseTeamObjectiveResource::m_DataMap
 D CBaseTempEntity::m_pClassSendTable
 D CBaseToggle::m_DataMap
 D CBaseToggle::m_pClassSendTable
 D CBaseTrigger::m_DataMap
 D CBaseTrigger::m_pClassSendTable
 D CBaseVPhysicsTrigger::m_DataMap
 D CBaseViewModel::m_DataMap
 D CBaseViewModel::m_pClassSendTable
 D CBeam::m_DataMap
 D CBeamSpotlight::m_DataMap
 D CBlendingCycler::m_DataMap
 D CBlood::m_DataMap
 D CBombTarget::m_DataMap
 D CBoneFollower::m_DataMap
 D CBoneFollowerManager::m_DataMap
 D CBot<CCSPlayer>::CBot()::nextID
 D CBreakable::m_DataMap
 D CBreakable::pSpawnObjects
 D CBreakableProp::m_DataMap
 D CBreakableProp::m_pClassSendTable
 D CBreakableSurface::m_DataMap
 D CBubbling::m_DataMap
 D CBuildModeNavCombo::ChainToAnimationMap()::chained
 D CBuildModeNavCombo::ChainToMap()::chained
 D CBuildModeNavCombo::GetKBMap()::s_pMap
 D CBuildModeNavCombo::GetMessageMap()::s_pMap
 D CBuildModeNavCombo::KB_ChainToMap()::chained
 D CBuyZone::m_DataMap
 D CCSBot::m_DataMap
 D CCSBotManager::GetDifficultyLevel()::sv_mmqueue_reservation
 D CCSPlayer::m_DataMap
 D CCSPlayerResource::m_DataMap
 D CCascadeLight::m_DataMap
 D CChangeLevel::m_DataMap
 D CChicken::m_DataMap
 D CChoreoEvent::s_nGlobalID
 D CCollisionProperty::m_DataMap
 D CColorCorrection::m_DataMap
 D CColorCorrectionVolume::m_DataMap
 D CCommentaryAuto::m_DataMap
 D CCommentarySystem::InitCommentary()::commentarySpawnedSemaphoreName
 D CCommentarySystem::InitCommentary()::infoTargetStr
 D CCommentarySystem::m_DataMap
 D CConstantForceController::m_DataMap
 D CConstraintAnchor::m_DataMap
 D CCopyRecipientFilter::m_DataMap
 D CCredits::m_DataMap
 D CCycler::m_DataMap
 D CDebugHistory::m_DataMap
 D CDecal::m_DataMap
 D CDecoyGrenade::m_DataMap
 D CDecoyProjectile::m_DataMap
 D CDmxElement* const& CDmxAttribute::GetValue<CDmxElement*>() const::defaultValue
 D CDmxElement* const& CDmxElement::GetValue<CDmxElement*>(char const*) const::defaultValue
 D CDragDropHelperPanel::ChainToAnimationMap()::chained
 D CDragDropHelperPanel::ChainToMap()::chained
 D CDragDropHelperPanel::GetKBMap()::s_pMap
 D CDragDropHelperPanel::GetMessageMap()::s_pMap
 D CDragDropHelperPanel::KB_ChainToMap()::chained
 D CDynamicLight::m_DataMap
 D CDynamicProp::m_DataMap
 D CDynamicProp::m_pClassSendTable
 D CEconEntity::m_DataMap
 D CEconEntity::m_pClassSendTable
 D CEconItemView::m_DataMap
 D CEmbers::m_DataMap
 D CEntityDissolve::m_DataMap
 D CEntityFlame::m_DataMap
 D CEntityFreezing::m_DataMap
 D CEntityParticleTrail::m_DataMap
 D CEnvAmbientLight::m_DataMap
 D CEnvBeam::m_DataMap
 D CEnvBeverage::m_DataMap
 D CEnvDOFController::m_DataMap
 D CEnvDustPuff::m_DataMap
 D CEnvEffectsScript::m_DataMap
 D CEnvEntityIgniter::m_DataMap
 D CEnvEntityMaker::m_DataMap
 D CEnvExplosion::m_DataMap
 D CEnvFade::m_DataMap
 D CEnvFireSensor::m_DataMap
 D CEnvFireSource::m_DataMap
 D CEnvFunnel::m_DataMap
 D CEnvGlobal::m_DataMap
 D CEnvGunfire::m_DataMap
 D CEnvHudHint::m_DataMap
 D CEnvInstructorHint::m_DataMap
 D CEnvLaser::m_DataMap
 D CEnvMicrophone::m_DataMap
 D CEnvMuzzleFlash::m_DataMap
 D CEnvParticleScript::m_DataMap
 D CEnvPlayerSurfaceTrigger::m_DataMap
 D CEnvProjectedTexture::m_DataMap
 D CEnvQuadraticBeam::m_DataMap
 D CEnvScreenEffect::m_DataMap
 D CEnvScreenOverlay::m_DataMap
 D CEnvShake::m_DataMap
 D CEnvShooter::m_DataMap
 D CEnvSoundscape::m_DataMap
 D CEnvSoundscapeProxy::m_DataMap
 D CEnvSoundscapeTriggerable::m_DataMap
 D CEnvSpark::m_DataMap
 D CEnvSplash::m_DataMap
 D CEnvTilt::m_DataMap
 D CEnvTonemapController::m_DataMap
 D CEnvTracer::m_DataMap
 D CEnvViewPunch::m_DataMap
 D CEnvWind::m_DataMap
 D CEnvZoom::m_DataMap
 D CEventAction::m_DataMap
 D CEventQueue::m_DataMap
 D CFailableAchievement::m_DataMap
 D CFilterClass::m_DataMap
 D CFilterContext::m_DataMap
 D CFilterEnemy::m_DataMap
 D CFilterMassGreater::m_DataMap
 D CFilterModel::m_DataMap
 D CFilterMultiple::m_DataMap
 D CFilterName::m_DataMap
 D CFire::m_DataMap
 D CFireSmoke::m_DataMap
 D CFireTrail::m_DataMap
 D CFish::m_DataMap
 D CFishPool::m_DataMap
 D CFlashbang::m_DataMap
 D CFlashbangProjectile::m_DataMap
 D CFlexCycler::m_DataMap
 D CFlexExpresser::m_DataMap
 D CFlextalkActor::m_DataMap
 D CFmtStrN<1024, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256, false>::AppendFormat(char const*, ...)::scAsserted
 D CFmtStrN<256, false>::CFmtStrN(char const**, ...)::scAsserted
 D CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
 D CFmtStrN<32, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<80, false>::sprintf(char const*, ...)::scAsserted
 D CFogController::m_DataMap
 D CFogTrigger::m_DataMap
 D CFogVolume::m_DataMap
 D CFootstepControl::m_DataMap
 D CFourWheelServerVehicle::m_DataMap
 D CFourWheelVehiclePhysics::m_DataMap
 D CFunFactHelper::s_pFirst
 D CFuncAreaPortalBase::m_DataMap
 D CFuncAreaPortalWindow::m_DataMap
 D CFuncBrush::m_DataMap
 D CFuncBrush::m_pClassSendTable
 D CFuncConveyor::m_DataMap
 D CFuncInstanceIoProxy::m_DataMap
 D CFuncLadder::m_DataMap
 D CFuncMonitor::m_DataMap
 D CFuncMoveLinear::m_DataMap
 D CFuncNavBlocker::m_DataMap
 D CFuncNavObstruction::m_DataMap
 D CFuncOccluder::m_DataMap
 D CFuncPlat::m_DataMap
 D CFuncPlatRot::m_DataMap
 D CFuncReflectiveGlass::m_DataMap
 D CFuncRotating::m_DataMap
 D CFuncSmokeVolume::m_DataMap
 D CFuncTankTrain::m_DataMap
 D CFuncTrackAuto::m_DataMap
 D CFuncTrackChange::m_DataMap
 D CFuncTrackTrain::m_DataMap
 D CFuncTrain::m_DataMap
 D CFuncTrainControls::m_DataMap
 D CFuncVPhysicsClip::m_DataMap
 D CFuncVehicleClip::m_DataMap
 D CFuncWall::m_DataMap
 D CFuncWallToggle::m_DataMap
 D CFunc_Dust::m_DataMap
 D CFunc_LOD::m_DataMap
 D CGCClientJobServerWelcome::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)::g_GsCookie
 D CGameEnd::m_DataMap
 D CGameGibManager::m_DataMap
 D CGameMoney::m_DataMap
 D CGamePlayerEquip::m_DataMap
 D CGamePlayerZone::m_DataMap
 D CGameRoundEnd::m_DataMap
 D CGameRulesProxy::m_pClassSendTable
 D CGameScore::m_DataMap
 D CGameString::gm_iSerialNumber
 D CGameText::m_DataMap
 D CGameUI::m_DataMap
 D CGameWeaponManager::m_DataMap
 D CGenericActor::m_DataMap
 D CGib::m_DataMap
 D CGibShooter::m_DataMap
 D CGlobalState::m_DataMap
 D CGunTarget::m_DataMap
 D CHEGrenade::m_DataMap
 D CHEGrenadeProjectile::m_DataMap
 D CHostage::m_DataMap
 D CHostageCarriableProp::m_DataMap
 D CHostageRescueZone::m_DataMap
 D CInferno::m_DataMap
 D CInferno::m_pClassSendTable
 D CInfoCameraLink::m_DataMap
 D CInfoGameEventProxy::m_DataMap
 D CInfoInstructorHintBombTargetA::m_DataMap
 D CInfoInstructorHintBombTargetB::m_DataMap
 D CInfoInstructorHintHostageRescueZone::m_DataMap
 D CInfoInstructorHintTarget::m_DataMap
 D CInfoOverlayAccessor::m_DataMap
 D CInfoRemarkable::m_DataMap
 D CInfoViewParameters::m_DataMap
 D CInstancedSceneEntity::m_DataMap
 D CItem::m_DataMap
 D CItemDefuser::m_DataMap
 D CItemSoda::m_DataMap
 D CKeepUpright::m_DataMap
 D CKnife::m_pClassSendTable
 D CLight::m_DataMap
 D CLightGlow::m_DataMap
 D CLogicActiveAutosave::m_DataMap
 D CLogicAuto::m_DataMap
 D CLogicAutosave::m_DataMap
 D CLogicBranch::m_DataMap
 D CLogicBranchList::m_DataMap
 D CLogicCase::m_DataMap
 D CLogicCollisionPair::m_DataMap
 D CLogicCompare::m_DataMap
 D CLogicCompareInteger::m_DataMap
 D CLogicEventListener::m_DataMap
 D CLogicEventListenerItemEquip::m_DataMap
 D CLogicLineToEntity::m_DataMap
 D CLogicMeasureMovement::m_DataMap
 D CLogicNavigation::m_DataMap
 D CLogicPlayMovie::m_DataMap
 D CLogicPlayerProxy::m_DataMap
 D CLogicRandomOutputs::m_DataMap
 D CLogicRegisterActivator::m_DataMap
 D CLogicRelay::m_DataMap
 D CLogicScript::m_DataMap
 D CMapInfo::m_DataMap
 D CMaterialModifyControl::m_DataMap
 D CMathColorBlend::m_DataMap
 D CMathCounter::m_DataMap
 D CMathRemap::m_DataMap
 D CMessage::m_DataMap
 D CMessageEntity::m_DataMap
 D CMolotovGrenade::m_DataMap
 D CMolotovGrenade::m_pClassSendTable
 D CMomentaryRotButton::m_DataMap
 D CMotorController::m_DataMap
 D CMovementSpeedMod::m_DataMap
 D CMovieDisplay::m_DataMap
 D CMultiDamage::m_DataMap
 D CMultiSource::m_DataMap
 D CNPC_Furniture::m_DataMap
 D CNPC_HearDanger::m_DataMap
 D CNPC_VehicleDriver::gm_SchedLoadStatus
 D CNPC_VehicleDriver::gm_pszErrorClassName
 D CNPC_VehicleDriver::m_DataMap
 D CNavArea::m_masterMarker
 D CNavArea::m_nextID
 D CNavLadder::m_nextID
 D CNavNode::m_nextID
 D CNetMessagePB<100, CNETMsg_PlayerAvatarData, 14, true>::s_typeName
 D CNetMessagePB<4, CNETMsg_Tick, 0, true>::s_typeName
 D CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::s_typeName
 D CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::s_typeName
 D CNetMessagePB<7, CNETMsg_SignonState, 13, true>::s_typeName
 D CNoDefuseArea::m_DataMap
 D CNodeEnt::m_DataMap
 D COrnamentProp::m_DataMap
 D COuttroStats::m_DataMap
 D CParticleFire::m_DataMap
 D CParticleLight::m_DataMap
 D CParticlePerformanceMonitor::m_DataMap
 D CParticleSystem::m_DataMap
 D CPassengerInfo::m_DataMap
 D CPathCorner::m_DataMap
 D CPathKeyFrame::m_DataMap
 D CPathTrack::m_DataMap
 D CPhysBox::m_DataMap
 D CPhysBox::m_pClassSendTable
 D CPhysBoxMultiplayer::m_DataMap
 D CPhysConstraint::m_DataMap
 D CPhysConstraintSystem::m_DataMap
 D CPhysConvert::m_DataMap
 D CPhysExplosion::m_DataMap
 D CPhysForce::m_DataMap
 D CPhysHinge::m_DataMap
 D CPhysImpact::m_DataMap
 D CPhysLength::m_DataMap
 D CPhysMagnet::m_DataMap
 D CPhysMotor::m_DataMap
 D CPhysPulley::m_DataMap
 D CPhysSlideConstraint::m_DataMap
 D CPhysThruster::m_DataMap
 D CPhysTorque::m_DataMap
 D CPhysicsCannister::m_DataMap
 D CPhysicsEntitySolver::m_DataMap
 D CPhysicsNPCSolver::m_DataMap
 D CPhysicsProp::m_DataMap
 D CPhysicsProp::m_pClassSendTable
 D CPhysicsPropMultiplayer::m_DataMap
 D CPhysicsPropRespawnable::m_DataMap
 D CPhysicsShake::m_DataMap
 D CPhysicsSpring::m_DataMap
 D CPhysicsWind::m_DataMap
 D CPhysicsWire::m_DataMap
 D CPlantedC4::m_DataMap
 D CPlantedC4Training::m_DataMap
 D CPlasma::m_DataMap
 D CPlayerLocalData::m_DataMap
 D CPlayerResource::m_DataMap
 D CPlayerResource::m_pClassSendTable
 D CPlayerState::m_DataMap
 D CPointAngleSensor::m_DataMap
 D CPointAngularVelocitySensor::m_DataMap
 D CPointBonusMapsAccessor::m_DataMap
 D CPointBroadcastClientCommand::m_DataMap
 D CPointCamera::m_DataMap
 D CPointClientCommand::m_DataMap
 D CPointCommentaryNode::m_DataMap
 D CPointDevShotCamera::m_DataMap
 D CPointEntityFinder::m_DataMap
 D CPointGamestatsCounter::m_DataMap
 D CPointHurt::m_DataMap
 D CPointPlayerMoveConstraint::m_DataMap
 D CPointProximitySensor::m_DataMap
 D CPointServerCommand::m_DataMap
 D CPointSpotlight::m_DataMap
 D CPointTeleport::m_DataMap
 D CPointTemplate::m_DataMap
 D CPointVelocitySensor::m_DataMap
 D CPoseController::m_DataMap
 D CPostProcessController::m_DataMap
 D CPrecipitation::m_DataMap
 D CPrecipitationBlocker::m_DataMap
 D CProjectedDecal::m_DataMap
 D CPropDoorRotating::m_DataMap
 D CPropDoorRotatingBreakable::m_DataMap
 D CPropJeep::m_DataMap
 D CPropVehicle::m_DataMap
 D CPropVehicleDriveable::m_DataMap
 D CPropVehicleDriveable::m_pClassSendTable
 D CProp_Hallucination::m_DataMap
 D CRagdollBoogie::m_DataMap
 D CRagdollConstraint::m_DataMap
 D CRagdollMagnet::m_DataMap
 D CRagdollManager::m_DataMap
 D CRagdollProp::m_DataMap
 D CRagdollProp::m_pClassSendTable
 D CRagdollPropAttached::m_DataMap
 D CRallyPoint::m_DataMap
 D CRandSimTimer::m_DataMap
 D CRandStopwatch::m_DataMap
 D CRevertSaved::m_DataMap
 D CRopeAnchor::m_DataMap
 D CRopeKeyframe::m_DataMap
 D CRotDoor::m_DataMap
 D CRotorWashShooter::m_DataMap
 D CRuleEntity::m_DataMap
 D CRulePointEntity::m_DataMap
 D CSStatProperty_Table_Init
 D CSceneEntity::m_DataMap
 D CSceneListManager::m_DataMap
 D CSceneManager::m_DataMap
 D CScriptedTarget::m_DataMap
 D CServerNetworkProperty::m_DataMap
 D CShadowControl::m_DataMap
 D CSimTimer::m_DataMap
 D CSimpleSimTimer::m_DataMap
 D CSkyCamera::m_DataMap
 D CSkyboxSwapper::m_DataMap
 D CSlideshowDisplay::m_DataMap
 D CSmallTextEntry::ChainToAnimationMap()::chained
 D CSmallTextEntry::ChainToMap()::chained
 D CSmallTextEntry::GetKBMap()::s_pMap
 D CSmallTextEntry::GetMessageMap()::s_pMap
 D CSmallTextEntry::KB_ChainToMap()::chained
 D CSmokeGrenade::m_DataMap
 D CSmokeGrenadeProjectile::m_DataMap
 D CSmokeStack::m_DataMap
 D CSmokeStackLightInfo::m_DataMap
 D CSound::m_DataMap
 D CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)::s_MissingHashes
 D CSoundEmitterSystem::PrecacheScriptSound(char const*)::s_PrecacheScriptSoundFailures
 D CSoundEnt::m_DataMap
 D CSoundEnvelope::m_DataMap
 D CSoundPatch::m_DataMap
 D CSpatialEntity::m_DataMap
 D CSpatialEntity::m_pClassSendTable
 D CSpotlightEnd::m_DataMap
 D CSprite::m_DataMap
 D CSprite::m_pClassSendTable
 D CSpriteTrail::m_DataMap
 D CStatueProp::m_DataMap
 D CSteamJet::m_DataMap
 D CStopwatch::m_DataMap
 D CStopwatchBase::m_DataMap
 D CStripWeapons::m_DataMap
 D CSun::m_DataMap
 D CSunlightShadowControl::m_DataMap
 D CSurroundTest::m_DataMap
 D CTEBaseBeam::m_pClassSendTable
 D CTEMetalSparks::m_pClassSendTable
 D CTEParticleSystem::m_pClassSendTable
 D CTakeDamageInfo::m_DataMap
 D CTankTargetChange::m_DataMap
 D CTankTrainAI::m_DataMap
 D CTargetCDAudioRep::m_DataMap
 D CTargetChangeGravity::m_DataMap
 D CTeam::m_nStaticGGLeader_CT
 D CTeam::m_nStaticGGLeader_T
 D CTeam::m_pClassSendTable
 D CTeamSpawnPoint::m_DataMap
 D CTeamVehicleSpawnPoint::m_DataMap
 D CTeamplayRoundBasedRulesProxy::m_DataMap
 D CTesla::m_DataMap
 D CTestTraceline::m_DataMap
 D CTextureToggle::m_DataMap
 D CThrustController::m_DataMap
 D CTimeline::m_DataMap
 D CTimerEntity::m_DataMap
 D CTonemapTrigger::m_DataMap
 D CTraceFilterValidForDecal::ShouldHitEntity(IHandleEntity*, int)::ppszIgnoredClasses
 D CTriggerAutoCrouch::m_DataMap
 D CTriggerBombReset::m_DataMap
 D CTriggerBrush::m_DataMap
 D CTriggerCamera::m_DataMap
 D CTriggerCameraMultiplayer::m_DataMap
 D CTriggerGravity::m_DataMap
 D CTriggerHierarchy::m_DataMap
 D CTriggerHurt::m_DataMap
 D CTriggerImpact::m_DataMap
 D CTriggerLook::m_DataMap
 D CTriggerMultiple::m_DataMap
 D CTriggerPlayerMovement::m_DataMap
 D CTriggerProximity::m_DataMap
 D CTriggerPush::m_DataMap
 D CTriggerRemove::m_DataMap
 D CTriggerSave::m_DataMap
 D CTriggerSoundscape::m_DataMap
 D CTriggerTeleport::m_DataMap
 D CTriggerToggleSave::m_DataMap
 D CTriggerVPhysicsMotion::m_DataMap
 D CTriggerViewProxy::m_DataMap
 D CTriggerWind::m_DataMap
 D CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D CUtlVectorUltraConservative<HidingSpot*, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<NavLadderConnect, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<SpotEncounter*, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CVGuiScreen::m_DataMap
 D CVoteController::m_DataMap
 D CWC_UpdateIgnoreList::m_DataMap
 D CWaterBullet::m_DataMap
 D CWaterLODControl::m_DataMap
 D CWeaponCSBase::m_DataMap
 D CWeaponCSBase::m_pClassSendTable
 D CWeaponCSBaseGun::m_pClassSendTable
 D CWeaponCycler::m_DataMap
 D CWeightButton::m_DataMap
 D CWindowPane::m_DataMap
 D CWorld::m_DataMap
 D CWorldItem::m_DataMap
 D CWreckage::m_DataMap
 D CaptionLookup_t::m_DataMap
 D CompiledCaptionHeader_t::m_DataMap
 D ConceptHistory_t::m_DataMap
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D DustTrail::m_DataMap
 D ENTITYIO_FIXUP_STRING
 D EntityParticleTrailInfo_t::m_DataMap
 D EventQueuePrioritizedEvent_t::m_DataMap
 D FilterDamageType::m_DataMap
 D FilterTeam::m_DataMap
 D FirstBitInWord(unsigned int, int)::firstBitLUT
 D GCResultString
 D GCSDK::CJobTime::sm_lTimeCur
 D GCSDK::CProtoBufMsg<CMsgClientHello>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgClientHello>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgClientWelcome>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgClientWelcome>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgConnectionStatus>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgConnectionStatus>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCGiftedItems>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCGiftedItems>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgItemAcknowledged>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgItemAcknowledged>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_pMemoryPool
 D GCSDK::SPEW_CONSOLE
 D GCSDK::SPEW_GC
 D GCSDK::SPEW_JOB
 D GCSDK::SPEW_NETWORK
 D GCSDK::SPEW_SHAREDOBJ
 D GCSDK::SPEW_SYSTEM_MISC
 D GCSDK::SPEW_THREADS
 D GCSDK::g_EGJobMsgContext
 D GCSDK::g_nMaxLogLevel
 D GCSDK::g_nMaxSpewLevel
 D GetBitForBitnum(int)::bitsForBitnum
 D GetEndMask(int)::bitStringEndMasks
 D GetStartBitMask(int)::g_StartMask
 D GetStdStringDataOps()::ops
 D HidingSpot::m_nextID
 D HintNodeData::m_DataMap
 D IGameStatTracker::CGameStatList<SMarketPurchases>* IGameStatTracker::GetStatTable<SMarketPurchases>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SWeaponHitData>* IGameStatTracker::GetStatTable<SWeaponHitData>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SWeaponMissData>* IGameStatTracker::GetStatTable<SWeaponMissData>()::s_vecOfType
 D ISaveRestoreOps* CUtlMapDataopsInstantiator<2, 10>::GetDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)> >(CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CAI_InterestTarget>(CAI_InterestTarget*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> > >(CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> > >(CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> > >(CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> > >(CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> > >(CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> > >(CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> > >(CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> > >(CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> > >(CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> > >(CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> > >(CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> > >(CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> > >(CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> > >(CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> > >(CUtlVector<template_t, CUtlMemory<template_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> > >(CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> > >(CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> > >(CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<12>::GetDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> > >(CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> > >(CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> > >(CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > >(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> > >(CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> > >(CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> > >(CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> > >(CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D ISaveRestoreOps* GetBitstringDataOps<CBitVec<32> >(CBitVec<32>*)::ops
 D ISchemaAttributeTypeBase<CAttribute_String>::s_InstanceStats
 D ISchemaAttributeTypeBase<Vector>::s_InstanceStats
 D ISchemaAttributeTypeBase<float>::s_InstanceStats
 D ISchemaAttributeTypeBase<unsigned int>::s_InstanceStats
 D IntervalTimer::m_DataMap
 D JeepWaterData_t::m_DataMap
 D MOVE_HEIGHT_EPSILON
 D MapName_StatId_Table
 D NavColors
 D Opposite
 D ParticleSmokeGrenade::m_DataMap
 D PhysBlockHeader_t::m_DataMap
 D PhysObjectHeader_t::m_DataMap
 D PlayerModelInfo::g_defaultCTModel
 D PlayerModelInfo::g_defaultCTViewModelArms
 D PlayerModelInfo::g_defaultTModel
 D PlayerModelInfo::g_defaultTViewModelArms
 D RadioEventName
 D Relationship_t::m_DataMap
 D ResponseContext_t::m_DataMap
 D ResponseRules::CRR_Response::m_DataMap
 D ResponseRules::IEngineEmulator::s_pSingleton
 D ResponseRules::ParserResponse::m_DataMap
 D ResponseRules::ResponseGroup::m_DataMap
 D ResponseRules::ResponseParams::m_DataMap
 D RocketTrail::m_DataMap
 D SURFACEPROP_MANIFEST_FILE
 D SaveRestoreBlockHeader_t::m_DataMap
 D ScriptClassDesc_t::GetDescList()::pHead
 D ScriptVariant_t::operator Vector const&() const::vecNull
 D ScriptedNPCInteraction_Phases_t::m_DataMap
 D ScriptedNPCInteraction_t::m_DataMap
 D SmokeTrail::m_DataMap
 D SoundCommand_t::m_DataMap
 D SpawnPoint::m_DataMap
 D SporeExplosion::m_DataMap
 D SporeTrail::m_DataMap
 D TemplateEntityData_t::m_DataMap
 D TheNavAttributeTable
 D UniqueStatID_t<SMarketPurchases>::s_nLastID
 D UniqueStatID_t<SWeaponHitData>::s_nLastID
 D UniqueStatID_t<SWeaponMissData>::s_nLastID
 D UnreachableEnt_t::m_DataMap
 D ViewSmoothingData_t::m_DataMap
 D audioparams_t::m_DataMap
 D bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::searchMarker
 D bool const& CDmxAttribute::GetValue<bool>() const::defaultValue
 D bool const& CDmxElement::GetValue<bool>(char const*) const::defaultValue
 D datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::dataDesc
 D datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::nameHolder
 D datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::dataDesc
 D datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::nameHolder
 D datamap_t* DataMapInit<CAISound>(CAISound*)::dataDesc
 D datamap_t* DataMapInit<CAISound>(CAISound*)::nameHolder
 D datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::dataDesc
 D datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::nameHolder
 D datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::dataDesc
 D datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::nameHolder
 D datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::dataDesc
 D datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::nameHolder
 D datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::dataDesc
 D datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::nameHolder
 D datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::nameHolder
 D datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::dataDesc
 D datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::nameHolder
 D datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::dataDesc
 D datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::nameHolder
 D datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::dataDesc
 D datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::nameHolder
 D datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::dataDesc
 D datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::nameHolder
 D datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::dataDesc
 D datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::nameHolder
 D datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::dataDesc
 D datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::nameHolder
 D datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::dataDesc
 D datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::nameHolder
 D datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::dataDesc
 D datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::nameHolder
 D datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::dataDesc
 D datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::nameHolder
 D datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::dataDesc
 D datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::nameHolder
 D datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::dataDesc
 D datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::nameHolder
 D datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::dataDesc
 D datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::nameHolder
 D datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::dataDesc
 D datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::nameHolder
 D datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::dataDesc
 D datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::nameHolder
 D datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::dataDesc
 D datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::nameHolder
 D datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::dataDesc
 D datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::nameHolder
 D datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::dataDesc
 D datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::nameHolder
 D datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::dataDesc
 D datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::nameHolder
 D datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::dataDesc
 D datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::nameHolder
 D datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::dataDesc
 D datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::nameHolder
 D datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::dataDesc
 D datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::nameHolder
 D datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::dataDesc
 D datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::nameHolder
 D datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::dataDesc
 D datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::nameHolder
 D datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::dataDesc
 D datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::nameHolder
 D datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::nameHolder
 D datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::dataDesc
 D datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::nameHolder
 D datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::dataDesc
 D datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::nameHolder
 D datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::dataDesc
 D datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::nameHolder
 D datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::dataDesc
 D datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::nameHolder
 D datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::dataDesc
 D datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::nameHolder
 D datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::dataDesc
 D datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::nameHolder
 D datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::dataDesc
 D datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::nameHolder
 D datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::dataDesc
 D datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::nameHolder
 D datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::dataDesc
 D datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::nameHolder
 D datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::dataDesc
 D datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::nameHolder
 D datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::dataDesc
 D datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::nameHolder
 D datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::dataDesc
 D datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::nameHolder
 D datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::dataDesc
 D datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::nameHolder
 D datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::dataDesc
 D datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::nameHolder
 D datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::dataDesc
 D datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::nameHolder
 D datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::dataDesc
 D datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::nameHolder
 D datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::dataDesc
 D datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::nameHolder
 D datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::dataDesc
 D datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::nameHolder
 D datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::dataDesc
 D datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::nameHolder
 D datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::dataDesc
 D datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::nameHolder
 D datamap_t* DataMapInit<CBaseCSGrenade>(CBaseCSGrenade*)::dataDesc
 D datamap_t* DataMapInit<CBaseCSGrenade>(CBaseCSGrenade*)::nameHolder
 D datamap_t* DataMapInit<CBaseCSGrenadeProjectile>(CBaseCSGrenadeProjectile*)::dataDesc
 D datamap_t* DataMapInit<CBaseCSGrenadeProjectile>(CBaseCSGrenadeProjectile*)::nameHolder
 D datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::dataDesc
 D datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::nameHolder
 D datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::dataDesc
 D datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::nameHolder
 D datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::dataDesc
 D datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::nameHolder
 D datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::dataDesc
 D datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::nameHolder
 D datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::dataDesc
 D datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::nameHolder
 D datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::dataDesc
 D datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::nameHolder
 D datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::dataDesc
 D datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::nameHolder
 D datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::dataDesc
 D datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::nameHolder
 D datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::dataDesc
 D datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::nameHolder
 D datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::dataDesc
 D datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::nameHolder
 D datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::dataDesc
 D datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::nameHolder
 D datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::dataDesc
 D datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::nameHolder
 D datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::dataDesc
 D datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::nameHolder
 D datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::dataDesc
 D datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::nameHolder
 D datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::dataDesc
 D datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::nameHolder
 D datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::dataDesc
 D datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::nameHolder
 D datamap_t* DataMapInit<CBaseTeamObjectiveResource>(CBaseTeamObjectiveResource*)::dataDesc
 D datamap_t* DataMapInit<CBaseTeamObjectiveResource>(CBaseTeamObjectiveResource*)::nameHolder
 D datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::dataDesc
 D datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::nameHolder
 D datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::dataDesc
 D datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::nameHolder
 D datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::dataDesc
 D datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::nameHolder
 D datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::dataDesc
 D datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::nameHolder
 D datamap_t* DataMapInit<CBeam>(CBeam*)::dataDesc
 D datamap_t* DataMapInit<CBeam>(CBeam*)::nameHolder
 D datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::dataDesc
 D datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::nameHolder
 D datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::dataDesc
 D datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::nameHolder
 D datamap_t* DataMapInit<CBlood>(CBlood*)::dataDesc
 D datamap_t* DataMapInit<CBlood>(CBlood*)::nameHolder
 D datamap_t* DataMapInit<CBombTarget>(CBombTarget*)::dataDesc
 D datamap_t* DataMapInit<CBombTarget>(CBombTarget*)::nameHolder
 D datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::dataDesc
 D datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::nameHolder
 D datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::dataDesc
 D datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::nameHolder
 D datamap_t* DataMapInit<CBreakable>(CBreakable*)::dataDesc
 D datamap_t* DataMapInit<CBreakable>(CBreakable*)::nameHolder
 D datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::dataDesc
 D datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::nameHolder
 D datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::dataDesc
 D datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::nameHolder
 D datamap_t* DataMapInit<CBubbling>(CBubbling*)::dataDesc
 D datamap_t* DataMapInit<CBubbling>(CBubbling*)::nameHolder
 D datamap_t* DataMapInit<CBuyZone>(CBuyZone*)::dataDesc
 D datamap_t* DataMapInit<CBuyZone>(CBuyZone*)::nameHolder
 D datamap_t* DataMapInit<CCSBot>(CCSBot*)::dataDesc
 D datamap_t* DataMapInit<CCSBot>(CCSBot*)::nameHolder
 D datamap_t* DataMapInit<CCSPlayer>(CCSPlayer*)::dataDesc
 D datamap_t* DataMapInit<CCSPlayer>(CCSPlayer*)::nameHolder
 D datamap_t* DataMapInit<CCSPlayerResource>(CCSPlayerResource*)::dataDesc
 D datamap_t* DataMapInit<CCSPlayerResource>(CCSPlayerResource*)::nameHolder
 D datamap_t* DataMapInit<CCascadeLight>(CCascadeLight*)::dataDesc
 D datamap_t* DataMapInit<CCascadeLight>(CCascadeLight*)::nameHolder
 D datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::dataDesc
 D datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::nameHolder
 D datamap_t* DataMapInit<CChicken>(CChicken*)::dataDesc
 D datamap_t* DataMapInit<CChicken>(CChicken*)::nameHolder
 D datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::dataDesc
 D datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::nameHolder
 D datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::dataDesc
 D datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::nameHolder
 D datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::dataDesc
 D datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::nameHolder
 D datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::dataDesc
 D datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::nameHolder
 D datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::dataDesc
 D datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::nameHolder
 D datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::dataDesc
 D datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::nameHolder
 D datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::dataDesc
 D datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::nameHolder
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D datamap_t* DataMapInit<CCredits>(CCredits*)::dataDesc
 D datamap_t* DataMapInit<CCredits>(CCredits*)::nameHolder
 D datamap_t* DataMapInit<CCycler>(CCycler*)::dataDesc
 D datamap_t* DataMapInit<CCycler>(CCycler*)::nameHolder
 D datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::dataDesc
 D datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::nameHolder
 D datamap_t* DataMapInit<CDecal>(CDecal*)::dataDesc
 D datamap_t* DataMapInit<CDecal>(CDecal*)::nameHolder
 D datamap_t* DataMapInit<CDecoyGrenade>(CDecoyGrenade*)::dataDesc
 D datamap_t* DataMapInit<CDecoyGrenade>(CDecoyGrenade*)::nameHolder
 D datamap_t* DataMapInit<CDecoyProjectile>(CDecoyProjectile*)::dataDesc
 D datamap_t* DataMapInit<CDecoyProjectile>(CDecoyProjectile*)::nameHolder
 D datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::dataDesc
 D datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::nameHolder
 D datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::dataDesc
 D datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::nameHolder
 D datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::dataDesc
 D datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::nameHolder
 D datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::dataDesc
 D datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::nameHolder
 D datamap_t* DataMapInit<CEmbers>(CEmbers*)::dataDesc
 D datamap_t* DataMapInit<CEmbers>(CEmbers*)::nameHolder
 D datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::dataDesc
 D datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::nameHolder
 D datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::dataDesc
 D datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::nameHolder
 D datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::dataDesc
 D datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::nameHolder
 D datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::dataDesc
 D datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::nameHolder
 D datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::dataDesc
 D datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::nameHolder
 D datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::dataDesc
 D datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::nameHolder
 D datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::dataDesc
 D datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::nameHolder
 D datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::dataDesc
 D datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::nameHolder
 D datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::dataDesc
 D datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::nameHolder
 D datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::dataDesc
 D datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::nameHolder
 D datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::dataDesc
 D datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::nameHolder
 D datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::dataDesc
 D datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::nameHolder
 D datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::dataDesc
 D datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::nameHolder
 D datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::dataDesc
 D datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::nameHolder
 D datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::dataDesc
 D datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::nameHolder
 D datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::dataDesc
 D datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::nameHolder
 D datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::dataDesc
 D datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::nameHolder
 D datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::dataDesc
 D datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::nameHolder
 D datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::dataDesc
 D datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::nameHolder
 D datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::dataDesc
 D datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::nameHolder
 D datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::dataDesc
 D datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::nameHolder
 D datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::dataDesc
 D datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::nameHolder
 D datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::dataDesc
 D datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::nameHolder
 D datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::dataDesc
 D datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::nameHolder
 D datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::dataDesc
 D datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::nameHolder
 D datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::dataDesc
 D datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::nameHolder
 D datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::dataDesc
 D datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::nameHolder
 D datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::dataDesc
 D datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::nameHolder
 D datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::dataDesc
 D datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::nameHolder
 D datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::dataDesc
 D datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::nameHolder
 D datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::dataDesc
 D datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::nameHolder
 D datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::dataDesc
 D datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::nameHolder
 D datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::dataDesc
 D datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::nameHolder
 D datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::dataDesc
 D datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::nameHolder
 D datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::dataDesc
 D datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::nameHolder
 D datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::dataDesc
 D datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::nameHolder
 D datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::dataDesc
 D datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::nameHolder
 D datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::dataDesc
 D datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::nameHolder
 D datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::dataDesc
 D datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::nameHolder
 D datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::dataDesc
 D datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::nameHolder
 D datamap_t* DataMapInit<CEventAction>(CEventAction*)::dataDesc
 D datamap_t* DataMapInit<CEventAction>(CEventAction*)::nameHolder
 D datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::dataDesc
 D datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::nameHolder
 D datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::dataDesc
 D datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::nameHolder
 D datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::dataDesc
 D datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::nameHolder
 D datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::dataDesc
 D datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::nameHolder
 D datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::dataDesc
 D datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::nameHolder
 D datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::dataDesc
 D datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::nameHolder
 D datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::dataDesc
 D datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::nameHolder
 D datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::dataDesc
 D datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::nameHolder
 D datamap_t* DataMapInit<CFilterName>(CFilterName*)::dataDesc
 D datamap_t* DataMapInit<CFilterName>(CFilterName*)::nameHolder
 D datamap_t* DataMapInit<CFire>(CFire*)::dataDesc
 D datamap_t* DataMapInit<CFire>(CFire*)::nameHolder
 D datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::dataDesc
 D datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::nameHolder
 D datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::dataDesc
 D datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::nameHolder
 D datamap_t* DataMapInit<CFish>(CFish*)::dataDesc
 D datamap_t* DataMapInit<CFish>(CFish*)::nameHolder
 D datamap_t* DataMapInit<CFishPool>(CFishPool*)::dataDesc
 D datamap_t* DataMapInit<CFishPool>(CFishPool*)::nameHolder
 D datamap_t* DataMapInit<CFlashbang>(CFlashbang*)::dataDesc
 D datamap_t* DataMapInit<CFlashbang>(CFlashbang*)::nameHolder
 D datamap_t* DataMapInit<CFlashbangProjectile>(CFlashbangProjectile*)::dataDesc
 D datamap_t* DataMapInit<CFlashbangProjectile>(CFlashbangProjectile*)::nameHolder
 D datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::dataDesc
 D datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::nameHolder
 D datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::dataDesc
 D datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::nameHolder
 D datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::dataDesc
 D datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::nameHolder
 D datamap_t* DataMapInit<CFogController>(CFogController*)::dataDesc
 D datamap_t* DataMapInit<CFogController>(CFogController*)::nameHolder
 D datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::dataDesc
 D datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::nameHolder
 D datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::dataDesc
 D datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::nameHolder
 D datamap_t* DataMapInit<CFootstepControl>(CFootstepControl*)::dataDesc
 D datamap_t* DataMapInit<CFootstepControl>(CFootstepControl*)::nameHolder
 D datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::dataDesc
 D datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::nameHolder
 D datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::dataDesc
 D datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::nameHolder
 D datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::dataDesc
 D datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::nameHolder
 D datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::dataDesc
 D datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::nameHolder
 D datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::dataDesc
 D datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::nameHolder
 D datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::dataDesc
 D datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::nameHolder
 D datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::dataDesc
 D datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::nameHolder
 D datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::dataDesc
 D datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::nameHolder
 D datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::dataDesc
 D datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::nameHolder
 D datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::dataDesc
 D datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::nameHolder
 D datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::dataDesc
 D datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::nameHolder
 D datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::dataDesc
 D datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::nameHolder
 D datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::dataDesc
 D datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::nameHolder
 D datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::dataDesc
 D datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::nameHolder
 D datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::dataDesc
 D datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::nameHolder
 D datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::dataDesc
 D datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::nameHolder
 D datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::dataDesc
 D datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::nameHolder
 D datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::dataDesc
 D datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::nameHolder
 D datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::dataDesc
 D datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::nameHolder
 D datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::dataDesc
 D datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::nameHolder
 D datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::dataDesc
 D datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::nameHolder
 D datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::dataDesc
 D datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::nameHolder
 D datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::dataDesc
 D datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::nameHolder
 D datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::dataDesc
 D datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::nameHolder
 D datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::dataDesc
 D datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::nameHolder
 D datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::dataDesc
 D datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::nameHolder
 D datamap_t* DataMapInit<CGameMoney>(CGameMoney*)::dataDesc
 D datamap_t* DataMapInit<CGameMoney>(CGameMoney*)::nameHolder
 D datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::dataDesc
 D datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::nameHolder
 D datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::dataDesc
 D datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::nameHolder
 D datamap_t* DataMapInit<CGameRoundEnd>(CGameRoundEnd*)::dataDesc
 D datamap_t* DataMapInit<CGameRoundEnd>(CGameRoundEnd*)::nameHolder
 D datamap_t* DataMapInit<CGameScore>(CGameScore*)::dataDesc
 D datamap_t* DataMapInit<CGameScore>(CGameScore*)::nameHolder
 D datamap_t* DataMapInit<CGameText>(CGameText*)::dataDesc
 D datamap_t* DataMapInit<CGameText>(CGameText*)::nameHolder
 D datamap_t* DataMapInit<CGameUI>(CGameUI*)::dataDesc
 D datamap_t* DataMapInit<CGameUI>(CGameUI*)::nameHolder
 D datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::dataDesc
 D datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::nameHolder
 D datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::dataDesc
 D datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::nameHolder
 D datamap_t* DataMapInit<CGib>(CGib*)::dataDesc
 D datamap_t* DataMapInit<CGib>(CGib*)::nameHolder
 D datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::dataDesc
 D datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::nameHolder
 D datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::dataDesc
 D datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::nameHolder
 D datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::dataDesc
 D datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::nameHolder
 D datamap_t* DataMapInit<CHEGrenade>(CHEGrenade*)::dataDesc
 D datamap_t* DataMapInit<CHEGrenade>(CHEGrenade*)::nameHolder
 D datamap_t* DataMapInit<CHEGrenadeProjectile>(CHEGrenadeProjectile*)::dataDesc
 D datamap_t* DataMapInit<CHEGrenadeProjectile>(CHEGrenadeProjectile*)::nameHolder
 D datamap_t* DataMapInit<CHostage>(CHostage*)::dataDesc
 D datamap_t* DataMapInit<CHostage>(CHostage*)::nameHolder
 D datamap_t* DataMapInit<CHostageCarriableProp>(CHostageCarriableProp*)::dataDesc
 D datamap_t* DataMapInit<CHostageCarriableProp>(CHostageCarriableProp*)::nameHolder
 D datamap_t* DataMapInit<CHostageRescueZone>(CHostageRescueZone*)::dataDesc
 D datamap_t* DataMapInit<CHostageRescueZone>(CHostageRescueZone*)::nameHolder
 D datamap_t* DataMapInit<CInferno>(CInferno*)::dataDesc
 D datamap_t* DataMapInit<CInferno>(CInferno*)::nameHolder
 D datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::dataDesc
 D datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::nameHolder
 D datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::dataDesc
 D datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::nameHolder
 D datamap_t* DataMapInit<CInfoInstructorHintBombTargetA>(CInfoInstructorHintBombTargetA*)::dataDesc
 D datamap_t* DataMapInit<CInfoInstructorHintBombTargetA>(CInfoInstructorHintBombTargetA*)::nameHolder
 D datamap_t* DataMapInit<CInfoInstructorHintBombTargetB>(CInfoInstructorHintBombTargetB*)::dataDesc
 D datamap_t* DataMapInit<CInfoInstructorHintBombTargetB>(CInfoInstructorHintBombTargetB*)::nameHolder
 D datamap_t* DataMapInit<CInfoInstructorHintHostageRescueZone>(CInfoInstructorHintHostageRescueZone*)::dataDesc
 D datamap_t* DataMapInit<CInfoInstructorHintHostageRescueZone>(CInfoInstructorHintHostageRescueZone*)::nameHolder
 D datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::dataDesc
 D datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::nameHolder
 D datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::dataDesc
 D datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::nameHolder
 D datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::dataDesc
 D datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::nameHolder
 D datamap_t* DataMapInit<CInfoViewParameters>(CInfoViewParameters*)::dataDesc
 D datamap_t* DataMapInit<CInfoViewParameters>(CInfoViewParameters*)::nameHolder
 D datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::dataDesc
 D datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::nameHolder
 D datamap_t* DataMapInit<CItem>(CItem*)::dataDesc
 D datamap_t* DataMapInit<CItem>(CItem*)::nameHolder
 D datamap_t* DataMapInit<CItemDefuser>(CItemDefuser*)::dataDesc
 D datamap_t* DataMapInit<CItemDefuser>(CItemDefuser*)::nameHolder
 D datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::dataDesc
 D datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::nameHolder
 D datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::dataDesc
 D datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::nameHolder
 D datamap_t* DataMapInit<CLight>(CLight*)::dataDesc
 D datamap_t* DataMapInit<CLight>(CLight*)::nameHolder
 D datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::dataDesc
 D datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::nameHolder
 D datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::dataDesc
 D datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::nameHolder
 D datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::dataDesc
 D datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::nameHolder
 D datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::dataDesc
 D datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::nameHolder
 D datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::dataDesc
 D datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::nameHolder
 D datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::dataDesc
 D datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::nameHolder
 D datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::dataDesc
 D datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::nameHolder
 D datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::dataDesc
 D datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::nameHolder
 D datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::dataDesc
 D datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::nameHolder
 D datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::dataDesc
 D datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::nameHolder
 D datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::dataDesc
 D datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::nameHolder
 D datamap_t* DataMapInit<CLogicEventListenerItemEquip>(CLogicEventListenerItemEquip*)::dataDesc
 D datamap_t* DataMapInit<CLogicEventListenerItemEquip>(CLogicEventListenerItemEquip*)::nameHolder
 D datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::dataDesc
 D datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::nameHolder
 D datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::dataDesc
 D datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::nameHolder
 D datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::dataDesc
 D datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::nameHolder
 D datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::dataDesc
 D datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::nameHolder
 D datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::dataDesc
 D datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::nameHolder
 D datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::dataDesc
 D datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::nameHolder
 D datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::dataDesc
 D datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::nameHolder
 D datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::dataDesc
 D datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::nameHolder
 D datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::dataDesc
 D datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::nameHolder
 D datamap_t* DataMapInit<CMapInfo>(CMapInfo*)::dataDesc
 D datamap_t* DataMapInit<CMapInfo>(CMapInfo*)::nameHolder
 D datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::dataDesc
 D datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::nameHolder
 D datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::dataDesc
 D datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::nameHolder
 D datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::dataDesc
 D datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::nameHolder
 D datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::dataDesc
 D datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::nameHolder
 D datamap_t* DataMapInit<CMessage>(CMessage*)::dataDesc
 D datamap_t* DataMapInit<CMessage>(CMessage*)::nameHolder
 D datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::dataDesc
 D datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::nameHolder
 D datamap_t* DataMapInit<CMolotovGrenade>(CMolotovGrenade*)::dataDesc
 D datamap_t* DataMapInit<CMolotovGrenade>(CMolotovGrenade*)::nameHolder
 D datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::dataDesc
 D datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::nameHolder
 D datamap_t* DataMapInit<CMotorController>(CMotorController*)::dataDesc
 D datamap_t* DataMapInit<CMotorController>(CMotorController*)::nameHolder
 D datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::dataDesc
 D datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::nameHolder
 D datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::dataDesc
 D datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::nameHolder
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::dataDesc
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::dataDesc
 D datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::nameHolder
 D datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::dataDesc
 D datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::nameHolder
 D datamap_t* DataMapInit<CNPC_HearDanger>(CNPC_HearDanger*)::dataDesc
 D datamap_t* DataMapInit<CNPC_HearDanger>(CNPC_HearDanger*)::nameHolder
 D datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::dataDesc
 D datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::nameHolder
 D datamap_t* DataMapInit<CNoDefuseArea>(CNoDefuseArea*)::dataDesc
 D datamap_t* DataMapInit<CNoDefuseArea>(CNoDefuseArea*)::nameHolder
 D datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::dataDesc
 D datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::nameHolder
 D datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::dataDesc
 D datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::nameHolder
 D datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::dataDesc
 D datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::nameHolder
 D datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::dataDesc
 D datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::nameHolder
 D datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::dataDesc
 D datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::nameHolder
 D datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::dataDesc
 D datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::nameHolder
 D datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::dataDesc
 D datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::nameHolder
 D datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::dataDesc
 D datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::nameHolder
 D datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::dataDesc
 D datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::nameHolder
 D datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::dataDesc
 D datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::nameHolder
 D datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::dataDesc
 D datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::nameHolder
 D datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::dataDesc
 D datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::nameHolder
 D datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::dataDesc
 D datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::nameHolder
 D datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::dataDesc
 D datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::nameHolder
 D datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::dataDesc
 D datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::nameHolder
 D datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::dataDesc
 D datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::nameHolder
 D datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::dataDesc
 D datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::nameHolder
 D datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::dataDesc
 D datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::nameHolder
 D datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::dataDesc
 D datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::nameHolder
 D datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::dataDesc
 D datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::nameHolder
 D datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::dataDesc
 D datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::nameHolder
 D datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::dataDesc
 D datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::nameHolder
 D datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::dataDesc
 D datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::nameHolder
 D datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::dataDesc
 D datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::nameHolder
 D datamap_t* DataMapInit<CPlantedC4>(CPlantedC4*)::dataDesc
 D datamap_t* DataMapInit<CPlantedC4>(CPlantedC4*)::nameHolder
 D datamap_t* DataMapInit<CPlantedC4Training>(CPlantedC4Training*)::dataDesc
 D datamap_t* DataMapInit<CPlantedC4Training>(CPlantedC4Training*)::nameHolder
 D datamap_t* DataMapInit<CPlasma>(CPlasma*)::dataDesc
 D datamap_t* DataMapInit<CPlasma>(CPlasma*)::nameHolder
 D datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::dataDesc
 D datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::nameHolder
 D datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::dataDesc
 D datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::nameHolder
 D datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::dataDesc
 D datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::nameHolder
 D datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::dataDesc
 D datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::nameHolder
 D datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::dataDesc
 D datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::nameHolder
 D datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::dataDesc
 D datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::nameHolder
 D datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::dataDesc
 D datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::nameHolder
 D datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::dataDesc
 D datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::nameHolder
 D datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::dataDesc
 D datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::nameHolder
 D datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::dataDesc
 D datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::nameHolder
 D datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::dataDesc
 D datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::nameHolder
 D datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::dataDesc
 D datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::nameHolder
 D datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::dataDesc
 D datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::nameHolder
 D datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::dataDesc
 D datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::nameHolder
 D datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPoseController>(CPoseController*)::dataDesc
 D datamap_t* DataMapInit<CPoseController>(CPoseController*)::nameHolder
 D datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::dataDesc
 D datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::nameHolder
 D datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::dataDesc
 D datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::nameHolder
 D datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::dataDesc
 D datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::nameHolder
 D datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::dataDesc
 D datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::nameHolder
 D datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::dataDesc
 D datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::nameHolder
 D datamap_t* DataMapInit<CPropDoorRotatingBreakable>(CPropDoorRotatingBreakable*)::dataDesc
 D datamap_t* DataMapInit<CPropDoorRotatingBreakable>(CPropDoorRotatingBreakable*)::nameHolder
 D datamap_t* DataMapInit<CPropJeep>(CPropJeep*)::dataDesc
 D datamap_t* DataMapInit<CPropJeep>(CPropJeep*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::nameHolder
 D datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::dataDesc
 D datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::nameHolder
 D datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::dataDesc
 D datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::nameHolder
 D datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::dataDesc
 D datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::nameHolder
 D datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::dataDesc
 D datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::nameHolder
 D datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::dataDesc
 D datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::nameHolder
 D datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::dataDesc
 D datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::nameHolder
 D datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::dataDesc
 D datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::nameHolder
 D datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::dataDesc
 D datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::nameHolder
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::dataDesc
 D datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::nameHolder
 D datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::dataDesc
 D datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::nameHolder
 D datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::dataDesc
 D datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::nameHolder
 D datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::dataDesc
 D datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::nameHolder
 D datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::dataDesc
 D datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::nameHolder
 D datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::dataDesc
 D datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::nameHolder
 D datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::dataDesc
 D datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::nameHolder
 D datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::dataDesc
 D datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::nameHolder
 D datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::dataDesc
 D datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::nameHolder
 D datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::dataDesc
 D datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::nameHolder
 D datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::dataDesc
 D datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::nameHolder
 D datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::dataDesc
 D datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::nameHolder
 D datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::dataDesc
 D datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::nameHolder
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::dataDesc
 D datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::nameHolder
 D datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::dataDesc
 D datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::nameHolder
 D datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::dataDesc
 D datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::nameHolder
 D datamap_t* DataMapInit<CSmokeGrenade>(CSmokeGrenade*)::dataDesc
 D datamap_t* DataMapInit<CSmokeGrenade>(CSmokeGrenade*)::nameHolder
 D datamap_t* DataMapInit<CSmokeGrenadeProjectile>(CSmokeGrenadeProjectile*)::dataDesc
 D datamap_t* DataMapInit<CSmokeGrenadeProjectile>(CSmokeGrenadeProjectile*)::nameHolder
 D datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::dataDesc
 D datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::nameHolder
 D datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::dataDesc
 D datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::nameHolder
 D datamap_t* DataMapInit<CSound>(CSound*)::dataDesc
 D datamap_t* DataMapInit<CSound>(CSound*)::nameHolder
 D datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::dataDesc
 D datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::nameHolder
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::dataDesc
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::dataDesc
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::dataDesc
 D datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::nameHolder
 D datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::dataDesc
 D datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::nameHolder
 D datamap_t* DataMapInit<CSprite>(CSprite*)::dataDesc
 D datamap_t* DataMapInit<CSprite>(CSprite*)::nameHolder
 D datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::dataDesc
 D datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::nameHolder
 D datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::dataDesc
 D datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::nameHolder
 D datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::dataDesc
 D datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::nameHolder
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::dataDesc
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::dataDesc
 D datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::nameHolder
 D datamap_t* DataMapInit<CSun>(CSun*)::dataDesc
 D datamap_t* DataMapInit<CSun>(CSun*)::nameHolder
 D datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::dataDesc
 D datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::nameHolder
 D datamap_t* DataMapInit<CSurroundTest>(CSurroundTest*)::dataDesc
 D datamap_t* DataMapInit<CSurroundTest>(CSurroundTest*)::nameHolder
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::dataDesc
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::dataDesc
 D datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::nameHolder
 D datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::dataDesc
 D datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::nameHolder
 D datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::dataDesc
 D datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::nameHolder
 D datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::dataDesc
 D datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::nameHolder
 D datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::dataDesc
 D datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::nameHolder
 D datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::dataDesc
 D datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::nameHolder
 D datamap_t* DataMapInit<CTeamplayRoundBasedRulesProxy>(CTeamplayRoundBasedRulesProxy*)::dataDesc
 D datamap_t* DataMapInit<CTeamplayRoundBasedRulesProxy>(CTeamplayRoundBasedRulesProxy*)::nameHolder
 D datamap_t* DataMapInit<CTesla>(CTesla*)::dataDesc
 D datamap_t* DataMapInit<CTesla>(CTesla*)::nameHolder
 D datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::dataDesc
 D datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::nameHolder
 D datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::dataDesc
 D datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::nameHolder
 D datamap_t* DataMapInit<CThrustController>(CThrustController*)::dataDesc
 D datamap_t* DataMapInit<CThrustController>(CThrustController*)::nameHolder
 D datamap_t* DataMapInit<CTimeline>(CTimeline*)::dataDesc
 D datamap_t* DataMapInit<CTimeline>(CTimeline*)::nameHolder
 D datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::dataDesc
 D datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::nameHolder
 D datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::dataDesc
 D datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::nameHolder
 D datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::dataDesc
 D datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::nameHolder
 D datamap_t* DataMapInit<CTriggerBombReset>(CTriggerBombReset*)::dataDesc
 D datamap_t* DataMapInit<CTriggerBombReset>(CTriggerBombReset*)::nameHolder
 D datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::dataDesc
 D datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::nameHolder
 D datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::dataDesc
 D datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::nameHolder
 D datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::dataDesc
 D datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::nameHolder
 D datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::dataDesc
 D datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::nameHolder
 D datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::dataDesc
 D datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::nameHolder
 D datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::dataDesc
 D datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::nameHolder
 D datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::dataDesc
 D datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::nameHolder
 D datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::dataDesc
 D datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::nameHolder
 D datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::dataDesc
 D datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::nameHolder
 D datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::dataDesc
 D datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::nameHolder
 D datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::dataDesc
 D datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::nameHolder
 D datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::dataDesc
 D datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::nameHolder
 D datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::dataDesc
 D datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::nameHolder
 D datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::dataDesc
 D datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::nameHolder
 D datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::dataDesc
 D datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::nameHolder
 D datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::dataDesc
 D datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::nameHolder
 D datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::dataDesc
 D datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::nameHolder
 D datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::dataDesc
 D datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::nameHolder
 D datamap_t* DataMapInit<CVoteController>(CVoteController*)::dataDesc
 D datamap_t* DataMapInit<CVoteController>(CVoteController*)::nameHolder
 D datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::dataDesc
 D datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::nameHolder
 D datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::dataDesc
 D datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::nameHolder
 D datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::dataDesc
 D datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::nameHolder
 D datamap_t* DataMapInit<CWeaponCSBase>(CWeaponCSBase*)::dataDesc
 D datamap_t* DataMapInit<CWeaponCSBase>(CWeaponCSBase*)::nameHolder
 D datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::dataDesc
 D datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::nameHolder
 D datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::dataDesc
 D datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::nameHolder
 D datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::dataDesc
 D datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::nameHolder
 D datamap_t* DataMapInit<CWorld>(CWorld*)::dataDesc
 D datamap_t* DataMapInit<CWorld>(CWorld*)::nameHolder
 D datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::dataDesc
 D datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::nameHolder
 D datamap_t* DataMapInit<CWreckage>(CWreckage*)::dataDesc
 D datamap_t* DataMapInit<CWreckage>(CWreckage*)::nameHolder
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::dataDesc
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::dataDesc
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::dataDesc
 D datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::nameHolder
 D datamap_t* DataMapInit<DustTrail>(DustTrail*)::dataDesc
 D datamap_t* DataMapInit<DustTrail>(DustTrail*)::nameHolder
 D datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::dataDesc
 D datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::nameHolder
 D datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::dataDesc
 D datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::nameHolder
 D datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::dataDesc
 D datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::nameHolder
 D datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::dataDesc
 D datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::nameHolder
 D datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::dataDesc
 D datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::nameHolder
 D datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::dataDesc
 D datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::nameHolder
 D datamap_t* DataMapInit<JeepWaterData_t>(JeepWaterData_t*)::dataDesc
 D datamap_t* DataMapInit<JeepWaterData_t>(JeepWaterData_t*)::nameHolder
 D datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::dataDesc
 D datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::nameHolder
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::dataDesc
 D datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::nameHolder
 D datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::dataDesc
 D datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::nameHolder
 D datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::dataDesc
 D datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::nameHolder
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::dataDesc
 D datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::nameHolder
 D datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::dataDesc
 D datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::nameHolder
 D datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::dataDesc
 D datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::nameHolder
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::dataDesc
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D datamap_t* DataMapInit<SpawnPoint>(SpawnPoint*)::dataDesc
 D datamap_t* DataMapInit<SpawnPoint>(SpawnPoint*)::nameHolder
 D datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::dataDesc
 D datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::nameHolder
 D datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::dataDesc
 D datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::nameHolder
 D datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::dataDesc
 D datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::nameHolder
 D datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::dataDesc
 D datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::nameHolder
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::dataDesc
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::dataDesc
 D datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::nameHolder
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::dataDesc
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::dataDesc
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::dataDesc
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::dataDesc
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::dataDesc
 D datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::nameHolder
 D datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::dataDesc
 D datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::nameHolder
 D datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::dataDesc
 D datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::nameHolder
 D datamap_t* DataMapInit<locksound_t>(locksound_t*)::dataDesc
 D datamap_t* DataMapInit<locksound_t>(locksound_t*)::nameHolder
 D datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::dataDesc
 D datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::nameHolder
 D datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::dataDesc
 D datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::nameHolder
 D datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::dataDesc
 D datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::nameHolder
 D datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::dataDesc
 D datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::nameHolder
 D datamap_t* DataMapInit<template_t>(template_t*)::dataDesc
 D datamap_t* DataMapInit<template_t>(template_t*)::nameHolder
 D datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::dataDesc
 D datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::nameHolder
 D datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::dataDesc
 D datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::nameHolder
 D datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::dataDesc
 D datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::nameHolder
 D datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::dataDesc
 D datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::nameHolder
 D decalsystem
 D entitytable_t::m_DataMap
 D eventFuncs
 D flexsetting_t::m_DataMap
 D flexsettinghdr_t::m_DataMap
 D flexweight_t::m_DataMap
 D fogparams_t::m_DataMap
 D fogplayerparams_t::m_DataMap
 D gDecoyWeaponProfiles
 D gDefaultNPCImpactDamageTable
 D gDefaultPlayerImpactDamageTable
 D gDefaultPlayerVehicleImpactDamageTable
 D gGlassImpactDamageTable
 D gInitHUD
 D g_AI_Formations
 D g_AI_SaveRestoreBlockHandler
 D g_AssetModifiers
 D g_AttributeDescriptionFormats
 D g_BaseEntityScriptInstanceHelper
 D g_Capabilities
 D g_ChoreoStringPool
 D g_ClassUsabilityStrings
 D g_ConceptCategoryInfos
 D g_ConceptHistoriesSaveDataOps
 D g_DebugConnectNode1
 D g_DebugConnectNode2
 D g_EffectTypes
 D g_EntitySpotting
 D g_EquipmentInfo
 D g_EventsSaveDataOps
 D g_ItemFlags
 D g_PhysDefaultObjectParams
 D g_PhysGameTrace
 D g_ResponseRulesEngineWrapper
 D g_ServerGameClients
 D g_SolidSetup
 D g_StandardSendProxies
 D g_StandoffParamsByAgression
 D g_ThinkContextsSaveDataOps
 D g_VariantSaveDataOps
 D g_WearableAnimTypeStrings
 D g_autoBuyInfo
 D g_bClientFlex
 D g_bIsLogging
 D g_bMovementOptimizations
 D g_bTestMoveTypeStepSimulation
 D g_flFractionScale
 D g_flThrowGrenadeFraction
 D g_iSoundsToStopOnExit
 D g_nActivityListVersion
 D g_nEventListVersion
 D g_nParticle_Multiplier
 D g_pConstraintEvents
 D g_pEffects
 D g_pEntityList
 D g_pGameMovement
 D g_pGameSaveRestoreBlockSet
 D g_pGameTypes
 D g_pMoveData
 D g_pNotify
 D g_pParticleSystemMgr
 D g_pParticleSystemQuery
 D g_pPhysSaveRestoreManager
 D g_pPrecacheHandler
 D g_pPrecacheRegister
 D g_pPushedEntities
 D g_pResponseSystem
 D g_pServerBenchmark
 D g_pToolFrameworkServer
 D g_pVoiceGameMgrHelper
 D g_ppszGoalTypes
 D g_ppszTaskFailureText
 D g_pszHintDescriptions
 D g_pszMPConcepts
 D g_pszSCHED_ALERT_FACE
 D g_pszSCHED_ALERT_FACE_BESTSOUND
 D g_pszSCHED_ALERT_REACT_TO_COMBAT_SOUND
 D g_pszSCHED_ALERT_SCAN
 D g_pszSCHED_ALERT_STAND
 D g_pszSCHED_ALERT_WALK
 D g_pszSCHED_AMBUSH
 D g_pszSCHED_ARM_WEAPON
 D g_pszSCHED_BACK_AWAY_FROM_ENEMY
 D g_pszSCHED_BACK_AWAY_FROM_SAVE_POSITION
 D g_pszSCHED_BIG_FLINCH
 D g_pszSCHED_CHASE_ENEMY
 D g_pszSCHED_CHASE_ENEMY_FAILED
 D g_pszSCHED_COMBAT_FACE
 D g_pszSCHED_COMBAT_PATROL
 D g_pszSCHED_COMBAT_STAND
 D g_pszSCHED_COMBAT_SWEEP
 D g_pszSCHED_COMBAT_WALK
 D g_pszSCHED_COWER
 D g_pszSCHED_DIE
 D g_pszSCHED_DIE_RAGDOLL
 D g_pszSCHED_DISARM_WEAPON
 D g_pszSCHED_DROPSHIP_DUSTOFF
 D g_pszSCHED_DUCK_DODGE
 D g_pszSCHED_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_ESTABLISH_LINE_OF_FIRE_FALLBACK
 D g_pszSCHED_FAIL
 D g_pszSCHED_FAIL_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_FAIL_NOSTOP
 D g_pszSCHED_FAIL_TAKE_COVER
 D g_pszSCHED_FALL_TO_GROUND
 D g_pszSCHED_FEAR_FACE
 D g_pszSCHED_FLEE_FROM_BEST_SOUND
 D g_pszSCHED_FLINCH_PHYSICS
 D g_pszSCHED_FORCED_GO
 D g_pszSCHED_FORCED_GO_RUN
 D g_pszSCHED_GET_HEALTHKIT
 D g_pszSCHED_HIDE_AND_RELOAD
 D g_pszSCHED_IDLE_STAND
 D g_pszSCHED_IDLE_WALK
 D g_pszSCHED_IDLE_WANDER
 D g_pszSCHED_INTERACTION_MOVE_TO_PARTNER
 D g_pszSCHED_INTERACTION_WAIT_FOR_PARTNER
 D g_pszSCHED_INVESTIGATE_SOUND
 D g_pszSCHED_MELEE_ATTACK1
 D g_pszSCHED_MELEE_ATTACK2
 D g_pszSCHED_MOVE_AWAY
 D g_pszSCHED_MOVE_AWAY_END
 D g_pszSCHED_MOVE_AWAY_FAIL
 D g_pszSCHED_MOVE_AWAY_FROM_ENEMY
 D g_pszSCHED_MOVE_OFF_OF_NPC
 D g_pszSCHED_MOVE_TO_WEAPON_RANGE
 D g_pszSCHED_NEW_WEAPON
 D g_pszSCHED_NEW_WEAPON_CHEAT
 D g_pszSCHED_NPC_FREEZE
 D g_pszSCHED_PATROL_RUN
 D g_pszSCHED_PATROL_WALK
 D g_pszSCHED_PRE_FAIL_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_RANGE_ATTACK1
 D g_pszSCHED_RANGE_ATTACK2
 D g_pszSCHED_RELOAD
 D g_pszSCHED_RUN_FROM_ENEMY
 D g_pszSCHED_RUN_FROM_ENEMY_FALLBACK
 D g_pszSCHED_RUN_FROM_ENEMY_MOB
 D g_pszSCHED_RUN_RANDOM
 D g_pszSCHED_SCENE_GENERIC
 D g_pszSCHED_SCRIPTED_CUSTOM_MOVE
 D g_pszSCHED_SCRIPTED_FACE
 D g_pszSCHED_SCRIPTED_RUN
 D g_pszSCHED_SCRIPTED_WAIT
 D g_pszSCHED_SCRIPTED_WALK
 D g_pszSCHED_SHOOT_ENEMY_COVER
 D g_pszSCHED_SLEEP
 D g_pszSCHED_SMALL_FLINCH
 D g_pszSCHED_SPECIAL_ATTACK1
 D g_pszSCHED_SPECIAL_ATTACK2
 D g_pszSCHED_STANDOFF
 D g_pszSCHED_SWITCH_TO_PENDING_WEAPON
 D g_pszSCHED_TAKE_COVER_FROM_BEST_SOUND
 D g_pszSCHED_TAKE_COVER_FROM_ENEMY
 D g_pszSCHED_TAKE_COVER_FROM_ORIGIN
 D g_pszSCHED_TARGET_CHASE
 D g_pszSCHED_TARGET_FACE
 D g_pszSCHED_VICTORY_DANCE
 D g_pszSCHED_WAIT_FOR_SCRIPT
 D g_pszSCHED_WAIT_FOR_SPEAK_FINISH
 D g_pszSCHED_WAKE_ANGRY
 D g_szAuthKeyFilename
 D g_szCollectionCacheFileName
 D g_szDropTypeStrings
 D g_szLoadoutStrings
 D g_szLoadoutStringsForDisplay
 D g_szLoadoutStringsSubPositions
 D g_szParticleAttachToEnt
 D g_szParticleAttachTypes
 D g_szRecipeCategoryStrings
 D g_szSubscribedCollectionsList
 D g_szSubscribedFilesList
 D g_szWorkshopMapBasePath
 D gamestats
 D globalentity_t::m_DataMap
 D guard variable for AllocTempVector()::s_nIndex
 D guard variable for AllocTempVector()::s_vecTemp
 D guard variable for CBaseEntity::ScriptEyePosition()::vec
 D guard variable for CBaseEntity::ScriptGetAngles()::vec
 D guard variable for CBaseEntity::ScriptGetForward()::vecForward
 D guard variable for CBaseEntity::ScriptGetLeft()::vecLeft
 D guard variable for CBaseEntity::ScriptGetUp()::vecUp
 D guard variable for CBuildModeNavCombo::GetKBMap()::s_pMap
 D guard variable for CBuildModeNavCombo::GetMessageMap()::s_pMap
 D guard variable for CCSBotManager::GetDifficultyLevel()::sv_mmqueue_reservation
 D guard variable for CCommentarySystem::InitCommentary()::commentarySpawnedSemaphoreName
 D guard variable for CCommentarySystem::InitCommentary()::infoTargetStr
 D guard variable for CDragDropHelperPanel::GetKBMap()::s_pMap
 D guard variable for CDragDropHelperPanel::GetMessageMap()::s_pMap
 D guard variable for CNetMessagePB<100, CNETMsg_PlayerAvatarData, 14, true>::s_typeName
 D guard variable for CNetMessagePB<4, CNETMsg_Tick, 0, true>::s_typeName
 D guard variable for CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::s_typeName
 D guard variable for CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::s_typeName
 D guard variable for CNetMessagePB<7, CNETMsg_SignonState, 13, true>::s_typeName
 D guard variable for CSmallTextEntry::GetKBMap()::s_pMap
 D guard variable for CSmallTextEntry::GetMessageMap()::s_pMap
 D guard variable for CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)::s_MissingHashes
 D guard variable for CSoundEmitterSystem::PrecacheScriptSound(char const*)::s_PrecacheScriptSoundFailures
 D guard variable for CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D guard variable for CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D guard variable for CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D guard variable for ISaveRestoreOps* CUtlMapDataopsInstantiator<2, 10>::GetDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)> >(CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CAI_InterestTarget>(CAI_InterestTarget*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> > >(CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> > >(CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> > >(CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> > >(CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> > >(CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> > >(CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> > >(CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> > >(CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> > >(CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> > >(CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> > >(CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> > >(CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> > >(CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> > >(CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> > >(CUtlVector<template_t, CUtlMemory<template_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> > >(CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> > >(CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> > >(CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<12>::GetDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> > >(CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> > >(CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> > >(CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > >(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> > >(CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> > >(CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> > >(CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> > >(CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D guard variable for ISaveRestoreOps* GetBitstringDataOps<CBitVec<32> >(CBitVec<32>*)::ops
 D guard variable for ScriptVariant_t::operator Vector const&() const::vecNull
 D guard variable for bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::searchMarker
 D guard variable for datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAISound>(CAISound*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCSGrenade>(CBaseCSGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCSGrenadeProjectile>(CBaseCSGrenadeProjectile*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseCSGrenadeProjectile>(CBaseCSGrenadeProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseTeamObjectiveResource>(CBaseTeamObjectiveResource*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseTeamObjectiveResource>(CBaseTeamObjectiveResource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBeam>(CBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBlood>(CBlood*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBombTarget>(CBombTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBombTarget>(CBombTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakable>(CBreakable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakable>(CBreakable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBubbling>(CBubbling*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBubbling>(CBubbling*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBuyZone>(CBuyZone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBuyZone>(CBuyZone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCSBot>(CCSBot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCSPlayer>(CCSPlayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCSPlayer>(CCSPlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCSPlayerResource>(CCSPlayerResource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCascadeLight>(CCascadeLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CChicken>(CChicken*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CChicken>(CChicken*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCredits>(CCredits*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCredits>(CCredits*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCycler>(CCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDecal>(CDecal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDecal>(CDecal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDecoyGrenade>(CDecoyGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDecoyProjectile>(CDecoyProjectile*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDecoyProjectile>(CDecoyProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEmbers>(CEmbers*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEmbers>(CEmbers*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEventAction>(CEventAction*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterName>(CFilterName*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFire>(CFire*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFire>(CFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFish>(CFish*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFishPool>(CFishPool*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFishPool>(CFishPool*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlashbang>(CFlashbang*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlashbangProjectile>(CFlashbangProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogController>(CFogController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFogController>(CFogController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFootstepControl>(CFootstepControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameMoney>(CGameMoney*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameRoundEnd>(CGameRoundEnd*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGameRoundEnd>(CGameRoundEnd*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameScore>(CGameScore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameText>(CGameText*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameUI>(CGameUI*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGameUI>(CGameUI*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGib>(CGib*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGib>(CGib*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHEGrenade>(CHEGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHEGrenadeProjectile>(CHEGrenadeProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHostage>(CHostage*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHostage>(CHostage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHostageCarriableProp>(CHostageCarriableProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHostageRescueZone>(CHostageRescueZone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHostageRescueZone>(CHostageRescueZone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInferno>(CInferno*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CInferno>(CInferno*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoInstructorHintBombTargetA>(CInfoInstructorHintBombTargetA*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoInstructorHintBombTargetB>(CInfoInstructorHintBombTargetB*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoInstructorHintHostageRescueZone>(CInfoInstructorHintHostageRescueZone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoViewParameters>(CInfoViewParameters*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItem>(CItem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItem>(CItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItemDefuser>(CItemDefuser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItemDefuser>(CItemDefuser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLight>(CLight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLight>(CLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicEventListenerItemEquip>(CLogicEventListenerItemEquip*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicEventListenerItemEquip>(CLogicEventListenerItemEquip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMapInfo>(CMapInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMessage>(CMessage*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMessage>(CMessage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMolotovGrenade>(CMolotovGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMotorController>(CMotorController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_HearDanger>(CNPC_HearDanger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNoDefuseArea>(CNoDefuseArea*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNoDefuseArea>(CNoDefuseArea*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::dataDesc
 D guard variable for datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlantedC4>(CPlantedC4*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPlantedC4>(CPlantedC4*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlantedC4Training>(CPlantedC4Training*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPlantedC4Training>(CPlantedC4Training*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlasma>(CPlasma*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPoseController>(CPoseController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPoseController>(CPoseController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropDoorRotatingBreakable>(CPropDoorRotatingBreakable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropJeep>(CPropJeep*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropJeep>(CPropJeep*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeGrenade>(CSmokeGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeGrenadeProjectile>(CSmokeGrenadeProjectile*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSmokeGrenadeProjectile>(CSmokeGrenadeProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSound>(CSound*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSprite>(CSprite*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSprite>(CSprite*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSun>(CSun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSurroundTest>(CSurroundTest*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSurroundTest>(CSurroundTest*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTeamplayRoundBasedRulesProxy>(CTeamplayRoundBasedRulesProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTesla>(CTesla*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTesla>(CTesla*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CThrustController>(CThrustController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTimeline>(CTimeline*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerBombReset>(CTriggerBombReset*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CVoteController>(CVoteController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CVoteController>(CVoteController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponCSBase>(CWeaponCSBase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeaponCSBase>(CWeaponCSBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWorld>(CWorld*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWreckage>(CWreckage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<DustTrail>(DustTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::nameHolder
 D guard variable for datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<JeepWaterData_t>(JeepWaterData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::nameHolder
 D guard variable for datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SpawnPoint>(SpawnPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<locksound_t>(locksound_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<template_t>(template_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::nameHolder
 D guard variable for int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BCCNonLocalPlayerExclusive::ignored>(DT_BCCNonLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseAttributableItem::ignored>(DT_BaseAttributableItem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCSGrenade::ignored>(DT_BaseCSGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCSGrenadeProjectile::ignored>(DT_BaseCSGrenadeProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CChicken::ignored>(DT_CChicken::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CHostage::ignored>(DT_CHostage::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSGameRules::ignored>(DT_CSGameRules::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSGameRulesProxy::ignored>(DT_CSGameRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSLocalPlayerExclusive::ignored>(DT_CSLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSNonLocalPlayerExclusive::ignored>(DT_CSNonLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSPlayer::ignored>(DT_CSPlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSPlayerResource::ignored>(DT_CSPlayerResource::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSRagdoll::ignored>(DT_CSRagdoll::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CSTeam::ignored>(DT_CSTeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CascadeLight::ignored>(DT_CascadeLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DecoyGrenade::ignored>(DT_DecoyGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DecoyProjectile::ignored>(DT_DecoyProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EconEntity::ignored>(DT_EconEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FireCrackerBlast::ignored>(DT_FireCrackerBlast::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Flashbang::ignored>(DT_Flashbang::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FootstepControl::ignored>(DT_FootstepControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HEGrenade::ignored>(DT_HEGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HostageCarriableProp::ignored>(DT_HostageCarriableProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_IncendiaryGrenade::ignored>(DT_IncendiaryGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Inferno::ignored>(DT_Inferno::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MolotovGrenade::ignored>(DT_MolotovGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MolotovProjectile::ignored>(DT_MolotovProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PlantedC4::ignored>(DT_PlantedC4::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeGrenade::ignored>(DT_SmokeGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeGrenadeProjectile::ignored>(DT_SmokeGrenadeProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFireBullets::ignored>(DT_TEFireBullets::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPlantBomb::ignored>(DT_TEPlantBomb::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TERadioIcon::ignored>(DT_TERadioIcon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponAK47::ignored>(DT_WeaponAK47::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponAWP::ignored>(DT_WeaponAWP::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponAug::ignored>(DT_WeaponAug::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponBizon::ignored>(DT_WeaponBizon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponC4::ignored>(DT_WeaponC4::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponCSBase::ignored>(DT_WeaponCSBase::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponCSBaseGun::ignored>(DT_WeaponCSBaseGun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponDEagle::ignored>(DT_WeaponDEagle::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponElite::ignored>(DT_WeaponElite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponFamas::ignored>(DT_WeaponFamas::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponFiveSeven::ignored>(DT_WeaponFiveSeven::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponG3SG1::ignored>(DT_WeaponG3SG1::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponGalil::ignored>(DT_WeaponGalil::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponGalilAR::ignored>(DT_WeaponGalilAR::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponGlock::ignored>(DT_WeaponGlock::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponHKP2000::ignored>(DT_WeaponHKP2000::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponKnife::ignored>(DT_WeaponKnife::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponKnifeGG::ignored>(DT_WeaponKnifeGG::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponM249::ignored>(DT_WeaponM249::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponM3::ignored>(DT_WeaponM3::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponM4A1::ignored>(DT_WeaponM4A1::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponMAC10::ignored>(DT_WeaponMAC10::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponMP5Navy::ignored>(DT_WeaponMP5Navy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponMP7::ignored>(DT_WeaponMP7::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponMP9::ignored>(DT_WeaponMP9::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponMag7::ignored>(DT_WeaponMag7::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponNOVA::ignored>(DT_WeaponNOVA::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponNegev::ignored>(DT_WeaponNegev::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponP228::ignored>(DT_WeaponP228::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponP250::ignored>(DT_WeaponP250::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponP90::ignored>(DT_WeaponP90::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSCAR17::ignored>(DT_WeaponSCAR17::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSCAR20::ignored>(DT_WeaponSCAR20::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSG550::ignored>(DT_WeaponSG550::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSG552::ignored>(DT_WeaponSG552::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSG556::ignored>(DT_WeaponSG556::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSSG08::ignored>(DT_WeaponSSG08::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponSawedoff::ignored>(DT_WeaponSawedoff::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponScout::ignored>(DT_WeaponScout::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponTMP::ignored>(DT_WeaponTMP::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponTaser::ignored>(DT_WeaponTaser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponTec9::ignored>(DT_WeaponTec9::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponUMP45::ignored>(DT_WeaponUMP45::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponUSP::ignored>(DT_WeaponUSP::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponXM1014::ignored>(DT_WeaponXM1014::ignored*)::g_SendProps
 D guard variable for unsigned int GetAttributeTypeUniqueIdentifier<CAttribute_String>()::s_unUniqueCounter
 D guard variable for unsigned int GetAttributeTypeUniqueIdentifier<Vector>()::s_unUniqueCounter
 D guard variable for unsigned int GetAttributeTypeUniqueIdentifier<float>()::s_unUniqueCounter
 D guard variable for unsigned int GetAttributeTypeUniqueIdentifier<unsigned int>()::s_unUniqueCounter
 D guard variable for variant_t::Entity() const::hNull
 D guard variable for vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::AnimationController::GetKBMap()::s_pMap
 D guard variable for vgui::AnimationController::GetMessageMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetKBMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Button::GetKBMap()::s_pMap
 D guard variable for vgui::Button::GetMessageMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D guard variable for vgui::CheckButton::GetKBMap()::s_pMap
 D guard variable for vgui::CheckButton::GetMessageMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ComboBox::GetKBMap()::s_pMap
 D guard variable for vgui::ComboBox::GetMessageMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D guard variable for vgui::Divider::GetKBMap()::s_pMap
 D guard variable for vgui::Divider::GetMessageMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetKBMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetKBMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetMessageMap()::s_pMap
 D guard variable for vgui::Frame::GetKBMap()::s_pMap
 D guard variable for vgui::Frame::GetMessageMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetKBMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetKBMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Label::GetKBMap()::s_pMap
 D guard variable for vgui::Label::GetMessageMap()::s_pMap
 D guard variable for vgui::ListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Menu::GetKBMap()::s_pMap
 D guard variable for vgui::Menu::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuBar::GetKBMap()::s_pMap
 D guard variable for vgui::MenuBar::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuButton::GetKBMap()::s_pMap
 D guard variable for vgui::MenuButton::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuItem::GetKBMap()::s_pMap
 D guard variable for vgui::MenuItem::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetKBMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetMessageMap()::s_pMap
 D guard variable for vgui::MessageBox::GetKBMap()::s_pMap
 D guard variable for vgui::MessageBox::GetMessageMap()::s_pMap
 D guard variable for vgui::Panel::GetKBMap()::s_pMap
 D guard variable for vgui::Panel::GetMessageMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::RadioButton::GetKBMap()::s_pMap
 D guard variable for vgui::RadioButton::GetMessageMap()::s_pMap
 D guard variable for vgui::RichText::GetKBMap()::s_pMap
 D guard variable for vgui::RichText::GetMessageMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetKBMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetMessageMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D guard variable for vgui::TextEntry::GetKBMap()::s_pMap
 D guard variable for vgui::TextEntry::GetMessageMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetKBMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNode::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNode::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeView::GetKBMap()::s_pMap
 D guard variable for vgui::TreeView::GetMessageMap()::s_pMap
 D guard variable for vgui::URLLabel::GetKBMap()::s_pMap
 D guard variable for vgui::URLLabel::GetMessageMap()::s_pMap
 D hull
 D int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_SendProps
 D int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_SendProps
 D int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BCCNonLocalPlayerExclusive::ignored>(DT_BCCNonLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_BCCNonLocalPlayerExclusive::ignored>(DT_BCCNonLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseAttributableItem::ignored>(DT_BaseAttributableItem::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseAttributableItem::ignored>(DT_BaseAttributableItem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCSGrenade::ignored>(DT_BaseCSGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCSGrenade::ignored>(DT_BaseCSGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCSGrenadeProjectile::ignored>(DT_BaseCSGrenadeProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCSGrenadeProjectile::ignored>(DT_BaseCSGrenadeProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_SendProps
 D int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_SendProps
 D int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_SendProps
 D int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_SendProps
 D int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_SendProps
 D int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CChicken::ignored>(DT_CChicken::ignored*)::g_SendProps
 D int ServerClassInit<DT_CChicken::ignored>(DT_CChicken::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_SendProps
 D int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CHostage::ignored>(DT_CHostage::ignored*)::g_SendProps
 D int ServerClassInit<DT_CHostage::ignored>(DT_CHostage::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSGameRules::ignored>(DT_CSGameRules::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSGameRules::ignored>(DT_CSGameRules::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSGameRulesProxy::ignored>(DT_CSGameRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSGameRulesProxy::ignored>(DT_CSGameRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSLocalPlayerExclusive::ignored>(DT_CSLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSLocalPlayerExclusive::ignored>(DT_CSLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSNonLocalPlayerExclusive::ignored>(DT_CSNonLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSNonLocalPlayerExclusive::ignored>(DT_CSNonLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSPlayer::ignored>(DT_CSPlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSPlayer::ignored>(DT_CSPlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSPlayerResource::ignored>(DT_CSPlayerResource::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSPlayerResource::ignored>(DT_CSPlayerResource::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSRagdoll::ignored>(DT_CSRagdoll::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSRagdoll::ignored>(DT_CSRagdoll::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CSTeam::ignored>(DT_CSTeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_CSTeam::ignored>(DT_CSTeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CascadeLight::ignored>(DT_CascadeLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_CascadeLight::ignored>(DT_CascadeLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_SendProps
 D int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_SendProps
 D int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_SendProps
 D int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_SendProps
 D int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DecoyGrenade::ignored>(DT_DecoyGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_DecoyGrenade::ignored>(DT_DecoyGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DecoyProjectile::ignored>(DT_DecoyProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_DecoyProjectile::ignored>(DT_DecoyProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_SendProps
 D int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EconEntity::ignored>(DT_EconEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_EconEntity::ignored>(DT_EconEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_SendProps
 D int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_SendProps
 D int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FireCrackerBlast::ignored>(DT_FireCrackerBlast::ignored*)::g_SendProps
 D int ServerClassInit<DT_FireCrackerBlast::ignored>(DT_FireCrackerBlast::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_SendProps
 D int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Flashbang::ignored>(DT_Flashbang::ignored*)::g_SendProps
 D int ServerClassInit<DT_Flashbang::ignored>(DT_Flashbang::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_SendProps
 D int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FootstepControl::ignored>(DT_FootstepControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_FootstepControl::ignored>(DT_FootstepControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_SendProps
 D int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_SendProps
 D int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HEGrenade::ignored>(DT_HEGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_HEGrenade::ignored>(DT_HEGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_SendProps
 D int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HostageCarriableProp::ignored>(DT_HostageCarriableProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_HostageCarriableProp::ignored>(DT_HostageCarriableProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_IncendiaryGrenade::ignored>(DT_IncendiaryGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_IncendiaryGrenade::ignored>(DT_IncendiaryGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Inferno::ignored>(DT_Inferno::ignored*)::g_SendProps
 D int ServerClassInit<DT_Inferno::ignored>(DT_Inferno::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_SendProps
 D int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_SendProps
 D int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_SendProps
 D int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MolotovGrenade::ignored>(DT_MolotovGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_MolotovGrenade::ignored>(DT_MolotovGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MolotovProjectile::ignored>(DT_MolotovProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_MolotovProjectile::ignored>(DT_MolotovProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_SendProps
 D int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PlantedC4::ignored>(DT_PlantedC4::ignored*)::g_SendProps
 D int ServerClassInit<DT_PlantedC4::ignored>(DT_PlantedC4::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_SendProps
 D int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_SendProps
 D int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_SendProps
 D int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_SendProps
 D int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_SendProps
 D int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_SendProps
 D int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_SendProps
 D int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_SendProps
 D int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_SendProps
 D int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_SendProps
 D int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_SendProps
 D int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_SendProps
 D int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_SendProps
 D int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_SendProps
 D int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_SendProps
 D int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_SendProps
 D int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_SendProps
 D int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeGrenade::ignored>(DT_SmokeGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeGrenade::ignored>(DT_SmokeGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeGrenadeProjectile::ignored>(DT_SmokeGrenadeProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeGrenadeProjectile::ignored>(DT_SmokeGrenadeProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_SendProps
 D int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_SendProps
 D int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFireBullets::ignored>(DT_TEFireBullets::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFireBullets::ignored>(DT_TEFireBullets::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_SendProps
 D int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPlantBomb::ignored>(DT_TEPlantBomb::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPlantBomb::ignored>(DT_TEPlantBomb::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TERadioIcon::ignored>(DT_TERadioIcon::ignored*)::g_SendProps
 D int ServerClassInit<DT_TERadioIcon::ignored>(DT_TERadioIcon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_SendProps
 D int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)::g_SendProps
 D int ServerClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_SendProps
 D int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_SendProps
 D int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_SendProps
 D int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_SendProps
 D int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_SendProps
 D int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)::g_SendProps
 D int ServerClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_SendProps
 D int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_SendProps
 D int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponAK47::ignored>(DT_WeaponAK47::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponAK47::ignored>(DT_WeaponAK47::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponAWP::ignored>(DT_WeaponAWP::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponAWP::ignored>(DT_WeaponAWP::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponAug::ignored>(DT_WeaponAug::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponAug::ignored>(DT_WeaponAug::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponBizon::ignored>(DT_WeaponBizon::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponBizon::ignored>(DT_WeaponBizon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponC4::ignored>(DT_WeaponC4::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponC4::ignored>(DT_WeaponC4::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponCSBase::ignored>(DT_WeaponCSBase::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponCSBase::ignored>(DT_WeaponCSBase::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponCSBaseGun::ignored>(DT_WeaponCSBaseGun::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponCSBaseGun::ignored>(DT_WeaponCSBaseGun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponDEagle::ignored>(DT_WeaponDEagle::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponDEagle::ignored>(DT_WeaponDEagle::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponElite::ignored>(DT_WeaponElite::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponElite::ignored>(DT_WeaponElite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponFamas::ignored>(DT_WeaponFamas::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponFamas::ignored>(DT_WeaponFamas::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponFiveSeven::ignored>(DT_WeaponFiveSeven::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponFiveSeven::ignored>(DT_WeaponFiveSeven::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponG3SG1::ignored>(DT_WeaponG3SG1::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponG3SG1::ignored>(DT_WeaponG3SG1::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponGalil::ignored>(DT_WeaponGalil::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponGalil::ignored>(DT_WeaponGalil::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponGalilAR::ignored>(DT_WeaponGalilAR::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponGalilAR::ignored>(DT_WeaponGalilAR::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponGlock::ignored>(DT_WeaponGlock::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponGlock::ignored>(DT_WeaponGlock::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponHKP2000::ignored>(DT_WeaponHKP2000::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponHKP2000::ignored>(DT_WeaponHKP2000::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponKnife::ignored>(DT_WeaponKnife::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponKnife::ignored>(DT_WeaponKnife::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponKnifeGG::ignored>(DT_WeaponKnifeGG::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponKnifeGG::ignored>(DT_WeaponKnifeGG::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponM249::ignored>(DT_WeaponM249::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponM249::ignored>(DT_WeaponM249::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponM3::ignored>(DT_WeaponM3::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponM3::ignored>(DT_WeaponM3::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponM4A1::ignored>(DT_WeaponM4A1::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponM4A1::ignored>(DT_WeaponM4A1::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponMAC10::ignored>(DT_WeaponMAC10::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponMAC10::ignored>(DT_WeaponMAC10::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponMP5Navy::ignored>(DT_WeaponMP5Navy::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponMP5Navy::ignored>(DT_WeaponMP5Navy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponMP7::ignored>(DT_WeaponMP7::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponMP7::ignored>(DT_WeaponMP7::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponMP9::ignored>(DT_WeaponMP9::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponMP9::ignored>(DT_WeaponMP9::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponMag7::ignored>(DT_WeaponMag7::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponMag7::ignored>(DT_WeaponMag7::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponNOVA::ignored>(DT_WeaponNOVA::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponNOVA::ignored>(DT_WeaponNOVA::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponNegev::ignored>(DT_WeaponNegev::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponNegev::ignored>(DT_WeaponNegev::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponP228::ignored>(DT_WeaponP228::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponP228::ignored>(DT_WeaponP228::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponP250::ignored>(DT_WeaponP250::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponP250::ignored>(DT_WeaponP250::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponP90::ignored>(DT_WeaponP90::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponP90::ignored>(DT_WeaponP90::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSCAR17::ignored>(DT_WeaponSCAR17::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSCAR17::ignored>(DT_WeaponSCAR17::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSCAR20::ignored>(DT_WeaponSCAR20::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSCAR20::ignored>(DT_WeaponSCAR20::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSG550::ignored>(DT_WeaponSG550::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSG550::ignored>(DT_WeaponSG550::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSG552::ignored>(DT_WeaponSG552::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSG552::ignored>(DT_WeaponSG552::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSG556::ignored>(DT_WeaponSG556::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSG556::ignored>(DT_WeaponSG556::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSSG08::ignored>(DT_WeaponSSG08::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSSG08::ignored>(DT_WeaponSSG08::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponSawedoff::ignored>(DT_WeaponSawedoff::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponSawedoff::ignored>(DT_WeaponSawedoff::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponScout::ignored>(DT_WeaponScout::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponScout::ignored>(DT_WeaponScout::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponTMP::ignored>(DT_WeaponTMP::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponTMP::ignored>(DT_WeaponTMP::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponTaser::ignored>(DT_WeaponTaser::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponTaser::ignored>(DT_WeaponTaser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponTec9::ignored>(DT_WeaponTec9::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponTec9::ignored>(DT_WeaponTec9::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponUMP45::ignored>(DT_WeaponUMP45::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponUMP45::ignored>(DT_WeaponUMP45::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponUSP::ignored>(DT_WeaponUSP::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponUSP::ignored>(DT_WeaponUSP::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponXM1014::ignored>(DT_WeaponXM1014::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponXM1014::ignored>(DT_WeaponXM1014::ignored*)::g_pSendTableName
 D lagcompensation
 D locksound_t::m_DataMap
 D m_nDebugOverlayIndex
 D magnetted_objects_t::m_DataMap
 D modifiedconvars_t::m_DataMap
 D pFGDPropData
 D pSoundStateNames
 D pWeaponSoundCategories
 D physfollower_t::m_DataMap
 D physgametrace
 D predef_flexcontroller_names
 D predef_flexcontroller_values
 D rgdpvpreset
 D sPropdataInteractionSections
 D sTeamNames
 D s_BombEventNameInfo
 D s_ElementNames
 D s_PluginCheck
 D s_pDebrisContext
 D s_pFadeOutContext
 D s_weaponNameInfo
 D s_weaponTypeInfo
 D sky3dparams_t::m_DataMap
 D steamapicontext
 D steamgameserverapicontext
 D te
 D template_t::m_DataMap
 D thinkcontextFuncs
 D thinkfunc_t::m_DataMap
 D typeinfo for AccountActivity
 D typeinfo for AttackState
 D typeinfo for BotBombStatusMeme
 D typeinfo for BotBombsiteStatusMeme
 D typeinfo for BotDefendHereMeme
 D typeinfo for BotEventInterface
 D typeinfo for BotFollowMeme
 D typeinfo for BotHeardNoiseMeme
 D typeinfo for BotHelpMeme
 D typeinfo for BotHostageBeingTakenMeme
 D typeinfo for BotMeme
 D typeinfo for BotRequestReportMeme
 D typeinfo for BotState
 D typeinfo for BotWarnSniperMeme
 D typeinfo for BotWhereBombMeme
 D typeinfo for BuyState
 D typeinfo for CAISound
 D typeinfo for CAI_AllySpeechManager
 D typeinfo for CAI_AssaultBehavior
 D typeinfo for CAI_AssaultGoal
 D typeinfo for CAI_BaseActor
 D typeinfo for CAI_BaseHumanoid
 D typeinfo for CAI_BaseNPC
 D typeinfo for CAI_BattleLine
 D typeinfo for CAI_Behavior<CAI_BaseNPC, 100000>
 D typeinfo for CAI_BehaviorBase
 D typeinfo for CAI_BehaviorHost<CAI_BaseNPC>
 D typeinfo for CAI_BehaviorHostBase<CAI_BaseNPC>
 D typeinfo for CAI_BlendedMotor
 D typeinfo for CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >
 D typeinfo for CAI_ChangeHintGroup
 D typeinfo for CAI_ChangeTarget
 D typeinfo for CAI_Component
 D typeinfo for CAI_ComponentWithOuter<CAI_BaseNPC, CAI_BehaviorBase>
 D typeinfo for CAI_DefMovementSink
 D typeinfo for CAI_DynamicLink
 D typeinfo for CAI_DynamicLinkController
 D typeinfo for CAI_EnemiesListSaveRestoreOps
 D typeinfo for CAI_Expresser
 D typeinfo for CAI_ExpresserHost<CAI_BaseHumanoid>
 D typeinfo for CAI_ExpresserHost<CBasePlayer>
 D typeinfo for CAI_ExpresserHost<CFlexExpresserShim>
 D typeinfo for CAI_ExpresserHost<CHostageExpresserShim>
 D typeinfo for CAI_ExpresserSink
 D typeinfo for CAI_ExpresserWithFollowup
 D typeinfo for CAI_FightFromCoverBehavior
 D typeinfo for CAI_FightFromCoverGoal
 D typeinfo for CAI_FollowBehavior
 D typeinfo for CAI_FollowGoal
 D typeinfo for CAI_GoalEntity
 D typeinfo for CAI_Hint
 D typeinfo for CAI_LeadBehavior
 D typeinfo for CAI_LeadBehaviorHandler
 D typeinfo for CAI_LeadGoal
 D typeinfo for CAI_LeadGoal_Weapon
 D typeinfo for CAI_LocalNavigator
 D typeinfo for CAI_MappedActivityBehavior_Temporary
 D typeinfo for CAI_Motor
 D typeinfo for CAI_MoveAndShootOverlay
 D typeinfo for CAI_MoveProbe
 D typeinfo for CAI_NavInHintGroupFilter
 D typeinfo for CAI_Navigator
 D typeinfo for CAI_Network
 D typeinfo for CAI_NetworkManager
 D typeinfo for CAI_Pathfinder
 D typeinfo for CAI_PlayerAlly
 D typeinfo for CAI_ProxyMovementSink
 D typeinfo for CAI_RadialLinkController
 D typeinfo for CAI_SaveRestoreBlockHandler
 D typeinfo for CAI_ScriptConditions
 D typeinfo for CAI_ScriptedSchedule
 D typeinfo for CAI_ScriptedSentence
 D typeinfo for CAI_ScriptedSequence
 D typeinfo for CAI_SensedObjectsManager
 D typeinfo for CAI_Senses
 D typeinfo for CAI_SpeechFilter
 D typeinfo for CAI_StandoffBehavior
 D typeinfo for CAI_StandoffGoal
 D typeinfo for CAI_SystemHook
 D typeinfo for CAI_TacticalServices
 D typeinfo for CAI_TestHull
 D typeinfo for CAK47
 D typeinfo for CActivityDataOps
 D typeinfo for CAimTargetManager
 D typeinfo for CAmbientGeneric
 D typeinfo for CAmmoDef
 D typeinfo for CAnchorList
 D typeinfo for CAreaPortal
 D typeinfo for CAssaultPoint
 D typeinfo for CAttributeContainer
 D typeinfo for CAttributeContainer::NetworkVar_m_Item
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<Vector, Vector>
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<float, float>
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<unsigned int, float>
 D typeinfo for CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>
 D typeinfo for CAttributeIterator_HasAttribute
 D typeinfo for CAttributeList
 D typeinfo for CAttributeManager
 D typeinfo for CAttribute_String
 D typeinfo for CAutoGameSystem
 D typeinfo for CAutoGameSystemPerFrame
 D typeinfo for CBaseAnimating
 D typeinfo for CBaseAnimatingOverlay
 D typeinfo for CBaseAppSystem<IParticleSystemQuery>
 D typeinfo for CBaseButton
 D typeinfo for CBaseCSGrenade
 D typeinfo for CBaseCSGrenadeProjectile
 D typeinfo for CBaseCSIssue
 D typeinfo for CBaseCombatCharacter
 D typeinfo for CBaseCombatWeapon
 D typeinfo for CBaseDMStart
 D typeinfo for CBaseDoor
 D typeinfo for CBaseEntity
 D typeinfo for CBaseEntity::NetworkVar_m_Collision
 D typeinfo for CBaseEntityClassList
 D typeinfo for CBaseEntityList
 D typeinfo for CBaseEntityScriptInstanceHelper
 D typeinfo for CBaseFilter
 D typeinfo for CBaseFire
 D typeinfo for CBaseFlex
 D typeinfo for CBaseGameStats
 D typeinfo for CBaseGameStats_Driver
 D typeinfo for CBaseGameSystem
 D typeinfo for CBaseGameSystemPerFrame
 D typeinfo for CBaseGrenade
 D typeinfo for CBaseIssue
 D typeinfo for CBaseMoveBehavior
 D typeinfo for CBaseMultiplayerPlayer
 D typeinfo for CBaseParticleEntity
 D typeinfo for CBasePlatTrain
 D typeinfo for CBasePlayer
 D typeinfo for CBasePlayer::NetworkVar_m_Local
 D typeinfo for CBasePlayer::NetworkVar_m_PlayerFog
 D typeinfo for CBasePlayer::NetworkVar_pl
 D typeinfo for CBasePlayerAnimState
 D typeinfo for CBaseProjectile
 D typeinfo for CBaseProp
 D typeinfo for CBasePropDoor
 D typeinfo for CBaseResourcePrecacher
 D typeinfo for CBaseServerVehicle
 D typeinfo for CBaseTempEntity
 D typeinfo for CBaseToggle
 D typeinfo for CBaseTrigger
 D typeinfo for CBaseVPhysicsTrigger
 D typeinfo for CBaseViewModel
 D typeinfo for CBaseWorkshopHTTPRequest
 D typeinfo for CBeam
 D typeinfo for CBeamSpotlight
 D typeinfo for CBlendingCycler
 D typeinfo for CBlood
 D typeinfo for CBloodSplat
 D typeinfo for CBombShieldTraceEnum
 D typeinfo for CBombTarget
 D typeinfo for CBoneFollower
 D typeinfo for CBoolProperty
 D typeinfo for CBot<CCSPlayer>
 D typeinfo for CBotBreakableEnumerator
 D typeinfo for CBotCmd
 D typeinfo for CBotDoorEnumerator
 D typeinfo for CBotManager
 D typeinfo for CBreakModelsPrecached
 D typeinfo for CBreakParser
 D typeinfo for CBreakable
 D typeinfo for CBreakableProp
 D typeinfo for CBreakableSurface
 D typeinfo for CBroadcastRecipientFilter
 D typeinfo for CBubbling
 D typeinfo for CBuildModeNavCombo
 D typeinfo for CBulletsTraceFilter
 D typeinfo for CBuyZone
 D typeinfo for CC4
 D typeinfo for CCLCMsg_BaselineAck
 D typeinfo for CCLCMsg_ClientInfo
 D typeinfo for CCLCMsg_CmdKeyValues
 D typeinfo for CCLCMsg_FileCRCCheck
 D typeinfo for CCLCMsg_ListenEvents
 D typeinfo for CCLCMsg_LoadingProgress
 D typeinfo for CCLCMsg_Move
 D typeinfo for CCLCMsg_RespondCvarValue
 D typeinfo for CCLCMsg_SplitPlayerConnect
 D typeinfo for CCLCMsg_VoiceData
 D typeinfo for CCSAmmoDef
 D typeinfo for CCSBot
 D typeinfo for CCSBotManager
 D typeinfo for CCSBotManager::BombBeepEvent
 D typeinfo for CCSBotManager::BombDefuseAbortEvent
 D typeinfo for CCSBotManager::BombDefuseBeginEvent
 D typeinfo for CCSBotManager::BombDefusedEvent
 D typeinfo for CCSBotManager::BombExplodedEvent
 D typeinfo for CCSBotManager::BombPickedUpEvent
 D typeinfo for CCSBotManager::BombPlantedEvent
 D typeinfo for CCSBotManager::BreakBreakableEvent
 D typeinfo for CCSBotManager::BreakPropEvent
 D typeinfo for CCSBotManager::BulletImpactEvent
 D typeinfo for CCSBotManager::DecoyDetonateEvent
 D typeinfo for CCSBotManager::DecoyFiringEvent
 D typeinfo for CCSBotManager::DoorMovingEvent
 D typeinfo for CCSBotManager::FlashbangDetonateEvent
 D typeinfo for CCSBotManager::GrenadeBounceEvent
 D typeinfo for CCSBotManager::HEGrenadeDetonateEvent
 D typeinfo for CCSBotManager::HostageFollowsEvent
 D typeinfo for CCSBotManager::HostageRescuedAllEvent
 D typeinfo for CCSBotManager::MolotovDetonateEvent
 D typeinfo for CCSBotManager::NavBlockedEvent
 D typeinfo for CCSBotManager::PlayerDeathEvent
 D typeinfo for CCSBotManager::PlayerFallDamageEvent
 D typeinfo for CCSBotManager::PlayerFootstepEvent
 D typeinfo for CCSBotManager::PlayerRadioEvent
 D typeinfo for CCSBotManager::RoundEndEvent
 D typeinfo for CCSBotManager::RoundFreezeEndEvent
 D typeinfo for CCSBotManager::RoundStartEvent
 D typeinfo for CCSBotManager::ServerShutdownEvent
 D typeinfo for CCSBotManager::SmokeGrenadeDetonateEvent
 D typeinfo for CCSBotManager::WeaponFireEvent
 D typeinfo for CCSBotManager::WeaponFireOnEmptyEvent
 D typeinfo for CCSBotManager::WeaponReloadEvent
 D typeinfo for CCSBotManager::WeaponZoomEvent
 D typeinfo for CCSEntitySpotting
 D typeinfo for CCSEventLog
 D typeinfo for CCSFunFactMgr
 D typeinfo for CCSGCServerSystem
 D typeinfo for CCSGameMovement
 D typeinfo for CCSGameRules
 D typeinfo for CCSGameRules::ICalculateEndOfRoundMVPHook_t
 D typeinfo for CCSGameRulesProxy
 D typeinfo for CCSGameStats
 D typeinfo for CCSHLTVDirector
 D typeinfo for CCSHostageAnimState
 D typeinfo for CCSInventoryManager
 D typeinfo for CCSMLightManager
 D typeinfo for CCSNavArea
 D typeinfo for CCSPlayer
 D typeinfo for CCSPlayerAnimState
 D typeinfo for CCSPlayerInventory
 D typeinfo for CCSPlayerMove
 D typeinfo for CCSPlayerResource
 D typeinfo for CCSRagdoll
 D typeinfo for CCSTeam
 D typeinfo for CCSUsrMsg_AchievementEvent
 D typeinfo for CCSUsrMsg_AdjustMoney
 D typeinfo for CCSUsrMsg_AmmoDenied
 D typeinfo for CCSUsrMsg_BarTime
 D typeinfo for CCSUsrMsg_CallVoteFailed
 D typeinfo for CCSUsrMsg_ClientInfo
 D typeinfo for CCSUsrMsg_CloseCaption
 D typeinfo for CCSUsrMsg_CloseCaptionDirect
 D typeinfo for CCSUsrMsg_CurrentTimescale
 D typeinfo for CCSUsrMsg_Damage
 D typeinfo for CCSUsrMsg_DesiredTimescale
 D typeinfo for CCSUsrMsg_DisconnectToLobby
 D typeinfo for CCSUsrMsg_DisplayInventory
 D typeinfo for CCSUsrMsg_Fade
 D typeinfo for CCSUsrMsg_GameTitle
 D typeinfo for CCSUsrMsg_Geiger
 D typeinfo for CCSUsrMsg_GlowPropTurnOff
 D typeinfo for CCSUsrMsg_HintText
 D typeinfo for CCSUsrMsg_HudMsg
 D typeinfo for CCSUsrMsg_HudText
 D typeinfo for CCSUsrMsg_ItemDrop
 D typeinfo for CCSUsrMsg_ItemPickup
 D typeinfo for CCSUsrMsg_KeyHintText
 D typeinfo for CCSUsrMsg_KillCam
 D typeinfo for CCSUsrMsg_MarkAchievement
 D typeinfo for CCSUsrMsg_MatchEndConditions
 D typeinfo for CCSUsrMsg_MatchStatsUpdate
 D typeinfo for CCSUsrMsg_PlayerStatsUpdate
 D typeinfo for CCSUsrMsg_PlayerStatsUpdate_Stat
 D typeinfo for CCSUsrMsg_ProcessSpottedEntityUpdate
 D typeinfo for CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate
 D typeinfo for CCSUsrMsg_RadioText
 D typeinfo for CCSUsrMsg_RawAudio
 D typeinfo for CCSUsrMsg_ReloadEffect
 D typeinfo for CCSUsrMsg_ReportHit
 D typeinfo for CCSUsrMsg_RequestState
 D typeinfo for CCSUsrMsg_ResetHud
 D typeinfo for CCSUsrMsg_RoundBackupFilenames
 D typeinfo for CCSUsrMsg_Rumble
 D typeinfo for CCSUsrMsg_SayText
 D typeinfo for CCSUsrMsg_SayText2
 D typeinfo for CCSUsrMsg_SendAudio
 D typeinfo for CCSUsrMsg_SendLastKillerDamageToClient
 D typeinfo for CCSUsrMsg_SendPlayerItemDrops
 D typeinfo for CCSUsrMsg_SendPlayerItemFound
 D typeinfo for CCSUsrMsg_ServerRankRevealAll
 D typeinfo for CCSUsrMsg_ServerRankUpdate
 D typeinfo for CCSUsrMsg_ServerRankUpdate_RankUpdate
 D typeinfo for CCSUsrMsg_Shake
 D typeinfo for CCSUsrMsg_ShowMenu
 D typeinfo for CCSUsrMsg_StopSpectatorMode
 D typeinfo for CCSUsrMsg_TextMsg
 D typeinfo for CCSUsrMsg_Train
 D typeinfo for CCSUsrMsg_VGUIMenu
 D typeinfo for CCSUsrMsg_VGUIMenu_Subkey
 D typeinfo for CCSUsrMsg_VoiceMask
 D typeinfo for CCSUsrMsg_VoiceMask_PlayerMask
 D typeinfo for CCSUsrMsg_VoteFailed
 D typeinfo for CCSUsrMsg_VotePass
 D typeinfo for CCSUsrMsg_VoteSetup
 D typeinfo for CCSUsrMsg_VoteStart
 D typeinfo for CCSUsrMsg_WarmupHasEnded
 D typeinfo for CCSUsrMsg_XRankGet
 D typeinfo for CCSUsrMsg_XRankUpd
 D typeinfo for CCSWeaponInfo
 D typeinfo for CCStrike15ItemDefinition
 D typeinfo for CCStrike15ItemSchema
 D typeinfo for CCStrike15ItemSystem
 D typeinfo for CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>
 D typeinfo for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>
 D typeinfo for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>
 D typeinfo for CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>
 D typeinfo for CCallback<CGCClientSystem, SteamServersConnected_t, true>
 D typeinfo for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 D typeinfo for CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>
 D typeinfo for CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>
 D typeinfo for CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>
 D typeinfo for CCallbackBase
 D typeinfo for CCascadeLight
 D typeinfo for CChangeLevel
 D typeinfo for CChangeLevelIssue
 D typeinfo for CCheckClient
 D typeinfo for CChicken
 D typeinfo for CChildOperatorDefinition
 D typeinfo for CChoreoEvent
 D typeinfo for CChoreoScene
 D typeinfo for CChoreoStringPool
 D typeinfo for CClassPtrSaveRestoreOps
 D typeinfo for CCleanupDefaultRelationShips
 D typeinfo for CClientHeaderOverwatchEvidence
 D typeinfo for CCollectionInfoHTTPRequest
 D typeinfo for CCollisionEvent
 D typeinfo for CCollisionProperty
 D typeinfo for CColorCorrection
 D typeinfo for CColorCorrectionSystem
 D typeinfo for CColorCorrectionVolume
 D typeinfo for CColorProperty
 D typeinfo for CCombatCharVisCache
 D typeinfo for CCommentaryAuto
 D typeinfo for CCommentarySystem
 D typeinfo for CCommentaryViewPosition
 D typeinfo for CCommentary_SaveRestoreBlockHandler
 D typeinfo for CConceptHistoriesDataOps
 D typeinfo for CConstantForceController
 D typeinfo for CConstraintAnchor
 D typeinfo for CCopyRecipientFilter
 D typeinfo for CCopyableUtlVector<attachedparticlecontrolpoint_t>
 D typeinfo for CCopyableUtlVector<unsigned int>
 D typeinfo for CCredits
 D typeinfo for CCycler
 D typeinfo for CDEagle
 D typeinfo for CDataGCCStrike15_v2_MatchInfo
 D typeinfo for CDataGCCStrike15_v2_MatchmakingLockedInMatch
 D typeinfo for CDataGCCStrike15_v2_TournamentGroup
 D typeinfo for CDataGCCStrike15_v2_TournamentGroupTeam
 D typeinfo for CDataGCCStrike15_v2_TournamentInfo
 D typeinfo for CDataGCCStrike15_v2_TournamentMatchDraft
 D typeinfo for CDataGCCStrike15_v2_TournamentMatchDraft_Entry
 D typeinfo for CDataGCCStrike15_v2_TournamentSection
 D typeinfo for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D typeinfo for CDataManagerBase
 D typeinfo for CDataObjectAccessSystem
 D typeinfo for CDebugHistory
 D typeinfo for CDecal
 D typeinfo for CDecalEmitterSystem
 D typeinfo for CDecoyGrenade
 D typeinfo for CDecoyProjectile
 D typeinfo for CDedicatedServerWorkshopManager
 D typeinfo for CDefSaveRestoreBlockHandler
 D typeinfo for CDefSaveRestoreOps
 D typeinfo for CDefaultAccessor
 D typeinfo for CDefaultParticleSystemQuery
 D typeinfo for CDefaultPlayerPickupVPhysics
 D typeinfo for CDefaultResponseSystem
 D typeinfo for CDefaultResponseSystemSaveRestoreBlockHandler
 D typeinfo for CDetailBlocker
 D typeinfo for CDevShotSystem
 D typeinfo for CDirtySpatialPartitionEntityList
 D typeinfo for CDllDemandLoader
 D typeinfo for CDragDropHelperPanel
 D typeinfo for CDynamicLight
 D typeinfo for CDynamicProp
 D typeinfo for CEconCraftingRecipeDefinition
 D typeinfo for CEconDefaultEquippedDefinitionInstanceClient
 D typeinfo for CEconEntity
 D typeinfo for CEconEntity::NetworkVar_m_AttributeManager
 D typeinfo for CEconItem
 D typeinfo for CEconItemAttribute
 D typeinfo for CEconItemAttributeDefinition
 D typeinfo for CEconItemAttributeIterator_ApplyAttributeFloat
 D typeinfo for CEconItemDefinition
 D typeinfo for CEconItemDropRateBonus
 D typeinfo for CEconItemEventTicket
 D typeinfo for CEconItemPreviewDataBlock
 D typeinfo for CEconItemPreviewDataBlock_Sticker
 D typeinfo for CEconItemSchema
 D typeinfo for CEconItemSetDefinition
 D typeinfo for CEconItemSystem
 D typeinfo for CEconItemView
 D typeinfo for CEconItemView::NetworkVar_m_AttributeList
 D typeinfo for CEconItemView::NetworkVar_m_NetworkedDynamicAttributesForDemos
 D typeinfo for CEconLootListDefinition
 D typeinfo for CEconStyleInfo
 D typeinfo for CEconTool_BackpackExpander
 D typeinfo for CEconTool_ClaimCode
 D typeinfo for CEconTool_Collection
 D typeinfo for CEconTool_CrateKey
 D typeinfo for CEconTool_CustomizeTexture
 D typeinfo for CEconTool_Default
 D typeinfo for CEconTool_DescTag
 D typeinfo for CEconTool_DuelingMinigame
 D typeinfo for CEconTool_Gift
 D typeinfo for CEconTool_NameTag
 D typeinfo for CEconTool_Noisemaker
 D typeinfo for CEconTool_PaintCan
 D typeinfo for CEconTool_PaintKit
 D typeinfo for CEconTool_Recipe
 D typeinfo for CEconTool_SeasonPass
 D typeinfo for CEconTool_StatTrakSwap
 D typeinfo for CEconTool_Sticker
 D typeinfo for CEconTool_WeddingRing
 D typeinfo for CEconTool_WrappedGift
 D typeinfo for CEffectsServer
 D typeinfo for CEmbers
 D typeinfo for CEmptyConVar
 D typeinfo for CEnableMotionFixup
 D typeinfo for CEntFireAutoCompletionFunctor
 D typeinfo for CEntityBlocker
 D typeinfo for CEntityClassList<CPhysicsNPCSolver>
 D typeinfo for CEntityClassList<CPointCamera>
 D typeinfo for CEntityClassList<CSkyCamera>
 D typeinfo for CEntityDataInstantiator<CWatcherList>
 D typeinfo for CEntityDataInstantiator<ModelScale>
 D typeinfo for CEntityDataInstantiator<StepSimulationData>
 D typeinfo for CEntityDataInstantiator<groundlink_t>
 D typeinfo for CEntityDataInstantiator<physicspushlist_t>
 D typeinfo for CEntityDataInstantiator<touchlink_t>
 D typeinfo for CEntityDataInstantiator<vphysicsupdateai_t>
 D typeinfo for CEntityDissolve
 D typeinfo for CEntityFactory<CAISound>
 D typeinfo for CEntityFactory<CAI_AllySpeechManager>
 D typeinfo for CEntityFactory<CAI_AssaultGoal>
 D typeinfo for CEntityFactory<CAI_BattleLine>
 D typeinfo for CEntityFactory<CAI_ChangeHintGroup>
 D typeinfo for CEntityFactory<CAI_ChangeTarget>
 D typeinfo for CEntityFactory<CAI_DynamicLink>
 D typeinfo for CEntityFactory<CAI_DynamicLinkController>
 D typeinfo for CEntityFactory<CAI_FightFromCoverGoal>
 D typeinfo for CEntityFactory<CAI_FollowGoal>
 D typeinfo for CEntityFactory<CAI_Hint>
 D typeinfo for CEntityFactory<CAI_LeadGoal>
 D typeinfo for CEntityFactory<CAI_LeadGoal_Weapon>
 D typeinfo for CEntityFactory<CAI_NetworkManager>
 D typeinfo for CEntityFactory<CAI_RadialLinkController>
 D typeinfo for CEntityFactory<CAI_ScriptConditions>
 D typeinfo for CEntityFactory<CAI_ScriptedSchedule>
 D typeinfo for CEntityFactory<CAI_ScriptedSentence>
 D typeinfo for CEntityFactory<CAI_ScriptedSequence>
 D typeinfo for CEntityFactory<CAI_SpeechFilter>
 D typeinfo for CEntityFactory<CAI_StandoffGoal>
 D typeinfo for CEntityFactory<CAI_TestHull>
 D typeinfo for CEntityFactory<CAK47>
 D typeinfo for CEntityFactory<CAmbientGeneric>
 D typeinfo for CEntityFactory<CAreaPortal>
 D typeinfo for CEntityFactory<CAssaultPoint>
 D typeinfo for CEntityFactory<CBaseButton>
 D typeinfo for CEntityFactory<CBaseCSGrenade>
 D typeinfo for CEntityFactory<CBaseDMStart>
 D typeinfo for CEntityFactory<CBaseDoor>
 D typeinfo for CEntityFactory<CBaseEntity>
 D typeinfo for CEntityFactory<CBaseFilter>
 D typeinfo for CEntityFactory<CBaseFlex>
 D typeinfo for CEntityFactory<CBaseGrenade>
 D typeinfo for CEntityFactory<CBaseMoveBehavior>
 D typeinfo for CEntityFactory<CBaseProjectile>
 D typeinfo for CEntityFactory<CBaseTrigger>
 D typeinfo for CEntityFactory<CBaseViewModel>
 D typeinfo for CEntityFactory<CBeam>
 D typeinfo for CEntityFactory<CBeamSpotlight>
 D typeinfo for CEntityFactory<CBlendingCycler>
 D typeinfo for CEntityFactory<CBlood>
 D typeinfo for CEntityFactory<CBombTarget>
 D typeinfo for CEntityFactory<CBoneFollower>
 D typeinfo for CEntityFactory<CBreakable>
 D typeinfo for CEntityFactory<CBreakableSurface>
 D typeinfo for CEntityFactory<CBubbling>
 D typeinfo for CEntityFactory<CBuyZone>
 D typeinfo for CEntityFactory<CC4>
 D typeinfo for CEntityFactory<CCSBot>
 D typeinfo for CEntityFactory<CCSGameRulesProxy>
 D typeinfo for CEntityFactory<CCSPlayer>
 D typeinfo for CEntityFactory<CCSPlayerResource>
 D typeinfo for CEntityFactory<CCSRagdoll>
 D typeinfo for CEntityFactory<CCSTeam>
 D typeinfo for CEntityFactory<CCascadeLight>
 D typeinfo for CEntityFactory<CChangeLevel>
 D typeinfo for CEntityFactory<CChicken>
 D typeinfo for CEntityFactory<CColorCorrection>
 D typeinfo for CEntityFactory<CColorCorrectionVolume>
 D typeinfo for CEntityFactory<CCommentaryAuto>
 D typeinfo for CEntityFactory<CCommentaryViewPosition>
 D typeinfo for CEntityFactory<CConstraintAnchor>
 D typeinfo for CEntityFactory<CCredits>
 D typeinfo for CEntityFactory<CDEagle>
 D typeinfo for CEntityFactory<CDebugHistory>
 D typeinfo for CEntityFactory<CDecal>
 D typeinfo for CEntityFactory<CDecoyGrenade>
 D typeinfo for CEntityFactory<CDecoyProjectile>
 D typeinfo for CEntityFactory<CDetailBlocker>
 D typeinfo for CEntityFactory<CDynamicLight>
 D typeinfo for CEntityFactory<CDynamicProp>
 D typeinfo for CEntityFactory<CEmbers>
 D typeinfo for CEntityFactory<CEnableMotionFixup>
 D typeinfo for CEntityFactory<CEntityBlocker>
 D typeinfo for CEntityFactory<CEntityDissolve>
 D typeinfo for CEntityFactory<CEntityFlame>
 D typeinfo for CEntityFactory<CEntityFreezing>
 D typeinfo for CEntityFactory<CEntityParticleTrail>
 D typeinfo for CEntityFactory<CEnvAmbientLight>
 D typeinfo for CEntityFactory<CEnvBeam>
 D typeinfo for CEntityFactory<CEnvBeverage>
 D typeinfo for CEntityFactory<CEnvDOFController>
 D typeinfo for CEntityFactory<CEnvDetailController>
 D typeinfo for CEntityFactory<CEnvDustPuff>
 D typeinfo for CEntityFactory<CEnvEffectsScript>
 D typeinfo for CEntityFactory<CEnvEntityIgniter>
 D typeinfo for CEntityFactory<CEnvEntityMaker>
 D typeinfo for CEntityFactory<CEnvExplosion>
 D typeinfo for CEntityFactory<CEnvFade>
 D typeinfo for CEntityFactory<CEnvFireSensor>
 D typeinfo for CEntityFactory<CEnvFireSource>
 D typeinfo for CEntityFactory<CEnvFunnel>
 D typeinfo for CEntityFactory<CEnvGlobal>
 D typeinfo for CEntityFactory<CEnvGunfire>
 D typeinfo for CEntityFactory<CEnvHudHint>
 D typeinfo for CEntityFactory<CEnvInstructorHint>
 D typeinfo for CEntityFactory<CEnvLaser>
 D typeinfo for CEntityFactory<CEnvLight>
 D typeinfo for CEntityFactory<CEnvMicrophone>
 D typeinfo for CEntityFactory<CEnvMuzzleFlash>
 D typeinfo for CEntityFactory<CEnvParticleScript>
 D typeinfo for CEntityFactory<CEnvPlayerSurfaceTrigger>
 D typeinfo for CEntityFactory<CEnvProjectedTexture>
 D typeinfo for CEntityFactory<CEnvQuadraticBeam>
 D typeinfo for CEntityFactory<CEnvScreenEffect>
 D typeinfo for CEntityFactory<CEnvScreenOverlay>
 D typeinfo for CEntityFactory<CEnvShake>
 D typeinfo for CEntityFactory<CEnvShooter>
 D typeinfo for CEntityFactory<CEnvSoundscape>
 D typeinfo for CEntityFactory<CEnvSoundscapeProxy>
 D typeinfo for CEntityFactory<CEnvSoundscapeTriggerable>
 D typeinfo for CEntityFactory<CEnvSpark>
 D typeinfo for CEntityFactory<CEnvSplash>
 D typeinfo for CEntityFactory<CEnvTilt>
 D typeinfo for CEntityFactory<CEnvTonemapController>
 D typeinfo for CEntityFactory<CEnvTracer>
 D typeinfo for CEntityFactory<CEnvViewPunch>
 D typeinfo for CEntityFactory<CEnvWind>
 D typeinfo for CEntityFactory<CEnvZoom>
 D typeinfo for CEntityFactory<CEventQueueSaveLoadProxy>
 D typeinfo for CEntityFactory<CFilterClass>
 D typeinfo for CEntityFactory<CFilterContext>
 D typeinfo for CEntityFactory<CFilterEnemy>
 D typeinfo for CEntityFactory<CFilterMassGreater>
 D typeinfo for CEntityFactory<CFilterModel>
 D typeinfo for CEntityFactory<CFilterMultiple>
 D typeinfo for CEntityFactory<CFilterName>
 D typeinfo for CEntityFactory<CFire>
 D typeinfo for CEntityFactory<CFireCrackerBlast>
 D typeinfo for CEntityFactory<CFireSmoke>
 D typeinfo for CEntityFactory<CFireTrail>
 D typeinfo for CEntityFactory<CFish>
 D typeinfo for CEntityFactory<CFishPool>
 D typeinfo for CEntityFactory<CFlashbang>
 D typeinfo for CEntityFactory<CFlashbangProjectile>
 D typeinfo for CEntityFactory<CFlexExpresser>
 D typeinfo for CEntityFactory<CFlextalkActor>
 D typeinfo for CEntityFactory<CFogController>
 D typeinfo for CEntityFactory<CFogTrigger>
 D typeinfo for CEntityFactory<CFogVolume>
 D typeinfo for CEntityFactory<CFootstepControl>
 D typeinfo for CEntityFactory<CFuncAreaPortalWindow>
 D typeinfo for CEntityFactory<CFuncBlockDMSpawns>
 D typeinfo for CEntityFactory<CFuncBrush>
 D typeinfo for CEntityFactory<CFuncConveyor>
 D typeinfo for CEntityFactory<CFuncIllusionary>
 D typeinfo for CEntityFactory<CFuncInstanceIoProxy>
 D typeinfo for CEntityFactory<CFuncLadder>
 D typeinfo for CEntityFactory<CFuncLadderEndPoint>
 D typeinfo for CEntityFactory<CFuncMonitor>
 D typeinfo for CEntityFactory<CFuncMoveLinear>
 D typeinfo for CEntityFactory<CFuncNavBlocker>
 D typeinfo for CEntityFactory<CFuncNavObstruction>
 D typeinfo for CEntityFactory<CFuncOccluder>
 D typeinfo for CEntityFactory<CFuncPlat>
 D typeinfo for CEntityFactory<CFuncPlatRot>
 D typeinfo for CEntityFactory<CFuncReflectiveGlass>
 D typeinfo for CEntityFactory<CFuncRotating>
 D typeinfo for CEntityFactory<CFuncSmokeVolume>
 D typeinfo for CEntityFactory<CFuncTankTrain>
 D typeinfo for CEntityFactory<CFuncTrackAuto>
 D typeinfo for CEntityFactory<CFuncTrackChange>
 D typeinfo for CEntityFactory<CFuncTrackTrain>
 D typeinfo for CEntityFactory<CFuncTrain>
 D typeinfo for CEntityFactory<CFuncTrainControls>
 D typeinfo for CEntityFactory<CFuncVPhysicsClip>
 D typeinfo for CEntityFactory<CFuncVehicleClip>
 D typeinfo for CEntityFactory<CFuncWall>
 D typeinfo for CEntityFactory<CFuncWallToggle>
 D typeinfo for CEntityFactory<CFunc_DustCloud>
 D typeinfo for CEntityFactory<CFunc_DustMotes>
 D typeinfo for CEntityFactory<CFunc_LOD>
 D typeinfo for CEntityFactory<CGameEnd>
 D typeinfo for CEntityFactory<CGameGibManager>
 D typeinfo for CEntityFactory<CGameMoney>
 D typeinfo for CEntityFactory<CGamePlayerEquip>
 D typeinfo for CEntityFactory<CGamePlayerTeam>
 D typeinfo for CEntityFactory<CGamePlayerZone>
 D typeinfo for CEntityFactory<CGameRoundEnd>
 D typeinfo for CEntityFactory<CGameScore>
 D typeinfo for CEntityFactory<CGameText>
 D typeinfo for CEntityFactory<CGameUI>
 D typeinfo for CEntityFactory<CGameWeaponManager>
 D typeinfo for CEntityFactory<CGenericActor>
 D typeinfo for CEntityFactory<CGenericCycler>
 D typeinfo for CEntityFactory<CGenericFlexCycler>
 D typeinfo for CEntityFactory<CGenericNPC>
 D typeinfo for CEntityFactory<CGib>
 D typeinfo for CEntityFactory<CGibShooter>
 D typeinfo for CEntityFactory<CGunTarget>
 D typeinfo for CEntityFactory<CHEGrenade>
 D typeinfo for CEntityFactory<CHEGrenadeProjectile>
 D typeinfo for CEntityFactory<CHandleDummy>
 D typeinfo for CEntityFactory<CHandleTest>
 D typeinfo for CEntityFactory<CHostage>
 D typeinfo for CEntityFactory<CHostageCarriableProp>
 D typeinfo for CEntityFactory<CHostageRescueZone>
 D typeinfo for CEntityFactory<CIncendiaryGrenade>
 D typeinfo for CEntityFactory<CInferno>
 D typeinfo for CEntityFactory<CInfoCameraLink>
 D typeinfo for CEntityFactory<CInfoGameEventProxy>
 D typeinfo for CEntityFactory<CInfoInstructorHintBombTargetA>
 D typeinfo for CEntityFactory<CInfoInstructorHintBombTargetB>
 D typeinfo for CEntityFactory<CInfoInstructorHintHostageRescueZone>
 D typeinfo for CEntityFactory<CInfoInstructorHintTarget>
 D typeinfo for CEntityFactory<CInfoIntermission>
 D typeinfo for CEntityFactory<CInfoLadderDismount>
 D typeinfo for CEntityFactory<CInfoMassCenter>
 D typeinfo for CEntityFactory<CInfoOverlayAccessor>
 D typeinfo for CEntityFactory<CInfoRemarkable>
 D typeinfo for CEntityFactory<CInfoTarget>
 D typeinfo for CEntityFactory<CInfoViewParameters>
 D typeinfo for CEntityFactory<CInstancedSceneEntity>
 D typeinfo for CEntityFactory<CItemAmmo338MAG>
 D typeinfo for CEntityFactory<CItemAmmo357SIG>
 D typeinfo for CEntityFactory<CItemAmmo357SIG_MIN>
 D typeinfo for CEntityFactory<CItemAmmo357SIG_P250>
 D typeinfo for CEntityFactory<CItemAmmo357SIG_SMALL>
 D typeinfo for CEntityFactory<CItemAmmo45ACP>
 D typeinfo for CEntityFactory<CItemAmmo50AE>
 D typeinfo for CEntityFactory<CItemAmmo556MM>
 D typeinfo for CEntityFactory<CItemAmmo556MM_BOX>
 D typeinfo for CEntityFactory<CItemAmmo556MM_SMALL>
 D typeinfo for CEntityFactory<CItemAmmo57MM>
 D typeinfo for CEntityFactory<CItemAmmo762MM>
 D typeinfo for CEntityFactory<CItemAmmo9MM>
 D typeinfo for CEntityFactory<CItemAmmoBuckshot>
 D typeinfo for CEntityFactory<CItemAssaultSuit>
 D typeinfo for CEntityFactory<CItemDefuser>
 D typeinfo for CEntityFactory<CItemKevlar>
 D typeinfo for CEntityFactory<CItemNvgs>
 D typeinfo for CEntityFactory<CItemSoda>
 D typeinfo for CEntityFactory<CKeepUpright>
 D typeinfo for CEntityFactory<CKnife>
 D typeinfo for CEntityFactory<CKnifeGG>
 D typeinfo for CEntityFactory<CLight>
 D typeinfo for CEntityFactory<CLightGlow>
 D typeinfo for CEntityFactory<CLogicActiveAutosave>
 D typeinfo for CEntityFactory<CLogicAuto>
 D typeinfo for CEntityFactory<CLogicAutosave>
 D typeinfo for CEntityFactory<CLogicBranch>
 D typeinfo for CEntityFactory<CLogicBranchList>
 D typeinfo for CEntityFactory<CLogicCase>
 D typeinfo for CEntityFactory<CLogicCollisionPair>
 D typeinfo for CEntityFactory<CLogicCompare>
 D typeinfo for CEntityFactory<CLogicCompareInteger>
 D typeinfo for CEntityFactory<CLogicEventListener>
 D typeinfo for CEntityFactory<CLogicEventListenerItemEquip>
 D typeinfo for CEntityFactory<CLogicLineToEntity>
 D typeinfo for CEntityFactory<CLogicMeasureMovement>
 D typeinfo for CEntityFactory<CLogicNavigation>
 D typeinfo for CEntityFactory<CLogicPlayMovie>
 D typeinfo for CEntityFactory<CLogicPlayerProxy>
 D typeinfo for CEntityFactory<CLogicRandomOutputs>
 D typeinfo for CEntityFactory<CLogicRegisterActivator>
 D typeinfo for CEntityFactory<CLogicRelay>
 D typeinfo for CEntityFactory<CLogicScript>
 D typeinfo for CEntityFactory<CMapInfo>
 D typeinfo for CEntityFactory<CMaterialModifyControl>
 D typeinfo for CEntityFactory<CMathColorBlend>
 D typeinfo for CEntityFactory<CMathCounter>
 D typeinfo for CEntityFactory<CMathRemap>
 D typeinfo for CEntityFactory<CMessage>
 D typeinfo for CEntityFactory<CMessageEntity>
 D typeinfo for CEntityFactory<CMolotovGrenade>
 D typeinfo for CEntityFactory<CMolotovProjectile>
 D typeinfo for CEntityFactory<CMomentaryRotButton>
 D typeinfo for CEntityFactory<CMovementSpeedMod>
 D typeinfo for CEntityFactory<CMovieDisplay>
 D typeinfo for CEntityFactory<CMultiSource>
 D typeinfo for CEntityFactory<CNPC_Furniture>
 D typeinfo for CEntityFactory<CNPC_HearDanger>
 D typeinfo for CEntityFactory<CNPC_VehicleDriver>
 D typeinfo for CEntityFactory<CNoDefuseArea>
 D typeinfo for CEntityFactory<CNodeEnt>
 D typeinfo for CEntityFactory<CNullEntity>
 D typeinfo for CEntityFactory<COrnamentProp>
 D typeinfo for CEntityFactory<COuttroStats>
 D typeinfo for CEntityFactory<CParticleFire>
 D typeinfo for CEntityFactory<CParticleLight>
 D typeinfo for CEntityFactory<CParticlePerformanceMonitor>
 D typeinfo for CEntityFactory<CParticleSystem>
 D typeinfo for CEntityFactory<CPathCorner>
 D typeinfo for CEntityFactory<CPathCornerCrash>
 D typeinfo for CEntityFactory<CPathKeyFrame>
 D typeinfo for CEntityFactory<CPathTrack>
 D typeinfo for CEntityFactory<CPhysBallSocket>
 D typeinfo for CEntityFactory<CPhysBox>
 D typeinfo for CEntityFactory<CPhysBoxMultiplayer>
 D typeinfo for CEntityFactory<CPhysConstraintSystem>
 D typeinfo for CEntityFactory<CPhysConvert>
 D typeinfo for CEntityFactory<CPhysExplosion>
 D typeinfo for CEntityFactory<CPhysFixed>
 D typeinfo for CEntityFactory<CPhysHinge>
 D typeinfo for CEntityFactory<CPhysImpact>
 D typeinfo for CEntityFactory<CPhysLength>
 D typeinfo for CEntityFactory<CPhysMagnet>
 D typeinfo for CEntityFactory<CPhysMotor>
 D typeinfo for CEntityFactory<CPhysPulley>
 D typeinfo for CEntityFactory<CPhysSlideConstraint>
 D typeinfo for CEntityFactory<CPhysSphere>
 D typeinfo for CEntityFactory<CPhysThruster>
 D typeinfo for CEntityFactory<CPhysTorque>
 D typeinfo for CEntityFactory<CPhysicsCannister>
 D typeinfo for CEntityFactory<CPhysicsEntitySolver>
 D typeinfo for CEntityFactory<CPhysicsNPCSolver>
 D typeinfo for CEntityFactory<CPhysicsProp>
 D typeinfo for CEntityFactory<CPhysicsPropMultiplayer>
 D typeinfo for CEntityFactory<CPhysicsPropRespawnable>
 D typeinfo for CEntityFactory<CPhysicsSpring>
 D typeinfo for CEntityFactory<CPhysicsWire>
 D typeinfo for CEntityFactory<CPlantedC4>
 D typeinfo for CEntityFactory<CPlantedC4Training>
 D typeinfo for CEntityFactory<CPlasma>
 D typeinfo for CEntityFactory<CPlayerResource>
 D typeinfo for CEntityFactory<CPointAngleSensor>
 D typeinfo for CEntityFactory<CPointAngularVelocitySensor>
 D typeinfo for CEntityFactory<CPointBonusMapsAccessor>
 D typeinfo for CEntityFactory<CPointBroadcastClientCommand>
 D typeinfo for CEntityFactory<CPointCamera>
 D typeinfo for CEntityFactory<CPointClientCommand>
 D typeinfo for CEntityFactory<CPointCommentaryNode>
 D typeinfo for CEntityFactory<CPointDevShotCamera>
 D typeinfo for CEntityFactory<CPointEntity>
 D typeinfo for CEntityFactory<CPointEntityFinder>
 D typeinfo for CEntityFactory<CPointGamestatsCounter>
 D typeinfo for CEntityFactory<CPointHurt>
 D typeinfo for CEntityFactory<CPointPlayerMoveConstraint>
 D typeinfo for CEntityFactory<CPointProximitySensor>
 D typeinfo for CEntityFactory<CPointServerCommand>
 D typeinfo for CEntityFactory<CPointSpotlight>
 D typeinfo for CEntityFactory<CPointTeleport>
 D typeinfo for CEntityFactory<CPointTemplate>
 D typeinfo for CEntityFactory<CPointVelocitySensor>
 D typeinfo for CEntityFactory<CPoseController>
 D typeinfo for CEntityFactory<CPostProcessController>
 D typeinfo for CEntityFactory<CPrecipitation>
 D typeinfo for CEntityFactory<CPrecipitationBlocker>
 D typeinfo for CEntityFactory<CPredictedViewModel>
 D typeinfo for CEntityFactory<CProjectedDecal>
 D typeinfo for CEntityFactory<CPropDoorRotatingBreakable>
 D typeinfo for CEntityFactory<CPropVehicle>
 D typeinfo for CEntityFactory<CPropVehicleDriveable>
 D typeinfo for CEntityFactory<CProp_Hallucination>
 D typeinfo for CEntityFactory<CPushable>
 D typeinfo for CEntityFactory<CRagGib>
 D typeinfo for CEntityFactory<CRagdollBoogie>
 D typeinfo for CEntityFactory<CRagdollConstraint>
 D typeinfo for CEntityFactory<CRagdollMagnet>
 D typeinfo for CEntityFactory<CRagdollManager>
 D typeinfo for CEntityFactory<CRagdollProp>
 D typeinfo for CEntityFactory<CRagdollPropAttached>
 D typeinfo for CEntityFactory<CRallyPoint>
 D typeinfo for CEntityFactory<CRevertSaved>
 D typeinfo for CEntityFactory<CRopeAnchor>
 D typeinfo for CEntityFactory<CRopeKeyframe>
 D typeinfo for CEntityFactory<CRotButton>
 D typeinfo for CEntityFactory<CRotDoor>
 D typeinfo for CEntityFactory<CRotorWashShooter>
 D typeinfo for CEntityFactory<CSCAR17>
 D typeinfo for CEntityFactory<CSceneEntity>
 D typeinfo for CEntityFactory<CSceneListManager>
 D typeinfo for CEntityFactory<CSceneManager>
 D typeinfo for CEntityFactory<CScriptedTarget>
 D typeinfo for CEntityFactory<CServerRagdollTrigger>
 D typeinfo for CEntityFactory<CShadowControl>
 D typeinfo for CEntityFactory<CShower>
 D typeinfo for CEntityFactory<CSimplePhysicsBrush>
 D typeinfo for CEntityFactory<CSimplePhysicsProp>
 D typeinfo for CEntityFactory<CSkyCamera>
 D typeinfo for CEntityFactory<CSkyboxSwapper>
 D typeinfo for CEntityFactory<CSlideshowDisplay>
 D typeinfo for CEntityFactory<CSmokeGrenade>
 D typeinfo for CEntityFactory<CSmokeGrenadeProjectile>
 D typeinfo for CEntityFactory<CSmokeStack>
 D typeinfo for CEntityFactory<CSoundEnt>
 D typeinfo for CEntityFactory<CSpotlightEnd>
 D typeinfo for CEntityFactory<CSprayCan>
 D typeinfo for CEntityFactory<CSprite>
 D typeinfo for CEntityFactory<CSpriteOriented>
 D typeinfo for CEntityFactory<CSpriteTrail>
 D typeinfo for CEntityFactory<CStatueProp>
 D typeinfo for CEntityFactory<CSteamJet>
 D typeinfo for CEntityFactory<CStripWeapons>
 D typeinfo for CEntityFactory<CSun>
 D typeinfo for CEntityFactory<CSunlightShadowControl>
 D typeinfo for CEntityFactory<CSurroundTest>
 D typeinfo for CEntityFactory<CTankTargetChange>
 D typeinfo for CEntityFactory<CTankTrainAI>
 D typeinfo for CEntityFactory<CTargetCDAudioRep>
 D typeinfo for CEntityFactory<CTargetChangeGravity>
 D typeinfo for CEntityFactory<CTeam>
 D typeinfo for CEntityFactory<CTeamSpawnPoint>
 D typeinfo for CEntityFactory<CTeamVehicleSpawnPoint>
 D typeinfo for CEntityFactory<CTempEntTester>
 D typeinfo for CEntityFactory<CTesla>
 D typeinfo for CEntityFactory<CTestEffect>
 D typeinfo for CEntityFactory<CTestTraceline>
 D typeinfo for CEntityFactory<CTest_ProxyToggle_Networkable>
 D typeinfo for CEntityFactory<CTextureToggle>
 D typeinfo for CEntityFactory<CTimerEntity>
 D typeinfo for CEntityFactory<CTonemapTrigger>
 D typeinfo for CEntityFactory<CTriggerAutoCrouch>
 D typeinfo for CEntityFactory<CTriggerBombReset>
 D typeinfo for CEntityFactory<CTriggerBrush>
 D typeinfo for CEntityFactory<CTriggerCDAudio>
 D typeinfo for CEntityFactory<CTriggerCamera>
 D typeinfo for CEntityFactory<CTriggerCameraMultiplayer>
 D typeinfo for CEntityFactory<CTriggerGravity>
 D typeinfo for CEntityFactory<CTriggerHierarchy>
 D typeinfo for CEntityFactory<CTriggerHurt>
 D typeinfo for CEntityFactory<CTriggerImpact>
 D typeinfo for CEntityFactory<CTriggerLook>
 D typeinfo for CEntityFactory<CTriggerMultiple>
 D typeinfo for CEntityFactory<CTriggerOnce>
 D typeinfo for CEntityFactory<CTriggerPlayerMovement>
 D typeinfo for CEntityFactory<CTriggerProximity>
 D typeinfo for CEntityFactory<CTriggerPush>
 D typeinfo for CEntityFactory<CTriggerRemove>
 D typeinfo for CEntityFactory<CTriggerSave>
 D typeinfo for CEntityFactory<CTriggerSoundscape>
 D typeinfo for CEntityFactory<CTriggerTeleport>
 D typeinfo for CEntityFactory<CTriggerToggleSave>
 D typeinfo for CEntityFactory<CTriggerVPhysicsMotion>
 D typeinfo for CEntityFactory<CTriggerViewProxy>
 D typeinfo for CEntityFactory<CTriggerVolume>
 D typeinfo for CEntityFactory<CTriggerWind>
 D typeinfo for CEntityFactory<CVGuiScreen>
 D typeinfo for CEntityFactory<CVoteController>
 D typeinfo for CEntityFactory<CWC_UpdateIgnoreList>
 D typeinfo for CEntityFactory<CWaterBullet>
 D typeinfo for CEntityFactory<CWaterLODControl>
 D typeinfo for CEntityFactory<CWeaponAWP>
 D typeinfo for CEntityFactory<CWeaponAug>
 D typeinfo for CEntityFactory<CWeaponBizon>
 D typeinfo for CEntityFactory<CWeaponCSBase>
 D typeinfo for CEntityFactory<CWeaponCSBaseGun>
 D typeinfo for CEntityFactory<CWeaponCycler>
 D typeinfo for CEntityFactory<CWeaponElite>
 D typeinfo for CEntityFactory<CWeaponFamas>
 D typeinfo for CEntityFactory<CWeaponFiveSeven>
 D typeinfo for CEntityFactory<CWeaponG3SG1>
 D typeinfo for CEntityFactory<CWeaponGalil>
 D typeinfo for CEntityFactory<CWeaponGalilAR>
 D typeinfo for CEntityFactory<CWeaponGlock>
 D typeinfo for CEntityFactory<CWeaponHKP2000>
 D typeinfo for CEntityFactory<CWeaponM249>
 D typeinfo for CEntityFactory<CWeaponM3>
 D typeinfo for CEntityFactory<CWeaponM4A1>
 D typeinfo for CEntityFactory<CWeaponMAC10>
 D typeinfo for CEntityFactory<CWeaponMP5Navy>
 D typeinfo for CEntityFactory<CWeaponMP7>
 D typeinfo for CEntityFactory<CWeaponMP9>
 D typeinfo for CEntityFactory<CWeaponMag7>
 D typeinfo for CEntityFactory<CWeaponNOVA>
 D typeinfo for CEntityFactory<CWeaponNegev>
 D typeinfo for CEntityFactory<CWeaponP228>
 D typeinfo for CEntityFactory<CWeaponP250>
 D typeinfo for CEntityFactory<CWeaponP90>
 D typeinfo for CEntityFactory<CWeaponSCAR20>
 D typeinfo for CEntityFactory<CWeaponSG550>
 D typeinfo for CEntityFactory<CWeaponSG552>
 D typeinfo for CEntityFactory<CWeaponSG556>
 D typeinfo for CEntityFactory<CWeaponSSG08>
 D typeinfo for CEntityFactory<CWeaponSawedoff>
 D typeinfo for CEntityFactory<CWeaponScout>
 D typeinfo for CEntityFactory<CWeaponTMP>
 D typeinfo for CEntityFactory<CWeaponTaser>
 D typeinfo for CEntityFactory<CWeaponTec9>
 D typeinfo for CEntityFactory<CWeaponUMP45>
 D typeinfo for CEntityFactory<CWeaponUSP>
 D typeinfo for CEntityFactory<CWeaponXM1014>
 D typeinfo for CEntityFactory<CWeightButton>
 D typeinfo for CEntityFactory<CWindowPane>
 D typeinfo for CEntityFactory<CWorld>
 D typeinfo for CEntityFactory<CWorldItem>
 D typeinfo for CEntityFactory<CWreckage>
 D typeinfo for CEntityFactory<DustTrail>
 D typeinfo for CEntityFactory<FilterDamageType>
 D typeinfo for CEntityFactory<FilterTeam>
 D typeinfo for CEntityFactory<MovieExplosion>
 D typeinfo for CEntityFactory<ParticleSmokeGrenade>
 D typeinfo for CEntityFactory<RocketTrail>
 D typeinfo for CEntityFactory<SmokeTrail>
 D typeinfo for CEntityFactory<SpawnPoint>
 D typeinfo for CEntityFactory<SporeExplosion>
 D typeinfo for CEntityFactory<SporeTrail>
 D typeinfo for CEntityFactoryDictionary
 D typeinfo for CEntityFlame
 D typeinfo for CEntityFreezing
 D typeinfo for CEntityListSystem
 D typeinfo for CEntityParticleTrail
 D typeinfo for CEntityParticleTrail::NetworkVar_m_Info
 D typeinfo for CEntitySaveRestoreBlockHandler
 D typeinfo for CEntitySaveUtils
 D typeinfo for CEntityTouchManager
 D typeinfo for CEnvAmbientLight
 D typeinfo for CEnvBeam
 D typeinfo for CEnvBeverage
 D typeinfo for CEnvDOFController
 D typeinfo for CEnvDetailController
 D typeinfo for CEnvDustPuff
 D typeinfo for CEnvEffectsScript
 D typeinfo for CEnvEntityIgniter
 D typeinfo for CEnvEntityMaker
 D typeinfo for CEnvExplosion
 D typeinfo for CEnvFade
 D typeinfo for CEnvFireSensor
 D typeinfo for CEnvFireSource
 D typeinfo for CEnvFunnel
 D typeinfo for CEnvGlobal
 D typeinfo for CEnvGunfire
 D typeinfo for CEnvHudHint
 D typeinfo for CEnvInstructorHint
 D typeinfo for CEnvLaser
 D typeinfo for CEnvLight
 D typeinfo for CEnvMicrophone
 D typeinfo for CEnvMuzzleFlash
 D typeinfo for CEnvParticleScript
 D typeinfo for CEnvPlayerSurfaceTrigger
 D typeinfo for CEnvProjectedTexture
 D typeinfo for CEnvQuadraticBeam
 D typeinfo for CEnvScreenEffect
 D typeinfo for CEnvScreenOverlay
 D typeinfo for CEnvShake
 D typeinfo for CEnvShooter
 D typeinfo for CEnvSoundscape
 D typeinfo for CEnvSoundscapeProxy
 D typeinfo for CEnvSoundscapeTriggerable
 D typeinfo for CEnvSpark
 D typeinfo for CEnvSplash
 D typeinfo for CEnvTilt
 D typeinfo for CEnvTonemapController
 D typeinfo for CEnvTracer
 D typeinfo for CEnvViewPunch
 D typeinfo for CEnvWind
 D typeinfo for CEnvWindShared
 D typeinfo for CEnvZoom
 D typeinfo for CEventLog
 D typeinfo for CEventQueueSaveLoadProxy
 D typeinfo for CEventQueue_SaveRestoreBlockHandler
 D typeinfo for CEventsSaveDataOps
 D typeinfo for CFilterClass
 D typeinfo for CFilterContext
 D typeinfo for CFilterEnemy
 D typeinfo for CFilterMassGreater
 D typeinfo for CFilterModel
 D typeinfo for CFilterMultiple
 D typeinfo for CFilterName
 D typeinfo for CFire
 D typeinfo for CFireCrackerBlast
 D typeinfo for CFireSmoke
 D typeinfo for CFireSphere
 D typeinfo for CFireTrail
 D typeinfo for CFish
 D typeinfo for CFishPool
 D typeinfo for CFlaggedEntitiesEnum
 D typeinfo for CFlashbang
 D typeinfo for CFlashbangProjectile
 D typeinfo for CFlexAnimationTrack
 D typeinfo for CFlexCycler
 D typeinfo for CFlexExpresser
 D typeinfo for CFlexExpresserShim
 D typeinfo for CFlexSceneFileManager
 D typeinfo for CFlextalkActor
 D typeinfo for CFloatProperty
 D typeinfo for CFmtStrN<1024, false>
 D typeinfo for CFmtStrN<256, false>
 D typeinfo for CFmtStrN<32, false>
 D typeinfo for CFmtStrN<80, false>
 D typeinfo for CFogController
 D typeinfo for CFogController::NetworkVar_m_fog
 D typeinfo for CFogSystem
 D typeinfo for CFogTrigger
 D typeinfo for CFogVolume
 D typeinfo for CFootstepControl
 D typeinfo for CFourWheelServerVehicle
 D typeinfo for CFourWheelVehiclePhysics
 D typeinfo for CFunFact_GenericEvalFunction
 D typeinfo for CFunFact_PlayerEvalFunction
 D typeinfo for CFunFact_StatBest
 D typeinfo for CFunFact_StatSum
 D typeinfo for CFuncAreaPortalBase
 D typeinfo for CFuncAreaPortalWindow
 D typeinfo for CFuncBlockDMSpawns
 D typeinfo for CFuncBrush
 D typeinfo for CFuncConveyor
 D typeinfo for CFuncIllusionary
 D typeinfo for CFuncInstanceIoProxy
 D typeinfo for CFuncLadder
 D typeinfo for CFuncLadderEndPoint
 D typeinfo for CFuncMonitor
 D typeinfo for CFuncMoveLinear
 D typeinfo for CFuncNavBlocker
 D typeinfo for CFuncNavObstruction
 D typeinfo for CFuncOccluder
 D typeinfo for CFuncPlat
 D typeinfo for CFuncPlatRot
 D typeinfo for CFuncReflectiveGlass
 D typeinfo for CFuncRotating
 D typeinfo for CFuncSmokeVolume
 D typeinfo for CFuncTankTrain
 D typeinfo for CFuncTrackAuto
 D typeinfo for CFuncTrackChange
 D typeinfo for CFuncTrackTrain
 D typeinfo for CFuncTrain
 D typeinfo for CFuncTrainControls
 D typeinfo for CFuncVPhysicsClip
 D typeinfo for CFuncVehicleClip
 D typeinfo for CFuncWall
 D typeinfo for CFuncWallToggle
 D typeinfo for CFunc_Dust
 D typeinfo for CFunc_DustCloud
 D typeinfo for CFunc_DustMotes
 D typeinfo for CFunc_LOD
 D typeinfo for CFunctor
 D typeinfo for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctorJob
 D typeinfo for CGCClientJobServerUpdateVersion
 D typeinfo for CGCClientJobServerWelcome
 D typeinfo for CGCClientSystem
 D typeinfo for CGCDev_NewItemRequestResponse
 D typeinfo for CGCItemAcknowledged
 D typeinfo for CGCMsgGetIPLocation
 D typeinfo for CGCMsgGetIPLocationResponse
 D typeinfo for CGCMsgGetSystemStats
 D typeinfo for CGCMsgGetSystemStatsResponse
 D typeinfo for CGCMsgMemCachedDelete
 D typeinfo for CGCMsgMemCachedGet
 D typeinfo for CGCMsgMemCachedGetResponse
 D typeinfo for CGCMsgMemCachedGetResponse_ValueTag
 D typeinfo for CGCMsgMemCachedSet
 D typeinfo for CGCMsgMemCachedSet_KeyPair
 D typeinfo for CGCMsgMemCachedStats
 D typeinfo for CGCMsgMemCachedStatsResponse
 D typeinfo for CGCMsgSQLStats
 D typeinfo for CGCMsgSQLStatsResponse
 D typeinfo for CGCMsgSystemStatsSchema
 D typeinfo for CGCStorePurchaseInit_LineItem
 D typeinfo for CGCSystemMsg_GetAccountDetails
 D typeinfo for CGCSystemMsg_GetAccountDetails_Response
 D typeinfo for CGCSystemMsg_GetPurchaseTrust_Request
 D typeinfo for CGCSystemMsg_GetPurchaseTrust_Response
 D typeinfo for CGCToGCMsgMasterAck
 D typeinfo for CGCToGCMsgMasterAck_Response
 D typeinfo for CGCToGCMsgMasterStartupComplete
 D typeinfo for CGCToGCMsgRouted
 D typeinfo for CGCToGCMsgRoutedReply
 D typeinfo for CGameDLL_ConVarAccessor
 D typeinfo for CGameEnd
 D typeinfo for CGameEventListener
 D typeinfo for CGameGibManager
 D typeinfo for CGameMoney
 D typeinfo for CGameMovement
 D typeinfo for CGamePlayerEquip
 D typeinfo for CGamePlayerTeam
 D typeinfo for CGamePlayerZone
 D typeinfo for CGameResponseSystem
 D typeinfo for CGameRoundEnd
 D typeinfo for CGameRules
 D typeinfo for CGameRulesProxy
 D typeinfo for CGameScore
 D typeinfo for CGameStringPool
 D typeinfo for CGameText
 D typeinfo for CGameTimescale
 D typeinfo for CGameUI
 D typeinfo for CGameWeaponManager
 D typeinfo for CGenericActor
 D typeinfo for CGenericCycler
 D typeinfo for CGenericFlexCycler
 D typeinfo for CGenericNPC
 D typeinfo for CGib
 D typeinfo for CGibShooter
 D typeinfo for CGlobalEntityList
 D typeinfo for CGlobalEventLog
 D typeinfo for CGlobalState
 D typeinfo for CGunTarget
 D typeinfo for CHEGrenade
 D typeinfo for CHEGrenadeProjectile
 D typeinfo for CHFontProperty
 D typeinfo for CHLTVDirector
 D typeinfo for CHandleDummy
 D typeinfo for CHandleTest
 D typeinfo for CHostage
 D typeinfo for CHostageCarriableProp
 D typeinfo for CHostageExpresserShim
 D typeinfo for CHostageRescueZone
 D typeinfo for CIKSaveRestoreOps
 D typeinfo for CIPLocationInfo
 D typeinfo for CImprovLocomotor
 D typeinfo for CIncendiaryGrenade
 D typeinfo for CInferno
 D typeinfo for CInfoCameraLink
 D typeinfo for CInfoGameEventProxy
 D typeinfo for CInfoInstructorHintBombTargetA
 D typeinfo for CInfoInstructorHintBombTargetB
 D typeinfo for CInfoInstructorHintHostageRescueZone
 D typeinfo for CInfoInstructorHintTarget
 D typeinfo for CInfoIntermission
 D typeinfo for CInfoLadderDismount
 D typeinfo for CInfoMassCenter
 D typeinfo for CInfoOverlayAccessor
 D typeinfo for CInfoRemarkable
 D typeinfo for CInfoTarget
 D typeinfo for CInfoViewParameters
 D typeinfo for CInstancedSceneEntity
 D typeinfo for CIntProperty
 D typeinfo for CInventoryManager
 D typeinfo for CItem
 D typeinfo for CItemAmmo
 D typeinfo for CItemAmmo338MAG
 D typeinfo for CItemAmmo357SIG
 D typeinfo for CItemAmmo357SIG_MIN
 D typeinfo for CItemAmmo357SIG_P250
 D typeinfo for CItemAmmo357SIG_SMALL
 D typeinfo for CItemAmmo45ACP
 D typeinfo for CItemAmmo50AE
 D typeinfo for CItemAmmo556MM
 D typeinfo for CItemAmmo556MM_BOX
 D typeinfo for CItemAmmo556MM_SMALL
 D typeinfo for CItemAmmo57MM
 D typeinfo for CItemAmmo762MM
 D typeinfo for CItemAmmo9MM
 D typeinfo for CItemAmmoBuckshot
 D typeinfo for CItemAssaultSuit
 D typeinfo for CItemDefuser
 D typeinfo for CItemGeneration
 D typeinfo for CItemKevlar
 D typeinfo for CItemNvgs
 D typeinfo for CItemSelectionCriteria::CCondition
 D typeinfo for CItemSelectionCriteria::CFloatCondition
 D typeinfo for CItemSelectionCriteria::CSetCondition
 D typeinfo for CItemSelectionCriteria::CStringCondition
 D typeinfo for CItemSoda
 D typeinfo for CJob
 D typeinfo for CKeepUpright
 D typeinfo for CKeyValuesDumpContextAsDevMsg
 D typeinfo for CKickIssue
 D typeinfo for CKnife
 D typeinfo for CKnifeGG
 D typeinfo for CLagCompensationManager
 D typeinfo for CLight
 D typeinfo for CLightGlow
 D typeinfo for CLoadBackupIssue
 D typeinfo for CLogicActiveAutosave
 D typeinfo for CLogicAuto
 D typeinfo for CLogicAutosave
 D typeinfo for CLogicBranch
 D typeinfo for CLogicBranchList
 D typeinfo for CLogicCase
 D typeinfo for CLogicCollisionPair
 D typeinfo for CLogicCompare
 D typeinfo for CLogicCompareInteger
 D typeinfo for CLogicEventListener
 D typeinfo for CLogicEventListenerItemEquip
 D typeinfo for CLogicLineToEntity
 D typeinfo for CLogicMeasureMovement
 D typeinfo for CLogicNavigation
 D typeinfo for CLogicPlayMovie
 D typeinfo for CLogicPlayerProxy
 D typeinfo for CLogicRandomOutputs
 D typeinfo for CLogicRegisterActivator
 D typeinfo for CLogicRelay
 D typeinfo for CLogicScript
 D typeinfo for CLogicalEntity
 D typeinfo for CMapInfo
 D typeinfo for CMapLoadEntityFilter
 D typeinfo for CMaterialModifyControl
 D typeinfo for CMathColorBlend
 D typeinfo for CMathCounter
 D typeinfo for CMathRemap
 D typeinfo for CMemZeroOnNew
 D typeinfo for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemoryLog
 D typeinfo for CMemoryStack
 D typeinfo for CMessage
 D typeinfo for CMessageEntity
 D typeinfo for CModelPrecacheSystem
 D typeinfo for CModelSoundsCache
 D typeinfo for CModelSoundsCacheSaver
 D typeinfo for CMolotovGrenade
 D typeinfo for CMolotovProjectile
 D typeinfo for CMomentaryRotButton
 D typeinfo for CMotorController
 D typeinfo for CMoveHelperServer
 D typeinfo for CMoveableCamera
 D typeinfo for CMovementSpeedMod
 D typeinfo for CMovieDisplay
 D typeinfo for CMsgAMAddFreeLicense
 D typeinfo for CMsgAMAddFreeLicenseResponse
 D typeinfo for CMsgAMFindAccounts
 D typeinfo for CMsgAMFindAccountsResponse
 D typeinfo for CMsgAMGetLicenses
 D typeinfo for CMsgAMGetLicensesResponse
 D typeinfo for CMsgAMGetUserGameStats
 D typeinfo for CMsgAMGetUserGameStatsResponse
 D typeinfo for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 D typeinfo for CMsgAMGetUserGameStatsResponse_Stats
 D typeinfo for CMsgAMGrantGuestPasses2
 D typeinfo for CMsgAMGrantGuestPasses2Response
 D typeinfo for CMsgAMSendEmail
 D typeinfo for CMsgAMSendEmailResponse
 D typeinfo for CMsgAMSendEmail_PersonaNameReplacementToken
 D typeinfo for CMsgAMSendEmail_ReplacementToken
 D typeinfo for CMsgAccountDetails
 D typeinfo for CMsgAdjustItemEquippedState
 D typeinfo for CMsgApplyAutograph
 D typeinfo for CMsgApplyEggEssence
 D typeinfo for CMsgApplyPennantUpgrade
 D typeinfo for CMsgApplyStatTrakSwap
 D typeinfo for CMsgApplySticker
 D typeinfo for CMsgApplyStrangePart
 D typeinfo for CMsgCStrike15Welcome
 D typeinfo for CMsgClientHello
 D typeinfo for CMsgClientWelcome
 D typeinfo for CMsgClientWelcome_Location
 D typeinfo for CMsgConVarValue
 D typeinfo for CMsgConnectionStatus
 D typeinfo for CMsgConsumableExhausted
 D typeinfo for CMsgDevNewItemRequest
 D typeinfo for CMsgGCBannedWord
 D typeinfo for CMsgGCBannedWordListRequest
 D typeinfo for CMsgGCBannedWordListResponse
 D typeinfo for CMsgGCCStrike15_v2_AccountPrivacySettings
 D typeinfo for CMsgGCCStrike15_v2_AccountPrivacySettings_Setting
 D typeinfo for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest
 D typeinfo for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse
 D typeinfo for CMsgGCCStrike15_v2_Client2GCTextMsg
 D typeinfo for CMsgGCCStrike15_v2_ClientCommendPlayer
 D typeinfo for CMsgGCCStrike15_v2_ClientReportPlayer
 D typeinfo for CMsgGCCStrike15_v2_ClientReportResponse
 D typeinfo for CMsgGCCStrike15_v2_ClientReportServer
 D typeinfo for CMsgGCCStrike15_v2_ClientRequestJoinFriendData
 D typeinfo for CMsgGCCStrike15_v2_ClientRequestJoinServerData
 D typeinfo for CMsgGCCStrike15_v2_ClientRequestPlayersProfile
 D typeinfo for CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends
 D typeinfo for CMsgGCCStrike15_v2_ClientSubmitSurveyVote
 D typeinfo for CMsgGCCStrike15_v2_ClientVarValueNotificationInfo
 D typeinfo for CMsgGCCStrike15_v2_GC2ClientTextMsg
 D typeinfo for CMsgGCCStrike15_v2_GC2ClientTournamentInfo
 D typeinfo for CMsgGCCStrike15_v2_GC2ServerReservationUpdate
 D typeinfo for CMsgGCCStrike15_v2_GiftsLeaderboardRequest
 D typeinfo for CMsgGCCStrike15_v2_GiftsLeaderboardResponse
 D typeinfo for CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry
 D typeinfo for CMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 D typeinfo for CMsgGCCStrike15_v2_MatchEndRunRewardDrops
 D typeinfo for CMsgGCCStrike15_v2_MatchList
 D typeinfo for CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames
 D typeinfo for CMsgGCCStrike15_v2_MatchListRequestFullGameInfo
 D typeinfo for CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser
 D typeinfo for CMsgGCCStrike15_v2_MatchListRequestRecentUserGames
 D typeinfo for CMsgGCCStrike15_v2_MatchListRequestTournamentGames
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingClient2GCHello
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingClient2ServerPing
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ClientHello
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingGCOperationalStats
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingServer2GCKick
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingServerMatchEnd
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingServerReservationResponse
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingServerRoundStats
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingStart
 D typeinfo for CMsgGCCStrike15_v2_MatchmakingStop
 D typeinfo for CMsgGCCStrike15_v2_PlayerEarnedRewardNotification
 D typeinfo for CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment
 D typeinfo for CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus
 D typeinfo for CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate
 D typeinfo for CMsgGCCStrike15_v2_PlayersProfile
 D typeinfo for CMsgGCCStrike15_v2_Predictions
 D typeinfo for CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick
 D typeinfo for CMsgGCCStrike15_v2_Server2GCClientValidate
 D typeinfo for CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure
 D typeinfo for CMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 D typeinfo for CMsgGCCStrike15_v2_ServerVarValueNotificationInfo
 D typeinfo for CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification
 D typeinfo for CMsgGCCStrike15_v2_WatchInfoUsers
 D typeinfo for CMsgGCCheckFriendship
 D typeinfo for CMsgGCCheckFriendship_Response
 D typeinfo for CMsgGCClientDisplayNotification
 D typeinfo for CMsgGCClientVersionUpdated
 D typeinfo for CMsgGCCollectItem
 D typeinfo for CMsgGCCstrike15_v2_ClientRequestNewMission
 D typeinfo for CMsgGCError
 D typeinfo for CMsgGCGetCommandList
 D typeinfo for CMsgGCGetCommandListResponse
 D typeinfo for CMsgGCGetEmailTemplate
 D typeinfo for CMsgGCGetEmailTemplateResponse
 D typeinfo for CMsgGCGetPartnerAccountLink
 D typeinfo for CMsgGCGetPartnerAccountLink_Response
 D typeinfo for CMsgGCGetPersonaNames
 D typeinfo for CMsgGCGetPersonaNames_Response
 D typeinfo for CMsgGCGetPersonaNames_Response_PersonaName
 D typeinfo for CMsgGCGiftedItems
 D typeinfo for CMsgGCHAccountVacStatusChange
 D typeinfo for CMsgGCHUpdateSession
 D typeinfo for CMsgGCHUpdateSession_ExtraField
 D typeinfo for CMsgGCIncrementKillCountResponse
 D typeinfo for CMsgGCItemPreviewItemBoughtNotification
 D typeinfo for CMsgGCMsgMasterSetClientMsgRouting
 D typeinfo for CMsgGCMsgMasterSetClientMsgRouting_Entry
 D typeinfo for CMsgGCMsgMasterSetClientMsgRouting_Response
 D typeinfo for CMsgGCMsgMasterSetDirectory
 D typeinfo for CMsgGCMsgMasterSetDirectory_Response
 D typeinfo for CMsgGCMsgMasterSetDirectory_SubGC
 D typeinfo for CMsgGCMsgMasterSetWebAPIRouting
 D typeinfo for CMsgGCMsgMasterSetWebAPIRouting_Entry
 D typeinfo for CMsgGCMsgMasterSetWebAPIRouting_Response
 D typeinfo for CMsgGCMsgSetOptions
 D typeinfo for CMsgGCMsgSetOptions_MessageRange
 D typeinfo for CMsgGCMsgWebAPIJobRequestForwardResponse
 D typeinfo for CMsgGCMultiplexMessage
 D typeinfo for CMsgGCNameItemNotification
 D typeinfo for CMsgGCReportAbuse
 D typeinfo for CMsgGCReportAbuseResponse
 D typeinfo for CMsgGCRequestAnnouncements
 D typeinfo for CMsgGCRequestAnnouncementsResponse
 D typeinfo for CMsgGCRequestSessionIP
 D typeinfo for CMsgGCRequestSessionIPResponse
 D typeinfo for CMsgGCRoutingInfo
 D typeinfo for CMsgGCServerVersionUpdated
 D typeinfo for CMsgGCShowItemsPickedUp
 D typeinfo for CMsgGCStorePurchaseCancel
 D typeinfo for CMsgGCStorePurchaseCancelResponse
 D typeinfo for CMsgGCStorePurchaseFinalize
 D typeinfo for CMsgGCStorePurchaseFinalizeResponse
 D typeinfo for CMsgGCStorePurchaseInit
 D typeinfo for CMsgGCStorePurchaseInitResponse
 D typeinfo for CMsgGCToGCBannedWordListBroadcast
 D typeinfo for CMsgGCToGCBannedWordListUpdated
 D typeinfo for CMsgGCToGCBroadcastConsoleCommand
 D typeinfo for CMsgGCToGCDirtyMultipleSDOCache
 D typeinfo for CMsgGCToGCDirtySDOCache
 D typeinfo for CMsgGCToGCIsTrustedServer
 D typeinfo for CMsgGCToGCIsTrustedServerResponse
 D typeinfo for CMsgGCToGCReloadVersions
 D typeinfo for CMsgGCToGCRequestPassportItemGrant
 D typeinfo for CMsgGCToGCUpdateSQLKeyValue
 D typeinfo for CMsgGCToGCWebAPIAccountChanged
 D typeinfo for CMsgGCUpdateSessionIP
 D typeinfo for CMsgGC_ServerQuestUpdateData
 D typeinfo for CMsgGC_ServerQuestUpdateData_PlayerQuestData
 D typeinfo for CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData
 D typeinfo for CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData
 D typeinfo for CMsgGameServerInfo
 D typeinfo for CMsgHttpRequest
 D typeinfo for CMsgHttpRequest_QueryParam
 D typeinfo for CMsgHttpRequest_RequestHeader
 D typeinfo for CMsgHttpResponse
 D typeinfo for CMsgHttpResponse_ResponseHeader
 D typeinfo for CMsgIncrementKillCountAttribute
 D typeinfo for CMsgInvitationCreated
 D typeinfo for CMsgInviteToParty
 D typeinfo for CMsgItemAcknowledged
 D typeinfo for CMsgItemAcknowledged__DEPRECATED
 D typeinfo for CMsgKickFromParty
 D typeinfo for CMsgLANServerAvailable
 D typeinfo for CMsgLeaveParty
 D typeinfo for CMsgNotificationOfSuspiciousActivity
 D typeinfo for CMsgNotificationOfSuspiciousActivity_MultipleGameInstances
 D typeinfo for CMsgNotifyWatchdog
 D typeinfo for CMsgPackageLicense
 D typeinfo for CMsgPartyInviteResponse
 D typeinfo for CMsgProtoBufHeader
 D typeinfo for CMsgQAngle
 D typeinfo for CMsgRGBA
 D typeinfo for CMsgReplayUploadedToYouTube
 D typeinfo for CMsgReplicateConVars
 D typeinfo for CMsgRequestInventoryRefresh
 D typeinfo for CMsgSDONoMemcached
 D typeinfo for CMsgSOCacheHaveVersion
 D typeinfo for CMsgSOCacheSubscribed
 D typeinfo for CMsgSOCacheSubscribed_SubscribedType
 D typeinfo for CMsgSOCacheSubscriptionCheck
 D typeinfo for CMsgSOCacheSubscriptionRefresh
 D typeinfo for CMsgSOCacheUnsubscribed
 D typeinfo for CMsgSOCacheVersion
 D typeinfo for CMsgSOIDOwner
 D typeinfo for CMsgSOMultipleObjects
 D typeinfo for CMsgSOMultipleObjects_SingleObject
 D typeinfo for CMsgSOSingleObject
 D typeinfo for CMsgSelectItemPresetForClass
 D typeinfo for CMsgSelectItemPresetForClassReply
 D typeinfo for CMsgServerAvailable
 D typeinfo for CMsgSetItemPositions
 D typeinfo for CMsgSetItemPositions_ItemPosition
 D typeinfo for CMsgSetPresetItemPosition
 D typeinfo for CMsgSortItems
 D typeinfo for CMsgStoreGetUserData
 D typeinfo for CMsgStoreGetUserDataResponse
 D typeinfo for CMsgSystemBroadcast
 D typeinfo for CMsgUpdateItemSchema
 D typeinfo for CMsgUseItem
 D typeinfo for CMsgVector
 D typeinfo for CMsgVector2D
 D typeinfo for CMsgWebAPIKey
 D typeinfo for CMsgWebAPIRequest
 D typeinfo for CMsg_CVars
 D typeinfo for CMsg_CVars_CVar
 D typeinfo for CMultiSource
 D typeinfo for CMultiplayRules
 D typeinfo for CMultiplayer_Expresser
 D typeinfo for CNETMsg_Disconnect
 D typeinfo for CNETMsg_File
 D typeinfo for CNETMsg_NOP
 D typeinfo for CNETMsg_PlayerAvatarData
 D typeinfo for CNETMsg_SetConVar
 D typeinfo for CNETMsg_SignonState
 D typeinfo for CNETMsg_SplitScreenUser
 D typeinfo for CNETMsg_StringCmd
 D typeinfo for CNETMsg_Tick
 D typeinfo for CNPC_Furniture
 D typeinfo for CNPC_HearDanger
 D typeinfo for CNPC_VehicleDriver
 D typeinfo for CNavArea
 D typeinfo for CNavAreaCriticalData
 D typeinfo for CNavMesh
 D typeinfo for CNextLevelIssue
 D typeinfo for CNoDefuseArea
 D typeinfo for CNodeEnt
 D typeinfo for CNodeFilter
 D typeinfo for CNonDamagingScan
 D typeinfo for CNotReadyForMatchIssue
 D typeinfo for CNotifyList
 D typeinfo for CNullEntity
 D typeinfo for COrnamentProp
 D typeinfo for COuttroStats
 D typeinfo for CPASAttenuationFilter
 D typeinfo for CPASFilter
 D typeinfo for CPVSFilter
 D typeinfo for CParticleFire
 D typeinfo for CParticleLight
 D typeinfo for CParticlePerformanceMonitor
 D typeinfo for CParticleSystem
 D typeinfo for CParticleSystemQuery
 D typeinfo for CPathCorner
 D typeinfo for CPathCornerCrash
 D typeinfo for CPathKeyFrame
 D typeinfo for CPathTrack
 D typeinfo for CPathfindNearestNodeFilter
 D typeinfo for CPauseMatchIssue
 D typeinfo for CPhysBallSocket
 D typeinfo for CPhysBox
 D typeinfo for CPhysBoxMultiplayer
 D typeinfo for CPhysConstraint
 D typeinfo for CPhysConstraintEvents
 D typeinfo for CPhysConstraintSystem
 D typeinfo for CPhysConvert
 D typeinfo for CPhysExplosion
 D typeinfo for CPhysFixed
 D typeinfo for CPhysForce
 D typeinfo for CPhysHinge
 D typeinfo for CPhysImpact
 D typeinfo for CPhysLength
 D typeinfo for CPhysMagnet
 D typeinfo for CPhysMotor
 D typeinfo for CPhysObjSaveRestoreOps
 D typeinfo for CPhysPulley
 D typeinfo for CPhysSaveRestoreBlockHandler
 D typeinfo for CPhysSlideConstraint
 D typeinfo for CPhysSphere
 D typeinfo for CPhysThruster
 D typeinfo for CPhysTorque
 D typeinfo for CPhysicsCannister
 D typeinfo for CPhysicsEntitySolver
 D typeinfo for CPhysicsGameTrace
 D typeinfo for CPhysicsHook
 D typeinfo for CPhysicsNPCSolver
 D typeinfo for CPhysicsPlayerCallback
 D typeinfo for CPhysicsProp
 D typeinfo for CPhysicsPropMultiplayer
 D typeinfo for CPhysicsPropRespawnable
 D typeinfo for CPhysicsPushedEntities
 D typeinfo for CPhysicsShake
 D typeinfo for CPhysicsSpring
 D typeinfo for CPhysicsWind
 D typeinfo for CPhysicsWire
 D typeinfo for CPlantedC4
 D typeinfo for CPlantedC4Training
 D typeinfo for CPlasma
 D typeinfo for CPlatTrigger
 D typeinfo for CPlayerInfo
 D typeinfo for CPlayerInfoManager
 D typeinfo for CPlayerInventory
 D typeinfo for CPlayerLocalData
 D typeinfo for CPlayerLocalData::NetworkVar_m_PlayerFog
 D typeinfo for CPlayerLocalData::NetworkVar_m_audio
 D typeinfo for CPlayerLocalData::NetworkVar_m_skybox3d
 D typeinfo for CPlayerMove
 D typeinfo for CPlayerResource
 D typeinfo for CPlayerState
 D typeinfo for CPlayerVoiceListener
 D typeinfo for CPluginBotManager
 D typeinfo for CPluginHelpersCheck
 D typeinfo for CPointAngleSensor
 D typeinfo for CPointAngularVelocitySensor
 D typeinfo for CPointBonusMapsAccessor
 D typeinfo for CPointBroadcastClientCommand
 D typeinfo for CPointCamera
 D typeinfo for CPointClientCommand
 D typeinfo for CPointCommentaryNode
 D typeinfo for CPointDevShotCamera
 D typeinfo for CPointEntity
 D typeinfo for CPointEntityFinder
 D typeinfo for CPointGamestatsCounter
 D typeinfo for CPointHurt
 D typeinfo for CPointPlayerMoveConstraint
 D typeinfo for CPointProximitySensor
 D typeinfo for CPointServerCommand
 D typeinfo for CPointSpotlight
 D typeinfo for CPointTeleport
 D typeinfo for CPointTemplate
 D typeinfo for CPointTemplatePrecacher
 D typeinfo for CPointVelocitySensor
 D typeinfo for CPoseController
 D typeinfo for CPostFrameNavigationHook
 D typeinfo for CPostProcessController
 D typeinfo for CPostProcessSystem
 D typeinfo for CPreMatchInfoData
 D typeinfo for CPreMatchInfoData_TeamStats
 D typeinfo for CPrecacheHandler
 D typeinfo for CPrecacheOtherList
 D typeinfo for CPrecacheRegister
 D typeinfo for CPrecipitation
 D typeinfo for CPrecipitationBlocker
 D typeinfo for CPredictedViewModel
 D typeinfo for CProjectedDecal
 D typeinfo for CPropData
 D typeinfo for CPropDoorRotating
 D typeinfo for CPropDoorRotatingBreakable
 D typeinfo for CPropVehicle
 D typeinfo for CPropVehicleDriveable
 D typeinfo for CProp_Hallucination
 D typeinfo for CProportionalFloatProperty
 D typeinfo for CProportionalIntProperty
 D typeinfo for CProportionalXPosProperty
 D typeinfo for CProportionalYPosProperty
 D typeinfo for CPublishedFileInfoHTTPRequest
 D typeinfo for CPushAwayEnumerator
 D typeinfo for CPushBlockerEnum
 D typeinfo for CPushable
 D typeinfo for CQueuedMatchmakingRematch
 D typeinfo for CRagGib
 D typeinfo for CRagdollBoogie
 D typeinfo for CRagdollConstraint
 D typeinfo for CRagdollLRURetirement
 D typeinfo for CRagdollMagnet
 D typeinfo for CRagdollManager
 D typeinfo for CRagdollProp
 D typeinfo for CRagdollPropAttached
 D typeinfo for CRallyPoint
 D typeinfo for CReadyForMatchIssue
 D typeinfo for CRecipientFilter
 D typeinfo for CRefCountServiceBase<true, CRefMT>
 D typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRegistry
 D typeinfo for CReliableBroadcastRecipientFilter
 D typeinfo for CRemarkableEntityList
 D typeinfo for CRespawnEntitiesFilter
 D typeinfo for CResponseQueueManager
 D typeinfo for CResponseRulesToEngineInterface
 D typeinfo for CRestartGameIssue
 D typeinfo for CRestore
 D typeinfo for CRevertSaved
 D typeinfo for CRopeAnchor
 D typeinfo for CRopeKeyframe
 D typeinfo for CRotButton
 D typeinfo for CRotDoor
 D typeinfo for CRotorWashShooter
 D typeinfo for CRuleBrushEntity
 D typeinfo for CRuleEntity
 D typeinfo for CRulePointEntity
 D typeinfo for CSCAR17
 D typeinfo for CSNavMesh
 D typeinfo for CSOEconClaimCode
 D typeinfo for CSOEconDefaultEquippedDefinitionInstanceClient
 D typeinfo for CSOEconGameAccountClient
 D typeinfo for CSOEconItem
 D typeinfo for CSOEconItemAttribute
 D typeinfo for CSOEconItemDropRateBonus
 D typeinfo for CSOEconItemEquipped
 D typeinfo for CSOEconItemEventTicket
 D typeinfo for CSOEconItemLeagueViewPass
 D typeinfo for CSOEconItemPresetInstance
 D typeinfo for CSOItemCriteria
 D typeinfo for CSOItemCriteriaCondition
 D typeinfo for CSOItemRecipe
 D typeinfo for CSOLobbyInvite
 D typeinfo for CSOPartyInvite
 D typeinfo for CSOSelectedItemPreset
 D typeinfo for CSVCMsg_BSPDecal
 D typeinfo for CSVCMsg_ClassInfo
 D typeinfo for CSVCMsg_ClassInfo_class_t
 D typeinfo for CSVCMsg_CmdKeyValues
 D typeinfo for CSVCMsg_CreateStringTable
 D typeinfo for CSVCMsg_CrosshairAngle
 D typeinfo for CSVCMsg_EncryptedData
 D typeinfo for CSVCMsg_EntityMsg
 D typeinfo for CSVCMsg_FixAngle
 D typeinfo for CSVCMsg_GameEvent
 D typeinfo for CSVCMsg_GameEventList
 D typeinfo for CSVCMsg_GameEventList_descriptor_t
 D typeinfo for CSVCMsg_GameEventList_key_t
 D typeinfo for CSVCMsg_GameEvent_key_t
 D typeinfo for CSVCMsg_GetCvarValue
 D typeinfo for CSVCMsg_Menu
 D typeinfo for CSVCMsg_PacketEntities
 D typeinfo for CSVCMsg_PaintmapData
 D typeinfo for CSVCMsg_Prefetch
 D typeinfo for CSVCMsg_Print
 D typeinfo for CSVCMsg_SendTable
 D typeinfo for CSVCMsg_SendTable_sendprop_t
 D typeinfo for CSVCMsg_ServerInfo
 D typeinfo for CSVCMsg_SetPause
 D typeinfo for CSVCMsg_SetView
 D typeinfo for CSVCMsg_Sounds
 D typeinfo for CSVCMsg_Sounds_sounddata_t
 D typeinfo for CSVCMsg_SplitScreen
 D typeinfo for CSVCMsg_TempEntities
 D typeinfo for CSVCMsg_UpdateStringTable
 D typeinfo for CSVCMsg_UserMessage
 D typeinfo for CSVCMsg_VoiceData
 D typeinfo for CSVCMsg_VoiceInit
 D typeinfo for CSave
 D typeinfo for CSaveRestoreBlockSet
 D typeinfo for CSceneEntity
 D typeinfo for CSceneFindMarkFilter
 D typeinfo for CSceneFindNearestMarkFilter
 D typeinfo for CSceneListManager
 D typeinfo for CSceneManager
 D typeinfo for CScenePrecacheSystem
 D typeinfo for CSceneTokenProcessor
 D typeinfo for CSchemaAttributeTypeBase<CAttribute_String>
 D typeinfo for CSchemaAttributeTypeBase<Vector>
 D typeinfo for CSchemaAttributeTypeBase<float>
 D typeinfo for CSchemaAttributeTypeBase<unsigned int>
 D typeinfo for CSchemaAttributeTypeProtobufBase<CAttribute_String>
 D typeinfo for CSchemaAttributeType_Default
 D typeinfo for CSchemaAttributeType_Float
 D typeinfo for CSchemaAttributeType_String
 D typeinfo for CSchemaAttributeType_Uint32
 D typeinfo for CSchemaAttributeType_Vector
 D typeinfo for CScrambleTeams
 D typeinfo for CScriptedTarget
 D typeinfo for CServerBenchmark
 D typeinfo for CServerDLLSharedAppSystems
 D typeinfo for CServerGameClients
 D typeinfo for CServerGameDLL
 D typeinfo for CServerGameEnts
 D typeinfo for CServerGameTags
 D typeinfo for CServerNetworkProperty
 D typeinfo for CServerOnlyEntity
 D typeinfo for CServerOnlyPointEntity
 D typeinfo for CServerRagdollTrigger
 D typeinfo for CServerTools
 D typeinfo for CShadowControl
 D typeinfo for CShower
 D typeinfo for CSimThinkManager
 D typeinfo for CSimplePhysicsBrush
 D typeinfo for CSimplePhysicsProp
 D typeinfo for CSingleUserRecipientFilter
 D typeinfo for CSkipKeys
 D typeinfo for CSkyCamera
 D typeinfo for CSkyboxSwapper
 D typeinfo for CSlideshowDisplay
 D typeinfo for CSmallTextEntry
 D typeinfo for CSmokeGrenade
 D typeinfo for CSmokeGrenadeProjectile
 D typeinfo for CSmokeStack
 D typeinfo for CSolidSetDefaults
 D typeinfo for CSoundControllerImp
 D typeinfo for CSoundEmitterSystem
 D typeinfo for CSoundEnt
 D typeinfo for CSoundEnvelopeController
 D typeinfo for CSoundPatchSaveRestoreOps
 D typeinfo for CSoundscapeSystem
 D typeinfo for CSpatialEntity
 D typeinfo for CSpotlightEnd
 D typeinfo for CSprayCan
 D typeinfo for CSprite
 D typeinfo for CSpriteOriented
 D typeinfo for CSpriteTrail
 D typeinfo for CStatueProp
 D typeinfo for CStdStringSaveRestoreOps
 D typeinfo for CSteamJet
 D typeinfo for CSteamWorksGameStatsServer
 D typeinfo for CSteamWorksGameStatsUploader
 D typeinfo for CStreamingUGCDownloader
 D typeinfo for CStringPool
 D typeinfo for CStringProperty
 D typeinfo for CStringTableSaveRestoreOps
 D typeinfo for CStripWeapons
 D typeinfo for CSun
 D typeinfo for CSunlightShadowControl
 D typeinfo for CSurrender
 D typeinfo for CSurroundTest
 D typeinfo for CSwapTeams
 D typeinfo for CTEArmorRicochet
 D typeinfo for CTEBSPDecal
 D typeinfo for CTEBaseBeam
 D typeinfo for CTEBeamEntPoint
 D typeinfo for CTEBeamEnts
 D typeinfo for CTEBeamFollow
 D typeinfo for CTEBeamLaser
 D typeinfo for CTEBeamPoints
 D typeinfo for CTEBeamRing
 D typeinfo for CTEBeamRingPoint
 D typeinfo for CTEBeamSpline
 D typeinfo for CTEBloodSprite
 D typeinfo for CTEBloodStream
 D typeinfo for CTEBreakModel
 D typeinfo for CTEBubbleTrail
 D typeinfo for CTEBubbles
 D typeinfo for CTEClientProjectile
 D typeinfo for CTEDecal
 D typeinfo for CTEDust
 D typeinfo for CTEDynamicLight
 D typeinfo for CTEEffectDispatch
 D typeinfo for CTEEnergySplash
 D typeinfo for CTEExplosion
 D typeinfo for CTEFireBullets
 D typeinfo for CTEFizz
 D typeinfo for CTEFootprintDecal
 D typeinfo for CTEFoundryHelpers
 D typeinfo for CTEGaussExplosion
 D typeinfo for CTEGlowSprite
 D typeinfo for CTEImpact
 D typeinfo for CTEKillPlayerAttachments
 D typeinfo for CTELargeFunnel
 D typeinfo for CTEMetalSparks
 D typeinfo for CTEMuzzleFlash
 D typeinfo for CTEParticleSystem
 D typeinfo for CTEPhysicsProp
 D typeinfo for CTEPlantBomb
 D typeinfo for CTEPlayerAnimEvent
 D typeinfo for CTEPlayerDecal
 D typeinfo for CTEProjectedDecal
 D typeinfo for CTERadioIcon
 D typeinfo for CTEShatterSurface
 D typeinfo for CTEShowLine
 D typeinfo for CTESmoke
 D typeinfo for CTESparks
 D typeinfo for CTESprite
 D typeinfo for CTESpriteSpray
 D typeinfo for CTEWorldDecal
 D typeinfo for CTankTargetChange
 D typeinfo for CTankTrainAI
 D typeinfo for CTargetCDAudioRep
 D typeinfo for CTargetChangeGravity
 D typeinfo for CTeam
 D typeinfo for CTeamRecipientFilter
 D typeinfo for CTeamSpawnPoint
 D typeinfo for CTeamVehicleSpawnPoint
 D typeinfo for CTeamplayRoundBasedRules
 D typeinfo for CTeamplayRules
 D typeinfo for CTempEntTester
 D typeinfo for CTempEntsSystem
 D typeinfo for CTemplate_SaveRestoreBlockHandler
 D typeinfo for CTemplatesHook
 D typeinfo for CTesla
 D typeinfo for CTestEffect
 D typeinfo for CTestTraceline
 D typeinfo for CTest_ProxyToggle_Networkable
 D typeinfo for CTextureIdProperty
 D typeinfo for CTextureToggle
 D typeinfo for CThinkContextsSaveDataOps
 D typeinfo for CThrustController
 D typeinfo for CTimerEntity
 D typeinfo for CTonemapSystem
 D typeinfo for CTonemapTrigger
 D typeinfo for CToolFrameworkServer
 D typeinfo for CTraceFilter
 D typeinfo for CTraceFilterAgainstEntityList
 D typeinfo for CTraceFilterDoor
 D typeinfo for CTraceFilterEntitiesOnly
 D typeinfo for CTraceFilterEntity
 D typeinfo for CTraceFilterEntityIgnoreOther
 D typeinfo for CTraceFilterLOS
 D typeinfo for CTraceFilterMelee
 D typeinfo for CTraceFilterNav
 D typeinfo for CTraceFilterNoCombatCharacters
 D typeinfo for CTraceFilterNoNPCsOrPlayer
 D typeinfo for CTraceFilterNoPlayers
 D typeinfo for CTraceFilterPlayersNPCs
 D typeinfo for CTraceFilterPlayersNPCsPhysicsProps
 D typeinfo for CTraceFilterPushFinal
 D typeinfo for CTraceFilterPushMove
 D typeinfo for CTraceFilterSimple
 D typeinfo for CTraceFilterSimpleList
 D typeinfo for CTraceFilterSkipNPCs
 D typeinfo for CTraceFilterSkipTwoEntities
 D typeinfo for CTraceFilterSkipTwoEntitiesAndCheckTeamMask
 D typeinfo for CTraceFilterSkipTwoEntitiesAndTeammates
 D typeinfo for CTraceFilterValidForDecal
 D typeinfo for CTraceFilterWalkableEntities
 D typeinfo for CTracePassFilter
 D typeinfo for CTriggerAutoCrouch
 D typeinfo for CTriggerBombReset
 D typeinfo for CTriggerBrush
 D typeinfo for CTriggerCDAudio
 D typeinfo for CTriggerCamera
 D typeinfo for CTriggerCameraMultiplayer
 D typeinfo for CTriggerGravity
 D typeinfo for CTriggerHierarchy
 D typeinfo for CTriggerHurt
 D typeinfo for CTriggerImpact
 D typeinfo for CTriggerLook
 D typeinfo for CTriggerMultiple
 D typeinfo for CTriggerOnce
 D typeinfo for CTriggerPlayerMovement
 D typeinfo for CTriggerProximity
 D typeinfo for CTriggerPush
 D typeinfo for CTriggerRemove
 D typeinfo for CTriggerSave
 D typeinfo for CTriggerSoundscape
 D typeinfo for CTriggerTeleport
 D typeinfo for CTriggerToggleSave
 D typeinfo for CTriggerTraceEnum
 D typeinfo for CTriggerVPhysicsMotion
 D typeinfo for CTriggerViewProxy
 D typeinfo for CTriggerVolume
 D typeinfo for CTriggerWind
 D typeinfo for CUnpauseMatchIssue
 D typeinfo for CUsePushFilter
 D typeinfo for CUserCmd
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCachedFileData<CModelSoundsCache>
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>
 D typeinfo for CUtlNoEscConversion
 D typeinfo for CUtlSymbolDataOps
 D typeinfo for CUtlVector<SMarketPurchases*, CUtlMemory<SMarketPurchases*, int> >
 D typeinfo for CUtlVector<SWeaponHitData*, CUtlMemory<SWeaponHitData*, int> >
 D typeinfo for CUtlVector<SWeaponMissData*, CUtlMemory<SWeaponMissData*, int> >
 D typeinfo for CUtlVector<attachedparticlecontrolpoint_t, CUtlMemory<attachedparticlecontrolpoint_t, int> >
 D typeinfo for CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >
 D typeinfo for CUtlVectorDataOps<CAI_InterestTarget, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D typeinfo for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 D typeinfo for CVGuiScreen
 D typeinfo for CVScriptGameSystem
 D typeinfo for CVScriptSaveRestoreBlockHandler
 D typeinfo for CVarBitVecSaveRestoreOps<CBitVec<32> >
 D typeinfo for CVariantSaveDataOps
 D typeinfo for CVehicleSoundsParser
 D typeinfo for CVisibilityMonitor
 D typeinfo for CVoiceGameMgr
 D typeinfo for CVoiceGameMgrHelper
 D typeinfo for CVoteController
 D typeinfo for CWC_UpdateIgnoreList
 D typeinfo for CWaterBullet
 D typeinfo for CWaterLODControl
 D typeinfo for CWeaponAWP
 D typeinfo for CWeaponAug
 D typeinfo for CWeaponBizon
 D typeinfo for CWeaponCSBase
 D typeinfo for CWeaponCSBaseGun
 D typeinfo for CWeaponCycler
 D typeinfo for CWeaponDatabase
 D typeinfo for CWeaponElite
 D typeinfo for CWeaponFamas
 D typeinfo for CWeaponFiveSeven
 D typeinfo for CWeaponG3SG1
 D typeinfo for CWeaponGalil
 D typeinfo for CWeaponGalilAR
 D typeinfo for CWeaponGlock
 D typeinfo for CWeaponHKP2000
 D typeinfo for CWeaponLOSFilter
 D typeinfo for CWeaponList
 D typeinfo for CWeaponM249
 D typeinfo for CWeaponM3
 D typeinfo for CWeaponM4A1
 D typeinfo for CWeaponMAC10
 D typeinfo for CWeaponMP5Navy
 D typeinfo for CWeaponMP7
 D typeinfo for CWeaponMP9
 D typeinfo for CWeaponMag7
 D typeinfo for CWeaponNOVA
 D typeinfo for CWeaponNegev
 D typeinfo for CWeaponP228
 D typeinfo for CWeaponP250
 D typeinfo for CWeaponP90
 D typeinfo for CWeaponSCAR20
 D typeinfo for CWeaponSG550
 D typeinfo for CWeaponSG552
 D typeinfo for CWeaponSG556
 D typeinfo for CWeaponSSG08
 D typeinfo for CWeaponSawedoff
 D typeinfo for CWeaponScout
 D typeinfo for CWeaponTMP
 D typeinfo for CWeaponTaser
 D typeinfo for CWeaponTec9
 D typeinfo for CWeaponUMP45
 D typeinfo for CWeaponUSP
 D typeinfo for CWeaponXM1014
 D typeinfo for CWeightButton
 D typeinfo for CWindowPane
 D typeinfo for CWorkshop_GetContributors_Request
 D typeinfo for CWorkshop_GetContributors_Response
 D typeinfo for CWorkshop_PopulateItemDescriptions_Request
 D typeinfo for CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock
 D typeinfo for CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription
 D typeinfo for CWorkshop_SetItemPaymentRules_Request
 D typeinfo for CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule
 D typeinfo for CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule
 D typeinfo for CWorkshop_SetItemPaymentRules_Response
 D typeinfo for CWorld
 D typeinfo for CWorldItem
 D typeinfo for CWreckage
 D typeinfo for CheckImage
 D typeinfo for ClientGamePrecachePrecache::CResourcePrecacher
 D typeinfo for ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate
 D typeinfo for ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse
 D typeinfo for ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 D typeinfo for ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 D typeinfo for ClientJob_EMsgGCGiftedItems
 D typeinfo for ClientPrecachePrecache::CResourcePrecacher
 D typeinfo for ColumnButton
 D typeinfo for ConCommand
 D typeinfo for ConCommandBase
 D typeinfo for ConVar
 D typeinfo for CountdownTimer
 D typeinfo for DefuseBombState
 D typeinfo for DetailedSearchStatistic
 D typeinfo for Dragger
 D typeinfo for DustTrail
 D typeinfo for EditNav_PrecachePrecache::CResourcePrecacher
 D typeinfo for EffectsPrecachePrecache::CResourcePrecacher
 D typeinfo for EntityParticleTrailInfo_t
 D typeinfo for EscapeFromBombState
 D typeinfo for EscapeFromFlamesState
 D typeinfo for FetchBombState
 D typeinfo for FileWeaponInfo_t
 D typeinfo for FilterDamageType
 D typeinfo for FilterTeam
 D typeinfo for FollowState
 D typeinfo for FunFactEvaluator
 D typeinfo for GCSDK::CGCClient
 D typeinfo for GCSDK::CGCClientJob
 D typeinfo for GCSDK::CGCClientSharedObjectCache
 D typeinfo for GCSDK::CGCClientSharedObjectTypeCache
 D typeinfo for GCSDK::CGCSOCacheSubscribedJob
 D typeinfo for GCSDK::CGCSOCacheSubscriptionCheck
 D typeinfo for GCSDK::CGCSOCacheUnsubscribedJob
 D typeinfo for GCSDK::CGCSOCreateJob
 D typeinfo for GCSDK::CGCSODestroyJob
 D typeinfo for GCSDK::CGCSOUpdateJob
 D typeinfo for GCSDK::CGCSOUpdateMultipleJob
 D typeinfo for GCSDK::CJob
 D typeinfo for GCSDK::CProtoBufGCClientSendHandler
 D typeinfo for GCSDK::CProtoBufMsg<CMsgClientHello>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgClientWelcome>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgConnectionStatus>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCGiftedItems>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgItemAcknowledged>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 D typeinfo for GCSDK::CProtoBufMsgBase
 D typeinfo for GCSDK::CProtoBufMsgBase::IProtoBufSendHandler
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPoolBase
 D typeinfo for GCSDK::CProtoBufNetPacket
 D typeinfo for GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>
 D typeinfo for GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>
 D typeinfo for GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>
 D typeinfo for GCSDK::CProtoBufSharedObjectBase
 D typeinfo for GCSDK::CRefCount
 D typeinfo for GCSDK::CSharedObject
 D typeinfo for GCSDK::CSharedObjectCache
 D typeinfo for GCSDK::CSharedObjectTypeCache
 D typeinfo for GCSDK::CStructNetPacket
 D typeinfo for GCSDK::CWorkThreadPool
 D typeinfo for GCSDK::IMsgNetPacket
 D typeinfo for GCSDK::ISharedObjectListener
 D typeinfo for GameServerPing
 D typeinfo for GameTypes
 D typeinfo for GlobalStatistics
 D typeinfo for HideState
 D typeinfo for HidingSpot
 D typeinfo for HuntState
 D typeinfo for IAI_BehaviorBridge
 D typeinfo for IAI_MovementSink
 D typeinfo for IAppSystem
 D typeinfo for IBaseCacheInfo
 D typeinfo for IBaseInterface
 D typeinfo for IBotController
 D typeinfo for IBotManager
 D typeinfo for IBreakableWithPropData
 D typeinfo for ICSPlayerAnimStateHelpers
 D typeinfo for IChoreoEventCallback
 D typeinfo for IChoreoStringPool
 D typeinfo for ICollideable
 D typeinfo for ICommandCallback
 D typeinfo for ICommandCompletionCallback
 D typeinfo for IConCommandBaseAccessor
 D typeinfo for IConVar
 D typeinfo for ICurveDataAccessor
 D typeinfo for IDecalEmitterSystem
 D typeinfo for IDrivableVehicle
 D typeinfo for IEconItemAttributeDefinition
 D typeinfo for IEconItemAttributeIterator
 D typeinfo for IEconItemDefinition
 D typeinfo for IEconItemInterface
 D typeinfo for IEconItemSchema
 D typeinfo for IEconItemSetDefinition
 D typeinfo for IEconItemSystem
 D typeinfo for IEconItemUntypedAttributeIterator
 D typeinfo for IEconLootListDefinition
 D typeinfo for IEconTool
 D typeinfo for IEffects
 D typeinfo for IEntityDataInstantiator
 D typeinfo for IEntityEnumerator
 D typeinfo for IEntityFactory
 D typeinfo for IEntityFactoryDictionary
 D typeinfo for IEntityFindFilter
 D typeinfo for IEntityListener
 D typeinfo for IEntitySaveUtils
 D typeinfo for IEventRegisterCallback
 D typeinfo for IGameEventListener2
 D typeinfo for IGameMovement
 D typeinfo for IGameStatTracker
 D typeinfo for IGameStatTracker::CGameStatList<SMarketPurchases>
 D typeinfo for IGameStatTracker::CGameStatList<SWeaponHitData>
 D typeinfo for IGameStatTracker::CGameStatList<SWeaponMissData>
 D typeinfo for IGameStatTracker::IStatContainer
 D typeinfo for IGameSystem
 D typeinfo for IGameSystemPerFrame
 D typeinfo for IGameTypes
 D typeinfo for IHLTVDirector
 D typeinfo for IHandleEntity
 D typeinfo for IHasAttributes
 D typeinfo for IHasOwner
 D typeinfo for IInventoryUpdateListener
 D typeinfo for IKeyValuesDumpContext
 D typeinfo for IKeyValuesDumpContextAsText
 D typeinfo for ILagCompensationManager
 D typeinfo for IMapEntityFilter
 D typeinfo for IMemoryInfo
 D typeinfo for IMotionEvent
 D typeinfo for IMoveHelper
 D typeinfo for IMultiplayerPhysics
 D typeinfo for INPCPassengerCarrier
 D typeinfo for INavAvoidanceObstacle
 D typeinfo for INearestNodeFilter
 D typeinfo for INodeListFilter
 D typeinfo for INotify
 D typeinfo for IParentPropInteraction
 D typeinfo for IParticleOperatorDefinition
 D typeinfo for IParticleSystemQuery
 D typeinfo for IPartitionEnumerator
 D typeinfo for IPartitionQueryCallback
 D typeinfo for IPhysSaveRestoreManager
 D typeinfo for IPhysicsCollisionEvent
 D typeinfo for IPhysicsCollisionSolver
 D typeinfo for IPhysicsConstraintEvent
 D typeinfo for IPhysicsGameTrace
 D typeinfo for IPhysicsObjectEvent
 D typeinfo for IPhysicsPlayerControllerEvent
 D typeinfo for IPlayerAnimState
 D typeinfo for IPlayerInfo
 D typeinfo for IPlayerInfoManager
 D typeinfo for IPlayerPickupVPhysics
 D typeinfo for IPluginHelpersCheck
 D typeinfo for IPositionWatcher
 D typeinfo for IPrecacheHandler
 D typeinfo for IPredictionSystem
 D typeinfo for IRecipientFilter
 D typeinfo for IRefCounted
 D typeinfo for IRegistry
 D typeinfo for IResourcePrecacher
 D typeinfo for IRestore
 D typeinfo for IRotorWashShooter
 D typeinfo for ISave
 D typeinfo for ISaveRestoreBlockHandler
 D typeinfo for ISaveRestoreBlockSet
 D typeinfo for ISaveRestoreOps
 D typeinfo for ISceneTokenProcessor
 D typeinfo for ISchemaAttributeType
 D typeinfo for ISchemaAttributeTypeBase<CAttribute_String>
 D typeinfo for ISchemaAttributeTypeBase<Vector>
 D typeinfo for ISchemaAttributeTypeBase<float>
 D typeinfo for ISchemaAttributeTypeBase<unsigned int>
 D typeinfo for IScorer
 D typeinfo for IScriptInstanceHelper
 D typeinfo for ISearchSurroundingAreasFunctor
 D typeinfo for IServerBenchmark
 D typeinfo for IServerDLLSharedAppSystems
 D typeinfo for IServerEntity
 D typeinfo for IServerGameClients
 D typeinfo for IServerGameDLL
 D typeinfo for IServerGameEnts
 D typeinfo for IServerGameTags
 D typeinfo for IServerNetworkable
 D typeinfo for IServerTools
 D typeinfo for IServerUnknown
 D typeinfo for IServerVehicle
 D typeinfo for ITempEntsSystem
 D typeinfo for IToolFrameworkServer
 D typeinfo for ITraceFilter
 D typeinfo for IVPhysicsKeyHandler
 D typeinfo for IVPhysicsWatcher
 D typeinfo for IVehicle
 D typeinfo for IVoiceGameMgrHelper
 D typeinfo for IWatcherCallback
 D typeinfo for IdleState
 D typeinfo for IntervalTimer
 D typeinfo for InvestigateNoiseState
 D typeinfo for IpAddressMask
 D typeinfo for MenuItemCheckImage
 D typeinfo for MoveToState
 D typeinfo for MovieExplosion
 D typeinfo for OpenDoorState
 D typeinfo for OperationalStatisticDescription
 D typeinfo for OperationalStatisticElement
 D typeinfo for OperationalStatisticsPacket
 D typeinfo for ParticleSmokeGrenade
 D typeinfo for PhysFrictionEffectPrecache::CResourcePrecacher
 D typeinfo for PickupHostageState
 D typeinfo for PlantBombState
 D typeinfo for PlayerCommendationInfo
 D typeinfo for PlayerMedalsInfo
 D typeinfo for PlayerRankingInfo
 D typeinfo for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 D typeinfo for RR::CApplyContextOperator
 D typeinfo for RR::CDecrementOperator
 D typeinfo for RR::CIncrementOperator
 D typeinfo for RR::CToggleOperator
 D typeinfo for RadioImage
 D typeinfo for ResponseRules::CResponseSystem
 D typeinfo for ResponseRules::IEngineEmulator
 D typeinfo for ResponseRules::IResponseFilter
 D typeinfo for ResponseRules::IResponseSystem
 D typeinfo for RocketTrail
 D typeinfo for SendProp
 D typeinfo for ServerHltvInfo
 D typeinfo for SmokeTrail
 D typeinfo for SpawnPoint
 D typeinfo for SporeExplosion
 D typeinfo for SporeTrail
 D typeinfo for TournamentEvent
 D typeinfo for TournamentMatchSetup
 D typeinfo for TournamentPlayer
 D typeinfo for TournamentTeam
 D typeinfo for UseEntityState
 D typeinfo for WatchableMatchInfo
 D typeinfo for WeaponResourcesPrecache::CResourcePrecacher
 D typeinfo for audioparams_t
 D typeinfo for base_vector_t
 D typeinfo for chickenPrecache::CResourcePrecacher
 D typeinfo for decoy_projectilePrecache::CResourcePrecacher
 D typeinfo for entityflamePrecache::CResourcePrecacher
 D typeinfo for env_entity_freezingPrecache::CResourcePrecacher
 D typeinfo for fire_cracker_blastPrecache::CResourcePrecacher
 D typeinfo for flashbang_projectilePrecache::CResourcePrecacher
 D typeinfo for fogparams_t
 D typeinfo for fogplayerparams_t
 D typeinfo for hegrenade_projectilePrecache::CResourcePrecacher
 D typeinfo for hostage_carriable_propPrecache::CResourcePrecacher
 D typeinfo for infernoPrecache::CResourcePrecacher
 D typeinfo for item_defuserPrecache::CResourcePrecacher
 D typeinfo for locksound_t
 D typeinfo for molotov_projectilePrecache::CResourcePrecacher
 D typeinfo for planted_c4Precache::CResourcePrecacher
 D typeinfo for planted_c4_trainingPrecache::CResourcePrecacher
 D typeinfo for playerPrecache::CResourcePrecacher
 D typeinfo for sky3dparams_t
 D typeinfo for sky3dparams_t::NetworkVar_fog
 D typeinfo for smokegrenade_projectilePrecache::CResourcePrecacher
 D typeinfo for spraycanPrecache::CResourcePrecacher
 D typeinfo for vehicle_crashsound_t
 D typeinfo for vehicle_gear_t
 D typeinfo for vehiclesounds_t
 D typeinfo for vgui::AnimatingImagePanel
 D typeinfo for vgui::AnimationController
 D typeinfo for vgui::BaseTooltip
 D typeinfo for vgui::BuildGroup
 D typeinfo for vgui::BuildModeDialog
 D typeinfo for vgui::Button
 D typeinfo for vgui::CBitmapImagePanel
 D typeinfo for vgui::CTreeViewListControl
 D typeinfo for vgui::CheckButton
 D typeinfo for vgui::CircularProgressBar
 D typeinfo for vgui::ClickPanel
 D typeinfo for vgui::ComboBox
 D typeinfo for vgui::ComboBoxButton
 D typeinfo for vgui::ContinuousProgressBar
 D typeinfo for vgui::CvarToggleCheckButton<ConVarRef>
 D typeinfo for vgui::Divider
 D typeinfo for vgui::EditablePanel
 D typeinfo for vgui::ExpandButton
 D typeinfo for vgui::FocusNavGroup
 D typeinfo for vgui::Frame
 D typeinfo for vgui::FrameButton
 D typeinfo for vgui::FrameSystemButton
 D typeinfo for vgui::GraphPanel
 D typeinfo for vgui::IClientPanel
 D typeinfo for vgui::IImage
 D typeinfo for vgui::IPanelAnimationPropertyConverter
 D typeinfo for vgui::Image
 D typeinfo for vgui::ImagePanel
 D typeinfo for vgui::Label
 D typeinfo for vgui::ListPanel
 D typeinfo for vgui::ListViewItem
 D typeinfo for vgui::ListViewPanel
 D typeinfo for vgui::Menu
 D typeinfo for vgui::MenuBar
 D typeinfo for vgui::MenuButton
 D typeinfo for vgui::MenuItem
 D typeinfo for vgui::MenuSeparator
 D typeinfo for vgui::MessageBox
 D typeinfo for vgui::Panel
 D typeinfo for vgui::PanelListPanel
 D typeinfo for vgui::ProgressBar
 D typeinfo for vgui::RadioButton
 D typeinfo for vgui::RichText
 D typeinfo for vgui::RichTextInterior
 D typeinfo for vgui::ScalableImagePanel
 D typeinfo for vgui::ScrollBar
 D typeinfo for vgui::ScrollBarSlider
 D typeinfo for vgui::TextEntry
 D typeinfo for vgui::TextImage
 D typeinfo for vgui::TextTooltip
 D typeinfo for vgui::ToggleButton
 D typeinfo for vgui::TreeNode
 D typeinfo for vgui::TreeNodeDropPanel
 D typeinfo for vgui::TreeNodeImage
 D typeinfo for vgui::TreeNodeText
 D typeinfo for vgui::TreeView
 D typeinfo for vgui::TreeViewSubPanel
 D typeinfo for vgui::URLLabel
 D typeinfo for vgui_screenPrecache::CResourcePrecacher
 D typeinfo for weapon_c4Precache::CResourcePrecacher
 D typeinfo for weapon_decoyPrecache::CResourcePrecacher
 D typeinfo for weapon_flashbangPrecache::CResourcePrecacher
 D typeinfo for weapon_hegrenadePrecache::CResourcePrecacher
 D typeinfo for weapon_incgrenadePrecache::CResourcePrecacher
 D typeinfo for weapon_knifePrecache::CResourcePrecacher
 D typeinfo for weapon_knifeggPrecache::CResourcePrecacher
 D typeinfo for weapon_molotovPrecache::CResourcePrecacher
 D typeinfo for weapon_smokegrenadePrecache::CResourcePrecacher
 D unsigned int GetAttributeTypeUniqueIdentifier<CAttribute_String>()::s_unUniqueCounter
 D unsigned int GetAttributeTypeUniqueIdentifier<Vector>()::s_unUniqueCounter
 D unsigned int GetAttributeTypeUniqueIdentifier<float>()::s_unUniqueCounter
 D unsigned int GetAttributeTypeUniqueIdentifier<unsigned int>()::s_unUniqueCounter
 D variantFuncs
 D variant_t::Entity() const::hNull
 D variant_t::m_SaveBool
 D variant_t::m_SaveColor
 D variant_t::m_SaveEHandle
 D variant_t::m_SaveFloat
 D variant_t::m_SaveInt
 D variant_t::m_SavePositionVector
 D variant_t::m_SaveString
 D variant_t::m_SaveVector
 D vehicle_crashsound_t::m_DataMap
 D vehicle_gear_t::m_DataMap
 D vehiclesound_parsenames
 D vehiclesounds_t::m_DataMap
 D vgui::AnimatingImagePanel::ChainToAnimationMap()::chained
 D vgui::AnimatingImagePanel::ChainToMap()::chained
 D vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D vgui::AnimatingImagePanel::KB_ChainToMap()::chained
 D vgui::AnimationController::ChainToAnimationMap()::chained
 D vgui::AnimationController::ChainToMap()::chained
 D vgui::AnimationController::GetKBMap()::s_pMap
 D vgui::AnimationController::GetMessageMap()::s_pMap
 D vgui::AnimationController::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::ChainToAnimationMap()::chained
 D vgui::BuildModeDialog::ChainToMap()::chained
 D vgui::BuildModeDialog::GetKBMap()::s_pMap
 D vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D vgui::BuildModeDialog::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::PanelMessageFunc_ApplyDataToControls::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoCopy::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoPaste::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoUndo::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_EnableSaveButton::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnChangeChild::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnCreateNewControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnDeletePanel::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnPanelMoved::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnReloadLocalization::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnSetClipboardText::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnShowNewControlMenu::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextKillFocus::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_SetActiveControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_ShutdownBuildMode::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_StoreUndoSettings::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_UpdateControlData::InitVar()::bAdded
 D vgui::Button::ChainToAnimationMap()::chained
 D vgui::Button::ChainToMap()::chained
 D vgui::Button::GetKBMap()::s_pMap
 D vgui::Button::GetMessageMap()::s_pMap
 D vgui::Button::KB_ChainToMap()::chained
 D vgui::Button::PanelMessageFunc_DoClick::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnHotkey::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsCurrentDefaultButton::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsDefaultButton::InitVar()::bAdded
 D vgui::CTreeViewListControl::ChainToAnimationMap()::chained
 D vgui::CTreeViewListControl::ChainToMap()::chained
 D vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D vgui::CTreeViewListControl::KB_ChainToMap()::chained
 D vgui::CheckButton::ChainToAnimationMap()::chained
 D vgui::CheckButton::ChainToMap()::chained
 D vgui::CheckButton::GetKBMap()::s_pMap
 D vgui::CheckButton::GetMessageMap()::s_pMap
 D vgui::CheckButton::KB_ChainToMap()::chained
 D vgui::CheckButton::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D vgui::CircularProgressBar::ChainToAnimationMap()::chained
 D vgui::CircularProgressBar::ChainToMap()::chained
 D vgui::CircularProgressBar::GetKBMap()::s_pMap
 D vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D vgui::CircularProgressBar::KB_ChainToMap()::chained
 D vgui::ClickPanel::ChainToAnimationMap()::chained
 D vgui::ClickPanel::ChainToMap()::chained
 D vgui::ClickPanel::GetKBMap()::s_pMap
 D vgui::ClickPanel::GetMessageMap()::s_pMap
 D vgui::ClickPanel::KB_ChainToMap()::chained
 D vgui::ComboBox::ChainToAnimationMap()::chained
 D vgui::ComboBox::ChainToMap()::chained
 D vgui::ComboBox::GetKBMap()::s_pMap
 D vgui::ComboBox::GetMessageMap()::s_pMap
 D vgui::ComboBox::KB_ChainToMap()::chained
 D vgui::ComboBox::PanelMessageFunc_ActivateItem::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ContinuousProgressBar::ChainToAnimationMap()::chained
 D vgui::ContinuousProgressBar::ChainToMap()::chained
 D vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D vgui::ContinuousProgressBar::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToAnimationMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnApplyChanges::InitVar()::bAdded
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnButtonChecked::InitVar()::bAdded
 D vgui::Divider::ChainToAnimationMap()::chained
 D vgui::Divider::ChainToMap()::chained
 D vgui::Divider::GetKBMap()::s_pMap
 D vgui::Divider::GetMessageMap()::s_pMap
 D vgui::Divider::KB_ChainToMap()::chained
 D vgui::EditablePanel::ChainToAnimationMap()::chained
 D vgui::EditablePanel::ChainToMap()::chained
 D vgui::EditablePanel::GetKBMap()::s_pMap
 D vgui::EditablePanel::GetMessageMap()::s_pMap
 D vgui::EditablePanel::KB_ChainToMap()::chained
 D vgui::EditablePanel::PanelMessageFunc_OnCurrentDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnFindDefaultButton::InitVar()::bAdded
 D vgui::ExpandButton::ChainToAnimationMap()::chained
 D vgui::ExpandButton::ChainToMap()::chained
 D vgui::ExpandButton::GetKBMap()::s_pMap
 D vgui::ExpandButton::GetMessageMap()::s_pMap
 D vgui::ExpandButton::KB_ChainToMap()::chained
 D vgui::ExpandButton::PanelMessageFunc_OnExpanded::InitVar()::bAdded
 D vgui::Frame::ChainToAnimationMap()::chained
 D vgui::Frame::ChainToMap()::chained
 D vgui::Frame::GetKBMap()::s_pMap
 D vgui::Frame::GetMessageMap()::s_pMap
 D vgui::Frame::KB_ChainToMap()::chained
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetXOverride::InitVar()::bAdded
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetYOverride::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_Close::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_CloseModal::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalFlashWindow::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalSetTitle::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnCloseFrameButtonPressed::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnMinimize::InitVar()::bAdded
 D vgui::FrameSystemButton::ChainToAnimationMap()::chained
 D vgui::FrameSystemButton::ChainToMap()::chained
 D vgui::FrameSystemButton::GetKBMap()::s_pMap
 D vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D vgui::FrameSystemButton::KB_ChainToMap()::chained
 D vgui::GraphPanel::ChainToAnimationMap()::chained
 D vgui::GraphPanel::ChainToMap()::chained
 D vgui::GraphPanel::GetKBMap()::s_pMap
 D vgui::GraphPanel::GetMessageMap()::s_pMap
 D vgui::GraphPanel::KB_ChainToMap()::chained
 D vgui::ImagePanel::ChainToAnimationMap()::chained
 D vgui::ImagePanel::ChainToMap()::chained
 D vgui::ImagePanel::GetKBMap()::s_pMap
 D vgui::ImagePanel::GetMessageMap()::s_pMap
 D vgui::ImagePanel::KB_ChainToMap()::chained
 D vgui::Label::ChainToAnimationMap()::chained
 D vgui::Label::ChainToMap()::chained
 D vgui::Label::GetKBMap()::s_pMap
 D vgui::Label::GetMessageMap()::s_pMap
 D vgui::Label::KB_ChainToMap()::chained
 D vgui::Label::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnHotkeyPressed::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ListPanel::ChainToAnimationMap()::chained
 D vgui::ListPanel::ChainToMap()::chained
 D vgui::ListPanel::GetKBMap()::s_pMap
 D vgui::ListPanel::GetMessageMap()::s_pMap
 D vgui::ListPanel::KB_ChainToMap()::chained
 D vgui::ListPanel::PanelMessageFunc_OnColumnResized::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSetSortColumn::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnToggleColumnVisible::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OpenColumnChoiceMenu::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_ResizeColumnToContents::InitVar()::bAdded
 D vgui::ListViewItem::ChainToAnimationMap()::chained
 D vgui::ListViewItem::ChainToMap()::chained
 D vgui::ListViewItem::GetKBMap()::s_pMap
 D vgui::ListViewItem::GetMessageMap()::s_pMap
 D vgui::ListViewItem::KB_ChainToMap()::chained
 D vgui::ListViewPanel::ChainToAnimationMap()::chained
 D vgui::ListViewPanel::ChainToMap()::chained
 D vgui::ListViewPanel::GetKBMap()::s_pMap
 D vgui::ListViewPanel::GetMessageMap()::s_pMap
 D vgui::ListViewPanel::KB_ChainToMap()::chained
 D vgui::ListViewPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::Menu::ChainToAnimationMap()::chained
 D vgui::Menu::ChainToMap()::chained
 D vgui::Menu::GetKBMap()::s_pMap
 D vgui::Menu::GetMessageMap()::s_pMap
 D vgui::Menu::KB_ChainToMap()::chained
 D vgui::Menu::PanelMessageFunc_OnCursorEnteredMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnCursorExitedMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::MenuBar::ChainToAnimationMap()::chained
 D vgui::MenuBar::ChainToMap()::chained
 D vgui::MenuBar::GetKBMap()::s_pMap
 D vgui::MenuBar::GetMessageMap()::s_pMap
 D vgui::MenuBar::KB_ChainToMap()::chained
 D vgui::MenuBar::PanelMessageFunc_OnCursorEnteredMenuButton::InitVar()::bAdded
 D vgui::MenuBar::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuButton::ChainToAnimationMap()::chained
 D vgui::MenuButton::ChainToMap()::chained
 D vgui::MenuButton::GetKBMap()::s_pMap
 D vgui::MenuButton::GetMessageMap()::s_pMap
 D vgui::MenuButton::KB_ChainToMap()::chained
 D vgui::MenuButton::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuButton::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuItem::ChainToAnimationMap()::chained
 D vgui::MenuItem::ChainToMap()::chained
 D vgui::MenuItem::GetKBMap()::s_pMap
 D vgui::MenuItem::GetMessageMap()::s_pMap
 D vgui::MenuItem::KB_ChainToMap()::chained
 D vgui::MenuItem::PanelMessageFunc_ArmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_DisarmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuSeparator::ChainToAnimationMap()::chained
 D vgui::MenuSeparator::ChainToMap()::chained
 D vgui::MenuSeparator::GetKBMap()::s_pMap
 D vgui::MenuSeparator::GetMessageMap()::s_pMap
 D vgui::MenuSeparator::KB_ChainToMap()::chained
 D vgui::MessageBox::ChainToAnimationMap()::chained
 D vgui::MessageBox::ChainToMap()::chained
 D vgui::MessageBox::GetKBMap()::s_pMap
 D vgui::MessageBox::GetMessageMap()::s_pMap
 D vgui::MessageBox::KB_ChainToMap()::chained
 D vgui::MessageBox::PanelMessageFunc_OnShutdownRequest::InitVar()::bAdded
 D vgui::Panel::ChainToAnimationMap()::chained
 D vgui::Panel::ChainToMap()::chained
 D vgui::Panel::GetKBMap()::s_pMap
 D vgui::Panel::GetMessageMap()::s_pMap
 D vgui::Panel::KB_ChainToMap()::chained
 D vgui::Panel::PanelAnimationVar_m_flAlpha::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId1::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId2::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId3::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId4::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nPaintBackgroundType::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorEntered::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorExited::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalInvalidateLayout::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseDoublePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMousePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseTriplePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseWheeled::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMove::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCommand::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnDelete::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseCaptureLost::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateFrom::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateTo::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnRequestFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnSetFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_Repaint::InitVar()::bAdded
 D vgui::Panel::m_MessageMap
 D vgui::Panel::m_PanelMap
 D vgui::PanelListPanel::ChainToAnimationMap()::chained
 D vgui::PanelListPanel::ChainToMap()::chained
 D vgui::PanelListPanel::GetKBMap()::s_pMap
 D vgui::PanelListPanel::GetMessageMap()::s_pMap
 D vgui::PanelListPanel::KB_ChainToMap()::chained
 D vgui::PanelListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ProgressBar::ChainToAnimationMap()::chained
 D vgui::ProgressBar::ChainToMap()::chained
 D vgui::ProgressBar::GetKBMap()::s_pMap
 D vgui::ProgressBar::GetMessageMap()::s_pMap
 D vgui::ProgressBar::KB_ChainToMap()::chained
 D vgui::ProgressBar::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::ProgressBar::PanelMessageFunc_SetProgress::InitVar()::bAdded
 D vgui::RadioButton::ChainToAnimationMap()::chained
 D vgui::RadioButton::ChainToMap()::chained
 D vgui::RadioButton::GetKBMap()::s_pMap
 D vgui::RadioButton::GetMessageMap()::s_pMap
 D vgui::RadioButton::KB_ChainToMap()::chained
 D vgui::RadioButton::PanelMessageFunc_OnRadioButtonChecked::InitVar()::bAdded
 D vgui::RichText::ChainToAnimationMap()::chained
 D vgui::RichText::ChainToMap()::chained
 D vgui::RichText::GetKBMap()::s_pMap
 D vgui::RichText::GetMessageMap()::s_pMap
 D vgui::RichText::KB_ChainToMap()::chained
 D vgui::RichText::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBar::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBarDirect::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnClickPanel::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::RichTextInterior::ChainToAnimationMap()::chained
 D vgui::RichTextInterior::ChainToMap()::chained
 D vgui::RichTextInterior::GetKBMap()::s_pMap
 D vgui::RichTextInterior::GetMessageMap()::s_pMap
 D vgui::RichTextInterior::KB_ChainToMap()::chained
 D vgui::ScalableImagePanel::ChainToAnimationMap()::chained
 D vgui::ScalableImagePanel::ChainToMap()::chained
 D vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D vgui::ScalableImagePanel::KB_ChainToMap()::chained
 D vgui::ScrollBar::ChainToAnimationMap()::chained
 D vgui::ScrollBar::ChainToMap()::chained
 D vgui::ScrollBar::GetKBMap()::s_pMap
 D vgui::ScrollBar::GetMessageMap()::s_pMap
 D vgui::ScrollBar::KB_ChainToMap()::chained
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideButtons::InitVar()::bAdded
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideSelf::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderReleased::InitVar()::bAdded
 D vgui::ScrollBarSlider::ChainToAnimationMap()::chained
 D vgui::ScrollBarSlider::ChainToMap()::chained
 D vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D vgui::ScrollBarSlider::KB_ChainToMap()::chained
 D vgui::Segments
 D vgui::TextEntry::ChainToAnimationMap()::chained
 D vgui::TextEntry::ChainToMap()::chained
 D vgui::TextEntry::GetKBMap()::s_pMap
 D vgui::TextEntry::GetMessageMap()::s_pMap
 D vgui::TextEntry::KB_ChainToMap()::chained
 D vgui::TextEntry::PanelMessageFunc_CompositionString::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ConversionModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_HideIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_LanguageChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_Paste::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_SentenceModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ShowIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_UpdateIMECandidates::InitVar()::bAdded
 D vgui::ToggleButton::ChainToAnimationMap()::chained
 D vgui::ToggleButton::ChainToMap()::chained
 D vgui::ToggleButton::GetKBMap()::s_pMap
 D vgui::ToggleButton::GetMessageMap()::s_pMap
 D vgui::ToggleButton::KB_ChainToMap()::chained
 D vgui::TreeNode::ChainToAnimationMap()::chained
 D vgui::TreeNode::ChainToMap()::chained
 D vgui::TreeNode::GetKBMap()::s_pMap
 D vgui::TreeNode::GetMessageMap()::s_pMap
 D vgui::TreeNode::KB_ChainToMap()::chained
 D vgui::TreeNode::PanelMessageFunc_OnLabelChanged::InitVar()::bAdded
 D vgui::TreeNodeDropPanel::ChainToAnimationMap()::chained
 D vgui::TreeNodeDropPanel::ChainToMap()::chained
 D vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D vgui::TreeNodeDropPanel::KB_ChainToMap()::chained
 D vgui::TreeNodeText::ChainToAnimationMap()::chained
 D vgui::TreeNodeText::ChainToMap()::chained
 D vgui::TreeNodeText::GetKBMap()::s_pMap
 D vgui::TreeNodeText::GetMessageMap()::s_pMap
 D vgui::TreeNodeText::KB_ChainToMap()::chained
 D vgui::TreeNodeText::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::TreeView::ChainToAnimationMap()::chained
 D vgui::TreeView::ChainToMap()::chained
 D vgui::TreeView::GetKBMap()::s_pMap
 D vgui::TreeView::GetMessageMap()::s_pMap
 D vgui::TreeView::KB_ChainToMap()::chained
 D vgui::TreeView::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::URLLabel::ChainToAnimationMap()::chained
 D vgui::URLLabel::ChainToMap()::chained
 D vgui::URLLabel::GetKBMap()::s_pMap
 D vgui::URLLabel::GetMessageMap()::s_pMap
 D vgui::URLLabel::KB_ChainToMap()::chained
 D vtable for AccountActivity
 D vtable for AttackState
 D vtable for BotBombStatusMeme
 D vtable for BotBombsiteStatusMeme
 D vtable for BotDefendHereMeme
 D vtable for BotFollowMeme
 D vtable for BotHeardNoiseMeme
 D vtable for BotHelpMeme
 D vtable for BotHostageBeingTakenMeme
 D vtable for BotRequestReportMeme
 D vtable for BotWarnSniperMeme
 D vtable for BotWhereBombMeme
 D vtable for BuyState
 D vtable for CAISound
 D vtable for CAI_AllySpeechManager
 D vtable for CAI_AssaultGoal
 D vtable for CAI_BaseActor
 D vtable for CAI_BaseNPC
 D vtable for CAI_BattleLine
 D vtable for CAI_BlendedMotor
 D vtable for CAI_ChangeHintGroup
 D vtable for CAI_ChangeTarget
 D vtable for CAI_DynamicLink
 D vtable for CAI_DynamicLinkController
 D vtable for CAI_EnemiesListSaveRestoreOps
 D vtable for CAI_Expresser
 D vtable for CAI_ExpresserWithFollowup
 D vtable for CAI_FightFromCoverGoal
 D vtable for CAI_FollowGoal
 D vtable for CAI_GoalEntity
 D vtable for CAI_Hint
 D vtable for CAI_LeadGoal
 D vtable for CAI_LeadGoal_Weapon
 D vtable for CAI_LocalNavigator
 D vtable for CAI_Motor
 D vtable for CAI_MoveAndShootOverlay
 D vtable for CAI_MoveProbe
 D vtable for CAI_NavInHintGroupFilter
 D vtable for CAI_Navigator
 D vtable for CAI_Network
 D vtable for CAI_NetworkManager
 D vtable for CAI_Pathfinder
 D vtable for CAI_RadialLinkController
 D vtable for CAI_SaveRestoreBlockHandler
 D vtable for CAI_ScriptConditions
 D vtable for CAI_ScriptedSchedule
 D vtable for CAI_ScriptedSentence
 D vtable for CAI_ScriptedSequence
 D vtable for CAI_SensedObjectsManager
 D vtable for CAI_Senses
 D vtable for CAI_SpeechFilter
 D vtable for CAI_StandoffGoal
 D vtable for CAI_SystemHook
 D vtable for CAI_TacticalServices
 D vtable for CAI_TestHull
 D vtable for CAK47
 D vtable for CActivityDataOps
 D vtable for CAimTargetManager
 D vtable for CAmbientGeneric
 D vtable for CAmmoDef
 D vtable for CAnchorList
 D vtable for CAreaPortal
 D vtable for CAssaultPoint
 D vtable for CAttributeContainer
 D vtable for CAttributeContainer::NetworkVar_m_Item
 D vtable for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>
 D vtable for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>
 D vtable for CAttributeIterator_GetTypedAttributeValue<Vector, Vector>
 D vtable for CAttributeIterator_GetTypedAttributeValue<float, float>
 D vtable for CAttributeIterator_GetTypedAttributeValue<unsigned int, float>
 D vtable for CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>
 D vtable for CAttributeIterator_HasAttribute
 D vtable for CAttributeList
 D vtable for CAttributeManager
 D vtable for CAttribute_String
 D vtable for CAutoGameSystem
 D vtable for CAutoGameSystemPerFrame
 D vtable for CBaseAnimating
 D vtable for CBaseAnimatingOverlay
 D vtable for CBaseButton
 D vtable for CBaseCSGrenade
 D vtable for CBaseCSGrenadeProjectile
 D vtable for CBaseCombatCharacter
 D vtable for CBaseCombatWeapon
 D vtable for CBaseDMStart
 D vtable for CBaseDoor
 D vtable for CBaseEntity
 D vtable for CBaseEntity::NetworkVar_m_Collision
 D vtable for CBaseEntityClassList
 D vtable for CBaseEntityList
 D vtable for CBaseEntityScriptInstanceHelper
 D vtable for CBaseFilter
 D vtable for CBaseFire
 D vtable for CBaseFlex
 D vtable for CBaseGameStats
 D vtable for CBaseGameStats_Driver
 D vtable for CBaseGrenade
 D vtable for CBaseIssue
 D vtable for CBaseMoveBehavior
 D vtable for CBaseMultiplayerPlayer
 D vtable for CBaseParticleEntity
 D vtable for CBasePlatTrain
 D vtable for CBasePlayer
 D vtable for CBasePlayer::NetworkVar_m_Local
 D vtable for CBasePlayer::NetworkVar_m_PlayerFog
 D vtable for CBasePlayer::NetworkVar_pl
 D vtable for CBasePlayerAnimState
 D vtable for CBaseProjectile
 D vtable for CBasePropDoor
 D vtable for CBaseServerVehicle
 D vtable for CBaseTempEntity
 D vtable for CBaseToggle
 D vtable for CBaseTrigger
 D vtable for CBaseViewModel
 D vtable for CBaseWorkshopHTTPRequest
 D vtable for CBeam
 D vtable for CBeamSpotlight
 D vtable for CBlendingCycler
 D vtable for CBlood
 D vtable for CBloodSplat
 D vtable for CBombShieldTraceEnum
 D vtable for CBombTarget
 D vtable for CBoneFollower
 D vtable for CBoolProperty
 D vtable for CBot<CCSPlayer>
 D vtable for CBotBreakableEnumerator
 D vtable for CBotCmd
 D vtable for CBotDoorEnumerator
 D vtable for CBotManager
 D vtable for CBreakModelsPrecached
 D vtable for CBreakParser
 D vtable for CBreakable
 D vtable for CBreakableProp
 D vtable for CBreakableSurface
 D vtable for CBroadcastRecipientFilter
 D vtable for CBubbling
 D vtable for CBuildModeNavCombo
 D vtable for CBulletsTraceFilter
 D vtable for CBuyZone
 D vtable for CC4
 D vtable for CCLCMsg_BaselineAck
 D vtable for CCLCMsg_ClientInfo
 D vtable for CCLCMsg_CmdKeyValues
 D vtable for CCLCMsg_FileCRCCheck
 D vtable for CCLCMsg_ListenEvents
 D vtable for CCLCMsg_LoadingProgress
 D vtable for CCLCMsg_Move
 D vtable for CCLCMsg_RespondCvarValue
 D vtable for CCLCMsg_SplitPlayerConnect
 D vtable for CCLCMsg_VoiceData
 D vtable for CCSAmmoDef
 D vtable for CCSBot
 D vtable for CCSBotManager
 D vtable for CCSBotManager::BombBeepEvent
 D vtable for CCSBotManager::BombDefuseAbortEvent
 D vtable for CCSBotManager::BombDefuseBeginEvent
 D vtable for CCSBotManager::BombDefusedEvent
 D vtable for CCSBotManager::BombExplodedEvent
 D vtable for CCSBotManager::BombPickedUpEvent
 D vtable for CCSBotManager::BombPlantedEvent
 D vtable for CCSBotManager::BreakBreakableEvent
 D vtable for CCSBotManager::BreakPropEvent
 D vtable for CCSBotManager::BulletImpactEvent
 D vtable for CCSBotManager::DecoyDetonateEvent
 D vtable for CCSBotManager::DecoyFiringEvent
 D vtable for CCSBotManager::DoorMovingEvent
 D vtable for CCSBotManager::FlashbangDetonateEvent
 D vtable for CCSBotManager::GrenadeBounceEvent
 D vtable for CCSBotManager::HEGrenadeDetonateEvent
 D vtable for CCSBotManager::HostageFollowsEvent
 D vtable for CCSBotManager::HostageRescuedAllEvent
 D vtable for CCSBotManager::MolotovDetonateEvent
 D vtable for CCSBotManager::NavBlockedEvent
 D vtable for CCSBotManager::PlayerDeathEvent
 D vtable for CCSBotManager::PlayerFallDamageEvent
 D vtable for CCSBotManager::PlayerFootstepEvent
 D vtable for CCSBotManager::PlayerRadioEvent
 D vtable for CCSBotManager::RoundEndEvent
 D vtable for CCSBotManager::RoundFreezeEndEvent
 D vtable for CCSBotManager::RoundStartEvent
 D vtable for CCSBotManager::ServerShutdownEvent
 D vtable for CCSBotManager::SmokeGrenadeDetonateEvent
 D vtable for CCSBotManager::WeaponFireEvent
 D vtable for CCSBotManager::WeaponFireOnEmptyEvent
 D vtable for CCSBotManager::WeaponReloadEvent
 D vtable for CCSBotManager::WeaponZoomEvent
 D vtable for CCSEntitySpotting
 D vtable for CCSEventLog
 D vtable for CCSFunFactMgr
 D vtable for CCSGCServerSystem
 D vtable for CCSGameMovement
 D vtable for CCSGameRules
 D vtable for CCSGameRulesProxy
 D vtable for CCSGameStats
 D vtable for CCSHLTVDirector
 D vtable for CCSHostageAnimState
 D vtable for CCSInventoryManager
 D vtable for CCSMLightManager
 D vtable for CCSNavArea
 D vtable for CCSPlayer
 D vtable for CCSPlayerAnimState
 D vtable for CCSPlayerInventory
 D vtable for CCSPlayerMove
 D vtable for CCSPlayerResource
 D vtable for CCSRagdoll
 D vtable for CCSTeam
 D vtable for CCSUsrMsg_AchievementEvent
 D vtable for CCSUsrMsg_AdjustMoney
 D vtable for CCSUsrMsg_AmmoDenied
 D vtable for CCSUsrMsg_BarTime
 D vtable for CCSUsrMsg_CallVoteFailed
 D vtable for CCSUsrMsg_ClientInfo
 D vtable for CCSUsrMsg_CloseCaption
 D vtable for CCSUsrMsg_CloseCaptionDirect
 D vtable for CCSUsrMsg_CurrentTimescale
 D vtable for CCSUsrMsg_Damage
 D vtable for CCSUsrMsg_DesiredTimescale
 D vtable for CCSUsrMsg_DisconnectToLobby
 D vtable for CCSUsrMsg_DisplayInventory
 D vtable for CCSUsrMsg_Fade
 D vtable for CCSUsrMsg_GameTitle
 D vtable for CCSUsrMsg_Geiger
 D vtable for CCSUsrMsg_GlowPropTurnOff
 D vtable for CCSUsrMsg_HintText
 D vtable for CCSUsrMsg_HudMsg
 D vtable for CCSUsrMsg_HudText
 D vtable for CCSUsrMsg_ItemDrop
 D vtable for CCSUsrMsg_ItemPickup
 D vtable for CCSUsrMsg_KeyHintText
 D vtable for CCSUsrMsg_KillCam
 D vtable for CCSUsrMsg_MarkAchievement
 D vtable for CCSUsrMsg_MatchEndConditions
 D vtable for CCSUsrMsg_MatchStatsUpdate
 D vtable for CCSUsrMsg_PlayerStatsUpdate
 D vtable for CCSUsrMsg_PlayerStatsUpdate_Stat
 D vtable for CCSUsrMsg_ProcessSpottedEntityUpdate
 D vtable for CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate
 D vtable for CCSUsrMsg_RadioText
 D vtable for CCSUsrMsg_RawAudio
 D vtable for CCSUsrMsg_ReloadEffect
 D vtable for CCSUsrMsg_ReportHit
 D vtable for CCSUsrMsg_RequestState
 D vtable for CCSUsrMsg_ResetHud
 D vtable for CCSUsrMsg_RoundBackupFilenames
 D vtable for CCSUsrMsg_Rumble
 D vtable for CCSUsrMsg_SayText
 D vtable for CCSUsrMsg_SayText2
 D vtable for CCSUsrMsg_SendAudio
 D vtable for CCSUsrMsg_SendLastKillerDamageToClient
 D vtable for CCSUsrMsg_SendPlayerItemDrops
 D vtable for CCSUsrMsg_SendPlayerItemFound
 D vtable for CCSUsrMsg_ServerRankRevealAll
 D vtable for CCSUsrMsg_ServerRankUpdate
 D vtable for CCSUsrMsg_ServerRankUpdate_RankUpdate
 D vtable for CCSUsrMsg_Shake
 D vtable for CCSUsrMsg_ShowMenu
 D vtable for CCSUsrMsg_StopSpectatorMode
 D vtable for CCSUsrMsg_TextMsg
 D vtable for CCSUsrMsg_Train
 D vtable for CCSUsrMsg_VGUIMenu
 D vtable for CCSUsrMsg_VGUIMenu_Subkey
 D vtable for CCSUsrMsg_VoiceMask
 D vtable for CCSUsrMsg_VoiceMask_PlayerMask
 D vtable for CCSUsrMsg_VoteFailed
 D vtable for CCSUsrMsg_VotePass
 D vtable for CCSUsrMsg_VoteSetup
 D vtable for CCSUsrMsg_VoteStart
 D vtable for CCSUsrMsg_WarmupHasEnded
 D vtable for CCSUsrMsg_XRankGet
 D vtable for CCSUsrMsg_XRankUpd
 D vtable for CCSWeaponInfo
 D vtable for CCStrike15ItemDefinition
 D vtable for CCStrike15ItemSchema
 D vtable for CCStrike15ItemSystem
 D vtable for CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>
 D vtable for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>
 D vtable for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>
 D vtable for CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>
 D vtable for CCallback<CGCClientSystem, SteamServersConnected_t, true>
 D vtable for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 D vtable for CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>
 D vtable for CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>
 D vtable for CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>
 D vtable for CCascadeLight
 D vtable for CChangeLevel
 D vtable for CChangeLevelIssue
 D vtable for CCheckClient
 D vtable for CChicken
 D vtable for CChildOperatorDefinition
 D vtable for CChoreoEvent
 D vtable for CChoreoScene
 D vtable for CChoreoStringPool
 D vtable for CCleanupDefaultRelationShips
 D vtable for CClientHeaderOverwatchEvidence
 D vtable for CCollectionInfoHTTPRequest
 D vtable for CCollisionEvent
 D vtable for CCollisionProperty
 D vtable for CColorCorrection
 D vtable for CColorCorrectionSystem
 D vtable for CColorCorrectionVolume
 D vtable for CColorProperty
 D vtable for CCombatCharVisCache
 D vtable for CCommentaryAuto
 D vtable for CCommentarySystem
 D vtable for CCommentaryViewPosition
 D vtable for CCommentary_SaveRestoreBlockHandler
 D vtable for CConceptHistoriesDataOps
 D vtable for CConstantForceController
 D vtable for CConstraintAnchor
 D vtable for CCopyRecipientFilter
 D vtable for CCopyableUtlVector<attachedparticlecontrolpoint_t>
 D vtable for CCopyableUtlVector<unsigned int>
 D vtable for CCredits
 D vtable for CDEagle
 D vtable for CDataGCCStrike15_v2_MatchInfo
 D vtable for CDataGCCStrike15_v2_MatchmakingLockedInMatch
 D vtable for CDataGCCStrike15_v2_TournamentGroup
 D vtable for CDataGCCStrike15_v2_TournamentGroupTeam
 D vtable for CDataGCCStrike15_v2_TournamentInfo
 D vtable for CDataGCCStrike15_v2_TournamentMatchDraft
 D vtable for CDataGCCStrike15_v2_TournamentMatchDraft_Entry
 D vtable for CDataGCCStrike15_v2_TournamentSection
 D vtable for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D vtable for CDataManagerBase
 D vtable for CDataObjectAccessSystem
 D vtable for CDebugHistory
 D vtable for CDecal
 D vtable for CDecalEmitterSystem
 D vtable for CDecoyGrenade
 D vtable for CDecoyProjectile
 D vtable for CDedicatedServerWorkshopManager
 D vtable for CDefaultAccessor
 D vtable for CDefaultParticleSystemQuery
 D vtable for CDefaultResponseSystem
 D vtable for CDefaultResponseSystemSaveRestoreBlockHandler
 D vtable for CDetailBlocker
 D vtable for CDevShotSystem
 D vtable for CDirtySpatialPartitionEntityList
 D vtable for CDllDemandLoader
 D vtable for CDragDropHelperPanel
 D vtable for CDynamicLight
 D vtable for CDynamicProp
 D vtable for CEconCraftingRecipeDefinition
 D vtable for CEconDefaultEquippedDefinitionInstanceClient
 D vtable for CEconEntity
 D vtable for CEconEntity::NetworkVar_m_AttributeManager
 D vtable for CEconItem
 D vtable for CEconItemAttribute
 D vtable for CEconItemAttributeDefinition
 D vtable for CEconItemAttributeIterator_ApplyAttributeFloat
 D vtable for CEconItemDefinition
 D vtable for CEconItemDropRateBonus
 D vtable for CEconItemEventTicket
 D vtable for CEconItemPreviewDataBlock
 D vtable for CEconItemPreviewDataBlock_Sticker
 D vtable for CEconItemSchema
 D vtable for CEconItemSetDefinition
 D vtable for CEconItemSystem
 D vtable for CEconItemView
 D vtable for CEconItemView::NetworkVar_m_AttributeList
 D vtable for CEconItemView::NetworkVar_m_NetworkedDynamicAttributesForDemos
 D vtable for CEconLootListDefinition
 D vtable for CEconStyleInfo
 D vtable for CEconTool_BackpackExpander
 D vtable for CEconTool_ClaimCode
 D vtable for CEconTool_Collection
 D vtable for CEconTool_CrateKey
 D vtable for CEconTool_CustomizeTexture
 D vtable for CEconTool_Default
 D vtable for CEconTool_DescTag
 D vtable for CEconTool_DuelingMinigame
 D vtable for CEconTool_Gift
 D vtable for CEconTool_NameTag
 D vtable for CEconTool_Noisemaker
 D vtable for CEconTool_PaintCan
 D vtable for CEconTool_PaintKit
 D vtable for CEconTool_Recipe
 D vtable for CEconTool_SeasonPass
 D vtable for CEconTool_StatTrakSwap
 D vtable for CEconTool_Sticker
 D vtable for CEconTool_WeddingRing
 D vtable for CEconTool_WrappedGift
 D vtable for CEffectsServer
 D vtable for CEmbers
 D vtable for CEmptyConVar
 D vtable for CEnableMotionFixup
 D vtable for CEntFireAutoCompletionFunctor
 D vtable for CEntityBlocker
 D vtable for CEntityClassList<CPhysicsNPCSolver>
 D vtable for CEntityClassList<CPointCamera>
 D vtable for CEntityClassList<CSkyCamera>
 D vtable for CEntityDataInstantiator<CWatcherList>
 D vtable for CEntityDataInstantiator<ModelScale>
 D vtable for CEntityDataInstantiator<StepSimulationData>
 D vtable for CEntityDataInstantiator<groundlink_t>
 D vtable for CEntityDataInstantiator<physicspushlist_t>
 D vtable for CEntityDataInstantiator<touchlink_t>
 D vtable for CEntityDataInstantiator<vphysicsupdateai_t>
 D vtable for CEntityDissolve
 D vtable for CEntityFactory<CAISound>
 D vtable for CEntityFactory<CAI_AllySpeechManager>
 D vtable for CEntityFactory<CAI_AssaultGoal>
 D vtable for CEntityFactory<CAI_BattleLine>
 D vtable for CEntityFactory<CAI_ChangeHintGroup>
 D vtable for CEntityFactory<CAI_ChangeTarget>
 D vtable for CEntityFactory<CAI_DynamicLink>
 D vtable for CEntityFactory<CAI_DynamicLinkController>
 D vtable for CEntityFactory<CAI_FightFromCoverGoal>
 D vtable for CEntityFactory<CAI_FollowGoal>
 D vtable for CEntityFactory<CAI_Hint>
 D vtable for CEntityFactory<CAI_LeadGoal>
 D vtable for CEntityFactory<CAI_LeadGoal_Weapon>
 D vtable for CEntityFactory<CAI_NetworkManager>
 D vtable for CEntityFactory<CAI_RadialLinkController>
 D vtable for CEntityFactory<CAI_ScriptConditions>
 D vtable for CEntityFactory<CAI_ScriptedSchedule>
 D vtable for CEntityFactory<CAI_ScriptedSentence>
 D vtable for CEntityFactory<CAI_ScriptedSequence>
 D vtable for CEntityFactory<CAI_SpeechFilter>
 D vtable for CEntityFactory<CAI_StandoffGoal>
 D vtable for CEntityFactory<CAI_TestHull>
 D vtable for CEntityFactory<CAK47>
 D vtable for CEntityFactory<CAmbientGeneric>
 D vtable for CEntityFactory<CAreaPortal>
 D vtable for CEntityFactory<CAssaultPoint>
 D vtable for CEntityFactory<CBaseButton>
 D vtable for CEntityFactory<CBaseCSGrenade>
 D vtable for CEntityFactory<CBaseDMStart>
 D vtable for CEntityFactory<CBaseDoor>
 D vtable for CEntityFactory<CBaseEntity>
 D vtable for CEntityFactory<CBaseFilter>
 D vtable for CEntityFactory<CBaseFlex>
 D vtable for CEntityFactory<CBaseGrenade>
 D vtable for CEntityFactory<CBaseMoveBehavior>
 D vtable for CEntityFactory<CBaseProjectile>
 D vtable for CEntityFactory<CBaseTrigger>
 D vtable for CEntityFactory<CBaseViewModel>
 D vtable for CEntityFactory<CBeam>
 D vtable for CEntityFactory<CBeamSpotlight>
 D vtable for CEntityFactory<CBlendingCycler>
 D vtable for CEntityFactory<CBlood>
 D vtable for CEntityFactory<CBombTarget>
 D vtable for CEntityFactory<CBoneFollower>
 D vtable for CEntityFactory<CBreakable>
 D vtable for CEntityFactory<CBreakableSurface>
 D vtable for CEntityFactory<CBubbling>
 D vtable for CEntityFactory<CBuyZone>
 D vtable for CEntityFactory<CC4>
 D vtable for CEntityFactory<CCSBot>
 D vtable for CEntityFactory<CCSGameRulesProxy>
 D vtable for CEntityFactory<CCSPlayer>
 D vtable for CEntityFactory<CCSPlayerResource>
 D vtable for CEntityFactory<CCSRagdoll>
 D vtable for CEntityFactory<CCSTeam>
 D vtable for CEntityFactory<CCascadeLight>
 D vtable for CEntityFactory<CChangeLevel>
 D vtable for CEntityFactory<CChicken>
 D vtable for CEntityFactory<CColorCorrection>
 D vtable for CEntityFactory<CColorCorrectionVolume>
 D vtable for CEntityFactory<CCommentaryAuto>
 D vtable for CEntityFactory<CCommentaryViewPosition>
 D vtable for CEntityFactory<CConstraintAnchor>
 D vtable for CEntityFactory<CCredits>
 D vtable for CEntityFactory<CDEagle>
 D vtable for CEntityFactory<CDebugHistory>
 D vtable for CEntityFactory<CDecal>
 D vtable for CEntityFactory<CDecoyGrenade>
 D vtable for CEntityFactory<CDecoyProjectile>
 D vtable for CEntityFactory<CDetailBlocker>
 D vtable for CEntityFactory<CDynamicLight>
 D vtable for CEntityFactory<CDynamicProp>
 D vtable for CEntityFactory<CEmbers>
 D vtable for CEntityFactory<CEnableMotionFixup>
 D vtable for CEntityFactory<CEntityBlocker>
 D vtable for CEntityFactory<CEntityDissolve>
 D vtable for CEntityFactory<CEntityFlame>
 D vtable for CEntityFactory<CEntityFreezing>
 D vtable for CEntityFactory<CEntityParticleTrail>
 D vtable for CEntityFactory<CEnvAmbientLight>
 D vtable for CEntityFactory<CEnvBeam>
 D vtable for CEntityFactory<CEnvBeverage>
 D vtable for CEntityFactory<CEnvDOFController>
 D vtable for CEntityFactory<CEnvDetailController>
 D vtable for CEntityFactory<CEnvDustPuff>
 D vtable for CEntityFactory<CEnvEffectsScript>
 D vtable for CEntityFactory<CEnvEntityIgniter>
 D vtable for CEntityFactory<CEnvEntityMaker>
 D vtable for CEntityFactory<CEnvExplosion>
 D vtable for CEntityFactory<CEnvFade>
 D vtable for CEntityFactory<CEnvFireSensor>
 D vtable for CEntityFactory<CEnvFireSource>
 D vtable for CEntityFactory<CEnvFunnel>
 D vtable for CEntityFactory<CEnvGlobal>
 D vtable for CEntityFactory<CEnvGunfire>
 D vtable for CEntityFactory<CEnvHudHint>
 D vtable for CEntityFactory<CEnvInstructorHint>
 D vtable for CEntityFactory<CEnvLaser>
 D vtable for CEntityFactory<CEnvLight>
 D vtable for CEntityFactory<CEnvMicrophone>
 D vtable for CEntityFactory<CEnvMuzzleFlash>
 D vtable for CEntityFactory<CEnvParticleScript>
 D vtable for CEntityFactory<CEnvPlayerSurfaceTrigger>
 D vtable for CEntityFactory<CEnvProjectedTexture>
 D vtable for CEntityFactory<CEnvQuadraticBeam>
 D vtable for CEntityFactory<CEnvScreenEffect>
 D vtable for CEntityFactory<CEnvScreenOverlay>
 D vtable for CEntityFactory<CEnvShake>
 D vtable for CEntityFactory<CEnvShooter>
 D vtable for CEntityFactory<CEnvSoundscape>
 D vtable for CEntityFactory<CEnvSoundscapeProxy>
 D vtable for CEntityFactory<CEnvSoundscapeTriggerable>
 D vtable for CEntityFactory<CEnvSpark>
 D vtable for CEntityFactory<CEnvSplash>
 D vtable for CEntityFactory<CEnvTilt>
 D vtable for CEntityFactory<CEnvTonemapController>
 D vtable for CEntityFactory<CEnvTracer>
 D vtable for CEntityFactory<CEnvViewPunch>
 D vtable for CEntityFactory<CEnvWind>
 D vtable for CEntityFactory<CEnvZoom>
 D vtable for CEntityFactory<CEventQueueSaveLoadProxy>
 D vtable for CEntityFactory<CFilterClass>
 D vtable for CEntityFactory<CFilterContext>
 D vtable for CEntityFactory<CFilterEnemy>
 D vtable for CEntityFactory<CFilterMassGreater>
 D vtable for CEntityFactory<CFilterModel>
 D vtable for CEntityFactory<CFilterMultiple>
 D vtable for CEntityFactory<CFilterName>
 D vtable for CEntityFactory<CFire>
 D vtable for CEntityFactory<CFireCrackerBlast>
 D vtable for CEntityFactory<CFireSmoke>
 D vtable for CEntityFactory<CFireTrail>
 D vtable for CEntityFactory<CFish>
 D vtable for CEntityFactory<CFishPool>
 D vtable for CEntityFactory<CFlashbang>
 D vtable for CEntityFactory<CFlashbangProjectile>
 D vtable for CEntityFactory<CFlexExpresser>
 D vtable for CEntityFactory<CFlextalkActor>
 D vtable for CEntityFactory<CFogController>
 D vtable for CEntityFactory<CFogTrigger>
 D vtable for CEntityFactory<CFogVolume>
 D vtable for CEntityFactory<CFootstepControl>
 D vtable for CEntityFactory<CFuncAreaPortalWindow>
 D vtable for CEntityFactory<CFuncBlockDMSpawns>
 D vtable for CEntityFactory<CFuncBrush>
 D vtable for CEntityFactory<CFuncConveyor>
 D vtable for CEntityFactory<CFuncIllusionary>
 D vtable for CEntityFactory<CFuncInstanceIoProxy>
 D vtable for CEntityFactory<CFuncLadder>
 D vtable for CEntityFactory<CFuncLadderEndPoint>
 D vtable for CEntityFactory<CFuncMonitor>
 D vtable for CEntityFactory<CFuncMoveLinear>
 D vtable for CEntityFactory<CFuncNavBlocker>
 D vtable for CEntityFactory<CFuncNavObstruction>
 D vtable for CEntityFactory<CFuncOccluder>
 D vtable for CEntityFactory<CFuncPlat>
 D vtable for CEntityFactory<CFuncPlatRot>
 D vtable for CEntityFactory<CFuncReflectiveGlass>
 D vtable for CEntityFactory<CFuncRotating>
 D vtable for CEntityFactory<CFuncSmokeVolume>
 D vtable for CEntityFactory<CFuncTankTrain>
 D vtable for CEntityFactory<CFuncTrackAuto>
 D vtable for CEntityFactory<CFuncTrackChange>
 D vtable for CEntityFactory<CFuncTrackTrain>
 D vtable for CEntityFactory<CFuncTrain>
 D vtable for CEntityFactory<CFuncTrainControls>
 D vtable for CEntityFactory<CFuncVPhysicsClip>
 D vtable for CEntityFactory<CFuncVehicleClip>
 D vtable for CEntityFactory<CFuncWall>
 D vtable for CEntityFactory<CFuncWallToggle>
 D vtable for CEntityFactory<CFunc_DustCloud>
 D vtable for CEntityFactory<CFunc_DustMotes>
 D vtable for CEntityFactory<CFunc_LOD>
 D vtable for CEntityFactory<CGameEnd>
 D vtable for CEntityFactory<CGameGibManager>
 D vtable for CEntityFactory<CGameMoney>
 D vtable for CEntityFactory<CGamePlayerEquip>
 D vtable for CEntityFactory<CGamePlayerTeam>
 D vtable for CEntityFactory<CGamePlayerZone>
 D vtable for CEntityFactory<CGameRoundEnd>
 D vtable for CEntityFactory<CGameScore>
 D vtable for CEntityFactory<CGameText>
 D vtable for CEntityFactory<CGameUI>
 D vtable for CEntityFactory<CGameWeaponManager>
 D vtable for CEntityFactory<CGenericActor>
 D vtable for CEntityFactory<CGenericCycler>
 D vtable for CEntityFactory<CGenericFlexCycler>
 D vtable for CEntityFactory<CGenericNPC>
 D vtable for CEntityFactory<CGib>
 D vtable for CEntityFactory<CGibShooter>
 D vtable for CEntityFactory<CGunTarget>
 D vtable for CEntityFactory<CHEGrenade>
 D vtable for CEntityFactory<CHEGrenadeProjectile>
 D vtable for CEntityFactory<CHandleDummy>
 D vtable for CEntityFactory<CHandleTest>
 D vtable for CEntityFactory<CHostage>
 D vtable for CEntityFactory<CHostageCarriableProp>
 D vtable for CEntityFactory<CHostageRescueZone>
 D vtable for CEntityFactory<CIncendiaryGrenade>
 D vtable for CEntityFactory<CInferno>
 D vtable for CEntityFactory<CInfoCameraLink>
 D vtable for CEntityFactory<CInfoGameEventProxy>
 D vtable for CEntityFactory<CInfoInstructorHintBombTargetA>
 D vtable for CEntityFactory<CInfoInstructorHintBombTargetB>
 D vtable for CEntityFactory<CInfoInstructorHintHostageRescueZone>
 D vtable for CEntityFactory<CInfoInstructorHintTarget>
 D vtable for CEntityFactory<CInfoIntermission>
 D vtable for CEntityFactory<CInfoLadderDismount>
 D vtable for CEntityFactory<CInfoMassCenter>
 D vtable for CEntityFactory<CInfoOverlayAccessor>
 D vtable for CEntityFactory<CInfoRemarkable>
 D vtable for CEntityFactory<CInfoTarget>
 D vtable for CEntityFactory<CInfoViewParameters>
 D vtable for CEntityFactory<CInstancedSceneEntity>
 D vtable for CEntityFactory<CItemAmmo338MAG>
 D vtable for CEntityFactory<CItemAmmo357SIG>
 D vtable for CEntityFactory<CItemAmmo357SIG_MIN>
 D vtable for CEntityFactory<CItemAmmo357SIG_P250>
 D vtable for CEntityFactory<CItemAmmo357SIG_SMALL>
 D vtable for CEntityFactory<CItemAmmo45ACP>
 D vtable for CEntityFactory<CItemAmmo50AE>
 D vtable for CEntityFactory<CItemAmmo556MM>
 D vtable for CEntityFactory<CItemAmmo556MM_BOX>
 D vtable for CEntityFactory<CItemAmmo556MM_SMALL>
 D vtable for CEntityFactory<CItemAmmo57MM>
 D vtable for CEntityFactory<CItemAmmo762MM>
 D vtable for CEntityFactory<CItemAmmo9MM>
 D vtable for CEntityFactory<CItemAmmoBuckshot>
 D vtable for CEntityFactory<CItemAssaultSuit>
 D vtable for CEntityFactory<CItemDefuser>
 D vtable for CEntityFactory<CItemKevlar>
 D vtable for CEntityFactory<CItemNvgs>
 D vtable for CEntityFactory<CItemSoda>
 D vtable for CEntityFactory<CKeepUpright>
 D vtable for CEntityFactory<CKnife>
 D vtable for CEntityFactory<CKnifeGG>
 D vtable for CEntityFactory<CLight>
 D vtable for CEntityFactory<CLightGlow>
 D vtable for CEntityFactory<CLogicActiveAutosave>
 D vtable for CEntityFactory<CLogicAuto>
 D vtable for CEntityFactory<CLogicAutosave>
 D vtable for CEntityFactory<CLogicBranch>
 D vtable for CEntityFactory<CLogicBranchList>
 D vtable for CEntityFactory<CLogicCase>
 D vtable for CEntityFactory<CLogicCollisionPair>
 D vtable for CEntityFactory<CLogicCompare>
 D vtable for CEntityFactory<CLogicCompareInteger>
 D vtable for CEntityFactory<CLogicEventListener>
 D vtable for CEntityFactory<CLogicEventListenerItemEquip>
 D vtable for CEntityFactory<CLogicLineToEntity>
 D vtable for CEntityFactory<CLogicMeasureMovement>
 D vtable for CEntityFactory<CLogicNavigation>
 D vtable for CEntityFactory<CLogicPlayMovie>
 D vtable for CEntityFactory<CLogicPlayerProxy>
 D vtable for CEntityFactory<CLogicRandomOutputs>
 D vtable for CEntityFactory<CLogicRegisterActivator>
 D vtable for CEntityFactory<CLogicRelay>
 D vtable for CEntityFactory<CLogicScript>
 D vtable for CEntityFactory<CMapInfo>
 D vtable for CEntityFactory<CMaterialModifyControl>
 D vtable for CEntityFactory<CMathColorBlend>
 D vtable for CEntityFactory<CMathCounter>
 D vtable for CEntityFactory<CMathRemap>
 D vtable for CEntityFactory<CMessage>
 D vtable for CEntityFactory<CMessageEntity>
 D vtable for CEntityFactory<CMolotovGrenade>
 D vtable for CEntityFactory<CMolotovProjectile>
 D vtable for CEntityFactory<CMomentaryRotButton>
 D vtable for CEntityFactory<CMovementSpeedMod>
 D vtable for CEntityFactory<CMovieDisplay>
 D vtable for CEntityFactory<CMultiSource>
 D vtable for CEntityFactory<CNPC_Furniture>
 D vtable for CEntityFactory<CNPC_HearDanger>
 D vtable for CEntityFactory<CNPC_VehicleDriver>
 D vtable for CEntityFactory<CNoDefuseArea>
 D vtable for CEntityFactory<CNodeEnt>
 D vtable for CEntityFactory<CNullEntity>
 D vtable for CEntityFactory<COrnamentProp>
 D vtable for CEntityFactory<COuttroStats>
 D vtable for CEntityFactory<CParticleFire>
 D vtable for CEntityFactory<CParticleLight>
 D vtable for CEntityFactory<CParticlePerformanceMonitor>
 D vtable for CEntityFactory<CParticleSystem>
 D vtable for CEntityFactory<CPathCorner>
 D vtable for CEntityFactory<CPathCornerCrash>
 D vtable for CEntityFactory<CPathKeyFrame>
 D vtable for CEntityFactory<CPathTrack>
 D vtable for CEntityFactory<CPhysBallSocket>
 D vtable for CEntityFactory<CPhysBox>
 D vtable for CEntityFactory<CPhysBoxMultiplayer>
 D vtable for CEntityFactory<CPhysConstraintSystem>
 D vtable for CEntityFactory<CPhysConvert>
 D vtable for CEntityFactory<CPhysExplosion>
 D vtable for CEntityFactory<CPhysFixed>
 D vtable for CEntityFactory<CPhysHinge>
 D vtable for CEntityFactory<CPhysImpact>
 D vtable for CEntityFactory<CPhysLength>
 D vtable for CEntityFactory<CPhysMagnet>
 D vtable for CEntityFactory<CPhysMotor>
 D vtable for CEntityFactory<CPhysPulley>
 D vtable for CEntityFactory<CPhysSlideConstraint>
 D vtable for CEntityFactory<CPhysSphere>
 D vtable for CEntityFactory<CPhysThruster>
 D vtable for CEntityFactory<CPhysTorque>
 D vtable for CEntityFactory<CPhysicsCannister>
 D vtable for CEntityFactory<CPhysicsEntitySolver>
 D vtable for CEntityFactory<CPhysicsNPCSolver>
 D vtable for CEntityFactory<CPhysicsProp>
 D vtable for CEntityFactory<CPhysicsPropMultiplayer>
 D vtable for CEntityFactory<CPhysicsPropRespawnable>
 D vtable for CEntityFactory<CPhysicsSpring>
 D vtable for CEntityFactory<CPhysicsWire>
 D vtable for CEntityFactory<CPlantedC4>
 D vtable for CEntityFactory<CPlantedC4Training>
 D vtable for CEntityFactory<CPlasma>
 D vtable for CEntityFactory<CPlayerResource>
 D vtable for CEntityFactory<CPointAngleSensor>
 D vtable for CEntityFactory<CPointAngularVelocitySensor>
 D vtable for CEntityFactory<CPointBonusMapsAccessor>
 D vtable for CEntityFactory<CPointBroadcastClientCommand>
 D vtable for CEntityFactory<CPointCamera>
 D vtable for CEntityFactory<CPointClientCommand>
 D vtable for CEntityFactory<CPointCommentaryNode>
 D vtable for CEntityFactory<CPointDevShotCamera>
 D vtable for CEntityFactory<CPointEntity>
 D vtable for CEntityFactory<CPointEntityFinder>
 D vtable for CEntityFactory<CPointGamestatsCounter>
 D vtable for CEntityFactory<CPointHurt>
 D vtable for CEntityFactory<CPointPlayerMoveConstraint>
 D vtable for CEntityFactory<CPointProximitySensor>
 D vtable for CEntityFactory<CPointServerCommand>
 D vtable for CEntityFactory<CPointSpotlight>
 D vtable for CEntityFactory<CPointTeleport>
 D vtable for CEntityFactory<CPointTemplate>
 D vtable for CEntityFactory<CPointVelocitySensor>
 D vtable for CEntityFactory<CPoseController>
 D vtable for CEntityFactory<CPostProcessController>
 D vtable for CEntityFactory<CPrecipitation>
 D vtable for CEntityFactory<CPrecipitationBlocker>
 D vtable for CEntityFactory<CPredictedViewModel>
 D vtable for CEntityFactory<CProjectedDecal>
 D vtable for CEntityFactory<CPropDoorRotatingBreakable>
 D vtable for CEntityFactory<CPropVehicle>
 D vtable for CEntityFactory<CPropVehicleDriveable>
 D vtable for CEntityFactory<CProp_Hallucination>
 D vtable for CEntityFactory<CPushable>
 D vtable for CEntityFactory<CRagGib>
 D vtable for CEntityFactory<CRagdollBoogie>
 D vtable for CEntityFactory<CRagdollConstraint>
 D vtable for CEntityFactory<CRagdollMagnet>
 D vtable for CEntityFactory<CRagdollManager>
 D vtable for CEntityFactory<CRagdollProp>
 D vtable for CEntityFactory<CRagdollPropAttached>
 D vtable for CEntityFactory<CRallyPoint>
 D vtable for CEntityFactory<CRevertSaved>
 D vtable for CEntityFactory<CRopeAnchor>
 D vtable for CEntityFactory<CRopeKeyframe>
 D vtable for CEntityFactory<CRotButton>
 D vtable for CEntityFactory<CRotDoor>
 D vtable for CEntityFactory<CRotorWashShooter>
 D vtable for CEntityFactory<CSCAR17>
 D vtable for CEntityFactory<CSceneEntity>
 D vtable for CEntityFactory<CSceneListManager>
 D vtable for CEntityFactory<CSceneManager>
 D vtable for CEntityFactory<CScriptedTarget>
 D vtable for CEntityFactory<CServerRagdollTrigger>
 D vtable for CEntityFactory<CShadowControl>
 D vtable for CEntityFactory<CShower>
 D vtable for CEntityFactory<CSimplePhysicsBrush>
 D vtable for CEntityFactory<CSimplePhysicsProp>
 D vtable for CEntityFactory<CSkyCamera>
 D vtable for CEntityFactory<CSkyboxSwapper>
 D vtable for CEntityFactory<CSlideshowDisplay>
 D vtable for CEntityFactory<CSmokeGrenade>
 D vtable for CEntityFactory<CSmokeGrenadeProjectile>
 D vtable for CEntityFactory<CSmokeStack>
 D vtable for CEntityFactory<CSoundEnt>
 D vtable for CEntityFactory<CSpotlightEnd>
 D vtable for CEntityFactory<CSprayCan>
 D vtable for CEntityFactory<CSprite>
 D vtable for CEntityFactory<CSpriteOriented>
 D vtable for CEntityFactory<CSpriteTrail>
 D vtable for CEntityFactory<CStatueProp>
 D vtable for CEntityFactory<CSteamJet>
 D vtable for CEntityFactory<CStripWeapons>
 D vtable for CEntityFactory<CSun>
 D vtable for CEntityFactory<CSunlightShadowControl>
 D vtable for CEntityFactory<CSurroundTest>
 D vtable for CEntityFactory<CTankTargetChange>
 D vtable for CEntityFactory<CTankTrainAI>
 D vtable for CEntityFactory<CTargetCDAudioRep>
 D vtable for CEntityFactory<CTargetChangeGravity>
 D vtable for CEntityFactory<CTeam>
 D vtable for CEntityFactory<CTeamSpawnPoint>
 D vtable for CEntityFactory<CTeamVehicleSpawnPoint>
 D vtable for CEntityFactory<CTempEntTester>
 D vtable for CEntityFactory<CTesla>
 D vtable for CEntityFactory<CTestEffect>
 D vtable for CEntityFactory<CTestTraceline>
 D vtable for CEntityFactory<CTest_ProxyToggle_Networkable>
 D vtable for CEntityFactory<CTextureToggle>
 D vtable for CEntityFactory<CTimerEntity>
 D vtable for CEntityFactory<CTonemapTrigger>
 D vtable for CEntityFactory<CTriggerAutoCrouch>
 D vtable for CEntityFactory<CTriggerBombReset>
 D vtable for CEntityFactory<CTriggerBrush>
 D vtable for CEntityFactory<CTriggerCDAudio>
 D vtable for CEntityFactory<CTriggerCamera>
 D vtable for CEntityFactory<CTriggerCameraMultiplayer>
 D vtable for CEntityFactory<CTriggerGravity>
 D vtable for CEntityFactory<CTriggerHierarchy>
 D vtable for CEntityFactory<CTriggerHurt>
 D vtable for CEntityFactory<CTriggerImpact>
 D vtable for CEntityFactory<CTriggerLook>
 D vtable for CEntityFactory<CTriggerMultiple>
 D vtable for CEntityFactory<CTriggerOnce>
 D vtable for CEntityFactory<CTriggerPlayerMovement>
 D vtable for CEntityFactory<CTriggerProximity>
 D vtable for CEntityFactory<CTriggerPush>
 D vtable for CEntityFactory<CTriggerRemove>
 D vtable for CEntityFactory<CTriggerSave>
 D vtable for CEntityFactory<CTriggerSoundscape>
 D vtable for CEntityFactory<CTriggerTeleport>
 D vtable for CEntityFactory<CTriggerToggleSave>
 D vtable for CEntityFactory<CTriggerVPhysicsMotion>
 D vtable for CEntityFactory<CTriggerViewProxy>
 D vtable for CEntityFactory<CTriggerVolume>
 D vtable for CEntityFactory<CTriggerWind>
 D vtable for CEntityFactory<CVGuiScreen>
 D vtable for CEntityFactory<CVoteController>
 D vtable for CEntityFactory<CWC_UpdateIgnoreList>
 D vtable for CEntityFactory<CWaterBullet>
 D vtable for CEntityFactory<CWaterLODControl>
 D vtable for CEntityFactory<CWeaponAWP>
 D vtable for CEntityFactory<CWeaponAug>
 D vtable for CEntityFactory<CWeaponBizon>
 D vtable for CEntityFactory<CWeaponCSBase>
 D vtable for CEntityFactory<CWeaponCSBaseGun>
 D vtable for CEntityFactory<CWeaponCycler>
 D vtable for CEntityFactory<CWeaponElite>
 D vtable for CEntityFactory<CWeaponFamas>
 D vtable for CEntityFactory<CWeaponFiveSeven>
 D vtable for CEntityFactory<CWeaponG3SG1>
 D vtable for CEntityFactory<CWeaponGalil>
 D vtable for CEntityFactory<CWeaponGalilAR>
 D vtable for CEntityFactory<CWeaponGlock>
 D vtable for CEntityFactory<CWeaponHKP2000>
 D vtable for CEntityFactory<CWeaponM249>
 D vtable for CEntityFactory<CWeaponM3>
 D vtable for CEntityFactory<CWeaponM4A1>
 D vtable for CEntityFactory<CWeaponMAC10>
 D vtable for CEntityFactory<CWeaponMP5Navy>
 D vtable for CEntityFactory<CWeaponMP7>
 D vtable for CEntityFactory<CWeaponMP9>
 D vtable for CEntityFactory<CWeaponMag7>
 D vtable for CEntityFactory<CWeaponNOVA>
 D vtable for CEntityFactory<CWeaponNegev>
 D vtable for CEntityFactory<CWeaponP228>
 D vtable for CEntityFactory<CWeaponP250>
 D vtable for CEntityFactory<CWeaponP90>
 D vtable for CEntityFactory<CWeaponSCAR20>
 D vtable for CEntityFactory<CWeaponSG550>
 D vtable for CEntityFactory<CWeaponSG552>
 D vtable for CEntityFactory<CWeaponSG556>
 D vtable for CEntityFactory<CWeaponSSG08>
 D vtable for CEntityFactory<CWeaponSawedoff>
 D vtable for CEntityFactory<CWeaponScout>
 D vtable for CEntityFactory<CWeaponTMP>
 D vtable for CEntityFactory<CWeaponTaser>
 D vtable for CEntityFactory<CWeaponTec9>
 D vtable for CEntityFactory<CWeaponUMP45>
 D vtable for CEntityFactory<CWeaponUSP>
 D vtable for CEntityFactory<CWeaponXM1014>
 D vtable for CEntityFactory<CWeightButton>
 D vtable for CEntityFactory<CWindowPane>
 D vtable for CEntityFactory<CWorld>
 D vtable for CEntityFactory<CWorldItem>
 D vtable for CEntityFactory<CWreckage>
 D vtable for CEntityFactory<DustTrail>
 D vtable for CEntityFactory<FilterDamageType>
 D vtable for CEntityFactory<FilterTeam>
 D vtable for CEntityFactory<MovieExplosion>
 D vtable for CEntityFactory<ParticleSmokeGrenade>
 D vtable for CEntityFactory<RocketTrail>
 D vtable for CEntityFactory<SmokeTrail>
 D vtable for CEntityFactory<SpawnPoint>
 D vtable for CEntityFactory<SporeExplosion>
 D vtable for CEntityFactory<SporeTrail>
 D vtable for CEntityFactoryDictionary
 D vtable for CEntityFlame
 D vtable for CEntityFreezing
 D vtable for CEntityListSystem
 D vtable for CEntityParticleTrail
 D vtable for CEntityParticleTrail::NetworkVar_m_Info
 D vtable for CEntitySaveRestoreBlockHandler
 D vtable for CEntitySaveUtils
 D vtable for CEntityTouchManager
 D vtable for CEnvAmbientLight
 D vtable for CEnvBeam
 D vtable for CEnvBeverage
 D vtable for CEnvDOFController
 D vtable for CEnvDetailController
 D vtable for CEnvDustPuff
 D vtable for CEnvEffectsScript
 D vtable for CEnvEntityIgniter
 D vtable for CEnvEntityMaker
 D vtable for CEnvExplosion
 D vtable for CEnvFade
 D vtable for CEnvFireSensor
 D vtable for CEnvFireSource
 D vtable for CEnvFunnel
 D vtable for CEnvGlobal
 D vtable for CEnvGunfire
 D vtable for CEnvHudHint
 D vtable for CEnvInstructorHint
 D vtable for CEnvLaser
 D vtable for CEnvLight
 D vtable for CEnvMicrophone
 D vtable for CEnvMuzzleFlash
 D vtable for CEnvParticleScript
 D vtable for CEnvPlayerSurfaceTrigger
 D vtable for CEnvProjectedTexture
 D vtable for CEnvQuadraticBeam
 D vtable for CEnvScreenEffect
 D vtable for CEnvScreenOverlay
 D vtable for CEnvShake
 D vtable for CEnvShooter
 D vtable for CEnvSoundscape
 D vtable for CEnvSoundscapeProxy
 D vtable for CEnvSoundscapeTriggerable
 D vtable for CEnvSpark
 D vtable for CEnvSplash
 D vtable for CEnvTilt
 D vtable for CEnvTonemapController
 D vtable for CEnvTracer
 D vtable for CEnvViewPunch
 D vtable for CEnvWind
 D vtable for CEnvWindShared
 D vtable for CEnvZoom
 D vtable for CEventLog
 D vtable for CEventQueueSaveLoadProxy
 D vtable for CEventQueue_SaveRestoreBlockHandler
 D vtable for CEventsSaveDataOps
 D vtable for CFilterClass
 D vtable for CFilterContext
 D vtable for CFilterEnemy
 D vtable for CFilterMassGreater
 D vtable for CFilterModel
 D vtable for CFilterMultiple
 D vtable for CFilterName
 D vtable for CFire
 D vtable for CFireCrackerBlast
 D vtable for CFireSmoke
 D vtable for CFireSphere
 D vtable for CFireTrail
 D vtable for CFish
 D vtable for CFishPool
 D vtable for CFlaggedEntitiesEnum
 D vtable for CFlashbang
 D vtable for CFlashbangProjectile
 D vtable for CFlexAnimationTrack
 D vtable for CFlexExpresser
 D vtable for CFlexSceneFileManager
 D vtable for CFlextalkActor
 D vtable for CFloatProperty
 D vtable for CFmtStrN<1024, false>
 D vtable for CFmtStrN<256, false>
 D vtable for CFmtStrN<32, false>
 D vtable for CFmtStrN<80, false>
 D vtable for CFogController
 D vtable for CFogController::NetworkVar_m_fog
 D vtable for CFogSystem
 D vtable for CFogTrigger
 D vtable for CFogVolume
 D vtable for CFootstepControl
 D vtable for CFourWheelServerVehicle
 D vtable for CFourWheelVehiclePhysics
 D vtable for CFunFact_GenericEvalFunction
 D vtable for CFunFact_PlayerEvalFunction
 D vtable for CFunFact_StatBest
 D vtable for CFunFact_StatSum
 D vtable for CFuncAreaPortalBase
 D vtable for CFuncAreaPortalWindow
 D vtable for CFuncBlockDMSpawns
 D vtable for CFuncBrush
 D vtable for CFuncConveyor
 D vtable for CFuncIllusionary
 D vtable for CFuncInstanceIoProxy
 D vtable for CFuncLadder
 D vtable for CFuncLadderEndPoint
 D vtable for CFuncMonitor
 D vtable for CFuncMoveLinear
 D vtable for CFuncNavBlocker
 D vtable for CFuncNavObstruction
 D vtable for CFuncOccluder
 D vtable for CFuncPlat
 D vtable for CFuncPlatRot
 D vtable for CFuncReflectiveGlass
 D vtable for CFuncRotating
 D vtable for CFuncSmokeVolume
 D vtable for CFuncTankTrain
 D vtable for CFuncTrackAuto
 D vtable for CFuncTrackChange
 D vtable for CFuncTrackTrain
 D vtable for CFuncTrain
 D vtable for CFuncTrainControls
 D vtable for CFuncVPhysicsClip
 D vtable for CFuncVehicleClip
 D vtable for CFuncWall
 D vtable for CFuncWallToggle
 D vtable for CFunc_Dust
 D vtable for CFunc_DustCloud
 D vtable for CFunc_DustMotes
 D vtable for CFunc_LOD
 D vtable for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctorJob
 D vtable for CGCClientJobServerUpdateVersion
 D vtable for CGCClientJobServerWelcome
 D vtable for CGCClientSystem
 D vtable for CGCDev_NewItemRequestResponse
 D vtable for CGCItemAcknowledged
 D vtable for CGCMsgGetIPLocation
 D vtable for CGCMsgGetIPLocationResponse
 D vtable for CGCMsgGetSystemStats
 D vtable for CGCMsgGetSystemStatsResponse
 D vtable for CGCMsgMemCachedDelete
 D vtable for CGCMsgMemCachedGet
 D vtable for CGCMsgMemCachedGetResponse
 D vtable for CGCMsgMemCachedGetResponse_ValueTag
 D vtable for CGCMsgMemCachedSet
 D vtable for CGCMsgMemCachedSet_KeyPair
 D vtable for CGCMsgMemCachedStats
 D vtable for CGCMsgMemCachedStatsResponse
 D vtable for CGCMsgSQLStats
 D vtable for CGCMsgSQLStatsResponse
 D vtable for CGCMsgSystemStatsSchema
 D vtable for CGCStorePurchaseInit_LineItem
 D vtable for CGCSystemMsg_GetAccountDetails
 D vtable for CGCSystemMsg_GetAccountDetails_Response
 D vtable for CGCSystemMsg_GetPurchaseTrust_Request
 D vtable for CGCSystemMsg_GetPurchaseTrust_Response
 D vtable for CGCToGCMsgMasterAck
 D vtable for CGCToGCMsgMasterAck_Response
 D vtable for CGCToGCMsgMasterStartupComplete
 D vtable for CGCToGCMsgRouted
 D vtable for CGCToGCMsgRoutedReply
 D vtable for CGameDLL_ConVarAccessor
 D vtable for CGameEnd
 D vtable for CGameEventListener
 D vtable for CGameGibManager
 D vtable for CGameMoney
 D vtable for CGameMovement
 D vtable for CGamePlayerEquip
 D vtable for CGamePlayerTeam
 D vtable for CGamePlayerZone
 D vtable for CGameResponseSystem
 D vtable for CGameRoundEnd
 D vtable for CGameRules
 D vtable for CGameRulesProxy
 D vtable for CGameScore
 D vtable for CGameStringPool
 D vtable for CGameText
 D vtable for CGameTimescale
 D vtable for CGameUI
 D vtable for CGameWeaponManager
 D vtable for CGenericActor
 D vtable for CGenericCycler
 D vtable for CGenericFlexCycler
 D vtable for CGenericNPC
 D vtable for CGib
 D vtable for CGibShooter
 D vtable for CGlobalEntityList
 D vtable for CGlobalEventLog
 D vtable for CGlobalState
 D vtable for CGunTarget
 D vtable for CHEGrenade
 D vtable for CHEGrenadeProjectile
 D vtable for CHFontProperty
 D vtable for CHLTVDirector
 D vtable for CHandleDummy
 D vtable for CHandleTest
 D vtable for CHostage
 D vtable for CHostageCarriableProp
 D vtable for CHostageRescueZone
 D vtable for CIKSaveRestoreOps
 D vtable for CIPLocationInfo
 D vtable for CIncendiaryGrenade
 D vtable for CInferno
 D vtable for CInfoCameraLink
 D vtable for CInfoGameEventProxy
 D vtable for CInfoInstructorHintBombTargetA
 D vtable for CInfoInstructorHintBombTargetB
 D vtable for CInfoInstructorHintHostageRescueZone
 D vtable for CInfoInstructorHintTarget
 D vtable for CInfoIntermission
 D vtable for CInfoLadderDismount
 D vtable for CInfoMassCenter
 D vtable for CInfoOverlayAccessor
 D vtable for CInfoRemarkable
 D vtable for CInfoTarget
 D vtable for CInfoViewParameters
 D vtable for CInstancedSceneEntity
 D vtable for CIntProperty
 D vtable for CInventoryManager
 D vtable for CItem
 D vtable for CItemAmmo338MAG
 D vtable for CItemAmmo357SIG
 D vtable for CItemAmmo357SIG_MIN
 D vtable for CItemAmmo357SIG_P250
 D vtable for CItemAmmo357SIG_SMALL
 D vtable for CItemAmmo45ACP
 D vtable for CItemAmmo50AE
 D vtable for CItemAmmo556MM
 D vtable for CItemAmmo556MM_BOX
 D vtable for CItemAmmo556MM_SMALL
 D vtable for CItemAmmo57MM
 D vtable for CItemAmmo762MM
 D vtable for CItemAmmo9MM
 D vtable for CItemAmmoBuckshot
 D vtable for CItemAssaultSuit
 D vtable for CItemDefuser
 D vtable for CItemGeneration
 D vtable for CItemKevlar
 D vtable for CItemNvgs
 D vtable for CItemSelectionCriteria::CCondition
 D vtable for CItemSelectionCriteria::CFloatCondition
 D vtable for CItemSelectionCriteria::CSetCondition
 D vtable for CItemSelectionCriteria::CStringCondition
 D vtable for CItemSoda
 D vtable for CJob
 D vtable for CKeepUpright
 D vtable for CKeyValuesDumpContextAsDevMsg
 D vtable for CKickIssue
 D vtable for CKnife
 D vtable for CKnifeGG
 D vtable for CLagCompensationManager
 D vtable for CLight
 D vtable for CLightGlow
 D vtable for CLoadBackupIssue
 D vtable for CLogicActiveAutosave
 D vtable for CLogicAuto
 D vtable for CLogicAutosave
 D vtable for CLogicBranch
 D vtable for CLogicBranchList
 D vtable for CLogicCase
 D vtable for CLogicCollisionPair
 D vtable for CLogicCompare
 D vtable for CLogicCompareInteger
 D vtable for CLogicEventListener
 D vtable for CLogicEventListenerItemEquip
 D vtable for CLogicLineToEntity
 D vtable for CLogicMeasureMovement
 D vtable for CLogicNavigation
 D vtable for CLogicPlayMovie
 D vtable for CLogicPlayerProxy
 D vtable for CLogicRandomOutputs
 D vtable for CLogicRegisterActivator
 D vtable for CLogicRelay
 D vtable for CLogicScript
 D vtable for CMapInfo
 D vtable for CMapLoadEntityFilter
 D vtable for CMaterialModifyControl
 D vtable for CMathColorBlend
 D vtable for CMathCounter
 D vtable for CMathRemap
 D vtable for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemoryLog
 D vtable for CMemoryStack
 D vtable for CMessage
 D vtable for CMessageEntity
 D vtable for CModelPrecacheSystem
 D vtable for CModelSoundsCache
 D vtable for CModelSoundsCacheSaver
 D vtable for CMolotovGrenade
 D vtable for CMolotovProjectile
 D vtable for CMomentaryRotButton
 D vtable for CMotorController
 D vtable for CMoveHelperServer
 D vtable for CMovementSpeedMod
 D vtable for CMovieDisplay
 D vtable for CMsgAMAddFreeLicense
 D vtable for CMsgAMAddFreeLicenseResponse
 D vtable for CMsgAMFindAccounts
 D vtable for CMsgAMFindAccountsResponse
 D vtable for CMsgAMGetLicenses
 D vtable for CMsgAMGetLicensesResponse
 D vtable for CMsgAMGetUserGameStats
 D vtable for CMsgAMGetUserGameStatsResponse
 D vtable for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 D vtable for CMsgAMGetUserGameStatsResponse_Stats
 D vtable for CMsgAMGrantGuestPasses2
 D vtable for CMsgAMGrantGuestPasses2Response
 D vtable for CMsgAMSendEmail
 D vtable for CMsgAMSendEmailResponse
 D vtable for CMsgAMSendEmail_PersonaNameReplacementToken
 D vtable for CMsgAMSendEmail_ReplacementToken
 D vtable for CMsgAccountDetails
 D vtable for CMsgAdjustItemEquippedState
 D vtable for CMsgApplyAutograph
 D vtable for CMsgApplyEggEssence
 D vtable for CMsgApplyPennantUpgrade
 D vtable for CMsgApplyStatTrakSwap
 D vtable for CMsgApplySticker
 D vtable for CMsgApplyStrangePart
 D vtable for CMsgCStrike15Welcome
 D vtable for CMsgClientHello
 D vtable for CMsgClientWelcome
 D vtable for CMsgClientWelcome_Location
 D vtable for CMsgConVarValue
 D vtable for CMsgConnectionStatus
 D vtable for CMsgConsumableExhausted
 D vtable for CMsgDevNewItemRequest
 D vtable for CMsgGCBannedWord
 D vtable for CMsgGCBannedWordListRequest
 D vtable for CMsgGCBannedWordListResponse
 D vtable for CMsgGCCStrike15_v2_AccountPrivacySettings
 D vtable for CMsgGCCStrike15_v2_AccountPrivacySettings_Setting
 D vtable for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest
 D vtable for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse
 D vtable for CMsgGCCStrike15_v2_Client2GCTextMsg
 D vtable for CMsgGCCStrike15_v2_ClientCommendPlayer
 D vtable for CMsgGCCStrike15_v2_ClientReportPlayer
 D vtable for CMsgGCCStrike15_v2_ClientReportResponse
 D vtable for CMsgGCCStrike15_v2_ClientReportServer
 D vtable for CMsgGCCStrike15_v2_ClientRequestJoinFriendData
 D vtable for CMsgGCCStrike15_v2_ClientRequestJoinServerData
 D vtable for CMsgGCCStrike15_v2_ClientRequestPlayersProfile
 D vtable for CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends
 D vtable for CMsgGCCStrike15_v2_ClientSubmitSurveyVote
 D vtable for CMsgGCCStrike15_v2_ClientVarValueNotificationInfo
 D vtable for CMsgGCCStrike15_v2_GC2ClientTextMsg
 D vtable for CMsgGCCStrike15_v2_GC2ClientTournamentInfo
 D vtable for CMsgGCCStrike15_v2_GC2ServerReservationUpdate
 D vtable for CMsgGCCStrike15_v2_GiftsLeaderboardRequest
 D vtable for CMsgGCCStrike15_v2_GiftsLeaderboardResponse
 D vtable for CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry
 D vtable for CMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 D vtable for CMsgGCCStrike15_v2_MatchEndRunRewardDrops
 D vtable for CMsgGCCStrike15_v2_MatchList
 D vtable for CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames
 D vtable for CMsgGCCStrike15_v2_MatchListRequestFullGameInfo
 D vtable for CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser
 D vtable for CMsgGCCStrike15_v2_MatchListRequestRecentUserGames
 D vtable for CMsgGCCStrike15_v2_MatchListRequestTournamentGames
 D vtable for CMsgGCCStrike15_v2_MatchmakingClient2GCHello
 D vtable for CMsgGCCStrike15_v2_MatchmakingClient2ServerPing
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ClientHello
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate
 D vtable for CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve
 D vtable for CMsgGCCStrike15_v2_MatchmakingGCOperationalStats
 D vtable for CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate
 D vtable for CMsgGCCStrike15_v2_MatchmakingServer2GCKick
 D vtable for CMsgGCCStrike15_v2_MatchmakingServerMatchEnd
 D vtable for CMsgGCCStrike15_v2_MatchmakingServerReservationResponse
 D vtable for CMsgGCCStrike15_v2_MatchmakingServerRoundStats
 D vtable for CMsgGCCStrike15_v2_MatchmakingStart
 D vtable for CMsgGCCStrike15_v2_MatchmakingStop
 D vtable for CMsgGCCStrike15_v2_PlayerEarnedRewardNotification
 D vtable for CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment
 D vtable for CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus
 D vtable for CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate
 D vtable for CMsgGCCStrike15_v2_PlayersProfile
 D vtable for CMsgGCCStrike15_v2_Predictions
 D vtable for CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick
 D vtable for CMsgGCCStrike15_v2_Server2GCClientValidate
 D vtable for CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure
 D vtable for CMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 D vtable for CMsgGCCStrike15_v2_ServerVarValueNotificationInfo
 D vtable for CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification
 D vtable for CMsgGCCStrike15_v2_WatchInfoUsers
 D vtable for CMsgGCCheckFriendship
 D vtable for CMsgGCCheckFriendship_Response
 D vtable for CMsgGCClientDisplayNotification
 D vtable for CMsgGCClientVersionUpdated
 D vtable for CMsgGCCollectItem
 D vtable for CMsgGCCstrike15_v2_ClientRequestNewMission
 D vtable for CMsgGCError
 D vtable for CMsgGCGetCommandList
 D vtable for CMsgGCGetCommandListResponse
 D vtable for CMsgGCGetEmailTemplate
 D vtable for CMsgGCGetEmailTemplateResponse
 D vtable for CMsgGCGetPartnerAccountLink
 D vtable for CMsgGCGetPartnerAccountLink_Response
 D vtable for CMsgGCGetPersonaNames
 D vtable for CMsgGCGetPersonaNames_Response
 D vtable for CMsgGCGetPersonaNames_Response_PersonaName
 D vtable for CMsgGCGiftedItems
 D vtable for CMsgGCHAccountVacStatusChange
 D vtable for CMsgGCHUpdateSession
 D vtable for CMsgGCHUpdateSession_ExtraField
 D vtable for CMsgGCIncrementKillCountResponse
 D vtable for CMsgGCItemPreviewItemBoughtNotification
 D vtable for CMsgGCMsgMasterSetClientMsgRouting
 D vtable for CMsgGCMsgMasterSetClientMsgRouting_Entry
 D vtable for CMsgGCMsgMasterSetClientMsgRouting_Response
 D vtable for CMsgGCMsgMasterSetDirectory
 D vtable for CMsgGCMsgMasterSetDirectory_Response
 D vtable for CMsgGCMsgMasterSetDirectory_SubGC
 D vtable for CMsgGCMsgMasterSetWebAPIRouting
 D vtable for CMsgGCMsgMasterSetWebAPIRouting_Entry
 D vtable for CMsgGCMsgMasterSetWebAPIRouting_Response
 D vtable for CMsgGCMsgSetOptions
 D vtable for CMsgGCMsgSetOptions_MessageRange
 D vtable for CMsgGCMsgWebAPIJobRequestForwardResponse
 D vtable for CMsgGCMultiplexMessage
 D vtable for CMsgGCNameItemNotification
 D vtable for CMsgGCReportAbuse
 D vtable for CMsgGCReportAbuseResponse
 D vtable for CMsgGCRequestAnnouncements
 D vtable for CMsgGCRequestAnnouncementsResponse
 D vtable for CMsgGCRequestSessionIP
 D vtable for CMsgGCRequestSessionIPResponse
 D vtable for CMsgGCRoutingInfo
 D vtable for CMsgGCServerVersionUpdated
 D vtable for CMsgGCShowItemsPickedUp
 D vtable for CMsgGCStorePurchaseCancel
 D vtable for CMsgGCStorePurchaseCancelResponse
 D vtable for CMsgGCStorePurchaseFinalize
 D vtable for CMsgGCStorePurchaseFinalizeResponse
 D vtable for CMsgGCStorePurchaseInit
 D vtable for CMsgGCStorePurchaseInitResponse
 D vtable for CMsgGCToGCBannedWordListBroadcast
 D vtable for CMsgGCToGCBannedWordListUpdated
 D vtable for CMsgGCToGCBroadcastConsoleCommand
 D vtable for CMsgGCToGCDirtyMultipleSDOCache
 D vtable for CMsgGCToGCDirtySDOCache
 D vtable for CMsgGCToGCIsTrustedServer
 D vtable for CMsgGCToGCIsTrustedServerResponse
 D vtable for CMsgGCToGCReloadVersions
 D vtable for CMsgGCToGCRequestPassportItemGrant
 D vtable for CMsgGCToGCUpdateSQLKeyValue
 D vtable for CMsgGCToGCWebAPIAccountChanged
 D vtable for CMsgGCUpdateSessionIP
 D vtable for CMsgGC_ServerQuestUpdateData
 D vtable for CMsgGC_ServerQuestUpdateData_PlayerQuestData
 D vtable for CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData
 D vtable for CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData
 D vtable for CMsgGameServerInfo
 D vtable for CMsgHttpRequest
 D vtable for CMsgHttpRequest_QueryParam
 D vtable for CMsgHttpRequest_RequestHeader
 D vtable for CMsgHttpResponse
 D vtable for CMsgHttpResponse_ResponseHeader
 D vtable for CMsgIncrementKillCountAttribute
 D vtable for CMsgInvitationCreated
 D vtable for CMsgInviteToParty
 D vtable for CMsgItemAcknowledged
 D vtable for CMsgItemAcknowledged__DEPRECATED
 D vtable for CMsgKickFromParty
 D vtable for CMsgLANServerAvailable
 D vtable for CMsgLeaveParty
 D vtable for CMsgNotificationOfSuspiciousActivity
 D vtable for CMsgNotificationOfSuspiciousActivity_MultipleGameInstances
 D vtable for CMsgNotifyWatchdog
 D vtable for CMsgPackageLicense
 D vtable for CMsgPartyInviteResponse
 D vtable for CMsgProtoBufHeader
 D vtable for CMsgQAngle
 D vtable for CMsgRGBA
 D vtable for CMsgReplayUploadedToYouTube
 D vtable for CMsgReplicateConVars
 D vtable for CMsgRequestInventoryRefresh
 D vtable for CMsgSDONoMemcached
 D vtable for CMsgSOCacheHaveVersion
 D vtable for CMsgSOCacheSubscribed
 D vtable for CMsgSOCacheSubscribed_SubscribedType
 D vtable for CMsgSOCacheSubscriptionCheck
 D vtable for CMsgSOCacheSubscriptionRefresh
 D vtable for CMsgSOCacheUnsubscribed
 D vtable for CMsgSOCacheVersion
 D vtable for CMsgSOIDOwner
 D vtable for CMsgSOMultipleObjects
 D vtable for CMsgSOMultipleObjects_SingleObject
 D vtable for CMsgSOSingleObject
 D vtable for CMsgSelectItemPresetForClass
 D vtable for CMsgSelectItemPresetForClassReply
 D vtable for CMsgServerAvailable
 D vtable for CMsgSetItemPositions
 D vtable for CMsgSetItemPositions_ItemPosition
 D vtable for CMsgSetPresetItemPosition
 D vtable for CMsgSortItems
 D vtable for CMsgStoreGetUserData
 D vtable for CMsgStoreGetUserDataResponse
 D vtable for CMsgSystemBroadcast
 D vtable for CMsgUpdateItemSchema
 D vtable for CMsgUseItem
 D vtable for CMsgVector
 D vtable for CMsgVector2D
 D vtable for CMsgWebAPIKey
 D vtable for CMsgWebAPIRequest
 D vtable for CMsg_CVars
 D vtable for CMsg_CVars_CVar
 D vtable for CMultiSource
 D vtable for CMultiplayRules
 D vtable for CMultiplayer_Expresser
 D vtable for CNETMsg_Disconnect
 D vtable for CNETMsg_File
 D vtable for CNETMsg_NOP
 D vtable for CNETMsg_PlayerAvatarData
 D vtable for CNETMsg_SetConVar
 D vtable for CNETMsg_SignonState
 D vtable for CNETMsg_SplitScreenUser
 D vtable for CNETMsg_StringCmd
 D vtable for CNETMsg_Tick
 D vtable for CNPC_Furniture
 D vtable for CNPC_HearDanger
 D vtable for CNPC_VehicleDriver
 D vtable for CNavArea
 D vtable for CNavMesh
 D vtable for CNextLevelIssue
 D vtable for CNoDefuseArea
 D vtable for CNodeEnt
 D vtable for CNodeFilter
 D vtable for CNonDamagingScan
 D vtable for CNotReadyForMatchIssue
 D vtable for CNotifyList
 D vtable for CNullEntity
 D vtable for COrnamentProp
 D vtable for COuttroStats
 D vtable for CPASAttenuationFilter
 D vtable for CPASFilter
 D vtable for CPVSFilter
 D vtable for CParticleFire
 D vtable for CParticleLight
 D vtable for CParticlePerformanceMonitor
 D vtable for CParticleSystem
 D vtable for CParticleSystemQuery
 D vtable for CPathCorner
 D vtable for CPathCornerCrash
 D vtable for CPathKeyFrame
 D vtable for CPathTrack
 D vtable for CPathfindNearestNodeFilter
 D vtable for CPauseMatchIssue
 D vtable for CPhysBallSocket
 D vtable for CPhysBox
 D vtable for CPhysBoxMultiplayer
 D vtable for CPhysConstraint
 D vtable for CPhysConstraintEvents
 D vtable for CPhysConstraintSystem
 D vtable for CPhysConvert
 D vtable for CPhysExplosion
 D vtable for CPhysFixed
 D vtable for CPhysForce
 D vtable for CPhysHinge
 D vtable for CPhysImpact
 D vtable for CPhysLength
 D vtable for CPhysMagnet
 D vtable for CPhysMotor
 D vtable for CPhysObjSaveRestoreOps
 D vtable for CPhysPulley
 D vtable for CPhysSaveRestoreBlockHandler
 D vtable for CPhysSlideConstraint
 D vtable for CPhysSphere
 D vtable for CPhysThruster
 D vtable for CPhysTorque
 D vtable for CPhysicsCannister
 D vtable for CPhysicsEntitySolver
 D vtable for CPhysicsGameTrace
 D vtable for CPhysicsHook
 D vtable for CPhysicsNPCSolver
 D vtable for CPhysicsPlayerCallback
 D vtable for CPhysicsProp
 D vtable for CPhysicsPropMultiplayer
 D vtable for CPhysicsPropRespawnable
 D vtable for CPhysicsPushedEntities
 D vtable for CPhysicsShake
 D vtable for CPhysicsSpring
 D vtable for CPhysicsWind
 D vtable for CPhysicsWire
 D vtable for CPlantedC4
 D vtable for CPlantedC4Training
 D vtable for CPlasma
 D vtable for CPlatTrigger
 D vtable for CPlayerInfo
 D vtable for CPlayerInfoManager
 D vtable for CPlayerInventory
 D vtable for CPlayerLocalData
 D vtable for CPlayerLocalData::NetworkVar_m_PlayerFog
 D vtable for CPlayerLocalData::NetworkVar_m_audio
 D vtable for CPlayerLocalData::NetworkVar_m_skybox3d
 D vtable for CPlayerMove
 D vtable for CPlayerResource
 D vtable for CPlayerVoiceListener
 D vtable for CPluginBotManager
 D vtable for CPluginHelpersCheck
 D vtable for CPointAngleSensor
 D vtable for CPointAngularVelocitySensor
 D vtable for CPointBonusMapsAccessor
 D vtable for CPointBroadcastClientCommand
 D vtable for CPointCamera
 D vtable for CPointClientCommand
 D vtable for CPointCommentaryNode
 D vtable for CPointDevShotCamera
 D vtable for CPointEntity
 D vtable for CPointEntityFinder
 D vtable for CPointGamestatsCounter
 D vtable for CPointHurt
 D vtable for CPointPlayerMoveConstraint
 D vtable for CPointProximitySensor
 D vtable for CPointServerCommand
 D vtable for CPointSpotlight
 D vtable for CPointTeleport
 D vtable for CPointTemplate
 D vtable for CPointTemplatePrecacher
 D vtable for CPointVelocitySensor
 D vtable for CPoseController
 D vtable for CPostFrameNavigationHook
 D vtable for CPostProcessController
 D vtable for CPostProcessSystem
 D vtable for CPreMatchInfoData
 D vtable for CPreMatchInfoData_TeamStats
 D vtable for CPrecacheHandler
 D vtable for CPrecacheOtherList
 D vtable for CPrecacheRegister
 D vtable for CPrecipitation
 D vtable for CPrecipitationBlocker
 D vtable for CPredictedViewModel
 D vtable for CProjectedDecal
 D vtable for CPropData
 D vtable for CPropDoorRotating
 D vtable for CPropDoorRotatingBreakable
 D vtable for CPropVehicle
 D vtable for CPropVehicleDriveable
 D vtable for CProp_Hallucination
 D vtable for CProportionalFloatProperty
 D vtable for CProportionalIntProperty
 D vtable for CProportionalXPosProperty
 D vtable for CProportionalYPosProperty
 D vtable for CPublishedFileInfoHTTPRequest
 D vtable for CPushAwayEnumerator
 D vtable for CPushBlockerEnum
 D vtable for CPushable
 D vtable for CQueuedMatchmakingRematch
 D vtable for CRagGib
 D vtable for CRagdollBoogie
 D vtable for CRagdollConstraint
 D vtable for CRagdollLRURetirement
 D vtable for CRagdollMagnet
 D vtable for CRagdollManager
 D vtable for CRagdollProp
 D vtable for CRagdollPropAttached
 D vtable for CRallyPoint
 D vtable for CReadyForMatchIssue
 D vtable for CRecipientFilter
 D vtable for CRegistry
 D vtable for CReliableBroadcastRecipientFilter
 D vtable for CRemarkableEntityList
 D vtable for CRespawnEntitiesFilter
 D vtable for CResponseQueueManager
 D vtable for CResponseRulesToEngineInterface
 D vtable for CRestartGameIssue
 D vtable for CRestore
 D vtable for CRevertSaved
 D vtable for CRopeAnchor
 D vtable for CRopeKeyframe
 D vtable for CRotButton
 D vtable for CRotDoor
 D vtable for CRotorWashShooter
 D vtable for CSCAR17
 D vtable for CSNavMesh
 D vtable for CSOEconClaimCode
 D vtable for CSOEconDefaultEquippedDefinitionInstanceClient
 D vtable for CSOEconGameAccountClient
 D vtable for CSOEconItem
 D vtable for CSOEconItemAttribute
 D vtable for CSOEconItemDropRateBonus
 D vtable for CSOEconItemEquipped
 D vtable for CSOEconItemEventTicket
 D vtable for CSOEconItemLeagueViewPass
 D vtable for CSOEconItemPresetInstance
 D vtable for CSOItemCriteria
 D vtable for CSOItemCriteriaCondition
 D vtable for CSOItemRecipe
 D vtable for CSOLobbyInvite
 D vtable for CSOPartyInvite
 D vtable for CSOSelectedItemPreset
 D vtable for CSVCMsg_BSPDecal
 D vtable for CSVCMsg_ClassInfo
 D vtable for CSVCMsg_ClassInfo_class_t
 D vtable for CSVCMsg_CmdKeyValues
 D vtable for CSVCMsg_CreateStringTable
 D vtable for CSVCMsg_CrosshairAngle
 D vtable for CSVCMsg_EncryptedData
 D vtable for CSVCMsg_EntityMsg
 D vtable for CSVCMsg_FixAngle
 D vtable for CSVCMsg_GameEvent
 D vtable for CSVCMsg_GameEventList
 D vtable for CSVCMsg_GameEventList_descriptor_t
 D vtable for CSVCMsg_GameEventList_key_t
 D vtable for CSVCMsg_GameEvent_key_t
 D vtable for CSVCMsg_GetCvarValue
 D vtable for CSVCMsg_Menu
 D vtable for CSVCMsg_PacketEntities
 D vtable for CSVCMsg_PaintmapData
 D vtable for CSVCMsg_Prefetch
 D vtable for CSVCMsg_Print
 D vtable for CSVCMsg_SendTable
 D vtable for CSVCMsg_SendTable_sendprop_t
 D vtable for CSVCMsg_ServerInfo
 D vtable for CSVCMsg_SetPause
 D vtable for CSVCMsg_SetView
 D vtable for CSVCMsg_Sounds
 D vtable for CSVCMsg_Sounds_sounddata_t
 D vtable for CSVCMsg_SplitScreen
 D vtable for CSVCMsg_TempEntities
 D vtable for CSVCMsg_UpdateStringTable
 D vtable for CSVCMsg_UserMessage
 D vtable for CSVCMsg_VoiceData
 D vtable for CSVCMsg_VoiceInit
 D vtable for CSave
 D vtable for CSaveRestoreBlockSet
 D vtable for CSceneEntity
 D vtable for CSceneFindMarkFilter
 D vtable for CSceneFindNearestMarkFilter
 D vtable for CSceneListManager
 D vtable for CSceneManager
 D vtable for CScenePrecacheSystem
 D vtable for CSceneTokenProcessor
 D vtable for CSchemaAttributeType_Default
 D vtable for CSchemaAttributeType_Float
 D vtable for CSchemaAttributeType_String
 D vtable for CSchemaAttributeType_Uint32
 D vtable for CSchemaAttributeType_Vector
 D vtable for CScrambleTeams
 D vtable for CScriptedTarget
 D vtable for CServerBenchmark
 D vtable for CServerDLLSharedAppSystems
 D vtable for CServerGameClients
 D vtable for CServerGameDLL
 D vtable for CServerGameEnts
 D vtable for CServerGameTags
 D vtable for CServerNetworkProperty
 D vtable for CServerRagdollTrigger
 D vtable for CServerTools
 D vtable for CShadowControl
 D vtable for CShower
 D vtable for CSimThinkManager
 D vtable for CSimplePhysicsBrush
 D vtable for CSimplePhysicsProp
 D vtable for CSingleUserRecipientFilter
 D vtable for CSkipKeys
 D vtable for CSkyCamera
 D vtable for CSkyboxSwapper
 D vtable for CSlideshowDisplay
 D vtable for CSmallTextEntry
 D vtable for CSmokeGrenade
 D vtable for CSmokeGrenadeProjectile
 D vtable for CSmokeStack
 D vtable for CSolidSetDefaults
 D vtable for CSoundControllerImp
 D vtable for CSoundEmitterSystem
 D vtable for CSoundEnt
 D vtable for CSoundEnvelopeController
 D vtable for CSoundPatchSaveRestoreOps
 D vtable for CSoundscapeSystem
 D vtable for CSpatialEntity
 D vtable for CSpotlightEnd
 D vtable for CSprayCan
 D vtable for CSprite
 D vtable for CSpriteOriented
 D vtable for CSpriteTrail
 D vtable for CStatueProp
 D vtable for CStdStringSaveRestoreOps
 D vtable for CSteamJet
 D vtable for CSteamWorksGameStatsServer
 D vtable for CSteamWorksGameStatsUploader
 D vtable for CStreamingUGCDownloader
 D vtable for CStringProperty
 D vtable for CStringTableSaveRestoreOps
 D vtable for CStripWeapons
 D vtable for CSun
 D vtable for CSunlightShadowControl
 D vtable for CSurrender
 D vtable for CSurroundTest
 D vtable for CSwapTeams
 D vtable for CTEArmorRicochet
 D vtable for CTEBSPDecal
 D vtable for CTEBaseBeam
 D vtable for CTEBeamEntPoint
 D vtable for CTEBeamEnts
 D vtable for CTEBeamFollow
 D vtable for CTEBeamLaser
 D vtable for CTEBeamPoints
 D vtable for CTEBeamRing
 D vtable for CTEBeamRingPoint
 D vtable for CTEBeamSpline
 D vtable for CTEBloodSprite
 D vtable for CTEBloodStream
 D vtable for CTEBreakModel
 D vtable for CTEBubbleTrail
 D vtable for CTEBubbles
 D vtable for CTEClientProjectile
 D vtable for CTEDecal
 D vtable for CTEDust
 D vtable for CTEDynamicLight
 D vtable for CTEEffectDispatch
 D vtable for CTEEnergySplash
 D vtable for CTEExplosion
 D vtable for CTEFireBullets
 D vtable for CTEFizz
 D vtable for CTEFootprintDecal
 D vtable for CTEFoundryHelpers
 D vtable for CTEGaussExplosion
 D vtable for CTEGlowSprite
 D vtable for CTEImpact
 D vtable for CTEKillPlayerAttachments
 D vtable for CTELargeFunnel
 D vtable for CTEMetalSparks
 D vtable for CTEMuzzleFlash
 D vtable for CTEPhysicsProp
 D vtable for CTEPlantBomb
 D vtable for CTEPlayerAnimEvent
 D vtable for CTEPlayerDecal
 D vtable for CTEProjectedDecal
 D vtable for CTERadioIcon
 D vtable for CTEShatterSurface
 D vtable for CTEShowLine
 D vtable for CTESmoke
 D vtable for CTESparks
 D vtable for CTESprite
 D vtable for CTESpriteSpray
 D vtable for CTEWorldDecal
 D vtable for CTankTargetChange
 D vtable for CTankTrainAI
 D vtable for CTargetCDAudioRep
 D vtable for CTargetChangeGravity
 D vtable for CTeam
 D vtable for CTeamRecipientFilter
 D vtable for CTeamSpawnPoint
 D vtable for CTeamVehicleSpawnPoint
 D vtable for CTeamplayRules
 D vtable for CTempEntTester
 D vtable for CTempEntsSystem
 D vtable for CTemplate_SaveRestoreBlockHandler
 D vtable for CTemplatesHook
 D vtable for CTesla
 D vtable for CTestEffect
 D vtable for CTestTraceline
 D vtable for CTest_ProxyToggle_Networkable
 D vtable for CTextureIdProperty
 D vtable for CTextureToggle
 D vtable for CThinkContextsSaveDataOps
 D vtable for CThrustController
 D vtable for CTimerEntity
 D vtable for CTonemapSystem
 D vtable for CTonemapTrigger
 D vtable for CToolFrameworkServer
 D vtable for CTraceFilterAgainstEntityList
 D vtable for CTraceFilterDoor
 D vtable for CTraceFilterEntity
 D vtable for CTraceFilterEntityIgnoreOther
 D vtable for CTraceFilterLOS
 D vtable for CTraceFilterMelee
 D vtable for CTraceFilterNav
 D vtable for CTraceFilterNoCombatCharacters
 D vtable for CTraceFilterNoNPCsOrPlayer
 D vtable for CTraceFilterNoPlayers
 D vtable for CTraceFilterPlayersNPCs
 D vtable for CTraceFilterPlayersNPCsPhysicsProps
 D vtable for CTraceFilterPushFinal
 D vtable for CTraceFilterPushMove
 D vtable for CTraceFilterSimple
 D vtable for CTraceFilterSimpleList
 D vtable for CTraceFilterSkipNPCs
 D vtable for CTraceFilterSkipTwoEntities
 D vtable for CTraceFilterSkipTwoEntitiesAndCheckTeamMask
 D vtable for CTraceFilterSkipTwoEntitiesAndTeammates
 D vtable for CTraceFilterValidForDecal
 D vtable for CTraceFilterWalkableEntities
 D vtable for CTracePassFilter
 D vtable for CTriggerAutoCrouch
 D vtable for CTriggerBombReset
 D vtable for CTriggerBrush
 D vtable for CTriggerCDAudio
 D vtable for CTriggerCamera
 D vtable for CTriggerCameraMultiplayer
 D vtable for CTriggerGravity
 D vtable for CTriggerHierarchy
 D vtable for CTriggerHurt
 D vtable for CTriggerImpact
 D vtable for CTriggerLook
 D vtable for CTriggerMultiple
 D vtable for CTriggerOnce
 D vtable for CTriggerPlayerMovement
 D vtable for CTriggerProximity
 D vtable for CTriggerPush
 D vtable for CTriggerRemove
 D vtable for CTriggerSave
 D vtable for CTriggerSoundscape
 D vtable for CTriggerTeleport
 D vtable for CTriggerToggleSave
 D vtable for CTriggerTraceEnum
 D vtable for CTriggerVPhysicsMotion
 D vtable for CTriggerViewProxy
 D vtable for CTriggerVolume
 D vtable for CTriggerWind
 D vtable for CUnpauseMatchIssue
 D vtable for CUsePushFilter
 D vtable for CUserCmd
 D vtable for CUtlCStringConversion
 D vtable for CUtlCachedFileData<CModelSoundsCache>
 D vtable for CUtlCharConversion
 D vtable for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>
 D vtable for CUtlNoEscConversion
 D vtable for CUtlSymbolDataOps
 D vtable for CUtlVectorDataOps<CAI_InterestTarget, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D vtable for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 D vtable for CVGuiScreen
 D vtable for CVScriptGameSystem
 D vtable for CVScriptSaveRestoreBlockHandler
 D vtable for CVarBitVecSaveRestoreOps<CBitVec<32> >
 D vtable for CVariantSaveDataOps
 D vtable for CVehicleSoundsParser
 D vtable for CVisibilityMonitor
 D vtable for CVoiceGameMgr
 D vtable for CVoiceGameMgrHelper
 D vtable for CVoteController
 D vtable for CWC_UpdateIgnoreList
 D vtable for CWaterBullet
 D vtable for CWaterLODControl
 D vtable for CWeaponAWP
 D vtable for CWeaponAug
 D vtable for CWeaponBizon
 D vtable for CWeaponCSBase
 D vtable for CWeaponCSBaseGun
 D vtable for CWeaponCycler
 D vtable for CWeaponDatabase
 D vtable for CWeaponElite
 D vtable for CWeaponFamas
 D vtable for CWeaponFiveSeven
 D vtable for CWeaponG3SG1
 D vtable for CWeaponGalil
 D vtable for CWeaponGalilAR
 D vtable for CWeaponGlock
 D vtable for CWeaponHKP2000
 D vtable for CWeaponLOSFilter
 D vtable for CWeaponList
 D vtable for CWeaponM249
 D vtable for CWeaponM3
 D vtable for CWeaponM4A1
 D vtable for CWeaponMAC10
 D vtable for CWeaponMP5Navy
 D vtable for CWeaponMP7
 D vtable for CWeaponMP9
 D vtable for CWeaponMag7
 D vtable for CWeaponNOVA
 D vtable for CWeaponNegev
 D vtable for CWeaponP228
 D vtable for CWeaponP250
 D vtable for CWeaponP90
 D vtable for CWeaponSCAR20
 D vtable for CWeaponSG550
 D vtable for CWeaponSG552
 D vtable for CWeaponSG556
 D vtable for CWeaponSSG08
 D vtable for CWeaponSawedoff
 D vtable for CWeaponScout
 D vtable for CWeaponTMP
 D vtable for CWeaponTaser
 D vtable for CWeaponTec9
 D vtable for CWeaponUMP45
 D vtable for CWeaponUSP
 D vtable for CWeaponXM1014
 D vtable for CWeightButton
 D vtable for CWindowPane
 D vtable for CWorkshop_GetContributors_Request
 D vtable for CWorkshop_GetContributors_Response
 D vtable for CWorkshop_PopulateItemDescriptions_Request
 D vtable for CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock
 D vtable for CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription
 D vtable for CWorkshop_SetItemPaymentRules_Request
 D vtable for CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule
 D vtable for CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule
 D vtable for CWorkshop_SetItemPaymentRules_Response
 D vtable for CWorld
 D vtable for CWorldItem
 D vtable for CWreckage
 D vtable for CheckImage
 D vtable for ClientGamePrecachePrecache::CResourcePrecacher
 D vtable for ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate
 D vtable for ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse
 D vtable for ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 D vtable for ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 D vtable for ClientJob_EMsgGCGiftedItems
 D vtable for ClientPrecachePrecache::CResourcePrecacher
 D vtable for ColumnButton
 D vtable for ConCommand
 D vtable for ConVar
 D vtable for CountdownTimer
 D vtable for DefuseBombState
 D vtable for DetailedSearchStatistic
 D vtable for Dragger
 D vtable for DustTrail
 D vtable for EditNav_PrecachePrecache::CResourcePrecacher
 D vtable for EffectsPrecachePrecache::CResourcePrecacher
 D vtable for EntityParticleTrailInfo_t
 D vtable for EscapeFromBombState
 D vtable for EscapeFromFlamesState
 D vtable for FetchBombState
 D vtable for FileWeaponInfo_t
 D vtable for FilterDamageType
 D vtable for FilterTeam
 D vtable for FollowState
 D vtable for GCSDK::CGCClient
 D vtable for GCSDK::CGCClientSharedObjectCache
 D vtable for GCSDK::CGCClientSharedObjectTypeCache
 D vtable for GCSDK::CGCSOCacheSubscribedJob
 D vtable for GCSDK::CGCSOCacheSubscriptionCheck
 D vtable for GCSDK::CGCSOCacheUnsubscribedJob
 D vtable for GCSDK::CGCSOCreateJob
 D vtable for GCSDK::CGCSODestroyJob
 D vtable for GCSDK::CGCSOUpdateJob
 D vtable for GCSDK::CGCSOUpdateMultipleJob
 D vtable for GCSDK::CJob
 D vtable for GCSDK::CProtoBufGCClientSendHandler
 D vtable for GCSDK::CProtoBufMsg<CMsgClientHello>
 D vtable for GCSDK::CProtoBufMsg<CMsgClientWelcome>
 D vtable for GCSDK::CProtoBufMsg<CMsgConnectionStatus>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCGiftedItems>
 D vtable for GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>
 D vtable for GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>
 D vtable for GCSDK::CProtoBufMsg<CMsgItemAcknowledged>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 D vtable for GCSDK::CProtoBufMsgBase
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 D vtable for GCSDK::CProtoBufMsgMemoryPoolBase
 D vtable for GCSDK::CProtoBufNetPacket
 D vtable for GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>
 D vtable for GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>
 D vtable for GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>
 D vtable for GCSDK::CRefCount
 D vtable for GCSDK::CSharedObjectCache
 D vtable for GCSDK::CSharedObjectTypeCache
 D vtable for GCSDK::CStructNetPacket
 D vtable for GCSDK::CWorkThreadPool
 D vtable for GameServerPing
 D vtable for GameTypes
 D vtable for GlobalStatistics
 D vtable for HideState
 D vtable for HidingSpot
 D vtable for HuntState
 D vtable for IDecalEmitterSystem
 D vtable for IEconTool
 D vtable for IGameStatTracker::CGameStatList<SMarketPurchases>
 D vtable for IGameStatTracker::CGameStatList<SWeaponHitData>
 D vtable for IGameStatTracker::CGameStatList<SWeaponMissData>
 D vtable for IGameSystem
 D vtable for IGameSystemPerFrame
 D vtable for IPredictionSystem
 D vtable for IdleState
 D vtable for IntervalTimer
 D vtable for InvestigateNoiseState
 D vtable for IpAddressMask
 D vtable for MenuItemCheckImage
 D vtable for MoveToState
 D vtable for MovieExplosion
 D vtable for OpenDoorState
 D vtable for OperationalStatisticDescription
 D vtable for OperationalStatisticElement
 D vtable for OperationalStatisticsPacket
 D vtable for ParticleSmokeGrenade
 D vtable for PhysFrictionEffectPrecache::CResourcePrecacher
 D vtable for PickupHostageState
 D vtable for PlantBombState
 D vtable for PlayerCommendationInfo
 D vtable for PlayerMedalsInfo
 D vtable for PlayerRankingInfo
 D vtable for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 D vtable for RR::CApplyContextOperator
 D vtable for RR::CDecrementOperator
 D vtable for RR::CIncrementOperator
 D vtable for RR::CToggleOperator
 D vtable for RadioImage
 D vtable for ResponseRules::CResponseSystem
 D vtable for RocketTrail
 D vtable for SendProp
 D vtable for ServerHltvInfo
 D vtable for SmokeTrail
 D vtable for SpawnPoint
 D vtable for SporeExplosion
 D vtable for SporeTrail
 D vtable for TournamentEvent
 D vtable for TournamentMatchSetup
 D vtable for TournamentPlayer
 D vtable for TournamentTeam
 D vtable for UseEntityState
 D vtable for WatchableMatchInfo
 D vtable for WeaponResourcesPrecache::CResourcePrecacher
 D vtable for chickenPrecache::CResourcePrecacher
 D vtable for decoy_projectilePrecache::CResourcePrecacher
 D vtable for entityflamePrecache::CResourcePrecacher
 D vtable for env_entity_freezingPrecache::CResourcePrecacher
 D vtable for fire_cracker_blastPrecache::CResourcePrecacher
 D vtable for flashbang_projectilePrecache::CResourcePrecacher
 D vtable for fogparams_t
 D vtable for fogplayerparams_t
 D vtable for hegrenade_projectilePrecache::CResourcePrecacher
 D vtable for hostage_carriable_propPrecache::CResourcePrecacher
 D vtable for infernoPrecache::CResourcePrecacher
 D vtable for item_defuserPrecache::CResourcePrecacher
 D vtable for locksound_t
 D vtable for molotov_projectilePrecache::CResourcePrecacher
 D vtable for planted_c4Precache::CResourcePrecacher
 D vtable for planted_c4_trainingPrecache::CResourcePrecacher
 D vtable for playerPrecache::CResourcePrecacher
 D vtable for sky3dparams_t
 D vtable for sky3dparams_t::NetworkVar_fog
 D vtable for smokegrenade_projectilePrecache::CResourcePrecacher
 D vtable for spraycanPrecache::CResourcePrecacher
 D vtable for vehicle_crashsound_t
 D vtable for vehicle_gear_t
 D vtable for vehiclesounds_t
 D vtable for vgui::AnimatingImagePanel
 D vtable for vgui::AnimationController
 D vtable for vgui::BaseTooltip
 D vtable for vgui::BuildGroup
 D vtable for vgui::BuildModeDialog
 D vtable for vgui::Button
 D vtable for vgui::CBitmapImagePanel
 D vtable for vgui::CTreeViewListControl
 D vtable for vgui::CheckButton
 D vtable for vgui::CircularProgressBar
 D vtable for vgui::ClickPanel
 D vtable for vgui::ComboBox
 D vtable for vgui::ComboBoxButton
 D vtable for vgui::ContinuousProgressBar
 D vtable for vgui::CvarToggleCheckButton<ConVarRef>
 D vtable for vgui::Divider
 D vtable for vgui::EditablePanel
 D vtable for vgui::ExpandButton
 D vtable for vgui::FocusNavGroup
 D vtable for vgui::Frame
 D vtable for vgui::FrameButton
 D vtable for vgui::FrameSystemButton
 D vtable for vgui::GraphPanel
 D vtable for vgui::Image
 D vtable for vgui::ImagePanel
 D vtable for vgui::Label
 D vtable for vgui::ListPanel
 D vtable for vgui::ListViewItem
 D vtable for vgui::ListViewPanel
 D vtable for vgui::Menu
 D vtable for vgui::MenuBar
 D vtable for vgui::MenuButton
 D vtable for vgui::MenuItem
 D vtable for vgui::MenuSeparator
 D vtable for vgui::MessageBox
 D vtable for vgui::Panel
 D vtable for vgui::PanelListPanel
 D vtable for vgui::ProgressBar
 D vtable for vgui::RadioButton
 D vtable for vgui::RichText
 D vtable for vgui::RichTextInterior
 D vtable for vgui::ScalableImagePanel
 D vtable for vgui::ScrollBar
 D vtable for vgui::ScrollBarSlider
 D vtable for vgui::TextEntry
 D vtable for vgui::TextImage
 D vtable for vgui::TextTooltip
 D vtable for vgui::ToggleButton
 D vtable for vgui::TreeNode
 D vtable for vgui::TreeNodeDropPanel
 D vtable for vgui::TreeNodeImage
 D vtable for vgui::TreeNodeText
 D vtable for vgui::TreeView
 D vtable for vgui::TreeViewSubPanel
 D vtable for vgui::URLLabel
 D vtable for vgui_screenPrecache::CResourcePrecacher
 D vtable for weapon_c4Precache::CResourcePrecacher
 D vtable for weapon_decoyPrecache::CResourcePrecacher
 D vtable for weapon_flashbangPrecache::CResourcePrecacher
 D vtable for weapon_hegrenadePrecache::CResourcePrecacher
 D vtable for weapon_incgrenadePrecache::CResourcePrecacher
 D vtable for weapon_knifePrecache::CResourcePrecacher
 D vtable for weapon_knifeggPrecache::CResourcePrecacher
 D vtable for weapon_molotovPrecache::CResourcePrecacher
 D vtable for weapon_smokegrenadePrecache::CResourcePrecacher
 DevMsg
 DevMsg(char const*, ...)
 DevWarning
 DevWarning(char const*, ...)
 DoNewAssertDialog
 Error
 GenericThreadLocals::CThreadLocalBase::CThreadLocalBase()
 GenericThreadLocals::CThreadLocalBase::Get() const
 GenericThreadLocals::CThreadLocalBase::Set(void*)
 GenericThreadLocals::CThreadLocalBase::~CThreadLocalBase()
 GetCPUInformation
 KeyValuesSystem
 LOG_GENERAL
 LoggingSystem_AddTagToCurrentChannel
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 LoggingSystem_LogAssert
 LoggingSystem_RegisterLoggingChannel
 MemAllocScratch
 MemFreeScratch
 Msg
 OSAtomicCompareAndSwap32Barrier
 OSMemoryBarrier
 Plat_ExitProcess
 Plat_FloatTime
 Plat_GetLocalTime
 Plat_IsInBenchmarkMode
 Plat_IsInDebugSession
 Plat_MSTime
 Plat_SetBenchmarkMode
 Platform_gmtime
 R CBitBuffer::s_nMaskTable
 R CLogicScript::RunVScripts()::szAddCode
 R CS_PLAYER_SPEED_CLIMB_MODIFIER
 R CS_PLAYER_SPEED_DUCK_MODIFIER
 R CS_PLAYER_SPEED_HAS_HOSTAGE
 R CS_PLAYER_SPEED_OBSERVER
 R CS_PLAYER_SPEED_RUN
 R CS_PLAYER_SPEED_SHIELD
 R CS_PLAYER_SPEED_STOPPED
 R CS_PLAYER_SPEED_VIP
 R CS_PLAYER_SPEED_WALK_MODIFIER
 R Four_Epsilons
 R Four_FLT_MAX
 R Four_Negative_FLT_MAX
 R Four_Ones
 R Four_PointFives
 R Four_Threes
 R Four_Zeros
 R WeaponName_StatId_Table
 R g_SIMD_ComponentMask
 R g_SIMD_clear_wmask
 R g_SIMD_signmask
 R nanmask
 R std::tr1::__detail::_Primes<4>::__primes
 R typeinfo name for AccountActivity
 R typeinfo name for AttackState
 R typeinfo name for BotBombStatusMeme
 R typeinfo name for BotBombsiteStatusMeme
 R typeinfo name for BotDefendHereMeme
 R typeinfo name for BotEventInterface
 R typeinfo name for BotFollowMeme
 R typeinfo name for BotHeardNoiseMeme
 R typeinfo name for BotHelpMeme
 R typeinfo name for BotHostageBeingTakenMeme
 R typeinfo name for BotMeme
 R typeinfo name for BotRequestReportMeme
 R typeinfo name for BotState
 R typeinfo name for BotWarnSniperMeme
 R typeinfo name for BotWhereBombMeme
 R typeinfo name for BuyState
 R typeinfo name for CAISound
 R typeinfo name for CAI_AllySpeechManager
 R typeinfo name for CAI_AssaultBehavior
 R typeinfo name for CAI_AssaultGoal
 R typeinfo name for CAI_BaseActor
 R typeinfo name for CAI_BaseHumanoid
 R typeinfo name for CAI_BaseNPC
 R typeinfo name for CAI_BattleLine
 R typeinfo name for CAI_Behavior<CAI_BaseNPC, 100000>
 R typeinfo name for CAI_BehaviorBase
 R typeinfo name for CAI_BehaviorHost<CAI_BaseNPC>
 R typeinfo name for CAI_BehaviorHostBase<CAI_BaseNPC>
 R typeinfo name for CAI_BlendedMotor
 R typeinfo name for CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >
 R typeinfo name for CAI_ChangeHintGroup
 R typeinfo name for CAI_ChangeTarget
 R typeinfo name for CAI_Component
 R typeinfo name for CAI_ComponentWithOuter<CAI_BaseNPC, CAI_BehaviorBase>
 R typeinfo name for CAI_DefMovementSink
 R typeinfo name for CAI_DynamicLink
 R typeinfo name for CAI_DynamicLinkController
 R typeinfo name for CAI_EnemiesListSaveRestoreOps
 R typeinfo name for CAI_Expresser
 R typeinfo name for CAI_ExpresserHost<CAI_BaseHumanoid>
 R typeinfo name for CAI_ExpresserHost<CBasePlayer>
 R typeinfo name for CAI_ExpresserHost<CFlexExpresserShim>
 R typeinfo name for CAI_ExpresserHost<CHostageExpresserShim>
 R typeinfo name for CAI_ExpresserSink
 R typeinfo name for CAI_ExpresserWithFollowup
 R typeinfo name for CAI_FightFromCoverBehavior
 R typeinfo name for CAI_FightFromCoverGoal
 R typeinfo name for CAI_FollowBehavior
 R typeinfo name for CAI_FollowGoal
 R typeinfo name for CAI_GoalEntity
 R typeinfo name for CAI_Hint
 R typeinfo name for CAI_LeadBehavior
 R typeinfo name for CAI_LeadBehaviorHandler
 R typeinfo name for CAI_LeadGoal
 R typeinfo name for CAI_LeadGoal_Weapon
 R typeinfo name for CAI_LocalNavigator
 R typeinfo name for CAI_MappedActivityBehavior_Temporary
 R typeinfo name for CAI_Motor
 R typeinfo name for CAI_MoveAndShootOverlay
 R typeinfo name for CAI_MoveProbe
 R typeinfo name for CAI_NavInHintGroupFilter
 R typeinfo name for CAI_Navigator
 R typeinfo name for CAI_Network
 R typeinfo name for CAI_NetworkManager
 R typeinfo name for CAI_Pathfinder
 R typeinfo name for CAI_PlayerAlly
 R typeinfo name for CAI_ProxyMovementSink
 R typeinfo name for CAI_RadialLinkController
 R typeinfo name for CAI_SaveRestoreBlockHandler
 R typeinfo name for CAI_ScriptConditions
 R typeinfo name for CAI_ScriptedSchedule
 R typeinfo name for CAI_ScriptedSentence
 R typeinfo name for CAI_ScriptedSequence
 R typeinfo name for CAI_SensedObjectsManager
 R typeinfo name for CAI_Senses
 R typeinfo name for CAI_SpeechFilter
 R typeinfo name for CAI_StandoffBehavior
 R typeinfo name for CAI_StandoffGoal
 R typeinfo name for CAI_SystemHook
 R typeinfo name for CAI_TacticalServices
 R typeinfo name for CAI_TestHull
 R typeinfo name for CAK47
 R typeinfo name for CActivityDataOps
 R typeinfo name for CAimTargetManager
 R typeinfo name for CAmbientGeneric
 R typeinfo name for CAmmoDef
 R typeinfo name for CAnchorList
 R typeinfo name for CAreaPortal
 R typeinfo name for CAssaultPoint
 R typeinfo name for CAttributeContainer
 R typeinfo name for CAttributeContainer::NetworkVar_m_Item
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<Vector, Vector>
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<float, float>
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<unsigned int, float>
 R typeinfo name for CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>
 R typeinfo name for CAttributeIterator_HasAttribute
 R typeinfo name for CAttributeList
 R typeinfo name for CAttributeManager
 R typeinfo name for CAttribute_String
 R typeinfo name for CAutoGameSystem
 R typeinfo name for CAutoGameSystemPerFrame
 R typeinfo name for CBaseAnimating
 R typeinfo name for CBaseAnimatingOverlay
 R typeinfo name for CBaseAppSystem<IParticleSystemQuery>
 R typeinfo name for CBaseButton
 R typeinfo name for CBaseCSGrenade
 R typeinfo name for CBaseCSGrenadeProjectile
 R typeinfo name for CBaseCSIssue
 R typeinfo name for CBaseCombatCharacter
 R typeinfo name for CBaseCombatWeapon
 R typeinfo name for CBaseDMStart
 R typeinfo name for CBaseDoor
 R typeinfo name for CBaseEntity
 R typeinfo name for CBaseEntity*
 R typeinfo name for CBaseEntity::NetworkVar_m_Collision
 R typeinfo name for CBaseEntityClassList
 R typeinfo name for CBaseEntityList
 R typeinfo name for CBaseEntityScriptInstanceHelper
 R typeinfo name for CBaseFilter
 R typeinfo name for CBaseFire
 R typeinfo name for CBaseFlex
 R typeinfo name for CBaseGameStats
 R typeinfo name for CBaseGameStats_Driver
 R typeinfo name for CBaseGameSystem
 R typeinfo name for CBaseGameSystemPerFrame
 R typeinfo name for CBaseGrenade
 R typeinfo name for CBaseIssue
 R typeinfo name for CBaseMoveBehavior
 R typeinfo name for CBaseMultiplayerPlayer
 R typeinfo name for CBaseParticleEntity
 R typeinfo name for CBasePlatTrain
 R typeinfo name for CBasePlayer
 R typeinfo name for CBasePlayer::NetworkVar_m_Local
 R typeinfo name for CBasePlayer::NetworkVar_m_PlayerFog
 R typeinfo name for CBasePlayer::NetworkVar_pl
 R typeinfo name for CBasePlayerAnimState
 R typeinfo name for CBaseProjectile
 R typeinfo name for CBaseProp
 R typeinfo name for CBasePropDoor
 R typeinfo name for CBaseResourcePrecacher
 R typeinfo name for CBaseServerVehicle
 R typeinfo name for CBaseTempEntity
 R typeinfo name for CBaseToggle
 R typeinfo name for CBaseTrigger
 R typeinfo name for CBaseVPhysicsTrigger
 R typeinfo name for CBaseViewModel
 R typeinfo name for CBaseWorkshopHTTPRequest
 R typeinfo name for CBeam
 R typeinfo name for CBeamSpotlight
 R typeinfo name for CBlendingCycler
 R typeinfo name for CBlood
 R typeinfo name for CBloodSplat
 R typeinfo name for CBombShieldTraceEnum
 R typeinfo name for CBombTarget
 R typeinfo name for CBoneFollower
 R typeinfo name for CBoolProperty
 R typeinfo name for CBot<CCSPlayer>
 R typeinfo name for CBotBreakableEnumerator
 R typeinfo name for CBotCmd
 R typeinfo name for CBotDoorEnumerator
 R typeinfo name for CBotManager
 R typeinfo name for CBreakModelsPrecached
 R typeinfo name for CBreakParser
 R typeinfo name for CBreakable
 R typeinfo name for CBreakableProp
 R typeinfo name for CBreakableSurface
 R typeinfo name for CBroadcastRecipientFilter
 R typeinfo name for CBubbling
 R typeinfo name for CBuildModeNavCombo
 R typeinfo name for CBulletsTraceFilter
 R typeinfo name for CBuyZone
 R typeinfo name for CC4
 R typeinfo name for CCLCMsg_BaselineAck
 R typeinfo name for CCLCMsg_ClientInfo
 R typeinfo name for CCLCMsg_CmdKeyValues
 R typeinfo name for CCLCMsg_FileCRCCheck
 R typeinfo name for CCLCMsg_ListenEvents
 R typeinfo name for CCLCMsg_LoadingProgress
 R typeinfo name for CCLCMsg_Move
 R typeinfo name for CCLCMsg_RespondCvarValue
 R typeinfo name for CCLCMsg_SplitPlayerConnect
 R typeinfo name for CCLCMsg_VoiceData
 R typeinfo name for CCSAmmoDef
 R typeinfo name for CCSBot
 R typeinfo name for CCSBotManager
 R typeinfo name for CCSBotManager::BombBeepEvent
 R typeinfo name for CCSBotManager::BombDefuseAbortEvent
 R typeinfo name for CCSBotManager::BombDefuseBeginEvent
 R typeinfo name for CCSBotManager::BombDefusedEvent
 R typeinfo name for CCSBotManager::BombExplodedEvent
 R typeinfo name for CCSBotManager::BombPickedUpEvent
 R typeinfo name for CCSBotManager::BombPlantedEvent
 R typeinfo name for CCSBotManager::BreakBreakableEvent
 R typeinfo name for CCSBotManager::BreakPropEvent
 R typeinfo name for CCSBotManager::BulletImpactEvent
 R typeinfo name for CCSBotManager::DecoyDetonateEvent
 R typeinfo name for CCSBotManager::DecoyFiringEvent
 R typeinfo name for CCSBotManager::DoorMovingEvent
 R typeinfo name for CCSBotManager::FlashbangDetonateEvent
 R typeinfo name for CCSBotManager::GrenadeBounceEvent
 R typeinfo name for CCSBotManager::HEGrenadeDetonateEvent
 R typeinfo name for CCSBotManager::HostageFollowsEvent
 R typeinfo name for CCSBotManager::HostageRescuedAllEvent
 R typeinfo name for CCSBotManager::MolotovDetonateEvent
 R typeinfo name for CCSBotManager::NavBlockedEvent
 R typeinfo name for CCSBotManager::PlayerDeathEvent
 R typeinfo name for CCSBotManager::PlayerFallDamageEvent
 R typeinfo name for CCSBotManager::PlayerFootstepEvent
 R typeinfo name for CCSBotManager::PlayerRadioEvent
 R typeinfo name for CCSBotManager::RoundEndEvent
 R typeinfo name for CCSBotManager::RoundFreezeEndEvent
 R typeinfo name for CCSBotManager::RoundStartEvent
 R typeinfo name for CCSBotManager::ServerShutdownEvent
 R typeinfo name for CCSBotManager::SmokeGrenadeDetonateEvent
 R typeinfo name for CCSBotManager::WeaponFireEvent
 R typeinfo name for CCSBotManager::WeaponFireOnEmptyEvent
 R typeinfo name for CCSBotManager::WeaponReloadEvent
 R typeinfo name for CCSBotManager::WeaponZoomEvent
 R typeinfo name for CCSEntitySpotting
 R typeinfo name for CCSEventLog
 R typeinfo name for CCSFunFactMgr
 R typeinfo name for CCSGCServerSystem
 R typeinfo name for CCSGameMovement
 R typeinfo name for CCSGameRules
 R typeinfo name for CCSGameRules::ICalculateEndOfRoundMVPHook_t
 R typeinfo name for CCSGameRulesProxy
 R typeinfo name for CCSGameStats
 R typeinfo name for CCSHLTVDirector
 R typeinfo name for CCSHostageAnimState
 R typeinfo name for CCSInventoryManager
 R typeinfo name for CCSMLightManager
 R typeinfo name for CCSNavArea
 R typeinfo name for CCSPlayer
 R typeinfo name for CCSPlayerAnimState
 R typeinfo name for CCSPlayerInventory
 R typeinfo name for CCSPlayerMove
 R typeinfo name for CCSPlayerResource
 R typeinfo name for CCSRagdoll
 R typeinfo name for CCSTeam
 R typeinfo name for CCSUsrMsg_AchievementEvent
 R typeinfo name for CCSUsrMsg_AdjustMoney
 R typeinfo name for CCSUsrMsg_AmmoDenied
 R typeinfo name for CCSUsrMsg_BarTime
 R typeinfo name for CCSUsrMsg_CallVoteFailed
 R typeinfo name for CCSUsrMsg_ClientInfo
 R typeinfo name for CCSUsrMsg_CloseCaption
 R typeinfo name for CCSUsrMsg_CloseCaptionDirect
 R typeinfo name for CCSUsrMsg_CurrentTimescale
 R typeinfo name for CCSUsrMsg_Damage
 R typeinfo name for CCSUsrMsg_DesiredTimescale
 R typeinfo name for CCSUsrMsg_DisconnectToLobby
 R typeinfo name for CCSUsrMsg_DisplayInventory
 R typeinfo name for CCSUsrMsg_Fade
 R typeinfo name for CCSUsrMsg_GameTitle
 R typeinfo name for CCSUsrMsg_Geiger
 R typeinfo name for CCSUsrMsg_GlowPropTurnOff
 R typeinfo name for CCSUsrMsg_HintText
 R typeinfo name for CCSUsrMsg_HudMsg
 R typeinfo name for CCSUsrMsg_HudText
 R typeinfo name for CCSUsrMsg_ItemDrop
 R typeinfo name for CCSUsrMsg_ItemPickup
 R typeinfo name for CCSUsrMsg_KeyHintText
 R typeinfo name for CCSUsrMsg_KillCam
 R typeinfo name for CCSUsrMsg_MarkAchievement
 R typeinfo name for CCSUsrMsg_MatchEndConditions
 R typeinfo name for CCSUsrMsg_MatchStatsUpdate
 R typeinfo name for CCSUsrMsg_PlayerStatsUpdate
 R typeinfo name for CCSUsrMsg_PlayerStatsUpdate_Stat
 R typeinfo name for CCSUsrMsg_ProcessSpottedEntityUpdate
 R typeinfo name for CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate
 R typeinfo name for CCSUsrMsg_RadioText
 R typeinfo name for CCSUsrMsg_RawAudio
 R typeinfo name for CCSUsrMsg_ReloadEffect
 R typeinfo name for CCSUsrMsg_ReportHit
 R typeinfo name for CCSUsrMsg_RequestState
 R typeinfo name for CCSUsrMsg_ResetHud
 R typeinfo name for CCSUsrMsg_RoundBackupFilenames
 R typeinfo name for CCSUsrMsg_Rumble
 R typeinfo name for CCSUsrMsg_SayText
 R typeinfo name for CCSUsrMsg_SayText2
 R typeinfo name for CCSUsrMsg_SendAudio
 R typeinfo name for CCSUsrMsg_SendLastKillerDamageToClient
 R typeinfo name for CCSUsrMsg_SendPlayerItemDrops
 R typeinfo name for CCSUsrMsg_SendPlayerItemFound
 R typeinfo name for CCSUsrMsg_ServerRankRevealAll
 R typeinfo name for CCSUsrMsg_ServerRankUpdate
 R typeinfo name for CCSUsrMsg_ServerRankUpdate_RankUpdate
 R typeinfo name for CCSUsrMsg_Shake
 R typeinfo name for CCSUsrMsg_ShowMenu
 R typeinfo name for CCSUsrMsg_StopSpectatorMode
 R typeinfo name for CCSUsrMsg_TextMsg
 R typeinfo name for CCSUsrMsg_Train
 R typeinfo name for CCSUsrMsg_VGUIMenu
 R typeinfo name for CCSUsrMsg_VGUIMenu_Subkey
 R typeinfo name for CCSUsrMsg_VoiceMask
 R typeinfo name for CCSUsrMsg_VoiceMask_PlayerMask
 R typeinfo name for CCSUsrMsg_VoteFailed
 R typeinfo name for CCSUsrMsg_VotePass
 R typeinfo name for CCSUsrMsg_VoteSetup
 R typeinfo name for CCSUsrMsg_VoteStart
 R typeinfo name for CCSUsrMsg_WarmupHasEnded
 R typeinfo name for CCSUsrMsg_XRankGet
 R typeinfo name for CCSUsrMsg_XRankUpd
 R typeinfo name for CCSWeaponInfo
 R typeinfo name for CCStrike15ItemDefinition
 R typeinfo name for CCStrike15ItemSchema
 R typeinfo name for CCStrike15ItemSystem
 R typeinfo name for CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>
 R typeinfo name for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>
 R typeinfo name for CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>
 R typeinfo name for CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>
 R typeinfo name for CCallback<CGCClientSystem, SteamServersConnected_t, true>
 R typeinfo name for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 R typeinfo name for CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>
 R typeinfo name for CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>
 R typeinfo name for CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>
 R typeinfo name for CCallbackBase
 R typeinfo name for CCascadeLight
 R typeinfo name for CChangeLevel
 R typeinfo name for CChangeLevelIssue
 R typeinfo name for CCheckClient
 R typeinfo name for CChicken
 R typeinfo name for CChildOperatorDefinition
 R typeinfo name for CChoreoEvent
 R typeinfo name for CChoreoScene
 R typeinfo name for CChoreoStringPool
 R typeinfo name for CClassPtrSaveRestoreOps
 R typeinfo name for CCleanupDefaultRelationShips
 R typeinfo name for CClientHeaderOverwatchEvidence
 R typeinfo name for CCollectionInfoHTTPRequest
 R typeinfo name for CCollisionEvent
 R typeinfo name for CCollisionProperty
 R typeinfo name for CColorCorrection
 R typeinfo name for CColorCorrectionSystem
 R typeinfo name for CColorCorrectionVolume
 R typeinfo name for CColorProperty
 R typeinfo name for CCombatCharVisCache
 R typeinfo name for CCommentaryAuto
 R typeinfo name for CCommentarySystem
 R typeinfo name for CCommentaryViewPosition
 R typeinfo name for CCommentary_SaveRestoreBlockHandler
 R typeinfo name for CConceptHistoriesDataOps
 R typeinfo name for CConstantForceController
 R typeinfo name for CConstraintAnchor
 R typeinfo name for CCopyRecipientFilter
 R typeinfo name for CCopyableUtlVector<attachedparticlecontrolpoint_t>
 R typeinfo name for CCopyableUtlVector<unsigned int>
 R typeinfo name for CCredits
 R typeinfo name for CCycler
 R typeinfo name for CDEagle
 R typeinfo name for CDataGCCStrike15_v2_MatchInfo
 R typeinfo name for CDataGCCStrike15_v2_MatchmakingLockedInMatch
 R typeinfo name for CDataGCCStrike15_v2_TournamentGroup
 R typeinfo name for CDataGCCStrike15_v2_TournamentGroupTeam
 R typeinfo name for CDataGCCStrike15_v2_TournamentInfo
 R typeinfo name for CDataGCCStrike15_v2_TournamentMatchDraft
 R typeinfo name for CDataGCCStrike15_v2_TournamentMatchDraft_Entry
 R typeinfo name for CDataGCCStrike15_v2_TournamentSection
 R typeinfo name for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 R typeinfo name for CDataManagerBase
 R typeinfo name for CDataObjectAccessSystem
 R typeinfo name for CDebugHistory
 R typeinfo name for CDecal
 R typeinfo name for CDecalEmitterSystem
 R typeinfo name for CDecoyGrenade
 R typeinfo name for CDecoyProjectile
 R typeinfo name for CDedicatedServerWorkshopManager
 R typeinfo name for CDefSaveRestoreBlockHandler
 R typeinfo name for CDefSaveRestoreOps
 R typeinfo name for CDefaultAccessor
 R typeinfo name for CDefaultParticleSystemQuery
 R typeinfo name for CDefaultPlayerPickupVPhysics
 R typeinfo name for CDefaultResponseSystem
 R typeinfo name for CDefaultResponseSystemSaveRestoreBlockHandler
 R typeinfo name for CDetailBlocker
 R typeinfo name for CDevShotSystem
 R typeinfo name for CDirtySpatialPartitionEntityList
 R typeinfo name for CDllDemandLoader
 R typeinfo name for CDragDropHelperPanel
 R typeinfo name for CDynamicLight
 R typeinfo name for CDynamicProp
 R typeinfo name for CEconCraftingRecipeDefinition
 R typeinfo name for CEconDefaultEquippedDefinitionInstanceClient
 R typeinfo name for CEconEntity
 R typeinfo name for CEconEntity::NetworkVar_m_AttributeManager
 R typeinfo name for CEconItem
 R typeinfo name for CEconItemAttribute
 R typeinfo name for CEconItemAttributeDefinition
 R typeinfo name for CEconItemAttributeIterator_ApplyAttributeFloat
 R typeinfo name for CEconItemDefinition
 R typeinfo name for CEconItemDropRateBonus
 R typeinfo name for CEconItemEventTicket
 R typeinfo name for CEconItemPreviewDataBlock
 R typeinfo name for CEconItemPreviewDataBlock_Sticker
 R typeinfo name for CEconItemSchema
 R typeinfo name for CEconItemSetDefinition
 R typeinfo name for CEconItemSystem
 R typeinfo name for CEconItemView
 R typeinfo name for CEconItemView::NetworkVar_m_AttributeList
 R typeinfo name for CEconItemView::NetworkVar_m_NetworkedDynamicAttributesForDemos
 R typeinfo name for CEconLootListDefinition
 R typeinfo name for CEconStyleInfo
 R typeinfo name for CEconTool_BackpackExpander
 R typeinfo name for CEconTool_ClaimCode
 R typeinfo name for CEconTool_Collection
 R typeinfo name for CEconTool_CrateKey
 R typeinfo name for CEconTool_CustomizeTexture
 R typeinfo name for CEconTool_Default
 R typeinfo name for CEconTool_DescTag
 R typeinfo name for CEconTool_DuelingMinigame
 R typeinfo name for CEconTool_Gift
 R typeinfo name for CEconTool_NameTag
 R typeinfo name for CEconTool_Noisemaker
 R typeinfo name for CEconTool_PaintCan
 R typeinfo name for CEconTool_PaintKit
 R typeinfo name for CEconTool_Recipe
 R typeinfo name for CEconTool_SeasonPass
 R typeinfo name for CEconTool_StatTrakSwap
 R typeinfo name for CEconTool_Sticker
 R typeinfo name for CEconTool_WeddingRing
 R typeinfo name for CEconTool_WrappedGift
 R typeinfo name for CEffectsServer
 R typeinfo name for CEmbers
 R typeinfo name for CEmptyConVar
 R typeinfo name for CEnableMotionFixup
 R typeinfo name for CEntFireAutoCompletionFunctor
 R typeinfo name for CEntityBlocker
 R typeinfo name for CEntityClassList<CPhysicsNPCSolver>
 R typeinfo name for CEntityClassList<CPointCamera>
 R typeinfo name for CEntityClassList<CSkyCamera>
 R typeinfo name for CEntityDataInstantiator<CWatcherList>
 R typeinfo name for CEntityDataInstantiator<ModelScale>
 R typeinfo name for CEntityDataInstantiator<StepSimulationData>
 R typeinfo name for CEntityDataInstantiator<groundlink_t>
 R typeinfo name for CEntityDataInstantiator<physicspushlist_t>
 R typeinfo name for CEntityDataInstantiator<touchlink_t>
 R typeinfo name for CEntityDataInstantiator<vphysicsupdateai_t>
 R typeinfo name for CEntityDissolve
 R typeinfo name for CEntityFactory<CAISound>
 R typeinfo name for CEntityFactory<CAI_AllySpeechManager>
 R typeinfo name for CEntityFactory<CAI_AssaultGoal>
 R typeinfo name for CEntityFactory<CAI_BattleLine>
 R typeinfo name for CEntityFactory<CAI_ChangeHintGroup>
 R typeinfo name for CEntityFactory<CAI_ChangeTarget>
 R typeinfo name for CEntityFactory<CAI_DynamicLink>
 R typeinfo name for CEntityFactory<CAI_DynamicLinkController>
 R typeinfo name for CEntityFactory<CAI_FightFromCoverGoal>
 R typeinfo name for CEntityFactory<CAI_FollowGoal>
 R typeinfo name for CEntityFactory<CAI_Hint>
 R typeinfo name for CEntityFactory<CAI_LeadGoal>
 R typeinfo name for CEntityFactory<CAI_LeadGoal_Weapon>
 R typeinfo name for CEntityFactory<CAI_NetworkManager>
 R typeinfo name for CEntityFactory<CAI_RadialLinkController>
 R typeinfo name for CEntityFactory<CAI_ScriptConditions>
 R typeinfo name for CEntityFactory<CAI_ScriptedSchedule>
 R typeinfo name for CEntityFactory<CAI_ScriptedSentence>
 R typeinfo name for CEntityFactory<CAI_ScriptedSequence>
 R typeinfo name for CEntityFactory<CAI_SpeechFilter>
 R typeinfo name for CEntityFactory<CAI_StandoffGoal>
 R typeinfo name for CEntityFactory<CAI_TestHull>
 R typeinfo name for CEntityFactory<CAK47>
 R typeinfo name for CEntityFactory<CAmbientGeneric>
 R typeinfo name for CEntityFactory<CAreaPortal>
 R typeinfo name for CEntityFactory<CAssaultPoint>
 R typeinfo name for CEntityFactory<CBaseButton>
 R typeinfo name for CEntityFactory<CBaseCSGrenade>
 R typeinfo name for CEntityFactory<CBaseDMStart>
 R typeinfo name for CEntityFactory<CBaseDoor>
 R typeinfo name for CEntityFactory<CBaseEntity>
 R typeinfo name for CEntityFactory<CBaseFilter>
 R typeinfo name for CEntityFactory<CBaseFlex>
 R typeinfo name for CEntityFactory<CBaseGrenade>
 R typeinfo name for CEntityFactory<CBaseMoveBehavior>
 R typeinfo name for CEntityFactory<CBaseProjectile>
 R typeinfo name for CEntityFactory<CBaseTrigger>
 R typeinfo name for CEntityFactory<CBaseViewModel>
 R typeinfo name for CEntityFactory<CBeam>
 R typeinfo name for CEntityFactory<CBeamSpotlight>
 R typeinfo name for CEntityFactory<CBlendingCycler>
 R typeinfo name for CEntityFactory<CBlood>
 R typeinfo name for CEntityFactory<CBombTarget>
 R typeinfo name for CEntityFactory<CBoneFollower>
 R typeinfo name for CEntityFactory<CBreakable>
 R typeinfo name for CEntityFactory<CBreakableSurface>
 R typeinfo name for CEntityFactory<CBubbling>
 R typeinfo name for CEntityFactory<CBuyZone>
 R typeinfo name for CEntityFactory<CC4>
 R typeinfo name for CEntityFactory<CCSBot>
 R typeinfo name for CEntityFactory<CCSGameRulesProxy>
 R typeinfo name for CEntityFactory<CCSPlayer>
 R typeinfo name for CEntityFactory<CCSPlayerResource>
 R typeinfo name for CEntityFactory<CCSRagdoll>
 R typeinfo name for CEntityFactory<CCSTeam>
 R typeinfo name for CEntityFactory<CCascadeLight>
 R typeinfo name for CEntityFactory<CChangeLevel>
 R typeinfo name for CEntityFactory<CChicken>
 R typeinfo name for CEntityFactory<CColorCorrection>
 R typeinfo name for CEntityFactory<CColorCorrectionVolume>
 R typeinfo name for CEntityFactory<CCommentaryAuto>
 R typeinfo name for CEntityFactory<CCommentaryViewPosition>
 R typeinfo name for CEntityFactory<CConstraintAnchor>
 R typeinfo name for CEntityFactory<CCredits>
 R typeinfo name for CEntityFactory<CDEagle>
 R typeinfo name for CEntityFactory<CDebugHistory>
 R typeinfo name for CEntityFactory<CDecal>
 R typeinfo name for CEntityFactory<CDecoyGrenade>
 R typeinfo name for CEntityFactory<CDecoyProjectile>
 R typeinfo name for CEntityFactory<CDetailBlocker>
 R typeinfo name for CEntityFactory<CDynamicLight>
 R typeinfo name for CEntityFactory<CDynamicProp>
 R typeinfo name for CEntityFactory<CEmbers>
 R typeinfo name for CEntityFactory<CEnableMotionFixup>
 R typeinfo name for CEntityFactory<CEntityBlocker>
 R typeinfo name for CEntityFactory<CEntityDissolve>
 R typeinfo name for CEntityFactory<CEntityFlame>
 R typeinfo name for CEntityFactory<CEntityFreezing>
 R typeinfo name for CEntityFactory<CEntityParticleTrail>
 R typeinfo name for CEntityFactory<CEnvAmbientLight>
 R typeinfo name for CEntityFactory<CEnvBeam>
 R typeinfo name for CEntityFactory<CEnvBeverage>
 R typeinfo name for CEntityFactory<CEnvDOFController>
 R typeinfo name for CEntityFactory<CEnvDetailController>
 R typeinfo name for CEntityFactory<CEnvDustPuff>
 R typeinfo name for CEntityFactory<CEnvEffectsScript>
 R typeinfo name for CEntityFactory<CEnvEntityIgniter>
 R typeinfo name for CEntityFactory<CEnvEntityMaker>
 R typeinfo name for CEntityFactory<CEnvExplosion>
 R typeinfo name for CEntityFactory<CEnvFade>
 R typeinfo name for CEntityFactory<CEnvFireSensor>
 R typeinfo name for CEntityFactory<CEnvFireSource>
 R typeinfo name for CEntityFactory<CEnvFunnel>
 R typeinfo name for CEntityFactory<CEnvGlobal>
 R typeinfo name for CEntityFactory<CEnvGunfire>
 R typeinfo name for CEntityFactory<CEnvHudHint>
 R typeinfo name for CEntityFactory<CEnvInstructorHint>
 R typeinfo name for CEntityFactory<CEnvLaser>
 R typeinfo name for CEntityFactory<CEnvLight>
 R typeinfo name for CEntityFactory<CEnvMicrophone>
 R typeinfo name for CEntityFactory<CEnvMuzzleFlash>
 R typeinfo name for CEntityFactory<CEnvParticleScript>
 R typeinfo name for CEntityFactory<CEnvPlayerSurfaceTrigger>
 R typeinfo name for CEntityFactory<CEnvProjectedTexture>
 R typeinfo name for CEntityFactory<CEnvQuadraticBeam>
 R typeinfo name for CEntityFactory<CEnvScreenEffect>
 R typeinfo name for CEntityFactory<CEnvScreenOverlay>
 R typeinfo name for CEntityFactory<CEnvShake>
 R typeinfo name for CEntityFactory<CEnvShooter>
 R typeinfo name for CEntityFactory<CEnvSoundscape>
 R typeinfo name for CEntityFactory<CEnvSoundscapeProxy>
 R typeinfo name for CEntityFactory<CEnvSoundscapeTriggerable>
 R typeinfo name for CEntityFactory<CEnvSpark>
 R typeinfo name for CEntityFactory<CEnvSplash>
 R typeinfo name for CEntityFactory<CEnvTilt>
 R typeinfo name for CEntityFactory<CEnvTonemapController>
 R typeinfo name for CEntityFactory<CEnvTracer>
 R typeinfo name for CEntityFactory<CEnvViewPunch>
 R typeinfo name for CEntityFactory<CEnvWind>
 R typeinfo name for CEntityFactory<CEnvZoom>
 R typeinfo name for CEntityFactory<CEventQueueSaveLoadProxy>
 R typeinfo name for CEntityFactory<CFilterClass>
 R typeinfo name for CEntityFactory<CFilterContext>
 R typeinfo name for CEntityFactory<CFilterEnemy>
 R typeinfo name for CEntityFactory<CFilterMassGreater>
 R typeinfo name for CEntityFactory<CFilterModel>
 R typeinfo name for CEntityFactory<CFilterMultiple>
 R typeinfo name for CEntityFactory<CFilterName>
 R typeinfo name for CEntityFactory<CFire>
 R typeinfo name for CEntityFactory<CFireCrackerBlast>
 R typeinfo name for CEntityFactory<CFireSmoke>
 R typeinfo name for CEntityFactory<CFireTrail>
 R typeinfo name for CEntityFactory<CFish>
 R typeinfo name for CEntityFactory<CFishPool>
 R typeinfo name for CEntityFactory<CFlashbang>
 R typeinfo name for CEntityFactory<CFlashbangProjectile>
 R typeinfo name for CEntityFactory<CFlexExpresser>
 R typeinfo name for CEntityFactory<CFlextalkActor>
 R typeinfo name for CEntityFactory<CFogController>
 R typeinfo name for CEntityFactory<CFogTrigger>
 R typeinfo name for CEntityFactory<CFogVolume>
 R typeinfo name for CEntityFactory<CFootstepControl>
 R typeinfo name for CEntityFactory<CFuncAreaPortalWindow>
 R typeinfo name for CEntityFactory<CFuncBlockDMSpawns>
 R typeinfo name for CEntityFactory<CFuncBrush>
 R typeinfo name for CEntityFactory<CFuncConveyor>
 R typeinfo name for CEntityFactory<CFuncIllusionary>
 R typeinfo name for CEntityFactory<CFuncInstanceIoProxy>
 R typeinfo name for CEntityFactory<CFuncLadder>
 R typeinfo name for CEntityFactory<CFuncLadderEndPoint>
 R typeinfo name for CEntityFactory<CFuncMonitor>
 R typeinfo name for CEntityFactory<CFuncMoveLinear>
 R typeinfo name for CEntityFactory<CFuncNavBlocker>
 R typeinfo name for CEntityFactory<CFuncNavObstruction>
 R typeinfo name for CEntityFactory<CFuncOccluder>
 R typeinfo name for CEntityFactory<CFuncPlat>
 R typeinfo name for CEntityFactory<CFuncPlatRot>
 R typeinfo name for CEntityFactory<CFuncReflectiveGlass>
 R typeinfo name for CEntityFactory<CFuncRotating>
 R typeinfo name for CEntityFactory<CFuncSmokeVolume>
 R typeinfo name for CEntityFactory<CFuncTankTrain>
 R typeinfo name for CEntityFactory<CFuncTrackAuto>
 R typeinfo name for CEntityFactory<CFuncTrackChange>
 R typeinfo name for CEntityFactory<CFuncTrackTrain>
 R typeinfo name for CEntityFactory<CFuncTrain>
 R typeinfo name for CEntityFactory<CFuncTrainControls>
 R typeinfo name for CEntityFactory<CFuncVPhysicsClip>
 R typeinfo name for CEntityFactory<CFuncVehicleClip>
 R typeinfo name for CEntityFactory<CFuncWall>
 R typeinfo name for CEntityFactory<CFuncWallToggle>
 R typeinfo name for CEntityFactory<CFunc_DustCloud>
 R typeinfo name for CEntityFactory<CFunc_DustMotes>
 R typeinfo name for CEntityFactory<CFunc_LOD>
 R typeinfo name for CEntityFactory<CGameEnd>
 R typeinfo name for CEntityFactory<CGameGibManager>
 R typeinfo name for CEntityFactory<CGameMoney>
 R typeinfo name for CEntityFactory<CGamePlayerEquip>
 R typeinfo name for CEntityFactory<CGamePlayerTeam>
 R typeinfo name for CEntityFactory<CGamePlayerZone>
 R typeinfo name for CEntityFactory<CGameRoundEnd>
 R typeinfo name for CEntityFactory<CGameScore>
 R typeinfo name for CEntityFactory<CGameText>
 R typeinfo name for CEntityFactory<CGameUI>
 R typeinfo name for CEntityFactory<CGameWeaponManager>
 R typeinfo name for CEntityFactory<CGenericActor>
 R typeinfo name for CEntityFactory<CGenericCycler>
 R typeinfo name for CEntityFactory<CGenericFlexCycler>
 R typeinfo name for CEntityFactory<CGenericNPC>
 R typeinfo name for CEntityFactory<CGib>
 R typeinfo name for CEntityFactory<CGibShooter>
 R typeinfo name for CEntityFactory<CGunTarget>
 R typeinfo name for CEntityFactory<CHEGrenade>
 R typeinfo name for CEntityFactory<CHEGrenadeProjectile>
 R typeinfo name for CEntityFactory<CHandleDummy>
 R typeinfo name for CEntityFactory<CHandleTest>
 R typeinfo name for CEntityFactory<CHostage>
 R typeinfo name for CEntityFactory<CHostageCarriableProp>
 R typeinfo name for CEntityFactory<CHostageRescueZone>
 R typeinfo name for CEntityFactory<CIncendiaryGrenade>
 R typeinfo name for CEntityFactory<CInferno>
 R typeinfo name for CEntityFactory<CInfoCameraLink>
 R typeinfo name for CEntityFactory<CInfoGameEventProxy>
 R typeinfo name for CEntityFactory<CInfoInstructorHintBombTargetA>
 R typeinfo name for CEntityFactory<CInfoInstructorHintBombTargetB>
 R typeinfo name for CEntityFactory<CInfoInstructorHintHostageRescueZone>
 R typeinfo name for CEntityFactory<CInfoInstructorHintTarget>
 R typeinfo name for CEntityFactory<CInfoIntermission>
 R typeinfo name for CEntityFactory<CInfoLadderDismount>
 R typeinfo name for CEntityFactory<CInfoMassCenter>
 R typeinfo name for CEntityFactory<CInfoOverlayAccessor>
 R typeinfo name for CEntityFactory<CInfoRemarkable>
 R typeinfo name for CEntityFactory<CInfoTarget>
 R typeinfo name for CEntityFactory<CInfoViewParameters>
 R typeinfo name for CEntityFactory<CInstancedSceneEntity>
 R typeinfo name for CEntityFactory<CItemAmmo338MAG>
 R typeinfo name for CEntityFactory<CItemAmmo357SIG>
 R typeinfo name for CEntityFactory<CItemAmmo357SIG_MIN>
 R typeinfo name for CEntityFactory<CItemAmmo357SIG_P250>
 R typeinfo name for CEntityFactory<CItemAmmo357SIG_SMALL>
 R typeinfo name for CEntityFactory<CItemAmmo45ACP>
 R typeinfo name for CEntityFactory<CItemAmmo50AE>
 R typeinfo name for CEntityFactory<CItemAmmo556MM>
 R typeinfo name for CEntityFactory<CItemAmmo556MM_BOX>
 R typeinfo name for CEntityFactory<CItemAmmo556MM_SMALL>
 R typeinfo name for CEntityFactory<CItemAmmo57MM>
 R typeinfo name for CEntityFactory<CItemAmmo762MM>
 R typeinfo name for CEntityFactory<CItemAmmo9MM>
 R typeinfo name for CEntityFactory<CItemAmmoBuckshot>
 R typeinfo name for CEntityFactory<CItemAssaultSuit>
 R typeinfo name for CEntityFactory<CItemDefuser>
 R typeinfo name for CEntityFactory<CItemKevlar>
 R typeinfo name for CEntityFactory<CItemNvgs>
 R typeinfo name for CEntityFactory<CItemSoda>
 R typeinfo name for CEntityFactory<CKeepUpright>
 R typeinfo name for CEntityFactory<CKnife>
 R typeinfo name for CEntityFactory<CKnifeGG>
 R typeinfo name for CEntityFactory<CLight>
 R typeinfo name for CEntityFactory<CLightGlow>
 R typeinfo name for CEntityFactory<CLogicActiveAutosave>
 R typeinfo name for CEntityFactory<CLogicAuto>
 R typeinfo name for CEntityFactory<CLogicAutosave>
 R typeinfo name for CEntityFactory<CLogicBranch>
 R typeinfo name for CEntityFactory<CLogicBranchList>
 R typeinfo name for CEntityFactory<CLogicCase>
 R typeinfo name for CEntityFactory<CLogicCollisionPair>
 R typeinfo name for CEntityFactory<CLogicCompare>
 R typeinfo name for CEntityFactory<CLogicCompareInteger>
 R typeinfo name for CEntityFactory<CLogicEventListener>
 R typeinfo name for CEntityFactory<CLogicEventListenerItemEquip>
 R typeinfo name for CEntityFactory<CLogicLineToEntity>
 R typeinfo name for CEntityFactory<CLogicMeasureMovement>
 R typeinfo name for CEntityFactory<CLogicNavigation>
 R typeinfo name for CEntityFactory<CLogicPlayMovie>
 R typeinfo name for CEntityFactory<CLogicPlayerProxy>
 R typeinfo name for CEntityFactory<CLogicRandomOutputs>
 R typeinfo name for CEntityFactory<CLogicRegisterActivator>
 R typeinfo name for CEntityFactory<CLogicRelay>
 R typeinfo name for CEntityFactory<CLogicScript>
 R typeinfo name for CEntityFactory<CMapInfo>
 R typeinfo name for CEntityFactory<CMaterialModifyControl>
 R typeinfo name for CEntityFactory<CMathColorBlend>
 R typeinfo name for CEntityFactory<CMathCounter>
 R typeinfo name for CEntityFactory<CMathRemap>
 R typeinfo name for CEntityFactory<CMessage>
 R typeinfo name for CEntityFactory<CMessageEntity>
 R typeinfo name for CEntityFactory<CMolotovGrenade>
 R typeinfo name for CEntityFactory<CMolotovProjectile>
 R typeinfo name for CEntityFactory<CMomentaryRotButton>
 R typeinfo name for CEntityFactory<CMovementSpeedMod>
 R typeinfo name for CEntityFactory<CMovieDisplay>
 R typeinfo name for CEntityFactory<CMultiSource>
 R typeinfo name for CEntityFactory<CNPC_Furniture>
 R typeinfo name for CEntityFactory<CNPC_HearDanger>
 R typeinfo name for CEntityFactory<CNPC_VehicleDriver>
 R typeinfo name for CEntityFactory<CNoDefuseArea>
 R typeinfo name for CEntityFactory<CNodeEnt>
 R typeinfo name for CEntityFactory<CNullEntity>
 R typeinfo name for CEntityFactory<COrnamentProp>
 R typeinfo name for CEntityFactory<COuttroStats>
 R typeinfo name for CEntityFactory<CParticleFire>
 R typeinfo name for CEntityFactory<CParticleLight>
 R typeinfo name for CEntityFactory<CParticlePerformanceMonitor>
 R typeinfo name for CEntityFactory<CParticleSystem>
 R typeinfo name for CEntityFactory<CPathCorner>
 R typeinfo name for CEntityFactory<CPathCornerCrash>
 R typeinfo name for CEntityFactory<CPathKeyFrame>
 R typeinfo name for CEntityFactory<CPathTrack>
 R typeinfo name for CEntityFactory<CPhysBallSocket>
 R typeinfo name for CEntityFactory<CPhysBox>
 R typeinfo name for CEntityFactory<CPhysBoxMultiplayer>
 R typeinfo name for CEntityFactory<CPhysConstraintSystem>
 R typeinfo name for CEntityFactory<CPhysConvert>
 R typeinfo name for CEntityFactory<CPhysExplosion>
 R typeinfo name for CEntityFactory<CPhysFixed>
 R typeinfo name for CEntityFactory<CPhysHinge>
 R typeinfo name for CEntityFactory<CPhysImpact>
 R typeinfo name for CEntityFactory<CPhysLength>
 R typeinfo name for CEntityFactory<CPhysMagnet>
 R typeinfo name for CEntityFactory<CPhysMotor>
 R typeinfo name for CEntityFactory<CPhysPulley>
 R typeinfo name for CEntityFactory<CPhysSlideConstraint>
 R typeinfo name for CEntityFactory<CPhysSphere>
 R typeinfo name for CEntityFactory<CPhysThruster>
 R typeinfo name for CEntityFactory<CPhysTorque>
 R typeinfo name for CEntityFactory<CPhysicsCannister>
 R typeinfo name for CEntityFactory<CPhysicsEntitySolver>
 R typeinfo name for CEntityFactory<CPhysicsNPCSolver>
 R typeinfo name for CEntityFactory<CPhysicsProp>
 R typeinfo name for CEntityFactory<CPhysicsPropMultiplayer>
 R typeinfo name for CEntityFactory<CPhysicsPropRespawnable>
 R typeinfo name for CEntityFactory<CPhysicsSpring>
 R typeinfo name for CEntityFactory<CPhysicsWire>
 R typeinfo name for CEntityFactory<CPlantedC4>
 R typeinfo name for CEntityFactory<CPlantedC4Training>
 R typeinfo name for CEntityFactory<CPlasma>
 R typeinfo name for CEntityFactory<CPlayerResource>
 R typeinfo name for CEntityFactory<CPointAngleSensor>
 R typeinfo name for CEntityFactory<CPointAngularVelocitySensor>
 R typeinfo name for CEntityFactory<CPointBonusMapsAccessor>
 R typeinfo name for CEntityFactory<CPointBroadcastClientCommand>
 R typeinfo name for CEntityFactory<CPointCamera>
 R typeinfo name for CEntityFactory<CPointClientCommand>
 R typeinfo name for CEntityFactory<CPointCommentaryNode>
 R typeinfo name for CEntityFactory<CPointDevShotCamera>
 R typeinfo name for CEntityFactory<CPointEntity>
 R typeinfo name for CEntityFactory<CPointEntityFinder>
 R typeinfo name for CEntityFactory<CPointGamestatsCounter>
 R typeinfo name for CEntityFactory<CPointHurt>
 R typeinfo name for CEntityFactory<CPointPlayerMoveConstraint>
 R typeinfo name for CEntityFactory<CPointProximitySensor>
 R typeinfo name for CEntityFactory<CPointServerCommand>
 R typeinfo name for CEntityFactory<CPointSpotlight>
 R typeinfo name for CEntityFactory<CPointTeleport>
 R typeinfo name for CEntityFactory<CPointTemplate>
 R typeinfo name for CEntityFactory<CPointVelocitySensor>
 R typeinfo name for CEntityFactory<CPoseController>
 R typeinfo name for CEntityFactory<CPostProcessController>
 R typeinfo name for CEntityFactory<CPrecipitation>
 R typeinfo name for CEntityFactory<CPrecipitationBlocker>
 R typeinfo name for CEntityFactory<CPredictedViewModel>
 R typeinfo name for CEntityFactory<CProjectedDecal>
 R typeinfo name for CEntityFactory<CPropDoorRotatingBreakable>
 R typeinfo name for CEntityFactory<CPropVehicle>
 R typeinfo name for CEntityFactory<CPropVehicleDriveable>
 R typeinfo name for CEntityFactory<CProp_Hallucination>
 R typeinfo name for CEntityFactory<CPushable>
 R typeinfo name for CEntityFactory<CRagGib>
 R typeinfo name for CEntityFactory<CRagdollBoogie>
 R typeinfo name for CEntityFactory<CRagdollConstraint>
 R typeinfo name for CEntityFactory<CRagdollMagnet>
 R typeinfo name for CEntityFactory<CRagdollManager>
 R typeinfo name for CEntityFactory<CRagdollProp>
 R typeinfo name for CEntityFactory<CRagdollPropAttached>
 R typeinfo name for CEntityFactory<CRallyPoint>
 R typeinfo name for CEntityFactory<CRevertSaved>
 R typeinfo name for CEntityFactory<CRopeAnchor>
 R typeinfo name for CEntityFactory<CRopeKeyframe>
 R typeinfo name for CEntityFactory<CRotButton>
 R typeinfo name for CEntityFactory<CRotDoor>
 R typeinfo name for CEntityFactory<CRotorWashShooter>
 R typeinfo name for CEntityFactory<CSCAR17>
 R typeinfo name for CEntityFactory<CSceneEntity>
 R typeinfo name for CEntityFactory<CSceneListManager>
 R typeinfo name for CEntityFactory<CSceneManager>
 R typeinfo name for CEntityFactory<CScriptedTarget>
 R typeinfo name for CEntityFactory<CServerRagdollTrigger>
 R typeinfo name for CEntityFactory<CShadowControl>
 R typeinfo name for CEntityFactory<CShower>
 R typeinfo name for CEntityFactory<CSimplePhysicsBrush>
 R typeinfo name for CEntityFactory<CSimplePhysicsProp>
 R typeinfo name for CEntityFactory<CSkyCamera>
 R typeinfo name for CEntityFactory<CSkyboxSwapper>
 R typeinfo name for CEntityFactory<CSlideshowDisplay>
 R typeinfo name for CEntityFactory<CSmokeGrenade>
 R typeinfo name for CEntityFactory<CSmokeGrenadeProjectile>
 R typeinfo name for CEntityFactory<CSmokeStack>
 R typeinfo name for CEntityFactory<CSoundEnt>
 R typeinfo name for CEntityFactory<CSpotlightEnd>
 R typeinfo name for CEntityFactory<CSprayCan>
 R typeinfo name for CEntityFactory<CSprite>
 R typeinfo name for CEntityFactory<CSpriteOriented>
 R typeinfo name for CEntityFactory<CSpriteTrail>
 R typeinfo name for CEntityFactory<CStatueProp>
 R typeinfo name for CEntityFactory<CSteamJet>
 R typeinfo name for CEntityFactory<CStripWeapons>
 R typeinfo name for CEntityFactory<CSun>
 R typeinfo name for CEntityFactory<CSunlightShadowControl>
 R typeinfo name for CEntityFactory<CSurroundTest>
 R typeinfo name for CEntityFactory<CTankTargetChange>
 R typeinfo name for CEntityFactory<CTankTrainAI>
 R typeinfo name for CEntityFactory<CTargetCDAudioRep>
 R typeinfo name for CEntityFactory<CTargetChangeGravity>
 R typeinfo name for CEntityFactory<CTeam>
 R typeinfo name for CEntityFactory<CTeamSpawnPoint>
 R typeinfo name for CEntityFactory<CTeamVehicleSpawnPoint>
 R typeinfo name for CEntityFactory<CTempEntTester>
 R typeinfo name for CEntityFactory<CTesla>
 R typeinfo name for CEntityFactory<CTestEffect>
 R typeinfo name for CEntityFactory<CTestTraceline>
 R typeinfo name for CEntityFactory<CTest_ProxyToggle_Networkable>
 R typeinfo name for CEntityFactory<CTextureToggle>
 R typeinfo name for CEntityFactory<CTimerEntity>
 R typeinfo name for CEntityFactory<CTonemapTrigger>
 R typeinfo name for CEntityFactory<CTriggerAutoCrouch>
 R typeinfo name for CEntityFactory<CTriggerBombReset>
 R typeinfo name for CEntityFactory<CTriggerBrush>
 R typeinfo name for CEntityFactory<CTriggerCDAudio>
 R typeinfo name for CEntityFactory<CTriggerCamera>
 R typeinfo name for CEntityFactory<CTriggerCameraMultiplayer>
 R typeinfo name for CEntityFactory<CTriggerGravity>
 R typeinfo name for CEntityFactory<CTriggerHierarchy>
 R typeinfo name for CEntityFactory<CTriggerHurt>
 R typeinfo name for CEntityFactory<CTriggerImpact>
 R typeinfo name for CEntityFactory<CTriggerLook>
 R typeinfo name for CEntityFactory<CTriggerMultiple>
 R typeinfo name for CEntityFactory<CTriggerOnce>
 R typeinfo name for CEntityFactory<CTriggerPlayerMovement>
 R typeinfo name for CEntityFactory<CTriggerProximity>
 R typeinfo name for CEntityFactory<CTriggerPush>
 R typeinfo name for CEntityFactory<CTriggerRemove>
 R typeinfo name for CEntityFactory<CTriggerSave>
 R typeinfo name for CEntityFactory<CTriggerSoundscape>
 R typeinfo name for CEntityFactory<CTriggerTeleport>
 R typeinfo name for CEntityFactory<CTriggerToggleSave>
 R typeinfo name for CEntityFactory<CTriggerVPhysicsMotion>
 R typeinfo name for CEntityFactory<CTriggerViewProxy>
 R typeinfo name for CEntityFactory<CTriggerVolume>
 R typeinfo name for CEntityFactory<CTriggerWind>
 R typeinfo name for CEntityFactory<CVGuiScreen>
 R typeinfo name for CEntityFactory<CVoteController>
 R typeinfo name for CEntityFactory<CWC_UpdateIgnoreList>
 R typeinfo name for CEntityFactory<CWaterBullet>
 R typeinfo name for CEntityFactory<CWaterLODControl>
 R typeinfo name for CEntityFactory<CWeaponAWP>
 R typeinfo name for CEntityFactory<CWeaponAug>
 R typeinfo name for CEntityFactory<CWeaponBizon>
 R typeinfo name for CEntityFactory<CWeaponCSBase>
 R typeinfo name for CEntityFactory<CWeaponCSBaseGun>
 R typeinfo name for CEntityFactory<CWeaponCycler>
 R typeinfo name for CEntityFactory<CWeaponElite>
 R typeinfo name for CEntityFactory<CWeaponFamas>
 R typeinfo name for CEntityFactory<CWeaponFiveSeven>
 R typeinfo name for CEntityFactory<CWeaponG3SG1>
 R typeinfo name for CEntityFactory<CWeaponGalil>
 R typeinfo name for CEntityFactory<CWeaponGalilAR>
 R typeinfo name for CEntityFactory<CWeaponGlock>
 R typeinfo name for CEntityFactory<CWeaponHKP2000>
 R typeinfo name for CEntityFactory<CWeaponM249>
 R typeinfo name for CEntityFactory<CWeaponM3>
 R typeinfo name for CEntityFactory<CWeaponM4A1>
 R typeinfo name for CEntityFactory<CWeaponMAC10>
 R typeinfo name for CEntityFactory<CWeaponMP5Navy>
 R typeinfo name for CEntityFactory<CWeaponMP7>
 R typeinfo name for CEntityFactory<CWeaponMP9>
 R typeinfo name for CEntityFactory<CWeaponMag7>
 R typeinfo name for CEntityFactory<CWeaponNOVA>
 R typeinfo name for CEntityFactory<CWeaponNegev>
 R typeinfo name for CEntityFactory<CWeaponP228>
 R typeinfo name for CEntityFactory<CWeaponP250>
 R typeinfo name for CEntityFactory<CWeaponP90>
 R typeinfo name for CEntityFactory<CWeaponSCAR20>
 R typeinfo name for CEntityFactory<CWeaponSG550>
 R typeinfo name for CEntityFactory<CWeaponSG552>
 R typeinfo name for CEntityFactory<CWeaponSG556>
 R typeinfo name for CEntityFactory<CWeaponSSG08>
 R typeinfo name for CEntityFactory<CWeaponSawedoff>
 R typeinfo name for CEntityFactory<CWeaponScout>
 R typeinfo name for CEntityFactory<CWeaponTMP>
 R typeinfo name for CEntityFactory<CWeaponTaser>
 R typeinfo name for CEntityFactory<CWeaponTec9>
 R typeinfo name for CEntityFactory<CWeaponUMP45>
 R typeinfo name for CEntityFactory<CWeaponUSP>
 R typeinfo name for CEntityFactory<CWeaponXM1014>
 R typeinfo name for CEntityFactory<CWeightButton>
 R typeinfo name for CEntityFactory<CWindowPane>
 R typeinfo name for CEntityFactory<CWorld>
 R typeinfo name for CEntityFactory<CWorldItem>
 R typeinfo name for CEntityFactory<CWreckage>
 R typeinfo name for CEntityFactory<DustTrail>
 R typeinfo name for CEntityFactory<FilterDamageType>
 R typeinfo name for CEntityFactory<FilterTeam>
 R typeinfo name for CEntityFactory<MovieExplosion>
 R typeinfo name for CEntityFactory<ParticleSmokeGrenade>
 R typeinfo name for CEntityFactory<RocketTrail>
 R typeinfo name for CEntityFactory<SmokeTrail>
 R typeinfo name for CEntityFactory<SpawnPoint>
 R typeinfo name for CEntityFactory<SporeExplosion>
 R typeinfo name for CEntityFactory<SporeTrail>
 R typeinfo name for CEntityFactoryDictionary
 R typeinfo name for CEntityFlame
 R typeinfo name for CEntityFreezing
 R typeinfo name for CEntityListSystem
 R typeinfo name for CEntityParticleTrail
 R typeinfo name for CEntityParticleTrail::NetworkVar_m_Info
 R typeinfo name for CEntitySaveRestoreBlockHandler
 R typeinfo name for CEntitySaveUtils
 R typeinfo name for CEntityTouchManager
 R typeinfo name for CEnvAmbientLight
 R typeinfo name for CEnvBeam
 R typeinfo name for CEnvBeverage
 R typeinfo name for CEnvDOFController
 R typeinfo name for CEnvDetailController
 R typeinfo name for CEnvDustPuff
 R typeinfo name for CEnvEffectsScript
 R typeinfo name for CEnvEntityIgniter
 R typeinfo name for CEnvEntityMaker
 R typeinfo name for CEnvExplosion
 R typeinfo name for CEnvFade
 R typeinfo name for CEnvFireSensor
 R typeinfo name for CEnvFireSource
 R typeinfo name for CEnvFunnel
 R typeinfo name for CEnvGlobal
 R typeinfo name for CEnvGunfire
 R typeinfo name for CEnvHudHint
 R typeinfo name for CEnvInstructorHint
 R typeinfo name for CEnvLaser
 R typeinfo name for CEnvLight
 R typeinfo name for CEnvMicrophone
 R typeinfo name for CEnvMuzzleFlash
 R typeinfo name for CEnvParticleScript
 R typeinfo name for CEnvPlayerSurfaceTrigger
 R typeinfo name for CEnvProjectedTexture
 R typeinfo name for CEnvQuadraticBeam
 R typeinfo name for CEnvScreenEffect
 R typeinfo name for CEnvScreenOverlay
 R typeinfo name for CEnvShake
 R typeinfo name for CEnvShooter
 R typeinfo name for CEnvSoundscape
 R typeinfo name for CEnvSoundscapeProxy
 R typeinfo name for CEnvSoundscapeTriggerable
 R typeinfo name for CEnvSpark
 R typeinfo name for CEnvSplash
 R typeinfo name for CEnvTilt
 R typeinfo name for CEnvTonemapController
 R typeinfo name for CEnvTracer
 R typeinfo name for CEnvViewPunch
 R typeinfo name for CEnvWind
 R typeinfo name for CEnvWindShared
 R typeinfo name for CEnvZoom
 R typeinfo name for CEventLog
 R typeinfo name for CEventQueueSaveLoadProxy
 R typeinfo name for CEventQueue_SaveRestoreBlockHandler
 R typeinfo name for CEventsSaveDataOps
 R typeinfo name for CFilterClass
 R typeinfo name for CFilterContext
 R typeinfo name for CFilterEnemy
 R typeinfo name for CFilterMassGreater
 R typeinfo name for CFilterModel
 R typeinfo name for CFilterMultiple
 R typeinfo name for CFilterName
 R typeinfo name for CFire
 R typeinfo name for CFireCrackerBlast
 R typeinfo name for CFireSmoke
 R typeinfo name for CFireSphere
 R typeinfo name for CFireTrail
 R typeinfo name for CFish
 R typeinfo name for CFishPool
 R typeinfo name for CFlaggedEntitiesEnum
 R typeinfo name for CFlashbang
 R typeinfo name for CFlashbangProjectile
 R typeinfo name for CFlexAnimationTrack
 R typeinfo name for CFlexCycler
 R typeinfo name for CFlexExpresser
 R typeinfo name for CFlexExpresserShim
 R typeinfo name for CFlexSceneFileManager
 R typeinfo name for CFlextalkActor
 R typeinfo name for CFloatProperty
 R typeinfo name for CFmtStrN<1024, false>
 R typeinfo name for CFmtStrN<256, false>
 R typeinfo name for CFmtStrN<32, false>
 R typeinfo name for CFmtStrN<80, false>
 R typeinfo name for CFogController
 R typeinfo name for CFogController::NetworkVar_m_fog
 R typeinfo name for CFogSystem
 R typeinfo name for CFogTrigger
 R typeinfo name for CFogVolume
 R typeinfo name for CFootstepControl
 R typeinfo name for CFourWheelServerVehicle
 R typeinfo name for CFourWheelVehiclePhysics
 R typeinfo name for CFunFact_GenericEvalFunction
 R typeinfo name for CFunFact_PlayerEvalFunction
 R typeinfo name for CFunFact_StatBest
 R typeinfo name for CFunFact_StatSum
 R typeinfo name for CFuncAreaPortalBase
 R typeinfo name for CFuncAreaPortalWindow
 R typeinfo name for CFuncBlockDMSpawns
 R typeinfo name for CFuncBrush
 R typeinfo name for CFuncConveyor
 R typeinfo name for CFuncIllusionary
 R typeinfo name for CFuncInstanceIoProxy
 R typeinfo name for CFuncLadder
 R typeinfo name for CFuncLadderEndPoint
 R typeinfo name for CFuncMonitor
 R typeinfo name for CFuncMoveLinear
 R typeinfo name for CFuncNavBlocker
 R typeinfo name for CFuncNavObstruction
 R typeinfo name for CFuncOccluder
 R typeinfo name for CFuncPlat
 R typeinfo name for CFuncPlatRot
 R typeinfo name for CFuncReflectiveGlass
 R typeinfo name for CFuncRotating
 R typeinfo name for CFuncSmokeVolume
 R typeinfo name for CFuncTankTrain
 R typeinfo name for CFuncTrackAuto
 R typeinfo name for CFuncTrackChange
 R typeinfo name for CFuncTrackTrain
 R typeinfo name for CFuncTrain
 R typeinfo name for CFuncTrainControls
 R typeinfo name for CFuncVPhysicsClip
 R typeinfo name for CFuncVehicleClip
 R typeinfo name for CFuncWall
 R typeinfo name for CFuncWallToggle
 R typeinfo name for CFunc_Dust
 R typeinfo name for CFunc_DustCloud
 R typeinfo name for CFunc_DustMotes
 R typeinfo name for CFunc_LOD
 R typeinfo name for CFunctor
 R typeinfo name for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctorJob
 R typeinfo name for CGCClientJobServerUpdateVersion
 R typeinfo name for CGCClientJobServerWelcome
 R typeinfo name for CGCClientSystem
 R typeinfo name for CGCDev_NewItemRequestResponse
 R typeinfo name for CGCItemAcknowledged
 R typeinfo name for CGCMsgGetIPLocation
 R typeinfo name for CGCMsgGetIPLocationResponse
 R typeinfo name for CGCMsgGetSystemStats
 R typeinfo name for CGCMsgGetSystemStatsResponse
 R typeinfo name for CGCMsgMemCachedDelete
 R typeinfo name for CGCMsgMemCachedGet
 R typeinfo name for CGCMsgMemCachedGetResponse
 R typeinfo name for CGCMsgMemCachedGetResponse_ValueTag
 R typeinfo name for CGCMsgMemCachedSet
 R typeinfo name for CGCMsgMemCachedSet_KeyPair
 R typeinfo name for CGCMsgMemCachedStats
 R typeinfo name for CGCMsgMemCachedStatsResponse
 R typeinfo name for CGCMsgSQLStats
 R typeinfo name for CGCMsgSQLStatsResponse
 R typeinfo name for CGCMsgSystemStatsSchema
 R typeinfo name for CGCStorePurchaseInit_LineItem
 R typeinfo name for CGCSystemMsg_GetAccountDetails
 R typeinfo name for CGCSystemMsg_GetAccountDetails_Response
 R typeinfo name for CGCSystemMsg_GetPurchaseTrust_Request
 R typeinfo name for CGCSystemMsg_GetPurchaseTrust_Response
 R typeinfo name for CGCToGCMsgMasterAck
 R typeinfo name for CGCToGCMsgMasterAck_Response
 R typeinfo name for CGCToGCMsgMasterStartupComplete
 R typeinfo name for CGCToGCMsgRouted
 R typeinfo name for CGCToGCMsgRoutedReply
 R typeinfo name for CGameDLL_ConVarAccessor
 R typeinfo name for CGameEnd
 R typeinfo name for CGameEventListener
 R typeinfo name for CGameGibManager
 R typeinfo name for CGameMoney
 R typeinfo name for CGameMovement
 R typeinfo name for CGamePlayerEquip
 R typeinfo name for CGamePlayerTeam
 R typeinfo name for CGamePlayerZone
 R typeinfo name for CGameResponseSystem
 R typeinfo name for CGameRoundEnd
 R typeinfo name for CGameRules
 R typeinfo name for CGameRulesProxy
 R typeinfo name for CGameScore
 R typeinfo name for CGameStringPool
 R typeinfo name for CGameText
 R typeinfo name for CGameTimescale
 R typeinfo name for CGameUI
 R typeinfo name for CGameWeaponManager
 R typeinfo name for CGenericActor
 R typeinfo name for CGenericCycler
 R typeinfo name for CGenericFlexCycler
 R typeinfo name for CGenericNPC
 R typeinfo name for CGib
 R typeinfo name for CGibShooter
 R typeinfo name for CGlobalEntityList
 R typeinfo name for CGlobalEventLog
 R typeinfo name for CGlobalState
 R typeinfo name for CGunTarget
 R typeinfo name for CHEGrenade
 R typeinfo name for CHEGrenadeProjectile
 R typeinfo name for CHFontProperty
 R typeinfo name for CHLTVDirector
 R typeinfo name for CHandleDummy
 R typeinfo name for CHandleTest
 R typeinfo name for CHostage
 R typeinfo name for CHostageCarriableProp
 R typeinfo name for CHostageExpresserShim
 R typeinfo name for CHostageRescueZone
 R typeinfo name for CIKSaveRestoreOps
 R typeinfo name for CIPLocationInfo
 R typeinfo name for CImprovLocomotor
 R typeinfo name for CIncendiaryGrenade
 R typeinfo name for CInferno
 R typeinfo name for CInfoCameraLink
 R typeinfo name for CInfoGameEventProxy
 R typeinfo name for CInfoInstructorHintBombTargetA
 R typeinfo name for CInfoInstructorHintBombTargetB
 R typeinfo name for CInfoInstructorHintHostageRescueZone
 R typeinfo name for CInfoInstructorHintTarget
 R typeinfo name for CInfoIntermission
 R typeinfo name for CInfoLadderDismount
 R typeinfo name for CInfoMassCenter
 R typeinfo name for CInfoOverlayAccessor
 R typeinfo name for CInfoRemarkable
 R typeinfo name for CInfoTarget
 R typeinfo name for CInfoViewParameters
 R typeinfo name for CInstancedSceneEntity
 R typeinfo name for CIntProperty
 R typeinfo name for CInventoryManager
 R typeinfo name for CItem
 R typeinfo name for CItemAmmo
 R typeinfo name for CItemAmmo338MAG
 R typeinfo name for CItemAmmo357SIG
 R typeinfo name for CItemAmmo357SIG_MIN
 R typeinfo name for CItemAmmo357SIG_P250
 R typeinfo name for CItemAmmo357SIG_SMALL
 R typeinfo name for CItemAmmo45ACP
 R typeinfo name for CItemAmmo50AE
 R typeinfo name for CItemAmmo556MM
 R typeinfo name for CItemAmmo556MM_BOX
 R typeinfo name for CItemAmmo556MM_SMALL
 R typeinfo name for CItemAmmo57MM
 R typeinfo name for CItemAmmo762MM
 R typeinfo name for CItemAmmo9MM
 R typeinfo name for CItemAmmoBuckshot
 R typeinfo name for CItemAssaultSuit
 R typeinfo name for CItemDefuser
 R typeinfo name for CItemGeneration
 R typeinfo name for CItemKevlar
 R typeinfo name for CItemNvgs
 R typeinfo name for CItemSelectionCriteria::CCondition
 R typeinfo name for CItemSelectionCriteria::CFloatCondition
 R typeinfo name for CItemSelectionCriteria::CSetCondition
 R typeinfo name for CItemSelectionCriteria::CStringCondition
 R typeinfo name for CItemSoda
 R typeinfo name for CJob
 R typeinfo name for CKeepUpright
 R typeinfo name for CKeyValuesDumpContextAsDevMsg
 R typeinfo name for CKickIssue
 R typeinfo name for CKnife
 R typeinfo name for CKnifeGG
 R typeinfo name for CLagCompensationManager
 R typeinfo name for CLight
 R typeinfo name for CLightGlow
 R typeinfo name for CLoadBackupIssue
 R typeinfo name for CLogicActiveAutosave
 R typeinfo name for CLogicAuto
 R typeinfo name for CLogicAutosave
 R typeinfo name for CLogicBranch
 R typeinfo name for CLogicBranchList
 R typeinfo name for CLogicCase
 R typeinfo name for CLogicCollisionPair
 R typeinfo name for CLogicCompare
 R typeinfo name for CLogicCompareInteger
 R typeinfo name for CLogicEventListener
 R typeinfo name for CLogicEventListenerItemEquip
 R typeinfo name for CLogicLineToEntity
 R typeinfo name for CLogicMeasureMovement
 R typeinfo name for CLogicNavigation
 R typeinfo name for CLogicPlayMovie
 R typeinfo name for CLogicPlayerProxy
 R typeinfo name for CLogicRandomOutputs
 R typeinfo name for CLogicRegisterActivator
 R typeinfo name for CLogicRelay
 R typeinfo name for CLogicScript
 R typeinfo name for CLogicalEntity
 R typeinfo name for CMapInfo
 R typeinfo name for CMapLoadEntityFilter
 R typeinfo name for CMaterialModifyControl
 R typeinfo name for CMathColorBlend
 R typeinfo name for CMathCounter
 R typeinfo name for CMathRemap
 R typeinfo name for CMemZeroOnNew
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemoryLog
 R typeinfo name for CMemoryStack
 R typeinfo name for CMessage
 R typeinfo name for CMessageEntity
 R typeinfo name for CModelPrecacheSystem
 R typeinfo name for CModelSoundsCache
 R typeinfo name for CModelSoundsCacheSaver
 R typeinfo name for CMolotovGrenade
 R typeinfo name for CMolotovProjectile
 R typeinfo name for CMomentaryRotButton
 R typeinfo name for CMotorController
 R typeinfo name for CMoveHelperServer
 R typeinfo name for CMoveableCamera
 R typeinfo name for CMovementSpeedMod
 R typeinfo name for CMovieDisplay
 R typeinfo name for CMsgAMAddFreeLicense
 R typeinfo name for CMsgAMAddFreeLicenseResponse
 R typeinfo name for CMsgAMFindAccounts
 R typeinfo name for CMsgAMFindAccountsResponse
 R typeinfo name for CMsgAMGetLicenses
 R typeinfo name for CMsgAMGetLicensesResponse
 R typeinfo name for CMsgAMGetUserGameStats
 R typeinfo name for CMsgAMGetUserGameStatsResponse
 R typeinfo name for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 R typeinfo name for CMsgAMGetUserGameStatsResponse_Stats
 R typeinfo name for CMsgAMGrantGuestPasses2
 R typeinfo name for CMsgAMGrantGuestPasses2Response
 R typeinfo name for CMsgAMSendEmail
 R typeinfo name for CMsgAMSendEmailResponse
 R typeinfo name for CMsgAMSendEmail_PersonaNameReplacementToken
 R typeinfo name for CMsgAMSendEmail_ReplacementToken
 R typeinfo name for CMsgAccountDetails
 R typeinfo name for CMsgAdjustItemEquippedState
 R typeinfo name for CMsgApplyAutograph
 R typeinfo name for CMsgApplyEggEssence
 R typeinfo name for CMsgApplyPennantUpgrade
 R typeinfo name for CMsgApplyStatTrakSwap
 R typeinfo name for CMsgApplySticker
 R typeinfo name for CMsgApplyStrangePart
 R typeinfo name for CMsgCStrike15Welcome
 R typeinfo name for CMsgClientHello
 R typeinfo name for CMsgClientWelcome
 R typeinfo name for CMsgClientWelcome_Location
 R typeinfo name for CMsgConVarValue
 R typeinfo name for CMsgConnectionStatus
 R typeinfo name for CMsgConsumableExhausted
 R typeinfo name for CMsgDevNewItemRequest
 R typeinfo name for CMsgGCBannedWord
 R typeinfo name for CMsgGCBannedWordListRequest
 R typeinfo name for CMsgGCBannedWordListResponse
 R typeinfo name for CMsgGCCStrike15_v2_AccountPrivacySettings
 R typeinfo name for CMsgGCCStrike15_v2_AccountPrivacySettings_Setting
 R typeinfo name for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest
 R typeinfo name for CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse
 R typeinfo name for CMsgGCCStrike15_v2_Client2GCTextMsg
 R typeinfo name for CMsgGCCStrike15_v2_ClientCommendPlayer
 R typeinfo name for CMsgGCCStrike15_v2_ClientReportPlayer
 R typeinfo name for CMsgGCCStrike15_v2_ClientReportResponse
 R typeinfo name for CMsgGCCStrike15_v2_ClientReportServer
 R typeinfo name for CMsgGCCStrike15_v2_ClientRequestJoinFriendData
 R typeinfo name for CMsgGCCStrike15_v2_ClientRequestJoinServerData
 R typeinfo name for CMsgGCCStrike15_v2_ClientRequestPlayersProfile
 R typeinfo name for CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends
 R typeinfo name for CMsgGCCStrike15_v2_ClientSubmitSurveyVote
 R typeinfo name for CMsgGCCStrike15_v2_ClientVarValueNotificationInfo
 R typeinfo name for CMsgGCCStrike15_v2_GC2ClientTextMsg
 R typeinfo name for CMsgGCCStrike15_v2_GC2ClientTournamentInfo
 R typeinfo name for CMsgGCCStrike15_v2_GC2ServerReservationUpdate
 R typeinfo name for CMsgGCCStrike15_v2_GiftsLeaderboardRequest
 R typeinfo name for CMsgGCCStrike15_v2_GiftsLeaderboardResponse
 R typeinfo name for CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry
 R typeinfo name for CMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 R typeinfo name for CMsgGCCStrike15_v2_MatchEndRunRewardDrops
 R typeinfo name for CMsgGCCStrike15_v2_MatchList
 R typeinfo name for CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames
 R typeinfo name for CMsgGCCStrike15_v2_MatchListRequestFullGameInfo
 R typeinfo name for CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser
 R typeinfo name for CMsgGCCStrike15_v2_MatchListRequestRecentUserGames
 R typeinfo name for CMsgGCCStrike15_v2_MatchListRequestTournamentGames
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingClient2GCHello
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingClient2ServerPing
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ClientHello
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingGCOperationalStats
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingServer2GCKick
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingServerMatchEnd
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingServerReservationResponse
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingServerRoundStats
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingStart
 R typeinfo name for CMsgGCCStrike15_v2_MatchmakingStop
 R typeinfo name for CMsgGCCStrike15_v2_PlayerEarnedRewardNotification
 R typeinfo name for CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment
 R typeinfo name for CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus
 R typeinfo name for CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate
 R typeinfo name for CMsgGCCStrike15_v2_PlayersProfile
 R typeinfo name for CMsgGCCStrike15_v2_Predictions
 R typeinfo name for CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick
 R typeinfo name for CMsgGCCStrike15_v2_Server2GCClientValidate
 R typeinfo name for CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure
 R typeinfo name for CMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 R typeinfo name for CMsgGCCStrike15_v2_ServerVarValueNotificationInfo
 R typeinfo name for CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification
 R typeinfo name for CMsgGCCStrike15_v2_WatchInfoUsers
 R typeinfo name for CMsgGCCheckFriendship
 R typeinfo name for CMsgGCCheckFriendship_Response
 R typeinfo name for CMsgGCClientDisplayNotification
 R typeinfo name for CMsgGCClientVersionUpdated
 R typeinfo name for CMsgGCCollectItem
 R typeinfo name for CMsgGCCstrike15_v2_ClientRequestNewMission
 R typeinfo name for CMsgGCError
 R typeinfo name for CMsgGCGetCommandList
 R typeinfo name for CMsgGCGetCommandListResponse
 R typeinfo name for CMsgGCGetEmailTemplate
 R typeinfo name for CMsgGCGetEmailTemplateResponse
 R typeinfo name for CMsgGCGetPartnerAccountLink
 R typeinfo name for CMsgGCGetPartnerAccountLink_Response
 R typeinfo name for CMsgGCGetPersonaNames
 R typeinfo name for CMsgGCGetPersonaNames_Response
 R typeinfo name for CMsgGCGetPersonaNames_Response_PersonaName
 R typeinfo name for CMsgGCGiftedItems
 R typeinfo name for CMsgGCHAccountVacStatusChange
 R typeinfo name for CMsgGCHUpdateSession
 R typeinfo name for CMsgGCHUpdateSession_ExtraField
 R typeinfo name for CMsgGCIncrementKillCountResponse
 R typeinfo name for CMsgGCItemPreviewItemBoughtNotification
 R typeinfo name for CMsgGCMsgMasterSetClientMsgRouting
 R typeinfo name for CMsgGCMsgMasterSetClientMsgRouting_Entry
 R typeinfo name for CMsgGCMsgMasterSetClientMsgRouting_Response
 R typeinfo name for CMsgGCMsgMasterSetDirectory
 R typeinfo name for CMsgGCMsgMasterSetDirectory_Response
 R typeinfo name for CMsgGCMsgMasterSetDirectory_SubGC
 R typeinfo name for CMsgGCMsgMasterSetWebAPIRouting
 R typeinfo name for CMsgGCMsgMasterSetWebAPIRouting_Entry
 R typeinfo name for CMsgGCMsgMasterSetWebAPIRouting_Response
 R typeinfo name for CMsgGCMsgSetOptions
 R typeinfo name for CMsgGCMsgSetOptions_MessageRange
 R typeinfo name for CMsgGCMsgWebAPIJobRequestForwardResponse
 R typeinfo name for CMsgGCMultiplexMessage
 R typeinfo name for CMsgGCNameItemNotification
 R typeinfo name for CMsgGCReportAbuse
 R typeinfo name for CMsgGCReportAbuseResponse
 R typeinfo name for CMsgGCRequestAnnouncements
 R typeinfo name for CMsgGCRequestAnnouncementsResponse
 R typeinfo name for CMsgGCRequestSessionIP
 R typeinfo name for CMsgGCRequestSessionIPResponse
 R typeinfo name for CMsgGCRoutingInfo
 R typeinfo name for CMsgGCServerVersionUpdated
 R typeinfo name for CMsgGCShowItemsPickedUp
 R typeinfo name for CMsgGCStorePurchaseCancel
 R typeinfo name for CMsgGCStorePurchaseCancelResponse
 R typeinfo name for CMsgGCStorePurchaseFinalize
 R typeinfo name for CMsgGCStorePurchaseFinalizeResponse
 R typeinfo name for CMsgGCStorePurchaseInit
 R typeinfo name for CMsgGCStorePurchaseInitResponse
 R typeinfo name for CMsgGCToGCBannedWordListBroadcast
 R typeinfo name for CMsgGCToGCBannedWordListUpdated
 R typeinfo name for CMsgGCToGCBroadcastConsoleCommand
 R typeinfo name for CMsgGCToGCDirtyMultipleSDOCache
 R typeinfo name for CMsgGCToGCDirtySDOCache
 R typeinfo name for CMsgGCToGCIsTrustedServer
 R typeinfo name for CMsgGCToGCIsTrustedServerResponse
 R typeinfo name for CMsgGCToGCReloadVersions
 R typeinfo name for CMsgGCToGCRequestPassportItemGrant
 R typeinfo name for CMsgGCToGCUpdateSQLKeyValue
 R typeinfo name for CMsgGCToGCWebAPIAccountChanged
 R typeinfo name for CMsgGCUpdateSessionIP
 R typeinfo name for CMsgGC_ServerQuestUpdateData
 R typeinfo name for CMsgGC_ServerQuestUpdateData_PlayerQuestData
 R typeinfo name for CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData
 R typeinfo name for CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData
 R typeinfo name for CMsgGameServerInfo
 R typeinfo name for CMsgHttpRequest
 R typeinfo name for CMsgHttpRequest_QueryParam
 R typeinfo name for CMsgHttpRequest_RequestHeader
 R typeinfo name for CMsgHttpResponse
 R typeinfo name for CMsgHttpResponse_ResponseHeader
 R typeinfo name for CMsgIncrementKillCountAttribute
 R typeinfo name for CMsgInvitationCreated
 R typeinfo name for CMsgInviteToParty
 R typeinfo name for CMsgItemAcknowledged
 R typeinfo name for CMsgItemAcknowledged__DEPRECATED
 R typeinfo name for CMsgKickFromParty
 R typeinfo name for CMsgLANServerAvailable
 R typeinfo name for CMsgLeaveParty
 R typeinfo name for CMsgNotificationOfSuspiciousActivity
 R typeinfo name for CMsgNotificationOfSuspiciousActivity_MultipleGameInstances
 R typeinfo name for CMsgNotifyWatchdog
 R typeinfo name for CMsgPackageLicense
 R typeinfo name for CMsgPartyInviteResponse
 R typeinfo name for CMsgProtoBufHeader
 R typeinfo name for CMsgQAngle
 R typeinfo name for CMsgRGBA
 R typeinfo name for CMsgReplayUploadedToYouTube
 R typeinfo name for CMsgReplicateConVars
 R typeinfo name for CMsgRequestInventoryRefresh
 R typeinfo name for CMsgSDONoMemcached
 R typeinfo name for CMsgSOCacheHaveVersion
 R typeinfo name for CMsgSOCacheSubscribed
 R typeinfo name for CMsgSOCacheSubscribed_SubscribedType
 R typeinfo name for CMsgSOCacheSubscriptionCheck
 R typeinfo name for CMsgSOCacheSubscriptionRefresh
 R typeinfo name for CMsgSOCacheUnsubscribed
 R typeinfo name for CMsgSOCacheVersion
 R typeinfo name for CMsgSOIDOwner
 R typeinfo name for CMsgSOMultipleObjects
 R typeinfo name for CMsgSOMultipleObjects_SingleObject
 R typeinfo name for CMsgSOSingleObject
 R typeinfo name for CMsgSelectItemPresetForClass
 R typeinfo name for CMsgSelectItemPresetForClassReply
 R typeinfo name for CMsgServerAvailable
 R typeinfo name for CMsgSetItemPositions
 R typeinfo name for CMsgSetItemPositions_ItemPosition
 R typeinfo name for CMsgSetPresetItemPosition
 R typeinfo name for CMsgSortItems
 R typeinfo name for CMsgStoreGetUserData
 R typeinfo name for CMsgStoreGetUserDataResponse
 R typeinfo name for CMsgSystemBroadcast
 R typeinfo name for CMsgUpdateItemSchema
 R typeinfo name for CMsgUseItem
 R typeinfo name for CMsgVector
 R typeinfo name for CMsgVector2D
 R typeinfo name for CMsgWebAPIKey
 R typeinfo name for CMsgWebAPIRequest
 R typeinfo name for CMsg_CVars
 R typeinfo name for CMsg_CVars_CVar
 R typeinfo name for CMultiSource
 R typeinfo name for CMultiplayRules
 R typeinfo name for CMultiplayer_Expresser
 R typeinfo name for CNETMsg_Disconnect
 R typeinfo name for CNETMsg_File
 R typeinfo name for CNETMsg_NOP
 R typeinfo name for CNETMsg_PlayerAvatarData
 R typeinfo name for CNETMsg_SetConVar
 R typeinfo name for CNETMsg_SignonState
 R typeinfo name for CNETMsg_SplitScreenUser
 R typeinfo name for CNETMsg_StringCmd
 R typeinfo name for CNETMsg_Tick
 R typeinfo name for CNPC_Furniture
 R typeinfo name for CNPC_HearDanger
 R typeinfo name for CNPC_VehicleDriver
 R typeinfo name for CNavArea
 R typeinfo name for CNavAreaCriticalData
 R typeinfo name for CNavMesh
 R typeinfo name for CNextLevelIssue
 R typeinfo name for CNoDefuseArea
 R typeinfo name for CNodeEnt
 R typeinfo name for CNodeFilter
 R typeinfo name for CNonDamagingScan
 R typeinfo name for CNotReadyForMatchIssue
 R typeinfo name for CNotifyList
 R typeinfo name for CNullEntity
 R typeinfo name for COrnamentProp
 R typeinfo name for COuttroStats
 R typeinfo name for CPASAttenuationFilter
 R typeinfo name for CPASFilter
 R typeinfo name for CPVSFilter
 R typeinfo name for CParticleFire
 R typeinfo name for CParticleLight
 R typeinfo name for CParticlePerformanceMonitor
 R typeinfo name for CParticleSystem
 R typeinfo name for CParticleSystemQuery
 R typeinfo name for CPathCorner
 R typeinfo name for CPathCornerCrash
 R typeinfo name for CPathKeyFrame
 R typeinfo name for CPathTrack
 R typeinfo name for CPathfindNearestNodeFilter
 R typeinfo name for CPauseMatchIssue
 R typeinfo name for CPhysBallSocket
 R typeinfo name for CPhysBox
 R typeinfo name for CPhysBoxMultiplayer
 R typeinfo name for CPhysConstraint
 R typeinfo name for CPhysConstraintEvents
 R typeinfo name for CPhysConstraintSystem
 R typeinfo name for CPhysConvert
 R typeinfo name for CPhysExplosion
 R typeinfo name for CPhysFixed
 R typeinfo name for CPhysForce
 R typeinfo name for CPhysHinge
 R typeinfo name for CPhysImpact
 R typeinfo name for CPhysLength
 R typeinfo name for CPhysMagnet
 R typeinfo name for CPhysMotor
 R typeinfo name for CPhysObjSaveRestoreOps
 R typeinfo name for CPhysPulley
 R typeinfo name for CPhysSaveRestoreBlockHandler
 R typeinfo name for CPhysSlideConstraint
 R typeinfo name for CPhysSphere
 R typeinfo name for CPhysThruster
 R typeinfo name for CPhysTorque
 R typeinfo name for CPhysicsCannister
 R typeinfo name for CPhysicsEntitySolver
 R typeinfo name for CPhysicsGameTrace
 R typeinfo name for CPhysicsHook
 R typeinfo name for CPhysicsNPCSolver
 R typeinfo name for CPhysicsPlayerCallback
 R typeinfo name for CPhysicsProp
 R typeinfo name for CPhysicsPropMultiplayer
 R typeinfo name for CPhysicsPropRespawnable
 R typeinfo name for CPhysicsPushedEntities
 R typeinfo name for CPhysicsShake
 R typeinfo name for CPhysicsSpring
 R typeinfo name for CPhysicsWind
 R typeinfo name for CPhysicsWire
 R typeinfo name for CPlantedC4
 R typeinfo name for CPlantedC4Training
 R typeinfo name for CPlasma
 R typeinfo name for CPlatTrigger
 R typeinfo name for CPlayerInfo
 R typeinfo name for CPlayerInfoManager
 R typeinfo name for CPlayerInventory
 R typeinfo name for CPlayerLocalData
 R typeinfo name for CPlayerLocalData::NetworkVar_m_PlayerFog
 R typeinfo name for CPlayerLocalData::NetworkVar_m_audio
 R typeinfo name for CPlayerLocalData::NetworkVar_m_skybox3d
 R typeinfo name for CPlayerMove
 R typeinfo name for CPlayerResource
 R typeinfo name for CPlayerState
 R typeinfo name for CPlayerVoiceListener
 R typeinfo name for CPluginBotManager
 R typeinfo name for CPluginHelpersCheck
 R typeinfo name for CPointAngleSensor
 R typeinfo name for CPointAngularVelocitySensor
 R typeinfo name for CPointBonusMapsAccessor
 R typeinfo name for CPointBroadcastClientCommand
 R typeinfo name for CPointCamera
 R typeinfo name for CPointClientCommand
 R typeinfo name for CPointCommentaryNode
 R typeinfo name for CPointDevShotCamera
 R typeinfo name for CPointEntity
 R typeinfo name for CPointEntityFinder
 R typeinfo name for CPointGamestatsCounter
 R typeinfo name for CPointHurt
 R typeinfo name for CPointPlayerMoveConstraint
 R typeinfo name for CPointProximitySensor
 R typeinfo name for CPointServerCommand
 R typeinfo name for CPointSpotlight
 R typeinfo name for CPointTeleport
 R typeinfo name for CPointTemplate
 R typeinfo name for CPointTemplatePrecacher
 R typeinfo name for CPointVelocitySensor
 R typeinfo name for CPoseController
 R typeinfo name for CPostFrameNavigationHook
 R typeinfo name for CPostProcessController
 R typeinfo name for CPostProcessSystem
 R typeinfo name for CPreMatchInfoData
 R typeinfo name for CPreMatchInfoData_TeamStats
 R typeinfo name for CPrecacheHandler
 R typeinfo name for CPrecacheOtherList
 R typeinfo name for CPrecacheRegister
 R typeinfo name for CPrecipitation
 R typeinfo name for CPrecipitationBlocker
 R typeinfo name for CPredictedViewModel
 R typeinfo name for CProjectedDecal
 R typeinfo name for CPropData
 R typeinfo name for CPropDoorRotating
 R typeinfo name for CPropDoorRotatingBreakable
 R typeinfo name for CPropVehicle
 R typeinfo name for CPropVehicleDriveable
 R typeinfo name for CProp_Hallucination
 R typeinfo name for CProportionalFloatProperty
 R typeinfo name for CProportionalIntProperty
 R typeinfo name for CProportionalXPosProperty
 R typeinfo name for CProportionalYPosProperty
 R typeinfo name for CPublishedFileInfoHTTPRequest
 R typeinfo name for CPushAwayEnumerator
 R typeinfo name for CPushBlockerEnum
 R typeinfo name for CPushable
 R typeinfo name for CQueuedMatchmakingRematch
 R typeinfo name for CRagGib
 R typeinfo name for CRagdollBoogie
 R typeinfo name for CRagdollConstraint
 R typeinfo name for CRagdollLRURetirement
 R typeinfo name for CRagdollMagnet
 R typeinfo name for CRagdollManager
 R typeinfo name for CRagdollProp
 R typeinfo name for CRagdollPropAttached
 R typeinfo name for CRallyPoint
 R typeinfo name for CReadyForMatchIssue
 R typeinfo name for CRecipientFilter
 R typeinfo name for CRefCountServiceBase<true, CRefMT>
 R typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRegistry
 R typeinfo name for CReliableBroadcastRecipientFilter
 R typeinfo name for CRemarkableEntityList
 R typeinfo name for CRespawnEntitiesFilter
 R typeinfo name for CResponseQueueManager
 R typeinfo name for CResponseRulesToEngineInterface
 R typeinfo name for CRestartGameIssue
 R typeinfo name for CRestore
 R typeinfo name for CRevertSaved
 R typeinfo name for CRopeAnchor
 R typeinfo name for CRopeKeyframe
 R typeinfo name for CRotButton
 R typeinfo name for CRotDoor
 R typeinfo name for CRotorWashShooter
 R typeinfo name for CRuleBrushEntity
 R typeinfo name for CRuleEntity
 R typeinfo name for CRulePointEntity
 R typeinfo name for CSCAR17
 R typeinfo name for CSNavMesh
 R typeinfo name for CSOEconClaimCode
 R typeinfo name for CSOEconDefaultEquippedDefinitionInstanceClient
 R typeinfo name for CSOEconGameAccountClient
 R typeinfo name for CSOEconItem
 R typeinfo name for CSOEconItemAttribute
 R typeinfo name for CSOEconItemDropRateBonus
 R typeinfo name for CSOEconItemEquipped
 R typeinfo name for CSOEconItemEventTicket
 R typeinfo name for CSOEconItemLeagueViewPass
 R typeinfo name for CSOEconItemPresetInstance
 R typeinfo name for CSOItemCriteria
 R typeinfo name for CSOItemCriteriaCondition
 R typeinfo name for CSOItemRecipe
 R typeinfo name for CSOLobbyInvite
 R typeinfo name for CSOPartyInvite
 R typeinfo name for CSOSelectedItemPreset
 R typeinfo name for CSVCMsg_BSPDecal
 R typeinfo name for CSVCMsg_ClassInfo
 R typeinfo name for CSVCMsg_ClassInfo_class_t
 R typeinfo name for CSVCMsg_CmdKeyValues
 R typeinfo name for CSVCMsg_CreateStringTable
 R typeinfo name for CSVCMsg_CrosshairAngle
 R typeinfo name for CSVCMsg_EncryptedData
 R typeinfo name for CSVCMsg_EntityMsg
 R typeinfo name for CSVCMsg_FixAngle
 R typeinfo name for CSVCMsg_GameEvent
 R typeinfo name for CSVCMsg_GameEventList
 R typeinfo name for CSVCMsg_GameEventList_descriptor_t
 R typeinfo name for CSVCMsg_GameEventList_key_t
 R typeinfo name for CSVCMsg_GameEvent_key_t
 R typeinfo name for CSVCMsg_GetCvarValue
 R typeinfo name for CSVCMsg_Menu
 R typeinfo name for CSVCMsg_PacketEntities
 R typeinfo name for CSVCMsg_PaintmapData
 R typeinfo name for CSVCMsg_Prefetch
 R typeinfo name for CSVCMsg_Print
 R typeinfo name for CSVCMsg_SendTable
 R typeinfo name for CSVCMsg_SendTable_sendprop_t
 R typeinfo name for CSVCMsg_ServerInfo
 R typeinfo name for CSVCMsg_SetPause
 R typeinfo name for CSVCMsg_SetView
 R typeinfo name for CSVCMsg_Sounds
 R typeinfo name for CSVCMsg_Sounds_sounddata_t
 R typeinfo name for CSVCMsg_SplitScreen
 R typeinfo name for CSVCMsg_TempEntities
 R typeinfo name for CSVCMsg_UpdateStringTable
 R typeinfo name for CSVCMsg_UserMessage
 R typeinfo name for CSVCMsg_VoiceData
 R typeinfo name for CSVCMsg_VoiceInit
 R typeinfo name for CSave
 R typeinfo name for CSaveRestoreBlockSet
 R typeinfo name for CSceneEntity
 R typeinfo name for CSceneFindMarkFilter
 R typeinfo name for CSceneFindNearestMarkFilter
 R typeinfo name for CSceneListManager
 R typeinfo name for CSceneManager
 R typeinfo name for CScenePrecacheSystem
 R typeinfo name for CSceneTokenProcessor
 R typeinfo name for CSchemaAttributeTypeBase<CAttribute_String>
 R typeinfo name for CSchemaAttributeTypeBase<Vector>
 R typeinfo name for CSchemaAttributeTypeBase<float>
 R typeinfo name for CSchemaAttributeTypeBase<unsigned int>
 R typeinfo name for CSchemaAttributeTypeProtobufBase<CAttribute_String>
 R typeinfo name for CSchemaAttributeType_Default
 R typeinfo name for CSchemaAttributeType_Float
 R typeinfo name for CSchemaAttributeType_String
 R typeinfo name for CSchemaAttributeType_Uint32
 R typeinfo name for CSchemaAttributeType_Vector
 R typeinfo name for CScrambleTeams
 R typeinfo name for CScriptedTarget
 R typeinfo name for CServerBenchmark
 R typeinfo name for CServerDLLSharedAppSystems
 R typeinfo name for CServerGameClients
 R typeinfo name for CServerGameDLL
 R typeinfo name for CServerGameEnts
 R typeinfo name for CServerGameTags
 R typeinfo name for CServerNetworkProperty
 R typeinfo name for CServerOnlyEntity
 R typeinfo name for CServerOnlyPointEntity
 R typeinfo name for CServerRagdollTrigger
 R typeinfo name for CServerTools
 R typeinfo name for CShadowControl
 R typeinfo name for CShower
 R typeinfo name for CSimThinkManager
 R typeinfo name for CSimplePhysicsBrush
 R typeinfo name for CSimplePhysicsProp
 R typeinfo name for CSingleUserRecipientFilter
 R typeinfo name for CSkipKeys
 R typeinfo name for CSkyCamera
 R typeinfo name for CSkyboxSwapper
 R typeinfo name for CSlideshowDisplay
 R typeinfo name for CSmallTextEntry
 R typeinfo name for CSmokeGrenade
 R typeinfo name for CSmokeGrenadeProjectile
 R typeinfo name for CSmokeStack
 R typeinfo name for CSolidSetDefaults
 R typeinfo name for CSoundControllerImp
 R typeinfo name for CSoundEmitterSystem
 R typeinfo name for CSoundEnt
 R typeinfo name for CSoundEnvelopeController
 R typeinfo name for CSoundPatchSaveRestoreOps
 R typeinfo name for CSoundscapeSystem
 R typeinfo name for CSpatialEntity
 R typeinfo name for CSpotlightEnd
 R typeinfo name for CSprayCan
 R typeinfo name for CSprite
 R typeinfo name for CSpriteOriented
 R typeinfo name for CSpriteTrail
 R typeinfo name for CStatueProp
 R typeinfo name for CStdStringSaveRestoreOps
 R typeinfo name for CSteamJet
 R typeinfo name for CSteamWorksGameStatsServer
 R typeinfo name for CSteamWorksGameStatsUploader
 R typeinfo name for CStreamingUGCDownloader
 R typeinfo name for CStringPool
 R typeinfo name for CStringProperty
 R typeinfo name for CStringTableSaveRestoreOps
 R typeinfo name for CStripWeapons
 R typeinfo name for CSun
 R typeinfo name for CSunlightShadowControl
 R typeinfo name for CSurrender
 R typeinfo name for CSurroundTest
 R typeinfo name for CSwapTeams
 R typeinfo name for CTEArmorRicochet
 R typeinfo name for CTEBSPDecal
 R typeinfo name for CTEBaseBeam
 R typeinfo name for CTEBeamEntPoint
 R typeinfo name for CTEBeamEnts
 R typeinfo name for CTEBeamFollow
 R typeinfo name for CTEBeamLaser
 R typeinfo name for CTEBeamPoints
 R typeinfo name for CTEBeamRing
 R typeinfo name for CTEBeamRingPoint
 R typeinfo name for CTEBeamSpline
 R typeinfo name for CTEBloodSprite
 R typeinfo name for CTEBloodStream
 R typeinfo name for CTEBreakModel
 R typeinfo name for CTEBubbleTrail
 R typeinfo name for CTEBubbles
 R typeinfo name for CTEClientProjectile
 R typeinfo name for CTEDecal
 R typeinfo name for CTEDust
 R typeinfo name for CTEDynamicLight
 R typeinfo name for CTEEffectDispatch
 R typeinfo name for CTEEnergySplash
 R typeinfo name for CTEExplosion
 R typeinfo name for CTEFireBullets
 R typeinfo name for CTEFizz
 R typeinfo name for CTEFootprintDecal
 R typeinfo name for CTEFoundryHelpers
 R typeinfo name for CTEGaussExplosion
 R typeinfo name for CTEGlowSprite
 R typeinfo name for CTEImpact
 R typeinfo name for CTEKillPlayerAttachments
 R typeinfo name for CTELargeFunnel
 R typeinfo name for CTEMetalSparks
 R typeinfo name for CTEMuzzleFlash
 R typeinfo name for CTEParticleSystem
 R typeinfo name for CTEPhysicsProp
 R typeinfo name for CTEPlantBomb
 R typeinfo name for CTEPlayerAnimEvent
 R typeinfo name for CTEPlayerDecal
 R typeinfo name for CTEProjectedDecal
 R typeinfo name for CTERadioIcon
 R typeinfo name for CTEShatterSurface
 R typeinfo name for CTEShowLine
 R typeinfo name for CTESmoke
 R typeinfo name for CTESparks
 R typeinfo name for CTESprite
 R typeinfo name for CTESpriteSpray
 R typeinfo name for CTEWorldDecal
 R typeinfo name for CTankTargetChange
 R typeinfo name for CTankTrainAI
 R typeinfo name for CTargetCDAudioRep
 R typeinfo name for CTargetChangeGravity
 R typeinfo name for CTeam
 R typeinfo name for CTeamRecipientFilter
 R typeinfo name for CTeamSpawnPoint
 R typeinfo name for CTeamVehicleSpawnPoint
 R typeinfo name for CTeamplayRoundBasedRules
 R typeinfo name for CTeamplayRules
 R typeinfo name for CTempEntTester
 R typeinfo name for CTempEntsSystem
 R typeinfo name for CTemplate_SaveRestoreBlockHandler
 R typeinfo name for CTemplatesHook
 R typeinfo name for CTesla
 R typeinfo name for CTestEffect
 R typeinfo name for CTestTraceline
 R typeinfo name for CTest_ProxyToggle_Networkable
 R typeinfo name for CTextureIdProperty
 R typeinfo name for CTextureToggle
 R typeinfo name for CThinkContextsSaveDataOps
 R typeinfo name for CThrustController
 R typeinfo name for CTimerEntity
 R typeinfo name for CTonemapSystem
 R typeinfo name for CTonemapTrigger
 R typeinfo name for CToolFrameworkServer
 R typeinfo name for CTraceFilter
 R typeinfo name for CTraceFilterAgainstEntityList
 R typeinfo name for CTraceFilterDoor
 R typeinfo name for CTraceFilterEntitiesOnly
 R typeinfo name for CTraceFilterEntity
 R typeinfo name for CTraceFilterEntityIgnoreOther
 R typeinfo name for CTraceFilterLOS
 R typeinfo name for CTraceFilterMelee
 R typeinfo name for CTraceFilterNav
 R typeinfo name for CTraceFilterNoCombatCharacters
 R typeinfo name for CTraceFilterNoNPCsOrPlayer
 R typeinfo name for CTraceFilterNoPlayers
 R typeinfo name for CTraceFilterPlayersNPCs
 R typeinfo name for CTraceFilterPlayersNPCsPhysicsProps
 R typeinfo name for CTraceFilterPushFinal
 R typeinfo name for CTraceFilterPushMove
 R typeinfo name for CTraceFilterSimple
 R typeinfo name for CTraceFilterSimpleList
 R typeinfo name for CTraceFilterSkipNPCs
 R typeinfo name for CTraceFilterSkipTwoEntities
 R typeinfo name for CTraceFilterSkipTwoEntitiesAndCheckTeamMask
 R typeinfo name for CTraceFilterSkipTwoEntitiesAndTeammates
 R typeinfo name for CTraceFilterValidForDecal
 R typeinfo name for CTraceFilterWalkableEntities
 R typeinfo name for CTracePassFilter
 R typeinfo name for CTriggerAutoCrouch
 R typeinfo name for CTriggerBombReset
 R typeinfo name for CTriggerBrush
 R typeinfo name for CTriggerCDAudio
 R typeinfo name for CTriggerCamera
 R typeinfo name for CTriggerCameraMultiplayer
 R typeinfo name for CTriggerGravity
 R typeinfo name for CTriggerHierarchy
 R typeinfo name for CTriggerHurt
 R typeinfo name for CTriggerImpact
 R typeinfo name for CTriggerLook
 R typeinfo name for CTriggerMultiple
 R typeinfo name for CTriggerOnce
 R typeinfo name for CTriggerPlayerMovement
 R typeinfo name for CTriggerProximity
 R typeinfo name for CTriggerPush
 R typeinfo name for CTriggerRemove
 R typeinfo name for CTriggerSave
 R typeinfo name for CTriggerSoundscape
 R typeinfo name for CTriggerTeleport
 R typeinfo name for CTriggerToggleSave
 R typeinfo name for CTriggerTraceEnum
 R typeinfo name for CTriggerVPhysicsMotion
 R typeinfo name for CTriggerViewProxy
 R typeinfo name for CTriggerVolume
 R typeinfo name for CTriggerWind
 R typeinfo name for CUnpauseMatchIssue
 R typeinfo name for CUsePushFilter
 R typeinfo name for CUserCmd
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCachedFileData<CModelSoundsCache>
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for CUtlSymbolDataOps
 R typeinfo name for CUtlVector<SMarketPurchases*, CUtlMemory<SMarketPurchases*, int> >
 R typeinfo name for CUtlVector<SWeaponHitData*, CUtlMemory<SWeaponHitData*, int> >
 R typeinfo name for CUtlVector<SWeaponMissData*, CUtlMemory<SWeaponMissData*, int> >
 R typeinfo name for CUtlVector<attachedparticlecontrolpoint_t, CUtlMemory<attachedparticlecontrolpoint_t, int> >
 R typeinfo name for CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >
 R typeinfo name for CUtlVectorDataOps<CAI_InterestTarget, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 R typeinfo name for CVGuiScreen
 R typeinfo name for CVScriptGameSystem
 R typeinfo name for CVScriptSaveRestoreBlockHandler
 R typeinfo name for CVarBitVecSaveRestoreOps<CBitVec<32> >
 R typeinfo name for CVariantSaveDataOps
 R typeinfo name for CVehicleSoundsParser
 R typeinfo name for CVisibilityMonitor
 R typeinfo name for CVoiceGameMgr
 R typeinfo name for CVoiceGameMgrHelper
 R typeinfo name for CVoteController
 R typeinfo name for CWC_UpdateIgnoreList
 R typeinfo name for CWaterBullet
 R typeinfo name for CWaterLODControl
 R typeinfo name for CWeaponAWP
 R typeinfo name for CWeaponAug
 R typeinfo name for CWeaponBizon
 R typeinfo name for CWeaponCSBase
 R typeinfo name for CWeaponCSBaseGun
 R typeinfo name for CWeaponCycler
 R typeinfo name for CWeaponDatabase
 R typeinfo name for CWeaponElite
 R typeinfo name for CWeaponFamas
 R typeinfo name for CWeaponFiveSeven
 R typeinfo name for CWeaponG3SG1
 R typeinfo name for CWeaponGalil
 R typeinfo name for CWeaponGalilAR
 R typeinfo name for CWeaponGlock
 R typeinfo name for CWeaponHKP2000
 R typeinfo name for CWeaponLOSFilter
 R typeinfo name for CWeaponList
 R typeinfo name for CWeaponM249
 R typeinfo name for CWeaponM3
 R typeinfo name for CWeaponM4A1
 R typeinfo name for CWeaponMAC10
 R typeinfo name for CWeaponMP5Navy
 R typeinfo name for CWeaponMP7
 R typeinfo name for CWeaponMP9
 R typeinfo name for CWeaponMag7
 R typeinfo name for CWeaponNOVA
 R typeinfo name for CWeaponNegev
 R typeinfo name for CWeaponP228
 R typeinfo name for CWeaponP250
 R typeinfo name for CWeaponP90
 R typeinfo name for CWeaponSCAR20
 R typeinfo name for CWeaponSG550
 R typeinfo name for CWeaponSG552
 R typeinfo name for CWeaponSG556
 R typeinfo name for CWeaponSSG08
 R typeinfo name for CWeaponSawedoff
 R typeinfo name for CWeaponScout
 R typeinfo name for CWeaponTMP
 R typeinfo name for CWeaponTaser
 R typeinfo name for CWeaponTec9
 R typeinfo name for CWeaponUMP45
 R typeinfo name for CWeaponUSP
 R typeinfo name for CWeaponXM1014
 R typeinfo name for CWeightButton
 R typeinfo name for CWindowPane
 R typeinfo name for CWorkshop_GetContributors_Request
 R typeinfo name for CWorkshop_GetContributors_Response
 R typeinfo name for CWorkshop_PopulateItemDescriptions_Request
 R typeinfo name for CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock
 R typeinfo name for CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription
 R typeinfo name for CWorkshop_SetItemPaymentRules_Request
 R typeinfo name for CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule
 R typeinfo name for CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule
 R typeinfo name for CWorkshop_SetItemPaymentRules_Response
 R typeinfo name for CWorld
 R typeinfo name for CWorldItem
 R typeinfo name for CWreckage
 R typeinfo name for CheckImage
 R typeinfo name for ClientGamePrecachePrecache::CResourcePrecacher
 R typeinfo name for ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate
 R typeinfo name for ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse
 R typeinfo name for ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 R typeinfo name for ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 R typeinfo name for ClientJob_EMsgGCGiftedItems
 R typeinfo name for ClientPrecachePrecache::CResourcePrecacher
 R typeinfo name for ColumnButton
 R typeinfo name for ConCommand
 R typeinfo name for ConCommandBase
 R typeinfo name for ConVar
 R typeinfo name for CountdownTimer
 R typeinfo name for DefuseBombState
 R typeinfo name for DetailedSearchStatistic
 R typeinfo name for Dragger
 R typeinfo name for DustTrail
 R typeinfo name for EditNav_PrecachePrecache::CResourcePrecacher
 R typeinfo name for EffectsPrecachePrecache::CResourcePrecacher
 R typeinfo name for EntityParticleTrailInfo_t
 R typeinfo name for EscapeFromBombState
 R typeinfo name for EscapeFromFlamesState
 R typeinfo name for FetchBombState
 R typeinfo name for FileWeaponInfo_t
 R typeinfo name for FilterDamageType
 R typeinfo name for FilterTeam
 R typeinfo name for FollowState
 R typeinfo name for FunFactEvaluator
 R typeinfo name for GCSDK::CGCClient
 R typeinfo name for GCSDK::CGCClientJob
 R typeinfo name for GCSDK::CGCClientSharedObjectCache
 R typeinfo name for GCSDK::CGCClientSharedObjectTypeCache
 R typeinfo name for GCSDK::CGCSOCacheSubscribedJob
 R typeinfo name for GCSDK::CGCSOCacheSubscriptionCheck
 R typeinfo name for GCSDK::CGCSOCacheUnsubscribedJob
 R typeinfo name for GCSDK::CGCSOCreateJob
 R typeinfo name for GCSDK::CGCSODestroyJob
 R typeinfo name for GCSDK::CGCSOUpdateJob
 R typeinfo name for GCSDK::CGCSOUpdateMultipleJob
 R typeinfo name for GCSDK::CJob
 R typeinfo name for GCSDK::CProtoBufGCClientSendHandler
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgClientHello>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgClientWelcome>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgConnectionStatus>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCGiftedItems>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgItemAcknowledged>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 R typeinfo name for GCSDK::CProtoBufMsgBase
 R typeinfo name for GCSDK::CProtoBufMsgBase::IProtoBufSendHandler
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPoolBase
 R typeinfo name for GCSDK::CProtoBufNetPacket
 R typeinfo name for GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>
 R typeinfo name for GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>
 R typeinfo name for GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>
 R typeinfo name for GCSDK::CProtoBufSharedObjectBase
 R typeinfo name for GCSDK::CRefCount
 R typeinfo name for GCSDK::CSharedObject
 R typeinfo name for GCSDK::CSharedObjectCache
 R typeinfo name for GCSDK::CSharedObjectTypeCache
 R typeinfo name for GCSDK::CStructNetPacket
 R typeinfo name for GCSDK::CWorkThreadPool
 R typeinfo name for GCSDK::IMsgNetPacket
 R typeinfo name for GCSDK::ISharedObjectListener
 R typeinfo name for GameServerPing
 R typeinfo name for GameTypes
 R typeinfo name for GlobalStatistics
 R typeinfo name for HideState
 R typeinfo name for HidingSpot
 R typeinfo name for HuntState
 R typeinfo name for IAI_BehaviorBridge
 R typeinfo name for IAI_MovementSink
 R typeinfo name for IAppSystem
 R typeinfo name for IBaseCacheInfo
 R typeinfo name for IBaseInterface
 R typeinfo name for IBotController
 R typeinfo name for IBotManager
 R typeinfo name for IBreakableWithPropData
 R typeinfo name for ICSPlayerAnimStateHelpers
 R typeinfo name for IChoreoEventCallback
 R typeinfo name for IChoreoStringPool
 R typeinfo name for ICollideable
 R typeinfo name for ICommandCallback
 R typeinfo name for ICommandCompletionCallback
 R typeinfo name for IConCommandBaseAccessor
 R typeinfo name for IConVar
 R typeinfo name for ICurveDataAccessor
 R typeinfo name for IDecalEmitterSystem
 R typeinfo name for IDrivableVehicle
 R typeinfo name for IEconItemAttributeDefinition
 R typeinfo name for IEconItemAttributeIterator
 R typeinfo name for IEconItemDefinition
 R typeinfo name for IEconItemInterface
 R typeinfo name for IEconItemSchema
 R typeinfo name for IEconItemSetDefinition
 R typeinfo name for IEconItemSystem
 R typeinfo name for IEconItemUntypedAttributeIterator
 R typeinfo name for IEconLootListDefinition
 R typeinfo name for IEconTool
 R typeinfo name for IEffects
 R typeinfo name for IEntityDataInstantiator
 R typeinfo name for IEntityEnumerator
 R typeinfo name for IEntityFactory
 R typeinfo name for IEntityFactoryDictionary
 R typeinfo name for IEntityFindFilter
 R typeinfo name for IEntityListener
 R typeinfo name for IEntitySaveUtils
 R typeinfo name for IEventRegisterCallback
 R typeinfo name for IGameEventListener2
 R typeinfo name for IGameMovement
 R typeinfo name for IGameStatTracker
 R typeinfo name for IGameStatTracker::CGameStatList<SMarketPurchases>
 R typeinfo name for IGameStatTracker::CGameStatList<SWeaponHitData>
 R typeinfo name for IGameStatTracker::CGameStatList<SWeaponMissData>
 R typeinfo name for IGameStatTracker::IStatContainer
 R typeinfo name for IGameSystem
 R typeinfo name for IGameSystemPerFrame
 R typeinfo name for IGameTypes
 R typeinfo name for IHLTVDirector
 R typeinfo name for IHandleEntity
 R typeinfo name for IHasAttributes
 R typeinfo name for IHasOwner
 R typeinfo name for IInventoryUpdateListener
 R typeinfo name for IKeyValuesDumpContext
 R typeinfo name for IKeyValuesDumpContextAsText
 R typeinfo name for ILagCompensationManager
 R typeinfo name for IMapEntityFilter
 R typeinfo name for IMemoryInfo
 R typeinfo name for IMotionEvent
 R typeinfo name for IMoveHelper
 R typeinfo name for IMultiplayerPhysics
 R typeinfo name for INPCPassengerCarrier
 R typeinfo name for INavAvoidanceObstacle
 R typeinfo name for INearestNodeFilter
 R typeinfo name for INodeListFilter
 R typeinfo name for INotify
 R typeinfo name for IParentPropInteraction
 R typeinfo name for IParticleOperatorDefinition
 R typeinfo name for IParticleSystemQuery
 R typeinfo name for IPartitionEnumerator
 R typeinfo name for IPartitionQueryCallback
 R typeinfo name for IPhysSaveRestoreManager
 R typeinfo name for IPhysicsCollisionEvent
 R typeinfo name for IPhysicsCollisionSolver
 R typeinfo name for IPhysicsConstraintEvent
 R typeinfo name for IPhysicsGameTrace
 R typeinfo name for IPhysicsObjectEvent
 R typeinfo name for IPhysicsPlayerControllerEvent
 R typeinfo name for IPlayerAnimState
 R typeinfo name for IPlayerInfo
 R typeinfo name for IPlayerInfoManager
 R typeinfo name for IPlayerPickupVPhysics
 R typeinfo name for IPluginHelpersCheck
 R typeinfo name for IPositionWatcher
 R typeinfo name for IPrecacheHandler
 R typeinfo name for IPredictionSystem
 R typeinfo name for IRecipientFilter
 R typeinfo name for IRefCounted
 R typeinfo name for IRegistry
 R typeinfo name for IResourcePrecacher
 R typeinfo name for IRestore
 R typeinfo name for IRotorWashShooter
 R typeinfo name for ISave
 R typeinfo name for ISaveRestoreBlockHandler
 R typeinfo name for ISaveRestoreBlockSet
 R typeinfo name for ISaveRestoreOps
 R typeinfo name for ISceneTokenProcessor
 R typeinfo name for ISchemaAttributeType
 R typeinfo name for ISchemaAttributeTypeBase<CAttribute_String>
 R typeinfo name for ISchemaAttributeTypeBase<Vector>
 R typeinfo name for ISchemaAttributeTypeBase<float>
 R typeinfo name for ISchemaAttributeTypeBase<unsigned int>
 R typeinfo name for IScorer
 R typeinfo name for IScriptInstanceHelper
 R typeinfo name for ISearchSurroundingAreasFunctor
 R typeinfo name for IServerBenchmark
 R typeinfo name for IServerDLLSharedAppSystems
 R typeinfo name for IServerEntity
 R typeinfo name for IServerGameClients
 R typeinfo name for IServerGameDLL
 R typeinfo name for IServerGameEnts
 R typeinfo name for IServerGameTags
 R typeinfo name for IServerNetworkable
 R typeinfo name for IServerTools
 R typeinfo name for IServerUnknown
 R typeinfo name for IServerVehicle
 R typeinfo name for ITempEntsSystem
 R typeinfo name for IToolFrameworkServer
 R typeinfo name for ITraceFilter
 R typeinfo name for IVPhysicsKeyHandler
 R typeinfo name for IVPhysicsWatcher
 R typeinfo name for IVehicle
 R typeinfo name for IVoiceGameMgrHelper
 R typeinfo name for IWatcherCallback
 R typeinfo name for IdleState
 R typeinfo name for IntervalTimer
 R typeinfo name for InvestigateNoiseState
 R typeinfo name for IpAddressMask
 R typeinfo name for MenuItemCheckImage
 R typeinfo name for MoveToState
 R typeinfo name for MovieExplosion
 R typeinfo name for OpenDoorState
 R typeinfo name for OperationalStatisticDescription
 R typeinfo name for OperationalStatisticElement
 R typeinfo name for OperationalStatisticsPacket
 R typeinfo name for ParticleSmokeGrenade
 R typeinfo name for PhysFrictionEffectPrecache::CResourcePrecacher
 R typeinfo name for PickupHostageState
 R typeinfo name for PlantBombState
 R typeinfo name for PlayerCommendationInfo
 R typeinfo name for PlayerMedalsInfo
 R typeinfo name for PlayerRankingInfo
 R typeinfo name for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 R typeinfo name for RR::CApplyContextOperator
 R typeinfo name for RR::CDecrementOperator
 R typeinfo name for RR::CIncrementOperator
 R typeinfo name for RR::CToggleOperator
 R typeinfo name for RadioImage
 R typeinfo name for ResponseRules::CResponseSystem
 R typeinfo name for ResponseRules::IEngineEmulator
 R typeinfo name for ResponseRules::IResponseFilter
 R typeinfo name for ResponseRules::IResponseSystem
 R typeinfo name for RocketTrail
 R typeinfo name for SendProp
 R typeinfo name for ServerHltvInfo
 R typeinfo name for SmokeTrail
 R typeinfo name for SpawnPoint
 R typeinfo name for SporeExplosion
 R typeinfo name for SporeTrail
 R typeinfo name for TournamentEvent
 R typeinfo name for TournamentMatchSetup
 R typeinfo name for TournamentPlayer
 R typeinfo name for TournamentTeam
 R typeinfo name for UseEntityState
 R typeinfo name for Vector
 R typeinfo name for WatchableMatchInfo
 R typeinfo name for WeaponResourcesPrecache::CResourcePrecacher
 R typeinfo name for audioparams_t
 R typeinfo name for base_vector_t
 R typeinfo name for chickenPrecache::CResourcePrecacher
 R typeinfo name for decoy_projectilePrecache::CResourcePrecacher
 R typeinfo name for entityflamePrecache::CResourcePrecacher
 R typeinfo name for env_entity_freezingPrecache::CResourcePrecacher
 R typeinfo name for fire_cracker_blastPrecache::CResourcePrecacher
 R typeinfo name for flashbang_projectilePrecache::CResourcePrecacher
 R typeinfo name for fogparams_t
 R typeinfo name for fogplayerparams_t
 R typeinfo name for hegrenade_projectilePrecache::CResourcePrecacher
 R typeinfo name for hostage_carriable_propPrecache::CResourcePrecacher
 R typeinfo name for infernoPrecache::CResourcePrecacher
 R typeinfo name for item_defuserPrecache::CResourcePrecacher
 R typeinfo name for locksound_t
 R typeinfo name for molotov_projectilePrecache::CResourcePrecacher
 R typeinfo name for planted_c4Precache::CResourcePrecacher
 R typeinfo name for planted_c4_trainingPrecache::CResourcePrecacher
 R typeinfo name for playerPrecache::CResourcePrecacher
 R typeinfo name for sky3dparams_t
 R typeinfo name for sky3dparams_t::NetworkVar_fog
 R typeinfo name for smokegrenade_projectilePrecache::CResourcePrecacher
 R typeinfo name for spraycanPrecache::CResourcePrecacher
 R typeinfo name for vehicle_crashsound_t
 R typeinfo name for vehicle_gear_t
 R typeinfo name for vehiclesounds_t
 R typeinfo name for vgui::AnimatingImagePanel
 R typeinfo name for vgui::AnimationController
 R typeinfo name for vgui::BaseTooltip
 R typeinfo name for vgui::BuildGroup
 R typeinfo name for vgui::BuildModeDialog
 R typeinfo name for vgui::Button
 R typeinfo name for vgui::CBitmapImagePanel
 R typeinfo name for vgui::CTreeViewListControl
 R typeinfo name for vgui::CheckButton
 R typeinfo name for vgui::CircularProgressBar
 R typeinfo name for vgui::ClickPanel
 R typeinfo name for vgui::ComboBox
 R typeinfo name for vgui::ComboBoxButton
 R typeinfo name for vgui::ContinuousProgressBar
 R typeinfo name for vgui::CvarToggleCheckButton<ConVarRef>
 R typeinfo name for vgui::Divider
 R typeinfo name for vgui::EditablePanel
 R typeinfo name for vgui::ExpandButton
 R typeinfo name for vgui::FocusNavGroup
 R typeinfo name for vgui::Frame
 R typeinfo name for vgui::FrameButton
 R typeinfo name for vgui::FrameSystemButton
 R typeinfo name for vgui::GraphPanel
 R typeinfo name for vgui::IClientPanel
 R typeinfo name for vgui::IImage
 R typeinfo name for vgui::IPanelAnimationPropertyConverter
 R typeinfo name for vgui::Image
 R typeinfo name for vgui::ImagePanel
 R typeinfo name for vgui::Label
 R typeinfo name for vgui::ListPanel
 R typeinfo name for vgui::ListViewItem
 R typeinfo name for vgui::ListViewPanel
 R typeinfo name for vgui::Menu
 R typeinfo name for vgui::MenuBar
 R typeinfo name for vgui::MenuButton
 R typeinfo name for vgui::MenuItem
 R typeinfo name for vgui::MenuSeparator
 R typeinfo name for vgui::MessageBox
 R typeinfo name for vgui::Panel
 R typeinfo name for vgui::PanelListPanel
 R typeinfo name for vgui::ProgressBar
 R typeinfo name for vgui::RadioButton
 R typeinfo name for vgui::RichText
 R typeinfo name for vgui::RichTextInterior
 R typeinfo name for vgui::ScalableImagePanel
 R typeinfo name for vgui::ScrollBar
 R typeinfo name for vgui::ScrollBarSlider
 R typeinfo name for vgui::TextEntry
 R typeinfo name for vgui::TextImage
 R typeinfo name for vgui::TextTooltip
 R typeinfo name for vgui::ToggleButton
 R typeinfo name for vgui::TreeNode
 R typeinfo name for vgui::TreeNodeDropPanel
 R typeinfo name for vgui::TreeNodeImage
 R typeinfo name for vgui::TreeNodeText
 R typeinfo name for vgui::TreeView
 R typeinfo name for vgui::TreeViewSubPanel
 R typeinfo name for vgui::URLLabel
 R typeinfo name for vgui_screenPrecache::CResourcePrecacher
 R typeinfo name for weapon_c4Precache::CResourcePrecacher
 R typeinfo name for weapon_decoyPrecache::CResourcePrecacher
 R typeinfo name for weapon_flashbangPrecache::CResourcePrecacher
 R typeinfo name for weapon_hegrenadePrecache::CResourcePrecacher
 R typeinfo name for weapon_incgrenadePrecache::CResourcePrecacher
 R typeinfo name for weapon_knifePrecache::CResourcePrecacher
 R typeinfo name for weapon_knifeggPrecache::CResourcePrecacher
 R typeinfo name for weapon_molotovPrecache::CResourcePrecacher
 R typeinfo name for weapon_smokegrenadePrecache::CResourcePrecacher
 R vec3_angle
 R vec3_invalid
 R vec3_origin
 RandomFloat
 RandomInt
 RandomSeed
 ReleaseThreadHandle
 RemoveMemoryInfoCallback
 ShouldUseNewAssertDialog
 SteamAPI_GetHSteamPipe
 SteamAPI_GetHSteamUser
 SteamAPI_InitSafe
 SteamAPI_RegisterCallResult
 SteamAPI_RegisterCallback
 SteamAPI_RestartAppIfNecessary
 SteamAPI_UnregisterCallResult
 SteamAPI_UnregisterCallback
 SteamClient
 SteamGameServer_GetHSteamPipe
 SteamGameServer_GetHSteamUser
 T AIStrongOpt()
 T AI_ClampYaw(float, float, float, float)
 T AI_TraceLOS(Vector const&, Vector const&, CBaseEntity*, CGameTrace*, ITraceFilter*)
 T AI_Waypoint_t::AI_Waypoint_t()
 T AI_Waypoint_t::AI_Waypoint_t(Vector const&, float, Navigation_t, int, int)
 T AI_Waypoint_t::~AI_Waypoint_t()
 T AccountActivity::ByteSize() const
 T AccountActivity::Clear()
 T AccountActivity::GetCachedSize() const
 T AccountActivity::GetMetadata() const
 T AccountActivity::IsInitialized() const
 T AccountActivity::MergeFrom(AccountActivity const&)
 T AccountActivity::New() const
 T AccountActivity::SerializeWithCachedSizesToArray(unsigned char*) const
 T AccountActivity::SetCachedSize(int) const
 T AccountActivity::~AccountActivity()
 T ActiveGrenade::ActiveGrenade(CBaseGrenade*)
 T ActiveGrenade::GetPosition() const
 T ActiveGrenade::IsValid() const
 T ActiveGrenade::OnEntityGone()
 T ActiveGrenade::Update()
 T ActivityDataOps()
 T ActivityList_AddActivityEntry(char const*, int, bool)
 T ActivityList_Free()
 T ActivityList_IndexForName(char const*)
 T ActivityList_Init()
 T ActivityList_NameForIndex(int)
 T ActivityList_RegisterPrivateActivity(char const*)
 T ActivityList_RegisterSharedActivities()
 T ActivityList_RegisterSharedActivity(char const*, int)
 T AddAccountToActiveCasters(CSteamID const&)
 T AddDataToKV(KeyValues*, char const*, int)
 T AddDataToKV(KeyValues*, char const*, unsigned int)
 T AddFilesToList(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*, char const*, char const*)
 T AddMultiDamage(CTakeDamageInfo const&, CBaseEntity*)
 T AddPointToBounds(Vector const&, Vector&, Vector&)
 T AddRestoredEntity(CBaseEntity*)
 T AddSurfacepropFile(char const*, IPhysicsSurfaceProps*, IFileSystem*)
 T AddWaypointLists(AI_Waypoint_t*, AI_Waypoint_t*)
 T AimTarget_ForceRepopulateList()
 T AimTarget_ListCopy(CBaseEntity**, int)
 T AimTarget_ListCount()
 T AliasToWeaponID(char const*)
 T AllocPooledString(char const*)
 T AllocateStringHelper(char const*, ...)
 T AllocateUniqueDataTableName(bool, char const*, ...)
 T AlternateIconData_t::AlternateIconData_t()
 T AngleDiff(float, float)
 T AngleDistance(float, float)
 T AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleIMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
 T AngleNormalize(float)
 T AngleNormalizePositive(float)
 T AngleQuaternion(QAngle const&, Quaternion&)
 T AngleQuaternion(RadianEuler const&, Quaternion&)
 T AngleVectors(QAngle const&, Vector*)
 T AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
 T AnglesAreEqual(float, float, float)
 T AnyPlayersInHierarchy_R(CBaseEntity*)
 T ApplyMultiDamage()
 T ApplyViewLocking(float, float, ViewLockData_t&, RemapAngleRange_CurvePart_t)
 T ApproachAngle(float, float, float)
 T ApproachAreaCost::operator()(CNavArea*, CNavArea*, CNavLadder const*, CFuncElevator const*, float)
 T AreSlotsConsideredIdentical(int, int)
 T AsianWordWrap::CanBreakAfter(wchar_t const*)
 T AssetInfo::AddAssetModifier(AssetModifier*)
 T AssetInfo::AssetInfo()
 T AssetInfo::GetAssetModifiers(EAssetModifier)
 T AsyncCaption_t::BlockInfo_t::Less(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&)
 T AsyncCaption_t::LoadFromFile(char const*)
 T AttackState::Dodge(CCSBot*)
 T AttackState::GetName() const
 T AttackState::OnEnter(CCSBot*)
 T AttackState::OnExit(CCSBot*)
 T AttackState::OnUpdate(CCSBot*)
 T AttenuateCaption(char const*, Vector const&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T AvoidPushawayProps(CBaseCombatCharacter*, CUserCmd*)
 T BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T BasicGameStatsRecord_t::ParseFromBuffer(CUtlBuffer&, int)
 T BasicGameStatsRecord_t::SaveToBuffer(CUtlBuffer&)
 T BasicGameStats_t::Clear()
 T BasicGameStats_t::FindOrAddRecordForMap(char const*)
 T BasicGameStats_t::ParseFromBuffer(CUtlBuffer&, int)
 T BasicGameStats_t::SaveToBuffer(CUtlBuffer&)
 T BeginDMXContext()
 T Bias(float, float)
 T BlendBones(CStudioHdr const*, QuaternionAligned*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T BotArgumentsFromArgv(CCommand const&, char const**, CSWeaponType*, BotDifficultyType*, int*, bool*)
 T BotBombStatusMeme::Interpret(CCSBot*, CCSBot*) const
 T BotBombsiteStatusMeme::Interpret(CCSBot*, CCSBot*) const
 T BotCOS(float)
 T BotChatterInterface::AddStatement(BotStatement*, bool)
 T BotChatterInterface::Affirmative()
 T BotChatterInterface::AnnouncePlan(char const*, unsigned int)
 T BotChatterInterface::BombsiteClear(int)
 T BotChatterInterface::BotChatterInterface(CCSBot*)
 T BotChatterInterface::CelebrateWin()
 T BotChatterInterface::Encourage(char const*, float, float)
 T BotChatterInterface::EnemiesRemaining()
 T BotChatterInterface::EnemySpotted()
 T BotChatterInterface::EscortingHostages()
 T BotChatterInterface::FoundPlantedBomb(int)
 T BotChatterInterface::FriendlyFire(char const*)
 T BotChatterInterface::GetActiveStatement()
 T BotChatterInterface::GoingToPlantTheBomb(unsigned int)
 T BotChatterInterface::GuardingBombsite(unsigned int)
 T BotChatterInterface::GuardingHostageEscapeZone(bool)
 T BotChatterInterface::GuardingHostages(unsigned int, bool)
 T BotChatterInterface::GuardingLooseBomb(CBaseEntity*)
 T BotChatterInterface::HeardNoise(Vector const&)
 T BotChatterInterface::HostagesBeingTaken()
 T BotChatterInterface::HostagesTaken()
 T BotChatterInterface::KilledFriend()
 T BotChatterInterface::KilledMyEnemy(int)
 T BotChatterInterface::NeedBackup()
 T BotChatterInterface::Negative()
 T BotChatterInterface::OnDeath()
 T BotChatterInterface::PinnedDown()
 T BotChatterInterface::PlantingTheBomb(unsigned int)
 T BotChatterInterface::ReportEnemies()
 T BotChatterInterface::ReportIn()
 T BotChatterInterface::ReportingIn()
 T BotChatterInterface::RequestBombLocation()
 T BotChatterInterface::Reset()
 T BotChatterInterface::ResetRadioSilenceDuration()
 T BotChatterInterface::Scared()
 T BotChatterInterface::SpottedBomber(CBasePlayer*)
 T BotChatterInterface::SpottedLooseBomb(CBaseEntity*)
 T BotChatterInterface::SpottedSniper()
 T BotChatterInterface::TheyPickedUpTheBomb()
 T BotChatterInterface::Update()
 T BotChatterInterface::~BotChatterInterface()
 T BotDefendHereMeme::Interpret(CCSBot*, CCSBot*) const
 T BotFollowMeme::Interpret(CCSBot*, CCSBot*) const
 T BotHeardNoiseMeme::Interpret(CCSBot*, CCSBot*) const
 T BotHelpMeme::Interpret(CCSBot*, CCSBot*) const
 T BotHostageBeingTakenMeme::Interpret(CCSBot*, CCSBot*) const
 T BotMeme::Transmit(CCSBot*) const
 T BotPhrase::BotPhrase(bool)
 T BotPhrase::GetSpeakable(int, float*) const
 T BotPhrase::InitVoiceBank(int)
 T BotPhrase::~BotPhrase()
 T BotPhraseManager::BotPhraseManager()
 T BotPhraseManager::GetPhrase(char const*) const
 T BotPhraseManager::Initialize(char const*, int)
 T BotPhraseManager::OnMapChange()
 T BotPhraseManager::OnRoundRestart()
 T BotPhraseManager::Reset()
 T BotProfile::Clone(BotProfile const*)
 T BotProfile::GetWeaponPreferenceAsString(int) const
 T BotProfile::HasPistolPreference() const
 T BotProfile::HasPrimaryPreference() const
 T BotProfile::InheritsFrom(char const*) const
 T BotProfile::IsValidForTeam(int) const
 T BotProfile::SetName(char const*)
 T BotProfileManager::BotProfileManager()
 T BotProfileManager::FindVoiceBankIndex(char const*)
 T BotProfileManager::GetRandomProfile(BotDifficultyType, int, CSWeaponType, bool) const
 T BotProfileManager::Init(char const*, unsigned int*)
 T BotProfileManager::ParseDifficultySetting(unsigned char&, char*)
 T BotProfileManager::Reset()
 T BotRequestReportMeme::Interpret(CCSBot*, CCSBot*) const
 T BotSIN(float)
 T BotState::OnExit(CCSBot*)
 T BotStatement::AppendPhrase(BotPhrase const*)
 T BotStatement::BotStatement(BotChatterInterface*, BotStatementType, float)
 T BotStatement::IsRedundant(BotStatement const*) const
 T BotStatement::Update()
 T BotWarnSniperMeme::Interpret(CCSBot*, CCSBot*) const
 T BotWhereBombMeme::Interpret(CCSBot*, CCSBot*) const
 T BoxOnPlaneSide(float const*, float const*, cplane_t const*)
 T BreakModelCreateSingle(CBaseEntity*, breakmodel_t*, Vector const&, QAngle const&, Vector const&, Vector const&, int, breakablepropparams_t const&)
 T BreakModelList(CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >&, int, float, int)
 T BuildBoneChain(CStudioHdr const*, matrix3x4a_t const&, Vector const*, Quaternion const*, int, matrix3x4a_t*, CBoneBitList&)
 T BuildBoneChainPartial(CStudioHdr const*, matrix3x4_t const&, Vector const*, Quaternion const*, int, matrix3x4_t*, CBoneBitList&, int)
 T BuildChangeList(levellist_t*, int)
 T BuildGammaTable(float, float, float, int)
 T BuildSelectedSet::WriteConnections(CNavArea*, KeyValues*, NavDirType, char const*)
 T BuildSelectedSet::operator()(CNavArea*)
 T BuyState::GetName() const
 T BuyState::OnEnter(CCSBot*)
 T BuyState::OnExit(CCSBot*)
 T BuyState::OnUpdate(CCSBot*)
 T CAIHintVector::~CAIHintVector()
 T CAISound::GetDataDescMap()
 T CAISound::InputEmitAISound(inputdata_t&)
 T CAISound::InputInsertSound(inputdata_t&)
 T CAISound::~CAISound()
 T CAI_AddOn::DispatchAddOnThink()
 T CAI_AddOn::InputInstall(inputdata_t&)
 T CAI_AddOn::InputRemove(inputdata_t&)
 T CAI_Agent::InitDefaultConditionSR()
 T CAI_Agent::InitDefaultScheduleSR()
 T CAI_Agent::InitDefaultTaskSR()
 T CAI_Agent::InitSchedulingTables()
 T CAI_Agent::LoadDefaultSchedules()
 T CAI_Agent::Think()
 T CAI_AllySpeechManager* _CreateEntityTemplate<CAI_AllySpeechManager>(CAI_AllySpeechManager*, char const*)
 T CAI_AllySpeechManager::ConceptDelayExpired(CAI_Concept)
 T CAI_AllySpeechManager::GetDataDescMap()
 T CAI_AllySpeechManager::Spawn()
 T CAI_AllySpeechManager::~CAI_AllySpeechManager()
 T CAI_AssaultBehavior::FindAssaultPoint(string_t)
 T CAI_AssaultBehavior::InitializeBehavior()
 T CAI_AssaultBehavior::SetParameters(string_t, AssaultCue_t, int)
 T CAI_AssaultBehavior::UnlockRallyPoint()
 T CAI_AssaultGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_AssaultGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_AssaultGoal::GetDataDescMap()
 T CAI_AssaultGoal::InputBeginAssault(inputdata_t&)
 T CAI_AssaultGoal::~CAI_AssaultGoal()
 T CAI_BaseActor::AddLookTarget(CBaseEntity*, float, float, float)
 T CAI_BaseActor::AddLookTarget(Vector const&, float, float, float)
 T CAI_BaseActor::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::ClearHeadAdjustment()
 T CAI_BaseActor::ClearLookTarget(CBaseEntity*)
 T CAI_BaseActor::ClearSceneEvent(CSceneEventInfo*, bool, bool)
 T CAI_BaseActor::CreateComponents()
 T CAI_BaseActor::CreateExpresser()
 T CAI_BaseActor::ExpireCurrentRandomLookTarget()
 T CAI_BaseActor::EyeDirection2D()
 T CAI_BaseActor::EyeDirection3D()
 T CAI_BaseActor::EyePosition()
 T CAI_BaseActor::GatherConditions()
 T CAI_BaseActor::GetDataDescMap()
 T CAI_BaseActor::GetExpresser()
 T CAI_BaseActor::GetHeadDebounce()
 T CAI_BaseActor::HasActiveLookTargets()
 T CAI_BaseActor::HeadDirection2D()
 T CAI_BaseActor::HeadDirection3D()
 T CAI_BaseActor::HeadTargetValidity(Vector const&)
 T CAI_BaseActor::InputSetExpressionOverride(inputdata_t&)
 T CAI_BaseActor::InvalidateBoneCache()
 T CAI_BaseActor::IsServerSideFlexController(char const*)
 T CAI_BaseActor::MaintainLookTargets(float)
 T CAI_BaseActor::MakeRandomLookTarget(AILookTargetArgs_t*, float, float)
 T CAI_BaseActor::OnNewLookTarget()
 T CAI_BaseActor::OnSelectedLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::OnStateChange(NPC_STATE, NPC_STATE)
 T CAI_BaseActor::PickLookTarget(CAI_InterestTarget&, bool, float, float)
 T CAI_BaseActor::PickLookTarget(bool, float, float)
 T CAI_BaseActor::PickRandomLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::PickTacticalLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::PlayExpressionForState(NPC_STATE)
 T CAI_BaseActor::Precache()
 T CAI_BaseActor::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::RandomFaceFlex(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::SelectRandomExpressionForState(NPC_STATE)
 T CAI_BaseActor::SetExpression(char const*)
 T CAI_BaseActor::SetHeadDirection(Vector const&, float)
 T CAI_BaseActor::SetModel(char const*)
 T CAI_BaseActor::SetViewtarget(Vector const&)
 T CAI_BaseActor::ShouldBruteForceFailedNav()
 T CAI_BaseActor::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
 T CAI_BaseActor::StartTaskRangeAttack1(Task_t const*)
 T CAI_BaseActor::StudioFrameAdvance()
 T CAI_BaseActor::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BaseActor::TestRemarkingUpon(CInfoRemarkable*)
 T CAI_BaseActor::UpdateBodyControl()
 T CAI_BaseActor::UpdateHeadControl(Vector const&, float)
 T CAI_BaseActor::UpdateLatchedValues()
 T CAI_BaseActor::UpdateRemarkableSpeech()
 T CAI_BaseActor::UseSemaphore()
 T CAI_BaseActor::ValidEyeTarget(Vector const&)
 T CAI_BaseActor::~CAI_BaseActor()
 T CAI_BaseHumanoid::BuildScheduleTestBits()
 T CAI_BaseHumanoid::CheckAmmo()
 T CAI_BaseHumanoid::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CAI_BaseHumanoid::OnMoveBlocked(AIMoveResult_t*)
 T CAI_BaseHumanoid::RunTask(Task_t const*)
 T CAI_BaseHumanoid::RunTaskRangeAttack1(Task_t const*)
 T CAI_BaseHumanoid::StartTask(Task_t const*)
 T CAI_BaseHumanoid::StartTaskRangeAttack1(Task_t const*)
 T CAI_BaseHumanoid::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CAI_BaseNPC::AccessBehaviors()
 T CAI_BaseNPC::Activate()
 T CAI_BaseNPC::AddClassRelationship(Class_T, Disposition_t, int)
 T CAI_BaseNPC::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
 T CAI_BaseNPC::AddFacingTarget(CBaseEntity*, Vector const&, float, float, float)
 T CAI_BaseNPC::AddFacingTarget(CBaseEntity*, float, float, float)
 T CAI_BaseNPC::AddFacingTarget(Vector const&, float, float, float)
 T CAI_BaseNPC::AddLookTarget(CBaseEntity*, float, float, float)
 T CAI_BaseNPC::AddLookTarget(Vector const&, float, float, float)
 T CAI_BaseNPC::AddRelationship(char const*, CBaseEntity*)
 T CAI_BaseNPC::AddScriptedNPCInteraction(ScriptedNPCInteraction_t*)
 T CAI_BaseNPC::AdvanceToIdealActivity()
 T CAI_BaseNPC::AimGun()
 T CAI_BaseNPC::AlertSound()
 T CAI_BaseNPC::AllowedToIgnite()
 T CAI_BaseNPC::AutoMovement(CBaseEntity*, AIMoveTrace_t*)
 T CAI_BaseNPC::AutoMovement(float, CBaseEntity*, AIMoveTrace_t*)
 T CAI_BaseNPC::BBoxFlat()
 T CAI_BaseNPC::BarnacleDeathSound()
 T CAI_BaseNPC::BeginRappel()
 T CAI_BaseNPC::BestEnemy()
 T CAI_BaseNPC::BodyTarget(Vector const&, bool)
 T CAI_BaseNPC::Break(CBaseEntity*)
 T CAI_BaseNPC::BuildScheduleTestBits()
 T CAI_BaseNPC::CAI_BaseNPC()
 T CAI_BaseNPC::CalcIdealYaw(Vector const&)
 T CAI_BaseNPC::CalcReasonableFacing(bool)
 T CAI_BaseNPC::CalcYawSpeed()
 T CAI_BaseNPC::CalculateForcedInteractionPosition()
 T CAI_BaseNPC::CallNPCThink()
 T CAI_BaseNPC::CanBeAnEnemyOf(CBaseEntity*)
 T CAI_BaseNPC::CanBeUsedAsAFriend()
 T CAI_BaseNPC::CanFlinch()
 T CAI_BaseNPC::CanHolsterWeapon()
 T CAI_BaseNPC::CanPlaySentence(bool)
 T CAI_BaseNPC::CanPlaySequence(bool, int)
 T CAI_BaseNPC::CanRespondToEvent(char const*)
 T CAI_BaseNPC::CanRunAScriptedNPCInteraction(bool)
 T CAI_BaseNPC::CanStandOn(CBaseEntity*) const
 T CAI_BaseNPC::CapabilitiesAdd(int)
 T CAI_BaseNPC::CapabilitiesClear()
 T CAI_BaseNPC::CapabilitiesGet() const
 T CAI_BaseNPC::CapabilitiesRemove(int)
 T CAI_BaseNPC::ChangeFaction(int)
 T CAI_BaseNPC::CheckAmmo()
 T CAI_BaseNPC::CheckFlinches()
 T CAI_BaseNPC::CheckOnGround()
 T CAI_BaseNPC::CheckPVSCondition()
 T CAI_BaseNPC::CheckPhysicsContacts()
 T CAI_BaseNPC::CheckSquad()
 T CAI_BaseNPC::CheckTarget(CBaseEntity*)
 T CAI_BaseNPC::ChooseEnemy()
 T CAI_BaseNPC::CineCleanup()
 T CAI_BaseNPC::CleanupOnDeath(CBaseEntity*, bool)
 T CAI_BaseNPC::ClearAllSchedules()
 T CAI_BaseNPC::ClearAttackConditions()
 T CAI_BaseNPC::ClearCommandGoal()
 T CAI_BaseNPC::ClearCondition(int)
 T CAI_BaseNPC::ClearCustomInterruptCondition(int)
 T CAI_BaseNPC::ClearHintNode(float)
 T CAI_BaseNPC::ClearSchedule(char const*)
 T CAI_BaseNPC::ClearSenseConditions()
 T CAI_BaseNPC::CollectShotStats(Vector const&, Vector const&)
 T CAI_BaseNPC::ConditionName(int)
 T CAI_BaseNPC::CorpseFallThink()
 T CAI_BaseNPC::CoverRadius()
 T CAI_BaseNPC::CreateBehaviors()
 T CAI_BaseNPC::CreateComponents()
 T CAI_BaseNPC::CreateCustomTarget(Vector const&, float)
 T CAI_BaseNPC::CreateLocalNavigator()
 T CAI_BaseNPC::CreateMotor()
 T CAI_BaseNPC::CreateMoveProbe()
 T CAI_BaseNPC::CreateNavigator()
 T CAI_BaseNPC::CreatePathfinder()
 T CAI_BaseNPC::CreateSenses()
 T CAI_BaseNPC::CreateTacticalServices()
 T CAI_BaseNPC::CreateVPhysics()
 T CAI_BaseNPC::Crouch()
 T CAI_BaseNPC::CurrentWeaponLOSCondition(Vector const&, bool)
 T CAI_BaseNPC::DeathSound(CTakeDamageInfo const&)
 T CAI_BaseNPC::DecalTrace(CGameTrace*, char const*)
 T CAI_BaseNPC::DeferSchedulingToBehavior(CAI_BehaviorBase*)
 T CAI_BaseNPC::DesireCrouch()
 T CAI_BaseNPC::DiscardScheduleState()
 T CAI_BaseNPC::DoImpactEffect(CGameTrace&, int)
 T CAI_BaseNPC::DrawDebugGeometryOverlays()
 T CAI_BaseNPC::DrawDebugTextOverlays()
 T CAI_BaseNPC::DumpTaskTimings()
 T CAI_BaseNPC::EndTaskOverlay()
 T CAI_BaseNPC::EnemyDistTolerance()
 T CAI_BaseNPC::EnemyDistance(CBaseEntity*)
 T CAI_BaseNPC::Event_Gibbed(CTakeDamageInfo const&)
 T CAI_BaseNPC::Event_Killed(CTakeDamageInfo const&)
 T CAI_BaseNPC::ExitScriptedSequence()
 T CAI_BaseNPC::EyeDirection2D()
 T CAI_BaseNPC::EyeDirection3D()
 T CAI_BaseNPC::EyeLookTarget()
 T CAI_BaseNPC::EyeOffset(Activity)
 T CAI_BaseNPC::EyePosition()
 T CAI_BaseNPC::FCanCheckAttacks()
 T CAI_BaseNPC::FInAimCone(Vector const&)
 T CAI_BaseNPC::FOkToMakeSound(int)
 T CAI_BaseNPC::FScheduleDone()
 T CAI_BaseNPC::FValidateHintType(CAI_Hint*)
 T CAI_BaseNPC::FacingIdeal(float)
 T CAI_BaseNPC::FacingPosition()
 T CAI_BaseNPC::FearSound()
 T CAI_BaseNPC::FindCoverFromEnemy(bool, float, float)
 T CAI_BaseNPC::FindCoverPos(CBaseEntity*, Vector*)
 T CAI_BaseNPC::FindCoverPos(CSound*, Vector*)
 T CAI_BaseNPC::FindCoverPosInRadius(CBaseEntity*, Vector const&, float, Vector*)
 T CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)
 T CAI_BaseNPC::FindNearestValidGoalPos(Vector const&, Vector*)
 T CAI_BaseNPC::FireBullets(FireBulletsInfo_t const&)
 T CAI_BaseNPC::ForceSelectedGo(CBaseEntity*, Vector const&, Vector const&, bool)
 T CAI_BaseNPC::ForceSelectedGoRandom()
 T CAI_BaseNPC::FoundEnemySound()
 T CAI_BaseNPC::Freeze(float, CBaseEntity*, Ray_t*)
 T CAI_BaseNPC::GatherAttackConditions(CBaseEntity*, float)
 T CAI_BaseNPC::GatherConditions()
 T CAI_BaseNPC::GatherEnemyConditions(CBaseEntity*)
 T CAI_BaseNPC::GetActivityID(char const*)
 T CAI_BaseNPC::GetActivityName(int)
 T CAI_BaseNPC::GetActualShootPosition(Vector const&)
 T CAI_BaseNPC::GetActualShootTrajectory(Vector const&)
 T CAI_BaseNPC::GetAlternateMoveShootTarget()
 T CAI_BaseNPC::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CAI_BaseNPC::GetAutoAimCenter()
 T CAI_BaseNPC::GetBestScent()
 T CAI_BaseNPC::GetBestSound(int)
 T CAI_BaseNPC::GetClassScheduleIdSpace()
 T CAI_BaseNPC::GetCoverActivity(CAI_Hint*)
 T CAI_BaseNPC::GetCrouchEyeOffset()
 T CAI_BaseNPC::GetCrouchGunOffset()
 T CAI_BaseNPC::GetDataDescMap()
 T CAI_BaseNPC::GetDefaultJumpGravity() const
 T CAI_BaseNPC::GetDefaultNavGoalTolerance()
 T CAI_BaseNPC::GetEnemies()
 T CAI_BaseNPC::GetEnemy()
 T CAI_BaseNPC::GetEnemy() const
 T CAI_BaseNPC::GetEnemyLKP() const
 T CAI_BaseNPC::GetEnemyLastTimeSeen() const
 T CAI_BaseNPC::GetExpresser()
 T CAI_BaseNPC::GetFacingDirection(Vector&)
 T CAI_BaseNPC::GetFailSchedule()
 T CAI_BaseNPC::GetFlinchActivity(bool, bool)
 T CAI_BaseNPC::GetGlobalScheduleId(int)
 T CAI_BaseNPC::GetGoalRepathTolerance(CBaseEntity*, GoalType_t, Vector const&, Vector const&)
 T CAI_BaseNPC::GetHintActivity(short, Activity)
 T CAI_BaseNPC::GetHintDelay(short)
 T CAI_BaseNPC::GetHitgroupDamageMultiplier(int, CTakeDamageInfo const&)
 T CAI_BaseNPC::GetJumpGravity() const
 T CAI_BaseNPC::GetLocalScheduleId(int)
 T CAI_BaseNPC::GetLocalTaskId(int)
 T CAI_BaseNPC::GetMaxJumpSpeed() const
 T CAI_BaseNPC::GetMaxTacticalLateralMovement()
 T CAI_BaseNPC::GetMinJumpHeight() const
 T CAI_BaseNPC::GetNavTargetEntity()
 T CAI_BaseNPC::GetNavType() const
 T CAI_BaseNPC::GetNewSchedule()
 T CAI_BaseNPC::GetNodeViewOffset()
 T CAI_BaseNPC::GetReactionDelay(CBaseEntity*)
 T CAI_BaseNPC::GetReasonableFacingDist()
 T CAI_BaseNPC::GetReloadActivity(CAI_Hint*)
 T CAI_BaseNPC::GetSchedule(int)
 T CAI_BaseNPC::GetScheduleOfType(int)
 T CAI_BaseNPC::GetSchedulingErrorName()
 T CAI_BaseNPC::GetScriptCustomMoveActivity()
 T CAI_BaseNPC::GetScriptCustomMoveSequence()
 T CAI_BaseNPC::GetServerClass()
 T CAI_BaseNPC::GetShootEnemyDir(Vector const&, bool)
 T CAI_BaseNPC::GetSmoothedVelocity()
 T CAI_BaseNPC::GetSoundInterests()
 T CAI_BaseNPC::GetSoundPriority(CSound*)
 T CAI_BaseNPC::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
 T CAI_BaseNPC::GetSquadCommandRepresentative()
 T CAI_BaseNPC::GetSquadSlotDebugName(int)
 T CAI_BaseNPC::GetStepDownMultiplier() const
 T CAI_BaseNPC::GetStoppedActivity()
 T CAI_BaseNPC::GetTask()
 T CAI_BaseNPC::GetTimeToNavGoal()
 T CAI_BaseNPC::GetTracerType()
 T CAI_BaseNPC::GiveWeapon(string_t)
 T CAI_BaseNPC::HandleAnimEvent(animevent_t*)
 T CAI_BaseNPC::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CAI_BaseNPC::HasCondition(int)
 T CAI_BaseNPC::HasCondition(int, bool)
 T CAI_BaseNPC::HeadDirection2D()
 T CAI_BaseNPC::HeadDirection3D()
 T CAI_BaseNPC::HearingSensitivity()
 T CAI_BaseNPC::HolsterWeapon()
 T CAI_BaseNPC::IdleSound()
 T CAI_BaseNPC::Ignite(float, bool, float, bool)
 T CAI_BaseNPC::ImpactTrace(CGameTrace*, int, char*)
 T CAI_BaseNPC::InitDefaultActivitySR()
 T CAI_BaseNPC::InitDefaultConditionSR()
 T CAI_BaseNPC::InitDefaultScheduleSR()
 T CAI_BaseNPC::InitDefaultSquadSlotSR()
 T CAI_BaseNPC::InitDefaultTaskSR()
 T CAI_BaseNPC::InitSchedulingTables()
 T CAI_BaseNPC::InitSquad()
 T CAI_BaseNPC::InnateRange1MaxRange()
 T CAI_BaseNPC::InnateRange1MinRange()
 T CAI_BaseNPC::InnateWeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BaseNPC::InputActivateSpeedModifier(inputdata_t&)
 T CAI_BaseNPC::InputBeginRappel(inputdata_t&)
 T CAI_BaseNPC::InputBreak(inputdata_t&)
 T CAI_BaseNPC::InputCreateAddon(inputdata_t&)
 T CAI_BaseNPC::InputDisableSpeedModifier(inputdata_t&)
 T CAI_BaseNPC::InputForceInteractionWithNPC(inputdata_t&)
 T CAI_BaseNPC::InputForgetEntity(inputdata_t&)
 T CAI_BaseNPC::InputGagDisable(inputdata_t&)
 T CAI_BaseNPC::InputGagEnable(inputdata_t&)
 T CAI_BaseNPC::InputHolsterAndDestroyWeapon(inputdata_t&)
 T CAI_BaseNPC::InputHolsterWeapon(inputdata_t&)
 T CAI_BaseNPC::InputIgnoreDangerSounds(inputdata_t&)
 T CAI_BaseNPC::InputInsideTransition(inputdata_t&)
 T CAI_BaseNPC::InputOutsideTransition(inputdata_t&)
 T CAI_BaseNPC::InputSetEnemyFilter(inputdata_t&)
 T CAI_BaseNPC::InputSetHealth(inputdata_t&)
 T CAI_BaseNPC::InputSetRelationship(inputdata_t&)
 T CAI_BaseNPC::InputSetSpeedModifierRadius(inputdata_t&)
 T CAI_BaseNPC::InputSetSpeedModifierSpeed(inputdata_t&)
 T CAI_BaseNPC::InputSetSquad(inputdata_t&)
 T CAI_BaseNPC::InputStartScripting(inputdata_t&)
 T CAI_BaseNPC::InputStopScripting(inputdata_t&)
 T CAI_BaseNPC::InputUnholsterWeapon(inputdata_t&)
 T CAI_BaseNPC::InputUpdateEnemyMemory(inputdata_t&)
 T CAI_BaseNPC::InputWake(inputdata_t&)
 T CAI_BaseNPC::IsActivityFinished()
 T CAI_BaseNPC::IsActivityMovementPhased(Activity)
 T CAI_BaseNPC::IsAllowedToDodge()
 T CAI_BaseNPC::IsAttackFrozen()
 T CAI_BaseNPC::IsCommandMoving()
 T CAI_BaseNPC::IsCommandable()
 T CAI_BaseNPC::IsCoverPosition(Vector const&, Vector const&)
 T CAI_BaseNPC::IsCrouchedActivity(Activity)
 T CAI_BaseNPC::IsCrouching()
 T CAI_BaseNPC::IsCurSchedule(int, bool)
 T CAI_BaseNPC::IsCurTaskContinuousMove()
 T CAI_BaseNPC::IsHeavyDamage(CTakeDamageInfo const&)
 T CAI_BaseNPC::IsInterruptable()
 T CAI_BaseNPC::IsJumpLegal(Vector const&, Vector const&, Vector const&) const
 T CAI_BaseNPC::IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BaseNPC::IsLightDamage(CTakeDamageInfo const&)
 T CAI_BaseNPC::IsMedic()
 T CAI_BaseNPC::IsMovementFrozen()
 T CAI_BaseNPC::IsMoving()
 T CAI_BaseNPC::IsNPC() const
 T CAI_BaseNPC::IsNavigationUrgent()
 T CAI_BaseNPC::IsPlayerAlly(CBasePlayer*)
 T CAI_BaseNPC::IsScheduleValid()
 T CAI_BaseNPC::IsSilentSquadMember() const
 T CAI_BaseNPC::IsSquadmateInSpread(Vector const&, Vector const&, float, float)
 T CAI_BaseNPC::IsTemplate()
 T CAI_BaseNPC::IsUnreachable(CBaseEntity*)
 T CAI_BaseNPC::IsUnusableNode(int, CAI_Hint*)
 T CAI_BaseNPC::IsValidCommandTarget(CBaseEntity*)
 T CAI_BaseNPC::IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BaseNPC::IsValidEnemy(CBaseEntity*)
 T CAI_BaseNPC::IsValidMoveAwayDest(Vector const&)
 T CAI_BaseNPC::IsValidReasonableFacing(Vector const&, float)
 T CAI_BaseNPC::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BaseNPC::IsWaitFinished()
 T CAI_BaseNPC::IsWaitingToRappel()
 T CAI_BaseNPC::IsWeaponStateChanging()
 T CAI_BaseNPC::JustMadeSound(int, float)
 T CAI_BaseNPC::KeyValue(char const*, char const*)
 T CAI_BaseNPC::LineOfSightDist(Vector const&, float)
 T CAI_BaseNPC::LoadDefaultSchedules()
 T CAI_BaseNPC::LoadSchedules()
 T CAI_BaseNPC::LoadedSchedules()
 T CAI_BaseNPC::LockBestSound()
 T CAI_BaseNPC::LostEnemySound()
 T CAI_BaseNPC::MaintainActivity()
 T CAI_BaseNPC::MaintainLookTargets(float)
 T CAI_BaseNPC::MaintainSchedule()
 T CAI_BaseNPC::MaintainTurnActivity()
 T CAI_BaseNPC::MakeAIFootstepSound(float, float)
 T CAI_BaseNPC::MakeTracer(Vector const&, CGameTrace const&, int)
 T CAI_BaseNPC::MaxYawSpeed()
 T CAI_BaseNPC::MeleeAttack1Conditions(float, float)
 T CAI_BaseNPC::MeleeAttack2Conditions(float, float)
 T CAI_BaseNPC::ModifyAutoMovement(Vector&)
 T CAI_BaseNPC::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BaseNPC::MoveOrder(Vector const&, CAI_BaseNPC**, int)
 T CAI_BaseNPC::MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BaseNPC::NPCInit()
 T CAI_BaseNPC::NPCInitThink()
 T CAI_BaseNPC::NPCThink()
 T CAI_BaseNPC::NPCUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CAI_BaseNPC::NPC_TranslateActivity(Activity)
 T CAI_BaseNPC::NetworkStateChanged_m_lifeState()
 T CAI_BaseNPC::NetworkStateChanged_m_lifeState(void*)
 T CAI_BaseNPC::NotifyDeadFriend(CBaseEntity*)
 T CAI_BaseNPC::NotifyFriendsOfDamage(CBaseEntity*)
 T CAI_BaseNPC::NotifyPushMove()
 T CAI_BaseNPC::NumBehaviors()
 T CAI_BaseNPC::ObjectCaps()
 T CAI_BaseNPC::OccupyStrategySlotRange(int, int)
 T CAI_BaseNPC::OnBeginMoveAndShoot()
 T CAI_BaseNPC::OnBehaviorChangeStatus(CAI_BehaviorBase*, bool)
 T CAI_BaseNPC::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CAI_BaseNPC::OnChangeActivity(Activity)
 T CAI_BaseNPC::OnChangeHintGroup(string_t, string_t)
 T CAI_BaseNPC::OnChangeRunningBehavior(CAI_BehaviorBase*, CAI_BehaviorBase*)
 T CAI_BaseNPC::OnClearGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
 T CAI_BaseNPC::OnConditionCleared(int)
 T CAI_BaseNPC::OnConditionSet(int)
 T CAI_BaseNPC::OnDoorBlocked(CBasePropDoor*)
 T CAI_BaseNPC::OnDoorFullyOpen(CBasePropDoor*)
 T CAI_BaseNPC::OnEndMoveAndShoot()
 T CAI_BaseNPC::OnEnemyChanged(CBaseEntity*, CBaseEntity*)
 T CAI_BaseNPC::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BaseNPC::OnGivenWeapon(CBaseCombatWeapon*)
 T CAI_BaseNPC::OnListened()
 T CAI_BaseNPC::OnLooked(int)
 T CAI_BaseNPC::OnMoveOrder()
 T CAI_BaseNPC::OnMoveToCommandGoalFailed()
 T CAI_BaseNPC::OnMovementComplete()
 T CAI_BaseNPC::OnMovementFailed()
 T CAI_BaseNPC::OnObstructingDoor(AILocalMoveGoal_t*, CBaseDoor*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnRangeAttack1()
 T CAI_BaseNPC::OnRestore()
 T CAI_BaseNPC::OnScheduleChange()
 T CAI_BaseNPC::OnSeeEntity(CBaseEntity*)
 T CAI_BaseNPC::OnSetSchedule()
 T CAI_BaseNPC::OnStartScene()
 T CAI_BaseNPC::OnStartSchedule(int)
 T CAI_BaseNPC::OnStateChange(NPC_STATE, NPC_STATE)
 T CAI_BaseNPC::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTakeDamage_Dead(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTakeDamage_Dying(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTargetOrder()
 T CAI_BaseNPC::OnUpcomingPropDoor(AILocalMoveGoal_t*, CBasePropDoor*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnUpdateShotRegulator()
 T CAI_BaseNPC::OnlySeeAliveEntities()
 T CAI_BaseNPC::OpenPropDoorBegin(CBasePropDoor*)
 T CAI_BaseNPC::OverrideMove(float)
 T CAI_BaseNPC::OverrideMoveFacing(AILocalMoveGoal_t const&, float)
 T CAI_BaseNPC::PainSound(CTakeDamageInfo const&)
 T CAI_BaseNPC::ParseScriptedNPCInteractions()
 T CAI_BaseNPC::PassesDamageFilter(CTakeDamageInfo const&)
 T CAI_BaseNPC::PhysicsSolidMaskForEntity() const
 T CAI_BaseNPC::PickupItem(CBaseEntity*)
 T CAI_BaseNPC::PickupWeapon(CBaseCombatWeapon*)
 T CAI_BaseNPC::PlayFlinchGesture()
 T CAI_BaseNPC::PlayScriptedSentence(char const*, float, float, soundlevel_t, bool, CBaseEntity*)
 T CAI_BaseNPC::PlaySentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_BaseNPC::PlayerHasIlluminatedNPC(CBasePlayer*, float)
 T CAI_BaseNPC::PlayerInSpread(Vector const&, Vector const&, float, float, bool)
 T CAI_BaseNPC::PlayerPenetratingVPhysics()
 T CAI_BaseNPC::PointInSpread(CBaseCombatCharacter*, Vector const&, Vector const&, Vector const&, float, float)
 T CAI_BaseNPC::PopulatePoseParameters()
 T CAI_BaseNPC::PostConstructor(char const*)
 T CAI_BaseNPC::PostMovement()
 T CAI_BaseNPC::PostNPCInit()
 T CAI_BaseNPC::PostRunStopMoving()
 T CAI_BaseNPC::PostscheduleThink()
 T CAI_BaseNPC::PreNPCThink()
 T CAI_BaseNPC::PreThink()
 T CAI_BaseNPC::Precache()
 T CAI_BaseNPC::PrescheduleThink()
 T CAI_BaseNPC::QueryHearSound(CSound*)
 T CAI_BaseNPC::QuerySeeEntity(CBaseEntity*, bool)
 T CAI_BaseNPC::RangeAttack1Conditions(float, float)
 T CAI_BaseNPC::RangeAttack2Conditions(float, float)
 T CAI_BaseNPC::RebalanceThinks()
 T CAI_BaseNPC::RelaxAim()
 T CAI_BaseNPC::RememberUnreachable(CBaseEntity*, float)
 T CAI_BaseNPC::RemoveIgnoredConditions()
 T CAI_BaseNPC::RemoveMemory()
 T CAI_BaseNPC::ReportAIState()
 T CAI_BaseNPC::ReportOverThinkLimit(float)
 T CAI_BaseNPC::ResetIdealActivity(Activity)
 T CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)
 T CAI_BaseNPC::RespondedTo(char const*, bool, bool)
 T CAI_BaseNPC::Restore(IRestore&)
 T CAI_BaseNPC::RunAI()
 T CAI_BaseNPC::RunAnimation()
 T CAI_BaseNPC::RunAttackTask(int)
 T CAI_BaseNPC::RunDieTask()
 T CAI_BaseNPC::RunTask(Task_t const*)
 T CAI_BaseNPC::RunTask(Task_t*)
 T CAI_BaseNPC::RunTaskOverlay()
 T CAI_BaseNPC::Save(ISave&)
 T CAI_BaseNPC::ScheduledFollowPath(int, CBaseEntity*, Activity)
 T CAI_BaseNPC::ScheduledMoveToGoalEntity(int, CBaseEntity*, Activity)
 T CAI_BaseNPC::SelectAlertIdealState()
 T CAI_BaseNPC::SelectAlertSchedule()
 T CAI_BaseNPC::SelectCombatSchedule()
 T CAI_BaseNPC::SelectDeadSchedule()
 T CAI_BaseNPC::SelectDeathPose(CTakeDamageInfo const&)
 T CAI_BaseNPC::SelectFailSchedule(int, int, int)
 T CAI_BaseNPC::SelectFlinchSchedule()
 T CAI_BaseNPC::SelectIdealState()
 T CAI_BaseNPC::SelectIdleIdealState()
 T CAI_BaseNPC::SelectIdleSchedule()
 T CAI_BaseNPC::SelectSchedule()
 T CAI_BaseNPC::SelectScriptIdealState()
 T CAI_BaseNPC::SelectScriptSchedule()
 T CAI_BaseNPC::SetActivity(Activity)
 T CAI_BaseNPC::SetActivityAndSequence(Activity, int, Activity, Activity)
 T CAI_BaseNPC::SetAim(Vector const&)
 T CAI_BaseNPC::SetCommandGoal(Vector const&)
 T CAI_BaseNPC::SetCondition(int)
 T CAI_BaseNPC::SetCustomInterruptCondition(int)
 T CAI_BaseNPC::SetDeathPose(int const&)
 T CAI_BaseNPC::SetDeathPoseFrame(int const&)
 T CAI_BaseNPC::SetDefaultEyeOffset()
 T CAI_BaseNPC::SetDistLook(float)
 T CAI_BaseNPC::SetEnemy(CBaseEntity*, bool)
 T CAI_BaseNPC::SetEnemyOccluder(CBaseEntity*)
 T CAI_BaseNPC::SetHeadDirection(Vector const&, float)
 T CAI_BaseNPC::SetHintGroup(string_t, bool)
 T CAI_BaseNPC::SetHintNode(CAI_Hint*)
 T CAI_BaseNPC::SetHullSizeNormal(bool)
 T CAI_BaseNPC::SetHullSizeSmall(bool)
 T CAI_BaseNPC::SetIdealActivity(Activity)
 T CAI_BaseNPC::SetNavType(Navigation_t)
 T CAI_BaseNPC::SetPlayerAvoidState()
 T CAI_BaseNPC::SetPrimaryBehavior(CAI_BehaviorBase*)
 T CAI_BaseNPC::SetSchedule(CAI_Schedule*)
 T CAI_BaseNPC::SetSchedule(int)
 T CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)
 T CAI_BaseNPC::SetSequenceById(int)
 T CAI_BaseNPC::SetSquad(CAI_Squad*)
 T CAI_BaseNPC::SetState(NPC_STATE)
 T CAI_BaseNPC::SetTarget(CBaseEntity*)
 T CAI_BaseNPC::SetTurnActivity()
 T CAI_BaseNPC::SetWait(float, float)
 T CAI_BaseNPC::SetupVPhysicsHull()
 T CAI_BaseNPC::ShouldAcceptGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
 T CAI_BaseNPC::ShouldAlwaysThink()
 T CAI_BaseNPC::ShouldAutoSummon()
 T CAI_BaseNPC::ShouldBecomeStatue()
 T CAI_BaseNPC::ShouldBehaviorSelectSchedule(CAI_BehaviorBase*)
 T CAI_BaseNPC::ShouldBruteForceFailedNav()
 T CAI_BaseNPC::ShouldCheckPhysicsContacts()
 T CAI_BaseNPC::ShouldChooseNewEnemy()
 T CAI_BaseNPC::ShouldFadeOnDeath()
 T CAI_BaseNPC::ShouldFailNav(bool)
 T CAI_BaseNPC::ShouldGib(CTakeDamageInfo const&)
 T CAI_BaseNPC::ShouldGoToIdleState()
 T CAI_BaseNPC::ShouldIgnoreSound(CSound*)
 T CAI_BaseNPC::ShouldLookForBetterWeapon()
 T CAI_BaseNPC::ShouldMoveAndShoot()
 T CAI_BaseNPC::ShouldMoveWait()
 T CAI_BaseNPC::ShouldNotDistanceCull()
 T CAI_BaseNPC::ShouldPickADeathPose()
 T CAI_BaseNPC::ShouldPlayIdleSound()
 T CAI_BaseNPC::ShouldPlayerAvoid()
 T CAI_BaseNPC::ShouldProbeCollideAgainstEntity(CBaseEntity*)
 T CAI_BaseNPC::ShouldSavePhysics()
 T CAI_BaseNPC::Sleep()
 T CAI_BaseNPC::SpeakSentence(int)
 T CAI_BaseNPC::SquadSlotName(int)
 T CAI_BaseNPC::Stand()
 T CAI_BaseNPC::StartNPC()
 T CAI_BaseNPC::StartScriptMoveToTargetTask(int)
 T CAI_BaseNPC::StartTargetHandling(CBaseEntity*)
 T CAI_BaseNPC::StartTask(Task_t const*)
 T CAI_BaseNPC::StartTask(Task_t*)
 T CAI_BaseNPC::StartTouch(CBaseEntity*)
 T CAI_BaseNPC::StepHeight() const
 T CAI_BaseNPC::TargetOrder(CBaseEntity*, CAI_BaseNPC**, int)
 T CAI_BaseNPC::TaskComplete(bool)
 T CAI_BaseNPC::TaskFail(int)
 T CAI_BaseNPC::TaskIsRunning()
 T CAI_BaseNPC::TaskMovementComplete()
 T CAI_BaseNPC::TaskName(int)
 T CAI_BaseNPC::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BaseNPC::TestShootPosition(Vector const&, Vector const&)
 T CAI_BaseNPC::ToggleFreeze()
 T CAI_BaseNPC::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CAI_BaseNPC::TranslateActivity(Activity, Activity*)
 T CAI_BaseNPC::TranslateAddOnAttachment(char*, int)
 T CAI_BaseNPC::TranslateNavGoal(CBaseEntity*, Vector&)
 T CAI_BaseNPC::TranslateSchedule(int)
 T CAI_BaseNPC::TryRestoreHull()
 T CAI_BaseNPC::Unfreeze()
 T CAI_BaseNPC::UnholsterWeapon()
 T CAI_BaseNPC::UpdateEfficiency(bool)
 T CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity*, Vector const&, CBaseEntity*)
 T CAI_BaseNPC::UpdateEnemyPos()
 T CAI_BaseNPC::UpdateOnRemove()
 T CAI_BaseNPC::UpdateSleepState(bool)
 T CAI_BaseNPC::UpdateTargetPos()
 T CAI_BaseNPC::UpdateTransmitState()
 T CAI_BaseNPC::UpdateTurnGesture()
 T CAI_BaseNPC::UseAttackSquadSlots()
 T CAI_BaseNPC::VacateStrategySlot()
 T CAI_BaseNPC::ValidEyeTarget(Vector const&)
 T CAI_BaseNPC::ValidateNavGoal()
 T CAI_BaseNPC::Wake(bool)
 T CAI_BaseNPC::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BaseNPC::Weapon_IsBetterAvailable()
 T CAI_BaseNPC::Weapon_ShootPosition()
 T CAI_BaseNPC::WokeThisTick() const
 T CAI_BaseNPC::YouForgotToImplementOrDeclareServerClass()
 T CAI_BaseNPC::~CAI_BaseNPC()
 T CAI_BattleLine::GetDataDescMap()
 T CAI_BattleLine::InputActivate(inputdata_t&)
 T CAI_BattleLine::InputDeactivate(inputdata_t&)
 T CAI_BattleLine::MovementThink()
 T CAI_BattleLine::NotifyChangeTacticalConstraints()
 T CAI_BattleLine::Spawn()
 T CAI_BattleLine::UpdateOnRemove()
 T CAI_BattleLine::~CAI_BattleLine()
 T CAI_BehaviorBase::IsScheduleValid(AIChannelScheduleState_t*)
 T CAI_BehaviorBase::MaintainChannelSchedules()
 T CAI_BehaviorBase::MaintainSchedule(int)
 T CAI_BehaviorBase::NotifyChangeBehaviorStatus(bool)
 T CAI_BehaviorBase::RestoreBehaviors(IRestore&, CAI_BehaviorBase**, int, bool)
 T CAI_BehaviorBase::SaveBehaviors(ISave&, CAI_BehaviorBase*, CAI_BehaviorBase**, int, bool)
 T CAI_BehaviorBase::SetSchedule(int, CAI_Schedule*)
 T CAI_BehaviorHost<CAI_BaseNPC>::AimGun()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_AimGun()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_BestEnemy()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanFlinch()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GatherConditions()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetDefaultNavGoalTolerance()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetFlinchActivity(bool, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetJumpGravity() const
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetMaxTacticalLateralMovement()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetReasonableFacingDist()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouchedActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouching()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCurTaskContinuousMove()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsInterruptable()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsNavigationUrgent()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_NPC_TranslateActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementComplete()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementFailed()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnScheduleChange()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_PrescheduleThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_QueryHearSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_SelectSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldAlwaysThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldPlayerAvoid()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_TranslateSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BestEnemy()
 T CAI_BehaviorHost<CAI_BaseNPC>::CanFlinch()
 T CAI_BehaviorHost<CAI_BaseNPC>::CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::CleanupOnDeath(CBaseEntity*, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::Event_Killed(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::FValidateHintType(CAI_Hint*)
 T CAI_BehaviorHost<CAI_BaseNPC>::GetDefaultNavGoalTolerance()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetFailSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetFlinchActivity(bool, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::GetJumpGravity() const
 T CAI_BehaviorHost<CAI_BaseNPC>::GetMaxTacticalLateralMovement()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetNewSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetReasonableFacingDist()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::HandleAnimEvent(animevent_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCrouchedActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCrouching()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCurTaskContinuousMove()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsInterruptable()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BehaviorHost<CAI_BaseNPC>::IsNavigationUrgent()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BehaviorHost<CAI_BaseNPC>::NPC_TranslateActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnChangeHintGroup(string_t, string_t)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnMovementComplete()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnMovementFailed()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnRestore()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnScheduleChange()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnStartSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::PrescheduleThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::QueryHearSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::Restore(IRestore&)
 T CAI_BehaviorHost<CAI_BaseNPC>::Save(ISave&)
 T CAI_BehaviorHost<CAI_BaseNPC>::SelectFailSchedule(int, int, int)
 T CAI_BehaviorHost<CAI_BaseNPC>::SelectSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldAlwaysThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldIgnoreSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldPlayerAvoid()
 T CAI_BehaviorHost<CAI_BaseNPC>::TaskName(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::TranslateSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::UpdateOnRemove()
 T CAI_BehaviorHost<CAI_BaseNPC>::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BlendedMotor::AddTurnGesture(float)
 T CAI_BlendedMotor::BuildInsertNode(int, float)
 T CAI_BlendedMotor::BuildTurnScript(AILocalMoveGoal_t const&)
 T CAI_BlendedMotor::BuildTurnScript(int, int)
 T CAI_BlendedMotor::BuildVelocityScript(AILocalMoveGoal_t const&)
 T CAI_BlendedMotor::GetInteriorSequence(int)
 T CAI_BlendedMotor::GetMoveScriptDist(float&)
 T CAI_BlendedMotor::GetMoveScriptTotalTime()
 T CAI_BlendedMotor::GetMoveScriptYaw()
 T CAI_BlendedMotor::InsertSlowdown(float, float, bool)
 T CAI_BlendedMotor::MaintainTurnActivity()
 T CAI_BlendedMotor::MoveClimbStart(Vector const&, Vector const&, float, float)
 T CAI_BlendedMotor::MoveContinue()
 T CAI_BlendedMotor::MoveFlyExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_BlendedMotor::MoveGroundExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_BlendedMotor::MoveJumpStart(Vector const&)
 T CAI_BlendedMotor::MovePaused()
 T CAI_BlendedMotor::MoveStart()
 T CAI_BlendedMotor::MoveStop()
 T CAI_BlendedMotor::OverrideMaxYawSpeed(Activity)
 T CAI_BlendedMotor::RecalculateYawSpeed()
 T CAI_BlendedMotor::ResetGoalSequence()
 T CAI_BlendedMotor::ResetMoveCalculations()
 T CAI_BlendedMotor::SetMoveScriptAnim(float)
 T CAI_BlendedMotor::UpdateYaw(int)
 T CAI_BlendedMotor::~CAI_BlendedMotor()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::CreateMotor()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::CreateNavigator()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::GetTimeToNavGoal()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::MaxYawSpeed()
 T CAI_ChangeHintGroup::FindQualifiedNPC(CAI_BaseNPC*, CBaseEntity*, CBaseEntity*)
 T CAI_ChangeHintGroup::GetDataDescMap()
 T CAI_ChangeHintGroup::InputActivate(inputdata_t&)
 T CAI_ChangeHintGroup::ObjectCaps()
 T CAI_ChangeHintGroup::~CAI_ChangeHintGroup()
 T CAI_ChangeTarget::GetDataDescMap()
 T CAI_ChangeTarget::InputActivate(inputdata_t&)
 T CAI_ChangeTarget::ObjectCaps()
 T CAI_ChangeTarget::~CAI_ChangeTarget()
 T CAI_Component::SetOuter(CAI_BaseNPC*)
 T CAI_Component::TaskComplete(bool)
 T CAI_Component::TaskFail(int)
 T CAI_DefMovementSink::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveBlocked(AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_DynamicLink::GenerateControllerLinks()
 T CAI_DynamicLink::GetDataDescMap()
 T CAI_DynamicLink::GetDynamicLink(int, int)
 T CAI_DynamicLink::InitDynamicLinks()
 T CAI_DynamicLink::InputTurnOff(inputdata_t&)
 T CAI_DynamicLink::InputTurnOn(inputdata_t&)
 T CAI_DynamicLink::ObjectCaps()
 T CAI_DynamicLink::PurgeDynamicLinks()
 T CAI_DynamicLink::ResetDynamicLinks()
 T CAI_DynamicLink::SetLinkState()
 T CAI_DynamicLink::~CAI_DynamicLink()
 T CAI_DynamicLinkController::GenerateLinksFromVolume()
 T CAI_DynamicLinkController::GetDataDescMap()
 T CAI_DynamicLinkController::InputSetAllowed(inputdata_t&)
 T CAI_DynamicLinkController::InputSetInvert(inputdata_t&)
 T CAI_DynamicLinkController::InputTurnOff(inputdata_t&)
 T CAI_DynamicLinkController::InputTurnOn(inputdata_t&)
 T CAI_DynamicLinkController::~CAI_DynamicLinkController()
 T CAI_Enemies::CAI_Enemies()
 T CAI_Enemies::ClearMemory(CBaseEntity*)
 T CAI_Enemies::Find(CBaseEntity*, bool)
 T CAI_Enemies::FirstTimeSeen(CBaseEntity*)
 T CAI_Enemies::GetDangerMemory()
 T CAI_Enemies::GetFirst(AIEnemiesIter_t__**)
 T CAI_Enemies::GetNext(AIEnemiesIter_t__**)
 T CAI_Enemies::HasEludedMe(CBaseEntity*)
 T CAI_Enemies::HasMemory(CBaseEntity*)
 T CAI_Enemies::LastKnownPosition(CBaseEntity*)
 T CAI_Enemies::LastTimeSeen(CBaseEntity*, bool)
 T CAI_Enemies::MarkAsEluded(CBaseEntity*)
 T CAI_Enemies::OnTookDamageFrom(CBaseEntity*)
 T CAI_Enemies::RefreshMemories()
 T CAI_Enemies::UpdateMemory(CAI_Network*, CBaseEntity*, Vector const&, float, bool)
 T CAI_Enemies::~CAI_Enemies()
 T CAI_EnemiesListSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CAI_EnemiesListSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CAI_EnemiesListSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CAI_EnemiesListSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CAI_Expresser::CAI_Expresser(CBaseFlex*)
 T CAI_Expresser::CanSpeak()
 T CAI_Expresser::CanSpeakAfterMyself()
 T CAI_Expresser::CanSpeakConcept(CAI_Concept)
 T CAI_Expresser::FindResponse(ResponseRules::CRR_Response&, CAI_Concept&, ResponseRules::CriteriaSet*)
 T CAI_Expresser::FireEntIOFromResponse(char*, CBaseEntity*)
 T CAI_Expresser::GatherCriteria(ResponseRules::CriteriaSet*, CAI_Concept const&, char const*)
 T CAI_Expresser::GetResponseDuration(ResponseRules::CRR_Response*)
 T CAI_Expresser::IsSpeaking()
 T CAI_Expresser::IsSpeechGloballySuppressed()
 T CAI_Expresser::IsValidResponse(ResponseRules::ResponseType_t, char const*)
 T CAI_Expresser::NoteSpeaking(float, float)
 T CAI_Expresser::OnSpeechFinished()
 T CAI_Expresser::SemaphoreIsAvailable(CBaseEntity*)
 T CAI_Expresser::SetSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*, bool)
 T CAI_Expresser::Speak(CAI_Concept&, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_Expresser::Speak(CAI_Concept&, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_Expresser::SpeakDispatchResponse(CAI_Concept&, ResponseRules::CRR_Response*, ResponseRules::CriteriaSet*, IRecipientFilter*)
 T CAI_Expresser::SpeakRawScene(char const*, float, ResponseRules::CRR_Response*, IRecipientFilter*)
 T CAI_Expresser::SpeakRawSentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_Expresser::SpeechMsg(CBaseEntity*, char const*, ...)
 T CAI_Expresser::SpokeConcept(CAI_Concept)
 T CAI_Expresser::~CAI_Expresser()
 T CAI_ExpresserHost<CAI_BaseHumanoid>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::GetResponseSystem()
 T CAI_ExpresserHost<CAI_BaseHumanoid>::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::PlaySentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CBasePlayer>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CBasePlayer>::GetResponseSystem()
 T CAI_ExpresserHost<CBasePlayer>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CBasePlayer>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CFlexExpresserShim>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CFlexExpresserShim>::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_ExpresserHost<CFlexExpresserShim>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CFlexExpresserShim>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CFlexExpresserShim>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CFlexExpresserShim>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CHostageExpresserShim>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CHostageExpresserShim>::GetResponseSystem()
 T CAI_ExpresserHost<CHostageExpresserShim>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CHostageExpresserShim>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CHostageExpresserShim>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CHostageExpresserShim>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost_NPC_DoModifyOrAppendCriteria(CAI_BaseNPC*, ResponseRules::CriteriaSet&)
 T CAI_ExpresserSink::OnSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserSink::OnStartSpeaking()
 T CAI_ExpresserSink::UseSemaphore()
 T CAI_ExpresserWithFollowup::DispatchFollowupThroughQueue(CAI_Concept const&, char const*, CResponseQueue::CFollowupTargetSpec_t const&, float, CBaseEntity*)
 T CAI_ExpresserWithFollowup::OnSpeechFinished()
 T CAI_ExpresserWithFollowup::Speak(CAI_Concept&, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserWithFollowup::SpeakDispatchFollowup(ResponseRules::AI_ResponseFollowup&)
 T CAI_ExpresserWithFollowup::SpeakDispatchResponse(CAI_Concept&, ResponseRules::CRR_Response*, ResponseRules::CriteriaSet*, IRecipientFilter*)
 T CAI_FightFromCoverGoal* _CreateEntityTemplate<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*, char const*)
 T CAI_FightFromCoverGoal::BeginMovingFront()
 T CAI_FightFromCoverGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_FightFromCoverGoal::DrawDebugTextOverlays()
 T CAI_FightFromCoverGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_FightFromCoverGoal::FrontThink()
 T CAI_FightFromCoverGoal::GetDataDescMap()
 T CAI_FightFromCoverGoal::InputSetDirectionalMarker(inputdata_t&)
 T CAI_FightFromCoverGoal::OnActivate()
 T CAI_FightFromCoverGoal::OnDeactivate()
 T CAI_FightFromCoverGoal::ResolveNames()
 T CAI_FightFromCoverGoal::~CAI_FightFromCoverGoal()
 T CAI_FollowBehavior::SetFollowGoal(CAI_FollowGoal*, bool)
 T CAI_FollowBehavior::SetFollowTarget(CBaseEntity*, bool)
 T CAI_FollowGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_FollowGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_FollowGoal::GetDataDescMap()
 T CAI_FollowGoal::~CAI_FollowGoal()
 T CAI_FollowManager::AddFollower(CBaseEntity*, CAI_BaseNPC*, AI_Formations_t, AI_FollowManagerInfoHandle_t*)
 T CAI_FollowManager::ChangeFormation(AI_FollowManagerInfoHandle_t&, AI_Formations_t)
 T CAI_FollowManager::FindCreateGroup(CBaseEntity*, AI_Formations_t)
 T CAI_FollowManager::RedistributeSlots(AI_FollowGroup_t*)
 T CAI_FollowManager::RemoveFollower(AI_FollowManagerInfoHandle_t&)
 T CAI_FollowManager::RemoveGroup(AI_FollowGroup_t*)
 T CAI_FollowManager::~CAI_FollowManager()
 T CAI_GlobalNamespace::AddSymbol(char const*, int)
 T CAI_GlobalNamespace::CAI_GlobalNamespace()
 T CAI_GlobalNamespace::Clear()
 T CAI_GlobalNamespace::IdToSymbol(int) const
 T CAI_GlobalNamespace::NextGlobalBase() const
 T CAI_GlobalNamespace::SymbolToId(char const*) const
 T CAI_GlobalNamespace::~CAI_GlobalNamespace()
 T CAI_GlobalScheduleNamespace::~CAI_GlobalScheduleNamespace()
 T CAI_GoalEntity::DelayedRefresh()
 T CAI_GoalEntity::DisableGoal(CAI_BaseNPC*)
 T CAI_GoalEntity::DrawDebugTextOverlays()
 T CAI_GoalEntity::EnableGoal(CAI_BaseNPC*)
 T CAI_GoalEntity::GetDataDescMap()
 T CAI_GoalEntity::InputActivate(inputdata_t&)
 T CAI_GoalEntity::InputDeactivate(inputdata_t&)
 T CAI_GoalEntity::InputUpdateActors(inputdata_t&)
 T CAI_GoalEntity::ObjectCaps()
 T CAI_GoalEntity::OnActivate()
 T CAI_GoalEntity::OnDeactivate()
 T CAI_GoalEntity::OnEntityCreated(CBaseEntity*)
 T CAI_GoalEntity::OnEntityDeleted(CBaseEntity*)
 T CAI_GoalEntity::OnRestore()
 T CAI_GoalEntity::PruneActors()
 T CAI_GoalEntity::ResolveNames()
 T CAI_GoalEntity::Spawn()
 T CAI_GoalEntity::UpdateOnRemove()
 T CAI_GoalEntity::~CAI_GoalEntity()
 T CAI_Hint::Activate()
 T CAI_Hint::DisableForSeconds(float)
 T CAI_Hint::DrawDebugTextOverlays()
 T CAI_Hint::EnableThink()
 T CAI_Hint::FixupTargetNode()
 T CAI_Hint::GetDataDescMap()
 T CAI_Hint::GetDirection()
 T CAI_Hint::GetPosition(CBaseCombatCharacter*, Vector*)
 T CAI_Hint::HintMatchesCriteria(CAI_BaseNPC*, CHintCriteria const&, Vector const&, float*, bool, bool)
 T CAI_Hint::InputDisableHint(inputdata_t&)
 T CAI_Hint::InputEnableHint(inputdata_t&)
 T CAI_Hint::IsInNodeFOV(CBaseEntity*)
 T CAI_Hint::IsLockedBy(CBaseEntity*)
 T CAI_Hint::IsViewable()
 T CAI_Hint::Lock(CBaseEntity*)
 T CAI_Hint::ObjectCaps()
 T CAI_Hint::OnRestore()
 T CAI_Hint::Spawn()
 T CAI_Hint::Unlock(float)
 T CAI_Hint::UpdateOnRemove()
 T CAI_Hint::Yaw()
 T CAI_Hint::~CAI_Hint()
 T CAI_HintManager::AddHint(CAI_Hint*)
 T CAI_HintManager::AddHintByType(CAI_Hint*)
 T CAI_HintManager::CreateHint(HintNodeData*, char const*)
 T CAI_HintManager::DrawHintOverlays(float)
 T CAI_HintManager::DumpHints()
 T CAI_HintManager::FindAllHints(CAI_BaseNPC*, Vector const&, CHintCriteria const&, CUtlVector<CAI_Hint*, CUtlMemory<CAI_Hint*, int> >*)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, CHintCriteria const&)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, Hint_e, int, float, Vector const*)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, Vector const&, CHintCriteria const&)
 T CAI_HintManager::FindHint(Vector const&, CHintCriteria const&)
 T CAI_HintManager::FindHintRandom(CAI_BaseNPC*, Vector const&, CHintCriteria const&)
 T CAI_HintManager::GetFirstHint(AIHintIter_t__**)
 T CAI_HintManager::GetFlags(char const*)
 T CAI_HintManager::GetNextHint(AIHintIter_t__**)
 T CAI_HintManager::RemoveHint(CAI_Hint*)
 T CAI_HintManager::RemoveHintByType(CAI_Hint*)
 T CAI_InterestTarget::Add(CAI_InterestTarget_t::CAI_InterestTarget_e, CBaseEntity*, Vector const&, float, float, float)
 T CAI_InterestTarget::Add(CBaseEntity*, Vector const&, float, float, float)
 T CAI_InterestTarget::Add(CBaseEntity*, float, float, float)
 T CAI_InterestTarget::Add(Vector const&, float, float, float)
 T CAI_InterestTarget_t::GetPosition()
 T CAI_InterestTarget_t::Interest()
 T CAI_InterestTarget_t::IsActive()
 T CAI_InterestTarget_t::IsThis(CBaseEntity*)
 T CAI_LeadBehavior::LeadPlayer(AI_LeadArgs_t const&, CAI_LeadBehaviorHandler*)
 T CAI_LeadBehavior::SetGoal(AI_LeadArgs_t const&)
 T CAI_LeadGoal::GetConceptModifiers(char const*)
 T CAI_LeadGoal::GetDataDescMap()
 T CAI_LeadGoal::GetLeadBehavior()
 T CAI_LeadGoal::InputActivate(inputdata_t&)
 T CAI_LeadGoal::InputDeactivate(inputdata_t&)
 T CAI_LeadGoal::InputSetFailure(inputdata_t&)
 T CAI_LeadGoal::InputSetSuccess(inputdata_t&)
 T CAI_LeadGoal::OnEvent(int)
 T CAI_LeadGoal::~CAI_LeadGoal()
 T CAI_LeadGoal_Weapon::GetConceptModifiers(char const*)
 T CAI_LeadGoal_Weapon::GetDataDescMap()
 T CAI_LeadGoal_Weapon::InputActivate(inputdata_t&)
 T CAI_LeadGoal_Weapon::~CAI_LeadGoal_Weapon()
 T CAI_Link::CAI_Link()
 T CAI_LocalIdSpace::AddSymbol(char const*, int, char const*, char const*)
 T CAI_LocalIdSpace::CAI_LocalIdSpace(bool)
 T CAI_LocalIdSpace::GlobalToLocal(int) const
 T CAI_LocalIdSpace::Init(CAI_GlobalNamespace*, CAI_LocalIdSpace*)
 T CAI_LocalIdSpace::LocalToGlobal(int) const
 T CAI_LocalNavigator::CAI_LocalNavigator(CAI_BaseNPC*)
 T CAI_LocalNavigator::Init(IAI_MovementSink*)
 T CAI_LocalNavigator::IsSegmentBlockedByGlobalObstacles(Vector const&, Vector const&)
 T CAI_LocalNavigator::MoveCalc(AILocalMoveGoal_t*, bool)
 T CAI_LocalNavigator::MoveCalcDirect(AILocalMoveGoal_t*, bool, float*, AIMoveResult_t*)
 T CAI_LocalNavigator::MoveCalcRaw(AILocalMoveGoal_t*, bool)
 T CAI_LocalNavigator::MoveCalcSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_LocalNavigator::RemoveGlobalObstacle(Obstacle_t__*)
 T CAI_LocalNavigator::ResetMoveCalculations()
 T CAI_LocalNavigator::~CAI_LocalNavigator()
 T CAI_Manager::AccessAIs()
 T CAI_Manager::NumAIs()
 T CAI_Manager::~CAI_Manager()
 T CAI_Motor::AddFacingTarget(CBaseEntity*, Vector const&, float, float, float)
 T CAI_Motor::AddFacingTarget(CBaseEntity*, float, float, float)
 T CAI_Motor::AddFacingTarget(Vector const&, float, float, float)
 T CAI_Motor::AddTurnGesture(float)
 T CAI_Motor::CAI_Motor(CAI_BaseNPC*)
 T CAI_Motor::CalcIntervalMove()
 T CAI_Motor::DeltaIdealYaw()
 T CAI_Motor::GetFacingDirection(Vector&)
 T CAI_Motor::GetIdealAccel() const
 T CAI_Motor::GetIdealSpeed() const
 T CAI_Motor::GetNavigator()
 T CAI_Motor::GetPlaybackRate() const
 T CAI_Motor::GetSequenceGroundSpeed(int)
 T CAI_Motor::Init(IAI_MovementSink*)
 T CAI_Motor::MaintainTurnActivity()
 T CAI_Motor::MinCheckDist()
 T CAI_Motor::MinStoppingDist(float)
 T CAI_Motor::MoveClimbExecute(Vector const&, Vector const&, float, float, int)
 T CAI_Motor::MoveClimbStart(Vector const&, Vector const&, float, float)
 T CAI_Motor::MoveClimbStop()
 T CAI_Motor::MoveFacing(AILocalMoveGoal_t const&)
 T CAI_Motor::MoveFlyExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundExecuteWalk(AILocalMoveGoal_t const&, float, float, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundStep(Vector const&, CBaseEntity*, float, bool, bool, AIMoveTrace_t*)
 T CAI_Motor::MoveJumpExecute()
 T CAI_Motor::MoveJumpStart(Vector const&)
 T CAI_Motor::MoveJumpStop()
 T CAI_Motor::MoveNormalExecute(AILocalMoveGoal_t const&)
 T CAI_Motor::MovePaused()
 T CAI_Motor::MoveStart()
 T CAI_Motor::MoveStop()
 T CAI_Motor::OverrideMaxYawSpeed(Activity)
 T CAI_Motor::RecalculateYawSpeed()
 T CAI_Motor::ResetMoveCalculations()
 T CAI_Motor::SelectWeightedSequence(Activity)
 T CAI_Motor::SetIdealYawAndUpdate(float, float)
 T CAI_Motor::SetIdealYawToTarget(Vector const&, float, float)
 T CAI_Motor::SetIdealYawToTargetAndUpdate(Vector const&, float)
 T CAI_Motor::SetPlaybackRate(float)
 T CAI_Motor::UpdateYaw(int)
 T CAI_Motor::~CAI_Motor()
 T CAI_MoveAndShootOverlay::CAI_MoveAndShootOverlay()
 T CAI_MoveAndShootOverlay::CanAimAtEnemy()
 T CAI_MoveAndShootOverlay::EndShootWhileMove()
 T CAI_MoveAndShootOverlay::NoShootWhileMove()
 T CAI_MoveAndShootOverlay::RunShootWhileMove()
 T CAI_MoveAndShootOverlay::StartShootWhileMove()
 T CAI_MoveAndShootOverlay::~CAI_MoveAndShootOverlay()
 T CAI_MoveProbe::CAI_MoveProbe(CAI_BaseNPC*)
 T CAI_MoveProbe::CalcJumpLaunchVelocity(Vector const&, Vector const&, float, float*, float, Vector*) const
 T CAI_MoveProbe::CheckStandPosition(Vector const&, unsigned int) const
 T CAI_MoveProbe::CheckStep(CAI_MoveProbe::CheckStepArgs_t const&, CAI_MoveProbe::CheckStepResult_t*) const
 T CAI_MoveProbe::CheckStepOverLargeCrawl(CAI_MoveProbe::CheckStepResult_t*, CAI_MoveProbe::CheckStepArgs_t const&, Vector const&, Vector const&, CGameTrace const&) const
 T CAI_MoveProbe::ClimbMoveLimit(Vector const&, Vector const&, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::Confirm3DConnectivity(AIMoveTrace_t*, unsigned int, Vector const&) const
 T CAI_MoveProbe::FloorPoint(Vector const&, unsigned int, float, float, Vector*) const
 T CAI_MoveProbe::FlyMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::GroundMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, unsigned int, float, AIMoveTrace_t*) const
 T CAI_MoveProbe::JumpMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::MoveLimit(Navigation_t, Vector const&, Vector const&, unsigned int, CBaseEntity const*, float, unsigned int, AIMoveTrace_t*)
 T CAI_MoveProbe::SetupCheckStepTraceListData(CAI_MoveProbe::CheckStepArgs_t const&) const
 T CAI_MoveProbe::ShouldBrushBeIgnored(CBaseEntity*)
 T CAI_MoveProbe::TestGroundMove(Vector const&, Vector const&, unsigned int, float, unsigned int, AIMoveTrace_t*) const
 T CAI_MoveProbe::TraceHull(Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, CGameTrace*) const
 T CAI_MoveProbe::TraceHull(Vector const&, Vector const&, unsigned int, CGameTrace*) const
 T CAI_MoveProbe::TraceLine(Vector const&, Vector const&, unsigned int, bool, CGameTrace*) const
 T CAI_MoveProbe::~CAI_MoveProbe()
 T CAI_MoveSolver::Solve(AI_MoveSuggestion_t const*, int, AI_MoveSolution_t*)
 T CAI_MoveSolver::VisualizeRegulations(Vector const&)
 T CAI_NamespaceInfos::Compare(AI_NamespaceAddInfo_t const*, AI_NamespaceAddInfo_t const*)
 T CAI_NavInHintGroupFilter::IsValid(CAI_Node*)
 T CAI_NavInHintGroupFilter::ShouldContinue()
 T CAI_Navigator::AdvancePath()
 T CAI_Navigator::BuildAndGetPathDistToGoal()
 T CAI_Navigator::CAI_Navigator(CAI_BaseNPC*)
 T CAI_Navigator::CalcYawSpeed()
 T CAI_Navigator::CanFitAtNode(int, unsigned int)
 T CAI_Navigator::CanFitAtPosition(Vector const&, unsigned int, bool, bool)
 T CAI_Navigator::ClearGoal()
 T CAI_Navigator::ClearPath()
 T CAI_Navigator::CurWaypointIsGoal() const
 T CAI_Navigator::DelayNavigationFailure(AIMoveTrace_t const&)
 T CAI_Navigator::DoFindPath()
 T CAI_Navigator::DoFindPathToPathcorner(CBaseEntity*)
 T CAI_Navigator::DoFindPathToPos()
 T CAI_Navigator::DrawDebugRouteOverlay()
 T CAI_Navigator::FindPath(AI_NavGoal_t const&, unsigned int)
 T CAI_Navigator::FindPath(bool, bool)
 T CAI_Navigator::FindVectorGoal(Vector*, Vector const&, float, float, bool)
 T CAI_Navigator::GetArrivalActivity() const
 T CAI_Navigator::GetArrivalDirection()
 T CAI_Navigator::GetArrivalDistance() const
 T CAI_Navigator::GetArrivalSequence(int)
 T CAI_Navigator::GetArrivalSpeed()
 T CAI_Navigator::GetCurWaypointPos() const
 T CAI_Navigator::GetGoalFlags() const
 T CAI_Navigator::GetGoalPos() const
 T CAI_Navigator::GetGoalTarget()
 T CAI_Navigator::GetGoalType() const
 T CAI_Navigator::GetMovementActivity() const
 T CAI_Navigator::GetMovementSequence()
 T CAI_Navigator::GetNavFailCounter() const
 T CAI_Navigator::GetPathTimeToGoal()
 T CAI_Navigator::GetPointAlongPath(Vector*, float, bool)
 T CAI_Navigator::GetStepDownMultiplier()
 T CAI_Navigator::GetStoppingPath(CAI_WaypointList*)
 T CAI_Navigator::IgnoreStoppingPath()
 T CAI_Navigator::Init(CAI_Network*)
 T CAI_Navigator::IsGoalActive() const
 T CAI_Navigator::IsGoalSet() const
 T CAI_Navigator::MarkCurWaypointFailedLink()
 T CAI_Navigator::Move(float)
 T CAI_Navigator::MoveCalcBaseGoal(AILocalMoveGoal_t*)
 T CAI_Navigator::MoveClimb()
 T CAI_Navigator::MoveCrawl()
 T CAI_Navigator::MoveEnact(AILocalMoveGoal_t const&)
 T CAI_Navigator::MoveJump()
 T CAI_Navigator::MoveNormal()
 T CAI_Navigator::MoveUpdateWaypoint(AIMoveResult_t*)
 T CAI_Navigator::MovementCost(int, Vector&, Vector&)
 T CAI_Navigator::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnClearPath()
 T CAI_Navigator::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnMoveBlocked(AIMoveResult_t*)
 T CAI_Navigator::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_Navigator::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_Navigator::OnNavComplete()
 T CAI_Navigator::OnNavFailed(bool)
 T CAI_Navigator::OnNavFailed(int, bool)
 T CAI_Navigator::OnNewGoal()
 T CAI_Navigator::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnScheduleChange()
 T CAI_Navigator::PreMove()
 T CAI_Navigator::PrependLocalAvoidance(float, AIMoveTrace_t const&)
 T CAI_Navigator::RefindPathToGoal(bool, bool)
 T CAI_Navigator::Restore(IRestore&)
 T CAI_Navigator::Save(ISave&)
 T CAI_Navigator::SetArrivalActivity(Activity)
 T CAI_Navigator::SetArrivalDirection(CBaseEntity*)
 T CAI_Navigator::SetArrivalDirection(QAngle const&)
 T CAI_Navigator::SetArrivalDirection(Vector const&)
 T CAI_Navigator::SetArrivalDistance(float)
 T CAI_Navigator::SetArrivalSequence(int)
 T CAI_Navigator::SetGoal(AI_NavGoal_t const&, unsigned int)
 T CAI_Navigator::SetGoalFromStoppingPath()
 T CAI_Navigator::SetGoalTarget(CBaseEntity*, Vector const&)
 T CAI_Navigator::SetGoalTolerance(float)
 T CAI_Navigator::SetMovementActivity(Activity)
 T CAI_Navigator::SetNavType(Navigation_t)
 T CAI_Navigator::SetRandomGoal(Vector const&, float, Vector const&)
 T CAI_Navigator::SetRandomGoal(float, Vector const&)
 T CAI_Navigator::SetVectorGoal(Vector const&, float, float, bool)
 T CAI_Navigator::SetVectorGoalFromTarget(Vector const&, float, bool)
 T CAI_Navigator::SetWanderGoal(float, float)
 T CAI_Navigator::ShouldAttemptSimplifyTo(Vector const&)
 T CAI_Navigator::ShouldMove(bool)
 T CAI_Navigator::ShouldOptimizeInitialPathSegment(AI_Waypoint_t*)
 T CAI_Navigator::SimplifyPath(bool, float)
 T CAI_Navigator::SimplifyPathBacktrack()
 T CAI_Navigator::SimplifyPathForward(float)
 T CAI_Navigator::SimplifyPathForwardScan(CAI_Navigator::SimplifyForwardScanParams const&)
 T CAI_Navigator::SimplifyPathForwardScan(CAI_Navigator::SimplifyForwardScanParams const&, AI_Waypoint_t*, Vector const&, float, bool, bool, int*)
 T CAI_Navigator::SimplifyPathInsertSimplification(AI_Waypoint_t*, Vector const&)
 T CAI_Navigator::StopMoving(bool)
 T CAI_Navigator::TeleportAlongPath()
 T CAI_Navigator::UpdateGoalPos(Vector const&)
 T CAI_Navigator::~CAI_Navigator()
 T CAI_Network::AddNode(Vector const&, float)
 T CAI_Network::CAI_Network()
 T CAI_Network::CreateLink(int, int, CAI_DynamicLink*)
 T CAI_Network::EnumElement(IHandleEntity*)
 T CAI_Network::FindBSSmallest(CVarBitVec*, float*, int)
 T CAI_Network::GetCachedNearestNode(Vector const&, CAI_BaseNPC*, int*)
 T CAI_Network::GetCachedNode(Vector const&, Hull_t, int*)
 T CAI_Network::GetNodePosition(CBaseCombatCharacter*, int)
 T CAI_Network::GetNodePosition(Hull_t, int)
 T CAI_Network::GetNodeYaw(int)
 T CAI_Network::IsConnected(int, int)
 T CAI_Network::ListNodesInBox(CNodeList&, int, Vector const&, Vector const&, INodeListFilter*)
 T CAI_Network::NearestNodeToPoint(CAI_BaseNPC*, Vector const&, bool, INearestNodeFilter*)
 T CAI_Network::NearestNodeToPoint(Vector const&, bool)
 T CAI_Network::~CAI_Network()
 T CAI_NetworkBuilder::Build(CAI_Network*)
 T CAI_NetworkBuilder::ComputeConnection(CAI_Node*, CAI_Node*, Hull_t)
 T CAI_NetworkBuilder::EndBuild()
 T CAI_NetworkBuilder::FloodFillZone(CAI_Node**, CAI_Node*, int)
 T CAI_NetworkBuilder::ForceDynamicLinkNeighbors()
 T CAI_NetworkBuilder::InitClimbNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitGroundNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitLinks(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitNeighbors(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitVisibility(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitZones(CAI_Network*)
 T CAI_NetworkBuilder::Rebuild(CAI_Network*)
 T CAI_NetworkBuilder::~CAI_NetworkBuilder()
 T CAI_NetworkEditTools::DrawAINetworkOverlay()
 T CAI_NetworkEditTools::DrawEditInfoOverlay()
 T CAI_NetworkEditTools::DrawHull(Hull_t)
 T CAI_NetworkEditTools::DrawNextHull(char const*)
 T CAI_NetworkEditTools::FindAILinkNearestFacing(Vector const&, Vector const&, float)
 T CAI_NetworkEditTools::FindAINodeNearestFacing(Vector const&, Vector const&, float, int)
 T CAI_NetworkEditTools::GetNodeIdFromWCId(int)
 T CAI_NetworkEditTools::GetWCIdFromNodeId(int)
 T CAI_NetworkEditTools::RecalcUsableNodesForHull()
 T CAI_NetworkEditTools::SetDebugBits(char const*, int)
 T CAI_NetworkEditTools::SetRebuildFlags()
 T CAI_NetworkManager::BuildNetworkGraph()
 T CAI_NetworkManager::CAI_NetworkManager()
 T CAI_NetworkManager::DelayedInit()
 T CAI_NetworkManager::DeleteAllAINetworks()
 T CAI_NetworkManager::GetDataDescMap()
 T CAI_NetworkManager::InitializeAINetworks()
 T CAI_NetworkManager::IsAIFileCurrent(char const*)
 T CAI_NetworkManager::LoadNetworkGraph()
 T CAI_NetworkManager::MarkDontSaveGraph()
 T CAI_NetworkManager::ObjectCaps()
 T CAI_NetworkManager::RebuildNetworkGraph()
 T CAI_NetworkManager::RebuildThink()
 T CAI_NetworkManager::SaveNetworkGraph()
 T CAI_NetworkManager::Spawn()
 T CAI_NetworkManager::StartRebuild()
 T CAI_NetworkManager::ThreadedBuildJob(void*)
 T CAI_NetworkManager::ThreadedInit()
 T CAI_NetworkManager::~CAI_NetworkManager()
 T CAI_Node::AddLink(CAI_Link*)
 T CAI_Node::CAI_Node(int, Vector const&, float)
 T CAI_Node::GetLink(int)
 T CAI_Node::GetPosition(int) const
 T CAI_Node::GetShuffeledLink(int)
 T CAI_Node::HasLink(int)
 T CAI_Node::ShuffleLinks()
 T CAI_Path::ActualGoalPosition() const
 T CAI_Path::Advance()
 T CAI_Path::BaseGoalPosition() const
 T CAI_Path::CAI_Path()
 T CAI_Path::Clear()
 T CAI_Path::CurWaypointIsGoal() const
 T CAI_Path::CurWaypointNavType() const
 T CAI_Path::CurWaypointPos() const
 T CAI_Path::CurWaypointYaw() const
 T CAI_Path::GetArrivalActivity() const
 T CAI_Path::GetArrivalSequence() const
 T CAI_Path::GetGoalDirection(Vector const&)
 T CAI_Path::GetGoalSpeed(Vector const&)
 T CAI_Path::GetGoalStoppingDistance() const
 T CAI_Path::GetPathDistanceToGoal(Vector const&)
 T CAI_Path::GetPathLength()
 T CAI_Path::GoalFlags() const
 T CAI_Path::GoalType() const
 T CAI_Path::PrependWaypoint(Vector const&, Navigation_t, unsigned int)
 T CAI_Path::PrependWaypoints(AI_Waypoint_t*)
 T CAI_Path::ResetGoalPosition(Vector const&)
 T CAI_Path::SetArrivalActivity(Activity)
 T CAI_Path::SetArrivalSequence(int)
 T CAI_Path::SetGoalDirection(CBaseEntity*)
 T CAI_Path::SetGoalDirection(Vector const&)
 T CAI_Path::SetGoalSpeed(CBaseEntity*)
 T CAI_Path::SetGoalSpeed(float)
 T CAI_Path::SetGoalStoppingDistance(float)
 T CAI_Path::SetGoalType(GoalType_t)
 T CAI_Path::SetLastNodeAsGoal(bool)
 T CAI_Path::SetMovementActivity(Activity)
 T CAI_Path::SetWaypoints(AI_Waypoint_t*, bool)
 T CAI_Path::~CAI_Path()
 T CAI_Pathfinder::BuildComplexRoute(Navigation_t, Vector const&, Vector const&, CBaseEntity const*, int, int, int, float, float, float)
 T CAI_Pathfinder::BuildLocalRoute(Vector const&, Vector const&, CBaseEntity const*, int, int, int, float)
 T CAI_Pathfinder::BuildNodeRoute(Vector const&, Vector const&, int, float)
 T CAI_Pathfinder::BuildOBBAvoidanceRoute(Vector const&, Vector const&, CBaseEntity const*, CBaseEntity const*, Navigation_t)
 T CAI_Pathfinder::BuildRadialRoute(Vector const&, Vector const&, Vector const&, float, float, float, bool, float, bool)
 T CAI_Pathfinder::BuildRoute(Vector const&, Vector const&, CBaseEntity*, float, Navigation_t, int)
 T CAI_Pathfinder::BuildRouteThroughPoints(Vector*, int, int, int, int, Navigation_t, CBaseEntity*)
 T CAI_Pathfinder::BuildSimpleRoute(Navigation_t, Vector const&, Vector const&, CBaseEntity const*, int, int, int, float)
 T CAI_Pathfinder::BuildTriangulationRoute(Vector const&, Vector const&, CBaseEntity const*, int, int, float, float, Navigation_t)
 T CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLine(Vector const&, Vector const&, int, int, int, bool)
 T CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLines(Vector const&, Vector const&, Vector const&, AIMoveTrace_t const&, AIMoveTrace_t const&, bool)
 T CAI_Pathfinder::CanUseLocalNavigation()
 T CAI_Pathfinder::CheckStaleNavTypeRoute(Navigation_t, Vector const&, Vector const&)
 T CAI_Pathfinder::CheckStaleRoute(Vector const&, Vector const&, int)
 T CAI_Pathfinder::ComputeWaypointType(bool*, CAI_Node**, int, int)
 T CAI_Pathfinder::CreateNodeWaypoint(Hull_t, int, int)
 T CAI_Pathfinder::DrawDebugGeometryOverlays(int)
 T CAI_Pathfinder::FindBestPath(int, int)
 T CAI_Pathfinder::FindShortRandomPath(int, float, Vector const&)
 T CAI_Pathfinder::Init(CAI_Network*)
 T CAI_Pathfinder::IsLinkStillStale(int, CAI_Link*)
 T CAI_Pathfinder::IsLinkUsable(CAI_Link*, int)
 T CAI_Pathfinder::MakeRouteFromParents(int*, int)
 T CAI_Pathfinder::NearestNodeToNPC()
 T CAI_Pathfinder::NearestNodeToPoint(Vector const&)
 T CAI_Pathfinder::RouteFromNode(Vector const&, int, int, float)
 T CAI_Pathfinder::RouteToNode(Vector const&, int, int, float)
 T CAI_Pathfinder::TestTriangulationRoute(Navigation_t, Vector const&, Vector const&, Vector const&, CBaseEntity const*, AIMoveTrace_t*)
 T CAI_Pathfinder::Triangulate(Navigation_t, Vector const&, Vector const&, float, CBaseEntity const*, Vector*)
 T CAI_Pathfinder::UnlockRouteNodes(AI_Waypoint_t*)
 T CAI_Pathfinder::~CAI_Pathfinder()
 T CAI_PlaneSolver::AddObstacle(Vector const&, float, CBaseEntity*, AI_MoveSuggType_t)
 T CAI_PlaneSolver::AdjustSolutionForFliers(AILocalMoveGoal_t const&, float, Vector*)
 T CAI_PlaneSolver::CAI_PlaneSolver(CAI_BaseNPC*)
 T CAI_PlaneSolver::CalcProbeDist(float)
 T CAI_PlaneSolver::DetectUnsolvable(AILocalMoveGoal_t const&)
 T CAI_PlaneSolver::GenerateCircleObstacleSuggestion(CAI_PlaneSolver::CircleObstacles_t const&, AILocalMoveGoal_t const&, float, Vector const&, float)
 T CAI_PlaneSolver::GenerateCircleObstacleSuggestions(AILocalMoveGoal_t const&, float)
 T CAI_PlaneSolver::GenerateObstacleNpcs(AILocalMoveGoal_t const&, float)
 T CAI_PlaneSolver::GenerateObstacleSuggestion(AILocalMoveGoal_t const&, float, float, float, int)
 T CAI_PlaneSolver::GenerateObstacleSuggestions(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, float, float, int)
 T CAI_PlaneSolver::GenerateSuggestionFromTrace(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, float, float, int)
 T CAI_PlaneSolver::IsSegmentBlockedByGlobalObstacles(Vector const&, Vector const&)
 T CAI_PlaneSolver::RemoveGlobalObstacle(Obstacle_t__*)
 T CAI_PlaneSolver::RunMoveSolver(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, bool, Vector*)
 T CAI_PlaneSolver::Solve(AILocalMoveGoal_t const&, float, Vector*)
 T CAI_PlaneSolver::VisualizeSolution(Vector const&, Vector const&)
 T CAI_PlayerAlly::AnswerQuestion(CAI_PlayerAlly*, int, bool)
 T CAI_PlayerAlly::InputAnswerQuestion(inputdata_t&)
 T CAI_PlayerAlly::InputAnswerQuestionHello(inputdata_t&)
 T CAI_PlayerAlly::InputDisableSpeakWhileScripting(inputdata_t&)
 T CAI_PlayerAlly::InputEnableSpeakWhileScripting(inputdata_t&)
 T CAI_PlayerAlly::InputMakeGameEndAlly(inputdata_t&)
 T CAI_PlayerAlly::InputMakeRegularAlly(inputdata_t&)
 T CAI_PlayerAlly::InputSpeakResponseConcept(inputdata_t&)
 T CAI_PlayerAlly::IsAllowedToSpeak(CAI_Concept, bool)
 T CAI_PlayerAlly::IsOkToSpeak(ConceptCategory_t, bool)
 T CAI_PlayerAlly::SelectAnswerFriend(CBaseEntity*, AISpeechSelection_t*, bool)
 T CAI_PlayerAlly::SelectSpeechResponse(CAI_Concept, char const*, CBaseEntity*, AISpeechSelection_t*)
 T CAI_ProxTester::Check(CBaseEntity*, CBaseEntity*)
 T CAI_ProxyMovementSink::CalcYawSpeed()
 T CAI_ProxyMovementSink::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveBlocked(AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_ProxyMovementSink::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_RadialLinkController::Activate()
 T CAI_RadialLinkController::GetDataDescMap()
 T CAI_RadialLinkController::ModifyNodeLinks(bool)
 T CAI_RadialLinkController::PollMotionThink()
 T CAI_RadialLinkController::Spawn()
 T CAI_RadialLinkController::~CAI_RadialLinkController()
 T CAI_SaveRestoreBlockHandler::GetBlockName()
 T CAI_SaveRestoreBlockHandler::PostRestore()
 T CAI_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CAI_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CAI_SaveRestoreBlockHandler::Save(ISave*)
 T CAI_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CAI_SchedulesManager::CreateSchedule(char*, int)
 T CAI_SchedulesManager::CreateStringRegistries()
 T CAI_SchedulesManager::DeleteAllSchedules()
 T CAI_SchedulesManager::DestroyStringRegistries()
 T CAI_SchedulesManager::GetMemoryID(char const*)
 T CAI_SchedulesManager::GetScheduleByName(char const*)
 T CAI_SchedulesManager::GetScheduleFromID(int)
 T CAI_SchedulesManager::GetStateID(char const*)
 T CAI_SchedulesManager::LoadAllSchedules()
 T CAI_SchedulesManager::LoadSchedulesFromBuffer(char const*, char*, CAI_ClassScheduleIdSpace*, CAI_GlobalScheduleNamespace*)
 T CAI_ScriptConditions::Activate()
 T CAI_ScriptConditions::AddNewElement(CBaseEntity*)
 T CAI_ScriptConditions::Enable()
 T CAI_ScriptConditions::EvalActorSeePlayer(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalActorSeeTarget(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalActorTargetProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorLOS(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorLook(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerBlockingActor(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetLOS(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetLook(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalState(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvaluationThink()
 T CAI_ScriptConditions::GetDataDescMap()
 T CAI_ScriptConditions::InputDisable(inputdata_t&)
 T CAI_ScriptConditions::InputEnable(inputdata_t&)
 T CAI_ScriptConditions::IsInFOV(CBaseEntity*, CBaseEntity*, float, bool)
 T CAI_ScriptConditions::OnEntitySpawned(CBaseEntity*)
 T CAI_ScriptConditions::OnRestore()
 T CAI_ScriptConditions::Spawn()
 T CAI_ScriptConditions::UpdateOnRemove()
 T CAI_ScriptConditions::~CAI_ScriptConditions()
 T CAI_ScriptedSchedule::FindScriptEntity(bool)
 T CAI_ScriptedSchedule::GetDataDescMap()
 T CAI_ScriptedSchedule::InputStartSchedule(inputdata_t&)
 T CAI_ScriptedSchedule::InputStopSchedule(inputdata_t&)
 T CAI_ScriptedSchedule::ScriptThink()
 T CAI_ScriptedSchedule::StartSchedule(CAI_BaseNPC*)
 T CAI_ScriptedSchedule::~CAI_ScriptedSchedule()
 T CAI_ScriptedSentence::DelayThink()
 T CAI_ScriptedSentence::FindEntity()
 T CAI_ScriptedSentence::FindThink()
 T CAI_ScriptedSentence::GetDataDescMap()
 T CAI_ScriptedSentence::InputBeginSentence(inputdata_t&)
 T CAI_ScriptedSentence::KeyValue(char const*, char const*)
 T CAI_ScriptedSentence::ObjectCaps()
 T CAI_ScriptedSentence::Spawn()
 T CAI_ScriptedSentence::StartSentence(CAI_BaseNPC*)
 T CAI_ScriptedSentence::~CAI_ScriptedSentence()
 T CAI_ScriptedSequence::Activate()
 T CAI_ScriptedSequence::AllowInterrupt(bool)
 T CAI_ScriptedSequence::Blocked(CBaseEntity*)
 T CAI_ScriptedSequence::CanEnqueueAfter()
 T CAI_ScriptedSequence::CanInterrupt()
 T CAI_ScriptedSequence::CancelScript()
 T CAI_ScriptedSequence::DelayStart(bool)
 T CAI_ScriptedSequence::DrawDebugGeometryOverlays()
 T CAI_ScriptedSequence::DrawDebugTextOverlays()
 T CAI_ScriptedSequence::FindScriptEntity()
 T CAI_ScriptedSequence::FinishedActionSequence(CAI_BaseNPC*)
 T CAI_ScriptedSequence::FireScriptEvent(int)
 T CAI_ScriptedSequence::FixScriptNPCSchedule(CAI_BaseNPC*, int)
 T CAI_ScriptedSequence::GetDataDescMap()
 T CAI_ScriptedSequence::GetSpawnPreIdleSequenceForScript(CBaseEntity*)
 T CAI_ScriptedSequence::InputBeginSequence(inputdata_t&)
 T CAI_ScriptedSequence::InputCancelSequence(inputdata_t&)
 T CAI_ScriptedSequence::InputMoveToPosition(inputdata_t&)
 T CAI_ScriptedSequence::InputScriptPlayerDeath(inputdata_t&)
 T CAI_ScriptedSequence::IsTimeToStart()
 T CAI_ScriptedSequence::IsWaitingForBegin()
 T CAI_ScriptedSequence::ModifyScriptedAutoMovement(Vector*)
 T CAI_ScriptedSequence::ObjectCaps()
 T CAI_ScriptedSequence::OnBeginSequence()
 T CAI_ScriptedSequence::PostIdleDone(CAI_BaseNPC*)
 T CAI_ScriptedSequence::RemoveIgnoredConditions()
 T CAI_ScriptedSequence::ScriptEntityCancel(CBaseEntity*, bool)
 T CAI_ScriptedSequence::ScriptThink()
 T CAI_ScriptedSequence::SequenceDone(CAI_BaseNPC*)
 T CAI_ScriptedSequence::Spawn()
 T CAI_ScriptedSequence::StartScript()
 T CAI_ScriptedSequence::StartSequence(CAI_BaseNPC*, string_t, bool)
 T CAI_ScriptedSequence::StopActionLoop(bool)
 T CAI_ScriptedSequence::SynchNewSequence(CAI_BaseNPC::SCRIPTSTATE, string_t, bool)
 T CAI_ScriptedSequence::SynchronizeSequence(CAI_BaseNPC*)
 T CAI_ScriptedSequence::Touch(CBaseEntity*)
 T CAI_ScriptedSequence::UpdateOnRemove()
 T CAI_ScriptedSequence::~CAI_ScriptedSequence()
 T CAI_SensedObjectsManager::AddEntity(CBaseEntity*)
 T CAI_SensedObjectsManager::Init()
 T CAI_SensedObjectsManager::OnEntityDeleted(CBaseEntity*)
 T CAI_SensedObjectsManager::OnEntitySpawned(CBaseEntity*)
 T CAI_SensedObjectsManager::Term()
 T CAI_SensedObjectsManager::~CAI_SensedObjectsManager()
 T CAI_Senses::CanHearSound(CSound*)
 T CAI_Senses::DidSeeEntity(CBaseEntity*) const
 T CAI_Senses::GetClosestSound(bool, int, bool)
 T CAI_Senses::GetFirstHeardSound(AISoundIter_t__**)
 T CAI_Senses::GetFirstSeenEntity(AISightIter_t__**, seentype_t) const
 T CAI_Senses::GetNextHeardSound(AISoundIter_t__**)
 T CAI_Senses::GetNextSeenEntity(AISightIter_t__**) const
 T CAI_Senses::GetTimeLastUpdate(CBaseEntity*)
 T CAI_Senses::IsWithinSenseDistance(Vector const&, Vector const&, float)
 T CAI_Senses::Listen()
 T CAI_Senses::Look(CBaseEntity*)
 T CAI_Senses::LookForHighPriorityEntities(int)
 T CAI_Senses::LookForNPCs(int)
 T CAI_Senses::LookForObjects(int)
 T CAI_Senses::PerformSensing()
 T CAI_Senses::WaitingUntilSeen(CBaseEntity*)
 T CAI_Senses::~CAI_Senses()
 T CAI_ShotRegulator::CAI_ShotRegulator()
 T CAI_ShotRegulator::FireNoEarlierThan(float)
 T CAI_ShotRegulator::IsInRestInterval() const
 T CAI_ShotRegulator::NextShotTime() const
 T CAI_ShotRegulator::OnFiredWeapon()
 T CAI_ShotRegulator::Reset(bool)
 T CAI_ShotRegulator::SetBurstInterval(float, float)
 T CAI_ShotRegulator::SetBurstShotCountRange(int, int)
 T CAI_ShotRegulator::SetRestInterval(float, float)
 T CAI_ShotRegulator::ShouldShoot() const
 T CAI_SpeechFilter::Activate()
 T CAI_SpeechFilter::GetDataDescMap()
 T CAI_SpeechFilter::InputDisable(inputdata_t&)
 T CAI_SpeechFilter::InputEnable(inputdata_t&)
 T CAI_SpeechFilter::InputSetIdleModifier(inputdata_t&)
 T CAI_SpeechFilter::OnEntityCreated(CBaseEntity*)
 T CAI_SpeechFilter::OnEntityDeleted(CBaseEntity*)
 T CAI_SpeechFilter::PopulateSubjectList(bool)
 T CAI_SpeechFilter::Spawn()
 T CAI_SpeechFilter::UpdateOnRemove()
 T CAI_SpeechFilter::~CAI_SpeechFilter()
 T CAI_Squad::AddToSquad(CAI_BaseNPC*)
 T CAI_Squad::CAI_Squad()
 T CAI_Squad::ComputeSquadCentroid(bool, CBaseCombatCharacter*)
 T CAI_Squad::FOkToMakeSound(int)
 T CAI_Squad::FindEnemyInfo(CBaseEntity*)
 T CAI_Squad::GetFirstMember(AISquadIter_t__**, bool)
 T CAI_Squad::GetLeader()
 T CAI_Squad::GetNextMember(AISquadIter_t__**, bool)
 T CAI_Squad::IsLeader(CAI_BaseNPC*)
 T CAI_Squad::IsSilentMember(CAI_BaseNPC const*)
 T CAI_Squad::JustMadeSound(int, float)
 T CAI_Squad::NumMembers(bool)
 T CAI_Squad::OccupyStrategySlotRange(CBaseEntity*, int, int, int*)
 T CAI_Squad::RemoveFromSquad(CAI_BaseNPC*, bool)
 T CAI_Squad::SquadIsMember(CBaseEntity*)
 T CAI_Squad::SquadNewEnemy(CBaseEntity*)
 T CAI_Squad::UpdateEnemyMemory(CAI_BaseNPC*, CBaseEntity*, Vector const&)
 T CAI_Squad::VacateStrategySlot(CBaseEntity*, int)
 T CAI_Squad::~CAI_Squad()
 T CAI_SquadManager::CreateSquad(string_t)
 T CAI_SquadManager::DeleteAllSquads()
 T CAI_SquadManager::FindSquad(string_t)
 T CAI_SquadManager::NumSquads()
 T CAI_StandoffGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_StandoffGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_StandoffGoal::GetDataDescMap()
 T CAI_StandoffGoal::InputActivate(inputdata_t&)
 T CAI_StandoffGoal::InputDeactivate(inputdata_t&)
 T CAI_StandoffGoal::InputSetAggressiveness(inputdata_t&)
 T CAI_StandoffGoal::SetBehaviorParams(CAI_StandoffBehavior*)
 T CAI_StandoffGoal::~CAI_StandoffGoal()
 T CAI_SystemHook::LevelInitPostEntity()
 T CAI_SystemHook::LevelInitPreEntity()
 T CAI_SystemHook::LevelShutdownPostEntity()
 T CAI_SystemHook::LevelShutdownPreEntity()
 T CAI_SystemHook::~CAI_SystemHook()
 T CAI_TacticalServices::FindBackAwayNode(Vector const&)
 T CAI_TacticalServices::FindBackAwayPos(Vector const&, Vector*)
 T CAI_TacticalServices::FindCoverNode(Vector const&, Vector const&, Vector const&, float, float)
 T CAI_TacticalServices::FindCoverPos(Vector const&, Vector const&, Vector const&, float, float, Vector*)
 T CAI_TacticalServices::FindCoverPos(Vector const&, Vector const&, float, float, Vector*)
 T CAI_TacticalServices::FindLateralCover(Vector const&, Vector const&, float, float, int, Vector*)
 T CAI_TacticalServices::FindLateralCover(Vector const&, float, Vector*)
 T CAI_TacticalServices::FindLateralLos(Vector const&, Vector*)
 T CAI_TacticalServices::FindLos(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float, Vector*)
 T CAI_TacticalServices::FindLos(Vector const&, Vector const&, float, float, float, Vector*)
 T CAI_TacticalServices::FindLosNode(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float)
 T CAI_TacticalServices::Init(CAI_Network*)
 T CAI_TacticalServices::TestLateralCover(Vector const&, Vector const&, float)
 T CAI_TacticalServices::TestLateralLos(Vector const&, Vector const&)
 T CAI_TacticalServices::~CAI_TacticalServices()
 T CAI_TestHull::GetTestHull()
 T CAI_TestHull::IsJumpLegal(Vector const&, Vector const&, Vector const&) const
 T CAI_TestHull::ObjectCaps()
 T CAI_TestHull::Precache()
 T CAI_TestHull::ReturnTestHull()
 T CAI_TestHull::Spawn()
 T CAI_TestHull::~CAI_TestHull()
 T CAI_TrackPather::BestPointOnPath(CPathTrack*, Vector const&, float, bool, bool)
 T CAI_TrackPather::InputChooseFarthestPathPoint(inputdata_t&)
 T CAI_TrackPather::InputChooseNearestPathPoint(inputdata_t&)
 T CAI_TrackPather::InputSetTrack(inputdata_t&)
 T CAI_TrackPather::InputStartBreakableMovement(inputdata_t&)
 T CAI_TrackPather::InputStartLeading(inputdata_t&)
 T CAI_TrackPather::InputStartPatrol(inputdata_t&)
 T CAI_TrackPather::InputStartPatrolBreakable(inputdata_t&)
 T CAI_TrackPather::InputStopBreakableMovement(inputdata_t&)
 T CAI_TrackPather::InputStopLeading(inputdata_t&)
 T CAI_TrackPather::InputStopPatrol(inputdata_t&)
 T CAI_TrackPather::IsOnSameTrack(CPathTrack*, CPathTrack*) const
 T CAI_TrackPather::MoveToClosestTrackPoint(CPathTrack*)
 T CAI_TrackPather::SetTrack(string_t)
 T CAI_TrackPather::SetupNewCurrentTarget(CPathTrack*)
 T CAI_WaypointList::GetLast()
 T CAI_WaypointList::PrependWaypoint(Vector const&, Navigation_t, unsigned int, float)
 T CAI_WaypointList::PrependWaypoints(AI_Waypoint_t*)
 T CAI_WaypointList::RemoveAll()
 T CAI_WaypointList::Set(AI_Waypoint_t*)
 T CAK47::GetServerClass()
 T CAK47::YouForgotToImplementOrDeclareServerClass()
 T CAK47::~CAK47()
 T CActivityDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CActivityDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CActivityDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CActivityDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CAimTargetManager::ForceRepopulateList()
 T CAimTargetManager::LevelShutdownPostEntity()
 T CAimTargetManager::OnEntityCreated(CBaseEntity*)
 T CAimTargetManager::OnEntityDeleted(CBaseEntity*)
 T CAimTargetManager::OnEntitySpawned(CBaseEntity*)
 T CAimTargetManager::~CAimTargetManager()
 T CAmbientGeneric::Activate()
 T CAmbientGeneric::ComputeMaxAudibleDistance()
 T CAmbientGeneric::GetDataDescMap()
 T CAmbientGeneric::InitModulationParms()
 T CAmbientGeneric::InputFadeIn(inputdata_t&)
 T CAmbientGeneric::InputFadeOut(inputdata_t&)
 T CAmbientGeneric::InputPitch(inputdata_t&)
 T CAmbientGeneric::InputPlaySound(inputdata_t&)
 T CAmbientGeneric::InputStopSound(inputdata_t&)
 T CAmbientGeneric::InputToggleSound(inputdata_t&)
 T CAmbientGeneric::InputVolume(inputdata_t&)
 T CAmbientGeneric::KeyValue(char const*, char const*)
 T CAmbientGeneric::Precache()
 T CAmbientGeneric::RampThink()
 T CAmbientGeneric::SendSound(SoundFlags_t)
 T CAmbientGeneric::SetTransmit(CCheckTransmitInfo*, bool)
 T CAmbientGeneric::Spawn()
 T CAmbientGeneric::ToggleSound()
 T CAmbientGeneric::UpdateOnRemove()
 T CAmbientGeneric::~CAmbientGeneric()
 T CAmmoDef::AddAmmoType(char const*, int, int, char const*, char const*, char const*, char const*, int, int, int)
 T CAmmoDef::AddAmmoType(char const*, int, int, int, int, int, int, int, int, int)
 T CAmmoDef::CAmmoDef()
 T CAmmoDef::CanCarryInfiniteAmmo(int)
 T CAmmoDef::DamageForce(int)
 T CAmmoDef::DamageType(int)
 T CAmmoDef::Flags(int)
 T CAmmoDef::GetAmmoOfIndex(int)
 T CAmmoDef::Index(char const*)
 T CAmmoDef::MaxCarry(int, CBaseCombatCharacter const*)
 T CAmmoDef::MaxSplashSize(int)
 T CAmmoDef::MinSplashSize(int)
 T CAmmoDef::NPCDamage(int)
 T CAmmoDef::PlrDamage(int)
 T CAmmoDef::TracerType(int)
 T CAmmoDef::~CAmmoDef()
 T CAnchorList::AddToList(CBaseEntity*, float)
 T CAnchorList::LevelShutdownPostEntity()
 T CAnchorList::~CAnchorList()
 T CAnimationLayer::CAnimationLayer()
 T CAnimationLayer::DispatchAnimEvents(CBaseAnimating*, CBaseAnimating*)
 T CAnimationLayer::Init(CBaseAnimatingOverlay*)
 T CAnimationLayer::StudioFrameAdvance(float, CBaseAnimating*)
 T CAreaPortal::GetDataDescMap()
 T CAreaPortal::InputClose(inputdata_t&)
 T CAreaPortal::InputOpen(inputdata_t&)
 T CAreaPortal::InputToggle(inputdata_t&)
 T CAreaPortal::KeyValue(char const*, char const*)
 T CAreaPortal::Precache()
 T CAreaPortal::Spawn()
 T CAreaPortal::UpdateTransmitState()
 T CAreaPortal::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CAreaPortal::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CAreaPortal::~CAreaPortal()
 T CAssaultPoint::GetDataDescMap()
 T CAssaultPoint::InputSetAllowDiversion(inputdata_t&)
 T CAssaultPoint::InputSetClearOnContact(inputdata_t&)
 T CAssaultPoint::InputSetForceClear(inputdata_t&)
 T CAssaultPoint::~CAssaultPoint()
 T CAttributeContainer::ApplyAttributeFloat(float, CBaseEntity*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeContainer::GetDataDescMap()
 T CAttributeContainer::InitializeAttributes(CBaseEntity*)
 T CAttributeContainer::NetworkStateChanged()
 T CAttributeContainer::NetworkStateChanged(void*)
 T CAttributeContainer::NetworkVar_m_Item::NetworkStateChanged()
 T CAttributeContainer::NetworkVar_m_Item::NetworkStateChanged(void*)
 T CAttributeContainer::NetworkVar_m_Item::~NetworkVar_m_Item()
 T CAttributeContainer::~CAttributeContainer()
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, CAttribute_String>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<CAttribute_String, char const*>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_GetTypedAttributeValue<Vector, Vector>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<Vector, Vector>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<Vector, Vector>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<Vector, Vector>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<Vector, Vector>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_GetTypedAttributeValue<float, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<float, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<float, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<float, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<float, float>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, float>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, float>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CAttributeIterator_GetTypedAttributeValue<unsigned int, unsigned int>::~CAttributeIterator_GetTypedAttributeValue()
 T CAttributeIterator_HasAttribute::OnIterateAttributeValueUntyped(CEconItemAttributeDefinition const*)
 T CAttributeIterator_HasAttribute::~CAttributeIterator_HasAttribute()
 T CAttributeList::AddAttribute(CEconItemAttribute*)
 T CAttributeList::GetDataDescMap()
 T CAttributeList::NetworkStateChanged()
 T CAttributeList::NetworkStateChanged(void*)
 T CAttributeList::SetManager(CAttributeManager*)
 T CAttributeManager::AddProvider(CBaseEntity*)
 T CAttributeManager::ApplyAttributeFloat(float, CBaseEntity*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeManager::ApplyAttributeFloatWrapper(float, CBaseEntity*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeManager::ClearCache()
 T CAttributeManager::GetDataDescMap()
 T CAttributeManager::InitializeAttributes(CBaseEntity*)
 T CAttributeManager::NetworkStateChanged()
 T CAttributeManager::NetworkStateChanged(void*)
 T CAttributeManager::NetworkStateChanged_m_ProviderType()
 T CAttributeManager::NetworkStateChanged_m_ProviderType(void*)
 T CAttributeManager::NetworkStateChanged_m_hOuter()
 T CAttributeManager::NetworkStateChanged_m_hOuter(void*)
 T CAttributeManager::NetworkStateChanged_m_iReapplyProvisionParity()
 T CAttributeManager::NetworkStateChanged_m_iReapplyProvisionParity(void*)
 T CAttributeManager::ProvideTo(CBaseEntity*)
 T CAttributeManager::StopProvidingTo(CBaseEntity*)
 T CAttributeManager::~CAttributeManager()
 T CAttribute_String::ByteSize() const
 T CAttribute_String::CAttribute_String()
 T CAttribute_String::Clear()
 T CAttribute_String::CopyFrom(CAttribute_String const&)
 T CAttribute_String::GetCachedSize() const
 T CAttribute_String::GetMetadata() const
 T CAttribute_String::IsInitialized() const
 T CAttribute_String::MergeFrom(CAttribute_String const&)
 T CAttribute_String::New() const
 T CAttribute_String::SerializeWithCachedSizesToArray(unsigned char*) const
 T CAttribute_String::SetCachedSize(int) const
 T CAttribute_String::~CAttribute_String()
 T CAutoGameSystem::CAutoGameSystem(char const*)
 T CAutoGameSystem::Name()
 T CAutoGameSystem::~CAutoGameSystem()
 T CAutoGameSystemPerFrame::CAutoGameSystemPerFrame(char const*)
 T CAutoGameSystemPerFrame::Name()
 T CAutoGameSystemPerFrame::~CAutoGameSystemPerFrame()
 T CBackupFilesEnumerator::CBackupFilesEnumerator()
 T CBaseAnimating::Activate()
 T CBaseAnimating::BecomeRagdollOnClient(Vector const&)
 T CBaseAnimating::BuildMatricesWithBoneMerge(CStudioHdr const*, QAngle const&, Vector const&, Vector const*, Quaternion const*, matrix3x4_t*, CBaseAnimating*, CBoneCache*)
 T CBaseAnimating::CBaseAnimating()
 T CBaseAnimating::CalculateIKLocks(float)
 T CBaseAnimating::CanBecomeRagdoll()
 T CBaseAnimating::CanSkipAnimation()
 T CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)
 T CBaseAnimating::ComputeHitboxSurroundingBox(Vector*, Vector*)
 T CBaseAnimating::CopyAnimationDataFrom(CBaseAnimating*)
 T CBaseAnimating::DispatchAnimEvents(CBaseAnimating*)
 T CBaseAnimating::Dissolve(char const*, float, bool, int, Vector, int)
 T CBaseAnimating::DoMuzzleFlash()
 T CBaseAnimating::DrawDebugTextOverlays()
 T CBaseAnimating::DrawRawSkeleton(matrix3x4_t*, int, bool, float, bool)
 T CBaseAnimating::DrawServerHitboxes(float, bool)
 T CBaseAnimating::EdgeLimitPoseParameter(int, float, float)
 T CBaseAnimating::Extinguish()
 T CBaseAnimating::ExtractBbox(int, Vector&, Vector&)
 T CBaseAnimating::FindBodygroupByName(char const*)
 T CBaseAnimating::FindTransitionSequence(int, int, int*)
 T CBaseAnimating::Freeze(float, CBaseEntity*, Ray_t*)
 T CBaseAnimating::GetAnimTimeInterval() const
 T CBaseAnimating::GetAttachment(char const*, Vector&, QAngle&)
 T CBaseAnimating::GetAttachment(char const*, Vector&, Vector*, Vector*, Vector*)
 T CBaseAnimating::GetAttachment(int, Vector&, QAngle&)
 T CBaseAnimating::GetAttachment(int, Vector&, Vector*, Vector*, Vector*)
 T CBaseAnimating::GetAttachment(int, matrix3x4_t&)
 T CBaseAnimating::GetAttachmentBone(int)
 T CBaseAnimating::GetAttachmentLocal(int, Vector&, QAngle&)
 T CBaseAnimating::GetBaseAnimating()
 T CBaseAnimating::GetBodygroupCount(int)
 T CBaseAnimating::GetBodygroupName(int)
 T CBaseAnimating::GetBoneCache()
 T CBaseAnimating::GetBonePosition(int, Vector&, QAngle&)
 T CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)
 T CBaseAnimating::GetDataDescMap()
 T CBaseAnimating::GetEntryVelocity(int)
 T CBaseAnimating::GetFlexControllerName(LocalFlexController_t)
 T CBaseAnimating::GetFlexControllerType(LocalFlexController_t)
 T CBaseAnimating::GetGroundSpeedVelocity()
 T CBaseAnimating::GetHitboxBone(int)
 T CBaseAnimating::GetHitboxBonePosition(int, Vector&, QAngle&, QAngle)
 T CBaseAnimating::GetHitboxSet()
 T CBaseAnimating::GetHitboxesFrontside(int*, int, Vector const&, float)
 T CBaseAnimating::GetIdealAccel() const
 T CBaseAnimating::GetIdealSpeed() const
 T CBaseAnimating::GetInstantaneousVelocity(float)
 T CBaseAnimating::GetIntervalMovement(float, bool&, Vector&, QAngle&)
 T CBaseAnimating::GetLastVisibleCycle(CStudioHdr*, int)
 T CBaseAnimating::GetLayerSequenceCycleRate(CAnimationLayer*, int)
 T CBaseAnimating::GetModelHierarchyScale()
 T CBaseAnimating::GetMovementFrame(float)
 T CBaseAnimating::GetNumBodyGroups()
 T CBaseAnimating::GetNumFlexControllers()
 T CBaseAnimating::GetPhysicsBone(int)
 T CBaseAnimating::GetPoseParameter(int)
 T CBaseAnimating::GetPoseParameterRange(int, float&, float&)
 T CBaseAnimating::GetScriptDesc()
 T CBaseAnimating::GetSequenceActivity(int)
 T CBaseAnimating::GetSequenceCycleRate(CStudioHdr*, int)
 T CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
 T CBaseAnimating::GetSequenceKeyValues(int)
 T CBaseAnimating::GetSequenceLinearMotion(int, Vector*)
 T CBaseAnimating::GetSequenceMoveYaw(int)
 T CBaseAnimating::GetSequenceMovement(int, float, float, Vector&, QAngle&)
 T CBaseAnimating::GetSequenceName(int)
 T CBaseAnimating::GetServerClass()
 T CBaseAnimating::GetSkeleton(CStudioHdr*, Vector*, QuaternionAligned*, int)
 T CBaseAnimating::GetStepAngles() const
 T CBaseAnimating::GetStepOrigin() const
 T CBaseAnimating::GetVelocity(Vector*, Vector*)
 T CBaseAnimating::GotoSequence(int, float, float, int, int&, float&, int&)
 T CBaseAnimating::HandleAnimEvent(animevent_t*)
 T CBaseAnimating::HandleBehaviorAnimEvent(animevent_t*)
 T CBaseAnimating::HandleScriptedAnimEvent(animevent_t*)
 T CBaseAnimating::HasAnimEvent(int, int)
 T CBaseAnimating::HasMovement(int)
 T CBaseAnimating::HasPoseParameter(int, int)
 T CBaseAnimating::Ignite(float, bool, float, bool)
 T CBaseAnimating::IgniteLifetime(float)
 T CBaseAnimating::IgniteUseCheapEffect(bool)
 T CBaseAnimating::InitBoneControllers()
 T CBaseAnimating::InputBecomeRagdoll(inputdata_t&)
 T CBaseAnimating::InputIgnite(inputdata_t&)
 T CBaseAnimating::InputIgniteLifetime(inputdata_t&)
 T CBaseAnimating::InputSetLightingOrigin(inputdata_t&)
 T CBaseAnimating::InputSetLightingOriginRelative(inputdata_t&)
 T CBaseAnimating::InvalidateBoneCache()
 T CBaseAnimating::InvalidateMdlCache()
 T CBaseAnimating::IsActivityFinished()
 T CBaseAnimating::IsFrozen()
 T CBaseAnimating::IsRagdoll()
 T CBaseAnimating::IsSequenceFinished()
 T CBaseAnimating::IsValidSequence(int)
 T CBaseAnimating::IsViewModel() const
 T CBaseAnimating::LockStudioHdr()
 T CBaseAnimating::LookupActivity(char const*)
 T CBaseAnimating::LookupAttachment(char const*)
 T CBaseAnimating::LookupBone(char const*)
 T CBaseAnimating::LookupPoseParameter(CStudioHdr*, char const*)
 T CBaseAnimating::LookupSequence(char const*)
 T CBaseAnimating::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseAnimating::NetworkStateChanged_m_bClientSideRagdoll()
 T CBaseAnimating::NetworkStateChanged_m_bClientSideRagdoll(void*)
 T CBaseAnimating::OnRestore()
 T CBaseAnimating::OnSequenceSet(int)
 T CBaseAnimating::PopulatePoseParameters()
 T CBaseAnimating::Precache()
 T CBaseAnimating::ReachedEndOfSequence()
 T CBaseAnimating::ResetActivityIndexes()
 T CBaseAnimating::ResetClientsideFrame()
 T CBaseAnimating::ResetEventIndexes()
 T CBaseAnimating::ResetSequence(int)
 T CBaseAnimating::ResetSequenceInfo()
 T CBaseAnimating::Restore(IRestore&)
 T CBaseAnimating::ScriptGetAttachmentAngles(int)
 T CBaseAnimating::ScriptGetAttachmentOrigin(int)
 T CBaseAnimating::SelectHeaviestSequence(Activity)
 T CBaseAnimating::SelectWeightedSequence(Activity)
 T CBaseAnimating::SelectWeightedSequence(Activity, int)
 T CBaseAnimating::SequenceDuration(CStudioHdr*, int)
 T CBaseAnimating::SetBodygroup(int, int)
 T CBaseAnimating::SetBoneController(int, float)
 T CBaseAnimating::SetFadeDistance(float, float)
 T CBaseAnimating::SetLightingOrigin(CBaseEntity*)
 T CBaseAnimating::SetLightingOrigin(string_t)
 T CBaseAnimating::SetLightingOriginRelative(CBaseEntity*)
 T CBaseAnimating::SetModel(char const*)
 T CBaseAnimating::SetPoseParameter(CStudioHdr*, int, float)
 T CBaseAnimating::SetSequence(int)
 T CBaseAnimating::SetSequenceBox()
 T CBaseAnimating::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseAnimating::SetupBones(matrix3x4a_t*, int)
 T CBaseAnimating::Spawn()
 T CBaseAnimating::StudioFrameAdvance()
 T CBaseAnimating::StudioFrameAdvanceInternal(CStudioHdr*, float)
 T CBaseAnimating::StudioFrameAdvanceManual(float)
 T CBaseAnimating::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseAnimating::TransferDissolveFrom(CBaseAnimating*)
 T CBaseAnimating::Unfreeze()
 T CBaseAnimating::UnlockStudioHdr()
 T CBaseAnimating::UpdateModelScale()
 T CBaseAnimating::UpdateStepOrigin()
 T CBaseAnimating::UseClientSideAnimation()
 T CBaseAnimating::YouForgotToImplementOrDeclareServerClass()
 T CBaseAnimating::~CBaseAnimating()
 T CBaseAnimatingOverlay::AddGesture(Activity, bool)
 T CBaseAnimatingOverlay::AddGestureSequence(int, bool)
 T CBaseAnimatingOverlay::AddLayeredSequence(int, int)
 T CBaseAnimatingOverlay::AllocateLayer(int)
 T CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating*)
 T CBaseAnimatingOverlay::FastRemoveLayer(int)
 T CBaseAnimatingOverlay::FindGestureLayer(Activity)
 T CBaseAnimatingOverlay::GetAnimOverlay(int)
 T CBaseAnimatingOverlay::GetBaseAnimatingOverlay()
 T CBaseAnimatingOverlay::GetDataDescMap()
 T CBaseAnimatingOverlay::GetLayerCycle(int)
 T CBaseAnimatingOverlay::GetLayerDuration(int)
 T CBaseAnimatingOverlay::GetLayerSequence(int)
 T CBaseAnimatingOverlay::GetServerClass()
 T CBaseAnimatingOverlay::GetSkeleton(CStudioHdr*, Vector*, QuaternionAligned*, int)
 T CBaseAnimatingOverlay::IsPlayingGesture(Activity)
 T CBaseAnimatingOverlay::OnRestore()
 T CBaseAnimatingOverlay::RemoveLayer(int, float, float)
 T CBaseAnimatingOverlay::RestartGesture(Activity, bool, bool)
 T CBaseAnimatingOverlay::SetLayerCycle(int, float)
 T CBaseAnimatingOverlay::SetLayerCycle(int, float, float)
 T CBaseAnimatingOverlay::SetLayerDuration(int, float)
 T CBaseAnimatingOverlay::SetLayerLooping(int, bool)
 T CBaseAnimatingOverlay::SetLayerNoEvents(int, bool)
 T CBaseAnimatingOverlay::SetLayerNoRestore(int, bool)
 T CBaseAnimatingOverlay::SetLayerPlaybackRate(int, float)
 T CBaseAnimatingOverlay::SetLayerPriority(int, int)
 T CBaseAnimatingOverlay::SetLayerWeight(int, float)
 T CBaseAnimatingOverlay::SetModel(char const*)
 T CBaseAnimatingOverlay::SetNumAnimOverlays(int)
 T CBaseAnimatingOverlay::StudioFrameAdvance()
 T CBaseAnimatingOverlay::UpdateDispatchLayer(CAnimationLayer*, CStudioHdr*, int)
 T CBaseAnimatingOverlay::YouForgotToImplementOrDeclareServerClass()
 T CBaseAnimatingOverlay::~CBaseAnimatingOverlay()
 T CBaseAppSystem<IParticleSystemQuery>::Connect(void* (*)(char const*, int*))
 T CBaseAppSystem<IParticleSystemQuery>::Disconnect()
 T CBaseAppSystem<IParticleSystemQuery>::GetDependencies()
 T CBaseAppSystem<IParticleSystemQuery>::GetTier()
 T CBaseAppSystem<IParticleSystemQuery>::Init()
 T CBaseAppSystem<IParticleSystemQuery>::QueryInterface(char const*)
 T CBaseAppSystem<IParticleSystemQuery>::Reconnect(void* (*)(char const*, int*), char const*)
 T CBaseAppSystem<IParticleSystemQuery>::Shutdown()
 T CBaseButton* _CreateEntityTemplate<CBaseButton>(CBaseButton*, char const*)
 T CBaseButton::ButtonActivate()
 T CBaseButton::ButtonBackHome()
 T CBaseButton::ButtonReturn()
 T CBaseButton::ButtonSpark()
 T CBaseButton::ButtonTouch(CBaseEntity*)
 T CBaseButton::ButtonUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseButton::CreateVPhysics()
 T CBaseButton::DrawDebugTextOverlays()
 T CBaseButton::GetDataDescMap()
 T CBaseButton::GetServerClass()
 T CBaseButton::InputLock(inputdata_t&)
 T CBaseButton::InputPress(inputdata_t&)
 T CBaseButton::InputPressIn(inputdata_t&)
 T CBaseButton::InputPressOut(inputdata_t&)
 T CBaseButton::InputUnlock(inputdata_t&)
 T CBaseButton::KeyValue(char const*, char const*)
 T CBaseButton::Lock()
 T CBaseButton::ObjectCaps()
 T CBaseButton::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseButton::Precache()
 T CBaseButton::Press(CBaseEntity*, CBaseButton::BUTTON_CODE)
 T CBaseButton::Spawn()
 T CBaseButton::TriggerAndWait()
 T CBaseButton::Unlock()
 T CBaseButton::YouForgotToImplementOrDeclareServerClass()
 T CBaseButton::~CBaseButton()
 T CBaseCSGrenade::AllowsAutoSwitchFrom() const
 T CBaseCSGrenade::CBaseCSGrenade()
 T CBaseCSGrenade::CapabilitiesGet()
 T CBaseCSGrenade::DecrementAmmo(CBaseCombatCharacter*)
 T CBaseCSGrenade::Deploy()
 T CBaseCSGrenade::DropGrenade()
 T CBaseCSGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CBaseCSGrenade::GetDataDescMap()
 T CBaseCSGrenade::GetServerClass()
 T CBaseCSGrenade::Holster(CBaseCombatWeapon*)
 T CBaseCSGrenade::ItemPostFrame()
 T CBaseCSGrenade::ItemPreFrame()
 T CBaseCSGrenade::OnPickedUp(CBaseCombatCharacter*)
 T CBaseCSGrenade::Precache()
 T CBaseCSGrenade::PrimaryAttack()
 T CBaseCSGrenade::Reload()
 T CBaseCSGrenade::SecondaryAttack()
 T CBaseCSGrenade::SetLoopingSoundPlaying(bool)
 T CBaseCSGrenade::StartGrenadeThrow()
 T CBaseCSGrenade::ThrowGrenade()
 T CBaseCSGrenade::YouForgotToImplementOrDeclareServerClass()
 T CBaseCSGrenade::~CBaseCSGrenade()
 T CBaseCSGrenadeProjectile::DangerSoundThink()
 T CBaseCSGrenadeProjectile::Explode(CGameTrace*, int)
 T CBaseCSGrenadeProjectile::GetDataDescMap()
 T CBaseCSGrenadeProjectile::GetGrenadeType()
 T CBaseCSGrenadeProjectile::GetServerClass()
 T CBaseCSGrenadeProjectile::GetShakeAmplitude()
 T CBaseCSGrenadeProjectile::OnBounced()
 T CBaseCSGrenadeProjectile::PhysicsSolidMaskForEntity() const
 T CBaseCSGrenadeProjectile::PostConstructor(char const*)
 T CBaseCSGrenadeProjectile::Precache()
 T CBaseCSGrenadeProjectile::RecordDetonation()
 T CBaseCSGrenadeProjectile::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
 T CBaseCSGrenadeProjectile::SetDetonateTimerLength(float)
 T CBaseCSGrenadeProjectile::SetupInitialTransmittedGrenadeVelocity(Vector const&)
 T CBaseCSGrenadeProjectile::ShouldTransmit(CCheckTransmitInfo const*)
 T CBaseCSGrenadeProjectile::Spawn()
 T CBaseCSGrenadeProjectile::Splash()
 T CBaseCSGrenadeProjectile::UpdateTransmitState()
 T CBaseCSGrenadeProjectile::YouForgotToImplementOrDeclareServerClass()
 T CBaseCSGrenadeProjectile::~CBaseCSGrenadeProjectile()
 T CBaseCSIssue::GetOtherTeamDisplayString()
 T CBaseCombatCharacter::AddClassRelationship(Class_T, Disposition_t, int)
 T CBaseCombatCharacter::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
 T CBaseCombatCharacter::AddFactionRelationship(int, Disposition_t, int)
 T CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon*)
 T CBaseCombatCharacter::AllocateDefaultFactionRelationships()
 T CBaseCombatCharacter::AllocateDefaultRelationships()
 T CBaseCombatCharacter::ApplyStressDamage(IPhysicsObject*, bool)
 T CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&, Vector const&)
 T CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity*, Vector const&, float, int)
 T CBaseCombatCharacter::BloodColor()
 T CBaseCombatCharacter::BodyAngles()
 T CBaseCombatCharacter::BodyDirection2D()
 T CBaseCombatCharacter::BodyDirection3D()
 T CBaseCombatCharacter::CBaseCombatCharacter()
 T CBaseCombatCharacter::CalcDeathForceVector(CTakeDamageInfo const&)
 T CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon*)
 T CBaseCombatCharacter::CanBecomeServerRagdoll()
 T CBaseCombatCharacter::ChangeFaction(int)
 T CBaseCombatCharacter::ChangeTeam(int)
 T CBaseCombatCharacter::CheckTraceHullAttack(Vector const&, Vector const&, Vector const&, Vector const&, float, int, float, bool)
 T CBaseCombatCharacter::CheckTraceHullAttack(float, Vector const&, Vector const&, float, int, float, bool)
 T CBaseCombatCharacter::ClearLastKnownArea()
 T CBaseCombatCharacter::CorpseFade()
 T CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)
 T CBaseCombatCharacter::DoMuzzleFlash()
 T CBaseCombatCharacter::EquipWearable(CEconWearable*)
 T CBaseCombatCharacter::Event_Dying()
 T CBaseCombatCharacter::Event_Gibbed(CTakeDamageInfo const&)
 T CBaseCombatCharacter::Event_Killed(CTakeDamageInfo const&)
 T CBaseCombatCharacter::ExitVehicle()
 T CBaseCombatCharacter::EyeDirection2D()
 T CBaseCombatCharacter::EyeDirection3D()
 T CBaseCombatCharacter::FInAimCone(CBaseEntity*)
 T CBaseCombatCharacter::FInAimCone(Vector const&)
 T CBaseCombatCharacter::FInViewCone(CBaseEntity*)
 T CBaseCombatCharacter::FInViewCone(Vector const&)
 T CBaseCombatCharacter::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CBaseCombatCharacter::FVisible(Vector const&, int, CBaseEntity**)
 T CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)
 T CBaseCombatCharacter::FindMissTarget()
 T CBaseCombatCharacter::FindWearableInSlot(loadout_positions_t)
 T CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity*)
 T CBaseCombatCharacter::GetActiveWeapon() const
 T CBaseCombatCharacter::GetAliveDuration() const
 T CBaseCombatCharacter::GetAmmoCount(int) const
 T CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CBaseCombatCharacter::GetDataDescMap()
 T CBaseCombatCharacter::GetDeathActivity()
 T CBaseCombatCharacter::GetDefaultRelationshipDisposition(Class_T)
 T CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity*) const
 T CBaseCombatCharacter::GetFogObscuredRatio(Vector const&) const
 T CBaseCombatCharacter::GetFogObscuredRatio(float) const
 T CBaseCombatCharacter::GetFogParams(fogparams_t*) const
 T CBaseCombatCharacter::GetFogTrigger()
 T CBaseCombatCharacter::GetInteractionID()
 T CBaseCombatCharacter::GetLastKnownArea() const
 T CBaseCombatCharacter::GetPhysicsImpactDamageTable()
 T CBaseCombatCharacter::GetServerClass()
 T CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
 T CBaseCombatCharacter::GetTimeSinceLastInjury(int) const
 T CBaseCombatCharacter::GetVehicle()
 T CBaseCombatCharacter::GetVehicleEntity()
 T CBaseCombatCharacter::GetWeapon(int) const
 T CBaseCombatCharacter::GiveAmmo(int, char const*, bool)
 T CBaseCombatCharacter::GiveAmmo(int, int, bool)
 T CBaseCombatCharacter::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CBaseCombatCharacter::HasAlienGibs()
 T CBaseCombatCharacter::HasEverBeenInjured(int) const
 T CBaseCombatCharacter::HasHumanGibs()
 T CBaseCombatCharacter::HeadDirection2D()
 T CBaseCombatCharacter::HeadDirection3D()
 T CBaseCombatCharacter::IRelationPriority(CBaseEntity*)
 T CBaseCombatCharacter::IRelationType(CBaseEntity*)
 T CBaseCombatCharacter::InitInteractionSystem()
 T CBaseCombatCharacter::InputKilledNPC(inputdata_t&)
 T CBaseCombatCharacter::IsAreaTraversable(CNavArea const*) const
 T CBaseCombatCharacter::IsHiddenByFog(CBaseEntity*) const
 T CBaseCombatCharacter::IsHiddenByFog(Vector const&) const
 T CBaseCombatCharacter::IsHiddenByFog(float) const
 T CBaseCombatCharacter::IsInAVehicle() const
 T CBaseCombatCharacter::IsInFieldOfView(CBaseEntity*) const
 T CBaseCombatCharacter::IsInFieldOfView(Vector const&) const
 T CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity*, CBaseCombatCharacter::LineOfSightCheckType) const
 T CBaseCombatCharacter::IsLineOfSightClear(Vector const&, CBaseCombatCharacter::LineOfSightCheckType, CBaseEntity*) const
 T CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*, float) const
 T CBaseCombatCharacter::IsLookingTowards(Vector const&, float) const
 T CBaseCombatCharacter::MyCombatCharacterPointer()
 T CBaseCombatCharacter::NPC_TranslateActivity(Activity)
 T CBaseCombatCharacter::NetworkStateChanged_m_iAmmo()
 T CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void*)
 T CBaseCombatCharacter::NetworkVar_m_hMyWeapons::Set(int, CHandle<CBaseCombatWeapon> const&)
 T CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity*)
 T CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CBaseCombatCharacter::OnFogTriggerEndTouch(CBaseEntity*)
 T CBaseCombatCharacter::OnFogTriggerStartTouch(CBaseEntity*)
 T CBaseCombatCharacter::OnFootstep(Vector const&, bool, bool, bool, bool)
 T CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
 T CBaseCombatCharacter::OnNavAreaChanged(CNavArea*, CNavArea*)
 T CBaseCombatCharacter::OnNavAreaRemoved(CNavArea*)
 T CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnPursuedBy(INextBot*)
 T CBaseCombatCharacter::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const&)
 T CBaseCombatCharacter::Precache()
 T CBaseCombatCharacter::PushawayTouch(CBaseEntity*)
 T CBaseCombatCharacter::RemoveAllAmmo()
 T CBaseCombatCharacter::RemoveAllWeapons()
 T CBaseCombatCharacter::RemoveAllWearables()
 T CBaseCombatCharacter::RemoveAmmo(int, int)
 T CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity*)
 T CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon*)
 T CBaseCombatCharacter::RemoveWeaponOnPlayer(CBaseCombatWeapon*)
 T CBaseCombatCharacter::RemoveWearable(CEconWearable*)
 T CBaseCombatCharacter::RemoveWearableInSlot(loadout_positions_t)
 T CBaseCombatCharacter::ResetVisibilityCache(CBaseCombatCharacter*)
 T CBaseCombatCharacter::Restore(IRestore&)
 T CBaseCombatCharacter::SetActiveWeapon(CBaseCombatWeapon*)
 T CBaseCombatCharacter::SetAmmoCount(int, int)
 T CBaseCombatCharacter::SetBloodColor(int)
 T CBaseCombatCharacter::SetDefaultRelationship(Class_T, Class_T, Disposition_t, int)
 T CBaseCombatCharacter::SetLastHitGroup(int)
 T CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity*)
 T CBaseCombatCharacter::SetNextAttack(float)
 T CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseCombatCharacter::ShouldDropActiveWeaponWhenKilled()
 T CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)
 T CBaseCombatCharacter::ShouldPickupItemSilently(CBaseCombatCharacter*)
 T CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
 T CBaseCombatCharacter::Spawn()
 T CBaseCombatCharacter::SwitchToNextBestWeapon(CBaseCombatWeapon*)
 T CBaseCombatCharacter::TakeHealth(float, int)
 T CBaseCombatCharacter::UpdateLastKnownArea()
 T CBaseCombatCharacter::UpdateOnRemove()
 T CBaseCombatCharacter::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBaseCombatCharacter::VPhysicsUpdate(IPhysicsObject*)
 T CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Create(char const*)
 T CBaseCombatCharacter::Weapon_Detach(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
 T CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_FindUsable(Vector const&)
 T CBaseCombatCharacter::Weapon_FrameUpdate()
 T CBaseCombatCharacter::Weapon_GetPosition(int) const
 T CBaseCombatCharacter::Weapon_GetSlot(int) const
 T CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t*)
 T CBaseCombatCharacter::Weapon_IsOnGround(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_OwnsThisType(char const*, int) const
 T CBaseCombatCharacter::Weapon_SetActivity(Activity, float)
 T CBaseCombatCharacter::Weapon_ShootPosition()
 T CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon*, int)
 T CBaseCombatCharacter::Weapon_TranslateActivity(Activity, bool*)
 T CBaseCombatCharacter::YouForgotToImplementOrDeclareServerClass()
 T CBaseCombatCharacter::~CBaseCombatCharacter()
 T CBaseCombatWeapon::AbortReload()
 T CBaseCombatWeapon::Activate()
 T CBaseCombatWeapon::ActivityList()
 T CBaseCombatWeapon::ActivityListCount()
 T CBaseCombatWeapon::ActivityOverride(Activity, bool*)
 T CBaseCombatWeapon::AddViewKick()
 T CBaseCombatWeapon::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
 T CBaseCombatWeapon::AllowsAutoSwitchFrom() const
 T CBaseCombatWeapon::AllowsAutoSwitchTo() const
 T CBaseCombatWeapon::AttemptToMaterialize()
 T CBaseCombatWeapon::BaseForceFire(CBaseCombatCharacter*, CBaseEntity*)
 T CBaseCombatWeapon::CBaseCombatWeapon()
 T CBaseCombatWeapon::CalcViewmodelBob()
 T CBaseCombatWeapon::CanBePickedUpByNPCs()
 T CBaseCombatWeapon::CanBeSelected()
 T CBaseCombatWeapon::CanDeploy()
 T CBaseCombatWeapon::CanHolster()
 T CBaseCombatWeapon::CanLower()
 T CBaseCombatWeapon::CanReload()
 T CBaseCombatWeapon::CapabilitiesGet()
 T CBaseCombatWeapon::CheckReload()
 T CBaseCombatWeapon::CheckRespawn()
 T CBaseCombatWeapon::DefaultDeploy(char*, char*, int, char*)
 T CBaseCombatWeapon::DefaultReload(int, int, int)
 T CBaseCombatWeapon::DefaultTouch(CBaseEntity*)
 T CBaseCombatWeapon::Delete()
 T CBaseCombatWeapon::Deploy()
 T CBaseCombatWeapon::DestroyItem()
 T CBaseCombatWeapon::DisplayAltFireHudHint()
 T CBaseCombatWeapon::DisplayReloadHudHint()
 T CBaseCombatWeapon::Drop(Vector const&)
 T CBaseCombatWeapon::Equip(CBaseCombatCharacter*)
 T CBaseCombatWeapon::FallInit()
 T CBaseCombatWeapon::FallThink()
 T CBaseCombatWeapon::FinishReload()
 T CBaseCombatWeapon::GetAccuracyFishtail() const
 T CBaseCombatWeapon::GetAnimPrefix() const
 T CBaseCombatWeapon::GetAvailableWeaponsInBox(CBaseCombatWeapon**, int, Vector const&, Vector const&)
 T CBaseCombatWeapon::GetBulletSpread()
 T CBaseCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T CBaseCombatWeapon::GetBulletType()
 T CBaseCombatWeapon::GetControlPanelClassName(int, char const*&)
 T CBaseCombatWeapon::GetControlPanelInfo(int, char const*&)
 T CBaseCombatWeapon::GetDamage(float, int)
 T CBaseCombatWeapon::GetDataDescMap()
 T CBaseCombatWeapon::GetDeathNoticeName()
 T CBaseCombatWeapon::GetDefaultAnimSpeed()
 T CBaseCombatWeapon::GetDefaultClip1() const
 T CBaseCombatWeapon::GetDefaultClip2() const
 T CBaseCombatWeapon::GetDrawActivity()
 T CBaseCombatWeapon::GetEconItemView()
 T CBaseCombatWeapon::GetEconItemView() const
 T CBaseCombatWeapon::GetEncryptionKey()
 T CBaseCombatWeapon::GetFireRate()
 T CBaseCombatWeapon::GetLastWeapon()
 T CBaseCombatWeapon::GetMaxAutoAimDeflection()
 T CBaseCombatWeapon::GetMaxBurst()
 T CBaseCombatWeapon::GetMaxClip1() const
 T CBaseCombatWeapon::GetMaxClip2() const
 T CBaseCombatWeapon::GetMaxRestTime()
 T CBaseCombatWeapon::GetMinBurst()
 T CBaseCombatWeapon::GetMinRestTime()
 T CBaseCombatWeapon::GetName() const
 T CBaseCombatWeapon::GetOwner() const
 T CBaseCombatWeapon::GetPosition() const
 T CBaseCombatWeapon::GetPrimaryAmmoType() const
 T CBaseCombatWeapon::GetPrimaryAttackActivity()
 T CBaseCombatWeapon::GetPrintName() const
 T CBaseCombatWeapon::GetProficiencyValues()
 T CBaseCombatWeapon::GetRandomBurst()
 T CBaseCombatWeapon::GetRumbleEffect() const
 T CBaseCombatWeapon::GetSecondaryAmmoType() const
 T CBaseCombatWeapon::GetSecondaryAttackActivity()
 T CBaseCombatWeapon::GetServerClass()
 T CBaseCombatWeapon::GetShootSound(int) const
 T CBaseCombatWeapon::GetSlot() const
 T CBaseCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T CBaseCombatWeapon::GetSpriteActive() const
 T CBaseCombatWeapon::GetSpriteAmmo() const
 T CBaseCombatWeapon::GetSpriteAmmo2() const
 T CBaseCombatWeapon::GetSpriteAutoaim() const
 T CBaseCombatWeapon::GetSpriteCrosshair() const
 T CBaseCombatWeapon::GetSpriteInactive() const
 T CBaseCombatWeapon::GetSpriteZoomedAutoaim() const
 T CBaseCombatWeapon::GetSpriteZoomedCrosshair() const
 T CBaseCombatWeapon::GetSubType()
 T CBaseCombatWeapon::GetViewModel(int) const
 T CBaseCombatWeapon::GetWeaponFlags() const
 T CBaseCombatWeapon::GetWeaponID() const
 T CBaseCombatWeapon::GetWeaponIdleTime()
 T CBaseCombatWeapon::GetWeight() const
 T CBaseCombatWeapon::GetWorldModel() const
 T CBaseCombatWeapon::GetWorldModelPtr()
 T CBaseCombatWeapon::GetWpnData() const
 T CBaseCombatWeapon::GiveDefaultAmmo()
 T CBaseCombatWeapon::GiveTo(CBaseEntity*)
 T CBaseCombatWeapon::HandleAnimEvent(animevent_t*)
 T CBaseCombatWeapon::HandleFireOnEmpty()
 T CBaseCombatWeapon::HasAmmo()
 T CBaseCombatWeapon::HasAnyAmmo()
 T CBaseCombatWeapon::HasPrimaryAmmo()
 T CBaseCombatWeapon::HasSecondaryAmmo()
 T CBaseCombatWeapon::HasWeaponIdleTimeElapsed()
 T CBaseCombatWeapon::HideThink()
 T CBaseCombatWeapon::Holster(CBaseCombatWeapon*)
 T CBaseCombatWeapon::HolsterOnDetach()
 T CBaseCombatWeapon::InputHideWeapon(inputdata_t&)
 T CBaseCombatWeapon::InvalidateMdlCache()
 T CBaseCombatWeapon::IsAllowedToSwitch()
 T CBaseCombatWeapon::IsAlwaysActive()
 T CBaseCombatWeapon::IsBaseCombatWeapon() const
 T CBaseCombatWeapon::IsHolstered()
 T CBaseCombatWeapon::IsLocked(CBaseEntity*)
 T CBaseCombatWeapon::IsMeleeWeapon() const
 T CBaseCombatWeapon::IsPredicted() const
 T CBaseCombatWeapon::IsSilentPickupThirdperson(CBaseCombatCharacter*)
 T CBaseCombatWeapon::IsWeaponVisible()
 T CBaseCombatWeapon::IsZoomed() const
 T CBaseCombatWeapon::ItemBusyFrame()
 T CBaseCombatWeapon::ItemHolsterFrame()
 T CBaseCombatWeapon::ItemPostFrame()
 T CBaseCombatWeapon::ItemPreFrame()
 T CBaseCombatWeapon::Kill()
 T CBaseCombatWeapon::Lock(float, CBaseEntity*)
 T CBaseCombatWeapon::Lower()
 T CBaseCombatWeapon::MaintainIdealActivity()
 T CBaseCombatWeapon::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBaseCombatWeapon::MakeWeaponNameFromEntity(CBaseEntity*)
 T CBaseCombatWeapon::Materialize()
 T CBaseCombatWeapon::MyCombatWeaponPointer()
 T CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick()
 T CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBaseCombatWeapon::ObjectCaps()
 T CBaseCombatWeapon::OnMouseWheel(int)
 T CBaseCombatWeapon::OnPickedUp(CBaseCombatCharacter*)
 T CBaseCombatWeapon::Operator_ForceNPCFire(CBaseCombatCharacter*, bool, CBaseEntity*)
 T CBaseCombatWeapon::Operator_FrameUpdate(CBaseCombatCharacter*)
 T CBaseCombatWeapon::Operator_HandleAnimEvent(animevent_t*, CBaseCombatCharacter*)
 T CBaseCombatWeapon::Precache()
 T CBaseCombatWeapon::PrimaryAttack()
 T CBaseCombatWeapon::Ready()
 T CBaseCombatWeapon::Reload()
 T CBaseCombatWeapon::ReloadOrSwitchWeapons()
 T CBaseCombatWeapon::RescindAltFireHudHint()
 T CBaseCombatWeapon::RescindReloadHudHint()
 T CBaseCombatWeapon::Respawn()
 T CBaseCombatWeapon::SecondaryAttack()
 T CBaseCombatWeapon::SendViewModelAnim(int)
 T CBaseCombatWeapon::SendWeaponAnim(int)
 T CBaseCombatWeapon::SetActivity(Activity, float)
 T CBaseCombatWeapon::SetIdealActivity(Activity)
 T CBaseCombatWeapon::SetOwner(CBaseCombatCharacter*)
 T CBaseCombatWeapon::SetPickupTouch()
 T CBaseCombatWeapon::SetSubType(int)
 T CBaseCombatWeapon::SetViewModel()
 T CBaseCombatWeapon::SetViewModelIndex(int)
 T CBaseCombatWeapon::SetWeaponIdleTime(float)
 T CBaseCombatWeapon::SetWeaponModules()
 T CBaseCombatWeapon::SetWeaponVisible(bool)
 T CBaseCombatWeapon::ShouldBlockPrimaryFire()
 T CBaseCombatWeapon::ShouldDisplayAltFireHUDHint()
 T CBaseCombatWeapon::ShouldDisplayReloadHUDHint()
 T CBaseCombatWeapon::ShouldShowControlPanels()
 T CBaseCombatWeapon::Spawn()
 T CBaseCombatWeapon::StartSprinting()
 T CBaseCombatWeapon::StopSprinting()
 T CBaseCombatWeapon::StopWeaponSound(WeaponSound_t)
 T CBaseCombatWeapon::UpdateClientData(CBasePlayer*)
 T CBaseCombatWeapon::UpdateTransmitState()
 T CBaseCombatWeapon::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseCombatWeapon::UsesClipsForAmmo1() const
 T CBaseCombatWeapon::UsesClipsForAmmo2() const
 T CBaseCombatWeapon::UsesPrimaryAmmo()
 T CBaseCombatWeapon::UsesSecondaryAmmo()
 T CBaseCombatWeapon::VisibleInWeaponSelection()
 T CBaseCombatWeapon::WeaponAutoAimScale()
 T CBaseCombatWeapon::WeaponIdle()
 T CBaseCombatWeapon::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CBaseCombatWeapon::WeaponMeleeAttack1Condition(float, float)
 T CBaseCombatWeapon::WeaponMeleeAttack2Condition(float, float)
 T CBaseCombatWeapon::WeaponRangeAttack1Condition(float, float)
 T CBaseCombatWeapon::WeaponRangeAttack2Condition(float, float)
 T CBaseCombatWeapon::WeaponSound(WeaponSound_t, float)
 T CBaseCombatWeapon::YouForgotToImplementOrDeclareServerClass()
 T CBaseCombatWeapon::~CBaseCombatWeapon()
 T CBaseDMStart::GetDataDescMap()
 T CBaseDMStart::IsTriggered(CBaseEntity*)
 T CBaseDMStart::~CBaseDMStart()
 T CBaseDoor::Activate()
 T CBaseDoor::Blocked(CBaseEntity*)
 T CBaseDoor::ChainTouch(CBaseEntity*)
 T CBaseDoor::ChainUse()
 T CBaseDoor::CloseAreaPortalsThink()
 T CBaseDoor::CreateVPhysics()
 T CBaseDoor::DoorActivate()
 T CBaseDoor::DoorGoDown()
 T CBaseDoor::DoorGoUp()
 T CBaseDoor::DoorHitBottom()
 T CBaseDoor::DoorHitTop()
 T CBaseDoor::DoorTouch(CBaseEntity*)
 T CBaseDoor::EndBlocked()
 T CBaseDoor::GetDataDescMap()
 T CBaseDoor::GetServerClass()
 T CBaseDoor::InputClose(inputdata_t&)
 T CBaseDoor::InputLock(inputdata_t&)
 T CBaseDoor::InputOpen(inputdata_t&)
 T CBaseDoor::InputSetSpeed(inputdata_t&)
 T CBaseDoor::InputSetToggleState(inputdata_t&)
 T CBaseDoor::InputToggle(inputdata_t&)
 T CBaseDoor::InputUnlock(inputdata_t&)
 T CBaseDoor::IsRotatingDoor()
 T CBaseDoor::KeyValue(char const*, char const*)
 T CBaseDoor::MovingSoundThink()
 T CBaseDoor::ObjectCaps()
 T CBaseDoor::Precache()
 T CBaseDoor::SetToggleState(int)
 T CBaseDoor::ShouldSavePhysics()
 T CBaseDoor::Spawn()
 T CBaseDoor::StartBlocked(CBaseEntity*)
 T CBaseDoor::StartMovingSound()
 T CBaseDoor::StopMovingSound()
 T CBaseDoor::UpdateAreaPortals(bool)
 T CBaseDoor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseDoor::YouForgotToImplementOrDeclareServerClass()
 T CBaseDoor::~CBaseDoor()
 T CBaseEdict::GetChangeAccessor()
 T CBaseEdict::StateChanged(unsigned short)
 T CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
 T CBaseEntity::Activate()
 T CBaseEntity::AddContext(char const*)
 T CBaseEntity::AddContext(char const*, char const*, float)
 T CBaseEntity::AddEffects(int)
 T CBaseEntity::AddEntityToGroundList(CBaseEntity*)
 T CBaseEntity::AddFlag(int)
 T CBaseEntity::AddPoints(int, bool)
 T CBaseEntity::AddPointsToTeam(int, bool)
 T CBaseEntity::AddStepDiscontinuity(float, Vector const&, QAngle const&)
 T CBaseEntity::AddTimedOverlay(char const*, int)
 T CBaseEntity::AppendContextToCriteria(ResponseRules::CriteriaSet&, char const*)
 T CBaseEntity::ApplyAbsVelocityImpulse(Vector const&)
 T CBaseEntity::ApplyLocalAngularVelocityImpulse(Vector const&)
 T CBaseEntity::Blocked(CBaseEntity*)
 T CBaseEntity::BlocksLOS()
 T CBaseEntity::BloodColor()
 T CBaseEntity::BodyTarget(Vector const&, bool)
 T CBaseEntity::CBaseEntity(bool)
 T CBaseEntity::CalcAbsolutePosition()
 T CBaseEntity::CalcAbsoluteVelocity()
 T CBaseEntity::CallScriptFunction(char const*, ScriptVariant_t*)
 T CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
 T CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)
 T CBaseEntity::CanBeSpotted()
 T CBaseEntity::CanPushEntity(CBaseEntity*) const
 T CBaseEntity::CanStandOn(CBaseEntity*) const
 T CBaseEntity::CanStandOn(edict_t*) const
 T CBaseEntity::ChangeTeam(int)
 T CBaseEntity::CheckHasGamePhysicsSimulation()
 T CBaseEntity::CheckHasThinkFunction(bool)
 T CBaseEntity::CheckStepSimulationChanged()
 T CBaseEntity::ClassMatchesComplex(char const*)
 T CBaseEntity::Classify()
 T CBaseEntity::ClearFlags()
 T CBaseEntity::ClearSpotRule(int)
 T CBaseEntity::ClearSpottedBy()
 T CBaseEntity::CollisionRulesChanged()
 T CBaseEntity::ComputeAbsPosition(Vector const&, Vector*)
 T CBaseEntity::ComputeStepSimulationNetwork(StepSimulationData*)
 T CBaseEntity::ComputeTracerStartPosition(Vector const&, Vector*)
 T CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CBaseEntity::ConnectOutputToScript(char const*, char const*)
 T CBaseEntity::Create(char const*, Vector const&, QAngle const&, CBaseEntity*)
 T CBaseEntity::CreateDataObject(int)
 T CBaseEntity::CreateNoSpawn(char const*, Vector const&, QAngle const&, CBaseEntity*)
 T CBaseEntity::CreateVPhysics()
 T CBaseEntity::DamageDecal(int, int)
 T CBaseEntity::DeathNotice(CBaseEntity*)
 T CBaseEntity::DecalTrace(CGameTrace*, char const*)
 T CBaseEntity::DestroyAllDataObjects()
 T CBaseEntity::DestroyDataObject(int)
 T CBaseEntity::DetectInSkybox()
 T CBaseEntity::DisconnectOutputFromScript(char const*, char const*)
 T CBaseEntity::DispatchResponse(char const*)
 T CBaseEntity::DispatchTraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBaseEntity::DispatchUpdateTransmitState()
 T CBaseEntity::DoImpactEffect(CGameTrace&, int)
 T CBaseEntity::DoesHavePlayerChild()
 T CBaseEntity::DrawAbsBoxOverlay()
 T CBaseEntity::DrawBBoxOverlay(float)
 T CBaseEntity::DrawDebugGeometryOverlays()
 T CBaseEntity::DrawDebugTextOverlays()
 T CBaseEntity::DrawInputOverlay(char const*, CBaseEntity*, variant_t)
 T CBaseEntity::DrawOutputOverlay(CEventAction*)
 T CBaseEntity::DrawTimedOverlays()
 T CBaseEntity::DrawVPhysicsObjectCenterAndContactPoints(IPhysicsObject*)
 T CBaseEntity::DumpResponseCriteria()
 T CBaseEntity::EarPosition()
 T CBaseEntity::EmitCloseCaption(IRecipientFilter&, int, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool)
 T CBaseEntity::EmitSentenceByIndex(IRecipientFilter&, int, int, int, float, soundlevel_t, int, int, Vector const*, Vector const*, bool, float)
 T CBaseEntity::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T CBaseEntity::EmitSound(IRecipientFilter&, int, char const*, Vector const*, float, float*)
 T CBaseEntity::EmitSound(char const*, float, float*)
 T CBaseEntity::EndBlocked()
 T CBaseEntity::EndTouch(CBaseEntity*)
 T CBaseEntity::EntityText(int, char const*, float, int, int, int, int)
 T CBaseEntity::Event_Killed(CTakeDamageInfo const&)
 T CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBaseEntity::EyeAngles()
 T CBaseEntity::EyePosition()
 T CBaseEntity::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CBaseEntity::FVisible(Vector const&, int, CBaseEntity**)
 T CBaseEntity::FindContextByName(char const*) const
 T CBaseEntity::FireBullets(FireBulletsInfo_t const&)
 T CBaseEntity::FollowEntity(CBaseEntity*, bool)
 T CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
 T CBaseEntity::GenderExpandString(char const*, char*, int)
 T CBaseEntity::GetAIAddOn() const
 T CBaseEntity::GetAbsOrigin() const
 T CBaseEntity::GetAbsVelocity() const
 T CBaseEntity::GetAttackDamageScale(CBaseEntity*)
 T CBaseEntity::GetAutoAimCenter()
 T CBaseEntity::GetAutoAimRadius()
 T CBaseEntity::GetBaseAnimating()
 T CBaseEntity::GetBaseAnimatingOverlay()
 T CBaseEntity::GetBaseEntity()
 T CBaseEntity::GetBeamTraceFilter()
 T CBaseEntity::GetClassname()
 T CBaseEntity::GetCollideable()
 T CBaseEntity::GetContextValue(int) const
 T CBaseEntity::GetDamage()
 T CBaseEntity::GetDamageType() const
 T CBaseEntity::GetDataDescMap()
 T CBaseEntity::GetDataObject(int)
 T CBaseEntity::GetDebugName()
 T CBaseEntity::GetDelay()
 T CBaseEntity::GetEnemy()
 T CBaseEntity::GetEnemy() const
 T CBaseEntity::GetEntityNameAsCStr()
 T CBaseEntity::GetEntitySkybox()
 T CBaseEntity::GetFirstThinkTick()
 T CBaseEntity::GetFollowedEntity()
 T CBaseEntity::GetFriction() const
 T CBaseEntity::GetGlobalFadeScale() const
 T CBaseEntity::GetGroundChangeTime()
 T CBaseEntity::GetGroundEntity()
 T CBaseEntity::GetGroundVelocityToApply(Vector&)
 T CBaseEntity::GetHealth() const
 T CBaseEntity::GetKeyValue(char const*, char*, int)
 T CBaseEntity::GetLastThink(char const*)
 T CBaseEntity::GetMaxHealth() const
 T CBaseEntity::GetModel()
 T CBaseEntity::GetModelIndex() const
 T CBaseEntity::GetModelName() const
 T CBaseEntity::GetNetworkable()
 T CBaseEntity::GetNextTarget()
 T CBaseEntity::GetNextThink(char const*)
 T CBaseEntity::GetNextThinkTick(char const*)
 T CBaseEntity::GetNextThinkTick(int) const
 T CBaseEntity::GetParametersForSound(char const*, CSoundParameters&, char const*)
 T CBaseEntity::GetParametersForSound(char const*, unsigned int&, CSoundParameters&, char const*)
 T CBaseEntity::GetParentToWorldTransform(matrix3x4_t&)
 T CBaseEntity::GetPendingTeamNumber() const
 T CBaseEntity::GetPlayerName() const
 T CBaseEntity::GetPreTemplateName()
 T CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
 T CBaseEntity::GetRefEHandle() const
 T CBaseEntity::GetResponseSystem()
 T CBaseEntity::GetRootMoveParent()
 T CBaseEntity::GetScriptDesc()
 T CBaseEntity::GetScriptId()
 T CBaseEntity::GetScriptInstance()
 T CBaseEntity::GetScriptOwnerEntity()
 T CBaseEntity::GetScriptScope()
 T CBaseEntity::GetServerClass()
 T CBaseEntity::GetServerVehicle()
 T CBaseEntity::GetSmoothedVelocity()
 T CBaseEntity::GetSoundDuration(char const*, char const*)
 T CBaseEntity::GetSoundEmissionOrigin() const
 T CBaseEntity::GetSpotRules()
 T CBaseEntity::GetStepAngles() const
 T CBaseEntity::GetStepOrigin() const
 T CBaseEntity::GetTeam() const
 T CBaseEntity::GetTeamNumber() const
 T CBaseEntity::GetTouchTrace()
 T CBaseEntity::GetTracerAttachment()
 T CBaseEntity::GetTracerType()
 T CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const
 T CBaseEntity::GetVelocity(Vector*, Vector*)
 T CBaseEntity::GetViewOffset() const
 T CBaseEntity::GetWaterType() const
 T CBaseEntity::HandleShotImpactingGlass(FireBulletsInfo_t const&, CGameTrace const&, Vector const&, ITraceFilter*)
 T CBaseEntity::HandleShotImpactingWater(FireBulletsInfo_t const&, Vector const&, ITraceFilter*, Vector*)
 T CBaseEntity::HasDataObjectType(int) const
 T CBaseEntity::HasPhysicsAttacker(float)
 T CBaseEntity::HasTarget(string_t)
 T CBaseEntity::HeadTarget(Vector const&)
 T CBaseEntity::ImpactTrace(CGameTrace*, int, char*)
 T CBaseEntity::InSameTeam(CBaseEntity*) const
 T CBaseEntity::InitSharedVars()
 T CBaseEntity::InputAddContext(inputdata_t&)
 T CBaseEntity::InputAddOutput(inputdata_t&)
 T CBaseEntity::InputAlpha(inputdata_t&)
 T CBaseEntity::InputAlternativeSorting(inputdata_t&)
 T CBaseEntity::InputCallScriptFunction(inputdata_t&)
 T CBaseEntity::InputClearContext(inputdata_t&)
 T CBaseEntity::InputClearParent(inputdata_t&)
 T CBaseEntity::InputColor(inputdata_t&)
 T CBaseEntity::InputDisableDamageForces(inputdata_t&)
 T CBaseEntity::InputDisableDraw(inputdata_t&)
 T CBaseEntity::InputDisableDrawInFastReflection(inputdata_t&)
 T CBaseEntity::InputDisableReceivingFlashlight(inputdata_t&)
 T CBaseEntity::InputDisableShadow(inputdata_t&)
 T CBaseEntity::InputDispatchResponse(inputdata_t&)
 T CBaseEntity::InputEnableDamageForces(inputdata_t&)
 T CBaseEntity::InputEnableDraw(inputdata_t&)
 T CBaseEntity::InputEnableDrawInFastReflection(inputdata_t&)
 T CBaseEntity::InputEnableReceivingFlashlight(inputdata_t&)
 T CBaseEntity::InputEnableShadow(inputdata_t&)
 T CBaseEntity::InputFireUser1(inputdata_t&)
 T CBaseEntity::InputFireUser2(inputdata_t&)
 T CBaseEntity::InputFireUser3(inputdata_t&)
 T CBaseEntity::InputFireUser4(inputdata_t&)
 T CBaseEntity::InputKill(inputdata_t&)
 T CBaseEntity::InputKillHierarchy(inputdata_t&)
 T CBaseEntity::InputRemoveContext(inputdata_t&)
 T CBaseEntity::InputRunScript(inputdata_t&)
 T CBaseEntity::InputRunScriptFile(inputdata_t&)
 T CBaseEntity::InputSetDamageFilter(inputdata_t&)
 T CBaseEntity::InputSetLocalAngles(inputdata_t&)
 T CBaseEntity::InputSetLocalOrigin(inputdata_t&)
 T CBaseEntity::InputSetParent(inputdata_t&)
 T CBaseEntity::InputSetParentAttachment(inputdata_t&)
 T CBaseEntity::InputSetParentAttachmentMaintainOffset(inputdata_t&)
 T CBaseEntity::InputSetTeam(inputdata_t&)
 T CBaseEntity::InputUse(inputdata_t&)
 T CBaseEntity::Intersects(CBaseEntity*)
 T CBaseEntity::InvalidatePhysicsRecursive(int)
 T CBaseEntity::IsAIWalkable()
 T CBaseEntity::IsAlive()
 T CBaseEntity::IsBSPModel() const
 T CBaseEntity::IsBaseCombatWeapon() const
 T CBaseEntity::IsBaseObject() const
 T CBaseEntity::IsBaseTrain() const
 T CBaseEntity::IsCurrentlyTouching() const
 T CBaseEntity::IsDormant()
 T CBaseEntity::IsFloating()
 T CBaseEntity::IsFollowingEntity()
 T CBaseEntity::IsInWorld() const
 T CBaseEntity::IsLockedByMaster()
 T CBaseEntity::IsMoving()
 T CBaseEntity::IsNPC() const
 T CBaseEntity::IsNetClient() const
 T CBaseEntity::IsPlayer() const
 T CBaseEntity::IsPrecacheAllowed()
 T CBaseEntity::IsSimulatingOnAlternateTicks()
 T CBaseEntity::IsSpotted()
 T CBaseEntity::IsStandable() const
 T CBaseEntity::IsTemplate()
 T CBaseEntity::IsTriggered(CBaseEntity*)
 T CBaseEntity::IsViewable()
 T CBaseEntity::KeyValue(char const*, Vector const&)
 T CBaseEntity::KeyValue(char const*, char const*)
 T CBaseEntity::KeyValue(char const*, float)
 T CBaseEntity::KeyValue(char const*, int)
 T CBaseEntity::KeyValueFromFloat(char const*, float)
 T CBaseEntity::KeyValueFromInt(char const*, int)
 T CBaseEntity::KeyValueFromString(char const*, char const*)
 T CBaseEntity::KeyValueFromVector(char const*, Vector const&)
 T CBaseEntity::LocalEyeAngles()
 T CBaseEntity::MakeDormant()
 T CBaseEntity::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBaseEntity::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseEntity::ModifyOrAppendDerivedCriteria(ResponseRules::CriteriaSet&)
 T CBaseEntity::MoveDone()
 T CBaseEntity::MyCombatCharacterPointer()
 T CBaseEntity::MyCombatWeaponPointer()
 T CBaseEntity::MyNPCPointer()
 T CBaseEntity::MyNextBotPointer()
 T CBaseEntity::NameMatchesComplex(char const*)
 T CBaseEntity::NetworkQuantize(Vector&, QAngle&)
 T CBaseEntity::NetworkStateChanged_m_bClientSideRagdoll()
 T CBaseEntity::NetworkStateChanged_m_bClientSideRagdoll(void*)
 T CBaseEntity::NetworkStateChanged_m_fFlags()
 T CBaseEntity::NetworkStateChanged_m_fFlags(void*)
 T CBaseEntity::NetworkStateChanged_m_flFriction()
 T CBaseEntity::NetworkStateChanged_m_flFriction(void*)
 T CBaseEntity::NetworkStateChanged_m_hGroundEntity()
 T CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)
 T CBaseEntity::NetworkStateChanged_m_iHealth()
 T CBaseEntity::NetworkStateChanged_m_iHealth(void*)
 T CBaseEntity::NetworkStateChanged_m_iMaxHealth()
 T CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)
 T CBaseEntity::NetworkStateChanged_m_lifeState()
 T CBaseEntity::NetworkStateChanged_m_lifeState(void*)
 T CBaseEntity::NetworkStateChanged_m_nNextThinkTick()
 T CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBaseEntity::NetworkStateChanged_m_nWaterLevel()
 T CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)
 T CBaseEntity::NetworkStateChanged_m_takedamage()
 T CBaseEntity::NetworkStateChanged_m_takedamage(void*)
 T CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()
 T CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)
 T CBaseEntity::NetworkStateChanged_m_vecVelocity()
 T CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)
 T CBaseEntity::NetworkStateChanged_m_vecViewOffset()
 T CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)
 T CBaseEntity::NetworkVar_m_Collision::NetworkStateChanged()
 T CBaseEntity::NetworkVar_m_Collision::NetworkStateChanged(void*)
 T CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CBaseEntity::ObjectCaps()
 T CBaseEntity::OnControls(CBaseEntity*)
 T CBaseEntity::OnEntityEvent(EntityEvent_t, void*)
 T CBaseEntity::OnGroundChanged(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::OnNewModel()
 T CBaseEntity::OnParseMapDataFinished()
 T CBaseEntity::OnRestore()
 T CBaseEntity::OnSave(IEntitySaveUtils*)
 T CBaseEntity::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::ParseMapData(CEntityMapData*)
 T CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)
 T CBaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
 T CBaseEntity::PerformPush(float)
 T CBaseEntity::PhysicsAddGravityMove(Vector&)
 T CBaseEntity::PhysicsAddHalfGravity(float)
 T CBaseEntity::PhysicsCheckForEntityUntouch()
 T CBaseEntity::PhysicsCheckVelocity()
 T CBaseEntity::PhysicsCheckWater()
 T CBaseEntity::PhysicsCheckWaterTransition()
 T CBaseEntity::PhysicsClipVelocity(Vector const&, Vector const&, Vector&, float)
 T CBaseEntity::PhysicsCustom()
 T CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())
 T CBaseEntity::PhysicsImpact(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsLandedOnGround(float)
 T CBaseEntity::PhysicsMarkEntitiesAsTouching(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsMarkEntitiesAsTouchingEventDriven(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsMarkEntityAsTouched(CBaseEntity*)
 T CBaseEntity::PhysicsNoclip()
 T CBaseEntity::PhysicsNone()
 T CBaseEntity::PhysicsNotifyOtherOfGroundRemoval(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::PhysicsNotifyOtherOfUntouch(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::PhysicsPushEntity(Vector const&, CGameTrace*)
 T CBaseEntity::PhysicsPushMove(float)
 T CBaseEntity::PhysicsPushRotate(float)
 T CBaseEntity::PhysicsPusher()
 T CBaseEntity::PhysicsRelinkChildren(float)
 T CBaseEntity::PhysicsRemoveGroundList(CBaseEntity*)
 T CBaseEntity::PhysicsRemoveTouchedList(CBaseEntity*)
 T CBaseEntity::PhysicsRemoveToucher(CBaseEntity*, touchlink_t*)
 T CBaseEntity::PhysicsRigidChild()
 T CBaseEntity::PhysicsRunSpecificThink(int, void (CBaseEntity::*)())
 T CBaseEntity::PhysicsRunThink(CBaseEntity::thinkmethods_t)
 T CBaseEntity::PhysicsSimulate()
 T CBaseEntity::PhysicsSolidMaskForEntity() const
 T CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)
 T CBaseEntity::PhysicsStep()
 T CBaseEntity::PhysicsStepRecheckGround()
 T CBaseEntity::PhysicsStepRunTimestep(float)
 T CBaseEntity::PhysicsToss()
 T CBaseEntity::PhysicsTouchTriggers(Vector const*)
 T CBaseEntity::PhysicsTryMove(float, CGameTrace*)
 T CBaseEntity::PostClientActive()
 T CBaseEntity::PostClientMessagesSent()
 T CBaseEntity::PostConstructor(char const*)
 T CBaseEntity::Precache()
 T CBaseEntity::PrecacheModel(char const*, bool)
 T CBaseEntity::PrecacheModelComponents(int)
 T CBaseEntity::PrecacheScriptSound(char const*)
 T CBaseEntity::PrefetchScriptSound(char const*)
 T CBaseEntity::ReadKeyField(char const*, variant_t*)
 T CBaseEntity::RecalcHasPlayerChildBit()
 T CBaseEntity::RegisterThinkContext(char const*)
 T CBaseEntity::Remove()
 T CBaseEntity::RemoveAllDecals()
 T CBaseEntity::RemoveDeferred()
 T CBaseEntity::RemoveFlag(int)
 T CBaseEntity::RemoveRecipientsIfNotCloseCaptioning(CRecipientFilter&)
 T CBaseEntity::RequiredEdictIndex()
 T CBaseEntity::ResolveFlyCollisionBounce(CGameTrace&, Vector&, float)
 T CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
 T CBaseEntity::ResolveFlyCollisionSlide(CGameTrace&, Vector&)
 T CBaseEntity::Respawn()
 T CBaseEntity::Restore(IRestore&)
 T CBaseEntity::RunOnPostSpawnScripts()
 T CBaseEntity::RunPrecacheScripts()
 T CBaseEntity::RunScript(char const*, char const*)
 T CBaseEntity::RunVScripts()
 T CBaseEntity::SUB_AllowedToFade()
 T CBaseEntity::SUB_CallUseToggle()
 T CBaseEntity::SUB_DoNothing()
 T CBaseEntity::SUB_FadeOut()
 T CBaseEntity::SUB_PerformFadeOut()
 T CBaseEntity::SUB_Remove()
 T CBaseEntity::SUB_StartFadeOut(float, bool)
 T CBaseEntity::SUB_StartFadeOutInstant()
 T CBaseEntity::SUB_Vanish()
 T CBaseEntity::Save(ISave&)
 T CBaseEntity::ScriptEmitSound(char const*)
 T CBaseEntity::ScriptEyePosition()
 T CBaseEntity::ScriptFirstMoveChild()
 T CBaseEntity::ScriptGetAngles()
 T CBaseEntity::ScriptGetBoundingMaxs()
 T CBaseEntity::ScriptGetBoundingMins()
 T CBaseEntity::ScriptGetForward()
 T CBaseEntity::ScriptGetLeft()
 T CBaseEntity::ScriptGetLocalAngularVelocity()
 T CBaseEntity::ScriptGetModelKeyValues()
 T CBaseEntity::ScriptGetModelName() const
 T CBaseEntity::ScriptGetMoveParent()
 T CBaseEntity::ScriptGetRootMoveParent()
 T CBaseEntity::ScriptGetUp()
 T CBaseEntity::ScriptNextMovePeer()
 T CBaseEntity::ScriptSetAngles(float, float, float)
 T CBaseEntity::ScriptSetForward(Vector const&)
 T CBaseEntity::ScriptSetLocalAngularVelocity(float, float, float)
 T CBaseEntity::ScriptSetOrigin(Vector const&)
 T CBaseEntity::ScriptSetOwner(HSCRIPT__*)
 T CBaseEntity::ScriptSetSize(Vector const&, Vector const&)
 T CBaseEntity::ScriptSoundDuration(char const*, char const*)
 T CBaseEntity::ScriptThink()
 T CBaseEntity::ScriptUtilRemove()
 T CBaseEntity::SendDebugPivotOverlay()
 T CBaseEntity::SendOnKilledGameEvent(CTakeDamageInfo const&)
 T CBaseEntity::SendProxy_CellOrigin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellX(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellY(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellZ(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SetAIWalkable(bool)
 T CBaseEntity::SetAbsAngles(QAngle const&)
 T CBaseEntity::SetAbsOrigin(Vector const&)
 T CBaseEntity::SetAbsVelocity(Vector const&)
 T CBaseEntity::SetAllowPrecache(bool)
 T CBaseEntity::SetBlocksLOS(bool)
 T CBaseEntity::SetCellBits(int)
 T CBaseEntity::SetCheckUntouch(bool)
 T CBaseEntity::SetClassname(char const*)
 T CBaseEntity::SetCollisionBounds(Vector const&, Vector const&)
 T CBaseEntity::SetCollisionGroup(int)
 T CBaseEntity::SetDamage(float)
 T CBaseEntity::SetEffectEntity(CBaseEntity*)
 T CBaseEntity::SetEffects(int)
 T CBaseEntity::SetFriction(float)
 T CBaseEntity::SetGlobalFadeScale(float)
 T CBaseEntity::SetGroundChangeTime(float)
 T CBaseEntity::SetGroundEntity(CBaseEntity*)
 T CBaseEntity::SetHealth(int)
 T CBaseEntity::SetIsSpotted(bool)
 T CBaseEntity::SetIsSpottedBy(int)
 T CBaseEntity::SetLastThink(int, float)
 T CBaseEntity::SetLocalAngles(QAngle const&)
 T CBaseEntity::SetLocalAngularVelocity(QAngle const&)
 T CBaseEntity::SetLocalOrigin(Vector const&)
 T CBaseEntity::SetLocalVelocity(Vector const&)
 T CBaseEntity::SetMaxHealth(int)
 T CBaseEntity::SetModel(char const*)
 T CBaseEntity::SetModelIndex(int)
 T CBaseEntity::SetMoveDoneTime(float)
 T CBaseEntity::SetMoveType(MoveType_t, MoveCollide_t)
 T CBaseEntity::SetNetworkQuantizeOriginAngAngles(bool)
 T CBaseEntity::SetNextThink(float, char const*)
 T CBaseEntity::SetNextThink(int, float)
 T CBaseEntity::SetOwnerEntity(CBaseEntity*)
 T CBaseEntity::SetParent(CBaseEntity*, int)
 T CBaseEntity::SetParent(string_t, CBaseEntity*, int)
 T CBaseEntity::SetParentAttachment(char const*, char const*, bool)
 T CBaseEntity::SetPendingTeamNum(int)
 T CBaseEntity::SetPredictionEligible(bool)
 T CBaseEntity::SetPredictionRandomSeed(CUserCmd const*)
 T CBaseEntity::SetRefEHandle(CBaseHandle const&)
 T CBaseEntity::SetScriptOwnerEntity(HSCRIPT__*)
 T CBaseEntity::SetShadowCastDistance(float, float)
 T CBaseEntity::SetSize(Vector const&, Vector const&)
 T CBaseEntity::SetSpotRules(int)
 T CBaseEntity::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseEntity::SetTransmitState(int)
 T CBaseEntity::SetViewOffset(Vector const&)
 T CBaseEntity::SetWaterType(int)
 T CBaseEntity::ShadowCastDistThink()
 T CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
 T CBaseEntity::ShouldCollide(int, int) const
 T CBaseEntity::ShouldDrawWaterImpacts()
 T CBaseEntity::ShouldSavePhysics()
 T CBaseEntity::ShouldToggle(USE_TYPE, int)
 T CBaseEntity::ShouldTransmit(CCheckTransmitInfo const*)
 T CBaseEntity::SimulateAngles(float)
 T CBaseEntity::Spawn()
 T CBaseEntity::Splash()
 T CBaseEntity::StartBlocked(CBaseEntity*)
 T CBaseEntity::StartTouch(CBaseEntity*)
 T CBaseEntity::StepSimulationThink(float)
 T CBaseEntity::StopFollowingEntity()
 T CBaseEntity::StopLoopingSounds()
 T CBaseEntity::StopSound(char const*)
 T CBaseEntity::StopSound(int, char const*)
 T CBaseEntity::StopSound(int, int, char const*, bool)
 T CBaseEntity::TakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::TakeHealth(float, int)
 T CBaseEntity::TeamID() const
 T CBaseEntity::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseEntity::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseEntity::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseEntity::Think()
 T CBaseEntity::ThinkSet(void (CBaseEntity::*)(), float, char const*)
 T CBaseEntity::ToggleFlag(int)
 T CBaseEntity::Touch(CBaseEntity*)
 T CBaseEntity::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBaseEntity::TraceAttackToTriggers(CTakeDamageInfo const&, Vector const&, Vector const&, Vector const&)
 T CBaseEntity::TraceBleed(float, Vector const&, CGameTrace*, int)
 T CBaseEntity::UnsetPlayerSimulated()
 T CBaseEntity::UpdateBaseVelocity()
 T CBaseEntity::UpdateCell()
 T CBaseEntity::UpdateOnRemove()
 T CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
 T CBaseEntity::UpdateShotStatistics(CGameTrace const&)
 T CBaseEntity::UpdateTransmitState()
 T CBaseEntity::UpdateWaterState()
 T CBaseEntity::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBaseEntity::VPhysicsDestroyObject()
 T CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CBaseEntity::VPhysicsInitNormal(SolidType_t, int, bool, solid_t*)
 T CBaseEntity::VPhysicsInitShadow(bool, bool, solid_t*)
 T CBaseEntity::VPhysicsInitStatic()
 T CBaseEntity::VPhysicsIsFlesh()
 T CBaseEntity::VPhysicsSetObject(IPhysicsObject*)
 T CBaseEntity::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)
 T CBaseEntity::VPhysicsSwapObject(IPhysicsObject*)
 T CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::VPhysicsUpdate(IPhysicsObject*)
 T CBaseEntity::VPhysicsUpdatePusher(IPhysicsObject*)
 T CBaseEntity::VScriptPrecacheScriptSound(char const*)
 T CBaseEntity::ValidateScriptScope()
 T CBaseEntity::ViewPunch(QAngle const&)
 T CBaseEntity::WakeRestingObjects()
 T CBaseEntity::WorldSpaceCenter() const
 T CBaseEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseEntity::entindex() const
 T CBaseEntity::operator delete(void*)
 T CBaseEntity::operator new(unsigned long)
 T CBaseEntity::~CBaseEntity()
 T CBaseEntityClassList::CBaseEntityClassList()
 T CBaseEntityClassList::~CBaseEntityClassList()
 T CBaseEntityList::AddEntityAtSlot(IHandleEntity*, int, int)
 T CBaseEntityList::AddNetworkableEntity(IHandleEntity*, int, int)
 T CBaseEntityList::AddNonNetworkableEntity(IHandleEntity*)
 T CBaseEntityList::CBaseEntityList()
 T CBaseEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::RemoveEntity(CBaseHandle)
 T CBaseEntityList::RemoveEntityAtSlot(int)
 T CBaseEntityList::~CBaseEntityList()
 T CBaseEntityOutput::AddEventAction(CEventAction*)
 T CBaseEntityOutput::FireOutput(variant_t, CBaseEntity*, CBaseEntity*, float)
 T CBaseEntityOutput::GetMaxDelay()
 T CBaseEntityOutput::NumberOfElements()
 T CBaseEntityOutput::RemoveEventAction(CEventAction*)
 T CBaseEntityOutput::Restore(IRestore&, int)
 T CBaseEntityOutput::~CBaseEntityOutput()
 T CBaseEntityScriptInstanceHelper::BindOnRead(HSCRIPT__*, void*, char const*)
 T CBaseEntityScriptInstanceHelper::ToString(void*, char*, int)
 T CBaseFilter::GetDataDescMap()
 T CBaseFilter::InputTestActivator(inputdata_t&)
 T CBaseFilter::PassesDamageFilter(CTakeDamageInfo const&)
 T CBaseFilter::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CBaseFilter::PassesFilter(CBaseEntity*, CBaseEntity*)
 T CBaseFilter::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CBaseFilter::~CBaseFilter()
 T CBaseFire::CBaseFire()
 T CBaseFire::Enable(int)
 T CBaseFire::GetDataDescMap()
 T CBaseFire::Scale(float, float)
 T CBaseFire::Scale(float, float, float)
 T CBaseFire::~CBaseFire()
 T CBaseFlex::AddFlexAnimation(CSceneEventInfo*)
 T CBaseFlex::AddFlexSetting(char const*, float, flexsettinghdr_t const*, bool)
 T CBaseFlex::AddSceneEvent(CChoreoScene*, CChoreoEvent*, CBaseEntity*, CSceneEntity*)
 T CBaseFlex::CBaseFlex()
 T CBaseFlex::CheckSceneEvent(float, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)
 T CBaseFlex::ClearSceneEvents(CChoreoScene*, bool)
 T CBaseFlex::DoBodyLean()
 T CBaseFlex::EnsureTranslations(flexsettinghdr_t const*)
 T CBaseFlex::EnterSceneSequence(CChoreoScene*, CChoreoEvent*, bool)
 T CBaseFlex::FindFlexController(char const*)
 T CBaseFlex::FindSceneFile(char const*)
 T CBaseFlex::FlexControllerLocalToGlobal(flexsettinghdr_t const*, int)
 T CBaseFlex::FlexSettingLessFunc(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&)
 T CBaseFlex::GetDataDescMap()
 T CBaseFlex::GetFlexWeight(LocalFlexController_t)
 T CBaseFlex::GetScriptDesc()
 T CBaseFlex::GetServerClass()
 T CBaseFlex::HandleStartGestureSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*)
 T CBaseFlex::HandleStartSequenceSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*)
 T CBaseFlex::OnNewModel()
 T CBaseFlex::PermitResponse(float)
 T CBaseFlex::PlayAutoGeneratedSoundScene(char const*)
 T CBaseFlex::PlayScene(char const*, float, ResponseRules::CRR_Response*, IRecipientFilter*)
 T CBaseFlex::ProcessFacingSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessFlexAnimationSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessFlexSettingSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessGestureSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessLookAtSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessMoveToSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessSceneEvents()
 T CBaseFlex::ProcessSequenceSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::RemoveChoreoScene(CChoreoScene*, bool)
 T CBaseFlex::RemoveSceneEvent(CChoreoScene*, CChoreoEvent*, bool)
 T CBaseFlex::ScriptGetOldestScene()
 T CBaseFlex::ScriptGetSceneByIndex(int)
 T CBaseFlex::ScriptPlayScene(char const*, float)
 T CBaseFlex::SetFlexWeight(LocalFlexController_t, float)
 T CBaseFlex::SetModel(char const*)
 T CBaseFlex::SetPermitResponse(float)
 T CBaseFlex::SetViewtarget(Vector const&)
 T CBaseFlex::StartChoreoScene(CChoreoScene*)
 T CBaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
 T CBaseFlex::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseFlex::YouForgotToImplementOrDeclareServerClass()
 T CBaseFlex::~CBaseFlex()
 T CBaseGameStats::AddDataForSend(KeyValues*, StatSendType_t)
 T CBaseGameStats::AppendCustomDataToSaveBuffer(CUtlBuffer&)
 T CBaseGameStats::AutoSave_OnInit()
 T CBaseGameStats::AutoSave_OnLevelInit()
 T CBaseGameStats::AutoSave_OnLevelShutdown()
 T CBaseGameStats::AutoSave_OnMapChange()
 T CBaseGameStats::AutoSave_OnShutdown()
 T CBaseGameStats::AutoUpload_OnInit()
 T CBaseGameStats::AutoUpload_OnLevelInit()
 T CBaseGameStats::AutoUpload_OnLevelShutdown()
 T CBaseGameStats::AutoUpload_OnMapChange()
 T CBaseGameStats::AutoUpload_OnShutdown()
 T CBaseGameStats::CBaseGameStats()
 T CBaseGameStats::Clear()
 T CBaseGameStats::Event_Commentary()
 T CBaseGameStats::Event_CrateSmashed()
 T CBaseGameStats::Event_Credits()
 T CBaseGameStats::Event_DecrementPlayerEnteredNoClip(CBasePlayer*)
 T CBaseGameStats::Event_FlippedVehicle(CBasePlayer*, CPropVehicleDriveable*)
 T CBaseGameStats::Event_IncrementCountedStatistic(Vector const&, char const*, float)
 T CBaseGameStats::Event_Init()
 T CBaseGameStats::Event_LevelInit()
 T CBaseGameStats::Event_LevelShutdown(float)
 T CBaseGameStats::Event_LoadGame()
 T CBaseGameStats::Event_MapChange(char const*, char const*)
 T CBaseGameStats::Event_PlayerConnected(CBasePlayer*)
 T CBaseGameStats::Event_PlayerDamage(CBasePlayer*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerDisconnected(CBasePlayer*)
 T CBaseGameStats::Event_PlayerEnteredGodMode(CBasePlayer*)
 T CBaseGameStats::Event_PlayerEnteredNoClip(CBasePlayer*)
 T CBaseGameStats::Event_PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerKilledOther(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerTraveled(CBasePlayer*, float, bool, bool)
 T CBaseGameStats::Event_PreSaveGameLoaded(char const*, bool)
 T CBaseGameStats::Event_Punted(CBaseEntity*)
 T CBaseGameStats::Event_SaveGame()
 T CBaseGameStats::Event_Shutdown()
 T CBaseGameStats::Event_WeaponFired(CBasePlayer*, bool, char const*)
 T CBaseGameStats::Event_WeaponHit(CBasePlayer*, bool, char const*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_WindowShattered(CBasePlayer*)
 T CBaseGameStats::GetStatSaveFileName()
 T CBaseGameStats::GetStatUploadRegistryKeyName()
 T CBaseGameStats::HaveValidData()
 T CBaseGameStats::LoadCustomDataFromBuffer(CUtlBuffer&)
 T CBaseGameStats::LoadFromFile()
 T CBaseGameStats::LoadingEvent_PlayerIDDifferentThanLoadedStats()
 T CBaseGameStats::OnInit(CBaseGameStats*, char const*)
 T CBaseGameStats::SaveToFileNOW(bool)
 T CBaseGameStats::ShouldSendDataOnAppShutdown()
 T CBaseGameStats::ShouldSendDataOnLevelShutdown()
 T CBaseGameStats::ShouldTrackStandardStats()
 T CBaseGameStats::StatTrackingEnabledForMod()
 T CBaseGameStats::StatsLog(char const*, ...)
 T CBaseGameStats::UploadStatsFileNOW()
 T CBaseGameStats::UseOldFormat()
 T CBaseGameStats::UserPlayedAllTheMaps()
 T CBaseGameStats::~CBaseGameStats()
 T CBaseGameStats_Driver::CBaseGameStats_Driver()
 T CBaseGameStats_Driver::CollectData(StatSendType_t)
 T CBaseGameStats_Driver::FrameUpdatePostEntityThink()
 T CBaseGameStats_Driver::Init()
 T CBaseGameStats_Driver::LevelInitPreEntity()
 T CBaseGameStats_Driver::LevelShutdownPreEntity()
 T CBaseGameStats_Driver::OnRestore()
 T CBaseGameStats_Driver::OnSave()
 T CBaseGameStats_Driver::PossibleMapChange()
 T CBaseGameStats_Driver::ResetData()
 T CBaseGameStats_Driver::SendData()
 T CBaseGameStats_Driver::Shutdown()
 T CBaseGameStats_Driver::~CBaseGameStats_Driver()
 T CBaseGameSystem::FrameUpdatePostEntityThink()
 T CBaseGameSystem::FrameUpdatePreEntityThink()
 T CBaseGameSystem::Init()
 T CBaseGameSystem::IsPerFrame()
 T CBaseGameSystem::LevelInitPostEntity()
 T CBaseGameSystem::LevelInitPreEntity()
 T CBaseGameSystem::LevelShutdownPostEntity()
 T CBaseGameSystem::LevelShutdownPreEntity()
 T CBaseGameSystem::Name()
 T CBaseGameSystem::OnRestore()
 T CBaseGameSystem::OnSave()
 T CBaseGameSystem::PostInit()
 T CBaseGameSystem::PreClientUpdate()
 T CBaseGameSystem::SafeRemoveIfDesired()
 T CBaseGameSystem::Shutdown()
 T CBaseGameSystemPerFrame::FrameUpdatePostEntityThink()
 T CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
 T CBaseGameSystemPerFrame::Init()
 T CBaseGameSystemPerFrame::IsPerFrame()
 T CBaseGameSystemPerFrame::LevelInitPostEntity()
 T CBaseGameSystemPerFrame::LevelInitPreEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPostEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPreEntity()
 T CBaseGameSystemPerFrame::OnRestore()
 T CBaseGameSystemPerFrame::OnSave()
 T CBaseGameSystemPerFrame::PostInit()
 T CBaseGameSystemPerFrame::PreClientUpdate()
 T CBaseGameSystemPerFrame::SafeRemoveIfDesired()
 T CBaseGameSystemPerFrame::Shutdown()
 T CBaseGrenade::BloodColor()
 T CBaseGrenade::BounceSound()
 T CBaseGrenade::BounceTouch(CBaseEntity*)
 T CBaseGrenade::CBaseGrenade()
 T CBaseGrenade::DangerSoundThink()
 T CBaseGrenade::Detonate()
 T CBaseGrenade::DetonateUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseGrenade::Event_Killed(CTakeDamageInfo const&)
 T CBaseGrenade::Explode(CGameTrace*, int)
 T CBaseGrenade::ExplodeTouch(CBaseEntity*)
 T CBaseGrenade::GetBlastForce()
 T CBaseGrenade::GetDamage()
 T CBaseGrenade::GetDamageRadius()
 T CBaseGrenade::GetDataDescMap()
 T CBaseGrenade::GetGrenadeType()
 T CBaseGrenade::GetParticleSystemName(int, surfacedata_t*)
 T CBaseGrenade::GetServerClass()
 T CBaseGrenade::GetShakeAmplitude()
 T CBaseGrenade::GetShakeRadius()
 T CBaseGrenade::GetThrower()
 T CBaseGrenade::NetworkStateChanged_m_fFlags()
 T CBaseGrenade::NetworkStateChanged_m_fFlags(void*)
 T CBaseGrenade::NetworkStateChanged_m_vecVelocity()
 T CBaseGrenade::NetworkStateChanged_m_vecVelocity(void*)
 T CBaseGrenade::ObjectCaps()
 T CBaseGrenade::PreDetonate()
 T CBaseGrenade::Precache()
 T CBaseGrenade::SetDamage(float)
 T CBaseGrenade::SetDamageRadius(float)
 T CBaseGrenade::SetThrower(CBaseCombatCharacter*)
 T CBaseGrenade::SlideTouch(CBaseEntity*)
 T CBaseGrenade::Smoke()
 T CBaseGrenade::TumbleThink()
 T CBaseGrenade::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseGrenade::YouForgotToImplementOrDeclareServerClass()
 T CBaseGrenade::~CBaseGrenade()
 T CBaseIssue::CBaseIssue(char const*)
 T CBaseIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CBaseIssue::CanTeamCallVote(int) const
 T CBaseIssue::CountPotentialVoters()
 T CBaseIssue::GetCommandDelay()
 T CBaseIssue::GetDetailsString()
 T CBaseIssue::GetFailedVoteLockOutTime()
 T CBaseIssue::GetNumberVoteOptions()
 T CBaseIssue::GetTypeString()
 T CBaseIssue::GetVoteIssue()
 T CBaseIssue::GetVoteOptions(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T CBaseIssue::GetVotePassedString()
 T CBaseIssue::GetVotesRequiredToPass()
 T CBaseIssue::IsAllyRestrictedVote()
 T CBaseIssue::IsEnabled()
 T CBaseIssue::IsEnabledDuringWarmup()
 T CBaseIssue::IsEnabledInQueuedMatchmaking()
 T CBaseIssue::IsUnanimousVoteToPass()
 T CBaseIssue::IsYesNoVote()
 T CBaseIssue::ListStandardNoArgCommand(CBasePlayer*, char const*)
 T CBaseIssue::MakeVoteFailErrorCodeForClients(vote_create_failed_t)
 T CBaseIssue::OnVoteFailed()
 T CBaseIssue::OnVoteStarted()
 T CBaseIssue::SetIssueDetails(char const*)
 T CBaseIssue::SetYesNoVoteCount(int, int, int)
 T CBaseIssue::ShouldIgnoreCreationTimer()
 T CBaseIssue::~CBaseIssue()
 T CBaseMoveBehavior::Activate()
 T CBaseMoveBehavior::GetDataDescMap()
 T CBaseMoveBehavior::IsMoving()
 T CBaseMoveBehavior::MoveDone()
 T CBaseMoveBehavior::Spawn()
 T CBaseMoveBehavior::StartMoving(int)
 T CBaseMoveBehavior::StopMoving()
 T CBaseMoveBehavior::~CBaseMoveBehavior()
 T CBaseMultiplayerPlayer::AwardAchievement(int, int)
 T CBaseMultiplayerPlayer::CBaseMultiplayerPlayer()
 T CBaseMultiplayerPlayer::CalculateTeamBalanceScore()
 T CBaseMultiplayerPlayer::CanHearAndReadChatFrom(CBasePlayer*)
 T CBaseMultiplayerPlayer::CanSpeak()
 T CBaseMultiplayerPlayer::CanSpeakVoiceCommand()
 T CBaseMultiplayerPlayer::ClientCommand(CCommand const&)
 T CBaseMultiplayerPlayer::CreateExpresser()
 T CBaseMultiplayerPlayer::GetExpresser()
 T CBaseMultiplayerPlayer::GetMultiplayerExpresser()
 T CBaseMultiplayerPlayer::GetScriptDesc()
 T CBaseMultiplayerPlayer::GetSteamID(CSteamID*)
 T CBaseMultiplayerPlayer::GetSteamIDAsUInt64()
 T CBaseMultiplayerPlayer::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseMultiplayerPlayer::NoteSpokeVoiceCommand(char const*)
 T CBaseMultiplayerPlayer::OnAchievementEarned(int)
 T CBaseMultiplayerPlayer::PostConstructor(char const*)
 T CBaseMultiplayerPlayer::Precache()
 T CBaseMultiplayerPlayer::ShouldShowVoiceSubtitleToEnemy()
 T CBaseMultiplayerPlayer::Spawn()
 T CBaseMultiplayerPlayer::SpeakConceptIfAllowed(int, char const*, char*, unsigned long, IRecipientFilter*)
 T CBaseMultiplayerPlayer::SpeakIfAllowed(CAI_Concept, SpeechPriorityType, char const*, char*, unsigned long, IRecipientFilter*)
 T CBaseMultiplayerPlayer::~CBaseMultiplayerPlayer()
 T CBaseParticleEntity::Activate()
 T CBaseParticleEntity::CBaseParticleEntity()
 T CBaseParticleEntity::FollowEntity(CBaseEntity*)
 T CBaseParticleEntity::GetServerClass()
 T CBaseParticleEntity::Think()
 T CBaseParticleEntity::UpdateTransmitState()
 T CBaseParticleEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseParticleEntity::~CBaseParticleEntity()
 T CBasePlatTrain::GetDataDescMap()
 T CBasePlatTrain::IsTogglePlat()
 T CBasePlatTrain::KeyValue(char const*, char const*)
 T CBasePlatTrain::PlayMovingSound()
 T CBasePlatTrain::Precache()
 T CBasePlatTrain::~CBasePlatTrain()
 T CBasePlayer::Activate()
 T CBasePlayer::ActivateMovementConstraint(CBaseEntity*, Vector const&, float, float, float, bool)
 T CBasePlayer::ActivePlayerCombatCharacter()
 T CBasePlayer::AddPoints(int, bool)
 T CBasePlayer::AddPointsToTeam(int, bool)
 T CBasePlayer::AddSplitScreenPlayer(CBasePlayer*)
 T CBasePlayer::AdjustPlayerTimeBase(int)
 T CBasePlayer::AllowImmediateDecalPainting()
 T CBasePlayer::AttemptToExitFreezeCam()
 T CBasePlayer::AutoaimDeflection(Vector&, autoaim_params_t&)
 T CBasePlayer::AvoidPhysicsProps(CUserCmd*)
 T CBasePlayer::BodyAngles()
 T CBasePlayer::BodyTarget(Vector const&, bool)
 T CBasePlayer::BumpWeapon(CBaseCombatWeapon*)
 T CBasePlayer::CBasePlayer()
 T CBasePlayer::CacheVehicleView()
 T CBasePlayer::CalcPlayerView(Vector&, QAngle&, float&)
 T CBasePlayer::CalcRoll(QAngle const&, Vector const&, float, float)
 T CBasePlayer::CalcViewBob(Vector&)
 T CBasePlayer::CalcViewRoll(QAngle&)
 T CBasePlayer::CanBreatheUnderwater() const
 T CBasePlayer::CanEnterVehicle(IServerVehicle*, int)
 T CBasePlayer::CanHearAndReadChatFrom(CBasePlayer*)
 T CBasePlayer::CanKickFromTeam(int)
 T CBasePlayer::CanPickupObject(CBaseEntity*, float, float)
 T CBasePlayer::CanRecoverCurrentDrowningDamage() const
 T CBasePlayer::CanSpeak()
 T CBasePlayer::ChangeTeam(int)
 T CBasePlayer::ChangeTeam(int, bool, bool)
 T CBasePlayer::CheatImpulseCommands(int)
 T CBasePlayer::CheckChatText(char*, int)
 T CBasePlayer::CheckObserverSettings()
 T CBasePlayer::CheckSuitUpdate()
 T CBasePlayer::CheckTimeBasedDamage()
 T CBasePlayer::CheckTrainUpdate()
 T CBasePlayer::Classify()
 T CBasePlayer::ClearPlayerSimulationList()
 T CBasePlayer::ClearUseEntity()
 T CBasePlayer::ClearZoomOwner()
 T CBasePlayer::ClientCommand(CCommand const&)
 T CBasePlayer::CommitSuicide(Vector const&, bool, bool)
 T CBasePlayer::CommitSuicide(bool, bool)
 T CBasePlayer::CreateCorpse()
 T CBasePlayer::CreatePlayer(char const*, edict_t*)
 T CBasePlayer::CreateRagdollEntity()
 T CBasePlayer::CreateViewModel(int)
 T CBasePlayer::DamageEffect(float, int)
 T CBasePlayer::DeactivateMovementConstraint()
 T CBasePlayer::DeathSound(CTakeDamageInfo const&)
 T CBasePlayer::DestroyViewModels()
 T CBasePlayer::DoImpactEffect(CGameTrace&, int)
 T CBasePlayer::DoMuzzleFlash()
 T CBasePlayer::DoubleCheckUseNPC(CBaseEntity*, Vector const&, Vector const&)
 T CBasePlayer::DrawDebugGeometryOverlays()
 T CBasePlayer::Duck()
 T CBasePlayer::DumpPerfToRecipient(CBasePlayer*, int)
 T CBasePlayer::EnableControl(bool)
 T CBasePlayer::EnsureSplitScreenTeam()
 T CBasePlayer::EntSelectSpawnPoint()
 T CBasePlayer::EquipSuit(bool)
 T CBasePlayer::Event_Dying()
 T CBasePlayer::Event_Killed(CTakeDamageInfo const&)
 T CBasePlayer::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBasePlayer::ExitLadder()
 T CBasePlayer::EyeAngles()
 T CBasePlayer::EyePosition()
 T CBasePlayer::EyePositionAndVectors(Vector*, Vector*, Vector*, Vector*)
 T CBasePlayer::EyeVectors(Vector*, Vector*, Vector*)
 T CBasePlayer::FindEntityClassForward(char*)
 T CBasePlayer::FindEntityForward(bool)
 T CBasePlayer::FindNextObserverTarget(bool)
 T CBasePlayer::FindPickerAILink()
 T CBasePlayer::FindPickerAINode(int)
 T CBasePlayer::FindPickerEntity()
 T CBasePlayer::FindPickerEntityClass(char*)
 T CBasePlayer::FindUseEntity()
 T CBasePlayer::FlashlightIsOn()
 T CBasePlayer::FlashlightTurnOff(bool)
 T CBasePlayer::FlashlightTurnOn(bool)
 T CBasePlayer::ForceButtons(int)
 T CBasePlayer::ForceChangeTeam(int)
 T CBasePlayer::ForceClientDllUpdate()
 T CBasePlayer::ForceDropOfCarriedPhysObjects(CBaseEntity*)
 T CBasePlayer::ForceObserverMode(int)
 T CBasePlayer::ForceRespawn()
 T CBasePlayer::ForceSimulation()
 T CBasePlayer::GetAimDirection() const
 T CBasePlayer::GetAimPunchAngle()
 T CBasePlayer::GetAssociatedTeamNumber() const
 T CBasePlayer::GetAutoaimScore(Vector const&, Vector const&, Vector const&, CBaseEntity*, float, CBaseCombatWeapon*)
 T CBasePlayer::GetAutoaimVector(autoaim_params_t&)
 T CBasePlayer::GetAutoaimVector(float)
 T CBasePlayer::GetAutoaimVector(float, float)
 T CBasePlayer::GetAutoaimVector(float, float, float, AimResults*)
 T CBasePlayer::GetCharacterDisplayName()
 T CBasePlayer::GetCoachingTeam() const
 T CBasePlayer::GetDataDescMap()
 T CBasePlayer::GetDefaultFOV() const
 T CBasePlayer::GetDelayTicks()
 T CBasePlayer::GetExpresser()
 T CBasePlayer::GetFOV()
 T CBasePlayer::GetFOVDistanceAdjustFactorForNetworking()
 T CBasePlayer::GetFOVForNetworking()
 T CBasePlayer::GetFinalAimAngle()
 T CBasePlayer::GetHeldObjectMass(IPhysicsObject*)
 T CBasePlayer::GetInVehicle(IServerVehicle*, int)
 T CBasePlayer::GetLadderSurface(Vector const&)
 T CBasePlayer::GetLastKnownArea() const
 T CBasePlayer::GetNetworkIDString()
 T CBasePlayer::GetNextObserverSearchStartPoint(bool)
 T CBasePlayer::GetObserverMode()
 T CBasePlayer::GetObserverTarget()
 T CBasePlayer::GetPhysicsImpactDamageTable()
 T CBasePlayer::GetPlayerMaxSpeed()
 T CBasePlayer::GetPlayerMaxs() const
 T CBasePlayer::GetPlayerMins() const
 T CBasePlayer::GetPlayerModelName()
 T CBasePlayer::GetPlayerName() const
 T CBasePlayer::GetPotentialUseEntity()
 T CBasePlayer::GetPreviouslyPredictedOrigin() const
 T CBasePlayer::GetReplayEntity()
 T CBasePlayer::GetScriptDesc()
 T CBasePlayer::GetServerClass()
 T CBasePlayer::GetSmoothedVelocity()
 T CBasePlayer::GetSoundscapeListener()
 T CBasePlayer::GetSplitScreenAndPictureInPicturePlayers()
 T CBasePlayer::GetSplitScreenPlayerOwner()
 T CBasePlayer::GetSplitScreenPlayers()
 T CBasePlayer::GetSteamID(CSteamID*)
 T CBasePlayer::GetSteamIDAsUInt64()
 T CBasePlayer::GetStepSoundVelocities(float*, float*)
 T CBasePlayer::GetTimeBase() const
 T CBasePlayer::GetTracerType()
 T CBasePlayer::GetUseEntity()
 T CBasePlayer::GetVehicle()
 T CBasePlayer::GetVehicleEntity()
 T CBasePlayer::GetViewModel(int)
 T CBasePlayer::GetViewPunchAngle()
 T CBasePlayer::GetWaterJumpTime() const
 T CBasePlayer::GiveNamedItem(char const*, int, CEconItemView*, bool)
 T CBasePlayer::HandleAnimEvent(animevent_t*)
 T CBasePlayer::HandleFuncTrain()
 T CBasePlayer::HandleVoteCommands(CCommand const&)
 T CBasePlayer::HasUnlockableWeapons(int)
 T CBasePlayer::HasWeapons()
 T CBasePlayer::HideViewModels()
 T CBasePlayer::Hints()
 T CBasePlayer::ImpulseCommands()
 T CBasePlayer::IncrementAssistsCount(int)
 T CBasePlayer::IncrementDeathCount(int)
 T CBasePlayer::IncrementEFNoInterpParity()
 T CBasePlayer::IncrementFragCount(int, int)
 T CBasePlayer::InitColorCorrectionController()
 T CBasePlayer::InitFogController()
 T CBasePlayer::InitHUD()
 T CBasePlayer::InitPostProcessController()
 T CBasePlayer::InitVCollision(Vector const&, Vector const&)
 T CBasePlayer::InitialSpawn()
 T CBasePlayer::InputSetFogController(inputdata_t&)
 T CBasePlayer::InputSetHUDVisibility(inputdata_t&)
 T CBasePlayer::InputSetHealth(inputdata_t&)
 T CBasePlayer::IsBot() const
 T CBasePlayer::IsCoach() const
 T CBasePlayer::IsDead() const
 T CBasePlayer::IsFakeClient() const
 T CBasePlayer::IsFollowingPhysics()
 T CBasePlayer::IsIlluminatedByFlashlight(CBaseEntity*, float*)
 T CBasePlayer::IsInAVehicle() const
 T CBasePlayer::IsNetClient() const
 T CBasePlayer::IsOnLadder()
 T CBasePlayer::IsPlayer() const
 T CBasePlayer::IsReadyToPlay()
 T CBasePlayer::IsReadyToSpawn()
 T CBasePlayer::IsRunning() const
 T CBasePlayer::IsSpectator() const
 T CBasePlayer::IsSplitScreenPlayer() const
 T CBasePlayer::IsSplitScreenUserOnEdict(edict_t*)
 T CBasePlayer::IsUseableEntity(CBaseEntity*, unsigned int)
 T CBasePlayer::IsValidObserverTarget(CBaseEntity*)
 T CBasePlayer::ItemPostFrame()
 T CBasePlayer::ItemPreFrame()
 T CBasePlayer::Jump()
 T CBasePlayer::JumptoPosition(Vector const&, QAngle const&)
 T CBasePlayer::LeaveVehicle(Vector const&, QAngle const&)
 T CBasePlayer::LocalEyeAngles()
 T CBasePlayer::LockPlayerInPlace()
 T CBasePlayer::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBasePlayer::ModeWantsSpectatorGUI(int)
 T CBasePlayer::ModifyOrAppendPlayerCriteria(ResponseRules::CriteriaSet&)
 T CBasePlayer::NetworkStateChanged_m_ArmorValue()
 T CBasePlayer::NetworkStateChanged_m_ArmorValue(void*)
 T CBasePlayer::NetworkStateChanged_m_fFlags()
 T CBasePlayer::NetworkStateChanged_m_fFlags(void*)
 T CBasePlayer::NetworkStateChanged_m_flFriction()
 T CBasePlayer::NetworkStateChanged_m_flFriction(void*)
 T CBasePlayer::NetworkStateChanged_m_hGroundEntity()
 T CBasePlayer::NetworkStateChanged_m_hGroundEntity(void*)
 T CBasePlayer::NetworkStateChanged_m_iAmmo()
 T CBasePlayer::NetworkStateChanged_m_iAmmo(void*)
 T CBasePlayer::NetworkStateChanged_m_iHealth()
 T CBasePlayer::NetworkStateChanged_m_iHealth(void*)
 T CBasePlayer::NetworkStateChanged_m_lifeState()
 T CBasePlayer::NetworkStateChanged_m_lifeState(void*)
 T CBasePlayer::NetworkStateChanged_m_nNextThinkTick()
 T CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBasePlayer::NetworkStateChanged_m_nWaterLevel()
 T CBasePlayer::NetworkStateChanged_m_nWaterLevel(void*)
 T CBasePlayer::NetworkStateChanged_m_vecBaseVelocity()
 T CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void*)
 T CBasePlayer::NetworkStateChanged_m_vecVelocity()
 T CBasePlayer::NetworkStateChanged_m_vecVelocity(void*)
 T CBasePlayer::NetworkStateChanged_m_vecViewOffset()
 T CBasePlayer::NetworkStateChanged_m_vecViewOffset(void*)
 T CBasePlayer::NetworkVar_m_Local::NetworkStateChanged()
 T CBasePlayer::NetworkVar_m_Local::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_m_PlayerFog::NetworkStateChanged()
 T CBasePlayer::NetworkVar_m_PlayerFog::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_pl::NetworkStateChanged()
 T CBasePlayer::NetworkVar_pl::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_pl::~NetworkVar_pl()
 T CBasePlayer::NoClipStateChanged()
 T CBasePlayer::NotifyNearbyRadiationSource(float)
 T CBasePlayer::ObjectCaps()
 T CBasePlayer::ObserverUse(bool)
 T CBasePlayer::OnDamagedByExplosion(CTakeDamageInfo const&)
 T CBasePlayer::OnMainActivityComplete(Activity, Activity)
 T CBasePlayer::OnMainActivityInterrupted(Activity, Activity)
 T CBasePlayer::OnRestore()
 T CBasePlayer::OnSpeak(CBasePlayer*, char const*, float)
 T CBasePlayer::OnSwitchWeapons(CBaseCombatWeapon*)
 T CBasePlayer::OnTakeDamage(CTakeDamageInfo const&)
 T CBasePlayer::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CBasePlayer::OnTonemapTriggerEndTouch(CTonemapTrigger*)
 T CBasePlayer::OnTonemapTriggerStartTouch(CTonemapTrigger*)
 T CBasePlayer::OnVehicleEnd(Vector&)
 T CBasePlayer::OnVehicleStart()
 T CBasePlayer::OnVoiceTransmit()
 T CBasePlayer::PackDeadPlayerItems()
 T CBasePlayer::PassesObserverFilter(CBaseEntity const*)
 T CBasePlayer::PhysicsSimulate()
 T CBasePlayer::PhysicsSolidMaskForEntity() const
 T CBasePlayer::PickupObject(CBaseEntity*, bool)
 T CBasePlayer::PlayStepSound(Vector&, surfacedata_t*, float, bool)
 T CBasePlayer::PlayUseDenySound()
 T CBasePlayer::PlayerDeathThink()
 T CBasePlayer::PlayerForceTeamThink()
 T CBasePlayer::PlayerRunCommand(CUserCmd*, IMoveHelper*)
 T CBasePlayer::PlayerSolidMask(bool) const
 T CBasePlayer::PlayerUse()
 T CBasePlayer::PostSpawnPointSelection()
 T CBasePlayer::PostThink()
 T CBasePlayer::PostThinkVPhysics()
 T CBasePlayer::PreThink()
 T CBasePlayer::Precache()
 T CBasePlayer::PrepareForFullUpdate()
 T CBasePlayer::ProcessUsercmds(CUserCmd*, int, int, int, bool)
 T CBasePlayer::PropagatePunchAnglesToObservers()
 T CBasePlayer::RemoveAllCommandContextsExceptNewest()
 T CBasePlayer::RemoveAllItems(bool)
 T CBasePlayer::RemoveFromPlayerSimulationList(CBaseEntity*)
 T CBasePlayer::RemovePlayerItem(CBaseCombatWeapon*)
 T CBasePlayer::RemoveSplitScreenPlayer(CBasePlayer*)
 T CBasePlayer::RemoveSuit()
 T CBasePlayer::RequiredEdictIndex()
 T CBasePlayer::ResetAssistsCount()
 T CBasePlayer::ResetAutoaim()
 T CBasePlayer::ResetDeathCount()
 T CBasePlayer::ResetFragCount()
 T CBasePlayer::ResetObserverMode()
 T CBasePlayer::ResetPerRoundStats()
 T CBasePlayer::ResetScores()
 T CBasePlayer::Restore(IRestore&)
 T CBasePlayer::RumbleEffect(unsigned char, unsigned char, unsigned char)
 T CBasePlayer::RunNullCommand()
 T CBasePlayer::Save(ISave&)
 T CBasePlayer::ScriptIsPlayerNoclipping()
 T CBasePlayer::SelectItem(char const*, int)
 T CBasePlayer::SelectLastItem()
 T CBasePlayer::SetActiveCameraMan(bool)
 T CBasePlayer::SetAimDirection(Vector const&)
 T CBasePlayer::SetAimPunchAngle(QAngle const&)
 T CBasePlayer::SetAimPunchAngleVelocity(QAngle const&)
 T CBasePlayer::SetAnimation(PLAYER_ANIM)
 T CBasePlayer::SetAnimationExtension(char const*)
 T CBasePlayer::SetArmorValue(int)
 T CBasePlayer::SetBodyPitch(float)
 T CBasePlayer::SetCrossPlayPlatform(CrossPlayPlatform_t)
 T CBasePlayer::SetDefaultFOV(int)
 T CBasePlayer::SetEyeAngleOffset(QAngle const&)
 T CBasePlayer::SetEyeOffset(Vector const&)
 T CBasePlayer::SetFOV(CBaseEntity*, int, float, int)
 T CBasePlayer::SetFlashlightEnabled(bool)
 T CBasePlayer::SetFogController(CFogController*)
 T CBasePlayer::SetLadderNormal(Vector)
 T CBasePlayer::SetLaggedMovementValue(float)
 T CBasePlayer::SetMaxSpeed(float)
 T CBasePlayer::SetModel(char const*)
 T CBasePlayer::SetObserverMode(int)
 T CBasePlayer::SetObserverTarget(CBaseEntity*)
 T CBasePlayer::SetPhysicsFlag(int, bool)
 T CBasePlayer::SetPlayerName(char const*)
 T CBasePlayer::SetPlayerUnderwater(bool)
 T CBasePlayer::SetPreviouslyPredictedOrigin(Vector const&)
 T CBasePlayer::SetSplitScreenPlayer(bool, CBasePlayer*)
 T CBasePlayer::SetStepSoundTime(stepsoundtimes_t, bool)
 T CBasePlayer::SetSuitUpdate(char*, int, int)
 T CBasePlayer::SetVCollisionState(Vector const&, Vector const&, int)
 T CBasePlayer::SetViewEntity(CBaseEntity*, bool)
 T CBasePlayer::SetViewPunchAngle(QAngle const&)
 T CBasePlayer::SetupVPhysicsShadow(Vector const&, Vector const&, CPhysCollide*, char const*, CPhysCollide*, char const*)
 T CBasePlayer::SetupVisibility(CBaseEntity*, unsigned char*, int)
 T CBasePlayer::SharedSpawn()
 T CBasePlayer::ShouldAnnounceAchievement()
 T CBasePlayer::ShouldAutoaim()
 T CBasePlayer::ShouldFadeOnDeath()
 T CBasePlayer::ShouldGainInstantSpawn()
 T CBasePlayer::ShouldSavePhysics()
 T CBasePlayer::ShouldTakeDamageInCommentaryMode(CTakeDamageInfo const&)
 T CBasePlayer::ShouldThrottleUserMessage(char const*)
 T CBasePlayer::ShouldTransmit(CCheckTransmitInfo const*)
 T CBasePlayer::ShowCrosshair(bool)
 T CBasePlayer::ShowViewPortPanel(char const*, bool, KeyValues*)
 T CBasePlayer::SimulatePlayerSimulatedEntities()
 T CBasePlayer::SmoothViewOnStairs(Vector&)
 T CBasePlayer::SnapEyeAngles(QAngle const&)
 T CBasePlayer::Spawn()
 T CBasePlayer::SpawnArmorValue() const
 T CBasePlayer::SpecLerptoPosition(Vector const&, QAngle const&, float)
 T CBasePlayer::StartObserverMode(int)
 T CBasePlayer::StartReplayMode(float, float, int)
 T CBasePlayer::StopObserverMode()
 T CBasePlayer::StopReplayMode()
 T CBasePlayer::TakeHealth(float, int)
 T CBasePlayer::Touch(CBaseEntity*)
 T CBasePlayer::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBasePlayer::UnforceButtons(int)
 T CBasePlayer::UpdateBattery()
 T CBasePlayer::UpdateButtonState(int)
 T CBasePlayer::UpdateClientData()
 T CBasePlayer::UpdateCollisionBounds()
 T CBasePlayer::UpdateFXVolume()
 T CBasePlayer::UpdateGeigerCounter()
 T CBasePlayer::UpdateMapEntityPointers()
 T CBasePlayer::UpdateOnRemove()
 T CBasePlayer::UpdatePhysicsShadowToCurrentPosition()
 T CBasePlayer::UpdatePhysicsShadowToPosition(Vector const&)
 T CBasePlayer::UpdatePlayerSound()
 T CBasePlayer::UpdateSplitScreenAndPictureInPicturePlayerList()
 T CBasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)
 T CBasePlayer::UpdateTonemapController()
 T CBasePlayer::UpdateTransmitState()
 T CBasePlayer::UpdateUnderwaterState()
 T CBasePlayer::UpdateVPhysicsPosition(Vector const&, Vector const&, float)
 T CBasePlayer::UsingStandardWeaponsInVehicle()
 T CBasePlayer::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBasePlayer::VPhysicsDestroyObject()
 T CBasePlayer::VPhysicsShadowUpdate(IPhysicsObject*)
 T CBasePlayer::VPhysicsUpdate(IPhysicsObject*)
 T CBasePlayer::ValidateCurrentObserverTarget()
 T CBasePlayer::ViewPunch(QAngle const&)
 T CBasePlayer::ViewPunchReset(float)
 T CBasePlayer::WantsLagCompensationOnEntity(CBaseEntity const*, CUserCmd const*, CBitVec<2048> const*) const
 T CBasePlayer::WaterMove()
 T CBasePlayer::Weapon_CanUse(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
 T CBasePlayer::Weapon_Equip(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_SetLast(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_ShootPosition()
 T CBasePlayer::Weapon_ShouldSelectItem(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_ShouldSetLast(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CBasePlayer::Weapon_Switch(CBaseCombatWeapon*, int)
 T CBasePlayer::YouForgotToImplementOrDeclareServerClass()
 T CBasePlayer::~CBasePlayer()
 T CBasePlayerAnimState::AnimStateLog(char const*, ...)
 T CBasePlayerAnimState::AnimStatePrintf(int, char const*, ...)
 T CBasePlayerAnimState::CBasePlayerAnimState()
 T CBasePlayerAnimState::CalcMovementPlaybackRate(bool*)
 T CBasePlayerAnimState::CalcSequenceIndex(char const*, ...)
 T CBasePlayerAnimState::CanThePlayerMove()
 T CBasePlayerAnimState::ClearAnimationLayers()
 T CBasePlayerAnimState::ClearAnimationState()
 T CBasePlayerAnimState::ComputeAimSequence()
 T CBasePlayerAnimState::ComputeMainSequence()
 T CBasePlayerAnimState::ComputePlaybackRate()
 T CBasePlayerAnimState::ComputePoseParam_BodyPitch(CStudioHdr*)
 T CBasePlayerAnimState::ComputePoseParam_BodyYaw()
 T CBasePlayerAnimState::ComputePoseParam_MoveYaw(CStudioHdr*)
 T CBasePlayerAnimState::ComputeSequences(CStudioHdr*)
 T CBasePlayerAnimState::ConvergeAngles(float, float, float, float, float&)
 T CBasePlayerAnimState::DebugShowAnimState(int)
 T CBasePlayerAnimState::GetFeetYawRate()
 T CBasePlayerAnimState::GetOuter() const
 T CBasePlayerAnimState::GetOuterAbsVelocity(Vector&) const
 T CBasePlayerAnimState::GetOuterXYSpeed() const
 T CBasePlayerAnimState::GetRenderAngles()
 T CBasePlayerAnimState::Init(CBaseAnimatingOverlay*, CModAnimConfig const&)
 T CBasePlayerAnimState::OptimizeLayerWeights(int, int)
 T CBasePlayerAnimState::Release()
 T CBasePlayerAnimState::ResetCycleAcrossCustomActivityChange(Activity, Activity)
 T CBasePlayerAnimState::ResetGroundSpeed()
 T CBasePlayerAnimState::RestartMainSequence()
 T CBasePlayerAnimState::SelectWeightedSequence(Activity)
 T CBasePlayerAnimState::SetForceAimYaw(bool)
 T CBasePlayerAnimState::SetOuterBodyYaw(float)
 T CBasePlayerAnimState::ShouldBlendAimSequenceToIdle()
 T CBasePlayerAnimState::ShouldChangeSequences() const
 T CBasePlayerAnimState::ShouldResetGroundSpeed(Activity, Activity)
 T CBasePlayerAnimState::ShouldResetMainSequence(int, int)
 T CBasePlayerAnimState::ShouldUpdateAnimState()
 T CBasePlayerAnimState::TimeSinceLastAnimationStateClear() const
 T CBasePlayerAnimState::TranslateActivity(Activity)
 T CBasePlayerAnimState::Update(float, float)
 T CBasePlayerAnimState::UpdateAimSequenceLayers(float, int, bool, CSequenceTransitioner*, float)
 T CBasePlayerAnimState::UpdateInterpolators()
 T CBasePlayerAnimState::~CBasePlayerAnimState()
 T CBaseProjectile::GetDataDescMap()
 T CBaseProjectile::HandleThink()
 T CBaseProjectile::HandleTouch(CBaseEntity*)
 T CBaseProjectile::Precache()
 T CBaseProjectile::Think()
 T CBaseProjectile::Touch(CBaseEntity*)
 T CBaseProjectile::~CBaseProjectile()
 T CBaseProp::Activate()
 T CBaseProp::CalculateBlockLOS()
 T CBaseProp::DrawDebugGeometryOverlays()
 T CBaseProp::IsAlive()
 T CBaseProp::KeyValue(char const*, char const*)
 T CBaseProp::OverridePropdata()
 T CBaseProp::ParsePropData()
 T CBaseProp::Precache()
 T CBaseProp::Spawn()
 T CBasePropDoor::Activate()
 T CBasePropDoor::Blocked(CBaseEntity*)
 T CBasePropDoor::CalcDoorSounds()
 T CBasePropDoor::DisableAreaPortalThink()
 T CBasePropDoor::DoorAutoCloseThink()
 T CBasePropDoor::DoorCanClose(bool)
 T CBasePropDoor::DoorCanOpen()
 T CBasePropDoor::DoorClose()
 T CBasePropDoor::DoorCloseMoveDone()
 T CBasePropDoor::DoorOpen(CBaseEntity*)
 T CBasePropDoor::DoorOpenMoveDone()
 T CBasePropDoor::EndBlocked()
 T CBasePropDoor::GetDataDescMap()
 T CBasePropDoor::GetServerClass()
 T CBasePropDoor::HandleAnimEvent(animevent_t*)
 T CBasePropDoor::InputClose(inputdata_t&)
 T CBasePropDoor::InputLock(inputdata_t&)
 T CBasePropDoor::InputOpen(inputdata_t&)
 T CBasePropDoor::InputOpenAwayFrom(inputdata_t&)
 T CBasePropDoor::InputToggle(inputdata_t&)
 T CBasePropDoor::InputUnlock(inputdata_t&)
 T CBasePropDoor::IsAbleToCloseAreaPortals() const
 T CBasePropDoor::IsDoorLocked()
 T CBasePropDoor::NPCOpenDoor(CAI_BaseNPC*)
 T CBasePropDoor::ObjectCaps()
 T CBasePropDoor::OnDoorClosed()
 T CBasePropDoor::OnDoorOpened()
 T CBasePropDoor::OnStartBlocked(CBaseEntity*)
 T CBasePropDoor::OnUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBasePropDoor::Precache()
 T CBasePropDoor::Spawn()
 T CBasePropDoor::StartBlocked(CBaseEntity*)
 T CBasePropDoor::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBasePropDoor::Unlock()
 T CBasePropDoor::UpdateAreaPortals(bool)
 T CBasePropDoor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBasePropDoor::YouForgotToImplementOrDeclareServerClass()
 T CBasePropDoor::~CBasePropDoor()
 T CBaseResourcePrecacher::GetName()
 T CBaseResourcePrecacher::GetNext()
 T CBaseResourcePrecacher::GetSystem()
 T CBaseResourcePrecacher::RegisterAll()
 T CBaseResourcePrecacher::SetNext(IResourcePrecacher*)
 T CBaseServerVehicle::CBaseServerVehicle()
 T CBaseServerVehicle::CacheEntryExitPoints()
 T CBaseServerVehicle::CheckExitPoint(float, int, Vector*)
 T CBaseServerVehicle::ClassifyPassenger(CBaseCombatCharacter*, Class_T)
 T CBaseServerVehicle::FindOrCreatePassengerRole(string_t, int*)
 T CBaseServerVehicle::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CBaseServerVehicle::GetDriver()
 T CBaseServerVehicle::GetEntryAnimForPoint(Vector const&)
 T CBaseServerVehicle::GetExitAnimToUse(Vector&, bool&)
 T CBaseServerVehicle::GetLocalAttachmentAtTime(int, int, float, Vector*, QAngle*)
 T CBaseServerVehicle::GetPassenger(int)
 T CBaseServerVehicle::GetPassengerExitPoint(int, Vector*, QAngle*)
 T CBaseServerVehicle::GetPassengerRole(CBaseCombatCharacter*)
 T CBaseServerVehicle::GetPassengerSeatPoint(int, Vector*, QAngle*)
 T CBaseServerVehicle::GetVehicleController()
 T CBaseServerVehicle::GetVehicleEnt()
 T CBaseServerVehicle::GetVehicleParams()
 T CBaseServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T CBaseServerVehicle::HandleEntryExitFinish(bool, bool)
 T CBaseServerVehicle::HandlePassengerEntry(CBaseCombatCharacter*, bool)
 T CBaseServerVehicle::HandlePassengerExit(CBaseCombatCharacter*)
 T CBaseServerVehicle::Initialize(char const*)
 T CBaseServerVehicle::IsPassengerDamagable(int)
 T CBaseServerVehicle::IsPassengerEntering()
 T CBaseServerVehicle::IsPassengerExiting()
 T CBaseServerVehicle::IsPassengerUsingStandardWeapons(int)
 T CBaseServerVehicle::IsPassengerVisible(int)
 T CBaseServerVehicle::IsVehicleBodyInWater()
 T CBaseServerVehicle::IsVehicleUpright()
 T CBaseServerVehicle::ItemPostFrame(CBasePlayer*)
 T CBaseServerVehicle::NPC_AddPassenger(CBaseCombatCharacter*, string_t, int)
 T CBaseServerVehicle::NPC_AimPrimaryWeapon(Vector)
 T CBaseServerVehicle::NPC_AimSecondaryWeapon(Vector)
 T CBaseServerVehicle::NPC_Brake()
 T CBaseServerVehicle::NPC_CanDrive()
 T CBaseServerVehicle::NPC_DriveVehicle()
 T CBaseServerVehicle::NPC_GetAvailableSeat(CBaseCombatCharacter*, string_t, VehicleSeatQuery_e)
 T CBaseServerVehicle::NPC_GetPassengerInSeat(int, int)
 T CBaseServerVehicle::NPC_GetPassengerSeatAnims(CBaseCombatCharacter*, PassengerSeatAnimType_t)
 T CBaseServerVehicle::NPC_GetPassengerSeatAttachment(CBaseCombatCharacter*)
 T CBaseServerVehicle::NPC_GetPassengerSeatPosition(CBaseCombatCharacter*, Vector*, QAngle*)
 T CBaseServerVehicle::NPC_GetPassengerSeatPositionLocal(CBaseCombatCharacter*, Vector*, QAngle*)
 T CBaseServerVehicle::NPC_HasAvailableSeat(string_t)
 T CBaseServerVehicle::NPC_HasPrimaryWeapon()
 T CBaseServerVehicle::NPC_HasSecondaryWeapon()
 T CBaseServerVehicle::NPC_PrimaryFire()
 T CBaseServerVehicle::NPC_RemovePassenger(CBaseCombatCharacter*)
 T CBaseServerVehicle::NPC_SecondaryFire()
 T CBaseServerVehicle::NPC_SetDriver(CNPC_VehicleDriver*)
 T CBaseServerVehicle::NPC_ThrottleCenter()
 T CBaseServerVehicle::NPC_ThrottleForward()
 T CBaseServerVehicle::NPC_ThrottleReverse()
 T CBaseServerVehicle::NPC_TurnCenter()
 T CBaseServerVehicle::NPC_TurnLeft(float)
 T CBaseServerVehicle::NPC_TurnRight(float)
 T CBaseServerVehicle::ParseEntryExitAnims()
 T CBaseServerVehicle::ParseExitAnim(KeyValues*, bool)
 T CBaseServerVehicle::ParseNPCPassengerSeat(KeyValues*, CPassengerSeat*)
 T CBaseServerVehicle::ParseNPCRoles(KeyValues*)
 T CBaseServerVehicle::PassengerDamageModifier(CTakeDamageInfo const&)
 T CBaseServerVehicle::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T CBaseServerVehicle::PlayCrashSound(float)
 T CBaseServerVehicle::PlayLoopingSound(char const*)
 T CBaseServerVehicle::PlaySound(vehiclesound)
 T CBaseServerVehicle::Precache()
 T CBaseServerVehicle::ProcessMovement(CBasePlayer*, CMoveData*)
 T CBaseServerVehicle::RecalculateSoundGear(vbs_sound_update_t&)
 T CBaseServerVehicle::ReloadScript()
 T CBaseServerVehicle::RestorePassengerInfo()
 T CBaseServerVehicle::SetPassenger(int, CBaseCombatCharacter*)
 T CBaseServerVehicle::SetVehicle(CBaseEntity*)
 T CBaseServerVehicle::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CBaseServerVehicle::SoundShutdown(float)
 T CBaseServerVehicle::SoundStart()
 T CBaseServerVehicle::SoundStartDisabled()
 T CBaseServerVehicle::SoundState_ChooseState(vbs_sound_update_t&)
 T CBaseServerVehicle::SoundState_OnNewState(sound_states)
 T CBaseServerVehicle::SoundUpdate(vbs_sound_update_t&)
 T CBaseServerVehicle::StartEngineRumble()
 T CBaseServerVehicle::StopEngineRumble()
 T CBaseServerVehicle::StopSound(vehiclesound)
 T CBaseServerVehicle::Weapon_PrimaryCanFireAt()
 T CBaseServerVehicle::Weapon_PrimaryRanges(float*, float*)
 T CBaseServerVehicle::Weapon_SecondaryCanFireAt()
 T CBaseServerVehicle::Weapon_SecondaryRanges(float*, float*)
 T CBaseServerVehicle::~CBaseServerVehicle()
 T CBaseTempEntity::CBaseTempEntity(char const*)
 T CBaseTempEntity::Create(IRecipientFilter&, float)
 T CBaseTempEntity::GetList()
 T CBaseTempEntity::GetName()
 T CBaseTempEntity::GetNext()
 T CBaseTempEntity::GetServerClass()
 T CBaseTempEntity::Precache()
 T CBaseTempEntity::PrecacheTempEnts()
 T CBaseTempEntity::Test(Vector const&, QAngle const&)
 T CBaseTempEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseTempEntity::~CBaseTempEntity()
 T CBaseToggle::AngularMove(QAngle const&, float)
 T CBaseToggle::AxisDelta(int, QAngle const&, QAngle const&)
 T CBaseToggle::AxisDir()
 T CBaseToggle::CBaseToggle()
 T CBaseToggle::GetDataDescMap()
 T CBaseToggle::GetDelay()
 T CBaseToggle::GetGroundVelocityToApply(Vector&)
 T CBaseToggle::GetServerClass()
 T CBaseToggle::IsLockedByMaster()
 T CBaseToggle::KeyValue(char const*, Vector)
 T CBaseToggle::KeyValue(char const*, char const*)
 T CBaseToggle::KeyValue(char const*, float)
 T CBaseToggle::LinearMove(Vector const&, float)
 T CBaseToggle::MoveDone()
 T CBaseToggle::YouForgotToImplementOrDeclareServerClass()
 T CBaseToggle::~CBaseToggle()
 T CBaseTrigger::Activate()
 T CBaseTrigger::CBaseTrigger()
 T CBaseTrigger::Disable()
 T CBaseTrigger::DrawDebugTextOverlays()
 T CBaseTrigger::Enable()
 T CBaseTrigger::EndTouch(CBaseEntity*)
 T CBaseTrigger::GetDataDescMap()
 T CBaseTrigger::GetServerClass()
 T CBaseTrigger::InitTrigger()
 T CBaseTrigger::InputDisable(inputdata_t&)
 T CBaseTrigger::InputEnable(inputdata_t&)
 T CBaseTrigger::InputEndTouch(inputdata_t&)
 T CBaseTrigger::InputStartTouch(inputdata_t&)
 T CBaseTrigger::InputToggle(inputdata_t&)
 T CBaseTrigger::InputTouchTest(inputdata_t&)
 T CBaseTrigger::NetworkStateChanged_m_bDisabled()
 T CBaseTrigger::NetworkStateChanged_m_bDisabled(void*)
 T CBaseTrigger::OnEndTouchAll(CBaseEntity*)
 T CBaseTrigger::OnStartTouchAll(CBaseEntity*)
 T CBaseTrigger::PassesTriggerFilters(CBaseEntity*)
 T CBaseTrigger::PostClientActive()
 T CBaseTrigger::Spawn()
 T CBaseTrigger::StartTouch(CBaseEntity*)
 T CBaseTrigger::UpdateOnRemove()
 T CBaseTrigger::UsesFilter()
 T CBaseTrigger::YouForgotToImplementOrDeclareServerClass()
 T CBaseTrigger::~CBaseTrigger()
 T CBaseVPhysicsTrigger::Activate()
 T CBaseVPhysicsTrigger::GetServerClass()
 T CBaseVPhysicsTrigger::InputDisable(inputdata_t&)
 T CBaseVPhysicsTrigger::InputEnable(inputdata_t&)
 T CBaseVPhysicsTrigger::InputToggle(inputdata_t&)
 T CBaseVPhysicsTrigger::NetworkStateChanged_m_bDisabled()
 T CBaseVPhysicsTrigger::NetworkStateChanged_m_bDisabled(void*)
 T CBaseVPhysicsTrigger::PassesTriggerFilters(CBaseEntity*)
 T CBaseVPhysicsTrigger::Spawn()
 T CBaseVPhysicsTrigger::YouForgotToImplementOrDeclareServerClass()
 T CBaseViewModel::AddEffects(int)
 T CBaseViewModel::AddViewModelBob(CBasePlayer*, Vector&, QAngle&)
 T CBaseViewModel::CBaseViewModel()
 T CBaseViewModel::CalcViewModelLag(Vector&, QAngle&, QAngle&)
 T CBaseViewModel::CalcViewModelView(CBasePlayer*, Vector const&, QAngle const&)
 T CBaseViewModel::GetDataDescMap()
 T CBaseViewModel::GetOwner()
 T CBaseViewModel::GetOwnerViaInterface()
 T CBaseViewModel::GetOwningWeapon()
 T CBaseViewModel::GetServerClass()
 T CBaseViewModel::IsSelfAnimating()
 T CBaseViewModel::IsViewModel() const
 T CBaseViewModel::IsViewModelOrAttachment() const
 T CBaseViewModel::IsViewable()
 T CBaseViewModel::Precache()
 T CBaseViewModel::RemoveEffects(int)
 T CBaseViewModel::SendViewModelMatchingSequence(int)
 T CBaseViewModel::SetIndex(int)
 T CBaseViewModel::SetOwner(CBaseEntity*)
 T CBaseViewModel::SetShouldIgnoreOffsetAndAccuracy(bool)
 T CBaseViewModel::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseViewModel::SetWeaponModel(char const*, CBaseCombatWeapon*)
 T CBaseViewModel::ShouldTransmit(CCheckTransmitInfo const*)
 T CBaseViewModel::Spawn()
 T CBaseViewModel::SpawnControlPanels()
 T CBaseViewModel::UpdateOnRemove()
 T CBaseViewModel::UpdateTransmitState()
 T CBaseViewModel::YouForgotToImplementOrDeclareServerClass()
 T CBaseViewModel::~CBaseViewModel()
 T CBaseWorkshopHTTPRequest::CBaseWorkshopHTTPRequest(CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> > const&)
 T CBaseWorkshopHTTPRequest::OnHTTPRequestComplete(HTTPRequestCompleted_t*, bool)
 T CBaseWorkshopHTTPRequest::ProcessHTTPResponse(KeyValues*)
 T CBaseWorkshopHTTPRequest::~CBaseWorkshopHTTPRequest()
 T CBeam::BeamCreate(char const*, float)
 T CBeam::BeamDamage(CGameTrace*)
 T CBeam::BeamInit(char const*, float)
 T CBeam::CBeam()
 T CBeam::DoSparks(Vector const&, Vector const&)
 T CBeam::DrawDebugTextOverlays()
 T CBeam::EntsInit(CBaseEntity*, CBaseEntity*)
 T CBeam::GetAbsEndPos() const
 T CBeam::GetAbsStartPos() const
 T CBeam::GetDataDescMap()
 T CBeam::GetDecalName()
 T CBeam::GetServerClass()
 T CBeam::InputColorBlueValue(inputdata_t&)
 T CBeam::InputColorGreenValue(inputdata_t&)
 T CBeam::InputColorRedValue(inputdata_t&)
 T CBeam::InputNoise(inputdata_t&)
 T CBeam::InputWidth(inputdata_t&)
 T CBeam::ObjectCaps()
 T CBeam::PointsInit(Vector const&, Vector const&)
 T CBeam::Precache()
 T CBeam::RandomTargetname(char const*)
 T CBeam::RelinkBeam()
 T CBeam::SetAbsEndPos(Vector const&)
 T CBeam::SetAbsStartPos(Vector const&)
 T CBeam::SetBeamFlags(int)
 T CBeam::SetEndEntity(CBaseEntity*)
 T CBeam::SetHDRColorScale(float)
 T CBeam::SetModel(char const*)
 T CBeam::SetStartEntity(CBaseEntity*)
 T CBeam::SetTransmit(CCheckTransmitInfo*, bool)
 T CBeam::SetType(int)
 T CBeam::ShouldTransmit(CCheckTransmitInfo const*)
 T CBeam::Spawn()
 T CBeam::UpdateTransmitState()
 T CBeam::WorldSpaceCenter() const
 T CBeam::YouForgotToImplementOrDeclareServerClass()
 T CBeam::~CBeam()
 T CBeamSpotlight::CBeamSpotlight()
 T CBeamSpotlight::GetDataDescMap()
 T CBeamSpotlight::GetServerClass()
 T CBeamSpotlight::InputReverse(inputdata_t&)
 T CBeamSpotlight::InputStart(inputdata_t&)
 T CBeamSpotlight::InputStop(inputdata_t&)
 T CBeamSpotlight::InputTurnOff(inputdata_t&)
 T CBeamSpotlight::InputTurnOn(inputdata_t&)
 T CBeamSpotlight::KeyValue(char const*, char const*)
 T CBeamSpotlight::Precache()
 T CBeamSpotlight::RecalcRotation()
 T CBeamSpotlight::Spawn()
 T CBeamSpotlight::UpdateTransmitState()
 T CBeamSpotlight::YouForgotToImplementOrDeclareServerClass()
 T CBeamSpotlight::~CBeamSpotlight()
 T CBitRead::ReadBitAngle(int)
 T CBitRead::ReadBitCoord()
 T CBitRead::ReadBitVec3Coord(Vector&)
 T CBlendingCycler::GetDataDescMap()
 T CBlendingCycler::KeyValue(char const*, char const*)
 T CBlendingCycler::ObjectCaps()
 T CBlendingCycler::Spawn()
 T CBlendingCycler::Think()
 T CBlendingCycler::~CBlendingCycler()
 T CBlood::BloodPosition(CBaseEntity*)
 T CBlood::GetDataDescMap()
 T CBlood::InputEmitBlood(inputdata_t&)
 T CBlood::KeyValue(char const*, char const*)
 T CBlood::Precache()
 T CBlood::Spawn()
 T CBlood::~CBlood()
 T CBloodSplat::Think()
 T CBloodSplat::~CBloodSplat()
 T CBombShieldTraceEnum::EnumEntity(IHandleEntity*)
 T CBombTarget::BombTargetTouch(CBaseEntity*)
 T CBombTarget::BombTargetUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBombTarget::GetDataDescMap()
 T CBombTarget::OnBombDefused(inputdata_t&)
 T CBombTarget::OnBombExplode(inputdata_t&)
 T CBombTarget::OnBombPlanted(inputdata_t&)
 T CBombTarget::ReInitOnRoundStart()
 T CBombTarget::Spawn()
 T CBombTarget::~CBombTarget()
 T CBoneCache::CreateResource(bonecacheparams_t const&)
 T CBoneCache::GetCachedBone(int)
 T CBoneCache::Init(bonecacheparams_t const&, unsigned int, short*, short*, int)
 T CBoneCache::IsValid(float, float)
 T CBoneCache::ReadCachedBonePointers(matrix3x4_t**, int)
 T CBoneCache::UpdateBones(matrix3x4a_t const*, int, float)
 T CBoneFollower::GetDataDescMap()
 T CBoneFollower::GetServerClass()
 T CBoneFollower::Init(CBaseEntity*, char const*, solid_t&, Vector const&, QAngle const&)
 T CBoneFollower::ObjectCaps()
 T CBoneFollower::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBoneFollower::Touch(CBaseEntity*)
 T CBoneFollower::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBoneFollower::UpdateTransmitState()
 T CBoneFollower::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBoneFollower::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBoneFollower::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CBoneFollower::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBoneFollower::VPhysicsUpdate(IPhysicsObject*)
 T CBoneFollower::YouForgotToImplementOrDeclareServerClass()
 T CBoneFollower::~CBoneFollower()
 T CBoneFollowerManager::AddBoneFollower(CBaseAnimating*, char const*, solid_t*)
 T CBoneFollowerManager::CBoneFollowerManager()
 T CBoneFollowerManager::CreatePhysicsFollower(CBaseAnimating*, physfollower_t&, char const*, solid_t*)
 T CBoneFollowerManager::DestroyBoneFollowers()
 T CBoneFollowerManager::GetBoneFollower(int)
 T CBoneFollowerManager::UpdateBoneFollowers(CBaseAnimating*)
 T CBoneFollowerManager::~CBoneFollowerManager()
 T CBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T CBoneSetup::AddLocalLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::AddSequenceLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T CBoneSetupMemoryPool<QuaternionAligned>::Alloc()
 T CBoneSetupMemoryPool<QuaternionAligned>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<Vector>::Alloc()
 T CBoneSetupMemoryPool<Vector>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<matrix3x4a_t>::Alloc()
 T CBoneSetupMemoryPool<matrix3x4a_t>::~CBoneSetupMemoryPool()
 T CBoolProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBoolProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CBoolProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBot<CCSPlayer>::AvoidPlayers(CUserCmd*)
 T CBot<CCSPlayer>::BuildUserCmd(CUserCmd&, QAngle const&, float, float, float, int, unsigned char)
 T CBot<CCSPlayer>::ClearMovement()
 T CBot<CCSPlayer>::ClearPrimaryAttack()
 T CBot<CCSPlayer>::ClientCommand(CCommand const&)
 T CBot<CCSPlayer>::Cmd_Argc()
 T CBot<CCSPlayer>::Cmd_Argv(int)
 T CBot<CCSPlayer>::Crouch()
 T CBot<CCSPlayer>::Event_Killed(CTakeDamageInfo const&)
 T CBot<CCSPlayer>::GetEnemiesRemaining() const
 T CBot<CCSPlayer>::GetFriendsRemaining() const
 T CBot<CCSPlayer>::GetMoveSpeed()
 T CBot<CCSPlayer>::Initialize(BotProfile const*, int)
 T CBot<CCSPlayer>::IsBot() const
 T CBot<CCSPlayer>::IsLocalPlayerWatchingMe() const
 T CBot<CCSPlayer>::IsLookingAtPosition(Vector const&, float) const
 T CBot<CCSPlayer>::IsNetClient() const
 T CBot<CCSPlayer>::IsPlayerFacingMe(CBasePlayer*) const
 T CBot<CCSPlayer>::IsPlayerLookingAtMe(CBasePlayer*, float) const
 T CBot<CCSPlayer>::IsRunning() const
 T CBot<CCSPlayer>::Jump(bool)
 T CBot<CCSPlayer>::MoveBackward()
 T CBot<CCSPlayer>::MoveForward()
 T CBot<CCSPlayer>::OnTakeDamage(CTakeDamageInfo const&)
 T CBot<CCSPlayer>::PrimaryAttack()
 T CBot<CCSPlayer>::PrintIfWatched(char*, ...) const
 T CBot<CCSPlayer>::Reload()
 T CBot<CCSPlayer>::Run()
 T CBot<CCSPlayer>::SecondaryAttack()
 T CBot<CCSPlayer>::SetModel(char const*)
 T CBot<CCSPlayer>::Spawn()
 T CBot<CCSPlayer>::StandUp()
 T CBot<CCSPlayer>::StrafeLeft()
 T CBot<CCSPlayer>::StrafeRight()
 T CBot<CCSPlayer>::Think()
 T CBot<CCSPlayer>::TogglePrimaryAttack()
 T CBot<CCSPlayer>::UpdatePlayer()
 T CBot<CCSPlayer>::UseEnvironment()
 T CBot<CCSPlayer>::Walk()
 T CBot<CCSPlayer>::~CBot()
 T CBotBreakableEnumerator::EnumElement(IHandleEntity*)
 T CBotCmd::~CBotCmd()
 T CBotDoorEnumerator::EnumElement(IHandleEntity*)
 T CBotManager::AddDebugMessage(char const*)
 T CBotManager::AddGrenade(CBaseGrenade*)
 T CBotManager::CBotManager()
 T CBotManager::DestroyAllGrenades()
 T CBotManager::IsInsideSmokeCloud(Vector const*, float)
 T CBotManager::IsLineBlockedBySmoke(Vector const&, Vector const&, float)
 T CBotManager::RemoveGrenade(CBaseGrenade*)
 T CBotManager::RestartRound()
 T CBotManager::SetGrenadeRadius(CBaseGrenade*, float)
 T CBotManager::StartFrame()
 T CBotManager::ValidateActiveGrenades()
 T CBotManager::~CBotManager()
 T CBreakModelsPrecached::BreakLessFunc(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&)
 T CBreakModelsPrecached::LevelShutdownPostEntity()
 T CBreakModelsPrecached::~CBreakModelsPrecached()
 T CBreakParser::ParseKeyValue(void*, char const*, char const*)
 T CBreakParser::ParseModelName(breakmodel_t*, char const*)
 T CBreakParser::SetDefaults(void*)
 T CBreakable::BreakTouch(CBaseEntity*)
 T CBreakable::CreateVPhysics()
 T CBreakable::DamageDecal(int, int)
 T CBreakable::DamageSound()
 T CBreakable::Die()
 T CBreakable::DrawDebugTextOverlays()
 T CBreakable::GetBasePropData()
 T CBreakable::GetBreakableCount()
 T CBreakable::GetBreakableModel()
 T CBreakable::GetBreakableSkin()
 T CBreakable::GetDataDescMap()
 T CBreakable::GetDmgModBullet()
 T CBreakable::GetDmgModClub()
 T CBreakable::GetDmgModExplosive()
 T CBreakable::GetDmgModFire()
 T CBreakable::GetExplosiveDamage()
 T CBreakable::GetExplosiveRadius()
 T CBreakable::GetMaxBreakableSize()
 T CBreakable::GetMultiplayerBreakMode() const
 T CBreakable::GetPhysicsDamageTable()
 T CBreakable::GetPhysicsMode()
 T CBreakable::HasInteraction(propdata_interactions_t)
 T CBreakable::HasPhysicsAttacker(float)
 T CBreakable::InputAddHealth(inputdata_t&)
 T CBreakable::InputBreak(inputdata_t&)
 T CBreakable::InputRemoveHealth(inputdata_t&)
 T CBreakable::InputSetHealth(inputdata_t&)
 T CBreakable::InputSetMass(inputdata_t&)
 T CBreakable::IsBreakable()
 T CBreakable::KeyValue(char const*, char const*)
 T CBreakable::MaterialSoundRandom(int, Materials, float)
 T CBreakable::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CBreakable::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakable::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakable::ParsePropData()
 T CBreakable::Precache()
 T CBreakable::ResetOnGroundFlags()
 T CBreakable::SetBasePropData(string_t)
 T CBreakable::SetBreakableCount(int)
 T CBreakable::SetBreakableModel(string_t)
 T CBreakable::SetBreakableSkin(int)
 T CBreakable::SetDmgModBullet(float)
 T CBreakable::SetDmgModClub(float)
 T CBreakable::SetDmgModExplosive(float)
 T CBreakable::SetExplosiveDamage(float)
 T CBreakable::SetExplosiveRadius(float)
 T CBreakable::SetInteraction(propdata_interactions_t)
 T CBreakable::SetMaxBreakableSize(int)
 T CBreakable::SetMultiplayerBreakMode(mp_break_t)
 T CBreakable::SetPhysicsDamageTable(string_t)
 T CBreakable::SetPhysicsMode(int)
 T CBreakable::SetPropDataBlocksLOS(bool)
 T CBreakable::SetPropDataIsAIWalkable(bool)
 T CBreakable::Spawn()
 T CBreakable::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBreakable::UpdateHealth(int, CBaseEntity*)
 T CBreakable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBreakable::~CBreakable()
 T CBreakableProp::AnimateThink()
 T CBreakableProp::Break(CBaseEntity*, CTakeDamageInfo const&)
 T CBreakableProp::BreakThink()
 T CBreakableProp::BreakablePropTouch(CBaseEntity*)
 T CBreakableProp::CBreakableProp()
 T CBreakableProp::CheckRemoveRagdolls()
 T CBreakableProp::CopyFadeFrom(CBreakableProp*)
 T CBreakableProp::Event_Killed(CTakeDamageInfo const&)
 T CBreakableProp::FindEnableMotionFixup()
 T CBreakableProp::GetAutoAimRadius()
 T CBreakableProp::GetBasePropData()
 T CBreakableProp::GetBreakableCount()
 T CBreakableProp::GetBreakableModel()
 T CBreakableProp::GetBreakableSkin()
 T CBreakableProp::GetDataDescMap()
 T CBreakableProp::GetDmgModBullet()
 T CBreakableProp::GetDmgModClub()
 T CBreakableProp::GetDmgModExplosive()
 T CBreakableProp::GetDmgModFire()
 T CBreakableProp::GetExplosiveDamage()
 T CBreakableProp::GetExplosiveRadius()
 T CBreakableProp::GetMaxBreakableSize()
 T CBreakableProp::GetMultiplayerBreakMode() const
 T CBreakableProp::GetPhysicsDamageTable()
 T CBreakableProp::GetPhysicsMode()
 T CBreakableProp::GetRootPhysicsObjectForBreak()
 T CBreakableProp::GetServerClass()
 T CBreakableProp::HandleFirstCollisionInteractions(int, gamevcollisionevent_t*)
 T CBreakableProp::HandleInteractionStick(int, gamevcollisionevent_t*)
 T CBreakableProp::HasInteraction(propdata_interactions_t)
 T CBreakableProp::HasPhysicsAttacker(float)
 T CBreakableProp::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CBreakableProp::Ignite(float, bool, float, bool)
 T CBreakableProp::InputAddHealth(inputdata_t&)
 T CBreakableProp::InputBreak(inputdata_t&)
 T CBreakableProp::InputDisablePhyscannonPickup(inputdata_t&)
 T CBreakableProp::InputDisablePuntSound(inputdata_t&)
 T CBreakableProp::InputEnablePhyscannonPickup(inputdata_t&)
 T CBreakableProp::InputEnablePuntSound(inputdata_t&)
 T CBreakableProp::InputRemoveHealth(inputdata_t&)
 T CBreakableProp::InputSetHealth(inputdata_t&)
 T CBreakableProp::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakableProp::OnBreak(Vector const&, Vector const&, CBaseEntity*)
 T CBreakableProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CBreakableProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakableProp::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakableProp::OverridePropdata()
 T CBreakableProp::PhysGunLaunchAngularImpulse()
 T CBreakableProp::PlayPuntSound()
 T CBreakableProp::Precache()
 T CBreakableProp::PreferredCarryAngles()
 T CBreakableProp::RampToDefaultFadeScale()
 T CBreakableProp::SetBasePropData(string_t)
 T CBreakableProp::SetBreakableCount(int)
 T CBreakableProp::SetBreakableModel(string_t)
 T CBreakableProp::SetBreakableSkin(int)
 T CBreakableProp::SetDmgModBullet(float)
 T CBreakableProp::SetDmgModClub(float)
 T CBreakableProp::SetDmgModExplosive(float)
 T CBreakableProp::SetExplosiveDamage(float)
 T CBreakableProp::SetExplosiveRadius(float)
 T CBreakableProp::SetInteraction(propdata_interactions_t)
 T CBreakableProp::SetMaxBreakableSize(int)
 T CBreakableProp::SetMultiplayerBreakMode(mp_break_t)
 T CBreakableProp::SetPhysicsDamageTable(string_t)
 T CBreakableProp::SetPhysicsMode(int)
 T CBreakableProp::SetPropDataBlocksLOS(bool)
 T CBreakableProp::SetPropDataIsAIWalkable(bool)
 T CBreakableProp::Spawn()
 T CBreakableProp::StickAtPosition(Vector const&, Vector const&, QAngle const&)
 T CBreakableProp::UpdateHealth(int, CBaseEntity*)
 T CBreakableProp::UpdateOnRemove()
 T CBreakableProp::YouForgotToImplementOrDeclareServerClass()
 T CBreakableProp::~CBreakableProp()
 T CBreakableSurface::BreakAllPanes()
 T CBreakableSurface::BreakThink()
 T CBreakableSurface::CreateShards(Vector const&, QAngle const&, Vector const&, Vector const&, float, float, int)
 T CBreakableSurface::Die(CBaseEntity*, Vector const&)
 T CBreakableSurface::DropPane(int, int)
 T CBreakableSurface::GetDataDescMap()
 T CBreakableSurface::GetServerClass()
 T CBreakableSurface::InputShatter(inputdata_t&)
 T CBreakableSurface::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakableSurface::Precache()
 T CBreakableSurface::RecalcSupport(int, int)
 T CBreakableSurface::SetSupport(int, int, float)
 T CBreakableSurface::ShatterPane(int, int, Vector const&, Vector const&)
 T CBreakableSurface::Spawn()
 T CBreakableSurface::SurfaceTouch(CBaseEntity*)
 T CBreakableSurface::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBreakableSurface::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBreakableSurface::YouForgotToImplementOrDeclareServerClass()
 T CBreakableSurface::~CBreakableSurface()
 T CBroadcastRecipientFilter::~CBroadcastRecipientFilter()
 T CBubbling::FizzThink()
 T CBubbling::GetDataDescMap()
 T CBubbling::InputActivate(inputdata_t&)
 T CBubbling::InputDeactivate(inputdata_t&)
 T CBubbling::InputSetCurrent(inputdata_t&)
 T CBubbling::InputSetDensity(inputdata_t&)
 T CBubbling::InputSetFrequency(inputdata_t&)
 T CBubbling::InputToggle(inputdata_t&)
 T CBubbling::Precache()
 T CBubbling::Spawn()
 T CBubbling::Toggle()
 T CBubbling::~CBubbling()
 T CBuildModeDialogMgr::Add(vgui::BuildModeDialog*)
 T CBuildModeDialogMgr::~CBuildModeDialogMgr()
 T CBuildModeNavCombo::CBuildModeNavCombo(vgui::Panel*, char const*, int, bool, bool, vgui::Panel*)
 T CBuildModeNavCombo::GetAnimMap()
 T CBuildModeNavCombo::GetKBMap()
 T CBuildModeNavCombo::GetMessageMap()
 T CBuildModeNavCombo::GetPanelClassName()
 T CBuildModeNavCombo::OnShowMenu(vgui::Menu*)
 T CBuildModeNavCombo::~CBuildModeNavCombo()
 T CBulletsTraceFilter::ShouldHitEntity(IHandleEntity*, int)
 T CBuyZone::BuyZoneTouch(CBaseEntity*)
 T CBuyZone::GetDataDescMap()
 T CBuyZone::InputSetTeam_AllTeams(inputdata_t&)
 T CBuyZone::InputSetTeam_CTOnly(inputdata_t&)
 T CBuyZone::InputSetTeam_None(inputdata_t&)
 T CBuyZone::InputSetTeam_TerroristOnly(inputdata_t&)
 T CBuyZone::Spawn()
 T CBuyZone::~CBuyZone()
 T CC4::AbortBombPlant()
 T CC4::CC4()
 T CC4::Deploy()
 T CC4::Drop(Vector const&)
 T CC4::GetCSWeaponID() const
 T CC4::GetControlPanelInfo(int, char const*&)
 T CC4::GetMaxSpeed() const
 T CC4::GetServerClass()
 T CC4::Holster(CBaseCombatWeapon*)
 T CC4::IsRemoveable()
 T CC4::ItemPostFrame()
 T CC4::OnPickedUp(CBaseCombatCharacter*)
 T CC4::PhysicsSolidMaskForEntity() const
 T CC4::PhysicsTouchTriggers(Vector const*)
 T CC4::PlayPlantInitSound()
 T CC4::Precache()
 T CC4::PrimaryAttack()
 T CC4::ResetToLastValidPlayerHeldPosition()
 T CC4::ShouldRemoveOnRoundRestart()
 T CC4::ShouldTransmit(CCheckTransmitInfo const*)
 T CC4::Spawn()
 T CC4::Think()
 T CC4::UpdateShieldState()
 T CC4::UpdateTransmitState()
 T CC4::WeaponIdle()
 T CC4::WeaponReset()
 T CC4::YouForgotToImplementOrDeclareServerClass()
 T CC4::~CC4()
 T CCLCMsg_BaselineAck::ByteSize() const
 T CCLCMsg_BaselineAck::Clear()
 T CCLCMsg_BaselineAck::GetCachedSize() const
 T CCLCMsg_BaselineAck::GetMetadata() const
 T CCLCMsg_BaselineAck::IsInitialized() const
 T CCLCMsg_BaselineAck::MergeFrom(CCLCMsg_BaselineAck const&)
 T CCLCMsg_BaselineAck::New() const
 T CCLCMsg_BaselineAck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_BaselineAck::SetCachedSize(int) const
 T CCLCMsg_BaselineAck::~CCLCMsg_BaselineAck()
 T CCLCMsg_ClientInfo::ByteSize() const
 T CCLCMsg_ClientInfo::Clear()
 T CCLCMsg_ClientInfo::GetCachedSize() const
 T CCLCMsg_ClientInfo::GetMetadata() const
 T CCLCMsg_ClientInfo::IsInitialized() const
 T CCLCMsg_ClientInfo::MergeFrom(CCLCMsg_ClientInfo const&)
 T CCLCMsg_ClientInfo::New() const
 T CCLCMsg_ClientInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_ClientInfo::SetCachedSize(int) const
 T CCLCMsg_ClientInfo::~CCLCMsg_ClientInfo()
 T CCLCMsg_CmdKeyValues::ByteSize() const
 T CCLCMsg_CmdKeyValues::Clear()
 T CCLCMsg_CmdKeyValues::GetCachedSize() const
 T CCLCMsg_CmdKeyValues::GetMetadata() const
 T CCLCMsg_CmdKeyValues::IsInitialized() const
 T CCLCMsg_CmdKeyValues::MergeFrom(CCLCMsg_CmdKeyValues const&)
 T CCLCMsg_CmdKeyValues::New() const
 T CCLCMsg_CmdKeyValues::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_CmdKeyValues::SetCachedSize(int) const
 T CCLCMsg_CmdKeyValues::~CCLCMsg_CmdKeyValues()
 T CCLCMsg_FileCRCCheck::ByteSize() const
 T CCLCMsg_FileCRCCheck::Clear()
 T CCLCMsg_FileCRCCheck::GetCachedSize() const
 T CCLCMsg_FileCRCCheck::GetMetadata() const
 T CCLCMsg_FileCRCCheck::IsInitialized() const
 T CCLCMsg_FileCRCCheck::MergeFrom(CCLCMsg_FileCRCCheck const&)
 T CCLCMsg_FileCRCCheck::New() const
 T CCLCMsg_FileCRCCheck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_FileCRCCheck::SetCachedSize(int) const
 T CCLCMsg_FileCRCCheck::SharedDtor()
 T CCLCMsg_FileCRCCheck::~CCLCMsg_FileCRCCheck()
 T CCLCMsg_ListenEvents::ByteSize() const
 T CCLCMsg_ListenEvents::Clear()
 T CCLCMsg_ListenEvents::GetCachedSize() const
 T CCLCMsg_ListenEvents::GetMetadata() const
 T CCLCMsg_ListenEvents::IsInitialized() const
 T CCLCMsg_ListenEvents::MergeFrom(CCLCMsg_ListenEvents const&)
 T CCLCMsg_ListenEvents::New() const
 T CCLCMsg_ListenEvents::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_ListenEvents::SetCachedSize(int) const
 T CCLCMsg_ListenEvents::~CCLCMsg_ListenEvents()
 T CCLCMsg_LoadingProgress::ByteSize() const
 T CCLCMsg_LoadingProgress::Clear()
 T CCLCMsg_LoadingProgress::GetCachedSize() const
 T CCLCMsg_LoadingProgress::GetMetadata() const
 T CCLCMsg_LoadingProgress::IsInitialized() const
 T CCLCMsg_LoadingProgress::MergeFrom(CCLCMsg_LoadingProgress const&)
 T CCLCMsg_LoadingProgress::New() const
 T CCLCMsg_LoadingProgress::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_LoadingProgress::SetCachedSize(int) const
 T CCLCMsg_LoadingProgress::~CCLCMsg_LoadingProgress()
 T CCLCMsg_Move::ByteSize() const
 T CCLCMsg_Move::Clear()
 T CCLCMsg_Move::GetCachedSize() const
 T CCLCMsg_Move::GetMetadata() const
 T CCLCMsg_Move::IsInitialized() const
 T CCLCMsg_Move::MergeFrom(CCLCMsg_Move const&)
 T CCLCMsg_Move::New() const
 T CCLCMsg_Move::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_Move::SetCachedSize(int) const
 T CCLCMsg_Move::~CCLCMsg_Move()
 T CCLCMsg_RespondCvarValue::ByteSize() const
 T CCLCMsg_RespondCvarValue::Clear()
 T CCLCMsg_RespondCvarValue::GetCachedSize() const
 T CCLCMsg_RespondCvarValue::GetMetadata() const
 T CCLCMsg_RespondCvarValue::IsInitialized() const
 T CCLCMsg_RespondCvarValue::MergeFrom(CCLCMsg_RespondCvarValue const&)
 T CCLCMsg_RespondCvarValue::New() const
 T CCLCMsg_RespondCvarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_RespondCvarValue::SetCachedSize(int) const
 T CCLCMsg_RespondCvarValue::SharedDtor()
 T CCLCMsg_RespondCvarValue::~CCLCMsg_RespondCvarValue()
 T CCLCMsg_SplitPlayerConnect::ByteSize() const
 T CCLCMsg_SplitPlayerConnect::Clear()
 T CCLCMsg_SplitPlayerConnect::GetCachedSize() const
 T CCLCMsg_SplitPlayerConnect::GetMetadata() const
 T CCLCMsg_SplitPlayerConnect::IsInitialized() const
 T CCLCMsg_SplitPlayerConnect::MergeFrom(CCLCMsg_SplitPlayerConnect const&)
 T CCLCMsg_SplitPlayerConnect::New() const
 T CCLCMsg_SplitPlayerConnect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_SplitPlayerConnect::SetCachedSize(int) const
 T CCLCMsg_SplitPlayerConnect::~CCLCMsg_SplitPlayerConnect()
 T CCLCMsg_VoiceData::ByteSize() const
 T CCLCMsg_VoiceData::Clear()
 T CCLCMsg_VoiceData::GetCachedSize() const
 T CCLCMsg_VoiceData::GetMetadata() const
 T CCLCMsg_VoiceData::IsInitialized() const
 T CCLCMsg_VoiceData::MergeFrom(CCLCMsg_VoiceData const&)
 T CCLCMsg_VoiceData::New() const
 T CCLCMsg_VoiceData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_VoiceData::SetCachedSize(int) const
 T CCLCMsg_VoiceData::~CCLCMsg_VoiceData()
 T CCSAmmoDef::AddAmmoCost(char const*, int, int)
 T CCSAmmoDef::CCSAmmoDef()
 T CCSAmmoDef::GetBuySize(int) const
 T CCSAmmoDef::GetCost(int) const
 T CCSAmmoDef::~CCSAmmoDef()
 T CCSBot* CreateBot<CCSBot>(BotProfile const*, int)
 T CCSBot::AdjustSafeTime()
 T CCSBot::AdjustZoom(float)
 T CCSBot::Attack(CCSPlayer*)
 T CCSBot::AvoidEnemyGrenades()
 T CCSBot::AvoidPlayers(CUserCmd*)
 T CCSBot::BendLineOfSight(Vector const&, Vector const&, Vector*, float) const
 T CCSBot::Blind(float, float, float)
 T CCSBot::BotDeathThink()
 T CCSBot::BreakablesCheck()
 T CCSBot::BuildTrivialPath(Vector const&)
 T CCSBot::BuildUserCmd(CUserCmd&, QAngle const&, float, float, float, int, unsigned char)
 T CCSBot::BumpWeapon(CBaseCombatWeapon*)
 T CCSBot::Buy()
 T CCSBot::CCSBot()
 T CCSBot::CanActiveWeaponFire() const
 T CCSBot::CanHearNearbyEnemyGunfire(float) const
 T CCSBot::CanSeeLooseBomb() const
 T CCSBot::CanSeeNoisePosition() const
 T CCSBot::CanSeePlantedBomb() const
 T CCSBot::ComputeApproachPoints()
 T CCSBot::ComputeLadderAngles(float*, float*)
 T CCSBot::ComputeLadderEndpoint(bool)
 T CCSBot::ComputePartPositions(CCSPlayer*)
 T CCSBot::ComputePath(Vector const&, RouteType)
 T CCSBot::ComputePathPositions()
 T CCSBot::ComputeWeaponSightRange()
 T CCSBot::ContinueFollowing()
 T CCSBot::DebugDisplay() const
 T CCSBot::DecreaseMorale()
 T CCSBot::DefuseBomb()
 T CCSBot::DidPlayerJustFireWeapon(CCSPlayer const*) const
 T CCSBot::DoorCheck()
 T CCSBot::DrawApproachPoints() const
 T CCSBot::DrawPath()
 T CCSBot::EquipBestWeapon(bool)
 T CCSBot::EquipGrenade(bool)
 T CCSBot::EquipKnife()
 T CCSBot::EquipPistol()
 T CCSBot::EscapeFromBomb()
 T CCSBot::EscapeFromFlames()
 T CCSBot::Event_Killed(CTakeDamageInfo const&)
 T CCSBot::FeelerReflexAdjustment(Vector*)
 T CCSBot::FetchBomb()
 T CCSBot::FindEntitiesOnPath(float, CPushAwayEnumerator*, bool)
 T CCSBot::FindMostDangerousThreat()
 T CCSBot::FindOurPositionOnPath(Vector*, bool) const
 T CCSBot::FindPathPoint(float, Vector*, int*)
 T CCSBot::FireWeaponAtEnemy()
 T CCSBot::Follow(CCSPlayer*)
 T CCSBot::GetApproximateFallDamage(float) const
 T CCSBot::GetAttacker() const
 T CCSBot::GetDataDescMap()
 T CCSBot::GetDisposition() const
 T CCSBot::GetDispositionName() const
 T CCSBot::GetHidingSpotCheckTimestamp(HidingSpot*) const
 T CCSBot::GetHidingTime() const
 T CCSBot::GetMoraleName() const
 T CCSBot::GetMoveSpeed()
 T CCSBot::GetOffLadder()
 T CCSBot::GetPartPosition(CCSPlayer*, CCSBot::VisiblePartType) const
 T CCSBot::GetPathDistanceRemaining() const
 T CCSBot::GetPlace() const
 T CCSBot::GetRangeToFarthestEscortedHostage() const
 T CCSBot::GetRecognizedEnemy()
 T CCSBot::GetSafeTimeRemaining() const
 T CCSBot::GetSimpleGroundHeightWithFloor(Vector const&, float*, Vector*)
 T CCSBot::GetTaskName() const
 T CCSBot::GiveWeapon(char const*)
 T CCSBot::GuardRandomZone(float)
 T CCSBot::HasGrenade() const
 T CCSBot::HasNotSeenEnemyForLongTime() const
 T CCSBot::HeardInterestingNoise()
 T CCSBot::Hide(CNavArea*, float, float, bool)
 T CCSBot::Hide(Vector const&, float, bool)
 T CCSBot::Hunt()
 T CCSBot::Idle()
 T CCSBot::IgnoreEnemies(float)
 T CCSBot::IncreaseMorale()
 T CCSBot::InhibitLookAround(float)
 T CCSBot::Initialize(BotProfile const*, int)
 T CCSBot::InvestigateNoise()
 T CCSBot::IsAnyVisibleEnemyLookingAtMe(bool) const
 T CCSBot::IsAtEnemySpawn() const
 T CCSBot::IsAtHidingSpot() const
 T CCSBot::IsAttacking() const
 T CCSBot::IsBeyondBotMaxVisionDistance(Vector const&) const
 T CCSBot::IsBusy() const
 T CCSBot::IsBuying() const
 T CCSBot::IsDefusingBomb() const
 T CCSBot::IsDoingScenario() const
 T CCSBot::IsEscapingFromBomb() const
 T CCSBot::IsEscapingFromFlames() const
 T CCSBot::IsFriendInLineOfFire()
 T CCSBot::IsFriendInTheWay(Vector const&)
 T CCSBot::IsHiding() const
 T CCSBot::IsHunting() const
 T CCSBot::IsHurrying() const
 T CCSBot::IsInvestigatingNoise() const
 T CCSBot::IsNoiseHeard() const
 T CCSBot::IsNoticable(CCSPlayer const*, unsigned char) const
 T CCSBot::IsOutnumbered() const
 T CCSBot::IsPrimaryWeaponEmpty() const
 T CCSBot::IsRecognizedEnemyProtectedByShield()
 T CCSBot::IsRecognizedEnemyReloading()
 T CCSBot::IsRogue() const
 T CCSBot::IsRunning() const
 T CCSBot::IsSafe() const
 T CCSBot::IsSniper() const
 T CCSBot::IsSniping() const
 T CCSBot::IsUsingGrenade() const
 T CCSBot::IsUsingKnife() const
 T CCSBot::IsUsingPistol() const
 T CCSBot::IsUsingShotgun() const
 T CCSBot::IsUsingSniperRifle() const
 T CCSBot::IsVisible(CCSPlayer*, bool, unsigned char*) const
 T CCSBot::IsVisible(Vector const&, bool, CBaseEntity const*) const
 T CCSBot::IsWellPastSafe() const
 T CCSBot::Jump(bool)
 T CCSBot::LookForGrenadeTargets()
 T CCSBot::MoveAwayFromPosition(Vector const&)
 T CCSBot::MoveTo(Vector const&, RouteType)
 T CCSBot::MoveToInitialEncounter()
 T CCSBot::MoveTowardsPosition(Vector const&)
 T CCSBot::NoticeLooseBomb() const
 T CCSBot::ObjectCaps()
 T CCSBot::OnAudibleEvent(IGameEvent*, CBasePlayer*, float, PriorityType, bool, bool, Vector const*)
 T CCSBot::OnBombBeep(IGameEvent*)
 T CCSBot::OnBombDefuseAbort(IGameEvent*)
 T CCSBot::OnBombDefuseBegin(IGameEvent*)
 T CCSBot::OnBombDefused(IGameEvent*)
 T CCSBot::OnBombExploded(IGameEvent*)
 T CCSBot::OnBombPickedUp(IGameEvent*)
 T CCSBot::OnBombPlanted(IGameEvent*)
 T CCSBot::OnBreakBreakable(IGameEvent*)
 T CCSBot::OnBreakProp(IGameEvent*)
 T CCSBot::OnBulletImpact(IGameEvent*)
 T CCSBot::OnDecoyDetonate(IGameEvent*)
 T CCSBot::OnDecoyFiring(IGameEvent*)
 T CCSBot::OnDoorMoving(IGameEvent*)
 T CCSBot::OnEnteredNavArea(CNavArea*)
 T CCSBot::OnFlashbangDetonate(IGameEvent*)
 T CCSBot::OnGrenadeBounce(IGameEvent*)
 T CCSBot::OnHEGrenadeDetonate(IGameEvent*)
 T CCSBot::OnHostageFollows(IGameEvent*)
 T CCSBot::OnHostageRescuedAll(IGameEvent*)
 T CCSBot::OnMolotovDetonate(IGameEvent*)
 T CCSBot::OnNavBlocked(IGameEvent*)
 T CCSBot::OnPlayerDeath(IGameEvent*)
 T CCSBot::OnPlayerFallDamage(IGameEvent*)
 T CCSBot::OnPlayerFootstep(IGameEvent*)
 T CCSBot::OnPlayerRadio(IGameEvent*)
 T CCSBot::OnRoundEnd(IGameEvent*)
 T CCSBot::OnRoundStart(IGameEvent*)
 T CCSBot::OnSmokeGrenadeDetonate(IGameEvent*)
 T CCSBot::OnTakeDamage(CTakeDamageInfo const&)
 T CCSBot::OnWeaponFire(IGameEvent*)
 T CCSBot::OnWeaponFireOnEmpty(IGameEvent*)
 T CCSBot::OnWeaponReload(IGameEvent*)
 T CCSBot::OnWeaponZoom(IGameEvent*)
 T CCSBot::OpenDoor(CBaseEntity*)
 T CCSBot::OutnumberedCount() const
 T CCSBot::PickNewAimSpot()
 T CCSBot::PickupHostage(CBaseEntity*)
 T CCSBot::PlantBomb()
 T CCSBot::PrimaryAttack()
 T CCSBot::PushawayTouch(CBaseEntity*)
 T CCSBot::ReloadCheck()
 T CCSBot::ResetStuckMonitor()
 T CCSBot::ResetValues()
 T CCSBot::RespondToHelpRequest(CCSPlayer*, unsigned int, float)
 T CCSBot::RespondToRadioCommands()
 T CCSBot::SendRadioMessage(RadioType)
 T CCSBot::SetBotEnemy(CCSPlayer*)
 T CCSBot::SetDisposition(CCSBot::DispositionType)
 T CCSBot::SetHidingSpotCheckTimestamp(HidingSpot*)
 T CCSBot::SetLookAt(char const*, Vector const&, PriorityType, float, bool, float, bool)
 T CCSBot::SetState(BotState*)
 T CCSBot::SetupLadderMovement()
 T CCSBot::SilencerCheck()
 T CCSBot::SlowNoise(float) const
 T CCSBot::Spawn()
 T CCSBot::SpeakAudio(char const*, float, int)
 T CCSBot::SpeakAudioResponseRules(char const*, ResponseRules::CriteriaSet*, float)
 T CCSBot::StayOnNavMesh()
 T CCSBot::StopAttacking()
 T CCSBot::StopFollowing()
 T CCSBot::StrafeAwayFromPosition(Vector const&)
 T CCSBot::StuckCheck()
 T CCSBot::ThrowGrenade(Vector const&)
 T CCSBot::Touch(CBaseEntity*)
 T CCSBot::TryToHide(CNavArea*, float, float, bool, bool)
 T CCSBot::TryToRetreat(float, float)
 T CCSBot::Update()
 T CCSBot::UpdateAimPrediction()
 T CCSBot::UpdateGrenadeThrow()
 T CCSBot::UpdateHostageEscortCount()
 T CCSBot::UpdateLadderMovement()
 T CCSBot::UpdateLookAngles()
 T CCSBot::UpdateLookAround(bool)
 T CCSBot::UpdateLookAt()
 T CCSBot::UpdateLookAtNoise()
 T CCSBot::UpdatePanicLookAround()
 T CCSBot::UpdatePathMovement(bool)
 T CCSBot::UpdatePeripheralVision()
 T CCSBot::UpdateReactionQueue()
 T CCSBot::Upkeep()
 T CCSBot::Walk()
 T CCSBot::Wiggle()
 T CCSBot::~CCSBot()
 T CCSBotManager::AllocateBotEntity()
 T CCSBotManager::BombBeepEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombBeepEvent::GetEventDebugID()
 T CCSBotManager::BombBeepEvent::GetEventName() const
 T CCSBotManager::BombBeepEvent::~BombBeepEvent()
 T CCSBotManager::BombDefuseAbortEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombDefuseAbortEvent::GetEventDebugID()
 T CCSBotManager::BombDefuseAbortEvent::GetEventName() const
 T CCSBotManager::BombDefuseAbortEvent::~BombDefuseAbortEvent()
 T CCSBotManager::BombDefuseBeginEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombDefuseBeginEvent::GetEventDebugID()
 T CCSBotManager::BombDefuseBeginEvent::GetEventName() const
 T CCSBotManager::BombDefuseBeginEvent::~BombDefuseBeginEvent()
 T CCSBotManager::BombDefusedEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombDefusedEvent::GetEventDebugID()
 T CCSBotManager::BombDefusedEvent::GetEventName() const
 T CCSBotManager::BombDefusedEvent::~BombDefusedEvent()
 T CCSBotManager::BombExplodedEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombExplodedEvent::GetEventDebugID()
 T CCSBotManager::BombExplodedEvent::GetEventName() const
 T CCSBotManager::BombExplodedEvent::~BombExplodedEvent()
 T CCSBotManager::BombPickedUpEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombPickedUpEvent::GetEventDebugID()
 T CCSBotManager::BombPickedUpEvent::GetEventName() const
 T CCSBotManager::BombPickedUpEvent::~BombPickedUpEvent()
 T CCSBotManager::BombPlantedEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BombPlantedEvent::GetEventDebugID()
 T CCSBotManager::BombPlantedEvent::GetEventName() const
 T CCSBotManager::BombPlantedEvent::~BombPlantedEvent()
 T CCSBotManager::BotAddCommand(int, bool, char const*, CSWeaponType, BotDifficultyType)
 T CCSBotManager::BotPlaceCommand()
 T CCSBotManager::BreakBreakableEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BreakBreakableEvent::GetEventDebugID()
 T CCSBotManager::BreakBreakableEvent::GetEventName() const
 T CCSBotManager::BreakBreakableEvent::~BreakBreakableEvent()
 T CCSBotManager::BreakPropEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BreakPropEvent::GetEventDebugID()
 T CCSBotManager::BreakPropEvent::GetEventName() const
 T CCSBotManager::BreakPropEvent::~BreakPropEvent()
 T CCSBotManager::BulletImpactEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::BulletImpactEvent::GetEventDebugID()
 T CCSBotManager::BulletImpactEvent::GetEventName() const
 T CCSBotManager::BulletImpactEvent::~BulletImpactEvent()
 T CCSBotManager::CCSBotManager()
 T CCSBotManager::CheckForBlockedZones()
 T CCSBotManager::ClientCommand(CBasePlayer*, CCommand const&)
 T CCSBotManager::ClientDisconnect(CBaseEntity*)
 T CCSBotManager::DecoyDetonateEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::DecoyDetonateEvent::GetEventDebugID()
 T CCSBotManager::DecoyDetonateEvent::GetEventName() const
 T CCSBotManager::DecoyDetonateEvent::~DecoyDetonateEvent()
 T CCSBotManager::DecoyFiringEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::DecoyFiringEvent::GetEventDebugID()
 T CCSBotManager::DecoyFiringEvent::GetEventName() const
 T CCSBotManager::DecoyFiringEvent::~DecoyFiringEvent()
 T CCSBotManager::DoorMovingEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::DoorMovingEvent::GetEventDebugID()
 T CCSBotManager::DoorMovingEvent::GetEventName() const
 T CCSBotManager::DoorMovingEvent::~DoorMovingEvent()
 T CCSBotManager::ExtractScenarioData()
 T CCSBotManager::FlashbangDetonateEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::FlashbangDetonateEvent::GetEventDebugID()
 T CCSBotManager::FlashbangDetonateEvent::GetEventName() const
 T CCSBotManager::FlashbangDetonateEvent::~FlashbangDetonateEvent()
 T CCSBotManager::GetBombTimeLeft() const
 T CCSBotManager::GetClosestZone(Vector const&) const
 T CCSBotManager::GetDifficultyLevel()
 T CCSBotManager::GetPlayerPriority(CBasePlayer*) const
 T CCSBotManager::GetRadioMessageInterval(RadioType, int) const
 T CCSBotManager::GetRandomAreaInZone(CCSBotManager::Zone const*) const
 T CCSBotManager::GetRandomPositionInZone(CCSBotManager::Zone const*) const
 T CCSBotManager::GetRandomSpawn(int) const
 T CCSBotManager::GetRandomZone() const
 T CCSBotManager::GetZone(Vector const&) const
 T CCSBotManager::GrenadeBounceEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::GrenadeBounceEvent::GetEventDebugID()
 T CCSBotManager::GrenadeBounceEvent::GetEventName() const
 T CCSBotManager::GrenadeBounceEvent::~GrenadeBounceEvent()
 T CCSBotManager::HEGrenadeDetonateEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::HEGrenadeDetonateEvent::GetEventDebugID()
 T CCSBotManager::HEGrenadeDetonateEvent::GetEventName() const
 T CCSBotManager::HEGrenadeDetonateEvent::~HEGrenadeDetonateEvent()
 T CCSBotManager::HostageFollowsEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::HostageFollowsEvent::GetEventDebugID()
 T CCSBotManager::HostageFollowsEvent::GetEventName() const
 T CCSBotManager::HostageFollowsEvent::~HostageFollowsEvent()
 T CCSBotManager::HostageRescuedAllEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::HostageRescuedAllEvent::GetEventDebugID()
 T CCSBotManager::HostageRescuedAllEvent::GetEventName() const
 T CCSBotManager::HostageRescuedAllEvent::~HostageRescuedAllEvent()
 T CCSBotManager::IsImportantPlayer(CCSPlayer*) const
 T CCSBotManager::IsWeaponUseable(CWeaponCSBase const*) const
 T CCSBotManager::MaintainBotQuota()
 T CCSBotManager::MolotovDetonateEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::MolotovDetonateEvent::GetEventDebugID()
 T CCSBotManager::MolotovDetonateEvent::GetEventName() const
 T CCSBotManager::MolotovDetonateEvent::~MolotovDetonateEvent()
 T CCSBotManager::NavBlockedEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::NavBlockedEvent::GetEventDebugID()
 T CCSBotManager::NavBlockedEvent::GetEventName() const
 T CCSBotManager::NavBlockedEvent::~NavBlockedEvent()
 T CCSBotManager::OnBombBeep(IGameEvent*)
 T CCSBotManager::OnBombDefuseAbort(IGameEvent*)
 T CCSBotManager::OnBombDefuseBegin(IGameEvent*)
 T CCSBotManager::OnBombDefused(IGameEvent*)
 T CCSBotManager::OnBombExploded(IGameEvent*)
 T CCSBotManager::OnBombPickedUp(IGameEvent*)
 T CCSBotManager::OnBombPlanted(IGameEvent*)
 T CCSBotManager::OnBreakBreakable(IGameEvent*)
 T CCSBotManager::OnBreakProp(IGameEvent*)
 T CCSBotManager::OnBulletImpact(IGameEvent*)
 T CCSBotManager::OnDecoyDetonate(IGameEvent*)
 T CCSBotManager::OnDecoyFiring(IGameEvent*)
 T CCSBotManager::OnDoorMoving(IGameEvent*)
 T CCSBotManager::OnFlashbangDetonate(IGameEvent*)
 T CCSBotManager::OnGrenadeBounce(IGameEvent*)
 T CCSBotManager::OnHEGrenadeDetonate(IGameEvent*)
 T CCSBotManager::OnHostageFollows(IGameEvent*)
 T CCSBotManager::OnHostageRescuedAll(IGameEvent*)
 T CCSBotManager::OnMolotovDetonate(IGameEvent*)
 T CCSBotManager::OnNavBlocked(IGameEvent*)
 T CCSBotManager::OnPlayerDeath(IGameEvent*)
 T CCSBotManager::OnPlayerFallDamage(IGameEvent*)
 T CCSBotManager::OnPlayerFootstep(IGameEvent*)
 T CCSBotManager::OnPlayerRadio(IGameEvent*)
 T CCSBotManager::OnRoundEnd(IGameEvent*)
 T CCSBotManager::OnRoundFreezeEnd(IGameEvent*)
 T CCSBotManager::OnRoundStart(IGameEvent*)
 T CCSBotManager::OnServerShutdown(IGameEvent*)
 T CCSBotManager::OnSmokeGrenadeDetonate(IGameEvent*)
 T CCSBotManager::OnWeaponFire(IGameEvent*)
 T CCSBotManager::OnWeaponFireOnEmpty(IGameEvent*)
 T CCSBotManager::OnWeaponReload(IGameEvent*)
 T CCSBotManager::OnWeaponZoom(IGameEvent*)
 T CCSBotManager::PlayerDeathEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::PlayerDeathEvent::GetEventDebugID()
 T CCSBotManager::PlayerDeathEvent::GetEventName() const
 T CCSBotManager::PlayerDeathEvent::~PlayerDeathEvent()
 T CCSBotManager::PlayerFallDamageEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::PlayerFallDamageEvent::GetEventDebugID()
 T CCSBotManager::PlayerFallDamageEvent::GetEventName() const
 T CCSBotManager::PlayerFallDamageEvent::~PlayerFallDamageEvent()
 T CCSBotManager::PlayerFootstepEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::PlayerFootstepEvent::GetEventDebugID()
 T CCSBotManager::PlayerFootstepEvent::GetEventName() const
 T CCSBotManager::PlayerFootstepEvent::~PlayerFootstepEvent()
 T CCSBotManager::PlayerRadioEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::PlayerRadioEvent::GetEventDebugID()
 T CCSBotManager::PlayerRadioEvent::GetEventName() const
 T CCSBotManager::PlayerRadioEvent::~PlayerRadioEvent()
 T CCSBotManager::RestartRound()
 T CCSBotManager::RoundEndEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::RoundEndEvent::GetEventDebugID()
 T CCSBotManager::RoundEndEvent::GetEventName() const
 T CCSBotManager::RoundEndEvent::~RoundEndEvent()
 T CCSBotManager::RoundFreezeEndEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::RoundFreezeEndEvent::GetEventDebugID()
 T CCSBotManager::RoundFreezeEndEvent::GetEventName() const
 T CCSBotManager::RoundFreezeEndEvent::~RoundFreezeEndEvent()
 T CCSBotManager::RoundStartEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::RoundStartEvent::GetEventDebugID()
 T CCSBotManager::RoundStartEvent::GetEventName() const
 T CCSBotManager::RoundStartEvent::~RoundStartEvent()
 T CCSBotManager::ServerActivate()
 T CCSBotManager::ServerCommand(char const*)
 T CCSBotManager::ServerDeactivate()
 T CCSBotManager::ServerShutdownEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::ServerShutdownEvent::GetEventDebugID()
 T CCSBotManager::ServerShutdownEvent::GetEventName() const
 T CCSBotManager::ServerShutdownEvent::~ServerShutdownEvent()
 T CCSBotManager::SetLooseBomb(CBaseEntity*)
 T CCSBotManager::SetRadioMessageTimestamp(RadioType, int)
 T CCSBotManager::SmokeGrenadeDetonateEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::SmokeGrenadeDetonateEvent::GetEventDebugID()
 T CCSBotManager::SmokeGrenadeDetonateEvent::GetEventName() const
 T CCSBotManager::SmokeGrenadeDetonateEvent::~SmokeGrenadeDetonateEvent()
 T CCSBotManager::StartFrame()
 T CCSBotManager::WeaponFireEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::WeaponFireEvent::GetEventDebugID()
 T CCSBotManager::WeaponFireEvent::GetEventName() const
 T CCSBotManager::WeaponFireEvent::~WeaponFireEvent()
 T CCSBotManager::WeaponFireOnEmptyEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::WeaponFireOnEmptyEvent::GetEventDebugID()
 T CCSBotManager::WeaponFireOnEmptyEvent::GetEventName() const
 T CCSBotManager::WeaponFireOnEmptyEvent::~WeaponFireOnEmptyEvent()
 T CCSBotManager::WeaponReloadEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::WeaponReloadEvent::GetEventDebugID()
 T CCSBotManager::WeaponReloadEvent::GetEventName() const
 T CCSBotManager::WeaponReloadEvent::~WeaponReloadEvent()
 T CCSBotManager::WeaponZoomEvent::FireGameEvent(IGameEvent*)
 T CCSBotManager::WeaponZoomEvent::GetEventDebugID()
 T CCSBotManager::WeaponZoomEvent::GetEventName() const
 T CCSBotManager::WeaponZoomEvent::~WeaponZoomEvent()
 T CCSBotManager::~CCSBotManager()
 T CCSEntitySpotting::FrameUpdatePostEntityThink()
 T CCSEntitySpotting::Init()
 T CCSEntitySpotting::Name()
 T CCSEntitySpotting::UpdateSpottedEntities()
 T CCSEntitySpotting::~CCSEntitySpotting()
 T CCSEventLog::Init()
 T CCSEventLog::PrintCStrikeEvent(IGameEvent*)
 T CCSEventLog::PrintEvent(IGameEvent*)
 T CCSEventLog::~CCSEventLog()
 T CCSFunFactMgr::CCSFunFactMgr()
 T CCSFunFactMgr::FireGameEvent(IGameEvent*)
 T CCSFunFactMgr::GetRoundEndFunFact(int, e_RoundEndReason, FunFact&)
 T CCSFunFactMgr::Init()
 T CCSFunFactMgr::ScoreFunFact(FunFact const&)
 T CCSFunFactMgr::Shutdown()
 T CCSFunFactMgr::Update(float)
 T CCSFunFactMgr::~CCSFunFactMgr()
 T CCSGCServerSystem::GetSessionInstanceIndex() const
 T CCSGCServerSystem::LevelInitPreEntity()
 T CCSGCServerSystem::LevelShutdownPostEntity()
 T CCSGCServerSystem::PostInit()
 T CCSGCServerSystem::PostInitGC()
 T CCSGCServerSystem::PreClientUpdate()
 T CCSGCServerSystem::PreInitGC()
 T CCSGCServerSystem::SOCacheSubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T CCSGCServerSystem::SOCacheUnsubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T CCSGCServerSystem::SOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSGCServerSystem::SODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSGCServerSystem::SOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSGCServerSystem::Shutdown()
 T CCSGCServerSystem::~CCSGCServerSystem()
 T CCSGameMovement::Accelerate(Vector&, float, float)
 T CCSGameMovement::AirMove()
 T CCSGameMovement::CanAccelerate()
 T CCSGameMovement::CanUnduck()
 T CCSGameMovement::CheckForLadders(bool)
 T CCSGameMovement::CheckJumpButton()
 T CCSGameMovement::CheckParameters()
 T CCSGameMovement::ClimbSpeed() const
 T CCSGameMovement::DecayAimPunchAngle()
 T CCSGameMovement::Duck()
 T CCSGameMovement::FinishDuck()
 T CCSGameMovement::FinishUnDuck()
 T CCSGameMovement::LadderDistance() const
 T CCSGameMovement::LadderLateralMultiplier() const
 T CCSGameMovement::LadderMask() const
 T CCSGameMovement::LadderMove()
 T CCSGameMovement::OnJump(float)
 T CCSGameMovement::OnLadder(CGameTrace&)
 T CCSGameMovement::OnLand(float)
 T CCSGameMovement::PlayerMove()
 T CCSGameMovement::PlayerSolidMask(bool, CBasePlayer*) const
 T CCSGameMovement::PreventBunnyJumping()
 T CCSGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)
 T CCSGameMovement::ReduceTimers()
 T CCSGameMovement::WalkMove()
 T CCSGameMovement::~CCSGameMovement()
 T CCSGameRules::AIClassText(int)
 T CCSGameRules::AddGunGameWeapon(char const*, int, int)
 T CCSGameRules::AddHostageRescueTime()
 T CCSGameRules::AddTeamAccount(int, TeamCashAward::Type, int, char const*)
 T CCSGameRules::AllowTaunts()
 T CCSGameRules::AreTeamsPlayingSwitchedSides() const
 T CCSGameRules::AssignStartingMoneyToAllPlayers()
 T CCSGameRules::BalanceTeams()
 T CCSGameRules::BombRoundEndCheck(bool)
 T CCSGameRules::BroadcastSound(char const*, int)
 T CCSGameRules::CCSGameRules()
 T CCSGameRules::CalculateEndOfRoundMVP()
 T CCSGameRules::CalculateMaxGunGameProgressiveWeaponIndex()
 T CCSGameRules::CanClientCustomizeOwnIdentity()
 T CCSGameRules::CanPlayerHearTalker(CBasePlayer*, CBasePlayer*, bool)
 T CCSGameRules::CheckAndAwardAssists(CCSPlayer*, CCSPlayer*)
 T CCSGameRules::CheckForGiftsLeaderboardUpdate()
 T CCSGameRules::CheckFragLimit()
 T CCSGameRules::CheckFreezePeriodExpired()
 T CCSGameRules::CheckGameOver()
 T CCSGameRules::CheckLevelInitialized()
 T CCSGameRules::CheckMapConditions()
 T CCSGameRules::CheckRespawnWaves()
 T CCSGameRules::CheckRestartRound()
 T CCSGameRules::CheckRoundTimeExpired()
 T CCSGameRules::CheckSetVoteTime()
 T CCSGameRules::CheckTotalSmokedLength(float, Vector, Vector, Vector)
 T CCSGameRules::CheckWinConditions()
 T CCSGameRules::CleanUpMap()
 T CCSGameRules::ClearGunGameData()
 T CCSGameRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CCSGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CCSGameRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
 T CCSGameRules::ClientDisconnected(edict_t*)
 T CCSGameRules::ClientSettingsChanged(CBasePlayer*)
 T CCSGameRules::CreateEndMatchMapGroupVoteOptions()
 T CCSGameRules::CreateStandardEntities()
 T CCSGameRules::CreateWeaponKillGameEvent(char const*, CTakeDamageInfo const&)
 T CCSGameRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameRules::DefaultFOV()
 T CCSGameRules::DumpTimers() const
 T CCSGameRules::EndGameFrame()
 T CCSGameRules::EndRound()
 T CCSGameRules::EndWarmup()
 T CCSGameRules::FAllowNPCs()
 T CCSGameRules::FPlayerCanRespawn(CBasePlayer*)
 T CCSGameRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CCSGameRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
 T CCSGameRules::FlPlayerFallDamage(CBasePlayer*)
 T CCSGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
 T CCSGameRules::ForceSplitScreenPlayersOnToSameTeam()
 T CCSGameRules::GenerateSpawnPointListsFirstTime()
 T CCSGameRules::GetAllowWeaponSwitch()
 T CCSGameRules::GetAmountOfEntityVisible(Vector&, CBaseEntity*)
 T CCSGameRules::GetBuyTimeLength()
 T CCSGameRules::GetCMMItemDropRevealDuration()
 T CCSGameRules::GetChatFormat(bool, CBasePlayer*)
 T CCSGameRules::GetChatLocation(bool, CBasePlayer*)
 T CCSGameRules::GetChatPrefix(bool, CBasePlayer*)
 T CCSGameRules::GetCurrentGunGameWeapon(int, int)
 T CCSGameRules::GetCustomBotDifficulty() const
 T CCSGameRules::GetEncryptionKey()
 T CCSGameRules::GetExplosionDamageAdjustment(Vector&, Vector&, CBaseEntity*)
 T CCSGameRules::GetGameDescription()
 T CCSGameRules::GetGunGameNumKillsRequiredForWeapon(int, int)
 T CCSGameRules::GetGunGameTRBonusGrenade(CCSPlayer*)
 T CCSGameRules::GetHumanTeam()
 T CCSGameRules::GetMapElapsedTime()
 T CCSGameRules::GetMapRemainingTime()
 T CCSGameRules::GetMatch()
 T CCSGameRules::GetMaxHumanPlayers() const
 T CCSGameRules::GetMaxMoney()
 T CCSGameRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CCSGameRules::GetNextGunGameWeapon(int, int)
 T CCSGameRules::GetNextRespawnWave(int, CBasePlayer*)
 T CCSGameRules::GetNextSpawnpoint(int)
 T CCSGameRules::GetNumProgressiveGunGameWeapons(int) const
 T CCSGameRules::GetPlayerCounts(CCSGameRules::TeamPlayerCounts*)
 T CCSGameRules::GetPlayerSpawnSpot(CBasePlayer*)
 T CCSGameRules::GetPreviousGunGameWeapon(int, int)
 T CCSGameRules::GetRespawnWaveMaxLength(int, bool)
 T CCSGameRules::GetRoundElapsedTime()
 T CCSGameRules::GetRoundRestartTime()
 T CCSGameRules::GetRoundStartTime()
 T CCSGameRules::GetStartMoney()
 T CCSGameRules::GetViewVectors() const
 T CCSGameRules::GetWarmupPeriodEndTime() const
 T CCSGameRules::GetWeaponScoreForDeathmatch(int)
 T CCSGameRules::GiveC4ToRandomPlayer()
 T CCSGameRules::GiveDefuserToRandomPlayer()
 T CCSGameRules::GoToIntermission(bool)
 T CCSGameRules::GunGameProgressiveEndCheck()
 T CCSGameRules::HandleScrambleTeams()
 T CCSGameRules::HandleSwapTeams()
 T CCSGameRules::HasPassedMinRespawnTime(CBasePlayer*)
 T CCSGameRules::HostageRescueRoundEndCheck(bool)
 T CCSGameRules::HostageTouched()
 T CCSGameRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CCSGameRules::IgnorePlayerKillCommand() const
 T CCSGameRules::IncrementAndTerminateRound(float, int)
 T CCSGameRules::InitDefaultAIRelationships()
 T CCSGameRules::InitializeGameTypeAndMode()
 T CCSGameRules::InitializePlayerCounts(int&, int&, int&, int&)
 T CCSGameRules::IsArmorFree() const
 T CCSGameRules::IsBombDefuseMap() const
 T CCSGameRules::IsBuyTimeElapsed()
 T CCSGameRules::IsCSGOBirthday()
 T CCSGameRules::IsClanTeam(CTeam*)
 T CCSGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
 T CCSGameRules::IsEndMatchVotingForNextMap()
 T CCSGameRules::IsFinalGunGameProgressiveWeapon(int, int)
 T CCSGameRules::IsFreezePeriod()
 T CCSGameRules::IsFriendlyFireOn() const
 T CCSGameRules::IsGameRestarting()
 T CCSGameRules::IsHostageRescueMap() const
 T CCSGameRules::IsLastRoundBeforeHalfTime()
 T CCSGameRules::IsLastRoundOfMatch() const
 T CCSGameRules::IsLogoMap() const
 T CCSGameRules::IsMatchPoint() const
 T CCSGameRules::IsMatchWaitingForResume()
 T CCSGameRules::IsPistolRound()
 T CCSGameRules::IsPlayingClassic() const
 T CCSGameRules::IsPlayingClassicCompetitive() const
 T CCSGameRules::IsPlayingGunGame() const
 T CCSGameRules::IsPlayingGunGameDeathmatch() const
 T CCSGameRules::IsPlayingGunGameProgressive() const
 T CCSGameRules::IsPlayingGunGameTRBomb() const
 T CCSGameRules::IsPlayingOffline() const
 T CCSGameRules::IsPlayingTraining() const
 T CCSGameRules::IsQueuedMatchmaking() const
 T CCSGameRules::IsRoundOver() const
 T CCSGameRules::IsSpawnPointHiddenFromOtherPlayers(CBaseEntity*, CBasePlayer*)
 T CCSGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
 T CCSGameRules::IsTeamChangeSilent(CBasePlayer*, int, bool, bool)
 T CCSGameRules::IsTeammateSolid() const
 T CCSGameRules::IsThereABomb()
 T CCSGameRules::IsThereABomber()
 T CCSGameRules::IsWarmupPeriod() const
 T CCSGameRules::IsWeaponAllowed(CCSWeaponInfo const*, int, CEconItemView*)
 T CCSGameRules::LevelInitPostEntity()
 T CCSGameRules::LevelInitPreEntity()
 T CCSGameRules::LevelShutdown()
 T CCSGameRules::LoadRoundDataInformation(char const*)
 T CCSGameRules::MaxNumPlayersOnCTTeam()
 T CCSGameRules::MaxNumPlayersOnTerrTeam()
 T CCSGameRules::ModifyRealtimeBotDifficulty(CCSPlayer*)
 T CCSGameRules::MoveHumansToHumanTeam()
 T CCSGameRules::NeededPlayersCheck(bool&)
 T CCSGameRules::PickRandomWeaponForDMBonus()
 T CCSGameRules::PlayTextureSounds()
 T CCSGameRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*, bool)
 T CCSGameRules::PlayerCashAwardValue(PlayerCashAward::Type)
 T CCSGameRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CCSGameRules::PlayerSpawn(CBasePlayer*)
 T CCSGameRules::PlayerTookDamage(CCSPlayer*, CTakeDamageInfo const&)
 T CCSGameRules::PostRestartRound()
 T CCSGameRules::ProcessAutoBalance()
 T CCSGameRules::ProcessEndOfRoundAchievements(int, int)
 T CCSGameRules::QueuedMatchmakingPlayersDataFindOrCreate(CCSPlayer*)
 T CCSGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
 T CCSGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, bool)
 T CCSGameRules::RandomizeAllowedWeaponChoices()
 T CCSGameRules::ReadMultiplayCvars()
 T CCSGameRules::RecordPlayerItemDrop(CEconItemPreviewDataBlock const&)
 T CCSGameRules::RefreshCurrentSpawnPointLists()
 T CCSGameRules::RefreshSkillData(bool)
 T CCSGameRules::RegisterScriptFunctions()
 T CCSGameRules::ResetForTradeshow()
 T CCSGameRules::RestartRound()
 T CCSGameRules::RewardMatchEndDrops(bool)
 T CCSGameRules::RoundEnd()
 T CCSGameRules::RoundWin()
 T CCSGameRules::SaveRoundDataInformation(char const*)
 T CCSGameRules::ScoreBlindEnemy(CCSPlayer*)
 T CCSGameRules::ScoreBlindFriendly(CCSPlayer*)
 T CCSGameRules::ScoreBombDefuse(CCSPlayer*, bool)
 T CCSGameRules::ScoreBombExploded(CCSPlayer*)
 T CCSGameRules::ScoreBombPlant(CCSPlayer*)
 T CCSGameRules::ScoreFriendlyFire(CCSPlayer*, float)
 T CCSGameRules::ScoreHostageDamage(CCSPlayer*, float)
 T CCSGameRules::ScoreHostageKilled(CCSPlayer*)
 T CCSGameRules::ScoreHostageRescue(CCSPlayer*, CHostage*, bool)
 T CCSGameRules::ScorePlayerAssist(CCSPlayer*, CCSPlayer*)
 T CCSGameRules::ScorePlayerDamage(CCSPlayer*, float)
 T CCSGameRules::ScorePlayerKill(CCSPlayer*)
 T CCSGameRules::ScorePlayerObjectiveKill(CCSPlayer*)
 T CCSGameRules::ScorePlayerTeamKill(CCSPlayer*)
 T CCSGameRules::SelectDefaultTeam(bool)
 T CCSGameRules::SendKickBanToGC(CCSPlayer*, EMsgGCCStrike15_v2_MatchmakingKickBanReason_t)
 T CCSGameRules::SendKickBanToGCforAccountId(unsigned int, EMsgGCCStrike15_v2_MatchmakingKickBanReason_t)
 T CCSGameRules::SendPlayerItemDropsToClient()
 T CCSGameRules::SetAllowWeaponSwitch(bool)
 T CCSGameRules::SetDefaultPlayerTeam(CBasePlayer*)
 T CCSGameRules::ShouldCollide(int, int)
 T CCSGameRules::ShouldRecordMatchStats() const
 T CCSGameRules::ShowSpawnPoints(int)
 T CCSGameRules::ShuffleMasterSpawnPointLists()
 T CCSGameRules::ShuffleSpawnPointLists()
 T CCSGameRules::SortMasterSpawnPointLists()
 T CCSGameRules::SortSpawnPointLists()
 T CCSGameRules::SpawningLatePlayer(CCSPlayer*)
 T CCSGameRules::SplitScoreAmongPlayersInRange(int, int, CCSPlayer*, Vector const&, float, float)
 T CCSGameRules::SplitScoreAmongPlayersInZone(int, int, CCSPlayer*, unsigned int)
 T CCSGameRules::SwitchTeamsAtRoundReset()
 T CCSGameRules::TeamCashAwardValue(TeamCashAward::Type)
 T CCSGameRules::TeamExterminationCheck(int, int, int, int, bool)
 T CCSGameRules::TeamFull(int)
 T CCSGameRules::TeamStacked(int, int)
 T CCSGameRules::TerminateRound(float, int)
 T CCSGameRules::Think()
 T CCSGameRules::TrainingGivePlayerAmmo()
 T CCSGameRules::UpdateClientData(CBasePlayer*)
 T CCSGameRules::UpdateMatchStats(CCSPlayer*, int)
 T CCSGameRules::UpdateTeamClanNames(int)
 T CCSGameRules::UpdateTeamPredictions()
 T CCSGameRules::WillTeamHaveRoomForPlayer(CCSPlayer*, int)
 T CCSGameRules::~CCSGameRules()
 T CCSGameRulesProxy::GetServerClass()
 T CCSGameRulesProxy::YouForgotToImplementOrDeclareServerClass()
 T CCSGameRulesProxy::~CCSGameRulesProxy()
 T CCSGameStats::CCSGameStats()
 T CCSGameStats::CalcDominationAndRevenge(CCSPlayer*, CCSPlayer*, int*)
 T CCSGameStats::CalculateOverkill(CCSPlayer*, CCSPlayer*)
 T CCSGameStats::Clear()
 T CCSGameStats::ClearOGSRoundStats()
 T CCSGameStats::DumpMatchWeaponMetrics()
 T CCSGameStats::Event_AllHostagesRescued()
 T CCSGameStats::Event_BombDefused(CCSPlayer*)
 T CCSGameStats::Event_BombExploded(CCSPlayer*)
 T CCSGameStats::Event_BombPlanted(CCSPlayer*)
 T CCSGameStats::Event_BreakProp(CCSPlayer*, CBreakableProp*)
 T CCSGameStats::Event_HostageRescued(CCSPlayer*)
 T CCSGameStats::Event_LevelInit()
 T CCSGameStats::Event_LevelShutdown(float)
 T CCSGameStats::Event_MVPEarned(CCSPlayer*)
 T CCSGameStats::Event_MoneyEarned(CCSPlayer*, int)
 T CCSGameStats::Event_MoneySpent(CCSPlayer*, int, char const*)
 T CCSGameStats::Event_PlayerAvengedTeammate(CCSPlayer*, CCSPlayer*)
 T CCSGameStats::Event_PlayerConnected(CBasePlayer*)
 T CCSGameStats::Event_PlayerDamage(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameStats::Event_PlayerDisconnected(CBasePlayer*)
 T CCSGameStats::Event_PlayerDonatedWeapon(CCSPlayer*)
 T CCSGameStats::Event_PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameStats::Event_PlayerKilledOther(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
 T CCSGameStats::Event_PlayerKilled_PreWeaponDrop(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameStats::Event_ShotFired(CBasePlayer*, CBaseCombatWeapon*)
 T CCSGameStats::Event_ShotHit(CBasePlayer*, CTakeDamageInfo const&)
 T CCSGameStats::Event_WindowShattered(CBasePlayer*)
 T CCSGameStats::FindPlayerStats(CBasePlayer*) const
 T CCSGameStats::FireGameEvent(IGameEvent*)
 T CCSGameStats::GetStatContainerList()
 T CCSGameStats::IncrementStat(CCSPlayer*, CSStatType_t, int, bool, bool)
 T CCSGameStats::Init()
 T CCSGameStats::PreClientUpdate()
 T CCSGameStats::RecordWeaponHit(SWeaponHitData*)
 T CCSGameStats::ResetAllStats()
 T CCSGameStats::ResetPlayerClassMatchStats()
 T CCSGameStats::ResetPlayerStats(CBasePlayer*)
 T CCSGameStats::ResetRoundStats()
 T CCSGameStats::SendStatsToPlayer(CCSPlayer*, int)
 T CCSGameStats::SubmitGameStats(KeyValues*)
 T CCSGameStats::UpdatePlayerRoundStats(int)
 T CCSGameStats::UploadRoundStats()
 T CCSGameStats::~CCSGameStats()
 T CCSHLTVDirector::CreateShotFromEvent(CHLTVGameEvent*)
 T CCSHLTVDirector::GetModEvents()
 T CCSHLTVDirector::SetHLTVServer(IHLTVServer*)
 T CCSHLTVDirector::~CCSHLTVDirector()
 T CCSHostageAnimState::CalcMainActivity()
 T CCSHostageAnimState::GetFeetYawRate()
 T CCSHostageAnimState::~CCSHostageAnimState()
 T CCSInventoryManager::AddBaseItemCriteria(baseitemcriteria_t*, CItemSelectionCriteria*)
 T CCSInventoryManager::DoClassMapping(unsigned short, unsigned char)
 T CCSInventoryManager::GenerateBaseItems()
 T CCSInventoryManager::GetBaseItemForTeam(int, int)
 T CCSInventoryManager::Init()
 T CCSInventoryManager::PostInit()
 T CCSInventoryManager::Shutdown()
 T CCSInventoryManager::~CCSInventoryManager()
 T CCSMLightManager::LevelInitPostEntity()
 T CCSMLightManager::LevelInitPreEntity()
 T CCSMLightManager::LevelShutdownPostEntity()
 T CCSMLightManager::LevelShutdownPreEntity()
 T CCSMLightManager::Shutdown()
 T CCSMLightManager::~CCSMLightManager()
 T CCSMatch::AddCTScore(int)
 T CCSMatch::AddCTWins(int)
 T CCSMatch::AddTerroristScore(int)
 T CCSMatch::AddTerroristWins(int)
 T CCSMatch::EnableFullAlltalk(bool)
 T CCSMatch::GetWinningTeam()
 T CCSMatch::Reset()
 T CCSMatch::SetPhase(GamePhase)
 T CCSMatch::UpdateTeamScores()
 T CCSNavArea::CCSNavArea()
 T CCSNavArea::ComputeApproachAreas()
 T CCSNavArea::CustomAnalysis(bool)
 T CCSNavArea::Draw() const
 T CCSNavArea::GetDangerDecayRate() const
 T CCSNavArea::IsBlocked(int, bool) const
 T CCSNavArea::Load(CUtlBuffer&, unsigned int, unsigned int)
 T CCSNavArea::LoadLegacy(CUtlBuffer&, unsigned int, unsigned int)
 T CCSNavArea::OnRoundRestart()
 T CCSNavArea::OnServerActivate()
 T CCSNavArea::PostLoad()
 T CCSNavArea::Save(CUtlBuffer&, unsigned int) const
 T CCSNavArea::UpdateBlocked(bool, int)
 T CCSNavArea::~CCSNavArea()
 T CCSNavPath::BuildTrivialPath(Vector const&, Vector const&)
 T CCSNavPath::ComputePathPositions()
 T CCSNavPath::Draw(Vector const&)
 T CCSNavPath::GetLength() const
 T CCSPlayer::AddAccount(int, bool, bool, char const*)
 T CCSPlayer::AddAccountAward(PlayerCashAward::Type)
 T CCSPlayer::AddAccountAward(PlayerCashAward::Type, int, CWeaponCSBase const*)
 T CCSPlayer::AddAccountFromTeam(int, bool, TeamCashAward::Type)
 T CCSPlayer::AddBurnDamageDelt(int)
 T CCSPlayer::AddContributionScore(int)
 T CCSPlayer::AddDeathmatchKillScore(int, CSWeaponID, int, bool, char const*)
 T CCSPlayer::AddRoundProximityScore(int)
 T CCSPlayer::AddScore(int)
 T CCSPlayer::AddToRebuy(CSWeaponID, int)
 T CCSPlayer::AppendSpottedEntityUpdateMessage(int, bool, CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate*)
 T CCSPlayer::ApplyDeafnessEffect()
 T CCSPlayer::AttemptToBuyAmmo(int)
 T CCSPlayer::AttemptToBuyAssaultSuit()
 T CCSPlayer::AttemptToBuyDMBonusWeapon()
 T CCSPlayer::AttemptToBuyDefuser()
 T CCSPlayer::AttemptToBuyNightVision()
 T CCSPlayer::AttemptToBuyVest()
 T CCSPlayer::AttemptToExitFreezeCam()
 T CCSPlayer::AutoBuyAmmo()
 T CCSPlayer::AwardAchievement(int, int)
 T CCSPlayer::Blind(float, float, float)
 T CCSPlayer::BumpWeapon(CBaseCombatWeapon*)
 T CCSPlayer::BuyGunAmmo(CBaseCombatWeapon*, bool)
 T CCSPlayer::BuyRandom()
 T CCSPlayer::CCSPlayer()
 T CCSPlayer::CSAnim_CanMove()
 T CCSPlayer::CSAnim_GetActiveWeapon()
 T CCSPlayer::CSWeaponDrop(CBaseCombatWeapon*, Vector, bool)
 T CCSPlayer::CSWeaponDrop(CBaseCombatWeapon*, bool, bool)
 T CCSPlayer::CSWeapon_OwnsThisType(CEconItemView*) const
 T CCSPlayer::CanAcquire(CSWeaponID, AcquireMethod::Type, CEconItemView*)
 T CCSPlayer::CanBuyDuringImmunity()
 T CCSPlayer::CanControlBot(CCSBot*, bool)
 T CCSPlayer::CanGrabLadder(Vector const&, Vector const&)
 T CCSPlayer::CanHearAndReadChatFrom(CBasePlayer*)
 T CCSPlayer::CanKickFromTeam(int)
 T CCSPlayer::CanMove() const
 T CCSPlayer::CanPlayerBuy(bool)
 T CCSPlayer::CanUseGrenade(CSWeaponID)
 T CCSPlayer::ChangeName(char const*)
 T CCSPlayer::ChangeTeam(int)
 T CCSPlayer::CheatImpulseCommands(int)
 T CCSPlayer::CheckMaxGrenadeKills(int)
 T CCSPlayer::CheckObserverSettings()
 T CCSPlayer::CheckTKPunishment()
 T CCSPlayer::ClearFlashbangScreenFade()
 T CCSPlayer::ClearGunGameImmunity()
 T CCSPlayer::ClearGunGameProgressiveWeaponIndex()
 T CCSPlayer::ClientCommand(CCommand const&)
 T CCSPlayer::CommitSuicide(Vector const&, bool, bool)
 T CCSPlayer::CommitSuicide(bool, bool)
 T CCSPlayer::ConstructRadioFilter(CRecipientFilter&)
 T CCSPlayer::CreatePlayer(char const*, edict_t*)
 T CCSPlayer::CreateRagdollEntity()
 T CCSPlayer::CreateViewModel(int)
 T CCSPlayer::Deafen(float)
 T CCSPlayer::DeathSound(CTakeDamageInfo const&)
 T CCSPlayer::DecrementProgressiveWeaponFromSuicide()
 T CCSPlayer::DestroyWeapons(bool)
 T CCSPlayer::DisplayPenetrationDebug(Vector, Vector, float, float, float, float, short, short)
 T CCSPlayer::DoAnimationEvent(PlayerAnimEvent_t, int)
 T CCSPlayer::DoesPlayerGetRoundStartMoney()
 T CCSPlayer::DropWeaponSlot(int, bool)
 T CCSPlayer::DropWeapons(bool, bool)
 T CCSPlayer::EmitPrivateSound(char const*)
 T CCSPlayer::EntSelectSpawnPoint()
 T CCSPlayer::Event_Killed(CTakeDamageInfo const&)
 T CCSPlayer::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CCSPlayer::FindMatchingWeaponsForTeamLoadout(char const*, int, bool, CUtlVector<CEconItemView*, CUtlMemory<CEconItemView*, int> >&)
 T CCSPlayer::FindNearestControllableBot(bool)
 T CCSPlayer::FindNextObserverTarget(bool)
 T CCSPlayer::FindUseEntity()
 T CCSPlayer::FireBullet(Vector, QAngle const&, float, float, int, int, int, float, CBaseEntity*, bool, float, float)
 T CCSPlayer::FlashlightIsOn()
 T CCSPlayer::FlashlightTurnOff(bool)
 T CCSPlayer::FlashlightTurnOn(bool)
 T CCSPlayer::GetAccountBalance()
 T CCSPlayer::GetActiveCSWeapon() const
 T CCSPlayer::GetAimPunchAngle()
 T CCSPlayer::GetAttributeContainer()
 T CCSPlayer::GetAttributeList()
 T CCSPlayer::GetAttributeManager()
 T CCSPlayer::GetAttributeOwner()
 T CCSPlayer::GetBulletGroup()
 T CCSPlayer::GetBulletTypeParameters(int, float&, float&)
 T CCSPlayer::GetDataDescMap()
 T CCSPlayer::GetDefaultCrouchedFOV() const
 T CCSPlayer::GetIntoGame()
 T CCSPlayer::GetKillStreak()
 T CCSPlayer::GetLayerSequenceCycleRate(CAnimationLayer*, int)
 T CCSPlayer::GetMostNumHitsDamageRecordFrom(CCSPlayer*)
 T CCSPlayer::GetNearestSurfaceBelow(float)
 T CCSPlayer::GetNextObserverSearchStartPoint(bool)
 T CCSPlayer::GetNumAttackersFromDamageList()
 T CCSPlayer::GetNumConcurrentDominations()
 T CCSPlayer::GetNumEnemiesDamaged()
 T CCSPlayer::GetNumEnemyDamagers()
 T CCSPlayer::GetNumMVPs()
 T CCSPlayer::GetNumPlayersDamagedWithFire()
 T CCSPlayer::GetPercentageOfEnemyTeamKilled()
 T CCSPlayer::GetPlayerMaxSpeed()
 T CCSPlayer::GetRawAimPunchAngle() const
 T CCSPlayer::GetServerClass()
 T CCSPlayer::GetTauntYaw() const
 T CCSPlayer::GetTotalActualHealthRemovedFromEnemies()
 T CCSPlayer::GetUsableHighPriorityEntity()
 T CCSPlayer::GetUseConfigurationForHighPriorityUseEntity(CBaseEntity*, CConfigurationForHighPriorityUseEntity_t&)
 T CCSPlayer::GetWeaponInfoFromDamageInfo(CTakeDamageInfo const&)
 T CCSPlayer::GetWeaponPrice(CSWeaponID, CEconItemView const*) const
 T CCSPlayer::GiveCarriedHostage(CHandle<CBaseEntity>)
 T CCSPlayer::GiveCurrentProgressiveGunGameWeapon()
 T CCSPlayer::GiveDefaultItems()
 T CCSPlayer::GiveDefuser(bool)
 T CCSPlayer::GiveNamedItem(char const*, int, CEconItemView*, bool)
 T CCSPlayer::GiveNextProgressiveGunGameWeapon()
 T CCSPlayer::HandleAnimEvent(animevent_t*)
 T CCSPlayer::HandleBulletPenetration(float&, int&, bool&, CGameTrace&, Vector&, surfacedata_t*, float, float, bool, int, float, int&, Vector&, float, float, float&)
 T CCSPlayer::HandleCommand_Buy(char const*, int, bool)
 T CCSPlayer::HandleCommand_Buy_Internal(char const*, int, bool)
 T CCSPlayer::HandleCommand_JoinClass()
 T CCSPlayer::HandleCommand_JoinTeam(int, bool, int)
 T CCSPlayer::HandleDropWeapon(CBaseCombatWeapon*, bool)
 T CCSPlayer::HandleEndOfRound()
 T CCSPlayer::HandleMenu_Radio1(int)
 T CCSPlayer::HandleMenu_Radio2(int)
 T CCSPlayer::HandleMenu_Radio3(int)
 T CCSPlayer::HandleOutOfAmmoKnifeKills(CCSPlayer*, CWeaponCSBase*)
 T CCSPlayer::HasC4() const
 T CCSPlayer::HasDefuser()
 T CCSPlayer::HasPrimaryWeapon()
 T CCSPlayer::HasShield() const
 T CCSPlayer::HasWeaponOfType(int) const
 T CCSPlayer::HintMessage(char const*, bool, bool)
 T CCSPlayer::ImpactTrace(CGameTrace*, int, char*)
 T CCSPlayer::IncrementAssistsCount(int)
 T CCSPlayer::IncrementDeathCount(int)
 T CCSPlayer::IncrementFragCount(int, int)
 T CCSPlayer::IncrementGunGameProgressiveWeapon(int)
 T CCSPlayer::IncrementHostageKillsCount(int)
 T CCSPlayer::IncrementKillStreak(int)
 T CCSPlayer::IncrementNumMVPs(CSMvpReason_t)
 T CCSPlayer::IncrementTeamKillsCount(int)
 T CCSPlayer::InitTeammatePreferredColor()
 T CCSPlayer::InitVCollision(Vector const&, Vector const&)
 T CCSPlayer::InitialSpawn()
 T CCSPlayer::InitializeAccount(int)
 T CCSPlayer::Instance(int)
 T CCSPlayer::InternalAutoBuyAmmo(int)
 T CCSPlayer::InventoryUpdated(CPlayerInventory*)
 T CCSPlayer::IsAbleToInstantRespawn()
 T CCSPlayer::IsBeingGivenItem() const
 T CCSPlayer::IsCloseToActiveBomb()
 T CCSPlayer::IsCloseToHostage()
 T CCSPlayer::IsHoldingLookAtWeapon() const
 T CCSPlayer::IsInBuyZone()
 T CCSPlayer::IsLookingAtWeapon() const
 T CCSPlayer::IsObjectiveKill(CCSPlayer*)
 T CCSPlayer::IsOtherEnemy(CCSPlayer*)
 T CCSPlayer::IsOtherEnemy(int)
 T CCSPlayer::IsOtherSameTeam(int)
 T CCSPlayer::IsPlayerDominated(int)
 T CCSPlayer::IsPrimaryOrSecondaryWeapon(CSWeaponType)
 T CCSPlayer::IsShieldDrawn() const
 T CCSPlayer::IsTaunting() const
 T CCSPlayer::IsThirdPersonTaunt() const
 T CCSPlayer::IsUseableEntity(CBaseEntity*, unsigned int)
 T CCSPlayer::IsVIP() const
 T CCSPlayer::IsValidObserverTarget(CBaseEntity*)
 T CCSPlayer::KickBack(float, float)
 T CCSPlayer::ListPlayers()
 T CCSPlayer::LookAtHeldWeapon()
 T CCSPlayer::MarkAsNotReceivingMoneyNextRound(bool)
 T CCSPlayer::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CCSPlayer::ModifyOrAppendPlayerCriteria(ResponseRules::CriteriaSet&)
 T CCSPlayer::ModifyTauntDuration(float)
 T CCSPlayer::MoveToNextIntroCamera()
 T CCSPlayer::NetworkStateChanged_m_ArmorValue()
 T CCSPlayer::NetworkStateChanged_m_ArmorValue(void*)
 T CCSPlayer::NoteWeaponFired()
 T CCSPlayer::ObserverRoundRespawn()
 T CCSPlayer::ObserverUse(bool)
 T CCSPlayer::OnCanceledDefuse()
 T CCSPlayer::OnDamagedByExplosion(CTakeDamageInfo const&)
 T CCSPlayer::OnJump(float)
 T CCSPlayer::OnLand(float)
 T CCSPlayer::OnPreResetRound()
 T CCSPlayer::OnRoundEnd(int, int)
 T CCSPlayer::OnStartedDefuse()
 T CCSPlayer::OnSwitchWeapons(CBaseCombatWeapon*)
 T CCSPlayer::OnTakeDamage(CTakeDamageInfo const&)
 T CCSPlayer::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CCSPlayer::OutputDamageGiven()
 T CCSPlayer::OutputDamageTaken()
 T CCSPlayer::Pain(bool, int)
 T CCSPlayer::ParseAutoBuyString(char const*, bool&, bool&)
 T CCSPlayer::PhysicsSolidMaskForEntity() const
 T CCSPlayer::PlayStepSound(Vector&, surfacedata_t*, float, bool)
 T CCSPlayer::PlayUseDenySound()
 T CCSPlayer::PlayerClass() const
 T CCSPlayer::PlayerDeathThink()
 T CCSPlayer::PlayerEmptiedAmmoForFirearm(CBaseCombatWeapon*)
 T CCSPlayer::PlayerForceTeamThink()
 T CCSPlayer::PlayerRunCommand(CUserCmd*, IMoveHelper*)
 T CCSPlayer::PlayerUsedFirearm(CBaseCombatWeapon*)
 T CCSPlayer::PlayerUsedGrenade(int)
 T CCSPlayer::PlayerUsedKnife()
 T CCSPlayer::PostSpawnPointSelection()
 T CCSPlayer::PostThink()
 T CCSPlayer::PreThink()
 T CCSPlayer::Precache()
 T CCSPlayer::ProcessPlayerDeathAchievements(CCSPlayer*, CCSPlayer*, CTakeDamageInfo const&)
 T CCSPlayer::ProcessSpottedEntityUpdate()
 T CCSPlayer::PushawayThink()
 T CCSPlayer::Radio(char const*, char const*, bool)
 T CCSPlayer::ReapplyProvision()
 T CCSPlayer::Rebuy(char const*)
 T CCSPlayer::RebuyGrenade(CSWeaponID)
 T CCSPlayer::RecalculateCurrentEquipmentValue()
 T CCSPlayer::RecordDamage(CCSPlayer*, CCSPlayer*, int, int)
 T CCSPlayer::RefreshCarriedHostage(bool)
 T CCSPlayer::ReleaseControlOfBot()
 T CCSPlayer::RemoveAllItems(bool)
 T CCSPlayer::RemoveCarriedHostage()
 T CCSPlayer::RemoveDefuser()
 T CCSPlayer::RemoveNemesisRelationships()
 T CCSPlayer::RemoveSelfFromOthersDamageCounters()
 T CCSPlayer::RescueZoneTouch(inputdata_t&)
 T CCSPlayer::Reset(bool)
 T CCSPlayer::ResetAccount()
 T CCSPlayer::ResetBulletGroup()
 T CCSPlayer::ResetForceTeamThink()
 T CCSPlayer::ResetNumRoundKills()
 T CCSPlayer::ResetRoundBasedAchievementVariables()
 T CCSPlayer::ResetStamina()
 T CCSPlayer::ResetTRBombModeData()
 T CCSPlayer::ResetTRBombModeKillPoints()
 T CCSPlayer::RoundRespawn()
 T CCSPlayer::RunMimicCommand(CUserCmd&)
 T CCSPlayer::SOCacheUnsubscribed(CSteamID const&)
 T CCSPlayer::SelectDeathPose(CTakeDamageInfo const&)
 T CCSPlayer::SelectSpawnSpot(char const*, CBaseEntity*&)
 T CCSPlayer::SendLastKillerDamageToClient(CCSPlayer*)
 T CCSPlayer::SetAnimation(PLAYER_ANIM)
 T CCSPlayer::SetBuyMenuOpen(bool)
 T CCSPlayer::SetClanName(char const*)
 T CCSPlayer::SetClanTag(char const*)
 T CCSPlayer::SetFlinchVelocityModifier(float)
 T CCSPlayer::SetHumanPlayerAccountID(unsigned int)
 T CCSPlayer::SetIsRescuing(bool)
 T CCSPlayer::SetLastConcurrentKilled(int)
 T CCSPlayer::SetLastKillerIndex(int)
 T CCSPlayer::SetMiniScoreHidden(bool)
 T CCSPlayer::SetModelFromClass()
 T CCSPlayer::SetMusicID(unsigned short)
 T CCSPlayer::SetNumMVPs(int)
 T CCSPlayer::SetObserverTarget(CBaseEntity*)
 T CCSPlayer::SetPlayerDominated(CCSPlayer*, bool)
 T CCSPlayer::SetPlayerDominatingMe(CCSPlayer*, bool)
 T CCSPlayer::SetProgressBarTime(int)
 T CCSPlayer::SetRadarHidden(bool)
 T CCSPlayer::SetRank(MedalCategory_t, MedalRank_t)
 T CCSPlayer::SetShieldDrawnState(bool)
 T CCSPlayer::SetTeammatePreferredColor(int)
 T CCSPlayer::SetupVisibility(CBaseEntity*, unsigned char*, int)
 T CCSPlayer::ShouldCollide(int, int) const
 T CCSPlayer::ShouldPickupItemSilently(CBaseCombatCharacter*)
 T CCSPlayer::ShouldRunRateLimitedCommand(CCommand const&)
 T CCSPlayer::ShowViewPortPanel(char const*, bool, KeyValues*)
 T CCSPlayer::Spawn()
 T CCSPlayer::SpawnArmorValue() const
 T CCSPlayer::StartNewBulletGroup()
 T CCSPlayer::StartReplayMode(float, float, int)
 T CCSPlayer::State_Enter(CSPlayerState)
 T CCSPlayer::State_Enter_ACTIVE()
 T CCSPlayer::State_Enter_DEATH_ANIM()
 T CCSPlayer::State_Enter_DEATH_WAIT_FOR_KEY()
 T CCSPlayer::State_Enter_GUNGAME_RESPAWN()
 T CCSPlayer::State_Enter_OBSERVER_MODE()
 T CCSPlayer::State_Enter_PICKINGCLASS()
 T CCSPlayer::State_Enter_PICKINGTEAM()
 T CCSPlayer::State_Enter_WELCOME()
 T CCSPlayer::State_PreThink_ACTIVE()
 T CCSPlayer::State_PreThink_DEATH_ANIM()
 T CCSPlayer::State_PreThink_DEATH_WAIT_FOR_KEY()
 T CCSPlayer::State_PreThink_GUNGAME_RESPAWN()
 T CCSPlayer::State_PreThink_OBSERVER_MODE()
 T CCSPlayer::State_PreThink_WELCOME()
 T CCSPlayer::State_Transition(CSPlayerState)
 T CCSPlayer::StockPlayerAmmo(CBaseCombatWeapon*)
 T CCSPlayer::StopLookingAtWeapon()
 T CCSPlayer::StopReplayMode()
 T CCSPlayer::StopTaunting()
 T CCSPlayer::SubtractProgressiveWeaponIndex()
 T CCSPlayer::SurpressLadderChecks(Vector const&, Vector const&)
 T CCSPlayer::SwitchTeam(int)
 T CCSPlayer::TakeControlOfBot(CCSBot*, bool)
 T CCSPlayer::Taunt()
 T CCSPlayer::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CCSPlayer::TransferInventory(CCSPlayer*)
 T CCSPlayer::Unblind()
 T CCSPlayer::UpdateAddonBits()
 T CCSPlayer::UpdateAppearanceIndex()
 T CCSPlayer::UpdateFreezetimeEndEquipmentValue()
 T CCSPlayer::UpdateOnRemove()
 T CCSPlayer::UpdateRankFromKV(KeyValues*)
 T CCSPlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)
 T CCSPlayer::UpdateTeamLeaderPlaySound(int)
 T CCSPlayer::VPhysicsShadowUpdate(IPhysicsObject*)
 T CCSPlayer::ValidateCurrentObserverTarget()
 T CCSPlayer::WantsLagCompensationOnEntity(CBaseEntity const*, CUserCmd const*, CBitVec<2048> const*) const
 T CCSPlayer::Weapon_CanSwitchTo(CBaseCombatWeapon*)
 T CCSPlayer::Weapon_CanUse(CBaseCombatWeapon*)
 T CCSPlayer::Weapon_Equip(CBaseCombatWeapon*)
 T CCSPlayer::Weapon_Switch(CBaseCombatWeapon*, int)
 T CCSPlayer::YouForgotToImplementOrDeclareServerClass()
 T CCSPlayer::~CCSPlayer()
 T CCSPlayerAnimState::CalcAimLayerSequence(float*, float*, bool)
 T CCSPlayerAnimState::CalcFireLayerSequence(PlayerAnimEvent_t)
 T CCSPlayerAnimState::CalcFlinchLayerSequence(CBaseCombatCharacter*)
 T CCSPlayerAnimState::CalcMainActivity()
 T CCSPlayerAnimState::CalcMovementPlaybackRate(bool*)
 T CCSPlayerAnimState::CalcReloadLayerSequence(PlayerAnimEvent_t)
 T CCSPlayerAnimState::CalcSequenceIndex(char const*, ...)
 T CCSPlayerAnimState::CalcSilencerChangeLayerSequence(PlayerAnimEvent_t)
 T CCSPlayerAnimState::CalcTauntLayerSequence(CBaseCombatCharacter*)
 T CCSPlayerAnimState::CanThePlayerMove()
 T CCSPlayerAnimState::CheckCachedSequenceValidity()
 T CCSPlayerAnimState::ClearAnimationLayer(int)
 T CCSPlayerAnimState::ClearAnimationLayers()
 T CCSPlayerAnimState::ClearAnimationState()
 T CCSPlayerAnimState::ComputeDeploySequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeFireSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeFlashedSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeFlinchSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeFootPlantSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeGrenadeSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeReloadSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeSequences(CStudioHdr*)
 T CCSPlayerAnimState::ComputeSilencerChangeSequence(CStudioHdr*)
 T CCSPlayerAnimState::ComputeTauntSequence(CStudioHdr*)
 T CCSPlayerAnimState::DebugShowAnimState(int)
 T CCSPlayerAnimState::DoAnimationEvent(PlayerAnimEvent_t, int)
 T CCSPlayerAnimState::GetCurrentMaxGroundSpeed()
 T CCSPlayerAnimState::GetWeaponSuffix()
 T CCSPlayerAnimState::HandleJumping()
 T CCSPlayerAnimState::IsThrowingGrenade()
 T CCSPlayerAnimState::ModifyTauntDuration(float)
 T CCSPlayerAnimState::SelectWeightedSequence(Activity)
 T CCSPlayerAnimState::ShouldHideGrenadeDuringThrow()
 T CCSPlayerAnimState::Update(float, float)
 T CCSPlayerAnimState::UpdateLayerSequenceGeneric(CStudioHdr*, int, bool&, float&, int&, bool, float)
 T CCSPlayerAnimState::~CCSPlayerAnimState()
 T CCSPlayerInventory::CCSPlayerInventory()
 T CCSPlayerInventory::CanPurchaseItems(int) const
 T CCSPlayerInventory::DefaultEquippedDefinitionHasBeenUpdated(CEconDefaultEquippedDefinitionInstanceClient*)
 T CCSPlayerInventory::DumpInventoryToConsole(bool)
 T CCSPlayerInventory::ExtractInventorySortPosition(unsigned int)
 T CCSPlayerInventory::GetItemInLoadout(int, int)
 T CCSPlayerInventory::GetMaxItemCount() const
 T CCSPlayerInventory::GetPreviewItemDef() const
 T CCSPlayerInventory::ItemHasBeenUpdated(CEconItemView*, bool, bool, CPlayerInventory::EInventoryItemEvent)
 T CCSPlayerInventory::ItemIsBeingRemoved(CEconItemView*)
 T CCSPlayerInventory::NotifyHasNewItems()
 T CCSPlayerInventory::OnHasNewItems()
 T CCSPlayerInventory::SOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSPlayerInventory::SODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSPlayerInventory::SOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CCSPlayerInventory::ValidateInventoryPositions()
 T CCSPlayerInventory::~CCSPlayerInventory()
 T CCSPlayerMove::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CCSPlayerMove::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CCSPlayerMove::~CCSPlayerMove()
 T CCSPlayerResource::ForcePlayersPickColors()
 T CCSPlayerResource::GetBombsiteAPosition()
 T CCSPlayerResource::GetBombsiteBPosition()
 T CCSPlayerResource::GetDataDescMap()
 T CCSPlayerResource::GetHostageRescuePosition(int)
 T CCSPlayerResource::GetServerClass()
 T CCSPlayerResource::NetworkVar_m_iCompTeammateColor::Set(int, int const&)
 T CCSPlayerResource::ResetPlayerTeammateColor(int)
 T CCSPlayerResource::SetPlayerTeammateColor(int, bool)
 T CCSPlayerResource::Spawn()
 T CCSPlayerResource::UpdatePlayerData()
 T CCSPlayerResource::YouForgotToImplementOrDeclareServerClass()
 T CCSPlayerResource::~CCSPlayerResource()
 T CCSRagdoll::GetServerClass()
 T CCSRagdoll::Init()
 T CCSRagdoll::UpdateTransmitState()
 T CCSRagdoll::YouForgotToImplementOrDeclareServerClass()
 T CCSRagdoll::~CCSRagdoll()
 T CCSTeam::AddPlayer(CBasePlayer*)
 T CCSTeam::GetServerClass()
 T CCSTeam::Init(char const*, int)
 T CCSTeam::Precache()
 T CCSTeam::RemovePlayer(CBasePlayer*)
 T CCSTeam::Think()
 T CCSTeam::YouForgotToImplementOrDeclareServerClass()
 T CCSTeam::~CCSTeam()
 T CCSUsrMsg_AchievementEvent::ByteSize() const
 T CCSUsrMsg_AchievementEvent::CCSUsrMsg_AchievementEvent()
 T CCSUsrMsg_AchievementEvent::Clear()
 T CCSUsrMsg_AchievementEvent::GetCachedSize() const
 T CCSUsrMsg_AchievementEvent::GetMetadata() const
 T CCSUsrMsg_AchievementEvent::IsInitialized() const
 T CCSUsrMsg_AchievementEvent::MergeFrom(CCSUsrMsg_AchievementEvent const&)
 T CCSUsrMsg_AchievementEvent::New() const
 T CCSUsrMsg_AchievementEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_AchievementEvent::SetCachedSize(int) const
 T CCSUsrMsg_AchievementEvent::~CCSUsrMsg_AchievementEvent()
 T CCSUsrMsg_AdjustMoney::ByteSize() const
 T CCSUsrMsg_AdjustMoney::CCSUsrMsg_AdjustMoney()
 T CCSUsrMsg_AdjustMoney::Clear()
 T CCSUsrMsg_AdjustMoney::GetCachedSize() const
 T CCSUsrMsg_AdjustMoney::GetMetadata() const
 T CCSUsrMsg_AdjustMoney::IsInitialized() const
 T CCSUsrMsg_AdjustMoney::MergeFrom(CCSUsrMsg_AdjustMoney const&)
 T CCSUsrMsg_AdjustMoney::New() const
 T CCSUsrMsg_AdjustMoney::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_AdjustMoney::SetCachedSize(int) const
 T CCSUsrMsg_AdjustMoney::~CCSUsrMsg_AdjustMoney()
 T CCSUsrMsg_AmmoDenied::ByteSize() const
 T CCSUsrMsg_AmmoDenied::Clear()
 T CCSUsrMsg_AmmoDenied::GetCachedSize() const
 T CCSUsrMsg_AmmoDenied::GetMetadata() const
 T CCSUsrMsg_AmmoDenied::IsInitialized() const
 T CCSUsrMsg_AmmoDenied::MergeFrom(CCSUsrMsg_AmmoDenied const&)
 T CCSUsrMsg_AmmoDenied::New() const
 T CCSUsrMsg_AmmoDenied::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_AmmoDenied::SetCachedSize(int) const
 T CCSUsrMsg_AmmoDenied::~CCSUsrMsg_AmmoDenied()
 T CCSUsrMsg_BarTime::ByteSize() const
 T CCSUsrMsg_BarTime::Clear()
 T CCSUsrMsg_BarTime::GetCachedSize() const
 T CCSUsrMsg_BarTime::GetMetadata() const
 T CCSUsrMsg_BarTime::IsInitialized() const
 T CCSUsrMsg_BarTime::MergeFrom(CCSUsrMsg_BarTime const&)
 T CCSUsrMsg_BarTime::New() const
 T CCSUsrMsg_BarTime::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_BarTime::SetCachedSize(int) const
 T CCSUsrMsg_BarTime::~CCSUsrMsg_BarTime()
 T CCSUsrMsg_CallVoteFailed::ByteSize() const
 T CCSUsrMsg_CallVoteFailed::CCSUsrMsg_CallVoteFailed()
 T CCSUsrMsg_CallVoteFailed::Clear()
 T CCSUsrMsg_CallVoteFailed::GetCachedSize() const
 T CCSUsrMsg_CallVoteFailed::GetMetadata() const
 T CCSUsrMsg_CallVoteFailed::IsInitialized() const
 T CCSUsrMsg_CallVoteFailed::MergeFrom(CCSUsrMsg_CallVoteFailed const&)
 T CCSUsrMsg_CallVoteFailed::New() const
 T CCSUsrMsg_CallVoteFailed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_CallVoteFailed::SetCachedSize(int) const
 T CCSUsrMsg_CallVoteFailed::~CCSUsrMsg_CallVoteFailed()
 T CCSUsrMsg_ClientInfo::ByteSize() const
 T CCSUsrMsg_ClientInfo::Clear()
 T CCSUsrMsg_ClientInfo::GetCachedSize() const
 T CCSUsrMsg_ClientInfo::GetMetadata() const
 T CCSUsrMsg_ClientInfo::IsInitialized() const
 T CCSUsrMsg_ClientInfo::MergeFrom(CCSUsrMsg_ClientInfo const&)
 T CCSUsrMsg_ClientInfo::New() const
 T CCSUsrMsg_ClientInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ClientInfo::SetCachedSize(int) const
 T CCSUsrMsg_ClientInfo::~CCSUsrMsg_ClientInfo()
 T CCSUsrMsg_CloseCaption::ByteSize() const
 T CCSUsrMsg_CloseCaption::CCSUsrMsg_CloseCaption()
 T CCSUsrMsg_CloseCaption::Clear()
 T CCSUsrMsg_CloseCaption::GetCachedSize() const
 T CCSUsrMsg_CloseCaption::GetMetadata() const
 T CCSUsrMsg_CloseCaption::IsInitialized() const
 T CCSUsrMsg_CloseCaption::MergeFrom(CCSUsrMsg_CloseCaption const&)
 T CCSUsrMsg_CloseCaption::New() const
 T CCSUsrMsg_CloseCaption::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_CloseCaption::SetCachedSize(int) const
 T CCSUsrMsg_CloseCaption::~CCSUsrMsg_CloseCaption()
 T CCSUsrMsg_CloseCaptionDirect::ByteSize() const
 T CCSUsrMsg_CloseCaptionDirect::CCSUsrMsg_CloseCaptionDirect()
 T CCSUsrMsg_CloseCaptionDirect::Clear()
 T CCSUsrMsg_CloseCaptionDirect::GetCachedSize() const
 T CCSUsrMsg_CloseCaptionDirect::GetMetadata() const
 T CCSUsrMsg_CloseCaptionDirect::IsInitialized() const
 T CCSUsrMsg_CloseCaptionDirect::MergeFrom(CCSUsrMsg_CloseCaptionDirect const&)
 T CCSUsrMsg_CloseCaptionDirect::New() const
 T CCSUsrMsg_CloseCaptionDirect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_CloseCaptionDirect::SetCachedSize(int) const
 T CCSUsrMsg_CloseCaptionDirect::~CCSUsrMsg_CloseCaptionDirect()
 T CCSUsrMsg_CurrentTimescale::ByteSize() const
 T CCSUsrMsg_CurrentTimescale::Clear()
 T CCSUsrMsg_CurrentTimescale::GetCachedSize() const
 T CCSUsrMsg_CurrentTimescale::GetMetadata() const
 T CCSUsrMsg_CurrentTimescale::IsInitialized() const
 T CCSUsrMsg_CurrentTimescale::MergeFrom(CCSUsrMsg_CurrentTimescale const&)
 T CCSUsrMsg_CurrentTimescale::New() const
 T CCSUsrMsg_CurrentTimescale::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_CurrentTimescale::SetCachedSize(int) const
 T CCSUsrMsg_CurrentTimescale::~CCSUsrMsg_CurrentTimescale()
 T CCSUsrMsg_Damage::ByteSize() const
 T CCSUsrMsg_Damage::CCSUsrMsg_Damage()
 T CCSUsrMsg_Damage::Clear()
 T CCSUsrMsg_Damage::GetCachedSize() const
 T CCSUsrMsg_Damage::GetMetadata() const
 T CCSUsrMsg_Damage::IsInitialized() const
 T CCSUsrMsg_Damage::MergeFrom(CCSUsrMsg_Damage const&)
 T CCSUsrMsg_Damage::New() const
 T CCSUsrMsg_Damage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Damage::SetCachedSize(int) const
 T CCSUsrMsg_Damage::~CCSUsrMsg_Damage()
 T CCSUsrMsg_DesiredTimescale::ByteSize() const
 T CCSUsrMsg_DesiredTimescale::Clear()
 T CCSUsrMsg_DesiredTimescale::GetCachedSize() const
 T CCSUsrMsg_DesiredTimescale::GetMetadata() const
 T CCSUsrMsg_DesiredTimescale::IsInitialized() const
 T CCSUsrMsg_DesiredTimescale::MergeFrom(CCSUsrMsg_DesiredTimescale const&)
 T CCSUsrMsg_DesiredTimescale::New() const
 T CCSUsrMsg_DesiredTimescale::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_DesiredTimescale::SetCachedSize(int) const
 T CCSUsrMsg_DesiredTimescale::~CCSUsrMsg_DesiredTimescale()
 T CCSUsrMsg_DisconnectToLobby::ByteSize() const
 T CCSUsrMsg_DisconnectToLobby::CCSUsrMsg_DisconnectToLobby()
 T CCSUsrMsg_DisconnectToLobby::Clear()
 T CCSUsrMsg_DisconnectToLobby::GetCachedSize() const
 T CCSUsrMsg_DisconnectToLobby::GetMetadata() const
 T CCSUsrMsg_DisconnectToLobby::IsInitialized() const
 T CCSUsrMsg_DisconnectToLobby::MergeFrom(CCSUsrMsg_DisconnectToLobby const&)
 T CCSUsrMsg_DisconnectToLobby::New() const
 T CCSUsrMsg_DisconnectToLobby::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_DisconnectToLobby::SetCachedSize(int) const
 T CCSUsrMsg_DisconnectToLobby::~CCSUsrMsg_DisconnectToLobby()
 T CCSUsrMsg_DisplayInventory::ByteSize() const
 T CCSUsrMsg_DisplayInventory::CCSUsrMsg_DisplayInventory()
 T CCSUsrMsg_DisplayInventory::Clear()
 T CCSUsrMsg_DisplayInventory::GetCachedSize() const
 T CCSUsrMsg_DisplayInventory::GetMetadata() const
 T CCSUsrMsg_DisplayInventory::IsInitialized() const
 T CCSUsrMsg_DisplayInventory::MergeFrom(CCSUsrMsg_DisplayInventory const&)
 T CCSUsrMsg_DisplayInventory::New() const
 T CCSUsrMsg_DisplayInventory::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_DisplayInventory::SetCachedSize(int) const
 T CCSUsrMsg_DisplayInventory::~CCSUsrMsg_DisplayInventory()
 T CCSUsrMsg_Fade::ByteSize() const
 T CCSUsrMsg_Fade::CCSUsrMsg_Fade()
 T CCSUsrMsg_Fade::Clear()
 T CCSUsrMsg_Fade::GetCachedSize() const
 T CCSUsrMsg_Fade::GetMetadata() const
 T CCSUsrMsg_Fade::IsInitialized() const
 T CCSUsrMsg_Fade::MergeFrom(CCSUsrMsg_Fade const&)
 T CCSUsrMsg_Fade::New() const
 T CCSUsrMsg_Fade::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Fade::SetCachedSize(int) const
 T CCSUsrMsg_Fade::~CCSUsrMsg_Fade()
 T CCSUsrMsg_GameTitle::ByteSize() const
 T CCSUsrMsg_GameTitle::CCSUsrMsg_GameTitle()
 T CCSUsrMsg_GameTitle::Clear()
 T CCSUsrMsg_GameTitle::GetCachedSize() const
 T CCSUsrMsg_GameTitle::GetMetadata() const
 T CCSUsrMsg_GameTitle::IsInitialized() const
 T CCSUsrMsg_GameTitle::MergeFrom(CCSUsrMsg_GameTitle const&)
 T CCSUsrMsg_GameTitle::New() const
 T CCSUsrMsg_GameTitle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_GameTitle::SetCachedSize(int) const
 T CCSUsrMsg_GameTitle::~CCSUsrMsg_GameTitle()
 T CCSUsrMsg_Geiger::ByteSize() const
 T CCSUsrMsg_Geiger::CCSUsrMsg_Geiger()
 T CCSUsrMsg_Geiger::Clear()
 T CCSUsrMsg_Geiger::GetCachedSize() const
 T CCSUsrMsg_Geiger::GetMetadata() const
 T CCSUsrMsg_Geiger::IsInitialized() const
 T CCSUsrMsg_Geiger::MergeFrom(CCSUsrMsg_Geiger const&)
 T CCSUsrMsg_Geiger::New() const
 T CCSUsrMsg_Geiger::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Geiger::SetCachedSize(int) const
 T CCSUsrMsg_Geiger::~CCSUsrMsg_Geiger()
 T CCSUsrMsg_GlowPropTurnOff::ByteSize() const
 T CCSUsrMsg_GlowPropTurnOff::CCSUsrMsg_GlowPropTurnOff()
 T CCSUsrMsg_GlowPropTurnOff::Clear()
 T CCSUsrMsg_GlowPropTurnOff::GetCachedSize() const
 T CCSUsrMsg_GlowPropTurnOff::GetMetadata() const
 T CCSUsrMsg_GlowPropTurnOff::IsInitialized() const
 T CCSUsrMsg_GlowPropTurnOff::MergeFrom(CCSUsrMsg_GlowPropTurnOff const&)
 T CCSUsrMsg_GlowPropTurnOff::New() const
 T CCSUsrMsg_GlowPropTurnOff::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_GlowPropTurnOff::SetCachedSize(int) const
 T CCSUsrMsg_GlowPropTurnOff::~CCSUsrMsg_GlowPropTurnOff()
 T CCSUsrMsg_HintText::ByteSize() const
 T CCSUsrMsg_HintText::CCSUsrMsg_HintText()
 T CCSUsrMsg_HintText::Clear()
 T CCSUsrMsg_HintText::GetCachedSize() const
 T CCSUsrMsg_HintText::GetMetadata() const
 T CCSUsrMsg_HintText::IsInitialized() const
 T CCSUsrMsg_HintText::MergeFrom(CCSUsrMsg_HintText const&)
 T CCSUsrMsg_HintText::New() const
 T CCSUsrMsg_HintText::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_HintText::SetCachedSize(int) const
 T CCSUsrMsg_HintText::~CCSUsrMsg_HintText()
 T CCSUsrMsg_HudMsg::ByteSize() const
 T CCSUsrMsg_HudMsg::CCSUsrMsg_HudMsg()
 T CCSUsrMsg_HudMsg::Clear()
 T CCSUsrMsg_HudMsg::GetCachedSize() const
 T CCSUsrMsg_HudMsg::GetMetadata() const
 T CCSUsrMsg_HudMsg::IsInitialized() const
 T CCSUsrMsg_HudMsg::MergeFrom(CCSUsrMsg_HudMsg const&)
 T CCSUsrMsg_HudMsg::New() const
 T CCSUsrMsg_HudMsg::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_HudMsg::SetCachedSize(int) const
 T CCSUsrMsg_HudMsg::SharedDtor()
 T CCSUsrMsg_HudMsg::~CCSUsrMsg_HudMsg()
 T CCSUsrMsg_HudText::ByteSize() const
 T CCSUsrMsg_HudText::CCSUsrMsg_HudText()
 T CCSUsrMsg_HudText::Clear()
 T CCSUsrMsg_HudText::GetCachedSize() const
 T CCSUsrMsg_HudText::GetMetadata() const
 T CCSUsrMsg_HudText::IsInitialized() const
 T CCSUsrMsg_HudText::MergeFrom(CCSUsrMsg_HudText const&)
 T CCSUsrMsg_HudText::New() const
 T CCSUsrMsg_HudText::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_HudText::SetCachedSize(int) const
 T CCSUsrMsg_HudText::~CCSUsrMsg_HudText()
 T CCSUsrMsg_ItemDrop::ByteSize() const
 T CCSUsrMsg_ItemDrop::Clear()
 T CCSUsrMsg_ItemDrop::GetCachedSize() const
 T CCSUsrMsg_ItemDrop::GetMetadata() const
 T CCSUsrMsg_ItemDrop::IsInitialized() const
 T CCSUsrMsg_ItemDrop::MergeFrom(CCSUsrMsg_ItemDrop const&)
 T CCSUsrMsg_ItemDrop::New() const
 T CCSUsrMsg_ItemDrop::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ItemDrop::SetCachedSize(int) const
 T CCSUsrMsg_ItemDrop::~CCSUsrMsg_ItemDrop()
 T CCSUsrMsg_ItemPickup::ByteSize() const
 T CCSUsrMsg_ItemPickup::Clear()
 T CCSUsrMsg_ItemPickup::GetCachedSize() const
 T CCSUsrMsg_ItemPickup::GetMetadata() const
 T CCSUsrMsg_ItemPickup::IsInitialized() const
 T CCSUsrMsg_ItemPickup::MergeFrom(CCSUsrMsg_ItemPickup const&)
 T CCSUsrMsg_ItemPickup::New() const
 T CCSUsrMsg_ItemPickup::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ItemPickup::SetCachedSize(int) const
 T CCSUsrMsg_ItemPickup::~CCSUsrMsg_ItemPickup()
 T CCSUsrMsg_KeyHintText::ByteSize() const
 T CCSUsrMsg_KeyHintText::CCSUsrMsg_KeyHintText()
 T CCSUsrMsg_KeyHintText::Clear()
 T CCSUsrMsg_KeyHintText::GetCachedSize() const
 T CCSUsrMsg_KeyHintText::GetMetadata() const
 T CCSUsrMsg_KeyHintText::IsInitialized() const
 T CCSUsrMsg_KeyHintText::MergeFrom(CCSUsrMsg_KeyHintText const&)
 T CCSUsrMsg_KeyHintText::New() const
 T CCSUsrMsg_KeyHintText::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_KeyHintText::SetCachedSize(int) const
 T CCSUsrMsg_KeyHintText::~CCSUsrMsg_KeyHintText()
 T CCSUsrMsg_KillCam::ByteSize() const
 T CCSUsrMsg_KillCam::CCSUsrMsg_KillCam()
 T CCSUsrMsg_KillCam::Clear()
 T CCSUsrMsg_KillCam::GetCachedSize() const
 T CCSUsrMsg_KillCam::GetMetadata() const
 T CCSUsrMsg_KillCam::IsInitialized() const
 T CCSUsrMsg_KillCam::MergeFrom(CCSUsrMsg_KillCam const&)
 T CCSUsrMsg_KillCam::New() const
 T CCSUsrMsg_KillCam::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_KillCam::SetCachedSize(int) const
 T CCSUsrMsg_KillCam::~CCSUsrMsg_KillCam()
 T CCSUsrMsg_MarkAchievement::ByteSize() const
 T CCSUsrMsg_MarkAchievement::Clear()
 T CCSUsrMsg_MarkAchievement::GetCachedSize() const
 T CCSUsrMsg_MarkAchievement::GetMetadata() const
 T CCSUsrMsg_MarkAchievement::IsInitialized() const
 T CCSUsrMsg_MarkAchievement::MergeFrom(CCSUsrMsg_MarkAchievement const&)
 T CCSUsrMsg_MarkAchievement::New() const
 T CCSUsrMsg_MarkAchievement::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_MarkAchievement::SetCachedSize(int) const
 T CCSUsrMsg_MarkAchievement::~CCSUsrMsg_MarkAchievement()
 T CCSUsrMsg_MatchEndConditions::ByteSize() const
 T CCSUsrMsg_MatchEndConditions::CCSUsrMsg_MatchEndConditions()
 T CCSUsrMsg_MatchEndConditions::Clear()
 T CCSUsrMsg_MatchEndConditions::GetCachedSize() const
 T CCSUsrMsg_MatchEndConditions::GetMetadata() const
 T CCSUsrMsg_MatchEndConditions::IsInitialized() const
 T CCSUsrMsg_MatchEndConditions::MergeFrom(CCSUsrMsg_MatchEndConditions const&)
 T CCSUsrMsg_MatchEndConditions::New() const
 T CCSUsrMsg_MatchEndConditions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_MatchEndConditions::SetCachedSize(int) const
 T CCSUsrMsg_MatchEndConditions::~CCSUsrMsg_MatchEndConditions()
 T CCSUsrMsg_MatchStatsUpdate::ByteSize() const
 T CCSUsrMsg_MatchStatsUpdate::Clear()
 T CCSUsrMsg_MatchStatsUpdate::GetCachedSize() const
 T CCSUsrMsg_MatchStatsUpdate::GetMetadata() const
 T CCSUsrMsg_MatchStatsUpdate::IsInitialized() const
 T CCSUsrMsg_MatchStatsUpdate::MergeFrom(CCSUsrMsg_MatchStatsUpdate const&)
 T CCSUsrMsg_MatchStatsUpdate::New() const
 T CCSUsrMsg_MatchStatsUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_MatchStatsUpdate::SetCachedSize(int) const
 T CCSUsrMsg_MatchStatsUpdate::~CCSUsrMsg_MatchStatsUpdate()
 T CCSUsrMsg_PlayerStatsUpdate::ByteSize() const
 T CCSUsrMsg_PlayerStatsUpdate::CCSUsrMsg_PlayerStatsUpdate()
 T CCSUsrMsg_PlayerStatsUpdate::Clear()
 T CCSUsrMsg_PlayerStatsUpdate::GetCachedSize() const
 T CCSUsrMsg_PlayerStatsUpdate::GetMetadata() const
 T CCSUsrMsg_PlayerStatsUpdate::IsInitialized() const
 T CCSUsrMsg_PlayerStatsUpdate::MergeFrom(CCSUsrMsg_PlayerStatsUpdate const&)
 T CCSUsrMsg_PlayerStatsUpdate::New() const
 T CCSUsrMsg_PlayerStatsUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_PlayerStatsUpdate::SetCachedSize(int) const
 T CCSUsrMsg_PlayerStatsUpdate::~CCSUsrMsg_PlayerStatsUpdate()
 T CCSUsrMsg_PlayerStatsUpdate_Stat::ByteSize() const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::CCSUsrMsg_PlayerStatsUpdate_Stat()
 T CCSUsrMsg_PlayerStatsUpdate_Stat::Clear()
 T CCSUsrMsg_PlayerStatsUpdate_Stat::GetCachedSize() const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::GetMetadata() const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::IsInitialized() const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::MergeFrom(CCSUsrMsg_PlayerStatsUpdate_Stat const&)
 T CCSUsrMsg_PlayerStatsUpdate_Stat::New() const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::SetCachedSize(int) const
 T CCSUsrMsg_PlayerStatsUpdate_Stat::~CCSUsrMsg_PlayerStatsUpdate_Stat()
 T CCSUsrMsg_ProcessSpottedEntityUpdate::ByteSize() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate()
 T CCSUsrMsg_ProcessSpottedEntityUpdate::Clear()
 T CCSUsrMsg_ProcessSpottedEntityUpdate::GetCachedSize() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::GetMetadata() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::IsInitialized() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::MergeFrom(CCSUsrMsg_ProcessSpottedEntityUpdate const&)
 T CCSUsrMsg_ProcessSpottedEntityUpdate::New() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::SetCachedSize(int) const
 T CCSUsrMsg_ProcessSpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate()
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::ByteSize() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate()
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::Clear()
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::GetCachedSize() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::GetMetadata() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::IsInitialized() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergeFrom(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate const&)
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::New() const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SetCachedSize(int) const
 T CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate()
 T CCSUsrMsg_RadioText::ByteSize() const
 T CCSUsrMsg_RadioText::CCSUsrMsg_RadioText()
 T CCSUsrMsg_RadioText::Clear()
 T CCSUsrMsg_RadioText::GetCachedSize() const
 T CCSUsrMsg_RadioText::GetMetadata() const
 T CCSUsrMsg_RadioText::IsInitialized() const
 T CCSUsrMsg_RadioText::MergeFrom(CCSUsrMsg_RadioText const&)
 T CCSUsrMsg_RadioText::New() const
 T CCSUsrMsg_RadioText::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_RadioText::SetCachedSize(int) const
 T CCSUsrMsg_RadioText::~CCSUsrMsg_RadioText()
 T CCSUsrMsg_RawAudio::ByteSize() const
 T CCSUsrMsg_RawAudio::CCSUsrMsg_RawAudio()
 T CCSUsrMsg_RawAudio::Clear()
 T CCSUsrMsg_RawAudio::GetCachedSize() const
 T CCSUsrMsg_RawAudio::GetMetadata() const
 T CCSUsrMsg_RawAudio::IsInitialized() const
 T CCSUsrMsg_RawAudio::MergeFrom(CCSUsrMsg_RawAudio const&)
 T CCSUsrMsg_RawAudio::New() const
 T CCSUsrMsg_RawAudio::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_RawAudio::SetCachedSize(int) const
 T CCSUsrMsg_RawAudio::~CCSUsrMsg_RawAudio()
 T CCSUsrMsg_ReloadEffect::ByteSize() const
 T CCSUsrMsg_ReloadEffect::CCSUsrMsg_ReloadEffect()
 T CCSUsrMsg_ReloadEffect::Clear()
 T CCSUsrMsg_ReloadEffect::GetCachedSize() const
 T CCSUsrMsg_ReloadEffect::GetMetadata() const
 T CCSUsrMsg_ReloadEffect::IsInitialized() const
 T CCSUsrMsg_ReloadEffect::MergeFrom(CCSUsrMsg_ReloadEffect const&)
 T CCSUsrMsg_ReloadEffect::New() const
 T CCSUsrMsg_ReloadEffect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ReloadEffect::SetCachedSize(int) const
 T CCSUsrMsg_ReloadEffect::~CCSUsrMsg_ReloadEffect()
 T CCSUsrMsg_ReportHit::ByteSize() const
 T CCSUsrMsg_ReportHit::CCSUsrMsg_ReportHit()
 T CCSUsrMsg_ReportHit::Clear()
 T CCSUsrMsg_ReportHit::GetCachedSize() const
 T CCSUsrMsg_ReportHit::GetMetadata() const
 T CCSUsrMsg_ReportHit::IsInitialized() const
 T CCSUsrMsg_ReportHit::MergeFrom(CCSUsrMsg_ReportHit const&)
 T CCSUsrMsg_ReportHit::New() const
 T CCSUsrMsg_ReportHit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ReportHit::SetCachedSize(int) const
 T CCSUsrMsg_ReportHit::~CCSUsrMsg_ReportHit()
 T CCSUsrMsg_RequestState::ByteSize() const
 T CCSUsrMsg_RequestState::CCSUsrMsg_RequestState()
 T CCSUsrMsg_RequestState::Clear()
 T CCSUsrMsg_RequestState::GetCachedSize() const
 T CCSUsrMsg_RequestState::GetMetadata() const
 T CCSUsrMsg_RequestState::IsInitialized() const
 T CCSUsrMsg_RequestState::MergeFrom(CCSUsrMsg_RequestState const&)
 T CCSUsrMsg_RequestState::New() const
 T CCSUsrMsg_RequestState::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_RequestState::SetCachedSize(int) const
 T CCSUsrMsg_RequestState::~CCSUsrMsg_RequestState()
 T CCSUsrMsg_ResetHud::ByteSize() const
 T CCSUsrMsg_ResetHud::CCSUsrMsg_ResetHud()
 T CCSUsrMsg_ResetHud::Clear()
 T CCSUsrMsg_ResetHud::GetCachedSize() const
 T CCSUsrMsg_ResetHud::GetMetadata() const
 T CCSUsrMsg_ResetHud::IsInitialized() const
 T CCSUsrMsg_ResetHud::MergeFrom(CCSUsrMsg_ResetHud const&)
 T CCSUsrMsg_ResetHud::New() const
 T CCSUsrMsg_ResetHud::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ResetHud::SetCachedSize(int) const
 T CCSUsrMsg_ResetHud::~CCSUsrMsg_ResetHud()
 T CCSUsrMsg_RoundBackupFilenames::ByteSize() const
 T CCSUsrMsg_RoundBackupFilenames::CCSUsrMsg_RoundBackupFilenames()
 T CCSUsrMsg_RoundBackupFilenames::Clear()
 T CCSUsrMsg_RoundBackupFilenames::GetCachedSize() const
 T CCSUsrMsg_RoundBackupFilenames::GetMetadata() const
 T CCSUsrMsg_RoundBackupFilenames::IsInitialized() const
 T CCSUsrMsg_RoundBackupFilenames::MergeFrom(CCSUsrMsg_RoundBackupFilenames const&)
 T CCSUsrMsg_RoundBackupFilenames::New() const
 T CCSUsrMsg_RoundBackupFilenames::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_RoundBackupFilenames::SetCachedSize(int) const
 T CCSUsrMsg_RoundBackupFilenames::SharedDtor()
 T CCSUsrMsg_RoundBackupFilenames::~CCSUsrMsg_RoundBackupFilenames()
 T CCSUsrMsg_Rumble::ByteSize() const
 T CCSUsrMsg_Rumble::CCSUsrMsg_Rumble()
 T CCSUsrMsg_Rumble::Clear()
 T CCSUsrMsg_Rumble::GetCachedSize() const
 T CCSUsrMsg_Rumble::GetMetadata() const
 T CCSUsrMsg_Rumble::IsInitialized() const
 T CCSUsrMsg_Rumble::MergeFrom(CCSUsrMsg_Rumble const&)
 T CCSUsrMsg_Rumble::New() const
 T CCSUsrMsg_Rumble::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Rumble::SetCachedSize(int) const
 T CCSUsrMsg_Rumble::~CCSUsrMsg_Rumble()
 T CCSUsrMsg_SayText2::ByteSize() const
 T CCSUsrMsg_SayText2::CCSUsrMsg_SayText2()
 T CCSUsrMsg_SayText2::Clear()
 T CCSUsrMsg_SayText2::GetCachedSize() const
 T CCSUsrMsg_SayText2::GetMetadata() const
 T CCSUsrMsg_SayText2::IsInitialized() const
 T CCSUsrMsg_SayText2::MergeFrom(CCSUsrMsg_SayText2 const&)
 T CCSUsrMsg_SayText2::New() const
 T CCSUsrMsg_SayText2::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SayText2::SetCachedSize(int) const
 T CCSUsrMsg_SayText2::~CCSUsrMsg_SayText2()
 T CCSUsrMsg_SayText::ByteSize() const
 T CCSUsrMsg_SayText::CCSUsrMsg_SayText()
 T CCSUsrMsg_SayText::Clear()
 T CCSUsrMsg_SayText::GetCachedSize() const
 T CCSUsrMsg_SayText::GetMetadata() const
 T CCSUsrMsg_SayText::IsInitialized() const
 T CCSUsrMsg_SayText::MergeFrom(CCSUsrMsg_SayText const&)
 T CCSUsrMsg_SayText::New() const
 T CCSUsrMsg_SayText::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SayText::SetCachedSize(int) const
 T CCSUsrMsg_SayText::~CCSUsrMsg_SayText()
 T CCSUsrMsg_SendAudio::ByteSize() const
 T CCSUsrMsg_SendAudio::CCSUsrMsg_SendAudio()
 T CCSUsrMsg_SendAudio::Clear()
 T CCSUsrMsg_SendAudio::GetCachedSize() const
 T CCSUsrMsg_SendAudio::GetMetadata() const
 T CCSUsrMsg_SendAudio::IsInitialized() const
 T CCSUsrMsg_SendAudio::MergeFrom(CCSUsrMsg_SendAudio const&)
 T CCSUsrMsg_SendAudio::New() const
 T CCSUsrMsg_SendAudio::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SendAudio::SetCachedSize(int) const
 T CCSUsrMsg_SendAudio::~CCSUsrMsg_SendAudio()
 T CCSUsrMsg_SendLastKillerDamageToClient::ByteSize() const
 T CCSUsrMsg_SendLastKillerDamageToClient::CCSUsrMsg_SendLastKillerDamageToClient()
 T CCSUsrMsg_SendLastKillerDamageToClient::Clear()
 T CCSUsrMsg_SendLastKillerDamageToClient::GetCachedSize() const
 T CCSUsrMsg_SendLastKillerDamageToClient::GetMetadata() const
 T CCSUsrMsg_SendLastKillerDamageToClient::IsInitialized() const
 T CCSUsrMsg_SendLastKillerDamageToClient::MergeFrom(CCSUsrMsg_SendLastKillerDamageToClient const&)
 T CCSUsrMsg_SendLastKillerDamageToClient::New() const
 T CCSUsrMsg_SendLastKillerDamageToClient::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SendLastKillerDamageToClient::SetCachedSize(int) const
 T CCSUsrMsg_SendLastKillerDamageToClient::~CCSUsrMsg_SendLastKillerDamageToClient()
 T CCSUsrMsg_SendPlayerItemDrops::ByteSize() const
 T CCSUsrMsg_SendPlayerItemDrops::CCSUsrMsg_SendPlayerItemDrops()
 T CCSUsrMsg_SendPlayerItemDrops::Clear()
 T CCSUsrMsg_SendPlayerItemDrops::GetCachedSize() const
 T CCSUsrMsg_SendPlayerItemDrops::GetMetadata() const
 T CCSUsrMsg_SendPlayerItemDrops::IsInitialized() const
 T CCSUsrMsg_SendPlayerItemDrops::MergeFrom(CCSUsrMsg_SendPlayerItemDrops const&)
 T CCSUsrMsg_SendPlayerItemDrops::New() const
 T CCSUsrMsg_SendPlayerItemDrops::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SendPlayerItemDrops::SetCachedSize(int) const
 T CCSUsrMsg_SendPlayerItemDrops::~CCSUsrMsg_SendPlayerItemDrops()
 T CCSUsrMsg_SendPlayerItemFound::ByteSize() const
 T CCSUsrMsg_SendPlayerItemFound::CCSUsrMsg_SendPlayerItemFound()
 T CCSUsrMsg_SendPlayerItemFound::Clear()
 T CCSUsrMsg_SendPlayerItemFound::GetCachedSize() const
 T CCSUsrMsg_SendPlayerItemFound::GetMetadata() const
 T CCSUsrMsg_SendPlayerItemFound::IsInitialized() const
 T CCSUsrMsg_SendPlayerItemFound::MergeFrom(CCSUsrMsg_SendPlayerItemFound const&)
 T CCSUsrMsg_SendPlayerItemFound::New() const
 T CCSUsrMsg_SendPlayerItemFound::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_SendPlayerItemFound::SetCachedSize(int) const
 T CCSUsrMsg_SendPlayerItemFound::~CCSUsrMsg_SendPlayerItemFound()
 T CCSUsrMsg_ServerRankRevealAll::ByteSize() const
 T CCSUsrMsg_ServerRankRevealAll::CCSUsrMsg_ServerRankRevealAll()
 T CCSUsrMsg_ServerRankRevealAll::Clear()
 T CCSUsrMsg_ServerRankRevealAll::GetCachedSize() const
 T CCSUsrMsg_ServerRankRevealAll::GetMetadata() const
 T CCSUsrMsg_ServerRankRevealAll::IsInitialized() const
 T CCSUsrMsg_ServerRankRevealAll::MergeFrom(CCSUsrMsg_ServerRankRevealAll const&)
 T CCSUsrMsg_ServerRankRevealAll::New() const
 T CCSUsrMsg_ServerRankRevealAll::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ServerRankRevealAll::SetCachedSize(int) const
 T CCSUsrMsg_ServerRankRevealAll::~CCSUsrMsg_ServerRankRevealAll()
 T CCSUsrMsg_ServerRankUpdate::ByteSize() const
 T CCSUsrMsg_ServerRankUpdate::Clear()
 T CCSUsrMsg_ServerRankUpdate::GetCachedSize() const
 T CCSUsrMsg_ServerRankUpdate::GetMetadata() const
 T CCSUsrMsg_ServerRankUpdate::IsInitialized() const
 T CCSUsrMsg_ServerRankUpdate::MergeFrom(CCSUsrMsg_ServerRankUpdate const&)
 T CCSUsrMsg_ServerRankUpdate::New() const
 T CCSUsrMsg_ServerRankUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ServerRankUpdate::SetCachedSize(int) const
 T CCSUsrMsg_ServerRankUpdate::~CCSUsrMsg_ServerRankUpdate()
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::ByteSize() const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::Clear()
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::GetCachedSize() const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::GetMetadata() const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::IsInitialized() const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::MergeFrom(CCSUsrMsg_ServerRankUpdate_RankUpdate const&)
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::New() const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::SetCachedSize(int) const
 T CCSUsrMsg_ServerRankUpdate_RankUpdate::~CCSUsrMsg_ServerRankUpdate_RankUpdate()
 T CCSUsrMsg_Shake::ByteSize() const
 T CCSUsrMsg_Shake::CCSUsrMsg_Shake()
 T CCSUsrMsg_Shake::Clear()
 T CCSUsrMsg_Shake::GetCachedSize() const
 T CCSUsrMsg_Shake::GetMetadata() const
 T CCSUsrMsg_Shake::IsInitialized() const
 T CCSUsrMsg_Shake::MergeFrom(CCSUsrMsg_Shake const&)
 T CCSUsrMsg_Shake::New() const
 T CCSUsrMsg_Shake::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Shake::SetCachedSize(int) const
 T CCSUsrMsg_Shake::~CCSUsrMsg_Shake()
 T CCSUsrMsg_ShowMenu::ByteSize() const
 T CCSUsrMsg_ShowMenu::Clear()
 T CCSUsrMsg_ShowMenu::GetCachedSize() const
 T CCSUsrMsg_ShowMenu::GetMetadata() const
 T CCSUsrMsg_ShowMenu::IsInitialized() const
 T CCSUsrMsg_ShowMenu::MergeFrom(CCSUsrMsg_ShowMenu const&)
 T CCSUsrMsg_ShowMenu::New() const
 T CCSUsrMsg_ShowMenu::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_ShowMenu::SetCachedSize(int) const
 T CCSUsrMsg_ShowMenu::~CCSUsrMsg_ShowMenu()
 T CCSUsrMsg_StopSpectatorMode::ByteSize() const
 T CCSUsrMsg_StopSpectatorMode::CCSUsrMsg_StopSpectatorMode()
 T CCSUsrMsg_StopSpectatorMode::Clear()
 T CCSUsrMsg_StopSpectatorMode::GetCachedSize() const
 T CCSUsrMsg_StopSpectatorMode::GetMetadata() const
 T CCSUsrMsg_StopSpectatorMode::IsInitialized() const
 T CCSUsrMsg_StopSpectatorMode::MergeFrom(CCSUsrMsg_StopSpectatorMode const&)
 T CCSUsrMsg_StopSpectatorMode::New() const
 T CCSUsrMsg_StopSpectatorMode::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_StopSpectatorMode::SetCachedSize(int) const
 T CCSUsrMsg_StopSpectatorMode::~CCSUsrMsg_StopSpectatorMode()
 T CCSUsrMsg_TextMsg::ByteSize() const
 T CCSUsrMsg_TextMsg::CCSUsrMsg_TextMsg()
 T CCSUsrMsg_TextMsg::Clear()
 T CCSUsrMsg_TextMsg::GetCachedSize() const
 T CCSUsrMsg_TextMsg::GetMetadata() const
 T CCSUsrMsg_TextMsg::IsInitialized() const
 T CCSUsrMsg_TextMsg::MergeFrom(CCSUsrMsg_TextMsg const&)
 T CCSUsrMsg_TextMsg::New() const
 T CCSUsrMsg_TextMsg::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_TextMsg::SetCachedSize(int) const
 T CCSUsrMsg_TextMsg::~CCSUsrMsg_TextMsg()
 T CCSUsrMsg_Train::ByteSize() const
 T CCSUsrMsg_Train::CCSUsrMsg_Train()
 T CCSUsrMsg_Train::Clear()
 T CCSUsrMsg_Train::GetCachedSize() const
 T CCSUsrMsg_Train::GetMetadata() const
 T CCSUsrMsg_Train::IsInitialized() const
 T CCSUsrMsg_Train::MergeFrom(CCSUsrMsg_Train const&)
 T CCSUsrMsg_Train::New() const
 T CCSUsrMsg_Train::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_Train::SetCachedSize(int) const
 T CCSUsrMsg_Train::~CCSUsrMsg_Train()
 T CCSUsrMsg_VGUIMenu::ByteSize() const
 T CCSUsrMsg_VGUIMenu::CCSUsrMsg_VGUIMenu()
 T CCSUsrMsg_VGUIMenu::Clear()
 T CCSUsrMsg_VGUIMenu::GetCachedSize() const
 T CCSUsrMsg_VGUIMenu::GetMetadata() const
 T CCSUsrMsg_VGUIMenu::IsInitialized() const
 T CCSUsrMsg_VGUIMenu::MergeFrom(CCSUsrMsg_VGUIMenu const&)
 T CCSUsrMsg_VGUIMenu::New() const
 T CCSUsrMsg_VGUIMenu::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VGUIMenu::SetCachedSize(int) const
 T CCSUsrMsg_VGUIMenu::~CCSUsrMsg_VGUIMenu()
 T CCSUsrMsg_VGUIMenu_Subkey::ByteSize() const
 T CCSUsrMsg_VGUIMenu_Subkey::CCSUsrMsg_VGUIMenu_Subkey()
 T CCSUsrMsg_VGUIMenu_Subkey::Clear()
 T CCSUsrMsg_VGUIMenu_Subkey::GetCachedSize() const
 T CCSUsrMsg_VGUIMenu_Subkey::GetMetadata() const
 T CCSUsrMsg_VGUIMenu_Subkey::IsInitialized() const
 T CCSUsrMsg_VGUIMenu_Subkey::MergeFrom(CCSUsrMsg_VGUIMenu_Subkey const&)
 T CCSUsrMsg_VGUIMenu_Subkey::New() const
 T CCSUsrMsg_VGUIMenu_Subkey::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VGUIMenu_Subkey::SetCachedSize(int) const
 T CCSUsrMsg_VGUIMenu_Subkey::SharedDtor()
 T CCSUsrMsg_VGUIMenu_Subkey::~CCSUsrMsg_VGUIMenu_Subkey()
 T CCSUsrMsg_VoiceMask::ByteSize() const
 T CCSUsrMsg_VoiceMask::CCSUsrMsg_VoiceMask()
 T CCSUsrMsg_VoiceMask::Clear()
 T CCSUsrMsg_VoiceMask::GetCachedSize() const
 T CCSUsrMsg_VoiceMask::GetMetadata() const
 T CCSUsrMsg_VoiceMask::IsInitialized() const
 T CCSUsrMsg_VoiceMask::MergeFrom(CCSUsrMsg_VoiceMask const&)
 T CCSUsrMsg_VoiceMask::New() const
 T CCSUsrMsg_VoiceMask::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VoiceMask::SetCachedSize(int) const
 T CCSUsrMsg_VoiceMask::~CCSUsrMsg_VoiceMask()
 T CCSUsrMsg_VoiceMask_PlayerMask::ByteSize() const
 T CCSUsrMsg_VoiceMask_PlayerMask::CCSUsrMsg_VoiceMask_PlayerMask()
 T CCSUsrMsg_VoiceMask_PlayerMask::Clear()
 T CCSUsrMsg_VoiceMask_PlayerMask::GetCachedSize() const
 T CCSUsrMsg_VoiceMask_PlayerMask::GetMetadata() const
 T CCSUsrMsg_VoiceMask_PlayerMask::IsInitialized() const
 T CCSUsrMsg_VoiceMask_PlayerMask::MergeFrom(CCSUsrMsg_VoiceMask_PlayerMask const&)
 T CCSUsrMsg_VoiceMask_PlayerMask::New() const
 T CCSUsrMsg_VoiceMask_PlayerMask::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VoiceMask_PlayerMask::SetCachedSize(int) const
 T CCSUsrMsg_VoiceMask_PlayerMask::~CCSUsrMsg_VoiceMask_PlayerMask()
 T CCSUsrMsg_VoteFailed::ByteSize() const
 T CCSUsrMsg_VoteFailed::CCSUsrMsg_VoteFailed()
 T CCSUsrMsg_VoteFailed::Clear()
 T CCSUsrMsg_VoteFailed::GetCachedSize() const
 T CCSUsrMsg_VoteFailed::GetMetadata() const
 T CCSUsrMsg_VoteFailed::IsInitialized() const
 T CCSUsrMsg_VoteFailed::MergeFrom(CCSUsrMsg_VoteFailed const&)
 T CCSUsrMsg_VoteFailed::New() const
 T CCSUsrMsg_VoteFailed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VoteFailed::SetCachedSize(int) const
 T CCSUsrMsg_VoteFailed::~CCSUsrMsg_VoteFailed()
 T CCSUsrMsg_VotePass::ByteSize() const
 T CCSUsrMsg_VotePass::CCSUsrMsg_VotePass()
 T CCSUsrMsg_VotePass::Clear()
 T CCSUsrMsg_VotePass::GetCachedSize() const
 T CCSUsrMsg_VotePass::GetMetadata() const
 T CCSUsrMsg_VotePass::IsInitialized() const
 T CCSUsrMsg_VotePass::MergeFrom(CCSUsrMsg_VotePass const&)
 T CCSUsrMsg_VotePass::New() const
 T CCSUsrMsg_VotePass::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VotePass::SetCachedSize(int) const
 T CCSUsrMsg_VotePass::SharedDtor()
 T CCSUsrMsg_VotePass::~CCSUsrMsg_VotePass()
 T CCSUsrMsg_VoteSetup::ByteSize() const
 T CCSUsrMsg_VoteSetup::CCSUsrMsg_VoteSetup()
 T CCSUsrMsg_VoteSetup::Clear()
 T CCSUsrMsg_VoteSetup::GetCachedSize() const
 T CCSUsrMsg_VoteSetup::GetMetadata() const
 T CCSUsrMsg_VoteSetup::IsInitialized() const
 T CCSUsrMsg_VoteSetup::MergeFrom(CCSUsrMsg_VoteSetup const&)
 T CCSUsrMsg_VoteSetup::New() const
 T CCSUsrMsg_VoteSetup::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VoteSetup::SetCachedSize(int) const
 T CCSUsrMsg_VoteSetup::~CCSUsrMsg_VoteSetup()
 T CCSUsrMsg_VoteStart::ByteSize() const
 T CCSUsrMsg_VoteStart::CCSUsrMsg_VoteStart()
 T CCSUsrMsg_VoteStart::Clear()
 T CCSUsrMsg_VoteStart::GetCachedSize() const
 T CCSUsrMsg_VoteStart::GetMetadata() const
 T CCSUsrMsg_VoteStart::IsInitialized() const
 T CCSUsrMsg_VoteStart::MergeFrom(CCSUsrMsg_VoteStart const&)
 T CCSUsrMsg_VoteStart::New() const
 T CCSUsrMsg_VoteStart::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_VoteStart::SetCachedSize(int) const
 T CCSUsrMsg_VoteStart::SharedDtor()
 T CCSUsrMsg_VoteStart::~CCSUsrMsg_VoteStart()
 T CCSUsrMsg_WarmupHasEnded::ByteSize() const
 T CCSUsrMsg_WarmupHasEnded::CCSUsrMsg_WarmupHasEnded()
 T CCSUsrMsg_WarmupHasEnded::Clear()
 T CCSUsrMsg_WarmupHasEnded::GetCachedSize() const
 T CCSUsrMsg_WarmupHasEnded::GetMetadata() const
 T CCSUsrMsg_WarmupHasEnded::IsInitialized() const
 T CCSUsrMsg_WarmupHasEnded::MergeFrom(CCSUsrMsg_WarmupHasEnded const&)
 T CCSUsrMsg_WarmupHasEnded::New() const
 T CCSUsrMsg_WarmupHasEnded::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_WarmupHasEnded::SetCachedSize(int) const
 T CCSUsrMsg_WarmupHasEnded::~CCSUsrMsg_WarmupHasEnded()
 T CCSUsrMsg_XRankGet::ByteSize() const
 T CCSUsrMsg_XRankGet::Clear()
 T CCSUsrMsg_XRankGet::GetCachedSize() const
 T CCSUsrMsg_XRankGet::GetMetadata() const
 T CCSUsrMsg_XRankGet::IsInitialized() const
 T CCSUsrMsg_XRankGet::MergeFrom(CCSUsrMsg_XRankGet const&)
 T CCSUsrMsg_XRankGet::New() const
 T CCSUsrMsg_XRankGet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_XRankGet::SetCachedSize(int) const
 T CCSUsrMsg_XRankGet::~CCSUsrMsg_XRankGet()
 T CCSUsrMsg_XRankUpd::ByteSize() const
 T CCSUsrMsg_XRankUpd::Clear()
 T CCSUsrMsg_XRankUpd::GetCachedSize() const
 T CCSUsrMsg_XRankUpd::GetMetadata() const
 T CCSUsrMsg_XRankUpd::IsInitialized() const
 T CCSUsrMsg_XRankUpd::MergeFrom(CCSUsrMsg_XRankUpd const&)
 T CCSUsrMsg_XRankUpd::New() const
 T CCSUsrMsg_XRankUpd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCSUsrMsg_XRankUpd::SetCachedSize(int) const
 T CCSUsrMsg_XRankUpd::~CCSUsrMsg_XRankUpd()
 T CCSWeaponInfo::CCSWeaponInfo()
 T CCSWeaponInfo::CannotShootUnderwater(CEconItemView const*, int, float) const
 T CCSWeaponInfo::DoesUnzoomAfterShot(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GenerateRecoilTable()
 T CCSWeaponInfo::GetAddonModel(CEconItemView const*) const
 T CCSWeaponInfo::GetArmorRatio(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetBucketSlot(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetBullets(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetCycleTime(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetDamage(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetEjectBrassEffectName(CEconItemView const*) const
 T CCSWeaponInfo::GetFlinchVelocityModifierLarge(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetFlinchVelocityModifierSmall(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetHeatEffectName(CEconItemView const*) const
 T CCSWeaponInfo::GetIdleInterval(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyCrouch(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyFire(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyJump(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyLadder(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyLand(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyMove(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyReload(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetInaccuracyStand(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetKillAward(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetMaxSpeed(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetMuzzleFlashEffectName_1stPerson(CEconItemView const*) const
 T CCSWeaponInfo::GetMuzzleFlashEffectName_1stPersonAlt(CEconItemView const*) const
 T CCSWeaponInfo::GetMuzzleFlashEffectName_3rdPerson(CEconItemView const*) const
 T CCSWeaponInfo::GetMuzzleFlashEffectName_3rdPersonAlt(CEconItemView const*) const
 T CCSWeaponInfo::GetPenetration(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetPlayerAnimationExtension(CEconItemView const*) const
 T CCSWeaponInfo::GetPrimaryClipSize(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRange(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRangeModifier(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoilAngle(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoilAngleVariance(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoilMagnitude(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoilMagnitudeVariance(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoilOffsets(int, int, float&, float&) const
 T CCSWeaponInfo::GetRecoilSeed(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoveryTimeCrouch(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetRecoveryTimeStand(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetSecondaryClipSize(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetSpread(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetTimeToIdleAfterFire(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetTracerEffectName(CEconItemView const*) const
 T CCSWeaponInfo::GetTracerFrequency(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetUsedByTeam(CEconItemView const*) const
 T CCSWeaponInfo::GetWeaponPrice(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetWeaponType(CEconItemView const*) const
 T CCSWeaponInfo::GetZoomFOV1(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetZoomFOV2(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetZoomLevels(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetZoomTime0(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetZoomTime1(CEconItemView const*, int, float) const
 T CCSWeaponInfo::GetZoomTime2(CEconItemView const*, int, float) const
 T CCSWeaponInfo::HasBulletAltfire(CEconItemView const*, int, float) const
 T CCSWeaponInfo::HasBurstMode(CEconItemView const*, int, float) const
 T CCSWeaponInfo::HasPostponeFire(CEconItemView const*, int, float) const
 T CCSWeaponInfo::HasSilencer(CEconItemView const*, int, float) const
 T CCSWeaponInfo::HasTraditionalScope(CEconItemView const*, int, float) const
 T CCSWeaponInfo::IsFullAuto(CEconItemView const*, int, float) const
 T CCSWeaponInfo::Parse(KeyValues*, char const*)
 T CCSWeaponInfo::RefreshDynamicParameters()
 T CCSWeaponInfo::~CCSWeaponInfo()
 T CCStrike15ItemDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CCStrike15ItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)
 T CCStrike15ItemDefinition::CopyPolymorphic(CEconItemDefinition const*)
 T CCStrike15ItemDefinition::GeneratePrecacheModelStrings(bool, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CCStrike15ItemDefinition::GetLoadoutSlot(int) const
 T CCStrike15ItemDefinition::GetUsedByTeam() const
 T CCStrike15ItemDefinition::IsContentStreamable() const
 T CCStrike15ItemDefinition::~CCStrike15ItemDefinition()
 T CCStrike15ItemSchema::BInitSchema(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CCStrike15ItemSchema::CCStrike15ItemSchema()
 T CCStrike15ItemSchema::CreateEconItemDefinition()
 T CCStrike15ItemSchema::~CCStrike15ItemSchema()
 T CCStrike15ItemSystem::GenerateBaseItem(baseitemcriteria_t*)
 T CCStrike15ItemSystem::~CCStrike15ItemSystem()
 T CC_AI_Disable()
 T CC_AI_GraphConnect(CCommand const&)
 T CC_AI_Hull(CCommand const&)
 T CC_AI_LOS_Debug(IConVar*, char const*, float)
 T CC_AI_NextHull(CCommand const&)
 T CC_AI_Nodes(CCommand const&)
 T CC_AI_Resume()
 T CC_AI_ShowConnect(CCommand const&)
 T CC_AI_ShowCrawlConnect(CCommand const&)
 T CC_AI_ShowFlyConnect(CCommand const&)
 T CC_AI_ShowGrid(CCommand const&)
 T CC_AI_ShowHints()
 T CC_AI_ShowHull(CCommand const&)
 T CC_AI_ShowJumpConnect(CCommand const&)
 T CC_AI_ShowVisibility(CCommand const&)
 T CC_AI_Step()
 T CC_AirDensity(CCommand const&)
 T CC_CH_CreateAirboat()
 T CC_CH_CreateJeep()
 T CC_CH_ForceRespawn()
 T CC_CH_TournamentRestart()
 T CC_CollisionTest(CCommand const&)
 T CC_CommentaryChanged(IConVar*, char const*, float)
 T CC_CommentaryFinishNode()
 T CC_CommentaryNotChanging()
 T CC_CreateFlashlight(CCommand const&)
 T CC_DebugHistory_AddLine(CCommand const&)
 T CC_DebugHistory_Dump(CCommand const&)
 T CC_DrawCross(CCommand const&)
 T CC_DrawLine(CCommand const&)
 T CC_DumpEventQueue()
 T CC_DumpGameStringTable()
 T CC_Ent_AbsBox(CCommand const&)
 T CC_Ent_AttachmentPoints(CCommand const&)
 T CC_Ent_Autoaim(CCommand const&)
 T CC_Ent_BBox(CCommand const&)
 T CC_Ent_CancelPendingEntFires(CCommand const&)
 T CC_Ent_Create(CCommand const&)
 T CC_Ent_Dump(CCommand const&)
 T CC_Ent_FireTarget(CCommand const&)
 T CC_Ent_Info(CCommand const&)
 T CC_Ent_Keyvalue(CCommand const&)
 T CC_Ent_Messages(CCommand const&)
 T CC_Ent_Name(CCommand const&)
 T CC_Ent_Orient(CCommand const&)
 T CC_Ent_Pause()
 T CC_Ent_Picker()
 T CC_Ent_Pivot(CCommand const&)
 T CC_Ent_RBox(CCommand const&)
 T CC_Ent_Remove(CCommand const&)
 T CC_Ent_RemoveAll(CCommand const&)
 T CC_Ent_Rotate(CCommand const&)
 T CC_Ent_Script_Dump(CCommand const&)
 T CC_Ent_SetName(CCommand const&)
 T CC_Ent_Show_Response_Criteria(CCommand const&)
 T CC_Ent_Step(CCommand const&)
 T CC_Ent_Teleport(CCommand const&)
 T CC_Ent_Text(CCommand const&)
 T CC_Ent_ViewOffset(CCommand const&)
 T CC_Find_Ent(CCommand const&)
 T CC_Find_Ent_Index(CCommand const&)
 T CC_GetCommandEnt(CCommand const&, CBaseEntity**, Vector*, QAngle*)
 T CC_GiveCurrentAmmo()
 T CC_Global_Set(CCommand const&)
 T CC_God_f()
 T CC_Gods_f()
 T CC_GroundList_f(CCommand const&)
 T CC_HurtMe_f(CCommand const&)
 T CC_KDTreeTest(CCommand const&)
 T CC_NPC_Bipass(CCommand const&)
 T CC_NPC_Combat(CCommand const&)
 T CC_NPC_Conditions(CCommand const&)
 T CC_NPC_Create(CCommand const&)
 T CC_NPC_Create_Aimed(CCommand const&)
 T CC_NPC_Destroy(CCommand const&)
 T CC_NPC_DestroyUnselected()
 T CC_NPC_Enemies(CCommand const&)
 T CC_NPC_Focus(CCommand const&)
 T CC_NPC_Freeze(CCommand const&)
 T CC_NPC_Go()
 T CC_NPC_GoRandom()
 T CC_NPC_Kill(CCommand const&)
 T CC_NPC_Nearest(CCommand const&)
 T CC_NPC_Relationships(CCommand const&)
 T CC_NPC_Reset()
 T CC_NPC_Route(CCommand const&)
 T CC_NPC_Select(CCommand const&)
 T CC_NPC_Set_Freeze(CCommand const&)
 T CC_NPC_Task_Text(CCommand const&)
 T CC_NPC_Tasks(CCommand const&)
 T CC_NPC_Teleport()
 T CC_NPC_ViewSteeringRegulations(CCommand const&)
 T CC_NPC_ViewSteeringRegulationsAll()
 T CC_NPC_Viewcone(CCommand const&)
 T CC_Notarget_f()
 T CC_Particle_Test_Start(CCommand const&)
 T CC_Particle_Test_Stop(CCommand const&)
 T CC_Player_BugBaitSwap()
 T CC_Player_SetModel(CCommand const&)
 T CC_Player_TestDispatchEffect(CCommand const&)
 T CC_Player_Use(CCommand const&)
 T CC_Prop_Debug()
 T CC_Prop_Dynamic_Create(CCommand const&)
 T CC_Prop_Physics_Create(CCommand const&)
 T CC_RR_ForceConcept_f(CCommand const&)
 T CC_Shake()
 T CC_Test_EHandle()
 T CC_Test_Entity_Blocker()
 T CC_Test_Outtro_Stats(CCommand const&)
 T CC_VoxelTreeBox(CCommand const&)
 T CC_VoxelTreePlayerView()
 T CC_VoxelTreeSphere(CCommand const&)
 T CC_VoxelTreeView()
 T CC_WC_AirNodeEdit()
 T CC_WC_AirNodeEditFurther()
 T CC_WC_AirNodeEditNearer()
 T CC_WC_Create()
 T CC_WC_Destroy()
 T CC_WC_DestroyUndo()
 T CC_WC_LinkEdit()
 T CC_ai_drop_hint(CCommand const&)
 T CC_setang_f(CCommand const&)
 T CCallQueue::~CCallQueue()
 T CCallQueueT<CTSQueue<CFunctor*, false> >::CallQueued()
 T CCallQueueT<CTSQueue<CFunctor*, false> >::QueueFunctorInternal(CFunctor*)
 T CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>::GetCallbackSizeBytes()
 T CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>::Run(void*)
 T CCallResult<CBaseWorkshopHTTPRequest, HTTPRequestCompleted_t>::Run(void*, bool, unsigned long long)
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>::GetCallbackSizeBytes()
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>::Run(void*)
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t>::Run(void*, bool, unsigned long long)
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>::GetCallbackSizeBytes()
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>::Run(void*)
 T CCallResult<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t>::Run(void*, bool, unsigned long long)
 T CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>::GetCallbackSizeBytes()
 T CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>::Run(void*)
 T CCallResult<CStreamingUGCDownloader, HTTPRequestCompleted_t>::Run(void*, bool, unsigned long long)
 T CCallback<CGCClientSystem, SteamServersConnected_t, true>::GetCallbackSizeBytes()
 T CCallback<CGCClientSystem, SteamServersConnected_t, true>::Run(void*)
 T CCallback<CGCClientSystem, SteamServersConnected_t, true>::Run(void*, bool, unsigned long long)
 T CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>::GetCallbackSizeBytes()
 T CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>::Run(void*)
 T CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>::GetCallbackSizeBytes()
 T CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>::Run(void*)
 T CCallback<GCSDK::CGCClient, SteamServerConnectFailure_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>::GetCallbackSizeBytes()
 T CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>::Run(void*)
 T CCallback<GCSDK::CGCClient, SteamServersConnected_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>::GetCallbackSizeBytes()
 T CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>::Run(void*)
 T CCallback<GCSDK::CGCClient, SteamServersDisconnected_t, false>::Run(void*, bool, unsigned long long)
 T CCaptionRepeatMgr::CanEmitCaption(unsigned int)
 T CCaptionRepeatMgr::RemoveCaptionsBefore(float)
 T CCaptionRepeatMgr::~CCaptionRepeatMgr()
 T CCascadeLight::CCascadeLight()
 T CCascadeLight::GetDataDescMap()
 T CCascadeLight::GetKeyValue(char const*, char*, int)
 T CCascadeLight::GetServerClass()
 T CCascadeLight::InputDisable(inputdata_t&)
 T CCascadeLight::InputEnable(inputdata_t&)
 T CCascadeLight::InputSetAngles(inputdata_t&)
 T CCascadeLight::InputSetLightColor(inputdata_t&)
 T CCascadeLight::KeyValue(char const*, char const*)
 T CCascadeLight::ObjectCaps()
 T CCascadeLight::SetEnvLightShadowAngles(QAngle const&)
 T CCascadeLight::SetEnvLightShadowPitch(float)
 T CCascadeLight::Spawn()
 T CCascadeLight::UpdateEnvLight()
 T CCascadeLight::UpdateTransmitState()
 T CCascadeLight::YouForgotToImplementOrDeclareServerClass()
 T CCascadeLight::~CCascadeLight()
 T CChangeLevel::Activate()
 T CChangeLevel::AddTransitionToList(levellist_t*, int, char const*, char const*, edict_t*)
 T CChangeLevel::BuildChangeLevelList(levellist_t*, int)
 T CChangeLevel::BuildEntityTransitionList(CBaseEntity*, char const*, CBaseEntity**, int*, int)
 T CChangeLevel::ChangeLevelNow(CBaseEntity*)
 T CChangeLevel::ChangeList(levellist_t*, int)
 T CChangeLevel::ComputeEntitySaveFlags(CBaseEntity*)
 T CChangeLevel::FindLandmark(char const*)
 T CChangeLevel::GetDataDescMap()
 T CChangeLevel::InTransitionVolume(CBaseEntity*, char const*)
 T CChangeLevel::InputChangeLevel(inputdata_t&)
 T CChangeLevel::IsEntityInTransition(CBaseEntity*)
 T CChangeLevel::KeyValue(char const*, char const*)
 T CChangeLevel::NotifyEntitiesOutOfTransition()
 T CChangeLevel::Spawn()
 T CChangeLevel::TouchChangeLevel(CBaseEntity*)
 T CChangeLevel::WarnAboutActiveLead()
 T CChangeLevel::~CChangeLevel()
 T CChangeLevelIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CChangeLevelIssue::CanTeamCallVote(int) const
 T CChangeLevelIssue::ExecuteCommand()
 T CChangeLevelIssue::GetDetailsString()
 T CChangeLevelIssue::GetDisplayString()
 T CChangeLevelIssue::GetVoteIssue()
 T CChangeLevelIssue::GetVotePassedString()
 T CChangeLevelIssue::IsAllyRestrictedVote()
 T CChangeLevelIssue::IsEnabled()
 T CChangeLevelIssue::IsYesNoVote()
 T CChangeLevelIssue::ListIssueDetails(CBasePlayer*)
 T CChangeLevelIssue::~CChangeLevelIssue()
 T CCheckClient::LevelInitPreEntity()
 T CCheckClient::~CCheckClient()
 T CChicken::AvoidObstacles()
 T CChicken::ChickenThink()
 T CChicken::ChickenTouch(CBaseEntity*)
 T CChicken::Event_Killed(CTakeDamageInfo const&)
 T CChicken::FireGameEvent(IGameEvent*)
 T CChicken::Flee(CBaseEntity*, float)
 T CChicken::Fly()
 T CChicken::GetDataDescMap()
 T CChicken::GetServerClass()
 T CChicken::Idle()
 T CChicken::IsAlive()
 T CChicken::Land()
 T CChicken::OnTakeDamage(CTakeDamageInfo const&)
 T CChicken::Precache()
 T CChicken::ResolveCollisions(Vector const&, float)
 T CChicken::Spawn()
 T CChicken::Update()
 T CChicken::Walk()
 T CChicken::YouForgotToImplementOrDeclareServerClass()
 T CChicken::~CChicken()
 T CChildOperatorDefinition::CreateInstance(UniqueId_t const&) const
 T CChildOperatorDefinition::GetFilter() const
 T CChildOperatorDefinition::GetId() const
 T CChildOperatorDefinition::GetName() const
 T CChildOperatorDefinition::GetUnpackStructure() const
 T CChildOperatorDefinition::IsObsolete() const
 T CChoreoActor::AddChannel(CChoreoChannel*)
 T CChoreoActor::CChoreoActor()
 T CChoreoActor::FindChannelIndex(CChoreoChannel*)
 T CChoreoActor::GetChannel(int)
 T CChoreoActor::GetName()
 T CChoreoActor::GetNumChannels()
 T CChoreoActor::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoActor::SetActive(bool)
 T CChoreoActor::SetFacePoserModelName(char const*)
 T CChoreoActor::SetName(char const*)
 T CChoreoChannel::AddEvent(CChoreoEvent*)
 T CChoreoChannel::CChoreoChannel()
 T CChoreoChannel::GetEvent(int)
 T CChoreoChannel::GetName()
 T CChoreoChannel::GetNumEvents()
 T CChoreoChannel::ReconcileCloseCaption()
 T CChoreoChannel::ReconcileGestureTimes()
 T CChoreoChannel::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, CChoreoActor*, IChoreoStringPool*)
 T CChoreoChannel::SetActive(bool)
 T CChoreoChannel::SetActor(CChoreoActor*)
 T CChoreoChannel::SetName(char const*)
 T CChoreoEvent::AddAbsoluteTag(CChoreoEvent::AbsTagType, char const*, float)
 T CChoreoEvent::AddEventDependency(CChoreoEvent*)
 T CChoreoEvent::AddRelativeTag(char const*, float)
 T CChoreoEvent::AddTimingTag(char const*, float, bool)
 T CChoreoEvent::AddTrack(char const*)
 T CChoreoEvent::CCTypeForName(char const*)
 T CChoreoEvent::CChoreoEvent(CChoreoScene*)
 T CChoreoEvent::CheckProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::ClearEventDependencies()
 T CChoreoEvent::ContinueProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::CurveHasEndTime()
 T CChoreoEvent::FindAbsoluteTag(CChoreoEvent::AbsTagType, char const*)
 T CChoreoEvent::FindEntryTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindExitTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindRelativeTag(char const*)
 T CChoreoEvent::GetActor()
 T CChoreoEvent::GetChannel()
 T CChoreoEvent::GetCloseCaptionToken() const
 T CChoreoEvent::GetCloseCaptionType() const
 T CChoreoEvent::GetDefaultCurveType()
 T CChoreoEvent::GetDescription()
 T CChoreoEvent::GetDistanceToTarget()
 T CChoreoEvent::GetDuration()
 T CChoreoEvent::GetEndTime()
 T CChoreoEvent::GetEventDependencies(CUtlVector<CChoreoEvent*, CUtlMemory<CChoreoEvent*, int> >&)
 T CChoreoEvent::GetFlexAnimationTrack(int)
 T CChoreoEvent::GetIntensity(float)
 T CChoreoEvent::GetLastSlaveEndTime() const
 T CChoreoEvent::GetLoopCount()
 T CChoreoEvent::GetName()
 T CChoreoEvent::GetNumFlexAnimationTracks()
 T CChoreoEvent::GetNumLoopsRemaining()
 T CChoreoEvent::GetNumSlaves() const
 T CChoreoEvent::GetOriginalPercentageFromPlaybackPercentage(float)
 T CChoreoEvent::GetParameters()
 T CChoreoEvent::GetParameters2()
 T CChoreoEvent::GetParameters3()
 T CChoreoEvent::GetPlayOverScript()
 T CChoreoEvent::GetPlaybackCloseCaptionToken(char*, int)
 T CChoreoEvent::GetRelativeTagName()
 T CChoreoEvent::GetRelativeWavName()
 T CChoreoEvent::GetScene()
 T CChoreoEvent::GetStartTime()
 T CChoreoEvent::GetSubScene()
 T CChoreoEvent::GetSyncToFollowingGesture()
 T CChoreoEvent::GetTrackLookupSet()
 T CChoreoEvent::GetType()
 T CChoreoEvent::HasEndTime()
 T CChoreoEvent::HasStopped() const
 T CChoreoEvent::Init(CChoreoScene*)
 T CChoreoEvent::IsLockBodyFacing()
 T CChoreoEvent::IsProcessing() const
 T CChoreoEvent::IsResumeCondition()
 T CChoreoEvent::IsSuppressingCaptionAttenuation() const
 T CChoreoEvent::IsUsingCombinedFile() const
 T CChoreoEvent::IsUsingRelativeTag()
 T CChoreoEvent::OffsetTime(float)
 T CChoreoEvent::PreventTagOverlap()
 T CChoreoEvent::RemoveAllTracks()
 T CChoreoEvent::RescaleGestureTimes(float, float, bool)
 T CChoreoEvent::ResetProcessing()
 T CChoreoEvent::RestoreFlexAnimationsFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CChoreoEvent::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoEvent::SetActive(bool)
 T CChoreoEvent::SetActor(CChoreoActor*)
 T CChoreoEvent::SetChannel(CChoreoChannel*)
 T CChoreoEvent::SetCloseCaptionToken(char const*)
 T CChoreoEvent::SetCloseCaptionType(CChoreoEvent::CLOSECAPTION)
 T CChoreoEvent::SetCombinedUsingGenderToken(bool)
 T CChoreoEvent::SetDefaultCurveType(int)
 T CChoreoEvent::SetDistanceToTarget(float)
 T CChoreoEvent::SetEndTime(float)
 T CChoreoEvent::SetFixedLength(bool)
 T CChoreoEvent::SetForceShortMovement(bool)
 T CChoreoEvent::SetGestureSequenceDuration(float)
 T CChoreoEvent::SetLastSlaveEndTime(float)
 T CChoreoEvent::SetLockBodyFacing(bool)
 T CChoreoEvent::SetLoopCount(int)
 T CChoreoEvent::SetName(char const*)
 T CChoreoEvent::SetNumLoopsRemaining(int)
 T CChoreoEvent::SetNumSlaves(int)
 T CChoreoEvent::SetParameters(char const*)
 T CChoreoEvent::SetParameters2(char const*)
 T CChoreoEvent::SetParameters3(char const*)
 T CChoreoEvent::SetPitch(int)
 T CChoreoEvent::SetPlayOverScript(bool)
 T CChoreoEvent::SetRequiredCombinedChecksum(unsigned int)
 T CChoreoEvent::SetResumeCondition(bool)
 T CChoreoEvent::SetStartTime(float)
 T CChoreoEvent::SetSubScene(CChoreoScene*)
 T CChoreoEvent::SetSuppressingCaptionAttenuation(bool)
 T CChoreoEvent::SetSyncToFollowingGesture(bool)
 T CChoreoEvent::SetTrackLookupSet(bool)
 T CChoreoEvent::SetType(CChoreoEvent::EVENTTYPE)
 T CChoreoEvent::SetUsingCombinedFile(bool)
 T CChoreoEvent::SetUsingRelativeTag(bool, char const*, char const*)
 T CChoreoEvent::SetYaw(int)
 T CChoreoEvent::SnapTimes()
 T CChoreoEvent::StartProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::StopProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::TypeForAbsoluteTagName(char const*)
 T CChoreoEvent::TypeForName(char const*)
 T CChoreoEvent::VerifyTagOrder()
 T CChoreoEvent::~CChoreoEvent()
 T CChoreoScene::AllocActor()
 T CChoreoScene::AllocChannel()
 T CChoreoScene::AllocEvent()
 T CChoreoScene::CChoreoScene(IChoreoEventCallback*)
 T CChoreoScene::CheckEventCompletion()
 T CChoreoScene::CurveHasEndTime()
 T CChoreoScene::EventLess(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&)
 T CChoreoScene::EventThink(CChoreoEvent*, float, float, bool, CChoreoScene::PROCESSING_TYPE&)
 T CChoreoScene::FindActorIndex(CChoreoActor*)
 T CChoreoScene::FindAdjustedEndTime()
 T CChoreoScene::FindStopTime()
 T CChoreoScene::FindTagByName(char const*, char const*)
 T CChoreoScene::GetActor(int)
 T CChoreoScene::GetDefaultCurveType()
 T CChoreoScene::GetDuration()
 T CChoreoScene::GetEvent(int)
 T CChoreoScene::GetFilename() const
 T CChoreoScene::GetNumActors()
 T CChoreoScene::GetNumChannels()
 T CChoreoScene::GetNumEvents()
 T CChoreoScene::GetPlayingSoundName(char*, int)
 T CChoreoScene::GetSoundFileStartupLatency() const
 T CChoreoScene::GetTime()
 T CChoreoScene::HasEventsOfType(CChoreoEvent::EVENTTYPE) const
 T CChoreoScene::HasUnplayedSpeech()
 T CChoreoScene::InternalDetermineEventTypes()
 T CChoreoScene::IsBackground()
 T CChoreoScene::IsSubScene() const
 T CChoreoScene::LoopToTime(float)
 T CChoreoScene::ParseActor()
 T CChoreoScene::ParseChannel(CChoreoActor*)
 T CChoreoScene::ParseEvent(CChoreoActor*, CChoreoChannel*)
 T CChoreoScene::ParseFlexAnimations(ISceneTokenProcessor*, CChoreoEvent*, bool)
 T CChoreoScene::ParseFromBuffer(char const*, ISceneTokenProcessor*)
 T CChoreoScene::ParseScaleSettings(ISceneTokenProcessor*, CChoreoScene*)
 T CChoreoScene::ReconcileCloseCaption()
 T CChoreoScene::ReconcileGestureTimes()
 T CChoreoScene::ReconcileTags()
 T CChoreoScene::ResetSimulation(bool, float, float)
 T CChoreoScene::RestoreFromBinaryBuffer(CUtlBuffer&, char const*, IChoreoStringPool*)
 T CChoreoScene::ResumeSimulation()
 T CChoreoScene::SetBackground(bool)
 T CChoreoScene::SetEventCallbackInterface(IChoreoEventCallback*)
 T CChoreoScene::SetPrintFunc(void (*)(char const*, ...))
 T CChoreoScene::SetSoundFileStartupLatency(float)
 T CChoreoScene::SetSubScene(bool)
 T CChoreoScene::SetTime(float)
 T CChoreoScene::SetTimeZoom(char const*, int)
 T CChoreoScene::ShouldIgnorePhonemes() const
 T CChoreoScene::SimulationFinished()
 T CChoreoScene::SnapTime(float)
 T CChoreoScene::Think(float)
 T CChoreoScene::choreoprintf(int, char const*, ...)
 T CChoreoScene::~CChoreoScene()
 T CChoreoStringPool::FindOrAddString(char const*)
 T CChoreoStringPool::GetString(short, char*, int)
 T CClassMemoryPool<GCSDK::CNetPacket>::~CClassMemoryPool()
 T CClassMemoryPool<PanelAnimationMap>::Clear()
 T CClassPtrSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CClassPtrSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CCleanupDefaultRelationShips::Shutdown()
 T CCleanupDefaultRelationShips::~CCleanupDefaultRelationShips()
 T CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 T CClientHeaderOverwatchEvidence::ByteSize() const
 T CClientHeaderOverwatchEvidence::Clear()
 T CClientHeaderOverwatchEvidence::GetCachedSize() const
 T CClientHeaderOverwatchEvidence::GetMetadata() const
 T CClientHeaderOverwatchEvidence::IsInitialized() const
 T CClientHeaderOverwatchEvidence::MergeFrom(CClientHeaderOverwatchEvidence const&)
 T CClientHeaderOverwatchEvidence::New() const
 T CClientHeaderOverwatchEvidence::SerializeWithCachedSizesToArray(unsigned char*) const
 T CClientHeaderOverwatchEvidence::SetCachedSize(int) const
 T CClientHeaderOverwatchEvidence::~CClientHeaderOverwatchEvidence()
 T CCollectionInfoHTTPRequest::CreateHTTPRequest(char const*)
 T CCollectionInfoHTTPRequest::ProcessHTTPResponse(KeyValues*)
 T CCollectionInfoHTTPRequest::~CCollectionInfoHTTPRequest()
 T CCollisionEvent::AddDamageEvent(CBaseEntity*, CTakeDamageInfo const&, IPhysicsObject*, bool, Vector const&, Vector const&)
 T CCollisionEvent::AddDamageInflictor(IPhysicsObject*, float, Vector const&, Vector const&, bool)
 T CCollisionEvent::AddRemoveObject(IServerNetworkable*)
 T CCollisionEvent::AddTouchEvent(CBaseEntity*, CBaseEntity*, int, Vector const&, Vector const&)
 T CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T CCollisionEvent::DeltaTimeSinceLastFluid(CBaseEntity*)
 T CCollisionEvent::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::FindOrAddPenetrateEvent(CBaseEntity*, CBaseEntity*)
 T CCollisionEvent::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FlushQueuedOperations()
 T CCollisionEvent::FrameUpdate()
 T CCollisionEvent::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
 T CCollisionEvent::GetListOfPenetratingEntities(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T CCollisionEvent::LevelShutdown()
 T CCollisionEvent::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T CCollisionEvent::ObjectWake(IPhysicsObject*)
 T CCollisionEvent::PostCollision(vcollisionevent_t*)
 T CCollisionEvent::PostSimulationFrame()
 T CCollisionEvent::PreCollision(vcollisionevent_t*)
 T CCollisionEvent::RestoreDamageInflictorState(IPhysicsObject*)
 T CCollisionEvent::RestoreDamageInflictorState(int, float)
 T CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T CCollisionEvent::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::UpdateDamageEvents()
 T CCollisionEvent::UpdateFrictionSounds()
 T CCollisionEvent::UpdatePenetrateEvents()
 T CCollisionEvent::UpdateTouchEvents()
 T CCollisionEvent::~CCollisionEvent()
 T CCollisionProperty::CCollisionProperty()
 T CCollisionProperty::CalcDistanceFromPoint(Vector const&) const
 T CCollisionProperty::CalcNearestPoint(Vector const&, Vector*) const
 T CCollisionProperty::CollisionAABBToWorldAABB(Vector const&, Vector const&, Vector*, Vector*) const
 T CCollisionProperty::CollisionToWorldTransform() const
 T CCollisionProperty::ComputeRotationExpandedSequenceBounds(Vector*, Vector*)
 T CCollisionProperty::ComputeSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::ComputeVPhysicsSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::DestroyPartitionHandle()
 T CCollisionProperty::DoesVPhysicsInvalidateSurroundingBox() const
 T CCollisionProperty::GetCollisionAngles() const
 T CCollisionProperty::GetCollisionGroup() const
 T CCollisionProperty::GetCollisionModel()
 T CCollisionProperty::GetCollisionModelIndex()
 T CCollisionProperty::GetCollisionOrigin() const
 T CCollisionProperty::GetDataDescMap()
 T CCollisionProperty::GetEntityHandle()
 T CCollisionProperty::GetIClientUnknown()
 T CCollisionProperty::GetRequiredTriggerFlags() const
 T CCollisionProperty::GetRootParentToWorldTransform() const
 T CCollisionProperty::GetSolid() const
 T CCollisionProperty::GetSolidFlags() const
 T CCollisionProperty::GetVPhysicsObject() const
 T CCollisionProperty::Init(CBaseEntity*)
 T CCollisionProperty::IsPointInBounds(Vector const&) const
 T CCollisionProperty::MarkPartitionHandleDirty()
 T CCollisionProperty::MarkSurroundingBoundsDirty()
 T CCollisionProperty::NetworkStateChanged()
 T CCollisionProperty::NetworkStateChanged(void*)
 T CCollisionProperty::NormalizedToWorldSpace(Vector const&, Vector*) const
 T CCollisionProperty::OBBMaxs() const
 T CCollisionProperty::OBBMins() const
 T CCollisionProperty::RandomPointInBounds(Vector const&, Vector const&, Vector*) const
 T CCollisionProperty::SetCollisionBounds(Vector const&, Vector const&)
 T CCollisionProperty::SetSolid(SolidType_t)
 T CCollisionProperty::SetSolidFlags(int)
 T CCollisionProperty::SetSurroundingBoundsType(SurroundingBoundsType_t, Vector const*, Vector const*)
 T CCollisionProperty::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::UpdatePartition()
 T CCollisionProperty::UseTriggerBounds(bool, float)
 T CCollisionProperty::WorldSpaceCenter() const
 T CCollisionProperty::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T CCollisionProperty::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T CCollisionProperty::~CCollisionProperty()
 T CColorCorrection::Activate()
 T CColorCorrection::CColorCorrection()
 T CColorCorrection::FadeIn()
 T CColorCorrection::FadeInThink()
 T CColorCorrection::FadeOut()
 T CColorCorrection::FadeOutThink()
 T CColorCorrection::GetDataDescMap()
 T CColorCorrection::GetServerClass()
 T CColorCorrection::InputDisable(inputdata_t&)
 T CColorCorrection::InputEnable(inputdata_t&)
 T CColorCorrection::InputSetFadeInDuration(inputdata_t&)
 T CColorCorrection::InputSetFadeOutDuration(inputdata_t&)
 T CColorCorrection::ObjectCaps()
 T CColorCorrection::Spawn()
 T CColorCorrection::UpdateTransmitState()
 T CColorCorrection::YouForgotToImplementOrDeclareServerClass()
 T CColorCorrection::~CColorCorrection()
 T CColorCorrectionSystem::FireGameEvent(IGameEvent*)
 T CColorCorrectionSystem::InitMasterController()
 T CColorCorrectionSystem::LevelInitPostEntity()
 T CColorCorrectionSystem::LevelInitPreEntity()
 T CColorCorrectionSystem::~CColorCorrectionSystem()
 T CColorCorrectionVolume::CColorCorrectionVolume()
 T CColorCorrectionVolume::EndTouch(CBaseEntity*)
 T CColorCorrectionVolume::GetDataDescMap()
 T CColorCorrectionVolume::GetServerClass()
 T CColorCorrectionVolume::InputDisable(inputdata_t&)
 T CColorCorrectionVolume::InputEnable(inputdata_t&)
 T CColorCorrectionVolume::KeyValue(char const*, char const*)
 T CColorCorrectionVolume::ObjectCaps()
 T CColorCorrectionVolume::PassesTriggerFilters(CBaseEntity*)
 T CColorCorrectionVolume::Spawn()
 T CColorCorrectionVolume::StartTouch(CBaseEntity*)
 T CColorCorrectionVolume::ThinkFunc()
 T CColorCorrectionVolume::UpdateTransmitState()
 T CColorCorrectionVolume::YouForgotToImplementOrDeclareServerClass()
 T CColorCorrectionVolume::~CColorCorrectionVolume()
 T CColorProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CColorProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CCombatCharVisCache::FrameUpdatePreEntityThink()
 T CCombatCharVisCache::LevelShutdownPreEntity()
 T CCombatCharVisCache::~CCombatCharVisCache()
 T CCommand::CCommand()
 T CCommand::Tokenize(char const*, characterset_t*)
 T CCommentaryAuto::GetDataDescMap()
 T CCommentaryAuto::InputMultiplayerSpawned(inputdata_t&)
 T CCommentaryAuto::Spawn()
 T CCommentaryAuto::Think()
 T CCommentaryAuto::~CCommentaryAuto()
 T CCommentarySystem::ApplyCommentaryModifications()
 T CCommentarySystem::CalculateCommentaryState()
 T CCommentarySystem::ConvarChanged(IConVar*, char const*, float)
 T CCommentarySystem::GetDataDescMap()
 T CCommentarySystem::GetNodeUnderCrosshair()
 T CCommentarySystem::InitCommentary()
 T CCommentarySystem::JumpToNextNode(CBasePlayer*)
 T CCommentarySystem::LevelInitPostEntity()
 T CCommentarySystem::LevelInitPreEntity()
 T CCommentarySystem::LevelShutdownPreEntity()
 T CCommentarySystem::OnRestore()
 T CCommentarySystem::ParseEntKVBlock(CBaseEntity*, KeyValues*)
 T CCommentarySystem::PrePlayerRunCommand(CBasePlayer*, CUserCmd*)
 T CCommentarySystem::ShutDownCommentary()
 T CCommentarySystem::~CCommentarySystem()
 T CCommentaryViewPosition::Precache()
 T CCommentaryViewPosition::Spawn()
 T CCommentaryViewPosition::~CCommentaryViewPosition()
 T CCommentary_SaveRestoreBlockHandler::GetBlockName()
 T CCommentary_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CCommentary_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CCommentary_SaveRestoreBlockHandler::Save(ISave*)
 T CCommentary_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CConceptHistoriesDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CConceptHistoriesDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CConceptHistoriesDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CConceptHistoriesDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CConceptInfoMap::~CConceptInfoMap()
 T CConfigurationForHighPriorityUseEntity_t::UseByPlayerNow(CCSPlayer*, CConfigurationForHighPriorityUseEntity_t::EPlayerUseType_t)
 T CConstantForceController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CConstraintAnchor::GetDataDescMap()
 T CConstraintAnchor::Spawn()
 T CConstraintAnchor::~CConstraintAnchor()
 T CConstraintFloodList::AddLink(CBaseEntity*, CBaseEntity*, bool)
 T CConstraintFloodList::BuildGraphFromEntity(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T CConstraintFloodList::CConstraintFloodList()
 T CCopyRecipientFilter::AddRecipient(CBasePlayer*)
 T CCopyRecipientFilter::GetRecipientCount() const
 T CCopyRecipientFilter::GetRecipientIndex(int) const
 T CCopyRecipientFilter::Init(IRecipientFilter*)
 T CCopyRecipientFilter::IsInitMessage() const
 T CCopyRecipientFilter::IsReliable() const
 T CCopyRecipientFilter::~CCopyRecipientFilter()
 T CCopyableUtlVector<attachedparticlecontrolpoint_t>::CCopyableUtlVector(CCopyableUtlVector<attachedparticlecontrolpoint_t> const&)
 T CCopyableUtlVector<attachedparticlecontrolpoint_t>::~CCopyableUtlVector()
 T CCopyableUtlVector<unsigned int>::~CCopyableUtlVector()
 T CCredits::GetDataDescMap()
 T CCredits::InputRollCredits(inputdata_t&)
 T CCredits::InputRollOutroCredits(inputdata_t&)
 T CCredits::InputSetLogoLength(inputdata_t&)
 T CCredits::InputShowLogo(inputdata_t&)
 T CCredits::OnRestore()
 T CCredits::Spawn()
 T CCredits::~CCredits()
 T CCurveData::Add(float, float, bool)
 T CCurveData::Clear()
 T CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)
 T CCurveData::GetCount()
 T CCurveData::GetIntensity(ICurveDataAccessor*, float)
 T CCurveData::Parse(ISceneTokenProcessor*, ICurveDataAccessor*)
 T CCurveData::Resort(ICurveDataAccessor*)
 T CCurveData::RestoreFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CCycler::GenericCyclerSpawn(char*, Vector, Vector)
 T CCycler::GetDataDescMap()
 T CCycler::InputSetSequence(inputdata_t&)
 T CCycler::IsAlive()
 T CCycler::ObjectCaps()
 T CCycler::OnTakeDamage(CTakeDamageInfo const&)
 T CCycler::Precache()
 T CCycler::Spawn()
 T CCycler::Think()
 T CCycler::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CDEagle::GetCSWeaponID() const
 T CDEagle::GetServerClass()
 T CDEagle::SendWeaponAnim(int)
 T CDEagle::YouForgotToImplementOrDeclareServerClass()
 T CDEagle::~CDEagle()
 T CDamageRecord::CDamageRecord(CCSPlayer*, CCSPlayer*, int, int, int)
 T CDamageRecord::IsDamageRecordStillValidForDamagerAndRecipient(CCSPlayer*, CCSPlayer*)
 T CDataGCCStrike15_v2_MatchInfo::ByteSize() const
 T CDataGCCStrike15_v2_MatchInfo::Clear()
 T CDataGCCStrike15_v2_MatchInfo::GetCachedSize() const
 T CDataGCCStrike15_v2_MatchInfo::GetMetadata() const
 T CDataGCCStrike15_v2_MatchInfo::IsInitialized() const
 T CDataGCCStrike15_v2_MatchInfo::MergeFrom(CDataGCCStrike15_v2_MatchInfo const&)
 T CDataGCCStrike15_v2_MatchInfo::New() const
 T CDataGCCStrike15_v2_MatchInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_MatchInfo::SetCachedSize(int) const
 T CDataGCCStrike15_v2_MatchInfo::~CDataGCCStrike15_v2_MatchInfo()
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::ByteSize() const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::Clear()
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::GetCachedSize() const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::GetMetadata() const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::IsInitialized() const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::MergeFrom(CDataGCCStrike15_v2_MatchmakingLockedInMatch const&)
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::New() const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::SetCachedSize(int) const
 T CDataGCCStrike15_v2_MatchmakingLockedInMatch::~CDataGCCStrike15_v2_MatchmakingLockedInMatch()
 T CDataGCCStrike15_v2_TournamentGroup::ByteSize() const
 T CDataGCCStrike15_v2_TournamentGroup::Clear()
 T CDataGCCStrike15_v2_TournamentGroup::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentGroup::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentGroup::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentGroup::MergeFrom(CDataGCCStrike15_v2_TournamentGroup const&)
 T CDataGCCStrike15_v2_TournamentGroup::New() const
 T CDataGCCStrike15_v2_TournamentGroup::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentGroup::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentGroup::SharedDtor()
 T CDataGCCStrike15_v2_TournamentGroup::~CDataGCCStrike15_v2_TournamentGroup()
 T CDataGCCStrike15_v2_TournamentGroupTeam::ByteSize() const
 T CDataGCCStrike15_v2_TournamentGroupTeam::Clear()
 T CDataGCCStrike15_v2_TournamentGroupTeam::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentGroupTeam::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentGroupTeam::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentGroupTeam::MergeFrom(CDataGCCStrike15_v2_TournamentGroupTeam const&)
 T CDataGCCStrike15_v2_TournamentGroupTeam::New() const
 T CDataGCCStrike15_v2_TournamentGroupTeam::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentGroupTeam::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentGroupTeam::~CDataGCCStrike15_v2_TournamentGroupTeam()
 T CDataGCCStrike15_v2_TournamentInfo::ByteSize() const
 T CDataGCCStrike15_v2_TournamentInfo::Clear()
 T CDataGCCStrike15_v2_TournamentInfo::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentInfo::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentInfo::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentInfo::MergeFrom(CDataGCCStrike15_v2_TournamentInfo const&)
 T CDataGCCStrike15_v2_TournamentInfo::New() const
 T CDataGCCStrike15_v2_TournamentInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentInfo::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentInfo::~CDataGCCStrike15_v2_TournamentInfo()
 T CDataGCCStrike15_v2_TournamentMatchDraft::ByteSize() const
 T CDataGCCStrike15_v2_TournamentMatchDraft::Clear()
 T CDataGCCStrike15_v2_TournamentMatchDraft::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentMatchDraft::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentMatchDraft::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentMatchDraft::MergeFrom(CDataGCCStrike15_v2_TournamentMatchDraft const&)
 T CDataGCCStrike15_v2_TournamentMatchDraft::New() const
 T CDataGCCStrike15_v2_TournamentMatchDraft::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentMatchDraft::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentMatchDraft::~CDataGCCStrike15_v2_TournamentMatchDraft()
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::ByteSize() const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::Clear()
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::MergeFrom(CDataGCCStrike15_v2_TournamentMatchDraft_Entry const&)
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::New() const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentMatchDraft_Entry::~CDataGCCStrike15_v2_TournamentMatchDraft_Entry()
 T CDataGCCStrike15_v2_TournamentSection::ByteSize() const
 T CDataGCCStrike15_v2_TournamentSection::Clear()
 T CDataGCCStrike15_v2_TournamentSection::GetCachedSize() const
 T CDataGCCStrike15_v2_TournamentSection::GetMetadata() const
 T CDataGCCStrike15_v2_TournamentSection::IsInitialized() const
 T CDataGCCStrike15_v2_TournamentSection::MergeFrom(CDataGCCStrike15_v2_TournamentSection const&)
 T CDataGCCStrike15_v2_TournamentSection::New() const
 T CDataGCCStrike15_v2_TournamentSection::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDataGCCStrike15_v2_TournamentSection::SetCachedSize(int) const
 T CDataGCCStrike15_v2_TournamentSection::SharedDtor()
 T CDataGCCStrike15_v2_TournamentSection::~CDataGCCStrike15_v2_TournamentSection()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::CreateResource(bonecacheparams_t const&, bool)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::DestroyResourceStorage(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::GetRealSize(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Lock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::TryLock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Unlock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::~CDataManager()
 T CDataManagerBase::BreakLock(memhandle_t__*)
 T CDataManagerBase::CDataManagerBase(unsigned int)
 T CDataManagerBase::CreateHandle(bool)
 T CDataManagerBase::DestroyResource(memhandle_t__*)
 T CDataManagerBase::EnsureCapacity(unsigned int)
 T CDataManagerBase::FlushAll()
 T CDataManagerBase::GetResource_NoLock(memhandle_t__*)
 T CDataManagerBase::Lock()
 T CDataManagerBase::LockResource(memhandle_t__*)
 T CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
 T CDataManagerBase::TouchByIndex(unsigned short)
 T CDataManagerBase::TryLock()
 T CDataManagerBase::Unlock()
 T CDataManagerBase::~CDataManagerBase()
 T CDataObjectAccessSystem::Init()
 T CDataObjectAccessSystem::Shutdown()
 T CDataObjectAccessSystem::~CDataObjectAccessSystem()
 T CDatadescGeneratedNameHolder::GenerateName(char const*)
 T CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 T CDebugHistory::GetDataDescMap()
 T CDebugHistory::Restore(IRestore&)
 T CDebugHistory::Save(ISave&)
 T CDebugHistory::Spawn()
 T CDebugHistory::~CDebugHistory()
 T CDecal::Activate()
 T CDecal::GetDataDescMap()
 T CDecal::GetDecalEntityAndPosition(Vector*, bool)
 T CDecal::InputActivate(inputdata_t&)
 T CDecal::KeyValue(char const*, char const*)
 T CDecal::Spawn()
 T CDecal::StaticDecal()
 T CDecal::TriggerDecal(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CDecal::~CDecal()
 T CDecalEmitterSystem::CDecalEmitterSystem(char const*)
 T CDecalEmitterSystem::GetDecalIndexForName(char const*)
 T CDecalEmitterSystem::Init()
 T CDecalEmitterSystem::LevelInitPreEntity()
 T CDecalEmitterSystem::LoadDecalsFromScript(char const*)
 T CDecalEmitterSystem::Shutdown()
 T CDecalEmitterSystem::TranslateDecalForGameMaterial(char const*, unsigned char)
 T CDecalEmitterSystem::~CDecalEmitterSystem()
 T CDecoyGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CDecoyGrenade::GetCSWeaponID() const
 T CDecoyGrenade::GetDataDescMap()
 T CDecoyGrenade::GetServerClass()
 T CDecoyGrenade::YouForgotToImplementOrDeclareServerClass()
 T CDecoyGrenade::~CDecoyGrenade()
 T CDecoyProjectile::BounceSound()
 T CDecoyProjectile::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CBaseCombatCharacter*, CCSWeaponInfo const&)
 T CDecoyProjectile::Detonate()
 T CDecoyProjectile::GetDataDescMap()
 T CDecoyProjectile::GetGrenadeType()
 T CDecoyProjectile::GetServerClass()
 T CDecoyProjectile::GunfireThink()
 T CDecoyProjectile::Precache()
 T CDecoyProjectile::Spawn()
 T CDecoyProjectile::Think_Detonate()
 T CDecoyProjectile::YouForgotToImplementOrDeclareServerClass()
 T CDecoyProjectile::~CDecoyProjectile()
 T CDedicatedServerWorkshopManager::CheckForNewVersion(unsigned long long)
 T CDedicatedServerWorkshopManager::CheckIfCurrentLevelNeedsUpdate()
 T CDedicatedServerWorkshopManager::Cleanup()
 T CDedicatedServerWorkshopManager::CurrentLevelNeedsUpdate() const
 T CDedicatedServerWorkshopManager::GetNewestSubscribedFiles()
 T CDedicatedServerWorkshopManager::GetUGCMapPublishedFileID(char const*) const
 T CDedicatedServerWorkshopManager::GetWorkshopMasWithValidUgcInformation(CUtlVector<DedicatedServerUGCFileInfo_t const*, CUtlMemory<DedicatedServerUGCFileInfo_t const*, int> >&) const
 T CDedicatedServerWorkshopManager::HasPendingMapDownloads() const
 T CDedicatedServerWorkshopManager::HostWorkshopMapCollection(unsigned long long)
 T CDedicatedServerWorkshopManager::Init()
 T CDedicatedServerWorkshopManager::LevelInitPreEntity()
 T CDedicatedServerWorkshopManager::Name()
 T CDedicatedServerWorkshopManager::NoteWorkshopMapOnDisk(unsigned long long, char const*)
 T CDedicatedServerWorkshopManager::OnCollectionInfoReceived(unsigned long long, CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> > const&)
 T CDedicatedServerWorkshopManager::OnFileInfoReceived(DedicatedServerUGCFileInfo_t const*)
 T CDedicatedServerWorkshopManager::OnFileInfoRequestFailed(unsigned long long)
 T CDedicatedServerWorkshopManager::ParseCollectionInfo(KeyValues*)
 T CDedicatedServerWorkshopManager::QueueDownloadFile(DedicatedServerUGCFileInfo_t const*)
 T CDedicatedServerWorkshopManager::RemoveFileInfo(unsigned long long)
 T CDedicatedServerWorkshopManager::ShouldUpdateCollection(unsigned long long, CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> > const&)
 T CDedicatedServerWorkshopManager::Shutdown()
 T CDedicatedServerWorkshopManager::Update()
 T CDedicatedServerWorkshopManager::UpdateFile(unsigned long long)
 T CDedicatedServerWorkshopManager::UpdatePublishedFileInfoRequests()
 T CDedicatedServerWorkshopManager::UpdateUGCDownloadRequests()
 T CDedicatedServerWorkshopManager::~CDedicatedServerWorkshopManager()
 T CDefOps<CAI_BaseNPC*>::LessFunc(CAI_BaseNPC* const&, CAI_BaseNPC* const&)
 T CDefOps<CBaseEntity*>::LessFunc(CBaseEntity* const&, CBaseEntity* const&)
 T CDefOps<CChoreoActor*>::LessFunc(CChoreoActor* const&, CChoreoActor* const&)
 T CDefOps<CHandle<CBaseEntity> >::LessFunc(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)
 T CDefOps<CPhysCollide const*>::LessFunc(CPhysCollide const* const&, CPhysCollide const* const&)
 T CDefOps<CUtlSymbol const>::LessFunc(CUtlSymbol const&, CUtlSymbol const&)
 T CDefOps<GCSDK::SOID_t>::LessFunc(GCSDK::SOID_t const&, GCSDK::SOID_t const&)
 T CDefOps<IPhysicsObject*>::LessFunc(IPhysicsObject* const&, IPhysicsObject* const&)
 T CDefOps<char const*>::LessFunc(char const* const&, char const* const&)
 T CDefOps<int>::LessFunc(int const&, int const&)
 T CDefOps<studiohdr_t const*>::LessFunc(studiohdr_t const* const&, studiohdr_t const* const&)
 T CDefOps<unsigned int>::LessFunc(unsigned int const&, unsigned int const&)
 T CDefOps<unsigned long long>::LessFunc(unsigned long long const&, unsigned long long const&)
 T CDefOps<unsigned short>::LessFunc(unsigned short const&, unsigned short const&)
 T CDefOps<void*>::LessFunc(void* const&, void* const&)
 T CDefSaveRestoreBlockHandler::PostRestore()
 T CDefSaveRestoreBlockHandler::PostSave()
 T CDefSaveRestoreBlockHandler::PreRestore()
 T CDefSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 T CDefaultParticleSystemQuery::DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T CDefaultParticleSystemQuery::DrawModel(void*, matrix3x4_t const&, CParticleCollection*, int, int, int, int, int, float, float, float, float, float)
 T CDefaultParticleSystemQuery::GetActivityCount()
 T CDefaultParticleSystemQuery::GetActivityNameFromIndex(int)
 T CDefaultParticleSystemQuery::GetActivityNumber(void*, char const*)
 T CDefaultParticleSystemQuery::GetClosestControllingObjectHitBox(CParticleCollection*, int, int, float, Vector*, Vector*, int*, int, char const*)
 T CDefaultParticleSystemQuery::GetCurrentViewOrigin()
 T CDefaultParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CDefaultParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CDefaultParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*, int, char const*)
 T CDefaultParticleSystemQuery::IsEditor()
 T CDefaultParticleSystemQuery::IsPointInSolid(Vector const&, int)
 T CDefaultParticleSystemQuery::PostSimulate()
 T CDefaultParticleSystemQuery::PreSimulate()
 T CDefaultParticleSystemQuery::TraceAgainstRayTraceEnv(int, FourRays const&, float __vector(4), float __vector(4), RayTracingResult*, int) const
 T CDefaultParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CDefaultParticleSystemQuery::UpdateProjectedTexture(int, IMaterial*, Vector&, float, float, float, float, float, float, void*&)
 T CDefaultPlayerPickupVPhysics::ForcePhysgunOpen(CBasePlayer*)
 T CDefaultPlayerPickupVPhysics::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CDefaultPlayerPickupVPhysics::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CDefaultPlayerPickupVPhysics::OnFailedPhysGunPickup(Vector)
 T CDefaultPlayerPickupVPhysics::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CDefaultPlayerPickupVPhysics::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CDefaultPlayerPickupVPhysics::PhysGunLaunchAngularImpulse()
 T CDefaultPlayerPickupVPhysics::PhysGunLaunchVelocity(Vector const&, float)
 T CDefaultPlayerPickupVPhysics::PreferredCarryAngles()
 T CDefaultPlayerPickupVPhysics::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T CDefaultResponseSystem::GetScriptFile()
 T CDefaultResponseSystem::Init()
 T CDefaultResponseSystem::LevelInitPostEntity()
 T CDefaultResponseSystem::LevelInitPreEntity()
 T CDefaultResponseSystem::Release()
 T CDefaultResponseSystem::ReloadAllResponseSystems()
 T CDefaultResponseSystem::Shutdown()
 T CDefaultResponseSystem::~CDefaultResponseSystem()
 T CDefaultResponseSystemSaveRestoreBlockHandler::GetBlockName()
 T CDefaultResponseSystemSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CDefaultResponseSystemSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CDefaultResponseSystemSaveRestoreBlockHandler::Save(ISave*)
 T CDefaultResponseSystemSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CDetailBlocker::~CDetailBlocker()
 T CDevShotSystem::FrameUpdatePostEntityThink()
 T CDevShotSystem::LevelInitPreEntity()
 T CDevShotSystem::SafeRemoveIfDesired()
 T CDevShotSystem::~CDevShotSystem()
 T CDirtySpatialPartitionEntityList::CDirtySpatialPartitionEntityList(char const*)
 T CDirtySpatialPartitionEntityList::Init()
 T CDirtySpatialPartitionEntityList::LevelShutdownPostEntity()
 T CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T CDirtySpatialPartitionEntityList::Shutdown()
 T CDirtySpatialPartitionEntityList::~CDirtySpatialPartitionEntityList()
 T CDllDemandLoader::CDllDemandLoader(char const*)
 T CDllDemandLoader::GetFactory()
 T CDllDemandLoader::~CDllDemandLoader()
 T CDmxAttribute::AllocateDataMemory(DmAttributeType_t)
 T CDmxAttribute::AllocateDataMemory_AndConstruct(DmAttributeType_t)
 T CDmxAttribute::ArrayAttributeBasicType(DmAttributeType_t)
 T CDmxAttribute::CDmxAttribute(char const*)
 T CDmxAttribute::FreeDataMemory()
 T CDmxAttribute::GetArrayValue(DmAttributeType_t, void*, int, int, char const*) const
 T CDmxAttribute::GetName() const
 T CDmxAttribute::SetToDefaultValue()
 T CDmxAttribute::SetValue(char const*)
 T CDmxAttribute::SetValueFromString(char const*)
 T CDmxAttribute::Unserialize(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::UnserializeElement(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::~CDmxAttribute()
 T CDmxElement::AddAttribute(char const*)
 T CDmxElement::AddElementsToDelete(CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxElement::CDmxElement(char const*)
 T CDmxElement::GetAttribute(char const*)
 T CDmxElement::GetAttribute(char const*) const
 T CDmxElement::GetId() const
 T CDmxElement::GetName() const
 T CDmxElement::GetTypeString() const
 T CDmxElement::HasAttribute(char const*) const
 T CDmxElement::LockForChanges(bool)
 T CDmxElement::RemoveAllElementsRecursive()
 T CDmxElement::Resort() const
 T CDmxElement::SetId(UniqueId_t const&)
 T CDmxElement::UnpackIntoStructure(void*, DmxElementUnpackStructure_t const*) const
 T CDmxElement::~CDmxElement()
 T CDmxElementDictionary::AddArrayAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::AddAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::Clear()
 T CDmxElementDictionary::HookUpElementArrayAttributes()
 T CDmxElementDictionary::HookUpElementReferences()
 T CDmxElementDictionary::InsertElement(CDmxElement*)
 T CDmxKeyValues2ErrorStack::ReportError(char const*, ...)
 T CDmxSerializer::Dme_GetStringFromBuffer(CUtlBuffer&, bool, int, int*, char*)
 T CDmxSerializer::Unserialize(CUtlBuffer&, int, CDmxElement**)
 T CDmxSerializer::UnserializeAttributes(CUtlBuffer&, CDmxElement*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&, int, int*, char*, int)
 T CDmxSerializer::UnserializeElementArrayAttribute(CUtlBuffer&, CDmxAttribute*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializer::UnserializeElementIndex(CUtlBuffer&, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializerKeyValues2::EatWhitespacesAndComments(CUtlBuffer&)
 T CDmxSerializerKeyValues2::ReadToken(CUtlBuffer&, CUtlBuffer&)
 T CDmxSerializerKeyValues2::Unserialize(char const*, CUtlBuffer&, CDmxElement**)
 T CDmxSerializerKeyValues2::UnserializeArrayAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttributeValueFromToken(CDmxAttribute*, DmAttributeType_t, CUtlBuffer&)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, char const*, int*)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, int*)
 T CDmxSerializerKeyValues2::UnserializeElementArrayAttribute(CUtlBuffer&, int, char const*)
 T CDmxSerializerKeyValues2::UnserializeElementAttribute(CUtlBuffer&, int, char const*, char const*)
 T CDmxSerializerKeyValues2::UnserializeId(CUtlBuffer&, int)
 T CDragDropHelperPanel::AddPanel(vgui::Panel*)
 T CDragDropHelperPanel::CDragDropHelperPanel()
 T CDragDropHelperPanel::GetAnimMap()
 T CDragDropHelperPanel::GetKBMap()
 T CDragDropHelperPanel::GetMessageMap()
 T CDragDropHelperPanel::GetPanelClassName()
 T CDragDropHelperPanel::IsWithinTraverse(int, int, bool)
 T CDragDropHelperPanel::PostChildPaint()
 T CDragDropHelperPanel::RemovePanel(vgui::Panel*)
 T CDragDropHelperPanel::~CDragDropHelperPanel()
 T CDynamicLight::DynamicLightThink()
 T CDynamicLight::GetDataDescMap()
 T CDynamicLight::GetServerClass()
 T CDynamicLight::InputToggle(inputdata_t&)
 T CDynamicLight::InputTurnOff(inputdata_t&)
 T CDynamicLight::InputTurnOn(inputdata_t&)
 T CDynamicLight::KeyValue(char const*, char const*)
 T CDynamicLight::Spawn()
 T CDynamicLight::YouForgotToImplementOrDeclareServerClass()
 T CDynamicLight::~CDynamicLight()
 T CDynamicProp::AnimThink()
 T CDynamicProp::CDynamicProp()
 T CDynamicProp::CreateBoneFollowers()
 T CDynamicProp::CreateVPhysics()
 T CDynamicProp::FinishSetSequence(int)
 T CDynamicProp::GetDataDescMap()
 T CDynamicProp::GetRootPhysicsObjectForBreak()
 T CDynamicProp::GetServerClass()
 T CDynamicProp::HandleAnimEvent(animevent_t*)
 T CDynamicProp::InputBecomeRagdoll(inputdata_t&)
 T CDynamicProp::InputDisableCollision(inputdata_t&)
 T CDynamicProp::InputEnableCollision(inputdata_t&)
 T CDynamicProp::InputFadeAndKill(inputdata_t&)
 T CDynamicProp::InputGlowColorBlueValue(inputdata_t&)
 T CDynamicProp::InputGlowColorGreenValue(inputdata_t&)
 T CDynamicProp::InputGlowColorRedValue(inputdata_t&)
 T CDynamicProp::InputSetAnimation(inputdata_t&)
 T CDynamicProp::InputSetAnimationNoReset(inputdata_t&)
 T CDynamicProp::InputSetDefaultAnimation(inputdata_t&)
 T CDynamicProp::InputSetGlowColor(inputdata_t&)
 T CDynamicProp::InputSetGlowDisabled(inputdata_t&)
 T CDynamicProp::InputSetGlowEnabled(inputdata_t&)
 T CDynamicProp::InputSetPlaybackRate(inputdata_t&)
 T CDynamicProp::InputTurnOff(inputdata_t&)
 T CDynamicProp::InputTurnOn(inputdata_t&)
 T CDynamicProp::NotifyPositionChanged(CBaseEntity*)
 T CDynamicProp::OnRestore()
 T CDynamicProp::OverridePropdata()
 T CDynamicProp::PropSetAnim(char const*)
 T CDynamicProp::PropSetSequence(int)
 T CDynamicProp::SetGlowColor(int, int, int)
 T CDynamicProp::SetParent(CBaseEntity*, int)
 T CDynamicProp::ShouldTransmit(CCheckTransmitInfo const*)
 T CDynamicProp::Spawn()
 T CDynamicProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CDynamicProp::UpdateOnRemove()
 T CDynamicProp::YouForgotToImplementOrDeclareServerClass()
 T CDynamicProp::~CDynamicProp()
 T CEconCampaignDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCampaignDefinition::CEconCampaignNodeDefinition::BInitFromKV(int, KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconColorDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCraftingRecipeDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCraftingRecipeDefinition::BInitFromSet(IEconItemSetDefinition const*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCraftingRecipeDefinition::CEconCraftingRecipeDefinition()
 T CEconCraftingRecipeDefinition::CopyPolymorphic(CEconCraftingRecipeDefinition const*)
 T CEconCraftingRecipeDefinition::ItemListMatchesInputs(CUtlVector<CEconItem*, CUtlMemory<CEconItem*, int> > const&, bool) const
 T CEconCraftingRecipeDefinition::operator=(CEconCraftingRecipeDefinition const&)
 T CEconCraftingRecipeDefinition::~CEconCraftingRecipeDefinition()
 T CEconDefaultEquippedDefinitionInstanceClient::GetTypeID() const
 T CEconDefaultEquippedDefinitionInstanceClient::~CEconDefaultEquippedDefinitionInstanceClient()
 T CEconEntity::CEconEntity()
 T CEconEntity::CalculateVisibleClassFor(CBaseCombatCharacter*)
 T CEconEntity::GenerateKillEaterTypeVector()
 T CEconEntity::GetAttributeContainer()
 T CEconEntity::GetAttributeList()
 T CEconEntity::GetAttributeManager()
 T CEconEntity::GetAttributeOwner()
 T CEconEntity::GetDataDescMap()
 T CEconEntity::GetFallbackPaintKit() const
 T CEconEntity::GetFallbackSeed() const
 T CEconEntity::GetFallbackStatTrak() const
 T CEconEntity::GetFallbackWear() const
 T CEconEntity::GetKillEaterTypes(CUtlSortVector<unsigned int, CUtlSortVectorDefaultLess<unsigned int>, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> > >&)
 T CEconEntity::GetKillEaterValueByType(unsigned int)
 T CEconEntity::GetOriginalOwnerXuid() const
 T CEconEntity::GetServerClass()
 T CEconEntity::GiveTo(CBaseEntity*)
 T CEconEntity::InitializeAttributes()
 T CEconEntity::NetworkVar_m_AttributeManager::NetworkStateChanged()
 T CEconEntity::NetworkVar_m_AttributeManager::NetworkStateChanged(void*)
 T CEconEntity::NetworkVar_m_AttributeManager::~NetworkVar_m_AttributeManager()
 T CEconEntity::OnNewModel()
 T CEconEntity::ReapplyProvision()
 T CEconEntity::SetOriginalOwnerXuid(unsigned int, unsigned int)
 T CEconEntity::ShouldTransmit(CCheckTransmitInfo const*)
 T CEconEntity::TranslateViewmodelHandActivity(Activity)
 T CEconEntity::TranslateViewmodelHandActivityInternal(Activity)
 T CEconEntity::UpdateBodygroups(CBaseCombatCharacter*, int)
 T CEconEntity::UpdateOnRemove()
 T CEconEntity::YouForgotToImplementOrDeclareServerClass()
 T CEconEntity::~CEconEntity()
 T CEconItem::AddDynamicAttributeInternal()
 T CEconItem::BAddDestroyToMessage(std::string*) const
 T CEconItem::BAddToMessage(std::string*) const
 T CEconItem::BIsKeyLess(GCSDK::CSharedObject const&) const
 T CEconItem::BParseFromMessage(CUtlBuffer const&)
 T CEconItem::BParseFromMessage(std::string const&)
 T CEconItem::BUpdateFromNetwork(GCSDK::CSharedObject const&)
 T CEconItem::CEconItem()
 T CEconItem::Copy(GCSDK::CSharedObject const&)
 T CEconItem::CustomDataOptimizedObject_t::AddAttribute(CEconItem::CustomDataOptimizedObject_t*&)
 T CEconItem::DeserializeFromProtoBufItem(CSOEconItem const&)
 T CEconItem::Dump() const
 T CEconItem::FindDynamicAttributeInternal(CEconItemAttributeDefinition const*)
 T CEconItem::GetAccountID() const
 T CEconItem::GetCustomDesc() const
 T CEconItem::GetCustomName() const
 T CEconItem::GetEquippedPositionForClass(unsigned short) const
 T CEconItem::GetFlags() const
 T CEconItem::GetInUse() const
 T CEconItem::GetItemDefinition() const
 T CEconItem::GetItemID() const
 T CEconItem::GetItemLevel() const
 T CEconItem::GetItemSetIndex() const
 T CEconItem::GetOrigin() const
 T CEconItem::GetQuality() const
 T CEconItem::GetQuantity() const
 T CEconItem::GetRarity() const
 T CEconItem::GetSOUpdateFrame() const
 T CEconItem::GetTypeID() const
 T CEconItem::IsEquippedForClass(unsigned short) const
 T CEconItem::IsMarketable() const
 T CEconItem::IsTradable() const
 T CEconItem::IsUsableInCrafting() const
 T CEconItem::IterateAttributes(IEconItemAttributeIterator*) const
 T CEconItem::RemoveDynamicAttribute(CEconItemAttributeDefinition const*)
 T CEconItem::SerializeToProtoBufItem(CSOEconItem&) const
 T CEconItem::SetCustomDesc(char const*)
 T CEconItem::SetCustomName(char const*)
 T CEconItem::SetItemID(unsigned long long)
 T CEconItem::SetSOUpdateFrame(int) const
 T CEconItem::UpdateEquippedState(CEconItem::EquippedInstance_t)
 T CEconItem::operator=(CEconItem const&)
 T CEconItem::~CEconItem()
 T CEconItemAttribute::NetworkStateChanged()
 T CEconItemAttribute::NetworkStateChanged(void*)
 T CEconItemAttributeDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemAttributeDefinition::GetAttributeClass() const
 T CEconItemAttributeDefinition::GetDefinitionIndex() const
 T CEconItemAttributeDefinition::GetDefinitionName() const
 T CEconItemAttributeDefinition::GetDescriptionString() const
 T CEconItemAttributeDefinition::GetRawDefinition() const
 T CEconItemAttributeDefinition::operator=(CEconItemAttributeDefinition const&)
 T CEconItemAttributeDefinition::~CEconItemAttributeDefinition()
 T CEconItemAttributeIterator_ApplyAttributeFloat::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T CEconItemAttributeIterator_ApplyAttributeFloat::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T CEconItemAttributeIterator_ApplyAttributeFloat::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T CEconItemAttributeIterator_ApplyAttributeFloat::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T CEconItemAttributeIterator_ApplyAttributeFloat::~CEconItemAttributeIterator_ApplyAttributeFloat()
 T CEconItemDefinition::AddItemSet(int)
 T CEconItemDefinition::BInitAlternateIconsFromKV(KeyValues*, CEconItemSchema&, AssetInfo*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)
 T CEconItemDefinition::BInitItemMappings(CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitStylesBlockFromKV(KeyValues*, CEconItemSchema&, AssetInfo*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitVisualBlockFromKV(KeyValues*, IEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::CEconItemDefinition()
 T CEconItemDefinition::CopyPolymorphic(CEconItemDefinition const*)
 T CEconItemDefinition::GeneratePrecacheEffectStrings(CUtlVector<char const*, CUtlMemory<char const*, int> >*) const
 T CEconItemDefinition::GeneratePrecacheModelStrings(bool, CUtlVector<char const*, CUtlMemory<char const*, int> >*) const
 T CEconItemDefinition::GeneratePrecacheSoundStrings(CUtlVector<char const*, CUtlMemory<char const*, int> >*) const
 T CEconItemDefinition::GetBasePlayerDisplayModel() const
 T CEconItemDefinition::GetBundleItem(int) const
 T CEconItemDefinition::GetBundleItemCount() const
 T CEconItemDefinition::GetBundleItemPaintKitID(int) const
 T CEconItemDefinition::GetBuyMenuDisplayModel() const
 T CEconItemDefinition::GetDefinitionIndex() const
 T CEconItemDefinition::GetExtraWearableModel() const
 T CEconItemDefinition::GetHeroID() const
 T CEconItemDefinition::GetIconDefaultImage() const
 T CEconItemDefinition::GetIconDisplayModel() const
 T CEconItemDefinition::GetInventoryImage() const
 T CEconItemDefinition::GetItemBaseName() const
 T CEconItemDefinition::GetItemDesc() const
 T CEconItemDefinition::GetItemSets() const
 T CEconItemDefinition::GetItemTypeID() const
 T CEconItemDefinition::GetItemTypeName() const
 T CEconItemDefinition::GetLoadoutSlot() const
 T CEconItemDefinition::GetMagazineModel() const
 T CEconItemDefinition::GetNumSupportedStickerSlots() const
 T CEconItemDefinition::GetParticleFile() const
 T CEconItemDefinition::GetParticleSnapshotFile() const
 T CEconItemDefinition::GetPedestalDisplayModel() const
 T CEconItemDefinition::GetPrefabName() const
 T CEconItemDefinition::GetRarity() const
 T CEconItemDefinition::GetRawDefinition() const
 T CEconItemDefinition::GetScopeLensMaskModel() const
 T CEconItemDefinition::GetStatTrakModelByType(unsigned int) const
 T CEconItemDefinition::GetStickerSlotMaterialBySlotIndex(unsigned int) const
 T CEconItemDefinition::GetStickerSlotModelBySlotIndex(unsigned int) const
 T CEconItemDefinition::GetStickerSlotWorldProjectionEndBySlotIndex(unsigned int) const
 T CEconItemDefinition::GetStickerSlotWorldProjectionStartBySlotIndex(unsigned int) const
 T CEconItemDefinition::GetStickerWorldModelBoneParentNameBySlotIndex(unsigned int) const
 T CEconItemDefinition::GetUidModel() const
 T CEconItemDefinition::GetWorldDisplayModel() const
 T CEconItemDefinition::IgnoreInCollectionView() const
 T CEconItemDefinition::IsBaseItem() const
 T CEconItemDefinition::IsBundle() const
 T CEconItemDefinition::IsContentStreamable() const
 T CEconItemDefinition::IsDefaultSlotItem() const
 T CEconItemDefinition::IsPackBundle() const
 T CEconItemDefinition::IsPackItem() const
 T CEconItemDefinition::IsPreviewableInStore() const
 T CEconItemDefinition::IsPublicItem() const
 T CEconItemDefinition::IsRecent() const
 T CEconItemDefinition::IterateAttributes(IEconItemAttributeIterator*) const
 T CEconItemDefinition::PurgeStaticAttributes()
 T CEconItemDefinition::RollItemLevel() const
 T CEconItemDefinition::operator=(CEconItemDefinition const&)
 T CEconItemDefinition::~CEconItemDefinition()
 T CEconItemDropRateBonus::~CEconItemDropRateBonus()
 T CEconItemEventTicket::~CEconItemEventTicket()
 T CEconItemPreviewDataBlock::ByteSize() const
 T CEconItemPreviewDataBlock::CEconItemPreviewDataBlock()
 T CEconItemPreviewDataBlock::CEconItemPreviewDataBlock(CEconItemPreviewDataBlock const&)
 T CEconItemPreviewDataBlock::Clear()
 T CEconItemPreviewDataBlock::CopyFrom(CEconItemPreviewDataBlock const&)
 T CEconItemPreviewDataBlock::GetCachedSize() const
 T CEconItemPreviewDataBlock::GetMetadata() const
 T CEconItemPreviewDataBlock::IsInitialized() const
 T CEconItemPreviewDataBlock::MergeFrom(CEconItemPreviewDataBlock const&)
 T CEconItemPreviewDataBlock::New() const
 T CEconItemPreviewDataBlock::SerializeWithCachedSizesToArray(unsigned char*) const
 T CEconItemPreviewDataBlock::SetCachedSize(int) const
 T CEconItemPreviewDataBlock::default_instance()
 T CEconItemPreviewDataBlock::~CEconItemPreviewDataBlock()
 T CEconItemPreviewDataBlock_Sticker::ByteSize() const
 T CEconItemPreviewDataBlock_Sticker::Clear()
 T CEconItemPreviewDataBlock_Sticker::GetCachedSize() const
 T CEconItemPreviewDataBlock_Sticker::GetMetadata() const
 T CEconItemPreviewDataBlock_Sticker::IsInitialized() const
 T CEconItemPreviewDataBlock_Sticker::MergeFrom(CEconItemPreviewDataBlock_Sticker const&)
 T CEconItemPreviewDataBlock_Sticker::New() const
 T CEconItemPreviewDataBlock_Sticker::SerializeWithCachedSizesToArray(unsigned char*) const
 T CEconItemPreviewDataBlock_Sticker::SetCachedSize(int) const
 T CEconItemPreviewDataBlock_Sticker::~CEconItemPreviewDataBlock_Sticker()
 T CEconItemQualityDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemQualityDefinition::CEconItemQualityDefinition(CEconItemQualityDefinition const&)
 T CEconItemRarityDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemRarityDefinition::CEconItemRarityDefinition()
 T CEconItemRarityDefinition::CEconItemRarityDefinition(CEconItemRarityDefinition const&)
 T CEconItemRarityDefinition::~CEconItemRarityDefinition()
 T CEconItemSchema::AssignDefaultBodygroupState(char const*, int)
 T CEconItemSchema::BGetItemQualityFromName(char const*, unsigned char*) const
 T CEconItemSchema::BGetItemRarityFromName(char const*, unsigned char*) const
 T CEconItemSchema::BInit(char const*, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAchievementRewards(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAlternateIcons(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitArmoryData(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAttributeControlledParticleSystems(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAttributeTypes(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAttributes(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitBundles(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitCampaignDefs(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitColors(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitDefinitionPrefabs(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitEquipRegionConflicts(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitEquipRegions(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitGameInfo(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitItemLevels(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitItemSets(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitItems(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitKillEaterScoreTypes(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitLootLists(KeyValues*, KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*, bool)
 T CEconItemSchema::BInitMusicDefs(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitPaintKits(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitPaintKitsRarity(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitPaymentRules(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitQualities(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitQuestDefs(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitQuestRewardLootLists(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitRarities(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitRecipes(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitRevolvingLootLists(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitSchema(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitSoundMaterials(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitStickerKits(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::CEconItemSchema()
 T CEconItemSchema::CalculateNumberOfConcreteItems(CEconItemDefinition const*)
 T CEconItemSchema::CreateCraftingRecipeDefinition()
 T CEconItemSchema::CreateEconItemDefinition()
 T CEconItemSchema::CreateEconStyleInfo()
 T CEconItemSchema::CreateEconToolImpl(char const*, char const*, char const*, item_capabilities_t, KeyValues*)
 T CEconItemSchema::DeleteItemDefinition(int)
 T CEconItemSchema::FindAttributeControlledParticleSystem(char const*, int*)
 T CEconItemSchema::FindDefinitionPrefabByName(char const*) const
 T CEconItemSchema::GetAttachedParticleSystemInfo(KeyValues*, int) const
 T CEconItemSchema::GetAttributeControlledParticleSystem(int)
 T CEconItemSchema::GetAttributeControlledParticleSystemByIndex(int)
 T CEconItemSchema::GetAttributeDefinition(int) const
 T CEconItemSchema::GetAttributeDefinitionByName(char const*) const
 T CEconItemSchema::GetAttributeDefinitionInterface(int) const
 T CEconItemSchema::GetCharacterCount()
 T CEconItemSchema::GetCharacterID(char const*)
 T CEconItemSchema::GetCharacterModel(int)
 T CEconItemSchema::GetCharacterName(int)
 T CEconItemSchema::GetCharacterSlotType(int, int)
 T CEconItemSchema::GetColorDefinitionByName(char const*) const
 T CEconItemSchema::GetDefaultItemDefinitionInterface()
 T CEconItemSchema::GetHeroID(char const*)
 T CEconItemSchema::GetItemDefinition(int, bool) const
 T CEconItemSchema::GetItemDefinitionByMapIndex(int) const
 T CEconItemSchema::GetItemDefinitionByName(char const*)
 T CEconItemSchema::GetItemDefinitionByName(char const*) const
 T CEconItemSchema::GetItemDefinitionCount()
 T CEconItemSchema::GetItemDefinitionInterface(int)
 T CEconItemSchema::GetItemDefinitionMutable(int, bool)
 T CEconItemSchema::GetItemSet(int) const
 T CEconItemSchema::GetItemSetCount() const
 T CEconItemSchema::GetLoadoutSlot(char const*)
 T CEconItemSchema::GetLoadoutSlotCount()
 T CEconItemSchema::GetLoadoutSlotName(int)
 T CEconItemSchema::GetLootListByName(char const*, int*) const
 T CEconItemSchema::GetLootListIndex(char const*)
 T CEconItemSchema::GetLootListInterfaceByIndex(int) const
 T CEconItemSchema::GetLootListInterfaceByName(char const*, int*)
 T CEconItemSchema::GetLootListInterfaceCount() const
 T CEconItemSchema::GetNumAttributeControlledParticleSystems() const
 T CEconItemSchema::GetNumPrefabs()
 T CEconItemSchema::GetPaintKitDefinition(int) const
 T CEconItemSchema::GetPrefabName(int)
 T CEconItemSchema::GetQualityDefinition(int) const
 T CEconItemSchema::GetQualityDefinitionByName(char const*) const
 T CEconItemSchema::GetQualityDefinitionCount()
 T CEconItemSchema::GetQualityIndex(char const*)
 T CEconItemSchema::GetQualityName(unsigned char)
 T CEconItemSchema::GetRarityColor(unsigned char)
 T CEconItemSchema::GetRarityDefinition(int) const
 T CEconItemSchema::GetRarityDefinitionByName(char const*) const
 T CEconItemSchema::GetRarityDefinitionCount() const
 T CEconItemSchema::GetRarityIndex(char const*)
 T CEconItemSchema::GetRarityLocKey(unsigned char)
 T CEconItemSchema::GetRarityLootList(unsigned char)
 T CEconItemSchema::GetRarityName(unsigned char)
 T CEconItemSchema::GetRawDefinition() const
 T CEconItemSchema::GetSoundMaterialCount()
 T CEconItemSchema::GetSoundMaterialDefinitionByID(int) const
 T CEconItemSchema::GetSoundMaterialID(char const*)
 T CEconItemSchema::GetSoundMaterialIDByIndex(int)
 T CEconItemSchema::GetSoundMaterialNameByID(int)
 T CEconItemSchema::GetToolType(char const*) const
 T CEconItemSchema::ItemTesting_CreateTestDefinition(int, int, KeyValues*)
 T CEconItemSchema::ItemTesting_DiscardTestDefinition(int)
 T CEconItemSchema::PurgeLootLists()
 T CEconItemSchema::Reset()
 T CEconItemSchema::~CEconItemSchema()
 T CEconItemSetDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSetDefinition::GetBundle() const
 T CEconItemSetDefinition::GetCraftReward() const
 T CEconItemSetDefinition::GetHighestItemRarityValue() const
 T CEconItemSetDefinition::GetItemCount() const
 T CEconItemSetDefinition::GetItemDef(int) const
 T CEconItemSetDefinition::GetItemPaintKit(int) const
 T CEconItemSetDefinition::GetItemRarity(int) const
 T CEconItemSetDefinition::GetLocKey() const
 T CEconItemSetDefinition::GetName() const
 T CEconItemSetDefinition::GetSetName() const
 T CEconItemSetDefinition::GetUnlocalizedName() const
 T CEconItemSetDefinition::operator=(CEconItemSetDefinition const&)
 T CEconItemSystem::GenerateBaseItem(baseitemcriteria_t*)
 T CEconItemSystem::GenerateRandomItem(CItemSelectionCriteria*, int*)
 T CEconItemSystem::GetItemSchemaInterface()
 T CEconItemSystem::Init()
 T CEconItemSystem::ParseItemSchemaFile(char const*)
 T CEconItemSystem::ReleaseItemDefReservation(unsigned int, char const*)
 T CEconItemSystem::ReloadWhitelist()
 T CEconItemSystem::RequestReservedItemDefinitionList()
 T CEconItemSystem::ReserveItemDefinition(unsigned int, char const*)
 T CEconItemSystem::ResetAttribStringCache()
 T CEconItemSystem::~CEconItemSystem()
 T CEconItemView::CEconItemView()
 T CEconItemView::DestroyAllAttributes()
 T CEconItemView::GetAccountID() const
 T CEconItemView::GetCustomDesc() const
 T CEconItemView::GetCustomName() const
 T CEconItemView::GetCustomPaintKit() const
 T CEconItemView::GetCustomPaintKitIndex() const
 T CEconItemView::GetDataDescMap()
 T CEconItemView::GetFlags() const
 T CEconItemView::GetInUse() const
 T CEconItemView::GetItemDefinition() const
 T CEconItemView::GetItemID() const
 T CEconItemView::GetItemLevel() const
 T CEconItemView::GetItemSetIndex() const
 T CEconItemView::GetOrigin() const
 T CEconItemView::GetPlayerDisplayModel(int) const
 T CEconItemView::GetQuality() const
 T CEconItemView::GetQuantity() const
 T CEconItemView::GetRarity() const
 T CEconItemView::GetSOCData() const
 T CEconItemView::GetStaticData() const
 T CEconItemView::GetStyle() const
 T CEconItemView::Init(int, int, int, unsigned int)
 T CEconItemView::InitNetworkedDynamicAttributesForDemos()
 T CEconItemView::Invalidate()
 T CEconItemView::IsStyleUnlocked(int) const
 T CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const
 T CEconItemView::MarkDescriptionDirty()
 T CEconItemView::NetworkStateChanged()
 T CEconItemView::NetworkStateChanged(void*)
 T CEconItemView::NetworkVar_m_AttributeList::NetworkStateChanged()
 T CEconItemView::NetworkVar_m_AttributeList::NetworkStateChanged(void*)
 T CEconItemView::NetworkVar_m_NetworkedDynamicAttributesForDemos::NetworkStateChanged()
 T CEconItemView::NetworkVar_m_NetworkedDynamicAttributesForDemos::NetworkStateChanged(void*)
 T CEconItemView::UpdateNetworkedCustomName()
 T CEconItemView::UpdateNetworkedDynamicAttributesForDemos(unsigned short, float)
 T CEconItemView::operator=(CEconItemView const&)
 T CEconItemView::~CEconItemView()
 T CEconLootListDefinition::AddRandomAtrributes(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconLootListDefinition::BInitFromKV(KeyValues*, KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*, bool)
 T CEconLootListDefinition::CEconLootListDefinition()
 T CEconLootListDefinition::GenerateKeyValues() const
 T CEconLootListDefinition::GetAdditionalDrop(int, CUtlString&, float&) const
 T CEconLootListDefinition::GetAdditionalDropCount() const
 T CEconLootListDefinition::GetLootListContents() const
 T CEconLootListDefinition::GetName() const
 T CEconLootListDefinition::GetRandomAttribute(int, int, float&, int&, int&) const
 T CEconLootListDefinition::GetRandomAttributeCount(int) const
 T CEconLootListDefinition::GetRandomAttributeGroup(int, float&, float&) const
 T CEconLootListDefinition::GetRandomAttributeGroupCount() const
 T CEconLootListDefinition::GetWeight(int) const
 T CEconLootListDefinition::HasUnusualLoot() const
 T CEconLootListDefinition::IsServerList() const
 T CEconLootListDefinition::PurgeItems()
 T CEconLootListDefinition::lootlist_attrib_t::BInitFromKV(char const*, KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconLootListDefinition::operator=(CEconLootListDefinition const&)
 T CEconLootListDefinition::~CEconLootListDefinition()
 T CEconMusicDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconQuestDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconQuestDefinition::~CEconQuestDefinition()
 T CEconSharedToolSupport::CanCollect(IEconItemInterface const*, IEconItemInterface const*, unsigned int*)
 T CEconSoundMaterialDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconSoundMaterialDefinition::CEconSoundMaterialDefinition()
 T CEconSoundMaterialDefinition::CEconSoundMaterialDefinition(CEconSoundMaterialDefinition const&)
 T CEconSoundMaterialDefinition::~CEconSoundMaterialDefinition()
 T CEconStyleInfo::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconStyleInfo::GeneratePrecacheModelStringsForStyle(CUtlVector<char const*, CUtlMemory<char const*, int> >*) const
 T CEconStyleInfo::~CEconStyleInfo()
 T CEconTool_BackpackExpander::IsValid() const
 T CEconTool_BackpackExpander::~CEconTool_BackpackExpander()
 T CEconTool_ClaimCode::IsValid() const
 T CEconTool_ClaimCode::~CEconTool_ClaimCode()
 T CEconTool_Collection::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T CEconTool_Collection::IsValid() const
 T CEconTool_Collection::ShouldDisplayQuantity(IEconItemInterface const*) const
 T CEconTool_Collection::~CEconTool_Collection()
 T CEconTool_CrateKey::~CEconTool_CrateKey()
 T CEconTool_CustomizeTexture::~CEconTool_CustomizeTexture()
 T CEconTool_Default::~CEconTool_Default()
 T CEconTool_DescTag::~CEconTool_DescTag()
 T CEconTool_DuelingMinigame::~CEconTool_DuelingMinigame()
 T CEconTool_Gift::CEconTool_Gift(char const*, char const*, KeyValues*)
 T CEconTool_Gift::IsValid() const
 T CEconTool_Gift::~CEconTool_Gift()
 T CEconTool_NameTag::~CEconTool_NameTag()
 T CEconTool_Noisemaker::~CEconTool_Noisemaker()
 T CEconTool_PaintCan::~CEconTool_PaintCan()
 T CEconTool_PaintKit::~CEconTool_PaintKit()
 T CEconTool_Recipe::~CEconTool_Recipe()
 T CEconTool_SeasonPass::~CEconTool_SeasonPass()
 T CEconTool_StatTrakSwap::~CEconTool_StatTrakSwap()
 T CEconTool_Sticker::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T CEconTool_Sticker::~CEconTool_Sticker()
 T CEconTool_WeddingRing::RequiresToolEscrowPeriod() const
 T CEconTool_WeddingRing::~CEconTool_WeddingRing()
 T CEconTool_WrappedGift::~CEconTool_WrappedGift()
 T CEffectsServer::Beam(Vector const&, Vector const&, int, int, unsigned char, unsigned char, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
 T CEffectsServer::Dust(Vector const&, Vector const&, float, float)
 T CEffectsServer::EnergySplash(Vector const&, Vector const&, bool)
 T CEffectsServer::IsServer()
 T CEffectsServer::MetalSparks(Vector const&, Vector const&)
 T CEffectsServer::MuzzleFlash(Vector const&, QAngle const&, float, int)
 T CEffectsServer::Ricochet(Vector const&, Vector const&)
 T CEffectsServer::Smoke(Vector const&, int, float, float)
 T CEffectsServer::Sparks(Vector const&, int, int, Vector const*)
 T CEffectsServer::SuppressEffectsSounds(bool)
 T CEffectsServer::Time()
 T CEffectsServer::~CEffectsServer()
 T CEmbers::EmberUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEmbers::GetDataDescMap()
 T CEmbers::GetServerClass()
 T CEmbers::Precache()
 T CEmbers::Spawn()
 T CEmbers::YouForgotToImplementOrDeclareServerClass()
 T CEmbers::~CEmbers()
 T CEmptyConVar::GetName() const
 T CEmptyConVar::IsFlagSet(int) const
 T CEmptyConVar::SetValue(char const*)
 T CEmptyConVar::SetValue(float)
 T CEmptyConVar::SetValue(int)
 T CEmptyConVar::~CEmptyConVar()
 T CEnableMotionFixup::~CEnableMotionFixup()
 T CEntFireAutoCompletionFunctor::CommandCallback(CCommand const&)
 T CEntFireAutoCompletionFunctor::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CEntFireAutoCompletionFunctor::EntFire_AutoCompleteInput(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CEntityBlocker::Create(Vector const&, Vector const&, Vector const&, CBaseEntity*, bool)
 T CEntityBlocker::Spawn()
 T CEntityBlocker::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CEntityBlocker::~CEntityBlocker()
 T CEntityClassList<CPhysicsNPCSolver>::LevelShutdownPostEntity()
 T CEntityClassList<CPhysicsNPCSolver>::~CEntityClassList()
 T CEntityClassList<CPointCamera>::LevelShutdownPostEntity()
 T CEntityClassList<CPointCamera>::~CEntityClassList()
 T CEntityClassList<CSkyCamera>::LevelShutdownPostEntity()
 T CEntityClassList<CSkyCamera>::~CEntityClassList()
 T CEntityDataInstantiator<CWatcherList>::CompareFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::KeyFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<ModelScale>::CompareFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::KeyFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<StepSimulationData>::CompareFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::KeyFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<groundlink_t>::CompareFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::KeyFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<physicspushlist_t>::CompareFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::KeyFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<touchlink_t>::CompareFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::KeyFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<vphysicsupdateai_t>::CompareFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::KeyFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::~CEntityDataInstantiator()
 T CEntityDissolve::CEntityDissolve()
 T CEntityDissolve::Create(CBaseEntity*, CBaseEntity*)
 T CEntityDissolve::Create(CBaseEntity*, char const*, float, int, bool*)
 T CEntityDissolve::DissolveThink()
 T CEntityDissolve::ElectrocuteThink()
 T CEntityDissolve::GetDataDescMap()
 T CEntityDissolve::GetServerClass()
 T CEntityDissolve::InputDissolve(inputdata_t&)
 T CEntityDissolve::Precache()
 T CEntityDissolve::SetDissolveType(int)
 T CEntityDissolve::SetDissolverOrigin(Vector)
 T CEntityDissolve::SetMagnitude(int)
 T CEntityDissolve::SetStartTime(float)
 T CEntityDissolve::Spawn()
 T CEntityDissolve::YouForgotToImplementOrDeclareServerClass()
 T CEntityDissolve::~CEntityDissolve()
 T CEntityFactory<CAISound>::Create(char const*)
 T CEntityFactory<CAISound>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAISound>::GetEntitySize()
 T CEntityFactory<CAI_AllySpeechManager>::Create(char const*)
 T CEntityFactory<CAI_AllySpeechManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_AllySpeechManager>::GetEntitySize()
 T CEntityFactory<CAI_AssaultGoal>::Create(char const*)
 T CEntityFactory<CAI_AssaultGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_AssaultGoal>::GetEntitySize()
 T CEntityFactory<CAI_BattleLine>::Create(char const*)
 T CEntityFactory<CAI_BattleLine>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_BattleLine>::GetEntitySize()
 T CEntityFactory<CAI_ChangeHintGroup>::Create(char const*)
 T CEntityFactory<CAI_ChangeHintGroup>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ChangeHintGroup>::GetEntitySize()
 T CEntityFactory<CAI_ChangeTarget>::Create(char const*)
 T CEntityFactory<CAI_ChangeTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ChangeTarget>::GetEntitySize()
 T CEntityFactory<CAI_DynamicLink>::Create(char const*)
 T CEntityFactory<CAI_DynamicLink>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_DynamicLink>::GetEntitySize()
 T CEntityFactory<CAI_DynamicLinkController>::Create(char const*)
 T CEntityFactory<CAI_DynamicLinkController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_DynamicLinkController>::GetEntitySize()
 T CEntityFactory<CAI_FightFromCoverGoal>::Create(char const*)
 T CEntityFactory<CAI_FightFromCoverGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_FightFromCoverGoal>::GetEntitySize()
 T CEntityFactory<CAI_FollowGoal>::Create(char const*)
 T CEntityFactory<CAI_FollowGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_FollowGoal>::GetEntitySize()
 T CEntityFactory<CAI_Hint>::Create(char const*)
 T CEntityFactory<CAI_Hint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_Hint>::GetEntitySize()
 T CEntityFactory<CAI_LeadGoal>::Create(char const*)
 T CEntityFactory<CAI_LeadGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_LeadGoal>::GetEntitySize()
 T CEntityFactory<CAI_LeadGoal_Weapon>::Create(char const*)
 T CEntityFactory<CAI_LeadGoal_Weapon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_LeadGoal_Weapon>::GetEntitySize()
 T CEntityFactory<CAI_NetworkManager>::Create(char const*)
 T CEntityFactory<CAI_NetworkManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_NetworkManager>::GetEntitySize()
 T CEntityFactory<CAI_RadialLinkController>::Create(char const*)
 T CEntityFactory<CAI_RadialLinkController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_RadialLinkController>::GetEntitySize()
 T CEntityFactory<CAI_ScriptConditions>::Create(char const*)
 T CEntityFactory<CAI_ScriptConditions>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptConditions>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSchedule>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSchedule>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSchedule>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSentence>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSentence>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSentence>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSequence>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSequence>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSequence>::GetEntitySize()
 T CEntityFactory<CAI_SpeechFilter>::Create(char const*)
 T CEntityFactory<CAI_SpeechFilter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_SpeechFilter>::GetEntitySize()
 T CEntityFactory<CAI_StandoffGoal>::Create(char const*)
 T CEntityFactory<CAI_StandoffGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_StandoffGoal>::GetEntitySize()
 T CEntityFactory<CAI_TestHull>::Create(char const*)
 T CEntityFactory<CAI_TestHull>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_TestHull>::GetEntitySize()
 T CEntityFactory<CAK47>::Create(char const*)
 T CEntityFactory<CAK47>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAK47>::GetEntitySize()
 T CEntityFactory<CAmbientGeneric>::Create(char const*)
 T CEntityFactory<CAmbientGeneric>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAmbientGeneric>::GetEntitySize()
 T CEntityFactory<CAreaPortal>::Create(char const*)
 T CEntityFactory<CAreaPortal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAreaPortal>::GetEntitySize()
 T CEntityFactory<CAssaultPoint>::Create(char const*)
 T CEntityFactory<CAssaultPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAssaultPoint>::GetEntitySize()
 T CEntityFactory<CBaseButton>::Create(char const*)
 T CEntityFactory<CBaseButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseButton>::GetEntitySize()
 T CEntityFactory<CBaseCSGrenade>::Create(char const*)
 T CEntityFactory<CBaseCSGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseCSGrenade>::GetEntitySize()
 T CEntityFactory<CBaseDMStart>::Create(char const*)
 T CEntityFactory<CBaseDMStart>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseDMStart>::GetEntitySize()
 T CEntityFactory<CBaseDoor>::Create(char const*)
 T CEntityFactory<CBaseDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseDoor>::GetEntitySize()
 T CEntityFactory<CBaseEntity>::Create(char const*)
 T CEntityFactory<CBaseEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseEntity>::GetEntitySize()
 T CEntityFactory<CBaseFilter>::Create(char const*)
 T CEntityFactory<CBaseFilter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseFilter>::GetEntitySize()
 T CEntityFactory<CBaseFlex>::Create(char const*)
 T CEntityFactory<CBaseFlex>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseFlex>::GetEntitySize()
 T CEntityFactory<CBaseGrenade>::Create(char const*)
 T CEntityFactory<CBaseGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseGrenade>::GetEntitySize()
 T CEntityFactory<CBaseMoveBehavior>::Create(char const*)
 T CEntityFactory<CBaseMoveBehavior>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseMoveBehavior>::GetEntitySize()
 T CEntityFactory<CBaseProjectile>::Create(char const*)
 T CEntityFactory<CBaseProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseProjectile>::GetEntitySize()
 T CEntityFactory<CBaseTrigger>::Create(char const*)
 T CEntityFactory<CBaseTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseTrigger>::GetEntitySize()
 T CEntityFactory<CBaseViewModel>::Create(char const*)
 T CEntityFactory<CBaseViewModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseViewModel>::GetEntitySize()
 T CEntityFactory<CBeam>::Create(char const*)
 T CEntityFactory<CBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBeam>::GetEntitySize()
 T CEntityFactory<CBeamSpotlight>::Create(char const*)
 T CEntityFactory<CBeamSpotlight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBeamSpotlight>::GetEntitySize()
 T CEntityFactory<CBlendingCycler>::Create(char const*)
 T CEntityFactory<CBlendingCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBlendingCycler>::GetEntitySize()
 T CEntityFactory<CBlood>::Create(char const*)
 T CEntityFactory<CBlood>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBlood>::GetEntitySize()
 T CEntityFactory<CBombTarget>::Create(char const*)
 T CEntityFactory<CBombTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBombTarget>::GetEntitySize()
 T CEntityFactory<CBoneFollower>::Create(char const*)
 T CEntityFactory<CBoneFollower>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBoneFollower>::GetEntitySize()
 T CEntityFactory<CBreakable>::Create(char const*)
 T CEntityFactory<CBreakable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBreakable>::GetEntitySize()
 T CEntityFactory<CBreakableSurface>::Create(char const*)
 T CEntityFactory<CBreakableSurface>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBreakableSurface>::GetEntitySize()
 T CEntityFactory<CBubbling>::Create(char const*)
 T CEntityFactory<CBubbling>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBubbling>::GetEntitySize()
 T CEntityFactory<CBuyZone>::Create(char const*)
 T CEntityFactory<CBuyZone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBuyZone>::GetEntitySize()
 T CEntityFactory<CC4>::Create(char const*)
 T CEntityFactory<CC4>::Destroy(IServerNetworkable*)
 T CEntityFactory<CC4>::GetEntitySize()
 T CEntityFactory<CCSBot>::Create(char const*)
 T CEntityFactory<CCSBot>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSBot>::GetEntitySize()
 T CEntityFactory<CCSGameRulesProxy>::Create(char const*)
 T CEntityFactory<CCSGameRulesProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSGameRulesProxy>::GetEntitySize()
 T CEntityFactory<CCSPlayer>::Create(char const*)
 T CEntityFactory<CCSPlayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSPlayer>::GetEntitySize()
 T CEntityFactory<CCSPlayerResource>::Create(char const*)
 T CEntityFactory<CCSPlayerResource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSPlayerResource>::GetEntitySize()
 T CEntityFactory<CCSRagdoll>::Create(char const*)
 T CEntityFactory<CCSRagdoll>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSRagdoll>::GetEntitySize()
 T CEntityFactory<CCSTeam>::Create(char const*)
 T CEntityFactory<CCSTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCSTeam>::GetEntitySize()
 T CEntityFactory<CCascadeLight>::Create(char const*)
 T CEntityFactory<CCascadeLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCascadeLight>::GetEntitySize()
 T CEntityFactory<CChangeLevel>::Create(char const*)
 T CEntityFactory<CChangeLevel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CChangeLevel>::GetEntitySize()
 T CEntityFactory<CChicken>::Create(char const*)
 T CEntityFactory<CChicken>::Destroy(IServerNetworkable*)
 T CEntityFactory<CChicken>::GetEntitySize()
 T CEntityFactory<CColorCorrection>::Create(char const*)
 T CEntityFactory<CColorCorrection>::Destroy(IServerNetworkable*)
 T CEntityFactory<CColorCorrection>::GetEntitySize()
 T CEntityFactory<CColorCorrectionVolume>::Create(char const*)
 T CEntityFactory<CColorCorrectionVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CColorCorrectionVolume>::GetEntitySize()
 T CEntityFactory<CCommentaryAuto>::Create(char const*)
 T CEntityFactory<CCommentaryAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCommentaryAuto>::GetEntitySize()
 T CEntityFactory<CCommentaryViewPosition>::Create(char const*)
 T CEntityFactory<CCommentaryViewPosition>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCommentaryViewPosition>::GetEntitySize()
 T CEntityFactory<CConstraintAnchor>::Create(char const*)
 T CEntityFactory<CConstraintAnchor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CConstraintAnchor>::GetEntitySize()
 T CEntityFactory<CCredits>::Create(char const*)
 T CEntityFactory<CCredits>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCredits>::GetEntitySize()
 T CEntityFactory<CDEagle>::Create(char const*)
 T CEntityFactory<CDEagle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDEagle>::GetEntitySize()
 T CEntityFactory<CDebugHistory>::Create(char const*)
 T CEntityFactory<CDebugHistory>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDebugHistory>::GetEntitySize()
 T CEntityFactory<CDecal>::Create(char const*)
 T CEntityFactory<CDecal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDecal>::GetEntitySize()
 T CEntityFactory<CDecoyGrenade>::Create(char const*)
 T CEntityFactory<CDecoyGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDecoyGrenade>::GetEntitySize()
 T CEntityFactory<CDecoyProjectile>::Create(char const*)
 T CEntityFactory<CDecoyProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDecoyProjectile>::GetEntitySize()
 T CEntityFactory<CDetailBlocker>::Create(char const*)
 T CEntityFactory<CDetailBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDetailBlocker>::GetEntitySize()
 T CEntityFactory<CDynamicLight>::Create(char const*)
 T CEntityFactory<CDynamicLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDynamicLight>::GetEntitySize()
 T CEntityFactory<CDynamicProp>::Create(char const*)
 T CEntityFactory<CDynamicProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDynamicProp>::GetEntitySize()
 T CEntityFactory<CEmbers>::Create(char const*)
 T CEntityFactory<CEmbers>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEmbers>::GetEntitySize()
 T CEntityFactory<CEnableMotionFixup>::Create(char const*)
 T CEntityFactory<CEnableMotionFixup>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnableMotionFixup>::GetEntitySize()
 T CEntityFactory<CEntityBlocker>::Create(char const*)
 T CEntityFactory<CEntityBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityBlocker>::GetEntitySize()
 T CEntityFactory<CEntityDissolve>::Create(char const*)
 T CEntityFactory<CEntityDissolve>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityDissolve>::GetEntitySize()
 T CEntityFactory<CEntityFlame>::Create(char const*)
 T CEntityFactory<CEntityFlame>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityFlame>::GetEntitySize()
 T CEntityFactory<CEntityFreezing>::Create(char const*)
 T CEntityFactory<CEntityFreezing>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityFreezing>::GetEntitySize()
 T CEntityFactory<CEntityParticleTrail>::Create(char const*)
 T CEntityFactory<CEntityParticleTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityParticleTrail>::GetEntitySize()
 T CEntityFactory<CEnvAmbientLight>::Create(char const*)
 T CEntityFactory<CEnvAmbientLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvAmbientLight>::GetEntitySize()
 T CEntityFactory<CEnvBeam>::Create(char const*)
 T CEntityFactory<CEnvBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvBeam>::GetEntitySize()
 T CEntityFactory<CEnvBeverage>::Create(char const*)
 T CEntityFactory<CEnvBeverage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvBeverage>::GetEntitySize()
 T CEntityFactory<CEnvDOFController>::Create(char const*)
 T CEntityFactory<CEnvDOFController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDOFController>::GetEntitySize()
 T CEntityFactory<CEnvDetailController>::Create(char const*)
 T CEntityFactory<CEnvDetailController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDetailController>::GetEntitySize()
 T CEntityFactory<CEnvDustPuff>::Create(char const*)
 T CEntityFactory<CEnvDustPuff>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDustPuff>::GetEntitySize()
 T CEntityFactory<CEnvEffectsScript>::Create(char const*)
 T CEntityFactory<CEnvEffectsScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEffectsScript>::GetEntitySize()
 T CEntityFactory<CEnvEntityIgniter>::Create(char const*)
 T CEntityFactory<CEnvEntityIgniter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEntityIgniter>::GetEntitySize()
 T CEntityFactory<CEnvEntityMaker>::Create(char const*)
 T CEntityFactory<CEnvEntityMaker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEntityMaker>::GetEntitySize()
 T CEntityFactory<CEnvExplosion>::Create(char const*)
 T CEntityFactory<CEnvExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvExplosion>::GetEntitySize()
 T CEntityFactory<CEnvFade>::Create(char const*)
 T CEntityFactory<CEnvFade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFade>::GetEntitySize()
 T CEntityFactory<CEnvFireSensor>::Create(char const*)
 T CEntityFactory<CEnvFireSensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFireSensor>::GetEntitySize()
 T CEntityFactory<CEnvFireSource>::Create(char const*)
 T CEntityFactory<CEnvFireSource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFireSource>::GetEntitySize()
 T CEntityFactory<CEnvFunnel>::Create(char const*)
 T CEntityFactory<CEnvFunnel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFunnel>::GetEntitySize()
 T CEntityFactory<CEnvGlobal>::Create(char const*)
 T CEntityFactory<CEnvGlobal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvGlobal>::GetEntitySize()
 T CEntityFactory<CEnvGunfire>::Create(char const*)
 T CEntityFactory<CEnvGunfire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvGunfire>::GetEntitySize()
 T CEntityFactory<CEnvHudHint>::Create(char const*)
 T CEntityFactory<CEnvHudHint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvHudHint>::GetEntitySize()
 T CEntityFactory<CEnvInstructorHint>::Create(char const*)
 T CEntityFactory<CEnvInstructorHint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvInstructorHint>::GetEntitySize()
 T CEntityFactory<CEnvLaser>::Create(char const*)
 T CEntityFactory<CEnvLaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvLaser>::GetEntitySize()
 T CEntityFactory<CEnvLight>::Create(char const*)
 T CEntityFactory<CEnvLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvLight>::GetEntitySize()
 T CEntityFactory<CEnvMicrophone>::Create(char const*)
 T CEntityFactory<CEnvMicrophone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvMicrophone>::GetEntitySize()
 T CEntityFactory<CEnvMuzzleFlash>::Create(char const*)
 T CEntityFactory<CEnvMuzzleFlash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvMuzzleFlash>::GetEntitySize()
 T CEntityFactory<CEnvParticleScript>::Create(char const*)
 T CEntityFactory<CEnvParticleScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvParticleScript>::GetEntitySize()
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::Create(char const*)
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::GetEntitySize()
 T CEntityFactory<CEnvProjectedTexture>::Create(char const*)
 T CEntityFactory<CEnvProjectedTexture>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvProjectedTexture>::GetEntitySize()
 T CEntityFactory<CEnvQuadraticBeam>::Create(char const*)
 T CEntityFactory<CEnvQuadraticBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvQuadraticBeam>::GetEntitySize()
 T CEntityFactory<CEnvScreenEffect>::Create(char const*)
 T CEntityFactory<CEnvScreenEffect>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvScreenEffect>::GetEntitySize()
 T CEntityFactory<CEnvScreenOverlay>::Create(char const*)
 T CEntityFactory<CEnvScreenOverlay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvScreenOverlay>::GetEntitySize()
 T CEntityFactory<CEnvShake>::Create(char const*)
 T CEntityFactory<CEnvShake>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvShake>::GetEntitySize()
 T CEntityFactory<CEnvShooter>::Create(char const*)
 T CEntityFactory<CEnvShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvShooter>::GetEntitySize()
 T CEntityFactory<CEnvSoundscape>::Create(char const*)
 T CEntityFactory<CEnvSoundscape>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscape>::GetEntitySize()
 T CEntityFactory<CEnvSoundscapeProxy>::Create(char const*)
 T CEntityFactory<CEnvSoundscapeProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscapeProxy>::GetEntitySize()
 T CEntityFactory<CEnvSoundscapeTriggerable>::Create(char const*)
 T CEntityFactory<CEnvSoundscapeTriggerable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscapeTriggerable>::GetEntitySize()
 T CEntityFactory<CEnvSpark>::Create(char const*)
 T CEntityFactory<CEnvSpark>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSpark>::GetEntitySize()
 T CEntityFactory<CEnvSplash>::Create(char const*)
 T CEntityFactory<CEnvSplash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSplash>::GetEntitySize()
 T CEntityFactory<CEnvTilt>::Create(char const*)
 T CEntityFactory<CEnvTilt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTilt>::GetEntitySize()
 T CEntityFactory<CEnvTonemapController>::Create(char const*)
 T CEntityFactory<CEnvTonemapController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTonemapController>::GetEntitySize()
 T CEntityFactory<CEnvTracer>::Create(char const*)
 T CEntityFactory<CEnvTracer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTracer>::GetEntitySize()
 T CEntityFactory<CEnvViewPunch>::Create(char const*)
 T CEntityFactory<CEnvViewPunch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvViewPunch>::GetEntitySize()
 T CEntityFactory<CEnvWind>::Create(char const*)
 T CEntityFactory<CEnvWind>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvWind>::GetEntitySize()
 T CEntityFactory<CEnvZoom>::Create(char const*)
 T CEntityFactory<CEnvZoom>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvZoom>::GetEntitySize()
 T CEntityFactory<CEventQueueSaveLoadProxy>::Create(char const*)
 T CEntityFactory<CEventQueueSaveLoadProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEventQueueSaveLoadProxy>::GetEntitySize()
 T CEntityFactory<CFilterClass>::Create(char const*)
 T CEntityFactory<CFilterClass>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterClass>::GetEntitySize()
 T CEntityFactory<CFilterContext>::Create(char const*)
 T CEntityFactory<CFilterContext>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterContext>::GetEntitySize()
 T CEntityFactory<CFilterEnemy>::Create(char const*)
 T CEntityFactory<CFilterEnemy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterEnemy>::GetEntitySize()
 T CEntityFactory<CFilterMassGreater>::Create(char const*)
 T CEntityFactory<CFilterMassGreater>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterMassGreater>::GetEntitySize()
 T CEntityFactory<CFilterModel>::Create(char const*)
 T CEntityFactory<CFilterModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterModel>::GetEntitySize()
 T CEntityFactory<CFilterMultiple>::Create(char const*)
 T CEntityFactory<CFilterMultiple>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterMultiple>::GetEntitySize()
 T CEntityFactory<CFilterName>::Create(char const*)
 T CEntityFactory<CFilterName>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterName>::GetEntitySize()
 T CEntityFactory<CFire>::Create(char const*)
 T CEntityFactory<CFire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFire>::GetEntitySize()
 T CEntityFactory<CFireCrackerBlast>::Create(char const*)
 T CEntityFactory<CFireCrackerBlast>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFireCrackerBlast>::GetEntitySize()
 T CEntityFactory<CFireSmoke>::Create(char const*)
 T CEntityFactory<CFireSmoke>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFireSmoke>::GetEntitySize()
 T CEntityFactory<CFireTrail>::Create(char const*)
 T CEntityFactory<CFireTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFireTrail>::GetEntitySize()
 T CEntityFactory<CFish>::Create(char const*)
 T CEntityFactory<CFish>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFish>::GetEntitySize()
 T CEntityFactory<CFishPool>::Create(char const*)
 T CEntityFactory<CFishPool>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFishPool>::GetEntitySize()
 T CEntityFactory<CFlashbang>::Create(char const*)
 T CEntityFactory<CFlashbang>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlashbang>::GetEntitySize()
 T CEntityFactory<CFlashbangProjectile>::Create(char const*)
 T CEntityFactory<CFlashbangProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlashbangProjectile>::GetEntitySize()
 T CEntityFactory<CFlexExpresser>::Create(char const*)
 T CEntityFactory<CFlexExpresser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlexExpresser>::GetEntitySize()
 T CEntityFactory<CFlextalkActor>::Create(char const*)
 T CEntityFactory<CFlextalkActor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlextalkActor>::GetEntitySize()
 T CEntityFactory<CFogController>::Create(char const*)
 T CEntityFactory<CFogController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogController>::GetEntitySize()
 T CEntityFactory<CFogTrigger>::Create(char const*)
 T CEntityFactory<CFogTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogTrigger>::GetEntitySize()
 T CEntityFactory<CFogVolume>::Create(char const*)
 T CEntityFactory<CFogVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogVolume>::GetEntitySize()
 T CEntityFactory<CFootstepControl>::Create(char const*)
 T CEntityFactory<CFootstepControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFootstepControl>::GetEntitySize()
 T CEntityFactory<CFuncAreaPortalWindow>::Create(char const*)
 T CEntityFactory<CFuncAreaPortalWindow>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncAreaPortalWindow>::GetEntitySize()
 T CEntityFactory<CFuncBlockDMSpawns>::Create(char const*)
 T CEntityFactory<CFuncBlockDMSpawns>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncBlockDMSpawns>::GetEntitySize()
 T CEntityFactory<CFuncBrush>::Create(char const*)
 T CEntityFactory<CFuncBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncBrush>::GetEntitySize()
 T CEntityFactory<CFuncConveyor>::Create(char const*)
 T CEntityFactory<CFuncConveyor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncConveyor>::GetEntitySize()
 T CEntityFactory<CFuncIllusionary>::Create(char const*)
 T CEntityFactory<CFuncIllusionary>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncIllusionary>::GetEntitySize()
 T CEntityFactory<CFuncInstanceIoProxy>::Create(char const*)
 T CEntityFactory<CFuncInstanceIoProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncInstanceIoProxy>::GetEntitySize()
 T CEntityFactory<CFuncLadder>::Create(char const*)
 T CEntityFactory<CFuncLadder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncLadder>::GetEntitySize()
 T CEntityFactory<CFuncLadderEndPoint>::Create(char const*)
 T CEntityFactory<CFuncLadderEndPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncLadderEndPoint>::GetEntitySize()
 T CEntityFactory<CFuncMonitor>::Create(char const*)
 T CEntityFactory<CFuncMonitor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncMonitor>::GetEntitySize()
 T CEntityFactory<CFuncMoveLinear>::Create(char const*)
 T CEntityFactory<CFuncMoveLinear>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncMoveLinear>::GetEntitySize()
 T CEntityFactory<CFuncNavBlocker>::Create(char const*)
 T CEntityFactory<CFuncNavBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncNavBlocker>::GetEntitySize()
 T CEntityFactory<CFuncNavObstruction>::Create(char const*)
 T CEntityFactory<CFuncNavObstruction>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncNavObstruction>::GetEntitySize()
 T CEntityFactory<CFuncOccluder>::Create(char const*)
 T CEntityFactory<CFuncOccluder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncOccluder>::GetEntitySize()
 T CEntityFactory<CFuncPlat>::Create(char const*)
 T CEntityFactory<CFuncPlat>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPlat>::GetEntitySize()
 T CEntityFactory<CFuncPlatRot>::Create(char const*)
 T CEntityFactory<CFuncPlatRot>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPlatRot>::GetEntitySize()
 T CEntityFactory<CFuncReflectiveGlass>::Create(char const*)
 T CEntityFactory<CFuncReflectiveGlass>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncReflectiveGlass>::GetEntitySize()
 T CEntityFactory<CFuncRotating>::Create(char const*)
 T CEntityFactory<CFuncRotating>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncRotating>::GetEntitySize()
 T CEntityFactory<CFuncSmokeVolume>::Create(char const*)
 T CEntityFactory<CFuncSmokeVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncSmokeVolume>::GetEntitySize()
 T CEntityFactory<CFuncTankTrain>::Create(char const*)
 T CEntityFactory<CFuncTankTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrackAuto>::Create(char const*)
 T CEntityFactory<CFuncTrackAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackAuto>::GetEntitySize()
 T CEntityFactory<CFuncTrackChange>::Create(char const*)
 T CEntityFactory<CFuncTrackChange>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackChange>::GetEntitySize()
 T CEntityFactory<CFuncTrackTrain>::Create(char const*)
 T CEntityFactory<CFuncTrackTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrain>::Create(char const*)
 T CEntityFactory<CFuncTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrainControls>::Create(char const*)
 T CEntityFactory<CFuncTrainControls>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrainControls>::GetEntitySize()
 T CEntityFactory<CFuncVPhysicsClip>::Create(char const*)
 T CEntityFactory<CFuncVPhysicsClip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncVPhysicsClip>::GetEntitySize()
 T CEntityFactory<CFuncVehicleClip>::Create(char const*)
 T CEntityFactory<CFuncVehicleClip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncVehicleClip>::GetEntitySize()
 T CEntityFactory<CFuncWall>::Create(char const*)
 T CEntityFactory<CFuncWall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncWall>::GetEntitySize()
 T CEntityFactory<CFuncWallToggle>::Create(char const*)
 T CEntityFactory<CFuncWallToggle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncWallToggle>::GetEntitySize()
 T CEntityFactory<CFunc_DustCloud>::Create(char const*)
 T CEntityFactory<CFunc_DustCloud>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_DustCloud>::GetEntitySize()
 T CEntityFactory<CFunc_DustMotes>::Create(char const*)
 T CEntityFactory<CFunc_DustMotes>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_DustMotes>::GetEntitySize()
 T CEntityFactory<CFunc_LOD>::Create(char const*)
 T CEntityFactory<CFunc_LOD>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_LOD>::GetEntitySize()
 T CEntityFactory<CGameEnd>::Create(char const*)
 T CEntityFactory<CGameEnd>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameEnd>::GetEntitySize()
 T CEntityFactory<CGameGibManager>::Create(char const*)
 T CEntityFactory<CGameGibManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameGibManager>::GetEntitySize()
 T CEntityFactory<CGameMoney>::Create(char const*)
 T CEntityFactory<CGameMoney>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameMoney>::GetEntitySize()
 T CEntityFactory<CGamePlayerEquip>::Create(char const*)
 T CEntityFactory<CGamePlayerEquip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerEquip>::GetEntitySize()
 T CEntityFactory<CGamePlayerTeam>::Create(char const*)
 T CEntityFactory<CGamePlayerTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerTeam>::GetEntitySize()
 T CEntityFactory<CGamePlayerZone>::Create(char const*)
 T CEntityFactory<CGamePlayerZone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerZone>::GetEntitySize()
 T CEntityFactory<CGameRoundEnd>::Create(char const*)
 T CEntityFactory<CGameRoundEnd>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameRoundEnd>::GetEntitySize()
 T CEntityFactory<CGameScore>::Create(char const*)
 T CEntityFactory<CGameScore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameScore>::GetEntitySize()
 T CEntityFactory<CGameText>::Create(char const*)
 T CEntityFactory<CGameText>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameText>::GetEntitySize()
 T CEntityFactory<CGameUI>::Create(char const*)
 T CEntityFactory<CGameUI>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameUI>::GetEntitySize()
 T CEntityFactory<CGameWeaponManager>::Create(char const*)
 T CEntityFactory<CGameWeaponManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameWeaponManager>::GetEntitySize()
 T CEntityFactory<CGenericActor>::Create(char const*)
 T CEntityFactory<CGenericActor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericActor>::GetEntitySize()
 T CEntityFactory<CGenericCycler>::Create(char const*)
 T CEntityFactory<CGenericCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericCycler>::GetEntitySize()
 T CEntityFactory<CGenericFlexCycler>::Create(char const*)
 T CEntityFactory<CGenericFlexCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericFlexCycler>::GetEntitySize()
 T CEntityFactory<CGenericNPC>::Create(char const*)
 T CEntityFactory<CGenericNPC>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericNPC>::GetEntitySize()
 T CEntityFactory<CGib>::Create(char const*)
 T CEntityFactory<CGib>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGib>::GetEntitySize()
 T CEntityFactory<CGibShooter>::Create(char const*)
 T CEntityFactory<CGibShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGibShooter>::GetEntitySize()
 T CEntityFactory<CGunTarget>::Create(char const*)
 T CEntityFactory<CGunTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGunTarget>::GetEntitySize()
 T CEntityFactory<CHEGrenade>::Create(char const*)
 T CEntityFactory<CHEGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHEGrenade>::GetEntitySize()
 T CEntityFactory<CHEGrenadeProjectile>::Create(char const*)
 T CEntityFactory<CHEGrenadeProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHEGrenadeProjectile>::GetEntitySize()
 T CEntityFactory<CHandleDummy>::Create(char const*)
 T CEntityFactory<CHandleDummy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHandleDummy>::GetEntitySize()
 T CEntityFactory<CHandleTest>::Create(char const*)
 T CEntityFactory<CHandleTest>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHandleTest>::GetEntitySize()
 T CEntityFactory<CHostage>::Create(char const*)
 T CEntityFactory<CHostage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHostage>::GetEntitySize()
 T CEntityFactory<CHostageCarriableProp>::Create(char const*)
 T CEntityFactory<CHostageCarriableProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHostageCarriableProp>::GetEntitySize()
 T CEntityFactory<CHostageRescueZone>::Create(char const*)
 T CEntityFactory<CHostageRescueZone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHostageRescueZone>::GetEntitySize()
 T CEntityFactory<CIncendiaryGrenade>::Create(char const*)
 T CEntityFactory<CIncendiaryGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CIncendiaryGrenade>::GetEntitySize()
 T CEntityFactory<CInferno>::Create(char const*)
 T CEntityFactory<CInferno>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInferno>::GetEntitySize()
 T CEntityFactory<CInfoCameraLink>::Create(char const*)
 T CEntityFactory<CInfoCameraLink>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoCameraLink>::GetEntitySize()
 T CEntityFactory<CInfoGameEventProxy>::Create(char const*)
 T CEntityFactory<CInfoGameEventProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoGameEventProxy>::GetEntitySize()
 T CEntityFactory<CInfoInstructorHintBombTargetA>::Create(char const*)
 T CEntityFactory<CInfoInstructorHintBombTargetA>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoInstructorHintBombTargetA>::GetEntitySize()
 T CEntityFactory<CInfoInstructorHintBombTargetB>::Create(char const*)
 T CEntityFactory<CInfoInstructorHintBombTargetB>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoInstructorHintBombTargetB>::GetEntitySize()
 T CEntityFactory<CInfoInstructorHintHostageRescueZone>::Create(char const*)
 T CEntityFactory<CInfoInstructorHintHostageRescueZone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoInstructorHintHostageRescueZone>::GetEntitySize()
 T CEntityFactory<CInfoInstructorHintTarget>::Create(char const*)
 T CEntityFactory<CInfoInstructorHintTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoInstructorHintTarget>::GetEntitySize()
 T CEntityFactory<CInfoIntermission>::Create(char const*)
 T CEntityFactory<CInfoIntermission>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoIntermission>::GetEntitySize()
 T CEntityFactory<CInfoLadderDismount>::Create(char const*)
 T CEntityFactory<CInfoLadderDismount>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoLadderDismount>::GetEntitySize()
 T CEntityFactory<CInfoMassCenter>::Create(char const*)
 T CEntityFactory<CInfoMassCenter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoMassCenter>::GetEntitySize()
 T CEntityFactory<CInfoOverlayAccessor>::Create(char const*)
 T CEntityFactory<CInfoOverlayAccessor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoOverlayAccessor>::GetEntitySize()
 T CEntityFactory<CInfoRemarkable>::Create(char const*)
 T CEntityFactory<CInfoRemarkable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoRemarkable>::GetEntitySize()
 T CEntityFactory<CInfoTarget>::Create(char const*)
 T CEntityFactory<CInfoTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoTarget>::GetEntitySize()
 T CEntityFactory<CInfoViewParameters>::Create(char const*)
 T CEntityFactory<CInfoViewParameters>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoViewParameters>::GetEntitySize()
 T CEntityFactory<CInstancedSceneEntity>::Create(char const*)
 T CEntityFactory<CInstancedSceneEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInstancedSceneEntity>::GetEntitySize()
 T CEntityFactory<CItemAmmo338MAG>::Create(char const*)
 T CEntityFactory<CItemAmmo338MAG>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo338MAG>::GetEntitySize()
 T CEntityFactory<CItemAmmo357SIG>::Create(char const*)
 T CEntityFactory<CItemAmmo357SIG>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo357SIG>::GetEntitySize()
 T CEntityFactory<CItemAmmo357SIG_MIN>::Create(char const*)
 T CEntityFactory<CItemAmmo357SIG_MIN>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo357SIG_MIN>::GetEntitySize()
 T CEntityFactory<CItemAmmo357SIG_P250>::Create(char const*)
 T CEntityFactory<CItemAmmo357SIG_P250>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo357SIG_P250>::GetEntitySize()
 T CEntityFactory<CItemAmmo357SIG_SMALL>::Create(char const*)
 T CEntityFactory<CItemAmmo357SIG_SMALL>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo357SIG_SMALL>::GetEntitySize()
 T CEntityFactory<CItemAmmo45ACP>::Create(char const*)
 T CEntityFactory<CItemAmmo45ACP>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo45ACP>::GetEntitySize()
 T CEntityFactory<CItemAmmo50AE>::Create(char const*)
 T CEntityFactory<CItemAmmo50AE>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo50AE>::GetEntitySize()
 T CEntityFactory<CItemAmmo556MM>::Create(char const*)
 T CEntityFactory<CItemAmmo556MM>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo556MM>::GetEntitySize()
 T CEntityFactory<CItemAmmo556MM_BOX>::Create(char const*)
 T CEntityFactory<CItemAmmo556MM_BOX>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo556MM_BOX>::GetEntitySize()
 T CEntityFactory<CItemAmmo556MM_SMALL>::Create(char const*)
 T CEntityFactory<CItemAmmo556MM_SMALL>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo556MM_SMALL>::GetEntitySize()
 T CEntityFactory<CItemAmmo57MM>::Create(char const*)
 T CEntityFactory<CItemAmmo57MM>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo57MM>::GetEntitySize()
 T CEntityFactory<CItemAmmo762MM>::Create(char const*)
 T CEntityFactory<CItemAmmo762MM>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo762MM>::GetEntitySize()
 T CEntityFactory<CItemAmmo9MM>::Create(char const*)
 T CEntityFactory<CItemAmmo9MM>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmo9MM>::GetEntitySize()
 T CEntityFactory<CItemAmmoBuckshot>::Create(char const*)
 T CEntityFactory<CItemAmmoBuckshot>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAmmoBuckshot>::GetEntitySize()
 T CEntityFactory<CItemAssaultSuit>::Create(char const*)
 T CEntityFactory<CItemAssaultSuit>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemAssaultSuit>::GetEntitySize()
 T CEntityFactory<CItemDefuser>::Create(char const*)
 T CEntityFactory<CItemDefuser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemDefuser>::GetEntitySize()
 T CEntityFactory<CItemKevlar>::Create(char const*)
 T CEntityFactory<CItemKevlar>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemKevlar>::GetEntitySize()
 T CEntityFactory<CItemNvgs>::Create(char const*)
 T CEntityFactory<CItemNvgs>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemNvgs>::GetEntitySize()
 T CEntityFactory<CItemSoda>::Create(char const*)
 T CEntityFactory<CItemSoda>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemSoda>::GetEntitySize()
 T CEntityFactory<CKeepUpright>::Create(char const*)
 T CEntityFactory<CKeepUpright>::Destroy(IServerNetworkable*)
 T CEntityFactory<CKeepUpright>::GetEntitySize()
 T CEntityFactory<CKnife>::Create(char const*)
 T CEntityFactory<CKnife>::Destroy(IServerNetworkable*)
 T CEntityFactory<CKnife>::GetEntitySize()
 T CEntityFactory<CKnifeGG>::Create(char const*)
 T CEntityFactory<CKnifeGG>::Destroy(IServerNetworkable*)
 T CEntityFactory<CKnifeGG>::GetEntitySize()
 T CEntityFactory<CLight>::Create(char const*)
 T CEntityFactory<CLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLight>::GetEntitySize()
 T CEntityFactory<CLightGlow>::Create(char const*)
 T CEntityFactory<CLightGlow>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLightGlow>::GetEntitySize()
 T CEntityFactory<CLogicActiveAutosave>::Create(char const*)
 T CEntityFactory<CLogicActiveAutosave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicActiveAutosave>::GetEntitySize()
 T CEntityFactory<CLogicAuto>::Create(char const*)
 T CEntityFactory<CLogicAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicAuto>::GetEntitySize()
 T CEntityFactory<CLogicAutosave>::Create(char const*)
 T CEntityFactory<CLogicAutosave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicAutosave>::GetEntitySize()
 T CEntityFactory<CLogicBranch>::Create(char const*)
 T CEntityFactory<CLogicBranch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicBranch>::GetEntitySize()
 T CEntityFactory<CLogicBranchList>::Create(char const*)
 T CEntityFactory<CLogicBranchList>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicBranchList>::GetEntitySize()
 T CEntityFactory<CLogicCase>::Create(char const*)
 T CEntityFactory<CLogicCase>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCase>::GetEntitySize()
 T CEntityFactory<CLogicCollisionPair>::Create(char const*)
 T CEntityFactory<CLogicCollisionPair>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCollisionPair>::GetEntitySize()
 T CEntityFactory<CLogicCompare>::Create(char const*)
 T CEntityFactory<CLogicCompare>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCompare>::GetEntitySize()
 T CEntityFactory<CLogicCompareInteger>::Create(char const*)
 T CEntityFactory<CLogicCompareInteger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCompareInteger>::GetEntitySize()
 T CEntityFactory<CLogicEventListener>::Create(char const*)
 T CEntityFactory<CLogicEventListener>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicEventListener>::GetEntitySize()
 T CEntityFactory<CLogicEventListenerItemEquip>::Create(char const*)
 T CEntityFactory<CLogicEventListenerItemEquip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicEventListenerItemEquip>::GetEntitySize()
 T CEntityFactory<CLogicLineToEntity>::Create(char const*)
 T CEntityFactory<CLogicLineToEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicLineToEntity>::GetEntitySize()
 T CEntityFactory<CLogicMeasureMovement>::Create(char const*)
 T CEntityFactory<CLogicMeasureMovement>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicMeasureMovement>::GetEntitySize()
 T CEntityFactory<CLogicNavigation>::Create(char const*)
 T CEntityFactory<CLogicNavigation>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicNavigation>::GetEntitySize()
 T CEntityFactory<CLogicPlayMovie>::Create(char const*)
 T CEntityFactory<CLogicPlayMovie>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicPlayMovie>::GetEntitySize()
 T CEntityFactory<CLogicPlayerProxy>::Create(char const*)
 T CEntityFactory<CLogicPlayerProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicPlayerProxy>::GetEntitySize()
 T CEntityFactory<CLogicRandomOutputs>::Create(char const*)
 T CEntityFactory<CLogicRandomOutputs>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRandomOutputs>::GetEntitySize()
 T CEntityFactory<CLogicRegisterActivator>::Create(char const*)
 T CEntityFactory<CLogicRegisterActivator>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRegisterActivator>::GetEntitySize()
 T CEntityFactory<CLogicRelay>::Create(char const*)
 T CEntityFactory<CLogicRelay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRelay>::GetEntitySize()
 T CEntityFactory<CLogicScript>::Create(char const*)
 T CEntityFactory<CLogicScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicScript>::GetEntitySize()
 T CEntityFactory<CMapInfo>::Create(char const*)
 T CEntityFactory<CMapInfo>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMapInfo>::GetEntitySize()
 T CEntityFactory<CMaterialModifyControl>::Create(char const*)
 T CEntityFactory<CMaterialModifyControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMaterialModifyControl>::GetEntitySize()
 T CEntityFactory<CMathColorBlend>::Create(char const*)
 T CEntityFactory<CMathColorBlend>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathColorBlend>::GetEntitySize()
 T CEntityFactory<CMathCounter>::Create(char const*)
 T CEntityFactory<CMathCounter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathCounter>::GetEntitySize()
 T CEntityFactory<CMathRemap>::Create(char const*)
 T CEntityFactory<CMathRemap>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathRemap>::GetEntitySize()
 T CEntityFactory<CMessage>::Create(char const*)
 T CEntityFactory<CMessage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMessage>::GetEntitySize()
 T CEntityFactory<CMessageEntity>::Create(char const*)
 T CEntityFactory<CMessageEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMessageEntity>::GetEntitySize()
 T CEntityFactory<CMolotovGrenade>::Create(char const*)
 T CEntityFactory<CMolotovGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMolotovGrenade>::GetEntitySize()
 T CEntityFactory<CMolotovProjectile>::Create(char const*)
 T CEntityFactory<CMolotovProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMolotovProjectile>::GetEntitySize()
 T CEntityFactory<CMomentaryRotButton>::Create(char const*)
 T CEntityFactory<CMomentaryRotButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMomentaryRotButton>::GetEntitySize()
 T CEntityFactory<CMovementSpeedMod>::Create(char const*)
 T CEntityFactory<CMovementSpeedMod>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMovementSpeedMod>::GetEntitySize()
 T CEntityFactory<CMovieDisplay>::Create(char const*)
 T CEntityFactory<CMovieDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMovieDisplay>::GetEntitySize()
 T CEntityFactory<CMultiSource>::Create(char const*)
 T CEntityFactory<CMultiSource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMultiSource>::GetEntitySize()
 T CEntityFactory<CNPC_Furniture>::Create(char const*)
 T CEntityFactory<CNPC_Furniture>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_Furniture>::GetEntitySize()
 T CEntityFactory<CNPC_HearDanger>::Create(char const*)
 T CEntityFactory<CNPC_HearDanger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_HearDanger>::GetEntitySize()
 T CEntityFactory<CNPC_VehicleDriver>::Create(char const*)
 T CEntityFactory<CNPC_VehicleDriver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_VehicleDriver>::GetEntitySize()
 T CEntityFactory<CNoDefuseArea>::Create(char const*)
 T CEntityFactory<CNoDefuseArea>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNoDefuseArea>::GetEntitySize()
 T CEntityFactory<CNodeEnt>::Create(char const*)
 T CEntityFactory<CNodeEnt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNodeEnt>::GetEntitySize()
 T CEntityFactory<CNullEntity>::Create(char const*)
 T CEntityFactory<CNullEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNullEntity>::GetEntitySize()
 T CEntityFactory<COrnamentProp>::Create(char const*)
 T CEntityFactory<COrnamentProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<COrnamentProp>::GetEntitySize()
 T CEntityFactory<COuttroStats>::Create(char const*)
 T CEntityFactory<COuttroStats>::Destroy(IServerNetworkable*)
 T CEntityFactory<COuttroStats>::GetEntitySize()
 T CEntityFactory<CParticleFire>::Create(char const*)
 T CEntityFactory<CParticleFire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleFire>::GetEntitySize()
 T CEntityFactory<CParticleLight>::Create(char const*)
 T CEntityFactory<CParticleLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleLight>::GetEntitySize()
 T CEntityFactory<CParticlePerformanceMonitor>::Create(char const*)
 T CEntityFactory<CParticlePerformanceMonitor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticlePerformanceMonitor>::GetEntitySize()
 T CEntityFactory<CParticleSystem>::Create(char const*)
 T CEntityFactory<CParticleSystem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleSystem>::GetEntitySize()
 T CEntityFactory<CPathCorner>::Create(char const*)
 T CEntityFactory<CPathCorner>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathCorner>::GetEntitySize()
 T CEntityFactory<CPathCornerCrash>::Create(char const*)
 T CEntityFactory<CPathCornerCrash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathCornerCrash>::GetEntitySize()
 T CEntityFactory<CPathKeyFrame>::Create(char const*)
 T CEntityFactory<CPathKeyFrame>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathKeyFrame>::GetEntitySize()
 T CEntityFactory<CPathTrack>::Create(char const*)
 T CEntityFactory<CPathTrack>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathTrack>::GetEntitySize()
 T CEntityFactory<CPhysBallSocket>::Create(char const*)
 T CEntityFactory<CPhysBallSocket>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBallSocket>::GetEntitySize()
 T CEntityFactory<CPhysBox>::Create(char const*)
 T CEntityFactory<CPhysBox>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBox>::GetEntitySize()
 T CEntityFactory<CPhysBoxMultiplayer>::Create(char const*)
 T CEntityFactory<CPhysBoxMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBoxMultiplayer>::GetEntitySize()
 T CEntityFactory<CPhysConstraintSystem>::Create(char const*)
 T CEntityFactory<CPhysConstraintSystem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysConstraintSystem>::GetEntitySize()
 T CEntityFactory<CPhysConvert>::Create(char const*)
 T CEntityFactory<CPhysConvert>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysConvert>::GetEntitySize()
 T CEntityFactory<CPhysExplosion>::Create(char const*)
 T CEntityFactory<CPhysExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysExplosion>::GetEntitySize()
 T CEntityFactory<CPhysFixed>::Create(char const*)
 T CEntityFactory<CPhysFixed>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysFixed>::GetEntitySize()
 T CEntityFactory<CPhysHinge>::Create(char const*)
 T CEntityFactory<CPhysHinge>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysHinge>::GetEntitySize()
 T CEntityFactory<CPhysImpact>::Create(char const*)
 T CEntityFactory<CPhysImpact>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysImpact>::GetEntitySize()
 T CEntityFactory<CPhysLength>::Create(char const*)
 T CEntityFactory<CPhysLength>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysLength>::GetEntitySize()
 T CEntityFactory<CPhysMagnet>::Create(char const*)
 T CEntityFactory<CPhysMagnet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysMagnet>::GetEntitySize()
 T CEntityFactory<CPhysMotor>::Create(char const*)
 T CEntityFactory<CPhysMotor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysMotor>::GetEntitySize()
 T CEntityFactory<CPhysPulley>::Create(char const*)
 T CEntityFactory<CPhysPulley>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysPulley>::GetEntitySize()
 T CEntityFactory<CPhysSlideConstraint>::Create(char const*)
 T CEntityFactory<CPhysSlideConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysSlideConstraint>::GetEntitySize()
 T CEntityFactory<CPhysSphere>::Create(char const*)
 T CEntityFactory<CPhysSphere>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysSphere>::GetEntitySize()
 T CEntityFactory<CPhysThruster>::Create(char const*)
 T CEntityFactory<CPhysThruster>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysThruster>::GetEntitySize()
 T CEntityFactory<CPhysTorque>::Create(char const*)
 T CEntityFactory<CPhysTorque>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysTorque>::GetEntitySize()
 T CEntityFactory<CPhysicsCannister>::Create(char const*)
 T CEntityFactory<CPhysicsCannister>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsCannister>::GetEntitySize()
 T CEntityFactory<CPhysicsEntitySolver>::Create(char const*)
 T CEntityFactory<CPhysicsEntitySolver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsEntitySolver>::GetEntitySize()
 T CEntityFactory<CPhysicsNPCSolver>::Create(char const*)
 T CEntityFactory<CPhysicsNPCSolver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsNPCSolver>::GetEntitySize()
 T CEntityFactory<CPhysicsProp>::Create(char const*)
 T CEntityFactory<CPhysicsProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsProp>::GetEntitySize()
 T CEntityFactory<CPhysicsPropMultiplayer>::Create(char const*)
 T CEntityFactory<CPhysicsPropMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsPropMultiplayer>::GetEntitySize()
 T CEntityFactory<CPhysicsPropRespawnable>::Create(char const*)
 T CEntityFactory<CPhysicsPropRespawnable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsPropRespawnable>::GetEntitySize()
 T CEntityFactory<CPhysicsSpring>::Create(char const*)
 T CEntityFactory<CPhysicsSpring>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsSpring>::GetEntitySize()
 T CEntityFactory<CPhysicsWire>::Create(char const*)
 T CEntityFactory<CPhysicsWire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsWire>::GetEntitySize()
 T CEntityFactory<CPlantedC4>::Create(char const*)
 T CEntityFactory<CPlantedC4>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlantedC4>::GetEntitySize()
 T CEntityFactory<CPlantedC4Training>::Create(char const*)
 T CEntityFactory<CPlantedC4Training>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlantedC4Training>::GetEntitySize()
 T CEntityFactory<CPlasma>::Create(char const*)
 T CEntityFactory<CPlasma>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlasma>::GetEntitySize()
 T CEntityFactory<CPlayerResource>::Create(char const*)
 T CEntityFactory<CPlayerResource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlayerResource>::GetEntitySize()
 T CEntityFactory<CPointAngleSensor>::Create(char const*)
 T CEntityFactory<CPointAngleSensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointAngleSensor>::GetEntitySize()
 T CEntityFactory<CPointAngularVelocitySensor>::Create(char const*)
 T CEntityFactory<CPointAngularVelocitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointAngularVelocitySensor>::GetEntitySize()
 T CEntityFactory<CPointBonusMapsAccessor>::Create(char const*)
 T CEntityFactory<CPointBonusMapsAccessor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointBonusMapsAccessor>::GetEntitySize()
 T CEntityFactory<CPointBroadcastClientCommand>::Create(char const*)
 T CEntityFactory<CPointBroadcastClientCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointBroadcastClientCommand>::GetEntitySize()
 T CEntityFactory<CPointCamera>::Create(char const*)
 T CEntityFactory<CPointCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointCamera>::GetEntitySize()
 T CEntityFactory<CPointClientCommand>::Create(char const*)
 T CEntityFactory<CPointClientCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointClientCommand>::GetEntitySize()
 T CEntityFactory<CPointCommentaryNode>::Create(char const*)
 T CEntityFactory<CPointCommentaryNode>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointCommentaryNode>::GetEntitySize()
 T CEntityFactory<CPointDevShotCamera>::Create(char const*)
 T CEntityFactory<CPointDevShotCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointDevShotCamera>::GetEntitySize()
 T CEntityFactory<CPointEntity>::Create(char const*)
 T CEntityFactory<CPointEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointEntity>::GetEntitySize()
 T CEntityFactory<CPointEntityFinder>::Create(char const*)
 T CEntityFactory<CPointEntityFinder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointEntityFinder>::GetEntitySize()
 T CEntityFactory<CPointGamestatsCounter>::Create(char const*)
 T CEntityFactory<CPointGamestatsCounter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointGamestatsCounter>::GetEntitySize()
 T CEntityFactory<CPointHurt>::Create(char const*)
 T CEntityFactory<CPointHurt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointHurt>::GetEntitySize()
 T CEntityFactory<CPointPlayerMoveConstraint>::Create(char const*)
 T CEntityFactory<CPointPlayerMoveConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointPlayerMoveConstraint>::GetEntitySize()
 T CEntityFactory<CPointProximitySensor>::Create(char const*)
 T CEntityFactory<CPointProximitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointProximitySensor>::GetEntitySize()
 T CEntityFactory<CPointServerCommand>::Create(char const*)
 T CEntityFactory<CPointServerCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointServerCommand>::GetEntitySize()
 T CEntityFactory<CPointSpotlight>::Create(char const*)
 T CEntityFactory<CPointSpotlight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointSpotlight>::GetEntitySize()
 T CEntityFactory<CPointTeleport>::Create(char const*)
 T CEntityFactory<CPointTeleport>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointTeleport>::GetEntitySize()
 T CEntityFactory<CPointTemplate>::Create(char const*)
 T CEntityFactory<CPointTemplate>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointTemplate>::GetEntitySize()
 T CEntityFactory<CPointVelocitySensor>::Create(char const*)
 T CEntityFactory<CPointVelocitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointVelocitySensor>::GetEntitySize()
 T CEntityFactory<CPoseController>::Create(char const*)
 T CEntityFactory<CPoseController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPoseController>::GetEntitySize()
 T CEntityFactory<CPostProcessController>::Create(char const*)
 T CEntityFactory<CPostProcessController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPostProcessController>::GetEntitySize()
 T CEntityFactory<CPrecipitation>::Create(char const*)
 T CEntityFactory<CPrecipitation>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPrecipitation>::GetEntitySize()
 T CEntityFactory<CPrecipitationBlocker>::Create(char const*)
 T CEntityFactory<CPrecipitationBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPrecipitationBlocker>::GetEntitySize()
 T CEntityFactory<CPredictedViewModel>::Create(char const*)
 T CEntityFactory<CPredictedViewModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPredictedViewModel>::GetEntitySize()
 T CEntityFactory<CProjectedDecal>::Create(char const*)
 T CEntityFactory<CProjectedDecal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProjectedDecal>::GetEntitySize()
 T CEntityFactory<CPropDoorRotatingBreakable>::Create(char const*)
 T CEntityFactory<CPropDoorRotatingBreakable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropDoorRotatingBreakable>::GetEntitySize()
 T CEntityFactory<CPropVehicle>::Create(char const*)
 T CEntityFactory<CPropVehicle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicle>::GetEntitySize()
 T CEntityFactory<CPropVehicleDriveable>::Create(char const*)
 T CEntityFactory<CPropVehicleDriveable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicleDriveable>::GetEntitySize()
 T CEntityFactory<CProp_Hallucination>::Create(char const*)
 T CEntityFactory<CProp_Hallucination>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProp_Hallucination>::GetEntitySize()
 T CEntityFactory<CPushable>::Create(char const*)
 T CEntityFactory<CPushable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPushable>::GetEntitySize()
 T CEntityFactory<CRagGib>::Create(char const*)
 T CEntityFactory<CRagGib>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagGib>::GetEntitySize()
 T CEntityFactory<CRagdollBoogie>::Create(char const*)
 T CEntityFactory<CRagdollBoogie>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollBoogie>::GetEntitySize()
 T CEntityFactory<CRagdollConstraint>::Create(char const*)
 T CEntityFactory<CRagdollConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollConstraint>::GetEntitySize()
 T CEntityFactory<CRagdollMagnet>::Create(char const*)
 T CEntityFactory<CRagdollMagnet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollMagnet>::GetEntitySize()
 T CEntityFactory<CRagdollManager>::Create(char const*)
 T CEntityFactory<CRagdollManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollManager>::GetEntitySize()
 T CEntityFactory<CRagdollProp>::Create(char const*)
 T CEntityFactory<CRagdollProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollProp>::GetEntitySize()
 T CEntityFactory<CRagdollPropAttached>::Create(char const*)
 T CEntityFactory<CRagdollPropAttached>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollPropAttached>::GetEntitySize()
 T CEntityFactory<CRallyPoint>::Create(char const*)
 T CEntityFactory<CRallyPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRallyPoint>::GetEntitySize()
 T CEntityFactory<CRevertSaved>::Create(char const*)
 T CEntityFactory<CRevertSaved>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRevertSaved>::GetEntitySize()
 T CEntityFactory<CRopeAnchor>::Create(char const*)
 T CEntityFactory<CRopeAnchor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRopeAnchor>::GetEntitySize()
 T CEntityFactory<CRopeKeyframe>::Create(char const*)
 T CEntityFactory<CRopeKeyframe>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRopeKeyframe>::GetEntitySize()
 T CEntityFactory<CRotButton>::Create(char const*)
 T CEntityFactory<CRotButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotButton>::GetEntitySize()
 T CEntityFactory<CRotDoor>::Create(char const*)
 T CEntityFactory<CRotDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotDoor>::GetEntitySize()
 T CEntityFactory<CRotorWashShooter>::Create(char const*)
 T CEntityFactory<CRotorWashShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotorWashShooter>::GetEntitySize()
 T CEntityFactory<CSCAR17>::Create(char const*)
 T CEntityFactory<CSCAR17>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSCAR17>::GetEntitySize()
 T CEntityFactory<CSceneEntity>::Create(char const*)
 T CEntityFactory<CSceneEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneEntity>::GetEntitySize()
 T CEntityFactory<CSceneListManager>::Create(char const*)
 T CEntityFactory<CSceneListManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneListManager>::GetEntitySize()
 T CEntityFactory<CSceneManager>::Create(char const*)
 T CEntityFactory<CSceneManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneManager>::GetEntitySize()
 T CEntityFactory<CScriptedTarget>::Create(char const*)
 T CEntityFactory<CScriptedTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CScriptedTarget>::GetEntitySize()
 T CEntityFactory<CServerRagdollTrigger>::Create(char const*)
 T CEntityFactory<CServerRagdollTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CServerRagdollTrigger>::GetEntitySize()
 T CEntityFactory<CShadowControl>::Create(char const*)
 T CEntityFactory<CShadowControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CShadowControl>::GetEntitySize()
 T CEntityFactory<CShower>::Create(char const*)
 T CEntityFactory<CShower>::Destroy(IServerNetworkable*)
 T CEntityFactory<CShower>::GetEntitySize()
 T CEntityFactory<CSimplePhysicsBrush>::Create(char const*)
 T CEntityFactory<CSimplePhysicsBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSimplePhysicsBrush>::GetEntitySize()
 T CEntityFactory<CSimplePhysicsProp>::Create(char const*)
 T CEntityFactory<CSimplePhysicsProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSimplePhysicsProp>::GetEntitySize()
 T CEntityFactory<CSkyCamera>::Create(char const*)
 T CEntityFactory<CSkyCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSkyCamera>::GetEntitySize()
 T CEntityFactory<CSkyboxSwapper>::Create(char const*)
 T CEntityFactory<CSkyboxSwapper>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSkyboxSwapper>::GetEntitySize()
 T CEntityFactory<CSlideshowDisplay>::Create(char const*)
 T CEntityFactory<CSlideshowDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSlideshowDisplay>::GetEntitySize()
 T CEntityFactory<CSmokeGrenade>::Create(char const*)
 T CEntityFactory<CSmokeGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSmokeGrenade>::GetEntitySize()
 T CEntityFactory<CSmokeGrenadeProjectile>::Create(char const*)
 T CEntityFactory<CSmokeGrenadeProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSmokeGrenadeProjectile>::GetEntitySize()
 T CEntityFactory<CSmokeStack>::Create(char const*)
 T CEntityFactory<CSmokeStack>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSmokeStack>::GetEntitySize()
 T CEntityFactory<CSoundEnt>::Create(char const*)
 T CEntityFactory<CSoundEnt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSoundEnt>::GetEntitySize()
 T CEntityFactory<CSpotlightEnd>::Create(char const*)
 T CEntityFactory<CSpotlightEnd>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpotlightEnd>::GetEntitySize()
 T CEntityFactory<CSprayCan>::Create(char const*)
 T CEntityFactory<CSprayCan>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSprayCan>::GetEntitySize()
 T CEntityFactory<CSprite>::Create(char const*)
 T CEntityFactory<CSprite>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSprite>::GetEntitySize()
 T CEntityFactory<CSpriteOriented>::Create(char const*)
 T CEntityFactory<CSpriteOriented>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpriteOriented>::GetEntitySize()
 T CEntityFactory<CSpriteTrail>::Create(char const*)
 T CEntityFactory<CSpriteTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpriteTrail>::GetEntitySize()
 T CEntityFactory<CStatueProp>::Create(char const*)
 T CEntityFactory<CStatueProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CStatueProp>::GetEntitySize()
 T CEntityFactory<CSteamJet>::Create(char const*)
 T CEntityFactory<CSteamJet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSteamJet>::GetEntitySize()
 T CEntityFactory<CStripWeapons>::Create(char const*)
 T CEntityFactory<CStripWeapons>::Destroy(IServerNetworkable*)
 T CEntityFactory<CStripWeapons>::GetEntitySize()
 T CEntityFactory<CSun>::Create(char const*)
 T CEntityFactory<CSun>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSun>::GetEntitySize()
 T CEntityFactory<CSunlightShadowControl>::Create(char const*)
 T CEntityFactory<CSunlightShadowControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSunlightShadowControl>::GetEntitySize()
 T CEntityFactory<CSurroundTest>::Create(char const*)
 T CEntityFactory<CSurroundTest>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSurroundTest>::GetEntitySize()
 T CEntityFactory<CTankTargetChange>::Create(char const*)
 T CEntityFactory<CTankTargetChange>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTankTargetChange>::GetEntitySize()
 T CEntityFactory<CTankTrainAI>::Create(char const*)
 T CEntityFactory<CTankTrainAI>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTankTrainAI>::GetEntitySize()
 T CEntityFactory<CTargetCDAudioRep>::Create(char const*)
 T CEntityFactory<CTargetCDAudioRep>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTargetCDAudioRep>::GetEntitySize()
 T CEntityFactory<CTargetChangeGravity>::Create(char const*)
 T CEntityFactory<CTargetChangeGravity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTargetChangeGravity>::GetEntitySize()
 T CEntityFactory<CTeam>::Create(char const*)
 T CEntityFactory<CTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeam>::GetEntitySize()
 T CEntityFactory<CTeamSpawnPoint>::Create(char const*)
 T CEntityFactory<CTeamSpawnPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeamSpawnPoint>::GetEntitySize()
 T CEntityFactory<CTeamVehicleSpawnPoint>::Create(char const*)
 T CEntityFactory<CTeamVehicleSpawnPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeamVehicleSpawnPoint>::GetEntitySize()
 T CEntityFactory<CTempEntTester>::Create(char const*)
 T CEntityFactory<CTempEntTester>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTempEntTester>::GetEntitySize()
 T CEntityFactory<CTesla>::Create(char const*)
 T CEntityFactory<CTesla>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTesla>::GetEntitySize()
 T CEntityFactory<CTestEffect>::Create(char const*)
 T CEntityFactory<CTestEffect>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTestEffect>::GetEntitySize()
 T CEntityFactory<CTestTraceline>::Create(char const*)
 T CEntityFactory<CTestTraceline>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTestTraceline>::GetEntitySize()
 T CEntityFactory<CTest_ProxyToggle_Networkable>::Create(char const*)
 T CEntityFactory<CTest_ProxyToggle_Networkable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTest_ProxyToggle_Networkable>::GetEntitySize()
 T CEntityFactory<CTextureToggle>::Create(char const*)
 T CEntityFactory<CTextureToggle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTextureToggle>::GetEntitySize()
 T CEntityFactory<CTimerEntity>::Create(char const*)
 T CEntityFactory<CTimerEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTimerEntity>::GetEntitySize()
 T CEntityFactory<CTonemapTrigger>::Create(char const*)
 T CEntityFactory<CTonemapTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTonemapTrigger>::GetEntitySize()
 T CEntityFactory<CTriggerAutoCrouch>::Create(char const*)
 T CEntityFactory<CTriggerAutoCrouch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerAutoCrouch>::GetEntitySize()
 T CEntityFactory<CTriggerBombReset>::Create(char const*)
 T CEntityFactory<CTriggerBombReset>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerBombReset>::GetEntitySize()
 T CEntityFactory<CTriggerBrush>::Create(char const*)
 T CEntityFactory<CTriggerBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerBrush>::GetEntitySize()
 T CEntityFactory<CTriggerCDAudio>::Create(char const*)
 T CEntityFactory<CTriggerCDAudio>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCDAudio>::GetEntitySize()
 T CEntityFactory<CTriggerCamera>::Create(char const*)
 T CEntityFactory<CTriggerCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCamera>::GetEntitySize()
 T CEntityFactory<CTriggerCameraMultiplayer>::Create(char const*)
 T CEntityFactory<CTriggerCameraMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCameraMultiplayer>::GetEntitySize()
 T CEntityFactory<CTriggerGravity>::Create(char const*)
 T CEntityFactory<CTriggerGravity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerGravity>::GetEntitySize()
 T CEntityFactory<CTriggerHierarchy>::Create(char const*)
 T CEntityFactory<CTriggerHierarchy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerHierarchy>::GetEntitySize()
 T CEntityFactory<CTriggerHurt>::Create(char const*)
 T CEntityFactory<CTriggerHurt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerHurt>::GetEntitySize()
 T CEntityFactory<CTriggerImpact>::Create(char const*)
 T CEntityFactory<CTriggerImpact>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerImpact>::GetEntitySize()
 T CEntityFactory<CTriggerLook>::Create(char const*)
 T CEntityFactory<CTriggerLook>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerLook>::GetEntitySize()
 T CEntityFactory<CTriggerMultiple>::Create(char const*)
 T CEntityFactory<CTriggerMultiple>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerMultiple>::GetEntitySize()
 T CEntityFactory<CTriggerOnce>::Create(char const*)
 T CEntityFactory<CTriggerOnce>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerOnce>::GetEntitySize()
 T CEntityFactory<CTriggerPlayerMovement>::Create(char const*)
 T CEntityFactory<CTriggerPlayerMovement>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPlayerMovement>::GetEntitySize()
 T CEntityFactory<CTriggerProximity>::Create(char const*)
 T CEntityFactory<CTriggerProximity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerProximity>::GetEntitySize()
 T CEntityFactory<CTriggerPush>::Create(char const*)
 T CEntityFactory<CTriggerPush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPush>::GetEntitySize()
 T CEntityFactory<CTriggerRemove>::Create(char const*)
 T CEntityFactory<CTriggerRemove>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerRemove>::GetEntitySize()
 T CEntityFactory<CTriggerSave>::Create(char const*)
 T CEntityFactory<CTriggerSave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerSave>::GetEntitySize()
 T CEntityFactory<CTriggerSoundscape>::Create(char const*)
 T CEntityFactory<CTriggerSoundscape>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerSoundscape>::GetEntitySize()
 T CEntityFactory<CTriggerTeleport>::Create(char const*)
 T CEntityFactory<CTriggerTeleport>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerTeleport>::GetEntitySize()
 T CEntityFactory<CTriggerToggleSave>::Create(char const*)
 T CEntityFactory<CTriggerToggleSave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerToggleSave>::GetEntitySize()
 T CEntityFactory<CTriggerVPhysicsMotion>::Create(char const*)
 T CEntityFactory<CTriggerVPhysicsMotion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerVPhysicsMotion>::GetEntitySize()
 T CEntityFactory<CTriggerViewProxy>::Create(char const*)
 T CEntityFactory<CTriggerViewProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerViewProxy>::GetEntitySize()
 T CEntityFactory<CTriggerVolume>::Create(char const*)
 T CEntityFactory<CTriggerVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerVolume>::GetEntitySize()
 T CEntityFactory<CTriggerWind>::Create(char const*)
 T CEntityFactory<CTriggerWind>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerWind>::GetEntitySize()
 T CEntityFactory<CVGuiScreen>::Create(char const*)
 T CEntityFactory<CVGuiScreen>::Destroy(IServerNetworkable*)
 T CEntityFactory<CVGuiScreen>::GetEntitySize()
 T CEntityFactory<CVoteController>::Create(char const*)
 T CEntityFactory<CVoteController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CVoteController>::GetEntitySize()
 T CEntityFactory<CWC_UpdateIgnoreList>::Create(char const*)
 T CEntityFactory<CWC_UpdateIgnoreList>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWC_UpdateIgnoreList>::GetEntitySize()
 T CEntityFactory<CWaterBullet>::Create(char const*)
 T CEntityFactory<CWaterBullet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWaterBullet>::GetEntitySize()
 T CEntityFactory<CWaterLODControl>::Create(char const*)
 T CEntityFactory<CWaterLODControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWaterLODControl>::GetEntitySize()
 T CEntityFactory<CWeaponAWP>::Create(char const*)
 T CEntityFactory<CWeaponAWP>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponAWP>::GetEntitySize()
 T CEntityFactory<CWeaponAug>::Create(char const*)
 T CEntityFactory<CWeaponAug>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponAug>::GetEntitySize()
 T CEntityFactory<CWeaponBizon>::Create(char const*)
 T CEntityFactory<CWeaponBizon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponBizon>::GetEntitySize()
 T CEntityFactory<CWeaponCSBase>::Create(char const*)
 T CEntityFactory<CWeaponCSBase>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponCSBase>::GetEntitySize()
 T CEntityFactory<CWeaponCSBaseGun>::Create(char const*)
 T CEntityFactory<CWeaponCSBaseGun>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponCSBaseGun>::GetEntitySize()
 T CEntityFactory<CWeaponCycler>::Create(char const*)
 T CEntityFactory<CWeaponCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponCycler>::GetEntitySize()
 T CEntityFactory<CWeaponElite>::Create(char const*)
 T CEntityFactory<CWeaponElite>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponElite>::GetEntitySize()
 T CEntityFactory<CWeaponFamas>::Create(char const*)
 T CEntityFactory<CWeaponFamas>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponFamas>::GetEntitySize()
 T CEntityFactory<CWeaponFiveSeven>::Create(char const*)
 T CEntityFactory<CWeaponFiveSeven>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponFiveSeven>::GetEntitySize()
 T CEntityFactory<CWeaponG3SG1>::Create(char const*)
 T CEntityFactory<CWeaponG3SG1>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponG3SG1>::GetEntitySize()
 T CEntityFactory<CWeaponGalil>::Create(char const*)
 T CEntityFactory<CWeaponGalil>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponGalil>::GetEntitySize()
 T CEntityFactory<CWeaponGalilAR>::Create(char const*)
 T CEntityFactory<CWeaponGalilAR>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponGalilAR>::GetEntitySize()
 T CEntityFactory<CWeaponGlock>::Create(char const*)
 T CEntityFactory<CWeaponGlock>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponGlock>::GetEntitySize()
 T CEntityFactory<CWeaponHKP2000>::Create(char const*)
 T CEntityFactory<CWeaponHKP2000>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponHKP2000>::GetEntitySize()
 T CEntityFactory<CWeaponM249>::Create(char const*)
 T CEntityFactory<CWeaponM249>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponM249>::GetEntitySize()
 T CEntityFactory<CWeaponM3>::Create(char const*)
 T CEntityFactory<CWeaponM3>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponM3>::GetEntitySize()
 T CEntityFactory<CWeaponM4A1>::Create(char const*)
 T CEntityFactory<CWeaponM4A1>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponM4A1>::GetEntitySize()
 T CEntityFactory<CWeaponMAC10>::Create(char const*)
 T CEntityFactory<CWeaponMAC10>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponMAC10>::GetEntitySize()
 T CEntityFactory<CWeaponMP5Navy>::Create(char const*)
 T CEntityFactory<CWeaponMP5Navy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponMP5Navy>::GetEntitySize()
 T CEntityFactory<CWeaponMP7>::Create(char const*)
 T CEntityFactory<CWeaponMP7>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponMP7>::GetEntitySize()
 T CEntityFactory<CWeaponMP9>::Create(char const*)
 T CEntityFactory<CWeaponMP9>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponMP9>::GetEntitySize()
 T CEntityFactory<CWeaponMag7>::Create(char const*)
 T CEntityFactory<CWeaponMag7>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponMag7>::GetEntitySize()
 T CEntityFactory<CWeaponNOVA>::Create(char const*)
 T CEntityFactory<CWeaponNOVA>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponNOVA>::GetEntitySize()
 T CEntityFactory<CWeaponNegev>::Create(char const*)
 T CEntityFactory<CWeaponNegev>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponNegev>::GetEntitySize()
 T CEntityFactory<CWeaponP228>::Create(char const*)
 T CEntityFactory<CWeaponP228>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponP228>::GetEntitySize()
 T CEntityFactory<CWeaponP250>::Create(char const*)
 T CEntityFactory<CWeaponP250>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponP250>::GetEntitySize()
 T CEntityFactory<CWeaponP90>::Create(char const*)
 T CEntityFactory<CWeaponP90>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponP90>::GetEntitySize()
 T CEntityFactory<CWeaponSCAR20>::Create(char const*)
 T CEntityFactory<CWeaponSCAR20>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSCAR20>::GetEntitySize()
 T CEntityFactory<CWeaponSG550>::Create(char const*)
 T CEntityFactory<CWeaponSG550>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSG550>::GetEntitySize()
 T CEntityFactory<CWeaponSG552>::Create(char const*)
 T CEntityFactory<CWeaponSG552>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSG552>::GetEntitySize()
 T CEntityFactory<CWeaponSG556>::Create(char const*)
 T CEntityFactory<CWeaponSG556>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSG556>::GetEntitySize()
 T CEntityFactory<CWeaponSSG08>::Create(char const*)
 T CEntityFactory<CWeaponSSG08>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSSG08>::GetEntitySize()
 T CEntityFactory<CWeaponSawedoff>::Create(char const*)
 T CEntityFactory<CWeaponSawedoff>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponSawedoff>::GetEntitySize()
 T CEntityFactory<CWeaponScout>::Create(char const*)
 T CEntityFactory<CWeaponScout>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponScout>::GetEntitySize()
 T CEntityFactory<CWeaponTMP>::Create(char const*)
 T CEntityFactory<CWeaponTMP>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponTMP>::GetEntitySize()
 T CEntityFactory<CWeaponTaser>::Create(char const*)
 T CEntityFactory<CWeaponTaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponTaser>::GetEntitySize()
 T CEntityFactory<CWeaponTec9>::Create(char const*)
 T CEntityFactory<CWeaponTec9>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponTec9>::GetEntitySize()
 T CEntityFactory<CWeaponUMP45>::Create(char const*)
 T CEntityFactory<CWeaponUMP45>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponUMP45>::GetEntitySize()
 T CEntityFactory<CWeaponUSP>::Create(char const*)
 T CEntityFactory<CWeaponUSP>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponUSP>::GetEntitySize()
 T CEntityFactory<CWeaponXM1014>::Create(char const*)
 T CEntityFactory<CWeaponXM1014>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponXM1014>::GetEntitySize()
 T CEntityFactory<CWeightButton>::Create(char const*)
 T CEntityFactory<CWeightButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeightButton>::GetEntitySize()
 T CEntityFactory<CWindowPane>::Create(char const*)
 T CEntityFactory<CWindowPane>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWindowPane>::GetEntitySize()
 T CEntityFactory<CWorld>::Create(char const*)
 T CEntityFactory<CWorld>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWorld>::GetEntitySize()
 T CEntityFactory<CWorldItem>::Create(char const*)
 T CEntityFactory<CWorldItem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWorldItem>::GetEntitySize()
 T CEntityFactory<CWreckage>::Create(char const*)
 T CEntityFactory<CWreckage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWreckage>::GetEntitySize()
 T CEntityFactory<DustTrail>::Create(char const*)
 T CEntityFactory<DustTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<DustTrail>::GetEntitySize()
 T CEntityFactory<FilterDamageType>::Create(char const*)
 T CEntityFactory<FilterDamageType>::Destroy(IServerNetworkable*)
 T CEntityFactory<FilterDamageType>::GetEntitySize()
 T CEntityFactory<FilterTeam>::Create(char const*)
 T CEntityFactory<FilterTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<FilterTeam>::GetEntitySize()
 T CEntityFactory<MovieExplosion>::Create(char const*)
 T CEntityFactory<MovieExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<MovieExplosion>::GetEntitySize()
 T CEntityFactory<ParticleSmokeGrenade>::Create(char const*)
 T CEntityFactory<ParticleSmokeGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<ParticleSmokeGrenade>::GetEntitySize()
 T CEntityFactory<RocketTrail>::Create(char const*)
 T CEntityFactory<RocketTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<RocketTrail>::GetEntitySize()
 T CEntityFactory<SmokeTrail>::Create(char const*)
 T CEntityFactory<SmokeTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<SmokeTrail>::GetEntitySize()
 T CEntityFactory<SpawnPoint>::Create(char const*)
 T CEntityFactory<SpawnPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<SpawnPoint>::GetEntitySize()
 T CEntityFactory<SporeExplosion>::Create(char const*)
 T CEntityFactory<SporeExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<SporeExplosion>::GetEntitySize()
 T CEntityFactory<SporeTrail>::Create(char const*)
 T CEntityFactory<SporeTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<SporeTrail>::GetEntitySize()
 T CEntityFactoryDictionary::Create(char const*)
 T CEntityFactoryDictionary::Destroy(char const*, IServerNetworkable*)
 T CEntityFactoryDictionary::FindFactory(char const*)
 T CEntityFactoryDictionary::GetCannonicalName(char const*)
 T CEntityFactoryDictionary::InstallFactory(IEntityFactory*, char const*)
 T CEntityFactoryDictionary::ReportEntitySizes()
 T CEntityFactoryDictionary::~CEntityFactoryDictionary()
 T CEntityFlame::Activate()
 T CEntityFlame::AttachToEntity(CBaseEntity*)
 T CEntityFlame::CEntityFlame()
 T CEntityFlame::Create(CBaseEntity*, float, float, bool)
 T CEntityFlame::FlameThink()
 T CEntityFlame::GetDataDescMap()
 T CEntityFlame::GetRemainingLife() const
 T CEntityFlame::GetServerClass()
 T CEntityFlame::Precache()
 T CEntityFlame::SetLifetime(float)
 T CEntityFlame::Spawn()
 T CEntityFlame::UpdateOnRemove()
 T CEntityFlame::UseCheapEffect(bool)
 T CEntityFlame::YouForgotToImplementOrDeclareServerClass()
 T CEntityFlame::~CEntityFlame()
 T CEntityFreezing::FinishFreezing()
 T CEntityFreezing::GetDataDescMap()
 T CEntityFreezing::GetServerClass()
 T CEntityFreezing::InputFreeze(inputdata_t&)
 T CEntityFreezing::Precache()
 T CEntityFreezing::Spawn()
 T CEntityFreezing::YouForgotToImplementOrDeclareServerClass()
 T CEntityFreezing::~CEntityFreezing()
 T CEntityList::AddEntity(CBaseEntity*)
 T CEntityList::CEntityList()
 T CEntityList::DeleteEntity(CBaseEntity*)
 T CEntityList::~CEntityList()
 T CEntityListSystem::FrameUpdatePostEntityThink()
 T CEntityListSystem::LevelInitPreEntity()
 T CEntityListSystem::LevelShutdownPostEntity()
 T CEntityListSystem::LevelShutdownPreEntity()
 T CEntityListSystem::~CEntityListSystem()
 T CEntityMapData::CurrentBufferPosition()
 T CEntityMapData::ExtractValue(char const*, char*)
 T CEntityMapData::GetFirstKey(char*, char*)
 T CEntityMapData::GetNextKey(char*, char*)
 T CEntityMapData::SetValue(char const*, char*, int)
 T CEntityParticleTrail* _CreateEntityTemplate<CEntityParticleTrail>(CEntityParticleTrail*, char const*)
 T CEntityParticleTrail::Create(CBaseEntity*, EntityParticleTrailInfo_t const&, CBaseEntity*)
 T CEntityParticleTrail::Destroy(CBaseEntity*, EntityParticleTrailInfo_t const&)
 T CEntityParticleTrail::GetDataDescMap()
 T CEntityParticleTrail::GetServerClass()
 T CEntityParticleTrail::NetworkVar_m_Info::NetworkStateChanged()
 T CEntityParticleTrail::NetworkVar_m_Info::NetworkStateChanged(void*)
 T CEntityParticleTrail::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CEntityParticleTrail::SetTransmit(CCheckTransmitInfo*, bool)
 T CEntityParticleTrail::Spawn()
 T CEntityParticleTrail::UpdateOnRemove()
 T CEntityParticleTrail::YouForgotToImplementOrDeclareServerClass()
 T CEntityParticleTrail::~CEntityParticleTrail()
 T CEntitySaveRestoreBlockHandler::DoRestoreEntity(CBaseEntity*, IRestore*)
 T CEntitySaveRestoreBlockHandler::FindGlobalEntity(string_t, string_t)
 T CEntitySaveRestoreBlockHandler::GetBlockName()
 T CEntitySaveRestoreBlockHandler::PostRestore()
 T CEntitySaveRestoreBlockHandler::PostSave()
 T CEntitySaveRestoreBlockHandler::PreRestore()
 T CEntitySaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CEntitySaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CEntitySaveRestoreBlockHandler::RestoreEntity(CBaseEntity*, IRestore*, entitytable_t*)
 T CEntitySaveRestoreBlockHandler::RestoreGlobalEntity(CBaseEntity*, CSaveRestoreData*, entitytable_t*)
 T CEntitySaveRestoreBlockHandler::Save(ISave*)
 T CEntitySaveRestoreBlockHandler::SaveInitEntities(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CEntitySaveUtils::AddLevelTransitionSaveDependency(CBaseEntity*, CBaseEntity*)
 T CEntitySaveUtils::GetEntityDependencies(CBaseEntity*, int, CBaseEntity**)
 T CEntitySaveUtils::GetEntityDependencyCount(CBaseEntity*)
 T CEntitySphereQuery::CEntitySphereQuery(Vector const&, float, int)
 T CEntitySphereQuery::GetCurrentEntity()
 T CEntityTouchManager::FrameUpdatePostEntityThink()
 T CEntityTouchManager::LevelShutdownPostEntity()
 T CEntityTouchManager::OnEntityCreated(CBaseEntity*)
 T CEntityTouchManager::OnEntityDeleted(CBaseEntity*)
 T CEntityTouchManager::~CEntityTouchManager()
 T CEnvAmbientLight::GetDataDescMap()
 T CEnvAmbientLight::GetServerClass()
 T CEnvAmbientLight::InputSetColor(inputdata_t&)
 T CEnvAmbientLight::Spawn()
 T CEnvAmbientLight::YouForgotToImplementOrDeclareServerClass()
 T CEnvAmbientLight::~CEnvAmbientLight()
 T CEnvBeam::Activate()
 T CEnvBeam::BeamUpdateVars()
 T CEnvBeam::GetDataDescMap()
 T CEnvBeam::GetDecalName()
 T CEnvBeam::InputStrikeOnce(inputdata_t&)
 T CEnvBeam::InputToggle(inputdata_t&)
 T CEnvBeam::InputTurnOff(inputdata_t&)
 T CEnvBeam::InputTurnOn(inputdata_t&)
 T CEnvBeam::PassesTouchFilters(CBaseEntity*)
 T CEnvBeam::Precache()
 T CEnvBeam::RandomArea()
 T CEnvBeam::RandomPoint(Vector const&)
 T CEnvBeam::Spawn()
 T CEnvBeam::Strike()
 T CEnvBeam::StrikeThink()
 T CEnvBeam::TurnOn()
 T CEnvBeam::UpdateThink()
 T CEnvBeam::Zap(Vector const&, Vector const&)
 T CEnvBeam::~CEnvBeam()
 T CEnvBeverage::GetDataDescMap()
 T CEnvBeverage::InputActivate(inputdata_t&)
 T CEnvBeverage::KeyValue(char const*, char const*)
 T CEnvBeverage::Precache()
 T CEnvBeverage::Spawn()
 T CEnvBeverage::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEnvBeverage::~CEnvBeverage()
 T CEnvDOFController::Activate()
 T CEnvDOFController::GetDataDescMap()
 T CEnvDOFController::GetServerClass()
 T CEnvDOFController::InputSetFarBlurDepth(inputdata_t&)
 T CEnvDOFController::InputSetFarBlurRadius(inputdata_t&)
 T CEnvDOFController::InputSetFarFocusDepth(inputdata_t&)
 T CEnvDOFController::InputSetFocusTarget(inputdata_t&)
 T CEnvDOFController::InputSetFocusTargetRange(inputdata_t&)
 T CEnvDOFController::InputSetNearBlurDepth(inputdata_t&)
 T CEnvDOFController::InputSetNearBlurRadius(inputdata_t&)
 T CEnvDOFController::InputSetNearFocusDepth(inputdata_t&)
 T CEnvDOFController::Spawn()
 T CEnvDOFController::UpdateParamBlend()
 T CEnvDOFController::UpdateTransmitState()
 T CEnvDOFController::YouForgotToImplementOrDeclareServerClass()
 T CEnvDOFController::~CEnvDOFController()
 T CEnvDetailController::GetServerClass()
 T CEnvDetailController::KeyValue(char const*, char const*)
 T CEnvDetailController::UpdateTransmitState()
 T CEnvDetailController::YouForgotToImplementOrDeclareServerClass()
 T CEnvDetailController::~CEnvDetailController()
 T CEnvDustPuff::GetDataDescMap()
 T CEnvDustPuff::InputSpawnDust(inputdata_t&)
 T CEnvDustPuff::~CEnvDustPuff()
 T CEnvEffectsScript::GetDataDescMap()
 T CEnvEffectsScript::HandleAnimEvent(animevent_t*)
 T CEnvEffectsScript::InputSetSequence(inputdata_t&)
 T CEnvEffectsScript::ParseNewEffect()
 T CEnvEffectsScript::ParseScriptFile()
 T CEnvEffectsScript::Precache()
 T CEnvEffectsScript::Spawn()
 T CEnvEffectsScript::SpriteEffectEvent(CEffectScriptElement*)
 T CEnvEffectsScript::Think()
 T CEnvEffectsScript::TrailEffectEvent(CEffectScriptElement*)
 T CEnvEffectsScript::UpdateTransmitState()
 T CEnvEffectsScript::~CEnvEffectsScript()
 T CEnvEntityIgniter::GetDataDescMap()
 T CEnvEntityIgniter::InputIgnite(inputdata_t&)
 T CEnvEntityIgniter::Precache()
 T CEnvEntityIgniter::~CEnvEntityIgniter()
 T CEnvEntityMaker::Activate()
 T CEnvEntityMaker::CheckSpawnThink()
 T CEnvEntityMaker::GetDataDescMap()
 T CEnvEntityMaker::GetScriptDesc()
 T CEnvEntityMaker::HasRoomToSpawn()
 T CEnvEntityMaker::InputForceSpawn(inputdata_t&)
 T CEnvEntityMaker::InputForceSpawnAtEntityOrigin(inputdata_t&)
 T CEnvEntityMaker::IsPlayerLooking()
 T CEnvEntityMaker::Spawn()
 T CEnvEntityMaker::SpawnEntity(Vector, QAngle)
 T CEnvEntityMaker::SpawnEntityAtEntityOriginFromScript(HSCRIPT__*)
 T CEnvEntityMaker::SpawnEntityAtLocationFromScript(Vector const&, Vector const&)
 T CEnvEntityMaker::SpawnEntityAtNamedEntityOriginFromScript(char const*)
 T CEnvEntityMaker::SpawnEntityFromScript()
 T CEnvEntityMaker::~CEnvEntityMaker()
 T CEnvExplosion::DrawDebugTextOverlays()
 T CEnvExplosion::GetDataDescMap()
 T CEnvExplosion::InputExplode(inputdata_t&)
 T CEnvExplosion::KeyValue(char const*, char const*)
 T CEnvExplosion::Precache()
 T CEnvExplosion::Smoke()
 T CEnvExplosion::Spawn()
 T CEnvExplosion::~CEnvExplosion()
 T CEnvFade::DrawDebugTextOverlays()
 T CEnvFade::GetDataDescMap()
 T CEnvFade::InputFade(inputdata_t&)
 T CEnvFade::InputReverseFade(inputdata_t&)
 T CEnvFade::Spawn()
 T CEnvFade::~CEnvFade()
 T CEnvFireSensor::GetDataDescMap()
 T CEnvFireSensor::InputDisable(inputdata_t&)
 T CEnvFireSensor::InputEnable(inputdata_t&)
 T CEnvFireSensor::Spawn()
 T CEnvFireSensor::Think()
 T CEnvFireSensor::~CEnvFireSensor()
 T CEnvFireSource::GetDataDescMap()
 T CEnvFireSource::InputDisable(inputdata_t&)
 T CEnvFireSource::InputEnable(inputdata_t&)
 T CEnvFireSource::Spawn()
 T CEnvFireSource::Think()
 T CEnvFireSource::~CEnvFireSource()
 T CEnvFunnel::GetDataDescMap()
 T CEnvFunnel::Precache()
 T CEnvFunnel::Spawn()
 T CEnvFunnel::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEnvFunnel::~CEnvFunnel()
 T CEnvGlobal::DrawDebugTextOverlays()
 T CEnvGlobal::GetDataDescMap()
 T CEnvGlobal::InputAddToCounter(inputdata_t&)
 T CEnvGlobal::InputGetCounter(inputdata_t&)
 T CEnvGlobal::InputRemove(inputdata_t&)
 T CEnvGlobal::InputSetCounter(inputdata_t&)
 T CEnvGlobal::InputToggle(inputdata_t&)
 T CEnvGlobal::InputTurnOff(inputdata_t&)
 T CEnvGlobal::InputTurnOn(inputdata_t&)
 T CEnvGlobal::Spawn()
 T CEnvGlobal::~CEnvGlobal()
 T CEnvGunfire::Activate()
 T CEnvGunfire::GetDataDescMap()
 T CEnvGunfire::InputDisable(inputdata_t&)
 T CEnvGunfire::InputEnable(inputdata_t&)
 T CEnvGunfire::Precache()
 T CEnvGunfire::ShootThink()
 T CEnvGunfire::Spawn()
 T CEnvGunfire::UpdateTarget()
 T CEnvGunfire::~CEnvGunfire()
 T CEnvHudHint::GetDataDescMap()
 T CEnvHudHint::InputHideHudHint(inputdata_t&)
 T CEnvHudHint::InputShowHudHint(inputdata_t&)
 T CEnvHudHint::Precache()
 T CEnvHudHint::Spawn()
 T CEnvHudHint::~CEnvHudHint()
 T CEnvInstructorHint::GetDataDescMap()
 T CEnvInstructorHint::InputEndHint(inputdata_t&)
 T CEnvInstructorHint::InputShowHint(inputdata_t&)
 T CEnvInstructorHint::~CEnvInstructorHint()
 T CEnvLaser::FireAtPoint(CGameTrace&)
 T CEnvLaser::GetDataDescMap()
 T CEnvLaser::InputToggle(inputdata_t&)
 T CEnvLaser::InputTurnOff(inputdata_t&)
 T CEnvLaser::InputTurnOn(inputdata_t&)
 T CEnvLaser::KeyValue(char const*, char const*)
 T CEnvLaser::Precache()
 T CEnvLaser::Spawn()
 T CEnvLaser::StrikeThink()
 T CEnvLaser::TurnOn()
 T CEnvLaser::~CEnvLaser()
 T CEnvLight::KeyValue(char const*, char const*)
 T CEnvLight::Spawn()
 T CEnvLight::~CEnvLight()
 T CEnvMicrophone::Activate()
 T CEnvMicrophone::ActivateSpeaker()
 T CEnvMicrophone::CanHearSound(CSound*, float&)
 T CEnvMicrophone::CanHearSound(int, soundlevel_t, float&, Vector const*)
 T CEnvMicrophone::GetDataDescMap()
 T CEnvMicrophone::InputDisable(inputdata_t&)
 T CEnvMicrophone::InputEnable(inputdata_t&)
 T CEnvMicrophone::InputSetSpeakerName(inputdata_t&)
 T CEnvMicrophone::OnRestore()
 T CEnvMicrophone::OnSoundPlayed(int, char const*, soundlevel_t, float, int, int, Vector const*, float, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T CEnvMicrophone::OnSoundStopped(char const*)
 T CEnvMicrophone::SoundPlayed(int, char const*, soundlevel_t, float, int, int, Vector const*, float, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T CEnvMicrophone::Spawn()
 T CEnvMicrophone::Think()
 T CEnvMicrophone::~CEnvMicrophone()
 T CEnvMuzzleFlash::GetDataDescMap()
 T CEnvMuzzleFlash::InputFire(inputdata_t&)
 T CEnvMuzzleFlash::Spawn()
 T CEnvMuzzleFlash::~CEnvMuzzleFlash()
 T CEnvParticleScript::Activate()
 T CEnvParticleScript::GetDataDescMap()
 T CEnvParticleScript::GetServerClass()
 T CEnvParticleScript::InputSetSequence(inputdata_t&)
 T CEnvParticleScript::Precache()
 T CEnvParticleScript::PrecacheAnimationEventMaterials()
 T CEnvParticleScript::Spawn()
 T CEnvParticleScript::UpdateTransmitState()
 T CEnvParticleScript::YouForgotToImplementOrDeclareServerClass()
 T CEnvParticleScript::~CEnvParticleScript()
 T CEnvPlayerSurfaceTrigger::GetDataDescMap()
 T CEnvPlayerSurfaceTrigger::InputDisable(inputdata_t&)
 T CEnvPlayerSurfaceTrigger::InputEnable(inputdata_t&)
 T CEnvPlayerSurfaceTrigger::OnRestore()
 T CEnvPlayerSurfaceTrigger::PlayerSurfaceChanged(CBasePlayer*, char)
 T CEnvPlayerSurfaceTrigger::SetPlayerSurface(CBasePlayer*, char)
 T CEnvPlayerSurfaceTrigger::Spawn()
 T CEnvPlayerSurfaceTrigger::UpdateMaterialThink()
 T CEnvPlayerSurfaceTrigger::~CEnvPlayerSurfaceTrigger()
 T CEnvProjectedTexture::Activate()
 T CEnvProjectedTexture::CEnvProjectedTexture()
 T CEnvProjectedTexture::EnforceSingleProjectionRules(bool)
 T CEnvProjectedTexture::GetDataDescMap()
 T CEnvProjectedTexture::GetKeyValue(char const*, char*, int)
 T CEnvProjectedTexture::GetServerClass()
 T CEnvProjectedTexture::InitialThink()
 T CEnvProjectedTexture::InputAlwaysUpdateOff(inputdata_t&)
 T CEnvProjectedTexture::InputAlwaysUpdateOn(inputdata_t&)
 T CEnvProjectedTexture::InputSetAmbient(inputdata_t&)
 T CEnvProjectedTexture::InputSetCameraSpace(inputdata_t&)
 T CEnvProjectedTexture::InputSetEnableShadows(inputdata_t&)
 T CEnvProjectedTexture::InputSetFOV(inputdata_t&)
 T CEnvProjectedTexture::InputSetFarZ(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightColor(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightOnlyTarget(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightStyle(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightWorld(inputdata_t&)
 T CEnvProjectedTexture::InputSetNearZ(inputdata_t&)
 T CEnvProjectedTexture::InputSetPattern(inputdata_t&)
 T CEnvProjectedTexture::InputSetSpotlightTexture(inputdata_t&)
 T CEnvProjectedTexture::InputSetTarget(inputdata_t&)
 T CEnvProjectedTexture::InputTurnOff(inputdata_t&)
 T CEnvProjectedTexture::InputTurnOn(inputdata_t&)
 T CEnvProjectedTexture::KeyValue(char const*, char const*)
 T CEnvProjectedTexture::Spawn()
 T CEnvProjectedTexture::UpdateTransmitState()
 T CEnvProjectedTexture::YouForgotToImplementOrDeclareServerClass()
 T CEnvProjectedTexture::~CEnvProjectedTexture()
 T CEnvQuadraticBeam::GetDataDescMap()
 T CEnvQuadraticBeam::GetServerClass()
 T CEnvQuadraticBeam::Spawn()
 T CEnvQuadraticBeam::YouForgotToImplementOrDeclareServerClass()
 T CEnvQuadraticBeam::~CEnvQuadraticBeam()
 T CEnvScreenEffect::GetDataDescMap()
 T CEnvScreenEffect::GetServerClass()
 T CEnvScreenEffect::InputStartEffect(inputdata_t&)
 T CEnvScreenEffect::InputStopEffect(inputdata_t&)
 T CEnvScreenEffect::Precache()
 T CEnvScreenEffect::Spawn()
 T CEnvScreenEffect::UpdateTransmitState()
 T CEnvScreenEffect::YouForgotToImplementOrDeclareServerClass()
 T CEnvScreenEffect::~CEnvScreenEffect()
 T CEnvScreenOverlay::GetDataDescMap()
 T CEnvScreenOverlay::GetServerClass()
 T CEnvScreenOverlay::InputStartOverlay(inputdata_t&)
 T CEnvScreenOverlay::InputStopOverlay(inputdata_t&)
 T CEnvScreenOverlay::InputSwitchOverlay(inputdata_t&)
 T CEnvScreenOverlay::Precache()
 T CEnvScreenOverlay::SetActive(bool)
 T CEnvScreenOverlay::Spawn()
 T CEnvScreenOverlay::UpdateTransmitState()
 T CEnvScreenOverlay::YouForgotToImplementOrDeclareServerClass()
 T CEnvScreenOverlay::~CEnvScreenOverlay()
 T CEnvShake::ApplyShake(ShakeCommand_t)
 T CEnvShake::DrawDebugTextOverlays()
 T CEnvShake::GetDataDescMap()
 T CEnvShake::InputAmplitude(inputdata_t&)
 T CEnvShake::InputFrequency(inputdata_t&)
 T CEnvShake::InputStartShake(inputdata_t&)
 T CEnvShake::InputStopShake(inputdata_t&)
 T CEnvShake::OnRestore()
 T CEnvShake::Precache()
 T CEnvShake::Spawn()
 T CEnvShake::Think()
 T CEnvShake::~CEnvShake()
 T CEnvShooter::CreateGib()
 T CEnvShooter::GetDataDescMap()
 T CEnvShooter::KeyValue(char const*, char const*)
 T CEnvShooter::Precache()
 T CEnvShooter::~CEnvShooter()
 T CEnvSoundscape::DrawDebugGeometryOverlays()
 T CEnvSoundscape::GetDataDescMap()
 T CEnvSoundscape::InRangeOfPlayer(CBasePlayer*)
 T CEnvSoundscape::InputDisable(inputdata_t&)
 T CEnvSoundscape::InputEnable(inputdata_t&)
 T CEnvSoundscape::InputToggleEnabled(inputdata_t&)
 T CEnvSoundscape::KeyValue(char const*, char const*)
 T CEnvSoundscape::Precache()
 T CEnvSoundscape::Spawn()
 T CEnvSoundscape::UpdateForPlayer(ss_update_t&)
 T CEnvSoundscape::WriteAudioParamsTo(audioparams_t&)
 T CEnvSoundscape::~CEnvSoundscape()
 T CEnvSoundscapeProxy::Activate()
 T CEnvSoundscapeProxy::GetDataDescMap()
 T CEnvSoundscapeProxy::Precache()
 T CEnvSoundscapeProxy::~CEnvSoundscapeProxy()
 T CEnvSoundscapeTriggerable::DelegateEndTouch(CBaseEntity*)
 T CEnvSoundscapeTriggerable::DelegateStartTouch(CBaseEntity*)
 T CEnvSoundscapeTriggerable::GetDataDescMap()
 T CEnvSoundscapeTriggerable::Think()
 T CEnvSoundscapeTriggerable::~CEnvSoundscapeTriggerable()
 T CEnvSpark::GetDataDescMap()
 T CEnvSpark::InputSparkOnce(inputdata_t&)
 T CEnvSpark::InputStartSpark(inputdata_t&)
 T CEnvSpark::InputStopSpark(inputdata_t&)
 T CEnvSpark::InputToggleSpark(inputdata_t&)
 T CEnvSpark::Precache()
 T CEnvSpark::SparkThink()
 T CEnvSpark::Spawn()
 T CEnvSpark::~CEnvSpark()
 T CEnvSplash::GetDataDescMap()
 T CEnvSplash::InputSplash(inputdata_t&)
 T CEnvSplash::Precache()
 T CEnvSplash::Spawn()
 T CEnvSplash::~CEnvSplash()
 T CEnvTilt::ApplyTilt(ShakeCommand_t)
 T CEnvTilt::DrawDebugTextOverlays()
 T CEnvTilt::GetDataDescMap()
 T CEnvTilt::InputStartTilt(inputdata_t&)
 T CEnvTilt::InputStopTilt(inputdata_t&)
 T CEnvTilt::Precache()
 T CEnvTilt::Spawn()
 T CEnvTilt::~CEnvTilt()
 T CEnvTonemapController::CEnvTonemapController()
 T CEnvTonemapController::GetDataDescMap()
 T CEnvTonemapController::GetServerClass()
 T CEnvTonemapController::InputSetAutoExposureMax(inputdata_t&)
 T CEnvTonemapController::InputSetAutoExposureMin(inputdata_t&)
 T CEnvTonemapController::InputSetBloomExponent(inputdata_t&)
 T CEnvTonemapController::InputSetBloomSaturation(inputdata_t&)
 T CEnvTonemapController::InputSetBloomScale(inputdata_t&)
 T CEnvTonemapController::InputSetBloomScaleRange(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapMinAvgLum(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapPercentBrightPixels(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapPercentTarget(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapRate(inputdata_t&)
 T CEnvTonemapController::InputUseDefaultAutoExposure(inputdata_t&)
 T CEnvTonemapController::InputUseDefaultBloomScale(inputdata_t&)
 T CEnvTonemapController::Spawn()
 T CEnvTonemapController::UpdateTransmitState()
 T CEnvTonemapController::YouForgotToImplementOrDeclareServerClass()
 T CEnvTonemapController::~CEnvTonemapController()
 T CEnvTracer::Activate()
 T CEnvTracer::GetDataDescMap()
 T CEnvTracer::Spawn()
 T CEnvTracer::TracerThink()
 T CEnvTracer::~CEnvTracer()
 T CEnvViewPunch::GetDataDescMap()
 T CEnvViewPunch::InputViewPunch(inputdata_t&)
 T CEnvViewPunch::Spawn()
 T CEnvViewPunch::~CEnvViewPunch()
 T CEnvWind::GetDataDescMap()
 T CEnvWind::GetServerClass()
 T CEnvWind::Precache()
 T CEnvWind::Spawn()
 T CEnvWind::UpdateTransmitState()
 T CEnvWind::WindThink()
 T CEnvWind::YouForgotToImplementOrDeclareServerClass()
 T CEnvWind::~CEnvWind()
 T CEnvWindShared::CEnvWindShared()
 T CEnvWindShared::Init(int, int, float, int, float)
 T CEnvWindShared::NetworkStateChanged()
 T CEnvWindShared::NetworkStateChanged(void*)
 T CEnvWindShared::WindThink(float)
 T CEnvWindShared::~CEnvWindShared()
 T CEnvZoom::GetDataDescMap()
 T CEnvZoom::InputUnZoom(inputdata_t&)
 T CEnvZoom::InputZoom(inputdata_t&)
 T CEnvZoom::~CEnvZoom()
 T CEventAbsoluteTag::CEventAbsoluteTag(CEventAbsoluteTag const&)
 T CEventAbsoluteTag::GetAbsoluteTime()
 T CEventAbsoluteTag::GetPercentage()
 T CEventAbsoluteTag::SetAbsoluteTime(float)
 T CEventAbsoluteTag::SetLinear(bool)
 T CEventAbsoluteTag::SetPercentage(float)
 T CEventAction::CEventAction(char const*)
 T CEventAction::operator delete(void*)
 T CEventAction::operator new(unsigned long)
 T CEventLog::CEventLog()
 T CEventLog::FireGameEvent(IGameEvent*)
 T CEventLog::FormatPlayer(CBaseEntity*) const
 T CEventLog::FormatPlayer(CBaseEntity*, char*, int) const
 T CEventLog::Init()
 T CEventLog::PrintEvent(IGameEvent*)
 T CEventLog::PrintGameEvent(IGameEvent*)
 T CEventLog::PrintOtherEvent(IGameEvent*)
 T CEventLog::PrintPlayerEvent(IGameEvent*)
 T CEventLog::PrintTeamEvent(IGameEvent*)
 T CEventLog::~CEventLog()
 T CEventQueue::AddEvent(CBaseEntity*, char const*, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::AddEvent(CBaseEntity*, char const*, variant_t, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::AddEvent(char const*, char const*, variant_t, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::CancelEvents(CBaseEntity*)
 T CEventQueue::Clear()
 T CEventQueue::Dump()
 T CEventQueue::Init()
 T CEventQueue::Restore(IRestore&)
 T CEventQueue::ServiceEvents()
 T CEventQueue::~CEventQueue()
 T CEventQueueSaveLoadProxy::Restore(IRestore&)
 T CEventQueueSaveLoadProxy::Save(ISave&)
 T CEventQueueSaveLoadProxy::~CEventQueueSaveLoadProxy()
 T CEventQueue_SaveRestoreBlockHandler::GetBlockName()
 T CEventQueue_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CEventQueue_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CEventQueue_SaveRestoreBlockHandler::Save(ISave*)
 T CEventQueue_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CEventRegister::CEventRegister()
 T CEventRegister::Init(CTimedEventMgr*, IEventRegisterCallback*)
 T CEventRegister::Reregister()
 T CEventRegister::SetUpdateInterval(float)
 T CEventRegister::StopUpdates()
 T CEventRegister::~CEventRegister()
 T CEventRelativeTag::GetStartTime()
 T CEventsSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CEventsSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CEventsSaveDataOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T CEventsSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CEventsSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CExpressionEvaluator::CExpressionEvaluator()
 T CExpressionEvaluator::Evaluate(bool&, char const*, bool (*)(char const*), void (*)(char const*))
 T CExpressionEvaluator::FreeTree(ExprNode*&)
 T CExpressionEvaluator::IsIdentifierOrConstant(char)
 T CExpressionEvaluator::MakeExpression(ExprNode*&)
 T CExpressionEvaluator::MakeFactor(ExprNode*&)
 T CExpressionEvaluator::SimplifyNode(ExprNode*&)
 T CExpressionEvaluator::~CExpressionEvaluator()
 T CFilterClass::GetDataDescMap()
 T CFilterClass::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterClass::~CFilterClass()
 T CFilterContext::GetDataDescMap()
 T CFilterContext::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterContext::~CFilterContext()
 T CFilterEnemy::GetDataDescMap()
 T CFilterEnemy::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CFilterEnemy::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::PassesMobbedFilter(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::PassesProximityFilter(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::~CFilterEnemy()
 T CFilterMassGreater::GetDataDescMap()
 T CFilterMassGreater::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterMassGreater::~CFilterMassGreater()
 T CFilterModel::GetDataDescMap()
 T CFilterModel::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterModel::~CFilterModel()
 T CFilterMultiple::Activate()
 T CFilterMultiple::GetDataDescMap()
 T CFilterMultiple::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CFilterMultiple::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterMultiple::~CFilterMultiple()
 T CFilterName::GetDataDescMap()
 T CFilterName::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterName::~CFilterName()
 T CFire* _CreateEntityTemplate<CFire>(CFire*, char const*)
 T CFire::Activate()
 T CFire::AddHeat(float, bool)
 T CFire::BurnThink()
 T CFire::DrawDebugGeometryOverlays()
 T CFire::DrawDebugTextOverlays()
 T CFire::GetDataDescMap()
 T CFire::GoOut()
 T CFire::GoOutThink()
 T CFire::Init(Vector const&, float, float, float, int, int)
 T CFire::InputDisable(inputdata_t&)
 T CFire::InputEnable(inputdata_t&)
 T CFire::InputExtinguish(inputdata_t&)
 T CFire::InputExtinguishTemporary(inputdata_t&)
 T CFire::InputStartFire(inputdata_t&)
 T CFire::OnTakeDamage(CTakeDamageInfo const&)
 T CFire::Precache()
 T CFire::Spawn()
 T CFire::SpawnEffect(fireType_e, float)
 T CFire::Start()
 T CFire::StartFire()
 T CFire::Update(float)
 T CFire::UpdateOnRemove()
 T CFire::UpdateTransmitState()
 T CFire::~CFire()
 T CFireCrackerBlast::GetImpactParticleEffectName()
 T CFireCrackerBlast::GetParticleEffectName()
 T CFireCrackerBlast::GetServerClass()
 T CFireCrackerBlast::Spawn()
 T CFireCrackerBlast::YouForgotToImplementOrDeclareServerClass()
 T CFireCrackerBlast::~CFireCrackerBlast()
 T CFireSmoke::CFireSmoke()
 T CFireSmoke::EnableGlow(int)
 T CFireSmoke::EnableSmoke(int)
 T CFireSmoke::EnableVisibleFromAbove(int)
 T CFireSmoke::GetDataDescMap()
 T CFireSmoke::GetServerClass()
 T CFireSmoke::Precache()
 T CFireSmoke::Spawn()
 T CFireSmoke::YouForgotToImplementOrDeclareServerClass()
 T CFireSmoke::~CFireSmoke()
 T CFireSphere::EnumElement(IHandleEntity*)
 T CFireTrail::GetDataDescMap()
 T CFireTrail::GetServerClass()
 T CFireTrail::Precache()
 T CFireTrail::YouForgotToImplementOrDeclareServerClass()
 T CFireTrail::~CFireTrail()
 T CFish* _CreateEntityTemplate<CFish>(CFish*, char const*)
 T CFish::Avoid()
 T CFish::Event_Killed(CTakeDamageInfo const&)
 T CFish::FlockTo(CFish*, float)
 T CFish::GetDataDescMap()
 T CFish::GetServerClass()
 T CFish::Initialize(CFishPool*, unsigned int)
 T CFish::Panic()
 T CFish::Spawn()
 T CFish::Touch(CBaseEntity*)
 T CFish::Update(float)
 T CFish::YouForgotToImplementOrDeclareServerClass()
 T CFish::~CFish()
 T CFishPool::CFishPool()
 T CFishPool::FireGameEvent(IGameEvent*)
 T CFishPool::GetDataDescMap()
 T CFishPool::KeyValue(char const*, char const*)
 T CFishPool::Spawn()
 T CFishPool::Update()
 T CFishPool::~CFishPool()
 T CFixedBitVecBase<255>::FindNextSetBit(int) const
 T CFlaggedEntitiesEnum::CFlaggedEntitiesEnum(CBaseEntity**, int, int)
 T CFlaggedEntitiesEnum::EnumElement(IHandleEntity*)
 T CFlashbang::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CFlashbang::GetCSWeaponID() const
 T CFlashbang::GetDataDescMap()
 T CFlashbang::GetServerClass()
 T CFlashbang::YouForgotToImplementOrDeclareServerClass()
 T CFlashbang::~CFlashbang()
 T CFlashbangProjectile::BounceSound()
 T CFlashbangProjectile::CFlashbangProjectile()
 T CFlashbangProjectile::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CBaseCombatCharacter*, CCSWeaponInfo const&)
 T CFlashbangProjectile::Detonate()
 T CFlashbangProjectile::GetDataDescMap()
 T CFlashbangProjectile::GetGrenadeType()
 T CFlashbangProjectile::InputSetTimer(inputdata_t&)
 T CFlashbangProjectile::Precache()
 T CFlashbangProjectile::Spawn()
 T CFlashbangProjectile::~CFlashbangProjectile()
 T CFlexAnimationTrack::AddSample(float, float, int)
 T CFlexAnimationTrack::GetBoundedSample(int, bool&, int)
 T CFlexAnimationTrack::GetFlexControllerName()
 T CFlexAnimationTrack::GetFracIntensity(float, int)
 T CFlexAnimationTrack::GetIntensity(float, int)
 T CFlexAnimationTrack::GetIntensityInternal(float, int)
 T CFlexAnimationTrack::GetRawFlexControllerIndex(int)
 T CFlexAnimationTrack::IsComboType()
 T CFlexAnimationTrack::IsServerSide() const
 T CFlexAnimationTrack::IsTrackActive()
 T CFlexAnimationTrack::Resort(int)
 T CFlexAnimationTrack::SetComboType(bool)
 T CFlexAnimationTrack::SetEdgeActive(bool, bool)
 T CFlexAnimationTrack::SetEdgeInfo(bool, int, float)
 T CFlexAnimationTrack::SetFlexControllerIndex(LocalFlexController_t, int, int)
 T CFlexAnimationTrack::SetMax(float)
 T CFlexAnimationTrack::SetMin(float)
 T CFlexAnimationTrack::SetServerSide(bool)
 T CFlexAnimationTrack::SetTrackActive(bool)
 T CFlexAnimationTrack::~CFlexAnimationTrack()
 T CFlexCycler::GenericCyclerSpawn(char*, Vector, Vector)
 T CFlexCycler::GetDataDescMap()
 T CFlexCycler::IsAlive()
 T CFlexCycler::ObjectCaps()
 T CFlexCycler::OnTakeDamage(CTakeDamageInfo const&)
 T CFlexCycler::ProcessSceneEvents()
 T CFlexCycler::SetFlexTarget(LocalFlexController_t)
 T CFlexCycler::Spawn()
 T CFlexCycler::Think()
 T CFlexExpresser::AsFlexExpresser(CBaseEntity*)
 T CFlexExpresser::GetDataDescMap()
 T CFlexExpresser::GetResponseSystem()
 T CFlexExpresser::InputSpeakResponseConcept(inputdata_t&)
 T CFlexExpresser::OnTakeDamage(CTakeDamageInfo const&)
 T CFlexExpresser::Spawn()
 T CFlexExpresser::Think()
 T CFlexExpresser::~CFlexExpresser()
 T CFlexSceneFileManager::FindSceneFile(CBaseFlex*, char const*, bool)
 T CFlexSceneFileManager::Init()
 T CFlexSceneFileManager::InitRecursive(char const*)
 T CFlexSceneFileManager::Shutdown()
 T CFlexSceneFileManager::~CFlexSceneFileManager()
 T CFlexTimingTag::CFlexTimingTag(CFlexTimingTag const&)
 T CFlextalkActor::GetDataDescMap()
 T CFlextalkActor::ProcessSceneEvents()
 T CFlextalkActor::SetFlexTarget(LocalFlexController_t, float)
 T CFlextalkActor::~CFlextalkActor()
 T CFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFmtStrN<1024, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<1024, false>::InitQuietTruncation()
 T CFmtStrN<256, false>::AppendFormat(char const*, ...)
 T CFmtStrN<256, false>::CFmtStrN(char const**, ...)
 T CFmtStrN<256, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<256, false>::InitQuietTruncation()
 T CFmtStrN<256, false>::sprintf(char const*, ...)
 T CFmtStrN<32, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<32, false>::InitQuietTruncation()
 T CFmtStrN<80, false>::InitQuietTruncation()
 T CFmtStrN<80, false>::sprintf(char const*, ...)
 T CFogController::Activate()
 T CFogController::CFogController()
 T CFogController::DrawDebugTextOverlays()
 T CFogController::GetDataDescMap()
 T CFogController::GetServerClass()
 T CFogController::InputSetAngles(inputdata_t&)
 T CFogController::InputSetColor(inputdata_t&)
 T CFogController::InputSetColorLerpTo(inputdata_t&)
 T CFogController::InputSetColorSecondary(inputdata_t&)
 T CFogController::InputSetColorSecondaryLerpTo(inputdata_t&)
 T CFogController::InputSetEndDist(inputdata_t&)
 T CFogController::InputSetEndDistLerpTo(inputdata_t&)
 T CFogController::InputSetFarZ(inputdata_t&)
 T CFogController::InputSetMaxDensity(inputdata_t&)
 T CFogController::InputSetMaxDensityLerpTo(inputdata_t&)
 T CFogController::InputSetStartDist(inputdata_t&)
 T CFogController::InputSetStartDistLerpTo(inputdata_t&)
 T CFogController::InputSetZoomFogScale(inputdata_t&)
 T CFogController::InputStartFogTransition(inputdata_t&)
 T CFogController::InputTurnOff(inputdata_t&)
 T CFogController::InputTurnOn(inputdata_t&)
 T CFogController::NetworkVar_m_fog::NetworkStateChanged()
 T CFogController::NetworkVar_m_fog::NetworkStateChanged(void*)
 T CFogController::SetLerpValues()
 T CFogController::Spawn()
 T CFogController::UpdateTransmitState()
 T CFogController::YouForgotToImplementOrDeclareServerClass()
 T CFogController::~CFogController()
 T CFogSystem::FireGameEvent(IGameEvent*)
 T CFogSystem::LevelInitPostEntity()
 T CFogSystem::LevelInitPreEntity()
 T CFogSystem::~CFogSystem()
 T CFogTrigger::EndTouch(CBaseEntity*)
 T CFogTrigger::GetDataDescMap()
 T CFogTrigger::Spawn()
 T CFogTrigger::StartTouch(CBaseEntity*)
 T CFogTrigger::~CFogTrigger()
 T CFogVolume::Activate()
 T CFogVolume::FindFogVolumeForPosition(Vector const&)
 T CFogVolume::GetDataDescMap()
 T CFogVolume::InputDisable(inputdata_t&)
 T CFogVolume::InputEnable(inputdata_t&)
 T CFogVolume::Spawn()
 T CFogVolume::~CFogVolume()
 T CFootstepControl::GetDataDescMap()
 T CFootstepControl::GetServerClass()
 T CFootstepControl::Spawn()
 T CFootstepControl::UpdateTransmitState()
 T CFootstepControl::YouForgotToImplementOrDeclareServerClass()
 T CFootstepControl::~CFootstepControl()
 T CFourWheelServerVehicle::GetFourWheelVehicle()
 T CFourWheelServerVehicle::GetVehicleController()
 T CFourWheelServerVehicle::GetVehicleParams()
 T CFourWheelServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T CFourWheelServerVehicle::IsPassengerEntering()
 T CFourWheelServerVehicle::IsPassengerExiting()
 T CFourWheelServerVehicle::IsVehicleBodyInWater()
 T CFourWheelServerVehicle::IsVehicleUpright()
 T CFourWheelServerVehicle::NPC_DriveVehicle()
 T CFourWheelServerVehicle::NPC_SetDriver(CNPC_VehicleDriver*)
 T CFourWheelServerVehicle::SetVehicle(CBaseEntity*)
 T CFourWheelServerVehicle::~CFourWheelServerVehicle()
 T CFourWheelVehiclePhysics::CFourWheelVehiclePhysics(CBaseAnimating*)
 T CFourWheelVehiclePhysics::CalcWheelData(vehicleparams_t&)
 T CFourWheelVehiclePhysics::DrawDebugGeometryOverlays()
 T CFourWheelVehiclePhysics::DrawDebugTextOverlays(int)
 T CFourWheelVehiclePhysics::GetDataDescMap()
 T CFourWheelVehiclePhysics::Initialize(char const*, unsigned int)
 T CFourWheelVehiclePhysics::InitializePoseParameters()
 T CFourWheelVehiclePhysics::ParseVehicleScript(char const*, solid_t&, vehicleparams_t&)
 T CFourWheelVehiclePhysics::PlaceWheelDust(int, bool)
 T CFourWheelVehiclePhysics::Precache()
 T CFourWheelVehiclePhysics::ReleaseHandbrake()
 T CFourWheelVehiclePhysics::SetAction(float)
 T CFourWheelVehiclePhysics::SetDisableEngine(bool)
 T CFourWheelVehiclePhysics::SetHandbrake(bool)
 T CFourWheelVehiclePhysics::SetSteering(float, float)
 T CFourWheelVehiclePhysics::SetThrottle(float)
 T CFourWheelVehiclePhysics::Spawn()
 T CFourWheelVehiclePhysics::SteeringTurn(float, vehicleparams_t const&, bool, bool, bool)
 T CFourWheelVehiclePhysics::SteeringTurnAnalog(float, vehicleparams_t const&, float)
 T CFourWheelVehiclePhysics::Teleport(matrix3x4_t&)
 T CFourWheelVehiclePhysics::Think()
 T CFourWheelVehiclePhysics::TurnOff()
 T CFourWheelVehiclePhysics::TurnOn()
 T CFourWheelVehiclePhysics::UpdateDriverControls(CUserCmd*, float)
 T CFourWheelVehiclePhysics::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CFourWheelVehiclePhysics::VPhysicsUpdate(IPhysicsObject*)
 T CFourWheelVehiclePhysics::~CFourWheelVehiclePhysics()
 T CFunFact_GenericEvalFunction::Evaluate(e_RoundEndReason, CUtlVector<FunFact, CUtlMemory<FunFact, int> >&) const
 T CFunFact_GenericEvalFunction::~CFunFact_GenericEvalFunction()
 T CFunFact_PlayerEvalFunction::Evaluate(e_RoundEndReason, CUtlVector<FunFact, CUtlMemory<FunFact, int> >&) const
 T CFunFact_PlayerEvalFunction::~CFunFact_PlayerEvalFunction()
 T CFunFact_StatBest::Evaluate(e_RoundEndReason, CUtlVector<FunFact, CUtlMemory<FunFact, int> >&) const
 T CFunFact_StatBest::~CFunFact_StatBest()
 T CFunFact_StatSum::Evaluate(e_RoundEndReason, CUtlVector<FunFact, CUtlMemory<FunFact, int> >&) const
 T CFunFact_StatSum::~CFunFact_StatSum()
 T CFuncAreaPortalBase::CFuncAreaPortalBase()
 T CFuncAreaPortalBase::GetDataDescMap()
 T CFuncAreaPortalBase::ObjectCaps()
 T CFuncAreaPortalBase::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CFuncAreaPortalBase::~CFuncAreaPortalBase()
 T CFuncAreaPortalWindow::Activate()
 T CFuncAreaPortalWindow::CFuncAreaPortalWindow()
 T CFuncAreaPortalWindow::GetDataDescMap()
 T CFuncAreaPortalWindow::GetServerClass()
 T CFuncAreaPortalWindow::InputSetFadeEndDistance(inputdata_t&)
 T CFuncAreaPortalWindow::InputSetFadeStartDistance(inputdata_t&)
 T CFuncAreaPortalWindow::Spawn()
 T CFuncAreaPortalWindow::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CFuncAreaPortalWindow::YouForgotToImplementOrDeclareServerClass()
 T CFuncAreaPortalWindow::~CFuncAreaPortalWindow()
 T CFuncBlockDMSpawns::Spawn()
 T CFuncBlockDMSpawns::~CFuncBlockDMSpawns()
 T CFuncBrush::Activate()
 T CFuncBrush::CreateVPhysics()
 T CFuncBrush::DrawDebugTextOverlays()
 T CFuncBrush::GetDataDescMap()
 T CFuncBrush::GetServerClass()
 T CFuncBrush::InputSetExcluded(inputdata_t&)
 T CFuncBrush::InputSetInvert(inputdata_t&)
 T CFuncBrush::InputToggle(inputdata_t&)
 T CFuncBrush::InputTurnOff(inputdata_t&)
 T CFuncBrush::InputTurnOn(inputdata_t&)
 T CFuncBrush::IsOn()
 T CFuncBrush::ObjectCaps()
 T CFuncBrush::Spawn()
 T CFuncBrush::TurnOff()
 T CFuncBrush::TurnOn()
 T CFuncBrush::YouForgotToImplementOrDeclareServerClass()
 T CFuncBrush::~CFuncBrush()
 T CFuncConveyor::GetDataDescMap()
 T CFuncConveyor::GetGroundVelocityToApply(Vector&)
 T CFuncConveyor::GetServerClass()
 T CFuncConveyor::InputSetSpeed(inputdata_t&)
 T CFuncConveyor::InputToggleDirection(inputdata_t&)
 T CFuncConveyor::Spawn()
 T CFuncConveyor::UpdateSpeed(float)
 T CFuncConveyor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncConveyor::YouForgotToImplementOrDeclareServerClass()
 T CFuncConveyor::~CFuncConveyor()
 T CFuncIllusionary::Spawn()
 T CFuncIllusionary::~CFuncIllusionary()
 T CFuncInstanceIoProxy::GetDataDescMap()
 T CFuncInstanceIoProxy::InputProxyRelay1(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay10(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay11(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay12(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay13(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay14(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay15(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay16(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay17(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay18(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay19(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay2(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay20(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay21(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay22(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay23(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay24(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay25(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay26(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay27(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay28(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay29(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay3(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay30(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay4(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay5(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay6(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay7(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay8(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay9(inputdata_t&)
 T CFuncInstanceIoProxy::~CFuncInstanceIoProxy()
 T CFuncLadder::Activate()
 T CFuncLadder::CFuncLadder()
 T CFuncLadder::DrawDebugGeometryOverlays()
 T CFuncLadder::FindNearbyDismountPoints(Vector const&, float, CUtlVector<CHandle<CInfoLadderDismount>, CUtlMemory<CHandle<CInfoLadderDismount>, int> >&)
 T CFuncLadder::GetDataDescMap()
 T CFuncLadder::GetServerClass()
 T CFuncLadder::InputDisable(inputdata_t&)
 T CFuncLadder::InputEnable(inputdata_t&)
 T CFuncLadder::SearchForDismountPoints()
 T CFuncLadder::SetEndPoints(Vector const&, Vector const&)
 T CFuncLadder::Spawn()
 T CFuncLadder::UpdateTransmitState()
 T CFuncLadder::YouForgotToImplementOrDeclareServerClass()
 T CFuncLadder::~CFuncLadder()
 T CFuncLadderEndPoint::Activate()
 T CFuncLadderEndPoint::Validate()
 T CFuncLadderEndPoint::~CFuncLadderEndPoint()
 T CFuncMonitor::Activate()
 T CFuncMonitor::GetDataDescMap()
 T CFuncMonitor::GetServerClass()
 T CFuncMonitor::InputSetCamera(inputdata_t&)
 T CFuncMonitor::SetCameraByName(char const*)
 T CFuncMonitor::UpdateOnRemove()
 T CFuncMonitor::YouForgotToImplementOrDeclareServerClass()
 T CFuncMonitor::~CFuncMonitor()
 T CFuncMoveLinear::Blocked(CBaseEntity*)
 T CFuncMoveLinear::CreateVPhysics()
 T CFuncMoveLinear::DrawDebugTextOverlays()
 T CFuncMoveLinear::GetDataDescMap()
 T CFuncMoveLinear::GetServerClass()
 T CFuncMoveLinear::InputClose(inputdata_t&)
 T CFuncMoveLinear::InputOpen(inputdata_t&)
 T CFuncMoveLinear::InputSetPosition(inputdata_t&)
 T CFuncMoveLinear::InputSetSpeed(inputdata_t&)
 T CFuncMoveLinear::MoveDone()
 T CFuncMoveLinear::MoveTo(Vector, float)
 T CFuncMoveLinear::NetworkStateChanged_m_fFlags()
 T CFuncMoveLinear::NetworkStateChanged_m_fFlags(void*)
 T CFuncMoveLinear::NetworkStateChanged_m_vecVelocity()
 T CFuncMoveLinear::NetworkStateChanged_m_vecVelocity(void*)
 T CFuncMoveLinear::Precache()
 T CFuncMoveLinear::SetPosition(float)
 T CFuncMoveLinear::ShouldSavePhysics()
 T CFuncMoveLinear::Spawn()
 T CFuncMoveLinear::StopMoveSound()
 T CFuncMoveLinear::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncMoveLinear::YouForgotToImplementOrDeclareServerClass()
 T CFuncMoveLinear::~CFuncMoveLinear()
 T CFuncNavBlocker::CalculateBlocked(bool*, Vector const&, Vector const&)
 T CFuncNavBlocker::DrawDebugTextOverlays()
 T CFuncNavBlocker::GetDataDescMap()
 T CFuncNavBlocker::InputBlockNav(inputdata_t&)
 T CFuncNavBlocker::InputUnblockNav(inputdata_t&)
 T CFuncNavBlocker::Spawn()
 T CFuncNavBlocker::UpdateBlocked()
 T CFuncNavBlocker::UpdateOnRemove()
 T CFuncNavBlocker::~CFuncNavBlocker()
 T CFuncNavObstruction::CanObstructNavAreas() const
 T CFuncNavObstruction::DrawDebugTextOverlays()
 T CFuncNavObstruction::GetDataDescMap()
 T CFuncNavObstruction::GetNavObstructionHeight() const
 T CFuncNavObstruction::GetObstructingEntity()
 T CFuncNavObstruction::IsPotentiallyAbleToObstructNavAreas() const
 T CFuncNavObstruction::OnNavMeshLoaded()
 T CFuncNavObstruction::Spawn()
 T CFuncNavObstruction::UpdateOnRemove()
 T CFuncNavObstruction::~CFuncNavObstruction()
 T CFuncOccluder::CFuncOccluder()
 T CFuncOccluder::GetDataDescMap()
 T CFuncOccluder::GetServerClass()
 T CFuncOccluder::InputActivate(inputdata_t&)
 T CFuncOccluder::InputDeactivate(inputdata_t&)
 T CFuncOccluder::InputToggle(inputdata_t&)
 T CFuncOccluder::Spawn()
 T CFuncOccluder::UpdateTransmitState()
 T CFuncOccluder::YouForgotToImplementOrDeclareServerClass()
 T CFuncOccluder::~CFuncOccluder()
 T CFuncPlat::Blocked(CBaseEntity*)
 T CFuncPlat::CallGoDown()
 T CFuncPlat::CallHitBottom()
 T CFuncPlat::CallHitTop()
 T CFuncPlat::CreateVPhysics()
 T CFuncPlat::GetDataDescMap()
 T CFuncPlat::GoDown()
 T CFuncPlat::GoUp()
 T CFuncPlat::HitBottom()
 T CFuncPlat::HitTop()
 T CFuncPlat::InputGoDown(inputdata_t&)
 T CFuncPlat::InputGoUp(inputdata_t&)
 T CFuncPlat::InputToggle(inputdata_t&)
 T CFuncPlat::PlatUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncPlat::Precache()
 T CFuncPlat::Setup()
 T CFuncPlat::Spawn()
 T CFuncPlat::~CFuncPlat()
 T CFuncPlatRot::GetDataDescMap()
 T CFuncPlatRot::GoDown()
 T CFuncPlatRot::GoUp()
 T CFuncPlatRot::HitBottom()
 T CFuncPlatRot::HitTop()
 T CFuncPlatRot::RotMove(QAngle&, float)
 T CFuncPlatRot::SetupRotation()
 T CFuncPlatRot::Spawn()
 T CFuncPlatRot::~CFuncPlatRot()
 T CFuncReflectiveGlass::GetDataDescMap()
 T CFuncReflectiveGlass::GetServerClass()
 T CFuncReflectiveGlass::YouForgotToImplementOrDeclareServerClass()
 T CFuncReflectiveGlass::~CFuncReflectiveGlass()
 T CFuncRotating::Blocked(CBaseEntity*)
 T CFuncRotating::CreateVPhysics()
 T CFuncRotating::DrawDebugTextOverlays()
 T CFuncRotating::GetDataDescMap()
 T CFuncRotating::GetServerClass()
 T CFuncRotating::HurtTouch(CBaseEntity*)
 T CFuncRotating::InputGetSpeed(inputdata_t&)
 T CFuncRotating::InputReverse(inputdata_t&)
 T CFuncRotating::InputSetSpeed(inputdata_t&)
 T CFuncRotating::InputStart(inputdata_t&)
 T CFuncRotating::InputStartBackward(inputdata_t&)
 T CFuncRotating::InputStartForward(inputdata_t&)
 T CFuncRotating::InputStop(inputdata_t&)
 T CFuncRotating::InputStopAtStartPos(inputdata_t&)
 T CFuncRotating::InputToggle(inputdata_t&)
 T CFuncRotating::KeyValue(char const*, char const*)
 T CFuncRotating::Precache()
 T CFuncRotating::RampPitchVol()
 T CFuncRotating::ReverseMove()
 T CFuncRotating::RotateMove()
 T CFuncRotating::RotatingUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncRotating::SetTargetSpeed(float)
 T CFuncRotating::Spawn()
 T CFuncRotating::SpinDownMove()
 T CFuncRotating::SpinUpMove()
 T CFuncRotating::UpdateSpeed(float)
 T CFuncRotating::YouForgotToImplementOrDeclareServerClass()
 T CFuncRotating::~CFuncRotating()
 T CFuncSmokeVolume::Activate()
 T CFuncSmokeVolume::CFuncSmokeVolume()
 T CFuncSmokeVolume::GetDataDescMap()
 T CFuncSmokeVolume::GetServerClass()
 T CFuncSmokeVolume::Spawn()
 T CFuncSmokeVolume::YouForgotToImplementOrDeclareServerClass()
 T CFuncSmokeVolume::~CFuncSmokeVolume()
 T CFuncTankTrain::Blocked(CBaseEntity*)
 T CFuncTankTrain::Event_Killed(CTakeDamageInfo const&)
 T CFuncTankTrain::GetDataDescMap()
 T CFuncTankTrain::OnTakeDamage(CTakeDamageInfo const&)
 T CFuncTankTrain::Spawn()
 T CFuncTankTrain::~CFuncTankTrain()
 T CFuncTrackAuto::GetDataDescMap()
 T CFuncTrackAuto::TriggerTrackChange(inputdata_t&)
 T CFuncTrackAuto::UpdateAutoTargets(int)
 T CFuncTrackAuto::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackAuto::~CFuncTrackAuto()
 T CFuncTrackChange::Find()
 T CFuncTrackChange::GetDataDescMap()
 T CFuncTrackChange::GoDown()
 T CFuncTrackChange::GoUp()
 T CFuncTrackChange::HitBottom()
 T CFuncTrackChange::HitTop()
 T CFuncTrackChange::IsTogglePlat()
 T CFuncTrackChange::Precache()
 T CFuncTrackChange::Spawn()
 T CFuncTrackChange::Touch(CBaseEntity*)
 T CFuncTrackChange::UpdateAutoTargets(int)
 T CFuncTrackChange::UpdateTrain(QAngle&)
 T CFuncTrackChange::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackChange::~CFuncTrackChange()
 T CFuncTrackTrain* _CreateEntityTemplate<CFuncTrackTrain>(CFuncTrackTrain*, char const*)
 T CFuncTrackTrain::ArriveAtNode(CPathTrack*)
 T CFuncTrackTrain::Blocked(CBaseEntity*)
 T CFuncTrackTrain::CFuncTrackTrain()
 T CFuncTrackTrain::CreateVPhysics()
 T CFuncTrackTrain::DeadEnd()
 T CFuncTrackTrain::DoUpdateOrientation(QAngle const&, QAngle const&, float)
 T CFuncTrackTrain::DrawDebugGeometryOverlays()
 T CFuncTrackTrain::DrawDebugTextOverlays()
 T CFuncTrackTrain::Find()
 T CFuncTrackTrain::GetDataDescMap()
 T CFuncTrackTrain::GetServerClass()
 T CFuncTrackTrain::InputLockOrientation(inputdata_t&)
 T CFuncTrackTrain::InputMoveToPathNode(inputdata_t&)
 T CFuncTrackTrain::InputResume(inputdata_t&)
 T CFuncTrackTrain::InputReverse(inputdata_t&)
 T CFuncTrackTrain::InputSetMaxSpeed(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeed(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedDir(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedDirAccel(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedReal(inputdata_t&)
 T CFuncTrackTrain::InputStartBackward(inputdata_t&)
 T CFuncTrackTrain::InputStartForward(inputdata_t&)
 T CFuncTrackTrain::InputStop(inputdata_t&)
 T CFuncTrackTrain::InputTeleportToPathNode(inputdata_t&)
 T CFuncTrackTrain::InputToggle(inputdata_t&)
 T CFuncTrackTrain::InputUnlockOrientation(inputdata_t&)
 T CFuncTrackTrain::IsBaseTrain() const
 T CFuncTrackTrain::KeyValue(char const*, char const*)
 T CFuncTrackTrain::MoveDone()
 T CFuncTrackTrain::NearestPath()
 T CFuncTrackTrain::Next()
 T CFuncTrackTrain::ObjectCaps()
 T CFuncTrackTrain::OnControls(CBaseEntity*)
 T CFuncTrackTrain::OnRestore()
 T CFuncTrackTrain::Precache()
 T CFuncTrackTrain::SetDirForward(bool)
 T CFuncTrackTrain::SetSpeed(float, bool)
 T CFuncTrackTrain::SoundStop()
 T CFuncTrackTrain::SoundUpdate()
 T CFuncTrackTrain::Spawn()
 T CFuncTrackTrain::TeleportToPathTrack(CPathTrack*)
 T CFuncTrackTrain::UpdateOnRemove()
 T CFuncTrackTrain::UpdateOrientationAtPathTracks(CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::UpdateOrientationBlend(TrainOrientationType_t, CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::UpdateTrainVelocity(CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackTrain::YouForgotToImplementOrDeclareServerClass()
 T CFuncTrackTrain::~CFuncTrackTrain()
 T CFuncTrain::Activate()
 T CFuncTrain::Blocked(CBaseEntity*)
 T CFuncTrain::GetDataDescMap()
 T CFuncTrain::InputStart(inputdata_t&)
 T CFuncTrain::InputStop(inputdata_t&)
 T CFuncTrain::InputToggle(inputdata_t&)
 T CFuncTrain::Next()
 T CFuncTrain::OnRestore()
 T CFuncTrain::Precache()
 T CFuncTrain::SetupTarget()
 T CFuncTrain::Spawn()
 T CFuncTrain::Start()
 T CFuncTrain::Stop()
 T CFuncTrain::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrain::Wait()
 T CFuncTrain::~CFuncTrain()
 T CFuncTrainControls::Find()
 T CFuncTrainControls::GetDataDescMap()
 T CFuncTrainControls::Spawn()
 T CFuncTrainControls::~CFuncTrainControls()
 T CFuncVPhysicsClip::Activate()
 T CFuncVPhysicsClip::CreateVPhysics()
 T CFuncVPhysicsClip::ForceVPhysicsCollide(CBaseEntity*)
 T CFuncVPhysicsClip::GetDataDescMap()
 T CFuncVPhysicsClip::InputDisable(inputdata_t&)
 T CFuncVPhysicsClip::InputEnable(inputdata_t&)
 T CFuncVPhysicsClip::Spawn()
 T CFuncVPhysicsClip::~CFuncVPhysicsClip()
 T CFuncVehicleClip::CreateVPhysics()
 T CFuncVehicleClip::GetDataDescMap()
 T CFuncVehicleClip::InputDisable(inputdata_t&)
 T CFuncVehicleClip::InputEnable(inputdata_t&)
 T CFuncVehicleClip::Spawn()
 T CFuncVehicleClip::~CFuncVehicleClip()
 T CFuncWall::CreateVPhysics()
 T CFuncWall::GetDataDescMap()
 T CFuncWall::Spawn()
 T CFuncWall::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncWall::~CFuncWall()
 T CFuncWallToggle::GetDataDescMap()
 T CFuncWallToggle::InputToggle(inputdata_t&)
 T CFuncWallToggle::Spawn()
 T CFuncWallToggle::TurnOn()
 T CFuncWallToggle::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncWallToggle::~CFuncWallToggle()
 T CFunc_Dust::Activate()
 T CFunc_Dust::CFunc_Dust()
 T CFunc_Dust::GetDataDescMap()
 T CFunc_Dust::GetServerClass()
 T CFunc_Dust::InputTurnOff(inputdata_t&)
 T CFunc_Dust::InputTurnOn(inputdata_t&)
 T CFunc_Dust::KeyValue(char const*, char const*)
 T CFunc_Dust::Precache()
 T CFunc_Dust::Spawn()
 T CFunc_Dust::YouForgotToImplementOrDeclareServerClass()
 T CFunc_Dust::~CFunc_Dust()
 T CFunc_DustCloud::~CFunc_DustCloud()
 T CFunc_DustMotes::CFunc_DustMotes()
 T CFunc_DustMotes::~CFunc_DustMotes()
 T CFunc_LOD::Activate()
 T CFunc_LOD::CreateVPhysics()
 T CFunc_LOD::GetDataDescMap()
 T CFunc_LOD::GetServerClass()
 T CFunc_LOD::KeyValue(char const*, char const*)
 T CFunc_LOD::Spawn()
 T CFunc_LOD::YouForgotToImplementOrDeclareServerClass()
 T CFunc_LOD::~CFunc_LOD()
 T CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor3()
 T CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T CFunctorJob::Describe()
 T CFunctorJob::DoExecute()
 T CFunctorJob::~CFunctorJob()
 T CGCClientJobServerUpdateVersion::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T CGCClientJobServerUpdateVersion::~CGCClientJobServerUpdateVersion()
 T CGCClientJobServerWelcome::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T CGCClientJobServerWelcome::~CGCClientJobServerWelcome()
 T CGCClientSystem::BConnectedtoGC() const
 T CGCClientSystem::BSendMessage(GCSDK::CProtoBufMsgBase const&)
 T CGCClientSystem::CGCClientSystem()
 T CGCClientSystem::GCThink()
 T CGCClientSystem::GetGCClient()
 T CGCClientSystem::GetSOCache(GCSDK::SOID_t)
 T CGCClientSystem::InitGC()
 T CGCClientSystem::LevelInitPreEntity()
 T CGCClientSystem::LevelShutdownPostEntity()
 T CGCClientSystem::OnLogonSuccess(SteamServersConnected_t*)
 T CGCClientSystem::PostInit()
 T CGCClientSystem::PostInitGC()
 T CGCClientSystem::PreInitGC()
 T CGCClientSystem::ProcessWelcomeMessage(CMsgClientWelcome const&)
 T CGCClientSystem::SetupGC()
 T CGCClientSystem::Shutdown()
 T CGCClientSystem::~CGCClientSystem()
 T CGCDev_NewItemRequestResponse::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCDev_NewItemRequestResponse::~CGCDev_NewItemRequestResponse()
 T CGCItemAcknowledged::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCItemAcknowledged::~CGCItemAcknowledged()
 T CGCMsgGetIPLocation::ByteSize() const
 T CGCMsgGetIPLocation::Clear()
 T CGCMsgGetIPLocation::GetCachedSize() const
 T CGCMsgGetIPLocation::GetMetadata() const
 T CGCMsgGetIPLocation::IsInitialized() const
 T CGCMsgGetIPLocation::MergeFrom(CGCMsgGetIPLocation const&)
 T CGCMsgGetIPLocation::New() const
 T CGCMsgGetIPLocation::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetIPLocation::SetCachedSize(int) const
 T CGCMsgGetIPLocation::~CGCMsgGetIPLocation()
 T CGCMsgGetIPLocationResponse::ByteSize() const
 T CGCMsgGetIPLocationResponse::Clear()
 T CGCMsgGetIPLocationResponse::GetCachedSize() const
 T CGCMsgGetIPLocationResponse::GetMetadata() const
 T CGCMsgGetIPLocationResponse::IsInitialized() const
 T CGCMsgGetIPLocationResponse::MergeFrom(CGCMsgGetIPLocationResponse const&)
 T CGCMsgGetIPLocationResponse::New() const
 T CGCMsgGetIPLocationResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetIPLocationResponse::SetCachedSize(int) const
 T CGCMsgGetIPLocationResponse::~CGCMsgGetIPLocationResponse()
 T CGCMsgGetSystemStats::ByteSize() const
 T CGCMsgGetSystemStats::Clear()
 T CGCMsgGetSystemStats::GetCachedSize() const
 T CGCMsgGetSystemStats::GetMetadata() const
 T CGCMsgGetSystemStats::IsInitialized() const
 T CGCMsgGetSystemStats::MergeFrom(CGCMsgGetSystemStats const&)
 T CGCMsgGetSystemStats::New() const
 T CGCMsgGetSystemStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetSystemStats::SetCachedSize(int) const
 T CGCMsgGetSystemStats::~CGCMsgGetSystemStats()
 T CGCMsgGetSystemStatsResponse::ByteSize() const
 T CGCMsgGetSystemStatsResponse::Clear()
 T CGCMsgGetSystemStatsResponse::GetCachedSize() const
 T CGCMsgGetSystemStatsResponse::GetMetadata() const
 T CGCMsgGetSystemStatsResponse::IsInitialized() const
 T CGCMsgGetSystemStatsResponse::MergeFrom(CGCMsgGetSystemStatsResponse const&)
 T CGCMsgGetSystemStatsResponse::New() const
 T CGCMsgGetSystemStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetSystemStatsResponse::SetCachedSize(int) const
 T CGCMsgGetSystemStatsResponse::~CGCMsgGetSystemStatsResponse()
 T CGCMsgMemCachedDelete::ByteSize() const
 T CGCMsgMemCachedDelete::Clear()
 T CGCMsgMemCachedDelete::GetCachedSize() const
 T CGCMsgMemCachedDelete::GetMetadata() const
 T CGCMsgMemCachedDelete::IsInitialized() const
 T CGCMsgMemCachedDelete::MergeFrom(CGCMsgMemCachedDelete const&)
 T CGCMsgMemCachedDelete::New() const
 T CGCMsgMemCachedDelete::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedDelete::SetCachedSize(int) const
 T CGCMsgMemCachedDelete::~CGCMsgMemCachedDelete()
 T CGCMsgMemCachedGet::ByteSize() const
 T CGCMsgMemCachedGet::Clear()
 T CGCMsgMemCachedGet::GetCachedSize() const
 T CGCMsgMemCachedGet::GetMetadata() const
 T CGCMsgMemCachedGet::IsInitialized() const
 T CGCMsgMemCachedGet::MergeFrom(CGCMsgMemCachedGet const&)
 T CGCMsgMemCachedGet::New() const
 T CGCMsgMemCachedGet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGet::SetCachedSize(int) const
 T CGCMsgMemCachedGet::~CGCMsgMemCachedGet()
 T CGCMsgMemCachedGetResponse::ByteSize() const
 T CGCMsgMemCachedGetResponse::Clear()
 T CGCMsgMemCachedGetResponse::GetCachedSize() const
 T CGCMsgMemCachedGetResponse::GetMetadata() const
 T CGCMsgMemCachedGetResponse::IsInitialized() const
 T CGCMsgMemCachedGetResponse::MergeFrom(CGCMsgMemCachedGetResponse const&)
 T CGCMsgMemCachedGetResponse::New() const
 T CGCMsgMemCachedGetResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGetResponse::SetCachedSize(int) const
 T CGCMsgMemCachedGetResponse::~CGCMsgMemCachedGetResponse()
 T CGCMsgMemCachedGetResponse_ValueTag::ByteSize() const
 T CGCMsgMemCachedGetResponse_ValueTag::Clear()
 T CGCMsgMemCachedGetResponse_ValueTag::GetCachedSize() const
 T CGCMsgMemCachedGetResponse_ValueTag::GetMetadata() const
 T CGCMsgMemCachedGetResponse_ValueTag::IsInitialized() const
 T CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(CGCMsgMemCachedGetResponse_ValueTag const&)
 T CGCMsgMemCachedGetResponse_ValueTag::New() const
 T CGCMsgMemCachedGetResponse_ValueTag::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGetResponse_ValueTag::SetCachedSize(int) const
 T CGCMsgMemCachedGetResponse_ValueTag::~CGCMsgMemCachedGetResponse_ValueTag()
 T CGCMsgMemCachedSet::ByteSize() const
 T CGCMsgMemCachedSet::Clear()
 T CGCMsgMemCachedSet::GetCachedSize() const
 T CGCMsgMemCachedSet::GetMetadata() const
 T CGCMsgMemCachedSet::IsInitialized() const
 T CGCMsgMemCachedSet::MergeFrom(CGCMsgMemCachedSet const&)
 T CGCMsgMemCachedSet::New() const
 T CGCMsgMemCachedSet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedSet::SetCachedSize(int) const
 T CGCMsgMemCachedSet::~CGCMsgMemCachedSet()
 T CGCMsgMemCachedSet_KeyPair::ByteSize() const
 T CGCMsgMemCachedSet_KeyPair::Clear()
 T CGCMsgMemCachedSet_KeyPair::GetCachedSize() const
 T CGCMsgMemCachedSet_KeyPair::GetMetadata() const
 T CGCMsgMemCachedSet_KeyPair::IsInitialized() const
 T CGCMsgMemCachedSet_KeyPair::MergeFrom(CGCMsgMemCachedSet_KeyPair const&)
 T CGCMsgMemCachedSet_KeyPair::New() const
 T CGCMsgMemCachedSet_KeyPair::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedSet_KeyPair::SetCachedSize(int) const
 T CGCMsgMemCachedSet_KeyPair::SharedDtor()
 T CGCMsgMemCachedSet_KeyPair::~CGCMsgMemCachedSet_KeyPair()
 T CGCMsgMemCachedStats::ByteSize() const
 T CGCMsgMemCachedStats::Clear()
 T CGCMsgMemCachedStats::GetCachedSize() const
 T CGCMsgMemCachedStats::GetMetadata() const
 T CGCMsgMemCachedStats::IsInitialized() const
 T CGCMsgMemCachedStats::MergeFrom(CGCMsgMemCachedStats const&)
 T CGCMsgMemCachedStats::New() const
 T CGCMsgMemCachedStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedStats::SetCachedSize(int) const
 T CGCMsgMemCachedStats::~CGCMsgMemCachedStats()
 T CGCMsgMemCachedStatsResponse::ByteSize() const
 T CGCMsgMemCachedStatsResponse::Clear()
 T CGCMsgMemCachedStatsResponse::GetCachedSize() const
 T CGCMsgMemCachedStatsResponse::GetMetadata() const
 T CGCMsgMemCachedStatsResponse::IsInitialized() const
 T CGCMsgMemCachedStatsResponse::MergeFrom(CGCMsgMemCachedStatsResponse const&)
 T CGCMsgMemCachedStatsResponse::New() const
 T CGCMsgMemCachedStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedStatsResponse::SetCachedSize(int) const
 T CGCMsgMemCachedStatsResponse::~CGCMsgMemCachedStatsResponse()
 T CGCMsgSQLStats::ByteSize() const
 T CGCMsgSQLStats::Clear()
 T CGCMsgSQLStats::GetCachedSize() const
 T CGCMsgSQLStats::GetMetadata() const
 T CGCMsgSQLStats::IsInitialized() const
 T CGCMsgSQLStats::MergeFrom(CGCMsgSQLStats const&)
 T CGCMsgSQLStats::New() const
 T CGCMsgSQLStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgSQLStats::SetCachedSize(int) const
 T CGCMsgSQLStats::~CGCMsgSQLStats()
 T CGCMsgSQLStatsResponse::ByteSize() const
 T CGCMsgSQLStatsResponse::Clear()
 T CGCMsgSQLStatsResponse::GetCachedSize() const
 T CGCMsgSQLStatsResponse::GetMetadata() const
 T CGCMsgSQLStatsResponse::IsInitialized() const
 T CGCMsgSQLStatsResponse::MergeFrom(CGCMsgSQLStatsResponse const&)
 T CGCMsgSQLStatsResponse::New() const
 T CGCMsgSQLStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgSQLStatsResponse::SetCachedSize(int) const
 T CGCMsgSQLStatsResponse::~CGCMsgSQLStatsResponse()
 T CGCMsgSystemStatsSchema::ByteSize() const
 T CGCMsgSystemStatsSchema::Clear()
 T CGCMsgSystemStatsSchema::GetCachedSize() const
 T CGCMsgSystemStatsSchema::GetMetadata() const
 T CGCMsgSystemStatsSchema::IsInitialized() const
 T CGCMsgSystemStatsSchema::MergeFrom(CGCMsgSystemStatsSchema const&)
 T CGCMsgSystemStatsSchema::New() const
 T CGCMsgSystemStatsSchema::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgSystemStatsSchema::SetCachedSize(int) const
 T CGCMsgSystemStatsSchema::~CGCMsgSystemStatsSchema()
 T CGCStorePurchaseInit_LineItem::ByteSize() const
 T CGCStorePurchaseInit_LineItem::Clear()
 T CGCStorePurchaseInit_LineItem::GetCachedSize() const
 T CGCStorePurchaseInit_LineItem::GetMetadata() const
 T CGCStorePurchaseInit_LineItem::IsInitialized() const
 T CGCStorePurchaseInit_LineItem::MergeFrom(CGCStorePurchaseInit_LineItem const&)
 T CGCStorePurchaseInit_LineItem::New() const
 T CGCStorePurchaseInit_LineItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCStorePurchaseInit_LineItem::SetCachedSize(int) const
 T CGCStorePurchaseInit_LineItem::~CGCStorePurchaseInit_LineItem()
 T CGCSystemMsg_GetAccountDetails::ByteSize() const
 T CGCSystemMsg_GetAccountDetails::Clear()
 T CGCSystemMsg_GetAccountDetails::GetCachedSize() const
 T CGCSystemMsg_GetAccountDetails::GetMetadata() const
 T CGCSystemMsg_GetAccountDetails::IsInitialized() const
 T CGCSystemMsg_GetAccountDetails::MergeFrom(CGCSystemMsg_GetAccountDetails const&)
 T CGCSystemMsg_GetAccountDetails::New() const
 T CGCSystemMsg_GetAccountDetails::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCSystemMsg_GetAccountDetails::SetCachedSize(int) const
 T CGCSystemMsg_GetAccountDetails::~CGCSystemMsg_GetAccountDetails()
 T CGCSystemMsg_GetAccountDetails_Response::ByteSize() const
 T CGCSystemMsg_GetAccountDetails_Response::Clear()
 T CGCSystemMsg_GetAccountDetails_Response::GetCachedSize() const
 T CGCSystemMsg_GetAccountDetails_Response::GetMetadata() const
 T CGCSystemMsg_GetAccountDetails_Response::IsInitialized() const
 T CGCSystemMsg_GetAccountDetails_Response::MergeFrom(CGCSystemMsg_GetAccountDetails_Response const&)
 T CGCSystemMsg_GetAccountDetails_Response::New() const
 T CGCSystemMsg_GetAccountDetails_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCSystemMsg_GetAccountDetails_Response::SetCachedSize(int) const
 T CGCSystemMsg_GetAccountDetails_Response::SharedDtor()
 T CGCSystemMsg_GetAccountDetails_Response::~CGCSystemMsg_GetAccountDetails_Response()
 T CGCSystemMsg_GetPurchaseTrust_Request::ByteSize() const
 T CGCSystemMsg_GetPurchaseTrust_Request::Clear()
 T CGCSystemMsg_GetPurchaseTrust_Request::GetCachedSize() const
 T CGCSystemMsg_GetPurchaseTrust_Request::GetMetadata() const
 T CGCSystemMsg_GetPurchaseTrust_Request::IsInitialized() const
 T CGCSystemMsg_GetPurchaseTrust_Request::MergeFrom(CGCSystemMsg_GetPurchaseTrust_Request const&)
 T CGCSystemMsg_GetPurchaseTrust_Request::New() const
 T CGCSystemMsg_GetPurchaseTrust_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCSystemMsg_GetPurchaseTrust_Request::SetCachedSize(int) const
 T CGCSystemMsg_GetPurchaseTrust_Request::~CGCSystemMsg_GetPurchaseTrust_Request()
 T CGCSystemMsg_GetPurchaseTrust_Response::ByteSize() const
 T CGCSystemMsg_GetPurchaseTrust_Response::Clear()
 T CGCSystemMsg_GetPurchaseTrust_Response::GetCachedSize() const
 T CGCSystemMsg_GetPurchaseTrust_Response::GetMetadata() const
 T CGCSystemMsg_GetPurchaseTrust_Response::IsInitialized() const
 T CGCSystemMsg_GetPurchaseTrust_Response::MergeFrom(CGCSystemMsg_GetPurchaseTrust_Response const&)
 T CGCSystemMsg_GetPurchaseTrust_Response::New() const
 T CGCSystemMsg_GetPurchaseTrust_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCSystemMsg_GetPurchaseTrust_Response::SetCachedSize(int) const
 T CGCSystemMsg_GetPurchaseTrust_Response::~CGCSystemMsg_GetPurchaseTrust_Response()
 T CGCToGCMsgMasterAck::ByteSize() const
 T CGCToGCMsgMasterAck::Clear()
 T CGCToGCMsgMasterAck::GetCachedSize() const
 T CGCToGCMsgMasterAck::GetMetadata() const
 T CGCToGCMsgMasterAck::IsInitialized() const
 T CGCToGCMsgMasterAck::MergeFrom(CGCToGCMsgMasterAck const&)
 T CGCToGCMsgMasterAck::New() const
 T CGCToGCMsgMasterAck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCToGCMsgMasterAck::SetCachedSize(int) const
 T CGCToGCMsgMasterAck::~CGCToGCMsgMasterAck()
 T CGCToGCMsgMasterAck_Response::ByteSize() const
 T CGCToGCMsgMasterAck_Response::Clear()
 T CGCToGCMsgMasterAck_Response::GetCachedSize() const
 T CGCToGCMsgMasterAck_Response::GetMetadata() const
 T CGCToGCMsgMasterAck_Response::IsInitialized() const
 T CGCToGCMsgMasterAck_Response::MergeFrom(CGCToGCMsgMasterAck_Response const&)
 T CGCToGCMsgMasterAck_Response::New() const
 T CGCToGCMsgMasterAck_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCToGCMsgMasterAck_Response::SetCachedSize(int) const
 T CGCToGCMsgMasterAck_Response::~CGCToGCMsgMasterAck_Response()
 T CGCToGCMsgMasterStartupComplete::ByteSize() const
 T CGCToGCMsgMasterStartupComplete::Clear()
 T CGCToGCMsgMasterStartupComplete::GetCachedSize() const
 T CGCToGCMsgMasterStartupComplete::GetMetadata() const
 T CGCToGCMsgMasterStartupComplete::IsInitialized() const
 T CGCToGCMsgMasterStartupComplete::MergeFrom(CGCToGCMsgMasterStartupComplete const&)
 T CGCToGCMsgMasterStartupComplete::New() const
 T CGCToGCMsgMasterStartupComplete::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCToGCMsgMasterStartupComplete::SetCachedSize(int) const
 T CGCToGCMsgMasterStartupComplete::~CGCToGCMsgMasterStartupComplete()
 T CGCToGCMsgRouted::ByteSize() const
 T CGCToGCMsgRouted::Clear()
 T CGCToGCMsgRouted::GetCachedSize() const
 T CGCToGCMsgRouted::GetMetadata() const
 T CGCToGCMsgRouted::IsInitialized() const
 T CGCToGCMsgRouted::MergeFrom(CGCToGCMsgRouted const&)
 T CGCToGCMsgRouted::New() const
 T CGCToGCMsgRouted::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCToGCMsgRouted::SetCachedSize(int) const
 T CGCToGCMsgRouted::~CGCToGCMsgRouted()
 T CGCToGCMsgRoutedReply::ByteSize() const
 T CGCToGCMsgRoutedReply::Clear()
 T CGCToGCMsgRoutedReply::GetCachedSize() const
 T CGCToGCMsgRoutedReply::GetMetadata() const
 T CGCToGCMsgRoutedReply::IsInitialized() const
 T CGCToGCMsgRoutedReply::MergeFrom(CGCToGCMsgRoutedReply const&)
 T CGCToGCMsgRoutedReply::New() const
 T CGCToGCMsgRoutedReply::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCToGCMsgRoutedReply::SetCachedSize(int) const
 T CGCToGCMsgRoutedReply::~CGCToGCMsgRoutedReply()
 T CGameDLL_ConVarAccessor::RegisterConCommandBase(ConCommandBase*)
 T CGameEnd::GetDataDescMap()
 T CGameEnd::InputGameEnd(inputdata_t&)
 T CGameEnd::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameEnd::~CGameEnd()
 T CGameEventListener::GetEventDebugID()
 T CGameEventListener::~CGameEventListener()
 T CGameGibManager::Activate()
 T CGameGibManager::AddGibToLRU(CBaseAnimating*)
 T CGameGibManager::GetDataDescMap()
 T CGameGibManager::InputSetMaxPieces(inputdata_t&)
 T CGameGibManager::InputSetMaxPiecesDX8(inputdata_t&)
 T CGameGibManager::~CGameGibManager()
 T CGameMoney::GetDataDescMap()
 T CGameMoney::InputAddMoneyPlayer(inputdata_t&)
 T CGameMoney::InputAddTeamMoneyCT(inputdata_t&)
 T CGameMoney::InputAddTeamMoneyTerrorist(inputdata_t&)
 T CGameMoney::InputSetMoneyAmount(inputdata_t&)
 T CGameMoney::Spawn()
 T CGameMoney::~CGameMoney()
 T CGameMovement::Accelerate(Vector&, float, float)
 T CGameMovement::AddGravity()
 T CGameMovement::AirAccelerate(Vector&, float, float)
 T CGameMovement::AirMove()
 T CGameMovement::CGameMovement()
 T CGameMovement::CalcRoll(QAngle const&, Vector const&, float, float)
 T CGameMovement::CanAccelerate()
 T CGameMovement::CanUnDuckJump(CGameTrace&)
 T CGameMovement::CanUnduck()
 T CGameMovement::CategorizeGroundSurface(CGameTrace&)
 T CGameMovement::CategorizePosition()
 T CGameMovement::CheckFalling()
 T CGameMovement::CheckJumpButton()
 T CGameMovement::CheckParameters()
 T CGameMovement::CheckStuck()
 T CGameMovement::CheckVelocity()
 T CGameMovement::CheckWater()
 T CGameMovement::CheckWaterJump()
 T CGameMovement::ClimbSpeed() const
 T CGameMovement::ClipVelocity(Vector&, Vector&, Vector&, float)
 T CGameMovement::ComputeConstraintSpeedFactor()
 T CGameMovement::DecayViewPunchAngle()
 T CGameMovement::DiffPrint(char const*, ...)
 T CGameMovement::Duck()
 T CGameMovement::FinishDuck()
 T CGameMovement::FinishGravity()
 T CGameMovement::FinishTrackPredictionErrors(CBasePlayer*)
 T CGameMovement::FinishUnDuck()
 T CGameMovement::FinishUnDuckJump(CGameTrace&)
 T CGameMovement::FixPlayerCrouchStuck(bool)
 T CGameMovement::Friction()
 T CGameMovement::FullLadderMove()
 T CGameMovement::FullNoClipMove(float, float)
 T CGameMovement::FullObserverMove()
 T CGameMovement::FullTossMove()
 T CGameMovement::FullWalkMove()
 T CGameMovement::GameHasLadders() const
 T CGameMovement::GetCheckInterval(CGameMovement::IntervalType_t)
 T CGameMovement::GetMovingPlayer() const
 T CGameMovement::GetPlayerMaxs() const
 T CGameMovement::GetPlayerMaxs(bool) const
 T CGameMovement::GetPlayerMins() const
 T CGameMovement::GetPlayerMins(bool) const
 T CGameMovement::GetPlayerViewOffset(bool) const
 T CGameMovement::GetWaterCheckPosition(int, Vector*)
 T CGameMovement::GetWaterContentsForPointCached(Vector const&, int)
 T CGameMovement::HandleDuckingSpeedCrop()
 T CGameMovement::InWater()
 T CGameMovement::IsDead() const
 T CGameMovement::IsMovingPlayerStuck() const
 T CGameMovement::LadderDistance() const
 T CGameMovement::LadderLateralMultiplier() const
 T CGameMovement::LadderMask() const
 T CGameMovement::LadderMove()
 T CGameMovement::LockTraceFilter(int)
 T CGameMovement::OnJump(float)
 T CGameMovement::OnLadder(CGameTrace&)
 T CGameMovement::OnLand(float)
 T CGameMovement::OnTryPlayerMoveCollision(CGameTrace&)
 T CGameMovement::PerformFlyCollisionResolution(CGameTrace&, Vector&)
 T CGameMovement::PlaySwimSound()
 T CGameMovement::PlayerMove()
 T CGameMovement::PlayerRoughLandingEffects(float)
 T CGameMovement::PlayerSolidMask(bool, CBasePlayer*) const
 T CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)
 T CGameMovement::PushEntity(Vector&, CGameTrace*)
 T CGameMovement::ReduceTimers()
 T CGameMovement::Reset()
 T CGameMovement::SetDuckedEyeOffset(float)
 T CGameMovement::SetGroundEntity(CGameTrace*)
 T CGameMovement::SetupMovementBounds(CMoveData*)
 T CGameMovement::StartGravity()
 T CGameMovement::StartTrackPredictionErrors(CBasePlayer*)
 T CGameMovement::StartUnDuckJump()
 T CGameMovement::StayOnGround()
 T CGameMovement::StepMove(Vector&, CGameTrace&)
 T CGameMovement::TestPlayerPosition(Vector const&, int, CGameTrace&)
 T CGameMovement::TracePlayerBBox(Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CGameMovement::TryPlayerMove(Vector*, CGameTrace*)
 T CGameMovement::UnblockPusher(CBasePlayer*, CBaseEntity*)
 T CGameMovement::UnlockTraceFilter(ITraceFilter*&)
 T CGameMovement::UpdateDuckJumpEyeOffset()
 T CGameMovement::WalkMove()
 T CGameMovement::WaterJump()
 T CGameMovement::WaterMove()
 T CGameMovement::~CGameMovement()
 T CGamePlayerEquip::EquipPlayer(CBaseEntity*)
 T CGamePlayerEquip::GetDataDescMap()
 T CGamePlayerEquip::InputTriggerForAllPlayers(inputdata_t&)
 T CGamePlayerEquip::KeyValue(char const*, char const*)
 T CGamePlayerEquip::Touch(CBaseEntity*)
 T CGamePlayerEquip::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGamePlayerEquip::~CGamePlayerEquip()
 T CGamePlayerTeam::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGamePlayerTeam::~CGamePlayerTeam()
 T CGamePlayerZone::GetDataDescMap()
 T CGamePlayerZone::InputCountPlayersInZone(inputdata_t&)
 T CGamePlayerZone::~CGamePlayerZone()
 T CGameResponseSystem::Precache()
 T CGameResponseSystem::PrecacheResponses(bool)
 T CGameResponseSystem::~CGameResponseSystem()
 T CGameRoundEnd::CGameRoundEnd()
 T CGameRoundEnd::FireGameEvent(IGameEvent*)
 T CGameRoundEnd::GetDataDescMap()
 T CGameRoundEnd::InputEndRound_CounterTerroristsWin(inputdata_t&)
 T CGameRoundEnd::InputEndRound_Draw(inputdata_t&)
 T CGameRoundEnd::InputEndRound_TerroristsWin(inputdata_t&)
 T CGameRoundEnd::~CGameRoundEnd()
 T CGameRules::AIClassText(int)
 T CGameRules::AdjustPlayerDamageInflicted(float)
 T CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)
 T CGameRules::AllowAutoTargetCrosshair()
 T CGameRules::AllowSoundscapes()
 T CGameRules::CGameRules()
 T CGameRules::CanClientCustomizeOwnIdentity()
 T CGameRules::CanEntityBeUsePushed(CBaseEntity*)
 T CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)
 T CGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)
 T CGameRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
 T CGameRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
 T CGameRules::CheckAchievementsEnabled(int)
 T CGameRules::CheckChatText(CBasePlayer*, char*)
 T CGameRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CGameRules::ClientSettingsChanged(CBasePlayer*)
 T CGameRules::CreateCustomNetworkStringTables()
 T CGameRules::CreateStandardEntities()
 T CGameRules::DefaultFOV()
 T CGameRules::DoFindClientInPVS(edict_t*, unsigned char*, unsigned int)
 T CGameRules::EndGameFrame()
 T CGameRules::EndMultiplayerGame()
 T CGameRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CGameRules::FlHEVChargerRechargeTime()
 T CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
 T CGameRules::ForceSplitScreenPlayersOnToSameTeam()
 T CGameRules::FrameUpdatePostEntityThink()
 T CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
 T CGameRules::GetAmmoQuantityScale(int)
 T CGameRules::GetAutoAimMode()
 T CGameRules::GetAutoAimScale(CBasePlayer*)
 T CGameRules::GetChatFormat(bool, CBasePlayer*)
 T CGameRules::GetChatLocation(bool, CBasePlayer*)
 T CGameRules::GetChatPrefix(bool, CBasePlayer*)
 T CGameRules::GetDamageCustomString(CTakeDamageInfo const&)
 T CGameRules::GetDamageMultiplier()
 T CGameRules::GetEncryptionKey()
 T CGameRules::GetGameDescription()
 T CGameRules::GetGameType()
 T CGameRules::GetGameTypeName()
 T CGameRules::GetIndexedTeamName(int)
 T CGameRules::GetMaxHumanPlayers() const
 T CGameRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CGameRules::GetPlayerSpawnSpot(CBasePlayer*)
 T CGameRules::GetSkillLevel()
 T CGameRules::GetTaggedConVarList(KeyValues*)
 T CGameRules::GetTeamIndex(char const*)
 T CGameRules::GetTopDownMovementAxis()
 T CGameRules::GetViewVectors() const
 T CGameRules::IgnorePlayerKillCommand() const
 T CGameRules::InRoundRestart()
 T CGameRules::Init()
 T CGameRules::InitDefaultAIRelationships()
 T CGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
 T CGameRules::IsSkillLevel(int)
 T CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
 T CGameRules::IsTeamChangeSilent(CBasePlayer*, int, bool, bool)
 T CGameRules::IsTeamplay()
 T CGameRules::IsTopDown()
 T CGameRules::IsValidTeam(char const*)
 T CGameRules::LevelShutdown()
 T CGameRules::MarkAchievement(IRecipientFilter&, char const*)
 T CGameRules::Name()
 T CGameRules::NumEntityClasses() const
 T CGameRules::NumFactions() const
 T CGameRules::OnBeginChangeLevel(char const*, KeyValues*)
 T CGameRules::OnNavMeshLoad()
 T CGameRules::OnSkillLevelChanged(int)
 T CGameRules::PlayFootstepSounds(CBasePlayer*)
 T CGameRules::PlayTextureSounds()
 T CGameRules::Precache()
 T CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
 T CGameRules::RefreshSkillData(bool)
 T CGameRules::RegisterScriptFunctions()
 T CGameRules::ResetMapCycleTimeStamp()
 T CGameRules::SetDefaultPlayerTeam(CBasePlayer*)
 T CGameRules::SetSkillLevel(int)
 T CGameRules::ShouldAutoAim(CBasePlayer*, edict_t*)
 T CGameRules::ShouldBurningPropsEmitLight()
 T CGameRules::ShouldCollide(int, int)
 T CGameRules::ShouldTimeoutClient(int, float)
 T CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
 T CGameRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CGameRules::Think()
 T CGameRules::UpdateClientData(CBasePlayer*)
 T CGameRules::UpdateGameplayStatsFromSteam()
 T CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
 T CGameRules::~CGameRules()
 T CGameRulesProxy::CGameRulesProxy()
 T CGameRulesProxy::GetServerClass()
 T CGameRulesProxy::NotifyNetworkStateChanged()
 T CGameRulesProxy::ObjectCaps()
 T CGameRulesProxy::UpdateTransmitState()
 T CGameRulesProxy::YouForgotToImplementOrDeclareServerClass()
 T CGameRulesProxy::~CGameRulesProxy()
 T CGameRulesRegister::CGameRulesRegister(char const*, void (*)())
 T CGameSaveRestoreInfo::BuildEntityHash()
 T CGameSaveRestoreInfo::GetEntityIndex(CBaseEntity const*)
 T CGameScore::GetDataDescMap()
 T CGameScore::InputAddScoreCT(inputdata_t&)
 T CGameScore::InputAddScoreTerrorist(inputdata_t&)
 T CGameScore::InputApplyScore(inputdata_t&)
 T CGameScore::KeyValue(char const*, char const*)
 T CGameScore::Spawn()
 T CGameScore::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameScore::~CGameScore()
 T CGameString::~CGameString()
 T CGameStringPool::Dump()
 T CGameStringPool::LevelShutdownPostEntity()
 T CGameStringPool::Name()
 T CGameStringPool::Remove(char const*)
 T CGameStringPool::~CGameStringPool()
 T CGameText::Display(CBaseEntity*)
 T CGameText::GetDataDescMap()
 T CGameText::InputDisplay(inputdata_t&)
 T CGameText::InputSetPosX(inputdata_t&)
 T CGameText::InputSetPosY(inputdata_t&)
 T CGameText::InputSetText(inputdata_t&)
 T CGameText::InputSetTextColor(inputdata_t&)
 T CGameText::InputSetTextColor2(inputdata_t&)
 T CGameText::KeyValue(char const*, char const*)
 T CGameText::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameText::~CGameText()
 T CGameTimescale::FrameUpdatePostEntityThink()
 T CGameTimescale::Init()
 T CGameTimescale::LevelInitPostEntity()
 T CGameTimescale::LevelShutdownPostEntity()
 T CGameTimescale::Shutdown()
 T CGameTimescale::UpdateTimescale()
 T CGameTimescale::~CGameTimescale()
 T CGameTrace::DidHitNonWorldEntity() const
 T CGameTrace::DidHitWorld() const
 T CGameTrace::GetEntityIndex() const
 T CGameUI::Deactivate(CBaseEntity*)
 T CGameUI::GetDataDescMap()
 T CGameUI::InputActivate(inputdata_t&)
 T CGameUI::InputDeactivate(inputdata_t&)
 T CGameUI::Think()
 T CGameUI::~CGameUI()
 T CGameWeaponManager::CGameWeaponManager()
 T CGameWeaponManager::GetDataDescMap()
 T CGameWeaponManager::InputSetAmmoModifier(inputdata_t&)
 T CGameWeaponManager::InputSetMaxPieces(inputdata_t&)
 T CGameWeaponManager::Spawn()
 T CGameWeaponManager::Think()
 T CGameWeaponManager::~CGameWeaponManager()
 T CGamestatsData::AllocData()
 T CGenericActor* _CreateEntityTemplate<CGenericActor>(CGenericActor*, char const*)
 T CGenericActor::Classify()
 T CGenericActor::GetDataDescMap()
 T CGenericActor::GetSoundInterests()
 T CGenericActor::HandleAnimEvent(animevent_t*)
 T CGenericActor::MaxYawSpeed()
 T CGenericActor::Precache()
 T CGenericActor::Spawn()
 T CGenericActor::UpdateTransmitState()
 T CGenericActor::~CGenericActor()
 T CGenericCycler::Spawn()
 T CGenericCycler::~CGenericCycler()
 T CGenericFlexCycler* _CreateEntityTemplate<CGenericFlexCycler>(CGenericFlexCycler*, char const*)
 T CGenericFlexCycler::Spawn()
 T CGenericFlexCycler::~CGenericFlexCycler()
 T CGenericNPC::Classify()
 T CGenericNPC::GetSoundInterests()
 T CGenericNPC::HandleAnimEvent(animevent_t*)
 T CGenericNPC::MaxYawSpeed()
 T CGenericNPC::Precache()
 T CGenericNPC::Spawn()
 T CGenericNPC::TempGunEffect()
 T CGenericNPC::~CGenericNPC()
 T CGib::BounceGibTouch(CBaseEntity*)
 T CGib::DieThink()
 T CGib::GetDataDescMap()
 T CGib::HasPhysicsAttacker(float)
 T CGib::InitGib(CBaseEntity*, float, float)
 T CGib::ObjectCaps()
 T CGib::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CGib::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CGib::SUB_AllowedToFade()
 T CGib::SetBloodColor(int)
 T CGib::Spawn(char const*, float)
 T CGib::SpawnHeadGib(CBaseEntity*)
 T CGib::SpawnRandomGibs(CBaseEntity*, int, GibType_e)
 T CGib::StickyGibTouch(CBaseEntity*)
 T CGib::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGib::WaitTillLand()
 T CGib::~CGib()
 T CGibShooter::CreateGib()
 T CGibShooter::GetDataDescMap()
 T CGibShooter::InitPointGib(CGib*, Vector const&, float)
 T CGibShooter::InputShoot(inputdata_t&)
 T CGibShooter::Precache()
 T CGibShooter::ShootThink()
 T CGibShooter::Spawn()
 T CGibShooter::SpawnGib(Vector const&, float)
 T CGibShooter::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGibShooter::~CGibShooter()
 T CGlobalEntityList::AddListenerEntity(IEntityListener*)
 T CGlobalEntityList::AddPostClientMessageEntity(CBaseEntity*)
 T CGlobalEntityList::AddToDeleteList(IServerNetworkable*)
 T CGlobalEntityList::CleanupDeleteList()
 T CGlobalEntityList::Clear()
 T CGlobalEntityList::FindEntityByClassname(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityByClassnameNearest(char const*, Vector const&, float)
 T CGlobalEntityList::FindEntityByClassnameWithin(CBaseEntity*, char const*, Vector const&, float)
 T CGlobalEntityList::FindEntityByModel(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityByName(CBaseEntity*, char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*, IEntityFindFilter*)
 T CGlobalEntityList::FindEntityByNameNearest(char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityByNameWithin(CBaseEntity*, char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityByTarget(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityClassNearestFacing(Vector const&, Vector const&, float, char*)
 T CGlobalEntityList::FindEntityGeneric(CBaseEntity*, char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityGenericNearest(char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityGenericWithin(CBaseEntity*, char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityInSphere(CBaseEntity*, Vector const&, float)
 T CGlobalEntityList::FindEntityNearestFacing(Vector const&, Vector const&, float)
 T CGlobalEntityList::FindEntityProcedural(char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::IsEntityPtr(void*)
 T CGlobalEntityList::NextEnt(CBaseEntity*)
 T CGlobalEntityList::NotifyCreateEntity(CBaseEntity*)
 T CGlobalEntityList::NotifyRemoveEntity(CBaseEntity*)
 T CGlobalEntityList::NotifySpawn(CBaseEntity*)
 T CGlobalEntityList::NumberOfEntities()
 T CGlobalEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::PostClientMessagesSent()
 T CGlobalEntityList::RemoveListenerEntity(IEntityListener*)
 T CGlobalEntityList::ReportEntityFlagsChanged(CBaseEntity*, unsigned int, unsigned int)
 T CGlobalEntityList::ResetDeleteList()
 T CGlobalEntityList::UpdateName(IHandleEntity*)
 T CGlobalEntityList::UpdateName(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::~CGlobalEntityList()
 T CGlobalEvent::AddValue(bool, char const*, char const*)
 T CGlobalEvent::Write(CUtlBuffer*)
 T CGlobalEventLine::SetVaryingText(char const*)
 T CGlobalEventLog::AddKeyValue(CGlobalEvent*, bool, char const*, char const*, ...)
 T CGlobalEventLog::CreateEvent(char const*, bool, CGlobalEvent*)
 T CGlobalEventLog::CreateTempEvent(char const*, CGlobalEvent*)
 T CGlobalEventLog::FrameUpdatePostEntityThink()
 T CGlobalEventLog::PostInit()
 T CGlobalEventLog::RemoveEvent(CGlobalEvent*)
 T CGlobalEventLog::SendUpdate()
 T CGlobalEventLog::~CGlobalEventLog()
 T CGlobalState::AddEntity(char const*, char const*, GLOBALESTATE)
 T CGlobalState::DumpGlobals()
 T CGlobalState::LevelShutdownPostEntity()
 T CGlobalState::LevelShutdownPreEntity()
 T CGlobalState::~CGlobalState()
 T CGunTarget::Activate()
 T CGunTarget::BloodColor()
 T CGunTarget::BodyTarget(Vector const&, bool)
 T CGunTarget::Classify()
 T CGunTarget::CreateVPhysics()
 T CGunTarget::GetDataDescMap()
 T CGunTarget::InputStart(inputdata_t&)
 T CGunTarget::InputStop(inputdata_t&)
 T CGunTarget::InputToggle(inputdata_t&)
 T CGunTarget::Next()
 T CGunTarget::OnTakeDamage(CTakeDamageInfo const&)
 T CGunTarget::Spawn()
 T CGunTarget::Start()
 T CGunTarget::Wait()
 T CGunTarget::~CGunTarget()
 T CHEGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CHEGrenade::GetCSWeaponID() const
 T CHEGrenade::GetDataDescMap()
 T CHEGrenade::GetServerClass()
 T CHEGrenade::YouForgotToImplementOrDeclareServerClass()
 T CHEGrenade::~CHEGrenade()
 T CHEGrenadeProjectile::BounceSound()
 T CHEGrenadeProjectile::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CBaseCombatCharacter*, CCSWeaponInfo const&, float)
 T CHEGrenadeProjectile::Detonate()
 T CHEGrenadeProjectile::GetDataDescMap()
 T CHEGrenadeProjectile::GetGrenadeType()
 T CHEGrenadeProjectile::GetParticleSystemName(int, surfacedata_t*)
 T CHEGrenadeProjectile::InitializeSpawnFromWorld(inputdata_t&)
 T CHEGrenadeProjectile::Precache()
 T CHEGrenadeProjectile::Spawn()
 T CHEGrenadeProjectile::~CHEGrenadeProjectile()
 T CHFontProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHFontProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CHFontProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHLTVDirector::AnalyzeCameras()
 T CHLTVDirector::AnalyzePlayers()
 T CHLTVDirector::BuildActivePlayerList()
 T CHLTVDirector::BuildCameraList()
 T CHLTVDirector::CHLTVDirector()
 T CHLTVDirector::CreateShotFromEvent(CHLTVGameEvent*)
 T CHLTVDirector::FindBestGameEvent()
 T CHLTVDirector::FindFirstEvent(int)
 T CHLTVDirector::FinishCameraManShot()
 T CHLTVDirector::FireGameEvent(IGameEvent*)
 T CHLTVDirector::FrameUpdatePostEntityThink()
 T CHLTVDirector::GetDelay()
 T CHLTVDirector::GetDirectorTick()
 T CHLTVDirector::GetFixedCameraEntityName()
 T CHLTVDirector::GetHLTVServer()
 T CHLTVDirector::GetModEvents()
 T CHLTVDirector::GetPVSEntity()
 T CHLTVDirector::GetPVSOrigin()
 T CHLTVDirector::Init()
 T CHLTVDirector::IsActive()
 T CHLTVDirector::LevelInitPostEntity()
 T CHLTVDirector::Name()
 T CHLTVDirector::RemoveEventsFromHistory(int)
 T CHLTVDirector::SetHLTVServer(IHLTVServer*)
 T CHLTVDirector::Shutdown()
 T CHLTVDirector::StartBestFixedCameraShot(bool)
 T CHLTVDirector::StartBestPlayerCameraShot()
 T CHLTVDirector::StartCameraManShot()
 T CHLTVDirector::StartChaseCameraShot(int, int, int, int, int, bool)
 T CHLTVDirector::StartDelayMessage()
 T CHLTVDirector::StartFixedCameraShot(int, int)
 T CHLTVDirector::StartInstantBroadcastShot()
 T CHLTVDirector::StartNewShot()
 T CHLTVDirector::StartRandomShot()
 T CHLTVDirector::UpdateSettings()
 T CHLTVDirector::~CHLTVDirector()
 T CHandleDummy::~CHandleDummy()
 T CHandleTest::GetServerClass()
 T CHandleTest::SetTransmit(CCheckTransmitInfo*, bool)
 T CHandleTest::UpdateTransmitState()
 T CHandleTest::YouForgotToImplementOrDeclareServerClass()
 T CHandleTest::~CHandleTest()
 T CHintCriteria::AddExcludePosition(Vector const&, float)
 T CHintCriteria::AddHintType(int)
 T CHintCriteria::AddIncludePosition(Vector const&, float)
 T CHintCriteria::AddZone(CUtlVector<CHintCriteria::hintZone_t, CUtlMemory<CHintCriteria::hintZone_t, int> >&, Vector const&, float)
 T CHintCriteria::CHintCriteria()
 T CHintCriteria::SetFlag(int)
 T CHintCriteria::SetGroup(string_t)
 T CHintCriteria::SetHintType(int)
 T CHintCriteria::~CHintCriteria()
 T CHintMessage::CHintMessage(char const*, CUtlVector<char const*, CUtlMemory<char const*, int> >*, float)
 T CHintMessage::Send(CBasePlayer*)
 T CHintMessageQueue::AddMessage(char const*, float, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CHintMessageQueue::CHintMessageQueue(CBasePlayer*)
 T CHintMessageQueue::Reset()
 T CHintMessageQueue::Update()
 T CHintMessageTimers::AddTimer(int, float, float, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CHintMessageTimers::Reset()
 T CHintMessageTimers::Update()
 T CHintSystem::HintMessage(int, bool, bool)
 T CHintSystem::ResetHintTimers()
 T CHintSystem::ResetHints()
 T CHintSystem::TimerShouldFire(int)
 T CHintSystem::Update()
 T CHostage::CHostage()
 T CHostage::CSAnim_CanMove()
 T CHostage::CSAnim_GetActiveWeapon()
 T CHostage::CheckForHostageAbuse(CCSPlayer*)
 T CHostage::Classify()
 T CHostage::CreateExpresser()
 T CHostage::Crouch()
 T CHostage::DropHostage(Vector, bool)
 T CHostage::Event_Killed(CTakeDamageInfo const&)
 T CHostage::Follow(CCSPlayer*)
 T CHostage::GetCentroid() const
 T CHostage::GetDataDescMap()
 T CHostage::GetEyes() const
 T CHostage::GetFeet() const
 T CHostage::GetLastKnownArea() const
 T CHostage::GetLeader() const
 T CHostage::GetMoveAngle() const
 T CHostage::GetServerClass()
 T CHostage::GetSimpleGroundHeightWithFloor(Vector const&, float*, Vector*)
 T CHostage::HostageRescueZoneTouch(inputdata_t&)
 T CHostage::HostageThink()
 T CHostage::HostageUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CHostage::Idle()
 T CHostage::IsCrouching() const
 T CHostage::IsFollowing(CBaseEntity const*)
 T CHostage::IsFollowingSomeone()
 T CHostage::IsJumping() const
 T CHostage::IsRescuable() const
 T CHostage::IsRescued() const
 T CHostage::IsRunning() const
 T CHostage::IsUsingLadder() const
 T CHostage::IsValid() const
 T CHostage::Jump()
 T CHostage::KeyValue(char const*, char const*)
 T CHostage::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CHostage::NetworkStateChanged_m_fFlags()
 T CHostage::NetworkStateChanged_m_fFlags(void*)
 T CHostage::NetworkStateChanged_m_iHealth()
 T CHostage::NetworkStateChanged_m_iHealth(void*)
 T CHostage::NetworkStateChanged_m_iMaxHealth()
 T CHostage::NetworkStateChanged_m_iMaxHealth(void*)
 T CHostage::NetworkStateChanged_m_lifeState()
 T CHostage::NetworkStateChanged_m_lifeState(void*)
 T CHostage::ObjectCaps()
 T CHostage::OnMoveToFailure(Vector const&, CImprovLocomotor::MoveToFailureType)
 T CHostage::OnMoveToSuccess(Vector const&)
 T CHostage::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CHostage::PhysicsSimulate()
 T CHostage::PhysicsSolidMaskForEntity() const
 T CHostage::Precache()
 T CHostage::PushawayThink()
 T CHostage::Run()
 T CHostage::SetHostageStartFollowingPlayer(CCSPlayer*)
 T CHostage::SmoothlyDropHostageToGround(Vector)
 T CHostage::Spawn()
 T CHostage::StandUp()
 T CHostage::StartLadder(CNavLadder const*, NavTraverseType, Vector const&, Vector const&)
 T CHostage::Touch(CBaseEntity*)
 T CHostage::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CHostage::TrackPath(Vector const&, float)
 T CHostage::TraverseLadder(CNavLadder const*, NavTraverseType, Vector const&, Vector const&, float)
 T CHostage::UpdateFollowing(float)
 T CHostage::Walk()
 T CHostage::Wiggle()
 T CHostage::YouForgotToImplementOrDeclareServerClass()
 T CHostage::~CHostage()
 T CHostageCarriableProp::GetDataDescMap()
 T CHostageCarriableProp::GetServerClass()
 T CHostageCarriableProp::YouForgotToImplementOrDeclareServerClass()
 T CHostageCarriableProp::~CHostageCarriableProp()
 T CHostageRescueZone::GetDataDescMap()
 T CHostageRescueZone::HostageRescueTouch(CBaseEntity*)
 T CHostageRescueZone::ReInitOnRoundStart()
 T CHostageRescueZone::Spawn()
 T CHostageRescueZone::~CHostageRescueZone()
 T CIKContext::AddAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::AddDependencies(mstudioseqdesc_t&, int, float, float const*, float)
 T CIKContext::AddSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::AutoIKRelease()
 T CIKContext::CIKContext()
 T CIKContext::ClearTargets()
 T CIKContext::Init(CStudioHdr const*, QAngle const&, Vector const&, float, int, int)
 T CIKContext::SolveAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::SolveDependencies(Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKContext::SolveLock(mstudioiklock_t const*, int, Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKContext::SolveSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::UpdateTargets(Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CIKSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CIKSolver::solve(float, float, float const*, float const*, float*)
 T CIKTarget::IsActive()
 T CIKTarget::SetAngles(QAngle const&)
 T CIKTarget::SetNormal(Vector const&)
 T CIKTarget::SetPos(Vector const&)
 T CIKTarget::SetPosWithNormalOffset(Vector const&, Vector const&)
 T CIPLocationInfo::ByteSize() const
 T CIPLocationInfo::Clear()
 T CIPLocationInfo::GetCachedSize() const
 T CIPLocationInfo::GetMetadata() const
 T CIPLocationInfo::IsInitialized() const
 T CIPLocationInfo::MergeFrom(CIPLocationInfo const&)
 T CIPLocationInfo::New() const
 T CIPLocationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CIPLocationInfo::SetCachedSize(int) const
 T CIPLocationInfo::SharedDtor()
 T CIPLocationInfo::~CIPLocationInfo()
 T CIncendiaryGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CIncendiaryGrenade::GetCSWeaponID() const
 T CIncendiaryGrenade::GetServerClass()
 T CIncendiaryGrenade::Precache()
 T CIncendiaryGrenade::YouForgotToImplementOrDeclareServerClass()
 T CIncendiaryGrenade::~CIncendiaryGrenade()
 T CInferno::CInferno()
 T CInferno::CanHarm(CBaseEntity*) const
 T CInferno::CreateFire(Vector const&, Vector const&, CInferno::FireInfo*, int)
 T CInferno::ExtinguishFlamesInSphere(Vector, float)
 T CInferno::FireGameEvent(IGameEvent*)
 T CInferno::GetDamagePerSecond()
 T CInferno::GetDamageType()
 T CInferno::GetDataDescMap()
 T CInferno::GetFlameLifetime() const
 T CInferno::GetFlameSpreadDelay()
 T CInferno::GetImpactParticleEffectName()
 T CInferno::GetParticleEffectName()
 T CInferno::GetServerClass()
 T CInferno::InfernoThink()
 T CInferno::IsTouching(CBaseEntity*, float, bool) const
 T CInferno::IsTouching(Vector const&, Vector const&, Vector*) const
 T CInferno::Precache()
 T CInferno::SetInfernoType(int)
 T CInferno::Spawn()
 T CInferno::Spread(Vector const&)
 T CInferno::StartBurning(Vector const&, Vector const&, Vector const&, int)
 T CInferno::UpdateTransmitState()
 T CInferno::YouForgotToImplementOrDeclareServerClass()
 T CInferno::~CInferno()
 T CInfoCameraLink::Activate()
 T CInfoCameraLink::CInfoCameraLink()
 T CInfoCameraLink::GetDataDescMap()
 T CInfoCameraLink::InputSetCamera(inputdata_t&)
 T CInfoCameraLink::SetCameraByName(char const*)
 T CInfoCameraLink::~CInfoCameraLink()
 T CInfoGameEventProxy::GameEventProxyCallback(CBaseEntity*, CBasePlayer*)
 T CInfoGameEventProxy::GameEventProxyEvaluator(CBaseEntity*, CBasePlayer*)
 T CInfoGameEventProxy::GetDataDescMap()
 T CInfoGameEventProxy::InputDisable(inputdata_t&)
 T CInfoGameEventProxy::InputEnable(inputdata_t&)
 T CInfoGameEventProxy::InputGenerateGameEvent(inputdata_t&)
 T CInfoGameEventProxy::Spawn()
 T CInfoGameEventProxy::UpdateTransmitState()
 T CInfoGameEventProxy::~CInfoGameEventProxy()
 T CInfoInstructorHintBombTargetA::GetDataDescMap()
 T CInfoInstructorHintBombTargetA::Spawn()
 T CInfoInstructorHintBombTargetA::UpdateTransmitState()
 T CInfoInstructorHintBombTargetA::~CInfoInstructorHintBombTargetA()
 T CInfoInstructorHintBombTargetB::GetDataDescMap()
 T CInfoInstructorHintBombTargetB::Spawn()
 T CInfoInstructorHintBombTargetB::UpdateTransmitState()
 T CInfoInstructorHintBombTargetB::~CInfoInstructorHintBombTargetB()
 T CInfoInstructorHintHostageRescueZone::GetDataDescMap()
 T CInfoInstructorHintHostageRescueZone::Spawn()
 T CInfoInstructorHintHostageRescueZone::UpdateTransmitState()
 T CInfoInstructorHintHostageRescueZone::~CInfoInstructorHintHostageRescueZone()
 T CInfoInstructorHintTarget::GetDataDescMap()
 T CInfoInstructorHintTarget::UpdateTransmitState()
 T CInfoInstructorHintTarget::~CInfoInstructorHintTarget()
 T CInfoIntermission::Spawn()
 T CInfoIntermission::Think()
 T CInfoIntermission::~CInfoIntermission()
 T CInfoLadderDismount::DrawDebugGeometryOverlays()
 T CInfoLadderDismount::GetServerClass()
 T CInfoLadderDismount::YouForgotToImplementOrDeclareServerClass()
 T CInfoLadderDismount::~CInfoLadderDismount()
 T CInfoMassCenter::Spawn()
 T CInfoMassCenter::~CInfoMassCenter()
 T CInfoOverlayAccessor::GetDataDescMap()
 T CInfoOverlayAccessor::GetServerClass()
 T CInfoOverlayAccessor::UpdateTransmitState()
 T CInfoOverlayAccessor::YouForgotToImplementOrDeclareServerClass()
 T CInfoOverlayAccessor::~CInfoOverlayAccessor()
 T CInfoRemarkable::GetDataDescMap()
 T CInfoRemarkable::GetListOfAllThatIsRemarkable()
 T CInfoRemarkable::Spawn()
 T CInfoRemarkable::~CInfoRemarkable()
 T CInfoTarget::Spawn()
 T CInfoTarget::UpdateTransmitState()
 T CInfoTarget::~CInfoTarget()
 T CInfoViewParameters::GetDataDescMap()
 T CInfoViewParameters::~CInfoViewParameters()
 T CInstancedSceneEntity::DispatchEndFace(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchEndMoveTo(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchEndSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchPauseScene(CChoreoScene*, char const*)
 T CInstancedSceneEntity::DispatchStartFace(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchStartMoveTo(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchStartSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DoThink(float)
 T CInstancedSceneEntity::EstimateLength()
 T CInstancedSceneEntity::FindNamedActor(char const*)
 T CInstancedSceneEntity::FindNamedEntity(char const*)
 T CInstancedSceneEntity::GetDataDescMap()
 T CInstancedSceneEntity::GetPostSpeakDelay()
 T CInstancedSceneEntity::GetPreDelay()
 T CInstancedSceneEntity::OnLoaded()
 T CInstancedSceneEntity::OnRestore()
 T CInstancedSceneEntity::SetPostSpeakDelay(float)
 T CInstancedSceneEntity::SetPreDelay(float)
 T CInstancedSceneEntity::StartPlayback()
 T CInstancedSceneEntity::~CInstancedSceneEntity()
 T CIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CInventoryManager::AddBaseItemCriteria(baseitemcriteria_t*, CItemSelectionCriteria*)
 T CInventoryManager::CInventoryManager()
 T CInventoryManager::GetBackpackPositionFromBackend(unsigned int)
 T CInventoryManager::GetInventoryForAccount(unsigned int)
 T CInventoryManager::Init()
 T CInventoryManager::LevelInitPreEntity()
 T CInventoryManager::LevelShutdownPostEntity()
 T CInventoryManager::PostInit()
 T CInventoryManager::PostInitGC()
 T CInventoryManager::PreInitGC()
 T CInventoryManager::RegisterPlayerInventory(CPlayerInventory*, IInventoryUpdateListener*, CSteamID*)
 T CInventoryManager::Shutdown()
 T CInventoryManager::SteamRequestInventory(CPlayerInventory*, CSteamID, IInventoryUpdateListener*)
 T CInventoryManager::~CInventoryManager()
 T CIronSightController::CIronSightController()
 T CIronSightController::Init(CWeaponCSBase*)
 T CIronSightController::SetState(CSIronSightMode)
 T CIronSightController::UpdateIronSightAmount()
 T CItem::CItem()
 T CItem::ComeToRest()
 T CItem::CreateItemVPhysicsObject()
 T CItem::GetDataDescMap()
 T CItem::HasBloatedCollision() const
 T CItem::ItemCanBeTouchedByPlayer(CBasePlayer*)
 T CItem::ItemForceTouch(CBaseEntity*)
 T CItem::ItemTouch(CBaseEntity*)
 T CItem::ItemTouchInternal(CBaseEntity*, bool)
 T CItem::Materialize()
 T CItem::MyTouch(CBasePlayer*)
 T CItem::ObjectCaps()
 T CItem::OnEntityEvent(EntityEvent_t, void*)
 T CItem::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CItem::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CItem::Precache()
 T CItem::Respawn()
 T CItem::Spawn()
 T CItem::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CItem::~CItem()
 T CItemAmmo338MAG::GetAmmoName() const
 T CItemAmmo338MAG::~CItemAmmo338MAG()
 T CItemAmmo357SIG::GetAmmoName() const
 T CItemAmmo357SIG::~CItemAmmo357SIG()
 T CItemAmmo357SIG_MIN::GetAmmoName() const
 T CItemAmmo357SIG_MIN::~CItemAmmo357SIG_MIN()
 T CItemAmmo357SIG_P250::GetAmmoName() const
 T CItemAmmo357SIG_P250::~CItemAmmo357SIG_P250()
 T CItemAmmo357SIG_SMALL::GetAmmoName() const
 T CItemAmmo357SIG_SMALL::~CItemAmmo357SIG_SMALL()
 T CItemAmmo45ACP::GetAmmoName() const
 T CItemAmmo45ACP::~CItemAmmo45ACP()
 T CItemAmmo50AE::GetAmmoName() const
 T CItemAmmo50AE::~CItemAmmo50AE()
 T CItemAmmo556MM::GetAmmoName() const
 T CItemAmmo556MM::~CItemAmmo556MM()
 T CItemAmmo556MM_BOX::GetAmmoName() const
 T CItemAmmo556MM_BOX::~CItemAmmo556MM_BOX()
 T CItemAmmo556MM_SMALL::GetAmmoName() const
 T CItemAmmo556MM_SMALL::~CItemAmmo556MM_SMALL()
 T CItemAmmo57MM::GetAmmoName() const
 T CItemAmmo57MM::~CItemAmmo57MM()
 T CItemAmmo762MM::GetAmmoName() const
 T CItemAmmo762MM::~CItemAmmo762MM()
 T CItemAmmo9MM::GetAmmoName() const
 T CItemAmmo9MM::~CItemAmmo9MM()
 T CItemAmmo::MyTouch(CBasePlayer*)
 T CItemAmmoBuckshot::GetAmmoName() const
 T CItemAmmoBuckshot::~CItemAmmoBuckshot()
 T CItemAssaultSuit::MyTouch(CBasePlayer*)
 T CItemAssaultSuit::Precache()
 T CItemAssaultSuit::Spawn()
 T CItemAssaultSuit::~CItemAssaultSuit()
 T CItemDefuser* _CreateEntityTemplate<CItemDefuser>(CItemDefuser*, char const*)
 T CItemDefuser::ActivateThink()
 T CItemDefuser::DefuserTouch(CBaseEntity*)
 T CItemDefuser::GetDataDescMap()
 T CItemDefuser::Precache()
 T CItemDefuser::Spawn()
 T CItemDefuser::~CItemDefuser()
 T CItemGeneration::GenerateItemFromDefIndex(int, Vector const&, QAngle const&)
 T CItemGeneration::GenerateItemFromScriptData(CEconItemView*, Vector const&, QAngle const&, char const*)
 T CItemGeneration::GenerateRandomItem(CItemSelectionCriteria*, Vector const&, QAngle const&)
 T CItemGeneration::SpawnItem(CEconItemView*, Vector const&, QAngle const&, char const*)
 T CItemGeneration::SpawnItem(int, Vector const&, QAngle const&, int, int, char const*)
 T CItemGeneration::~CItemGeneration()
 T CItemKevlar::MyTouch(CBasePlayer*)
 T CItemKevlar::Precache()
 T CItemKevlar::Spawn()
 T CItemKevlar::~CItemKevlar()
 T CItemLevelingDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CItemNvgs::MyTouch(CBasePlayer*)
 T CItemNvgs::Precache()
 T CItemNvgs::Spawn()
 T CItemNvgs::~CItemNvgs()
 T CItemSelectionCriteria::BAddCondition(char const*, EItemCriteriaOperator, char const*, bool)
 T CItemSelectionCriteria::BAddCondition(char const*, EItemCriteriaOperator, float, bool)
 T CItemSelectionCriteria::BDeserializeFromMsg(CSOItemCriteria const&)
 T CItemSelectionCriteria::BEvaluate(CEconItem const*, CEconItemSchema const&) const
 T CItemSelectionCriteria::BEvaluate(CEconItemDefinition const*, CEconItemSchema const&) const
 T CItemSelectionCriteria::BInitFromItemAndPaint(int, int, CEconItemSchema const&)
 T CItemSelectionCriteria::BInitFromKV(KeyValues*, CEconItemSchema const&)
 T CItemSelectionCriteria::BSerializeToMsg(CSOItemCriteria&) const
 T CItemSelectionCriteria::CCondition::BEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CCondition::GetField()
 T CItemSelectionCriteria::CCondition::GetValue()
 T CItemSelectionCriteria::CCondition::~CCondition()
 T CItemSelectionCriteria::CFloatCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CFloatCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CFloatCondition::~CFloatCondition()
 T CItemSelectionCriteria::CSetCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CSetCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CSetCondition::~CSetCondition()
 T CItemSelectionCriteria::CStringCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CStringCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CStringCondition::GetValue()
 T CItemSelectionCriteria::CStringCondition::~CStringCondition()
 T CItemSelectionCriteria::operator=(CItemSelectionCriteria const&)
 T CItemSelectionCriteria::~CItemSelectionCriteria()
 T CItemSoda::CanThink()
 T CItemSoda::CanTouch(CBaseEntity*)
 T CItemSoda::GetDataDescMap()
 T CItemSoda::Precache()
 T CItemSoda::Spawn()
 T CItemSoda::~CItemSoda()
 T CJob::CJob(JobPriority_t)
 T CJob::Describe()
 T CJob::DoAbort(bool)
 T CJob::DoCleanup()
 T CJob::~CJob()
 T CKeepUpright::Activate()
 T CKeepUpright::GetDataDescMap()
 T CKeepUpright::InputSetAngularLimit(inputdata_t&)
 T CKeepUpright::InputTurnOff(inputdata_t&)
 T CKeepUpright::InputTurnOn(inputdata_t&)
 T CKeepUpright::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CKeepUpright::Spawn()
 T CKeepUpright::~CKeepUpright()
 T CKeyBindingsMgr::AddPanelToContext(vgui::KeyBindingContextHandle_t, vgui::Panel*)
 T CKeyBindingsMgr::Find(vgui::KeyBindingContextHandle_t)
 T CKeyBindingsMgr::KeyBindingContextHandleLessFunc(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&)
 T CKeyBindingsMgr::~CKeyBindingsMgr()
 T CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)
 T CKeyValuesDumpContextAsDevMsg::KvWriteText(char const*)
 T CKeyValuesErrorStack::ReportError(char const*)
 T CKeyValuesTokenReader::ReadToken(bool&, bool&)
 T CKeyValuesTokenReader::SeekBackOneToken()
 T CKickIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CKickIssue::ExecuteCommand()
 T CKickIssue::ExtractDataFromDetails(char const*, CCSPlayer**, unsigned int*)
 T CKickIssue::GetDetailsString()
 T CKickIssue::GetDisplayString()
 T CKickIssue::GetOtherTeamDisplayString()
 T CKickIssue::GetVoteIssue()
 T CKickIssue::GetVotePassedString()
 T CKickIssue::IsAllyRestrictedVote()
 T CKickIssue::IsEnabled()
 T CKickIssue::IsEnabledInQueuedMatchmaking()
 T CKickIssue::ListIssueDetails(CBasePlayer*)
 T CKickIssue::OnVoteFailed()
 T CKickIssue::OnVoteStarted()
 T CKickIssue::~CKickIssue()
 T CKnife::CanBeSelected()
 T CKnife::Deploy()
 T CKnife::GetCSWeaponID() const
 T CKnife::GetServerClass()
 T CKnife::HasPrimaryAmmo()
 T CKnife::Precache()
 T CKnife::PrimaryAttack()
 T CKnife::SecondaryAttack()
 T CKnife::Spawn()
 T CKnife::SwingOrStab(CSWeaponMode)
 T CKnife::WeaponIdle()
 T CKnife::YouForgotToImplementOrDeclareServerClass()
 T CKnife::~CKnife()
 T CKnifeGG::GetCSWeaponID() const
 T CKnifeGG::GetServerClass()
 T CKnifeGG::YouForgotToImplementOrDeclareServerClass()
 T CKnifeGG::~CKnifeGG()
 T CLagCompensationManager::AddAdditionalEntity(CBaseEntity*)
 T CLagCompensationManager::BacktrackEntity(CBaseEntity*, float, CUtlFixedLinkedList<LagRecord>*, LagRecord*, LagRecord*, bool)
 T CLagCompensationManager::ClearHistory()
 T CLagCompensationManager::FinishLagCompensation(CBasePlayer*)
 T CLagCompensationManager::FrameUpdatePostEntityThink()
 T CLagCompensationManager::LevelShutdownPostEntity()
 T CLagCompensationManager::RecordDataIntoTrack(CBaseEntity*, CUtlFixedLinkedList<LagRecord>*, bool)
 T CLagCompensationManager::RemoveAdditionalEntity(CBaseEntity*)
 T CLagCompensationManager::RestoreEntityFromRecords(CBaseEntity*, LagRecord*, LagRecord*, bool)
 T CLagCompensationManager::Shutdown()
 T CLagCompensationManager::StartLagCompensation(CBasePlayer*, LagCompensationType, Vector const&, QAngle const&, float)
 T CLagCompensationManager::~CLagCompensationManager()
 T CLight::FadeThink()
 T CLight::GetDataDescMap()
 T CLight::InputFadeToPattern(inputdata_t&)
 T CLight::InputSetPattern(inputdata_t&)
 T CLight::InputToggle(inputdata_t&)
 T CLight::InputTurnOff(inputdata_t&)
 T CLight::InputTurnOn(inputdata_t&)
 T CLight::KeyValue(char const*, char const*)
 T CLight::Spawn()
 T CLight::TurnOff()
 T CLight::TurnOn()
 T CLight::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CLight::~CLight()
 T CLightGlow::Activate()
 T CLightGlow::CLightGlow()
 T CLightGlow::GetDataDescMap()
 T CLightGlow::GetServerClass()
 T CLightGlow::InputColor(inputdata_t&)
 T CLightGlow::Spawn()
 T CLightGlow::UpdateTransmitState()
 T CLightGlow::YouForgotToImplementOrDeclareServerClass()
 T CLightGlow::~CLightGlow()
 T CLoadBackupIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CLoadBackupIssue::ExecuteCommand()
 T CLoadBackupIssue::GetDetailsString()
 T CLoadBackupIssue::GetDisplayString()
 T CLoadBackupIssue::GetFailedVoteLockOutTime()
 T CLoadBackupIssue::GetVoteIssue()
 T CLoadBackupIssue::GetVotePassedString()
 T CLoadBackupIssue::IsAllyRestrictedVote()
 T CLoadBackupIssue::IsEnabled()
 T CLoadBackupIssue::IsEnabledInQueuedMatchmaking()
 T CLoadBackupIssue::ListIssueDetails(CBasePlayer*)
 T CLoadBackupIssue::OnVoteFailed()
 T CLoadBackupIssue::~CLoadBackupIssue()
 T CLogicActiveAutosave::GetDataDescMap()
 T CLogicActiveAutosave::InputDisable(inputdata_t&)
 T CLogicActiveAutosave::InputEnable(inputdata_t&)
 T CLogicActiveAutosave::SaveThink()
 T CLogicActiveAutosave::~CLogicActiveAutosave()
 T CLogicAuto::Activate()
 T CLogicAuto::FireGameEvent(IGameEvent*)
 T CLogicAuto::GetDataDescMap()
 T CLogicAuto::ObjectCaps()
 T CLogicAuto::Think()
 T CLogicAuto::~CLogicAuto()
 T CLogicAutosave::GetDataDescMap()
 T CLogicAutosave::InputSave(inputdata_t&)
 T CLogicAutosave::InputSaveDangerous(inputdata_t&)
 T CLogicAutosave::InputSetMinHitpointsThreshold(inputdata_t&)
 T CLogicAutosave::~CLogicAutosave()
 T CLogicBranch::AddLogicBranchListener(CBaseEntity*)
 T CLogicBranch::DrawDebugTextOverlays()
 T CLogicBranch::GetDataDescMap()
 T CLogicBranch::InputSetValue(inputdata_t&)
 T CLogicBranch::InputSetValueTest(inputdata_t&)
 T CLogicBranch::InputTest(inputdata_t&)
 T CLogicBranch::InputToggle(inputdata_t&)
 T CLogicBranch::InputToggleTest(inputdata_t&)
 T CLogicBranch::UpdateOnRemove()
 T CLogicBranch::UpdateValue(bool, CBaseEntity*, CLogicBranch::LogicBranchFire_t)
 T CLogicBranch::~CLogicBranch()
 T CLogicBranchList::Activate()
 T CLogicBranchList::DoTest(CBaseEntity*)
 T CLogicBranchList::DrawDebugTextOverlays()
 T CLogicBranchList::GetDataDescMap()
 T CLogicBranchList::InputTest(inputdata_t&)
 T CLogicBranchList::Input_OnLogicBranchChanged(inputdata_t&)
 T CLogicBranchList::Input_OnLogicBranchRemoved(inputdata_t&)
 T CLogicBranchList::Spawn()
 T CLogicBranchList::~CLogicBranchList()
 T CLogicCase::GetDataDescMap()
 T CLogicCase::InputPickRandom(inputdata_t&)
 T CLogicCase::InputPickRandomShuffle(inputdata_t&)
 T CLogicCase::InputValue(inputdata_t&)
 T CLogicCase::Spawn()
 T CLogicCase::~CLogicCase()
 T CLogicCollisionPair::Activate()
 T CLogicCollisionPair::EnableCollisions(bool)
 T CLogicCollisionPair::GetDataDescMap()
 T CLogicCollisionPair::InputDisableCollisions(inputdata_t&)
 T CLogicCollisionPair::InputEnableCollisions(inputdata_t&)
 T CLogicCollisionPair::~CLogicCollisionPair()
 T CLogicCompare::DoCompare(CBaseEntity*, float)
 T CLogicCompare::DrawDebugTextOverlays()
 T CLogicCompare::GetDataDescMap()
 T CLogicCompare::InputCompare(inputdata_t&)
 T CLogicCompare::InputSetCompareValue(inputdata_t&)
 T CLogicCompare::InputSetValue(inputdata_t&)
 T CLogicCompare::InputSetValueCompare(inputdata_t&)
 T CLogicCompare::~CLogicCompare()
 T CLogicCompareInteger::GetDataDescMap()
 T CLogicCompareInteger::InputCompareValues(inputdata_t&)
 T CLogicCompareInteger::InputValue(inputdata_t&)
 T CLogicCompareInteger::~CLogicCompareInteger()
 T CLogicEventListener::FireGameEvent(IGameEvent*)
 T CLogicEventListener::GetDataDescMap()
 T CLogicEventListener::InputDisable(inputdata_t&)
 T CLogicEventListener::InputEnable(inputdata_t&)
 T CLogicEventListener::Spawn()
 T CLogicEventListener::~CLogicEventListener()
 T CLogicEventListenerItemEquip::FireGameEvent(IGameEvent*)
 T CLogicEventListenerItemEquip::GetDataDescMap()
 T CLogicEventListenerItemEquip::InputDisable(inputdata_t&)
 T CLogicEventListenerItemEquip::InputEnable(inputdata_t&)
 T CLogicEventListenerItemEquip::Spawn()
 T CLogicEventListenerItemEquip::~CLogicEventListenerItemEquip()
 T CLogicLineToEntity::Activate()
 T CLogicLineToEntity::GetDataDescMap()
 T CLogicLineToEntity::Spawn()
 T CLogicLineToEntity::Think()
 T CLogicLineToEntity::~CLogicLineToEntity()
 T CLogicMeasureMovement::Activate()
 T CLogicMeasureMovement::GetDataDescMap()
 T CLogicMeasureMovement::InputDisable(inputdata_t&)
 T CLogicMeasureMovement::InputEnable(inputdata_t&)
 T CLogicMeasureMovement::InputSetMeasureReference(inputdata_t&)
 T CLogicMeasureMovement::InputSetMeasureTarget(inputdata_t&)
 T CLogicMeasureMovement::InputSetTarget(inputdata_t&)
 T CLogicMeasureMovement::InputSetTargetReference(inputdata_t&)
 T CLogicMeasureMovement::InputSetTargetScale(inputdata_t&)
 T CLogicMeasureMovement::MeasureThink()
 T CLogicMeasureMovement::SetMeasureTarget(char const*)
 T CLogicMeasureMovement::~CLogicMeasureMovement()
 T CLogicNavigation::Activate()
 T CLogicNavigation::GetDataDescMap()
 T CLogicNavigation::InputToggle(inputdata_t&)
 T CLogicNavigation::InputTurnOff(inputdata_t&)
 T CLogicNavigation::InputTurnOn(inputdata_t&)
 T CLogicNavigation::KeyValue(char const*, char const*)
 T CLogicNavigation::OnEntitySpawned(CBaseEntity*)
 T CLogicNavigation::UpdateOnRemove()
 T CLogicNavigation::UpdateProperty()
 T CLogicNavigation::~CLogicNavigation()
 T CLogicPlayMovie::GetDataDescMap()
 T CLogicPlayMovie::InputFadeAllMovies(inputdata_t&)
 T CLogicPlayMovie::InputMovieFinished(inputdata_t&)
 T CLogicPlayMovie::InputPlayLevelTransitionMovie(inputdata_t&)
 T CLogicPlayMovie::InputPlayMovie(inputdata_t&)
 T CLogicPlayMovie::InputPlayMovieForAllPlayers(inputdata_t&)
 T CLogicPlayMovie::Precache()
 T CLogicPlayMovie::Spawn()
 T CLogicPlayMovie::~CLogicPlayMovie()
 T CLogicPlayerProxy::Activate()
 T CLogicPlayerProxy::GetDataDescMap()
 T CLogicPlayerProxy::PassesDamageFilter(CTakeDamageInfo const&)
 T CLogicPlayerProxy::~CLogicPlayerProxy()
 T CLogicRandomOutputs::Activate()
 T CLogicRandomOutputs::GetDataDescMap()
 T CLogicRandomOutputs::InputCancelPending(inputdata_t&)
 T CLogicRandomOutputs::InputDisable(inputdata_t&)
 T CLogicRandomOutputs::InputEnable(inputdata_t&)
 T CLogicRandomOutputs::InputEnableRefire(inputdata_t&)
 T CLogicRandomOutputs::InputToggle(inputdata_t&)
 T CLogicRandomOutputs::InputTrigger(inputdata_t&)
 T CLogicRandomOutputs::KeyValue(char const*, char const*)
 T CLogicRandomOutputs::Think()
 T CLogicRandomOutputs::~CLogicRandomOutputs()
 T CLogicRegisterActivator::GetDataDescMap()
 T CLogicRegisterActivator::InputDisable(inputdata_t&)
 T CLogicRegisterActivator::InputEnable(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator1(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator2(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator3(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator4(inputdata_t&)
 T CLogicRegisterActivator::InputRegisterEntity(inputdata_t&)
 T CLogicRegisterActivator::InputToggle(inputdata_t&)
 T CLogicRegisterActivator::~CLogicRegisterActivator()
 T CLogicRelay::Activate()
 T CLogicRelay::GetDataDescMap()
 T CLogicRelay::InputCancelPending(inputdata_t&)
 T CLogicRelay::InputDisable(inputdata_t&)
 T CLogicRelay::InputEnable(inputdata_t&)
 T CLogicRelay::InputEnableRefire(inputdata_t&)
 T CLogicRelay::InputToggle(inputdata_t&)
 T CLogicRelay::InputTrigger(inputdata_t&)
 T CLogicRelay::Think()
 T CLogicRelay::~CLogicRelay()
 T CLogicScript::GetDataDescMap()
 T CLogicScript::RunVScripts()
 T CLogicScript::~CLogicScript()
 T CLogicalEntity::KeyValue(char const*, char const*)
 T CMapEntitySpawner::AddEntity(CBaseEntity*, char const*, int)
 T CMapEntitySpawner::CMapEntitySpawner()
 T CMapEntitySpawner::HandleTemplates()
 T CMapEntitySpawner::SpawnAndActivate(bool)
 T CMapEntitySpawner::~CMapEntitySpawner()
 T CMapInfo::GetDataDescMap()
 T CMapInfo::InputFireWinCondition(inputdata_t&)
 T CMapInfo::KeyValue(char const*, char const*)
 T CMapInfo::Spawn()
 T CMapInfo::~CMapInfo()
 T CMapLoadEntityFilter::CreateNextEntity(char const*)
 T CMapLoadEntityFilter::ShouldCreateEntity(char const*)
 T CMaterialModifyControl::CMaterialModifyControl()
 T CMaterialModifyControl::GetDataDescMap()
 T CMaterialModifyControl::GetServerClass()
 T CMaterialModifyControl::InputStartAnimSequence(inputdata_t&)
 T CMaterialModifyControl::InputStartFloatLerp(inputdata_t&)
 T CMaterialModifyControl::KeyValue(char const*, char const*)
 T CMaterialModifyControl::ObjectCaps()
 T CMaterialModifyControl::SetMaterialVar(inputdata_t&)
 T CMaterialModifyControl::SetMaterialVarToCurrentTime(inputdata_t&)
 T CMaterialModifyControl::ShouldTransmit(CCheckTransmitInfo const*)
 T CMaterialModifyControl::Spawn()
 T CMaterialModifyControl::UpdateTransmitState()
 T CMaterialModifyControl::YouForgotToImplementOrDeclareServerClass()
 T CMaterialModifyControl::~CMaterialModifyControl()
 T CMaterialReference::CMaterialReference(char const*, char const*, bool)
 T CMaterialReference::Init(char const*, char const*, bool)
 T CMaterialReference::~CMaterialReference()
 T CMathColorBlend::GetDataDescMap()
 T CMathColorBlend::InputValue(inputdata_t&)
 T CMathColorBlend::Spawn()
 T CMathColorBlend::~CMathColorBlend()
 T CMathCounter* _CreateEntityTemplate<CMathCounter>(CMathCounter*, char const*)
 T CMathCounter::DrawDebugTextOverlays()
 T CMathCounter::GetDataDescMap()
 T CMathCounter::InputAdd(inputdata_t&)
 T CMathCounter::InputDisable(inputdata_t&)
 T CMathCounter::InputDivide(inputdata_t&)
 T CMathCounter::InputEnable(inputdata_t&)
 T CMathCounter::InputGetValue(inputdata_t&)
 T CMathCounter::InputMultiply(inputdata_t&)
 T CMathCounter::InputSetHitMax(inputdata_t&)
 T CMathCounter::InputSetHitMin(inputdata_t&)
 T CMathCounter::InputSetMaxValueNoFire(inputdata_t&)
 T CMathCounter::InputSetMinValueNoFire(inputdata_t&)
 T CMathCounter::InputSetValue(inputdata_t&)
 T CMathCounter::InputSetValueNoFire(inputdata_t&)
 T CMathCounter::InputSubtract(inputdata_t&)
 T CMathCounter::KeyValue(char const*, char const*)
 T CMathCounter::Spawn()
 T CMathCounter::UpdateOutValue(CBaseEntity*, float)
 T CMathCounter::~CMathCounter()
 T CMathRemap::GetDataDescMap()
 T CMathRemap::InputDisable(inputdata_t&)
 T CMathRemap::InputEnable(inputdata_t&)
 T CMathRemap::InputValue(inputdata_t&)
 T CMathRemap::Spawn()
 T CMathRemap::~CMathRemap()
 T CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T CMemberScriptBinding0<CBaseAnimating*, bool (CBaseAnimating::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, HSCRIPT__* (CBaseEntity::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, Vector const& (CBaseEntity::*)(), Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, bool (CBaseEntity::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, char const* (CBaseEntity::*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, int (CBaseEntity::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, void (CBaseEntity::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseFlex*, HSCRIPT__* (CBaseFlex::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBasePlayer*, bool (CBasePlayer::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CEnvEntityMaker*, void (CEnvEntityMaker::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CSceneEntity*, bool (CSceneEntity::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CSceneEntity*, float (CSceneEntity::*)(), float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptKeyValues*, HSCRIPT__* (CScriptKeyValues::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptKeyValues*, void (CScriptKeyValues::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CTriggerCamera*, int (CTriggerCamera::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseAnimating*, Vector const& (CBaseAnimating::*)(int), Vector const&, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseAnimating*, int (CBaseAnimating::*)(char const*), int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(HSCRIPT__*), void, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(Vector const&), void, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(int), void, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseFlex*, HSCRIPT__* (CBaseFlex::*)(int), HSCRIPT__*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CEnvEntityMaker*, void (CEnvEntityMaker::*)(HSCRIPT__*), void, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CEnvEntityMaker*, void (CEnvEntityMaker::*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CPlayerVoiceListener*, bool (CPlayerVoiceListener::*)(int), bool, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CPlayerVoiceListener*, float (CPlayerVoiceListener::*)(int), float, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CSceneEntity*, HSCRIPT__* (CSceneEntity::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CSceneEntity*, void (CSceneEntity::*)(int), void, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*), HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, HSCRIPT__* (CScriptKeyValues::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, bool (CScriptKeyValues::*)(char const*), bool, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, char const* (CScriptKeyValues::*)(char const*), char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, float (CScriptKeyValues::*)(char const*), float, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, int (CScriptKeyValues::*)(char const*), int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseAnimating*, void (CBaseAnimating::*)(int, int), void, int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, Vector const&), bool, char const*, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, char const*), bool, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, float), bool, char const*, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, int), bool, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, float (CBaseEntity::*)(char const*, char const*), float, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, void (CBaseEntity::*)(Vector const&, Vector const&), void, Vector const&, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, void (CBaseEntity::*)(char const*, char const*), void, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CEnvEntityMaker*, void (CEnvEntityMaker::*)(Vector const&, Vector const&), void, Vector const&, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CSceneEntity*, bool (CSceneEntity::*)(char const*, char const*), bool, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*), HSCRIPT__*, HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CTriggerCamera*, void (CTriggerCamera::*)(int, float), void, int, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CBaseEntity*, void (CBaseEntity::*)(float, float, float), void, float, float, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, Vector const&, float), HSCRIPT__*, HSCRIPT__*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*, Vector const&, float), HSCRIPT__*, char const*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding4<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*, Vector const&, float), HSCRIPT__*, HSCRIPT__*, char const*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemoryLog::LevelInitPostEntity()
 T CMemoryLog::~CMemoryLog()
 T CMemoryPoolMT::Alloc()
 T CMemoryPoolMT::Clear()
 T CMemoryStack::CMemoryStack()
 T CMemoryStack::CommitTo(unsigned char*)
 T CMemoryStack::FreeAll(bool)
 T CMemoryStack::GetAllocatedBytes() const
 T CMemoryStack::GetCommittedBytes() const
 T CMemoryStack::GetHighestBytes() const
 T CMemoryStack::GetMemoryName() const
 T CMemoryStack::GetReservedBytes() const
 T CMemoryStack::Init(char const*, unsigned int, unsigned int, unsigned int, unsigned int)
 T CMemoryStack::~CMemoryStack()
 T CMessage::GetDataDescMap()
 T CMessage::InputShowMessage(inputdata_t&)
 T CMessage::Precache()
 T CMessage::Spawn()
 T CMessage::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMessage::~CMessage()
 T CMessageEntity::Activate()
 T CMessageEntity::GetDataDescMap()
 T CMessageEntity::InputDisable(inputdata_t&)
 T CMessageEntity::InputEnable(inputdata_t&)
 T CMessageEntity::Spawn()
 T CMessageEntity::Think()
 T CMessageEntity::UpdateOnRemove()
 T CMessageEntity::~CMessageEntity()
 T CModelPrecacheSystem::LevelShutdownPreEntity()
 T CModelPrecacheSystem::~CModelPrecacheSystem()
 T CModelSoundsCache::BuildAnimationEventSoundList(CStudioHdr*, CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >&)
 T CModelSoundsCache::CModelSoundsCache()
 T CModelSoundsCache::PrecacheSoundList()
 T CModelSoundsCache::Rebuild(char const*)
 T CModelSoundsCache::Restore(CUtlBuffer&)
 T CModelSoundsCache::Save(CUtlBuffer&)
 T CModelSoundsCacheSaver::LevelInitPostEntity()
 T CModelSoundsCacheSaver::LevelShutdownPostEntity()
 T CModelSoundsCacheSaver::~CModelSoundsCacheSaver()
 T CMolotovGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CMolotovGrenade::GetCSWeaponID() const
 T CMolotovGrenade::GetDataDescMap()
 T CMolotovGrenade::GetServerClass()
 T CMolotovGrenade::Precache()
 T CMolotovGrenade::YouForgotToImplementOrDeclareServerClass()
 T CMolotovGrenade::~CMolotovGrenade()
 T CMolotovProjectile::BounceSound()
 T CMolotovProjectile::BounceTouch(CBaseEntity*)
 T CMolotovProjectile::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CBaseCombatCharacter*, CCSWeaponInfo const&)
 T CMolotovProjectile::Detonate()
 T CMolotovProjectile::DetonateThink()
 T CMolotovProjectile::GetGrenadeType()
 T CMolotovProjectile::GetServerClass()
 T CMolotovProjectile::Precache()
 T CMolotovProjectile::SetIsIncGrenade(bool)
 T CMolotovProjectile::Spawn()
 T CMolotovProjectile::YouForgotToImplementOrDeclareServerClass()
 T CMolotovProjectile::~CMolotovProjectile()
 T CMomentaryRotButton::CreateVPhysics()
 T CMomentaryRotButton::Disable()
 T CMomentaryRotButton::DrawDebugTextOverlays()
 T CMomentaryRotButton::Enable()
 T CMomentaryRotButton::GetDataDescMap()
 T CMomentaryRotButton::InputDisable(inputdata_t&)
 T CMomentaryRotButton::InputDisableUpdateTarget(inputdata_t&)
 T CMomentaryRotButton::InputEnable(inputdata_t&)
 T CMomentaryRotButton::InputEnableUpdateTarget(inputdata_t&)
 T CMomentaryRotButton::InputSetPosition(inputdata_t&)
 T CMomentaryRotButton::InputSetPositionImmediately(inputdata_t&)
 T CMomentaryRotButton::Lock()
 T CMomentaryRotButton::ObjectCaps()
 T CMomentaryRotButton::PlaySound()
 T CMomentaryRotButton::ReturnMoveDone()
 T CMomentaryRotButton::SetPositionMoveDone()
 T CMomentaryRotButton::Spawn()
 T CMomentaryRotButton::Unlock()
 T CMomentaryRotButton::UpdateSelf(float, bool)
 T CMomentaryRotButton::UpdateThink()
 T CMomentaryRotButton::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMomentaryRotButton::UseMoveDone()
 T CMomentaryRotButton::~CMomentaryRotButton()
 T CMotorController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CMoveHelperServer::AddToTouched(CGameTrace const&, Vector const&)
 T CMoveHelperServer::Con_NPrintf(int, char const*, ...)
 T CMoveHelperServer::GetName(CBaseHandle) const
 T CMoveHelperServer::GetSurfaceProps()
 T CMoveHelperServer::IsWorldEntity(CBaseHandle const&)
 T CMoveHelperServer::PlaybackEventFull(int, int, unsigned short, float, Vector&, Vector&, float, float, int, int, int, int)
 T CMoveHelperServer::PlayerFallingDamage()
 T CMoveHelperServer::PlayerSetAnimation(PLAYER_ANIM)
 T CMoveHelperServer::ProcessImpacts()
 T CMoveHelperServer::ResetTouchList()
 T CMoveHelperServer::SetGroundNormal(Vector const&)
 T CMoveHelperServer::SetHost(CBaseEntity*)
 T CMoveHelperServer::StartSound(Vector const&, char const*)
 T CMoveHelperServer::StartSound(Vector const&, int, char const*, float, soundlevel_t, int, int)
 T CMoveHelperServer::~CMoveHelperServer()
 T CMoveableCamera::FollowTarget()
 T CMoveableCamera::GetEndPos(CHandle<CBaseEntity>)
 T CMoveableCamera::Move()
 T CMoveableCamera::Spawn()
 T CMoveableCamera::StartMovement()
 T CMovementSpeedMod::GetDataDescMap()
 T CMovementSpeedMod::InputSpeedMod(inputdata_t&)
 T CMovementSpeedMod::~CMovementSpeedMod()
 T CMovieDisplay::Disable()
 T CMovieDisplay::Enable()
 T CMovieDisplay::GetDataDescMap()
 T CMovieDisplay::GetServerClass()
 T CMovieDisplay::InputDisable(inputdata_t&)
 T CMovieDisplay::InputEnable(inputdata_t&)
 T CMovieDisplay::InputSetDisplayText(inputdata_t&)
 T CMovieDisplay::InputSetMovie(inputdata_t&)
 T CMovieDisplay::InputSetUMax(inputdata_t&)
 T CMovieDisplay::InputSetUMin(inputdata_t&)
 T CMovieDisplay::InputSetUseCustomUVs(inputdata_t&)
 T CMovieDisplay::InputSetVMax(inputdata_t&)
 T CMovieDisplay::InputSetVMin(inputdata_t&)
 T CMovieDisplay::InputTakeOverAsMaster(inputdata_t&)
 T CMovieDisplay::KeyValue(char const*, char const*)
 T CMovieDisplay::OnRestore()
 T CMovieDisplay::Precache()
 T CMovieDisplay::RestoreControlPanels()
 T CMovieDisplay::ScreenVisible(bool)
 T CMovieDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CMovieDisplay::Spawn()
 T CMovieDisplay::SpawnControlPanels()
 T CMovieDisplay::UpdateTransmitState()
 T CMovieDisplay::YouForgotToImplementOrDeclareServerClass()
 T CMovieDisplay::~CMovieDisplay()
 T CMsgAMAddFreeLicense::ByteSize() const
 T CMsgAMAddFreeLicense::Clear()
 T CMsgAMAddFreeLicense::GetCachedSize() const
 T CMsgAMAddFreeLicense::GetMetadata() const
 T CMsgAMAddFreeLicense::IsInitialized() const
 T CMsgAMAddFreeLicense::MergeFrom(CMsgAMAddFreeLicense const&)
 T CMsgAMAddFreeLicense::New() const
 T CMsgAMAddFreeLicense::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMAddFreeLicense::SetCachedSize(int) const
 T CMsgAMAddFreeLicense::~CMsgAMAddFreeLicense()
 T CMsgAMAddFreeLicenseResponse::ByteSize() const
 T CMsgAMAddFreeLicenseResponse::Clear()
 T CMsgAMAddFreeLicenseResponse::GetCachedSize() const
 T CMsgAMAddFreeLicenseResponse::GetMetadata() const
 T CMsgAMAddFreeLicenseResponse::IsInitialized() const
 T CMsgAMAddFreeLicenseResponse::MergeFrom(CMsgAMAddFreeLicenseResponse const&)
 T CMsgAMAddFreeLicenseResponse::New() const
 T CMsgAMAddFreeLicenseResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMAddFreeLicenseResponse::SetCachedSize(int) const
 T CMsgAMAddFreeLicenseResponse::~CMsgAMAddFreeLicenseResponse()
 T CMsgAMFindAccounts::ByteSize() const
 T CMsgAMFindAccounts::Clear()
 T CMsgAMFindAccounts::GetCachedSize() const
 T CMsgAMFindAccounts::GetMetadata() const
 T CMsgAMFindAccounts::IsInitialized() const
 T CMsgAMFindAccounts::MergeFrom(CMsgAMFindAccounts const&)
 T CMsgAMFindAccounts::New() const
 T CMsgAMFindAccounts::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMFindAccounts::SetCachedSize(int) const
 T CMsgAMFindAccounts::~CMsgAMFindAccounts()
 T CMsgAMFindAccountsResponse::ByteSize() const
 T CMsgAMFindAccountsResponse::Clear()
 T CMsgAMFindAccountsResponse::GetCachedSize() const
 T CMsgAMFindAccountsResponse::GetMetadata() const
 T CMsgAMFindAccountsResponse::IsInitialized() const
 T CMsgAMFindAccountsResponse::MergeFrom(CMsgAMFindAccountsResponse const&)
 T CMsgAMFindAccountsResponse::New() const
 T CMsgAMFindAccountsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMFindAccountsResponse::SetCachedSize(int) const
 T CMsgAMFindAccountsResponse::~CMsgAMFindAccountsResponse()
 T CMsgAMGetLicenses::ByteSize() const
 T CMsgAMGetLicenses::Clear()
 T CMsgAMGetLicenses::GetCachedSize() const
 T CMsgAMGetLicenses::GetMetadata() const
 T CMsgAMGetLicenses::IsInitialized() const
 T CMsgAMGetLicenses::MergeFrom(CMsgAMGetLicenses const&)
 T CMsgAMGetLicenses::New() const
 T CMsgAMGetLicenses::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetLicenses::SetCachedSize(int) const
 T CMsgAMGetLicenses::~CMsgAMGetLicenses()
 T CMsgAMGetLicensesResponse::ByteSize() const
 T CMsgAMGetLicensesResponse::Clear()
 T CMsgAMGetLicensesResponse::GetCachedSize() const
 T CMsgAMGetLicensesResponse::GetMetadata() const
 T CMsgAMGetLicensesResponse::IsInitialized() const
 T CMsgAMGetLicensesResponse::MergeFrom(CMsgAMGetLicensesResponse const&)
 T CMsgAMGetLicensesResponse::New() const
 T CMsgAMGetLicensesResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetLicensesResponse::SetCachedSize(int) const
 T CMsgAMGetLicensesResponse::~CMsgAMGetLicensesResponse()
 T CMsgAMGetUserGameStats::ByteSize() const
 T CMsgAMGetUserGameStats::Clear()
 T CMsgAMGetUserGameStats::GetCachedSize() const
 T CMsgAMGetUserGameStats::GetMetadata() const
 T CMsgAMGetUserGameStats::IsInitialized() const
 T CMsgAMGetUserGameStats::MergeFrom(CMsgAMGetUserGameStats const&)
 T CMsgAMGetUserGameStats::New() const
 T CMsgAMGetUserGameStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStats::SetCachedSize(int) const
 T CMsgAMGetUserGameStats::~CMsgAMGetUserGameStats()
 T CMsgAMGetUserGameStatsResponse::ByteSize() const
 T CMsgAMGetUserGameStatsResponse::Clear()
 T CMsgAMGetUserGameStatsResponse::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse::MergeFrom(CMsgAMGetUserGameStatsResponse const&)
 T CMsgAMGetUserGameStatsResponse::New() const
 T CMsgAMGetUserGameStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse::~CMsgAMGetUserGameStatsResponse()
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::ByteSize() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Clear()
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(CMsgAMGetUserGameStatsResponse_Achievement_Blocks const&)
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::New() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::~CMsgAMGetUserGameStatsResponse_Achievement_Blocks()
 T CMsgAMGetUserGameStatsResponse_Stats::ByteSize() const
 T CMsgAMGetUserGameStatsResponse_Stats::Clear()
 T CMsgAMGetUserGameStatsResponse_Stats::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse_Stats::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse_Stats::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(CMsgAMGetUserGameStatsResponse_Stats const&)
 T CMsgAMGetUserGameStatsResponse_Stats::New() const
 T CMsgAMGetUserGameStatsResponse_Stats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse_Stats::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse_Stats::~CMsgAMGetUserGameStatsResponse_Stats()
 T CMsgAMGrantGuestPasses2::ByteSize() const
 T CMsgAMGrantGuestPasses2::Clear()
 T CMsgAMGrantGuestPasses2::GetCachedSize() const
 T CMsgAMGrantGuestPasses2::GetMetadata() const
 T CMsgAMGrantGuestPasses2::IsInitialized() const
 T CMsgAMGrantGuestPasses2::MergeFrom(CMsgAMGrantGuestPasses2 const&)
 T CMsgAMGrantGuestPasses2::New() const
 T CMsgAMGrantGuestPasses2::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGrantGuestPasses2::SetCachedSize(int) const
 T CMsgAMGrantGuestPasses2::~CMsgAMGrantGuestPasses2()
 T CMsgAMGrantGuestPasses2Response::ByteSize() const
 T CMsgAMGrantGuestPasses2Response::Clear()
 T CMsgAMGrantGuestPasses2Response::GetCachedSize() const
 T CMsgAMGrantGuestPasses2Response::GetMetadata() const
 T CMsgAMGrantGuestPasses2Response::IsInitialized() const
 T CMsgAMGrantGuestPasses2Response::MergeFrom(CMsgAMGrantGuestPasses2Response const&)
 T CMsgAMGrantGuestPasses2Response::New() const
 T CMsgAMGrantGuestPasses2Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGrantGuestPasses2Response::SetCachedSize(int) const
 T CMsgAMGrantGuestPasses2Response::~CMsgAMGrantGuestPasses2Response()
 T CMsgAMSendEmail::ByteSize() const
 T CMsgAMSendEmail::Clear()
 T CMsgAMSendEmail::GetCachedSize() const
 T CMsgAMSendEmail::GetMetadata() const
 T CMsgAMSendEmail::IsInitialized() const
 T CMsgAMSendEmail::MergeFrom(CMsgAMSendEmail const&)
 T CMsgAMSendEmail::New() const
 T CMsgAMSendEmail::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail::SetCachedSize(int) const
 T CMsgAMSendEmail::~CMsgAMSendEmail()
 T CMsgAMSendEmailResponse::ByteSize() const
 T CMsgAMSendEmailResponse::Clear()
 T CMsgAMSendEmailResponse::GetCachedSize() const
 T CMsgAMSendEmailResponse::GetMetadata() const
 T CMsgAMSendEmailResponse::IsInitialized() const
 T CMsgAMSendEmailResponse::MergeFrom(CMsgAMSendEmailResponse const&)
 T CMsgAMSendEmailResponse::New() const
 T CMsgAMSendEmailResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmailResponse::SetCachedSize(int) const
 T CMsgAMSendEmailResponse::~CMsgAMSendEmailResponse()
 T CMsgAMSendEmail_PersonaNameReplacementToken::ByteSize() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::Clear()
 T CMsgAMSendEmail_PersonaNameReplacementToken::GetCachedSize() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::GetMetadata() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::IsInitialized() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(CMsgAMSendEmail_PersonaNameReplacementToken const&)
 T CMsgAMSendEmail_PersonaNameReplacementToken::New() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail_PersonaNameReplacementToken::SetCachedSize(int) const
 T CMsgAMSendEmail_PersonaNameReplacementToken::~CMsgAMSendEmail_PersonaNameReplacementToken()
 T CMsgAMSendEmail_ReplacementToken::ByteSize() const
 T CMsgAMSendEmail_ReplacementToken::Clear()
 T CMsgAMSendEmail_ReplacementToken::GetCachedSize() const
 T CMsgAMSendEmail_ReplacementToken::GetMetadata() const
 T CMsgAMSendEmail_ReplacementToken::IsInitialized() const
 T CMsgAMSendEmail_ReplacementToken::MergeFrom(CMsgAMSendEmail_ReplacementToken const&)
 T CMsgAMSendEmail_ReplacementToken::New() const
 T CMsgAMSendEmail_ReplacementToken::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail_ReplacementToken::SetCachedSize(int) const
 T CMsgAMSendEmail_ReplacementToken::SharedDtor()
 T CMsgAMSendEmail_ReplacementToken::~CMsgAMSendEmail_ReplacementToken()
 T CMsgAccountDetails::ByteSize() const
 T CMsgAccountDetails::Clear()
 T CMsgAccountDetails::GetCachedSize() const
 T CMsgAccountDetails::GetMetadata() const
 T CMsgAccountDetails::IsInitialized() const
 T CMsgAccountDetails::MergeFrom(CMsgAccountDetails const&)
 T CMsgAccountDetails::New() const
 T CMsgAccountDetails::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAccountDetails::SetCachedSize(int) const
 T CMsgAccountDetails::~CMsgAccountDetails()
 T CMsgAdjustItemEquippedState::ByteSize() const
 T CMsgAdjustItemEquippedState::Clear()
 T CMsgAdjustItemEquippedState::GetCachedSize() const
 T CMsgAdjustItemEquippedState::GetMetadata() const
 T CMsgAdjustItemEquippedState::IsInitialized() const
 T CMsgAdjustItemEquippedState::MergeFrom(CMsgAdjustItemEquippedState const&)
 T CMsgAdjustItemEquippedState::New() const
 T CMsgAdjustItemEquippedState::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAdjustItemEquippedState::SetCachedSize(int) const
 T CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState()
 T CMsgApplyAutograph::ByteSize() const
 T CMsgApplyAutograph::Clear()
 T CMsgApplyAutograph::GetCachedSize() const
 T CMsgApplyAutograph::GetMetadata() const
 T CMsgApplyAutograph::IsInitialized() const
 T CMsgApplyAutograph::MergeFrom(CMsgApplyAutograph const&)
 T CMsgApplyAutograph::New() const
 T CMsgApplyAutograph::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplyAutograph::SetCachedSize(int) const
 T CMsgApplyAutograph::~CMsgApplyAutograph()
 T CMsgApplyEggEssence::ByteSize() const
 T CMsgApplyEggEssence::Clear()
 T CMsgApplyEggEssence::GetCachedSize() const
 T CMsgApplyEggEssence::GetMetadata() const
 T CMsgApplyEggEssence::IsInitialized() const
 T CMsgApplyEggEssence::MergeFrom(CMsgApplyEggEssence const&)
 T CMsgApplyEggEssence::New() const
 T CMsgApplyEggEssence::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplyEggEssence::SetCachedSize(int) const
 T CMsgApplyEggEssence::~CMsgApplyEggEssence()
 T CMsgApplyPennantUpgrade::ByteSize() const
 T CMsgApplyPennantUpgrade::Clear()
 T CMsgApplyPennantUpgrade::GetCachedSize() const
 T CMsgApplyPennantUpgrade::GetMetadata() const
 T CMsgApplyPennantUpgrade::IsInitialized() const
 T CMsgApplyPennantUpgrade::MergeFrom(CMsgApplyPennantUpgrade const&)
 T CMsgApplyPennantUpgrade::New() const
 T CMsgApplyPennantUpgrade::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplyPennantUpgrade::SetCachedSize(int) const
 T CMsgApplyPennantUpgrade::~CMsgApplyPennantUpgrade()
 T CMsgApplyStatTrakSwap::ByteSize() const
 T CMsgApplyStatTrakSwap::Clear()
 T CMsgApplyStatTrakSwap::GetCachedSize() const
 T CMsgApplyStatTrakSwap::GetMetadata() const
 T CMsgApplyStatTrakSwap::IsInitialized() const
 T CMsgApplyStatTrakSwap::MergeFrom(CMsgApplyStatTrakSwap const&)
 T CMsgApplyStatTrakSwap::New() const
 T CMsgApplyStatTrakSwap::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplyStatTrakSwap::SetCachedSize(int) const
 T CMsgApplyStatTrakSwap::~CMsgApplyStatTrakSwap()
 T CMsgApplySticker::ByteSize() const
 T CMsgApplySticker::Clear()
 T CMsgApplySticker::GetCachedSize() const
 T CMsgApplySticker::GetMetadata() const
 T CMsgApplySticker::IsInitialized() const
 T CMsgApplySticker::MergeFrom(CMsgApplySticker const&)
 T CMsgApplySticker::New() const
 T CMsgApplySticker::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplySticker::SetCachedSize(int) const
 T CMsgApplySticker::~CMsgApplySticker()
 T CMsgApplyStrangePart::ByteSize() const
 T CMsgApplyStrangePart::Clear()
 T CMsgApplyStrangePart::GetCachedSize() const
 T CMsgApplyStrangePart::GetMetadata() const
 T CMsgApplyStrangePart::IsInitialized() const
 T CMsgApplyStrangePart::MergeFrom(CMsgApplyStrangePart const&)
 T CMsgApplyStrangePart::New() const
 T CMsgApplyStrangePart::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgApplyStrangePart::SetCachedSize(int) const
 T CMsgApplyStrangePart::~CMsgApplyStrangePart()
 T CMsgCStrike15Welcome::ByteSize() const
 T CMsgCStrike15Welcome::CMsgCStrike15Welcome()
 T CMsgCStrike15Welcome::Clear()
 T CMsgCStrike15Welcome::GetCachedSize() const
 T CMsgCStrike15Welcome::GetMetadata() const
 T CMsgCStrike15Welcome::IsInitialized() const
 T CMsgCStrike15Welcome::MergeFrom(CMsgCStrike15Welcome const&)
 T CMsgCStrike15Welcome::New() const
 T CMsgCStrike15Welcome::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgCStrike15Welcome::SetCachedSize(int) const
 T CMsgCStrike15Welcome::~CMsgCStrike15Welcome()
 T CMsgClientHello::ByteSize() const
 T CMsgClientHello::CMsgClientHello()
 T CMsgClientHello::Clear()
 T CMsgClientHello::GetCachedSize() const
 T CMsgClientHello::GetMetadata() const
 T CMsgClientHello::IsInitialized() const
 T CMsgClientHello::MergeFrom(CMsgClientHello const&)
 T CMsgClientHello::New() const
 T CMsgClientHello::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgClientHello::SetCachedSize(int) const
 T CMsgClientHello::default_instance()
 T CMsgClientHello::descriptor()
 T CMsgClientHello::~CMsgClientHello()
 T CMsgClientWelcome::ByteSize() const
 T CMsgClientWelcome::CMsgClientWelcome()
 T CMsgClientWelcome::Clear()
 T CMsgClientWelcome::GetCachedSize() const
 T CMsgClientWelcome::GetMetadata() const
 T CMsgClientWelcome::IsInitialized() const
 T CMsgClientWelcome::MergeFrom(CMsgClientWelcome const&)
 T CMsgClientWelcome::New() const
 T CMsgClientWelcome::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgClientWelcome::SetCachedSize(int) const
 T CMsgClientWelcome::SharedDtor()
 T CMsgClientWelcome::default_instance()
 T CMsgClientWelcome::descriptor()
 T CMsgClientWelcome::~CMsgClientWelcome()
 T CMsgClientWelcome_Location::ByteSize() const
 T CMsgClientWelcome_Location::Clear()
 T CMsgClientWelcome_Location::GetCachedSize() const
 T CMsgClientWelcome_Location::GetMetadata() const
 T CMsgClientWelcome_Location::IsInitialized() const
 T CMsgClientWelcome_Location::MergeFrom(CMsgClientWelcome_Location const&)
 T CMsgClientWelcome_Location::New() const
 T CMsgClientWelcome_Location::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgClientWelcome_Location::SetCachedSize(int) const
 T CMsgClientWelcome_Location::~CMsgClientWelcome_Location()
 T CMsgConVarValue::ByteSize() const
 T CMsgConVarValue::Clear()
 T CMsgConVarValue::GetCachedSize() const
 T CMsgConVarValue::GetMetadata() const
 T CMsgConVarValue::IsInitialized() const
 T CMsgConVarValue::MergeFrom(CMsgConVarValue const&)
 T CMsgConVarValue::New() const
 T CMsgConVarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgConVarValue::SetCachedSize(int) const
 T CMsgConVarValue::SharedDtor()
 T CMsgConVarValue::~CMsgConVarValue()
 T CMsgConnectionStatus::ByteSize() const
 T CMsgConnectionStatus::CMsgConnectionStatus()
 T CMsgConnectionStatus::Clear()
 T CMsgConnectionStatus::GetCachedSize() const
 T CMsgConnectionStatus::GetMetadata() const
 T CMsgConnectionStatus::IsInitialized() const
 T CMsgConnectionStatus::MergeFrom(CMsgConnectionStatus const&)
 T CMsgConnectionStatus::New() const
 T CMsgConnectionStatus::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgConnectionStatus::SetCachedSize(int) const
 T CMsgConnectionStatus::default_instance()
 T CMsgConnectionStatus::descriptor()
 T CMsgConnectionStatus::~CMsgConnectionStatus()
 T CMsgConsumableExhausted::ByteSize() const
 T CMsgConsumableExhausted::Clear()
 T CMsgConsumableExhausted::GetCachedSize() const
 T CMsgConsumableExhausted::GetMetadata() const
 T CMsgConsumableExhausted::IsInitialized() const
 T CMsgConsumableExhausted::MergeFrom(CMsgConsumableExhausted const&)
 T CMsgConsumableExhausted::New() const
 T CMsgConsumableExhausted::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgConsumableExhausted::SetCachedSize(int) const
 T CMsgConsumableExhausted::~CMsgConsumableExhausted()
 T CMsgDevNewItemRequest::ByteSize() const
 T CMsgDevNewItemRequest::Clear()
 T CMsgDevNewItemRequest::GetCachedSize() const
 T CMsgDevNewItemRequest::GetMetadata() const
 T CMsgDevNewItemRequest::IsInitialized() const
 T CMsgDevNewItemRequest::MergeFrom(CMsgDevNewItemRequest const&)
 T CMsgDevNewItemRequest::New() const
 T CMsgDevNewItemRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgDevNewItemRequest::SetCachedSize(int) const
 T CMsgDevNewItemRequest::~CMsgDevNewItemRequest()
 T CMsgGCBannedWord::ByteSize() const
 T CMsgGCBannedWord::Clear()
 T CMsgGCBannedWord::GetCachedSize() const
 T CMsgGCBannedWord::GetMetadata() const
 T CMsgGCBannedWord::IsInitialized() const
 T CMsgGCBannedWord::MergeFrom(CMsgGCBannedWord const&)
 T CMsgGCBannedWord::New() const
 T CMsgGCBannedWord::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCBannedWord::SetCachedSize(int) const
 T CMsgGCBannedWord::~CMsgGCBannedWord()
 T CMsgGCBannedWordListRequest::ByteSize() const
 T CMsgGCBannedWordListRequest::Clear()
 T CMsgGCBannedWordListRequest::GetCachedSize() const
 T CMsgGCBannedWordListRequest::GetMetadata() const
 T CMsgGCBannedWordListRequest::IsInitialized() const
 T CMsgGCBannedWordListRequest::MergeFrom(CMsgGCBannedWordListRequest const&)
 T CMsgGCBannedWordListRequest::New() const
 T CMsgGCBannedWordListRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCBannedWordListRequest::SetCachedSize(int) const
 T CMsgGCBannedWordListRequest::~CMsgGCBannedWordListRequest()
 T CMsgGCBannedWordListResponse::ByteSize() const
 T CMsgGCBannedWordListResponse::Clear()
 T CMsgGCBannedWordListResponse::GetCachedSize() const
 T CMsgGCBannedWordListResponse::GetMetadata() const
 T CMsgGCBannedWordListResponse::IsInitialized() const
 T CMsgGCBannedWordListResponse::MergeFrom(CMsgGCBannedWordListResponse const&)
 T CMsgGCBannedWordListResponse::New() const
 T CMsgGCBannedWordListResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCBannedWordListResponse::SetCachedSize(int) const
 T CMsgGCBannedWordListResponse::~CMsgGCBannedWordListResponse()
 T CMsgGCCStrike15_v2_AccountPrivacySettings::ByteSize() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::Clear()
 T CMsgGCCStrike15_v2_AccountPrivacySettings::GetCachedSize() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::GetMetadata() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::IsInitialized() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::MergeFrom(CMsgGCCStrike15_v2_AccountPrivacySettings const&)
 T CMsgGCCStrike15_v2_AccountPrivacySettings::New() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_AccountPrivacySettings::~CMsgGCCStrike15_v2_AccountPrivacySettings()
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::ByteSize() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::Clear()
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::GetCachedSize() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::GetMetadata() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::IsInitialized() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::MergeFrom(CMsgGCCStrike15_v2_AccountPrivacySettings_Setting const&)
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::New() const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_AccountPrivacySettings_Setting::~CMsgGCCStrike15_v2_AccountPrivacySettings_Setting()
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::ByteSize() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::Clear()
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::GetCachedSize() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::GetMetadata() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::IsInitialized() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::MergeFrom(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest const&)
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::New() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest::~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest()
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::ByteSize() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::Clear()
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::GetCachedSize() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::GetMetadata() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::IsInitialized() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::MergeFrom(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse const&)
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::New() const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse::~CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse()
 T CMsgGCCStrike15_v2_Client2GCTextMsg::ByteSize() const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::Clear()
 T CMsgGCCStrike15_v2_Client2GCTextMsg::GetCachedSize() const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::GetMetadata() const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::IsInitialized() const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::MergeFrom(CMsgGCCStrike15_v2_Client2GCTextMsg const&)
 T CMsgGCCStrike15_v2_Client2GCTextMsg::New() const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Client2GCTextMsg::~CMsgGCCStrike15_v2_Client2GCTextMsg()
 T CMsgGCCStrike15_v2_ClientCommendPlayer::ByteSize() const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::Clear()
 T CMsgGCCStrike15_v2_ClientCommendPlayer::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::MergeFrom(CMsgGCCStrike15_v2_ClientCommendPlayer const&)
 T CMsgGCCStrike15_v2_ClientCommendPlayer::New() const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientCommendPlayer::~CMsgGCCStrike15_v2_ClientCommendPlayer()
 T CMsgGCCStrike15_v2_ClientReportPlayer::ByteSize() const
 T CMsgGCCStrike15_v2_ClientReportPlayer::Clear()
 T CMsgGCCStrike15_v2_ClientReportPlayer::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientReportPlayer::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientReportPlayer::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientReportPlayer::MergeFrom(CMsgGCCStrike15_v2_ClientReportPlayer const&)
 T CMsgGCCStrike15_v2_ClientReportPlayer::New() const
 T CMsgGCCStrike15_v2_ClientReportPlayer::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientReportPlayer::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientReportPlayer::~CMsgGCCStrike15_v2_ClientReportPlayer()
 T CMsgGCCStrike15_v2_ClientReportResponse::ByteSize() const
 T CMsgGCCStrike15_v2_ClientReportResponse::Clear()
 T CMsgGCCStrike15_v2_ClientReportResponse::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientReportResponse::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientReportResponse::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientReportResponse::MergeFrom(CMsgGCCStrike15_v2_ClientReportResponse const&)
 T CMsgGCCStrike15_v2_ClientReportResponse::New() const
 T CMsgGCCStrike15_v2_ClientReportResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientReportResponse::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientReportResponse::~CMsgGCCStrike15_v2_ClientReportResponse()
 T CMsgGCCStrike15_v2_ClientReportServer::ByteSize() const
 T CMsgGCCStrike15_v2_ClientReportServer::Clear()
 T CMsgGCCStrike15_v2_ClientReportServer::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientReportServer::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientReportServer::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientReportServer::MergeFrom(CMsgGCCStrike15_v2_ClientReportServer const&)
 T CMsgGCCStrike15_v2_ClientReportServer::New() const
 T CMsgGCCStrike15_v2_ClientReportServer::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientReportServer::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientReportServer::~CMsgGCCStrike15_v2_ClientReportServer()
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::ByteSize() const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::Clear()
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::MergeFrom(CMsgGCCStrike15_v2_ClientRequestJoinFriendData const&)
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::New() const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientRequestJoinFriendData::~CMsgGCCStrike15_v2_ClientRequestJoinFriendData()
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::ByteSize() const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::Clear()
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::MergeFrom(CMsgGCCStrike15_v2_ClientRequestJoinServerData const&)
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::New() const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientRequestJoinServerData::~CMsgGCCStrike15_v2_ClientRequestJoinServerData()
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::ByteSize() const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::Clear()
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::MergeFrom(CMsgGCCStrike15_v2_ClientRequestPlayersProfile const&)
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::New() const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientRequestPlayersProfile::~CMsgGCCStrike15_v2_ClientRequestPlayersProfile()
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::ByteSize() const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::Clear()
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::MergeFrom(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends const&)
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::New() const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends::~CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends()
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::ByteSize() const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::Clear()
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::MergeFrom(CMsgGCCStrike15_v2_ClientSubmitSurveyVote const&)
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::New() const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientSubmitSurveyVote::~CMsgGCCStrike15_v2_ClientSubmitSurveyVote()
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::ByteSize() const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::Clear()
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::GetCachedSize() const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::GetMetadata() const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::IsInitialized() const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::MergeFrom(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo const&)
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::New() const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ClientVarValueNotificationInfo::~CMsgGCCStrike15_v2_ClientVarValueNotificationInfo()
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::ByteSize() const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::Clear()
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::GetCachedSize() const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::GetMetadata() const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::IsInitialized() const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::MergeFrom(CMsgGCCStrike15_v2_GC2ClientTextMsg const&)
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::New() const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GC2ClientTextMsg::~CMsgGCCStrike15_v2_GC2ClientTextMsg()
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::ByteSize() const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::Clear()
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::GetCachedSize() const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::GetMetadata() const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::IsInitialized() const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::MergeFrom(CMsgGCCStrike15_v2_GC2ClientTournamentInfo const&)
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::New() const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GC2ClientTournamentInfo::~CMsgGCCStrike15_v2_GC2ClientTournamentInfo()
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::ByteSize() const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::CMsgGCCStrike15_v2_GC2ServerReservationUpdate()
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::Clear()
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::GetCachedSize() const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::GetMetadata() const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::IsInitialized() const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::MergeFrom(CMsgGCCStrike15_v2_GC2ServerReservationUpdate const&)
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::New() const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::default_instance()
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::descriptor()
 T CMsgGCCStrike15_v2_GC2ServerReservationUpdate::~CMsgGCCStrike15_v2_GC2ServerReservationUpdate()
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::ByteSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::CMsgGCCStrike15_v2_GiftsLeaderboardRequest()
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::Clear()
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::GetCachedSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::GetMetadata() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::IsInitialized() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::MergeFrom(CMsgGCCStrike15_v2_GiftsLeaderboardRequest const&)
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::New() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::default_instance()
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::descriptor()
 T CMsgGCCStrike15_v2_GiftsLeaderboardRequest::~CMsgGCCStrike15_v2_GiftsLeaderboardRequest()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::ByteSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CMsgGCCStrike15_v2_GiftsLeaderboardResponse()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::Clear()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::CopyFrom(CMsgGCCStrike15_v2_GiftsLeaderboardResponse const&)
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::GetCachedSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::GetMetadata() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::IsInitialized() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::MergeFrom(CMsgGCCStrike15_v2_GiftsLeaderboardResponse const&)
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::New() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::default_instance()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::descriptor()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse::~CMsgGCCStrike15_v2_GiftsLeaderboardResponse()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::ByteSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::Clear()
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::GetCachedSize() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::GetMetadata() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::IsInitialized() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::MergeFrom(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry const&)
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::New() const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry::~CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry()
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::ByteSize() const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification()
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::Clear()
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::MergeFrom(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification const&)
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::New() const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::default_instance()
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::descriptor()
 T CMsgGCCStrike15_v2_MatchEndRewardDropsNotification::~CMsgGCCStrike15_v2_MatchEndRewardDropsNotification()
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::ByteSize() const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::CMsgGCCStrike15_v2_MatchEndRunRewardDrops()
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::Clear()
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::MergeFrom(CMsgGCCStrike15_v2_MatchEndRunRewardDrops const&)
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::New() const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::default_instance()
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::descriptor()
 T CMsgGCCStrike15_v2_MatchEndRunRewardDrops::~CMsgGCCStrike15_v2_MatchEndRunRewardDrops()
 T CMsgGCCStrike15_v2_MatchList::ByteSize() const
 T CMsgGCCStrike15_v2_MatchList::Clear()
 T CMsgGCCStrike15_v2_MatchList::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchList::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchList::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchList::MergeFrom(CMsgGCCStrike15_v2_MatchList const&)
 T CMsgGCCStrike15_v2_MatchList::New() const
 T CMsgGCCStrike15_v2_MatchList::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchList::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchList::~CMsgGCCStrike15_v2_MatchList()
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::ByteSize() const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::Clear()
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::MergeFrom(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames const&)
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::New() const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames::~CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames()
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::ByteSize() const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::Clear()
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::MergeFrom(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo const&)
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::New() const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchListRequestFullGameInfo::~CMsgGCCStrike15_v2_MatchListRequestFullGameInfo()
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::ByteSize() const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::Clear()
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::MergeFrom(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser const&)
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::New() const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser::~CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser()
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::ByteSize() const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::Clear()
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::MergeFrom(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames const&)
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::New() const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchListRequestRecentUserGames::~CMsgGCCStrike15_v2_MatchListRequestRecentUserGames()
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::ByteSize() const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::Clear()
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::MergeFrom(CMsgGCCStrike15_v2_MatchListRequestTournamentGames const&)
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::New() const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchListRequestTournamentGames::~CMsgGCCStrike15_v2_MatchListRequestTournamentGames()
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::Clear()
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::MergeFrom(CMsgGCCStrike15_v2_MatchmakingClient2GCHello const&)
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::New() const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingClient2GCHello::~CMsgGCCStrike15_v2_MatchmakingClient2GCHello()
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::Clear()
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::MergeFrom(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing const&)
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::New() const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingClient2ServerPing::~CMsgGCCStrike15_v2_MatchmakingClient2ServerPing()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon::~CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::SharedDtor()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientHello::~CMsgGCCStrike15_v2_MatchmakingGC2ClientHello()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve::~CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate::~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note::~CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm::~CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate::~CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve const&)
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::New() const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve::~CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve()
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::Clear()
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::MergeFrom(CMsgGCCStrike15_v2_MatchmakingGCOperationalStats const&)
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::New() const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingGCOperationalStats::~CMsgGCCStrike15_v2_MatchmakingGCOperationalStats()
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::Clear()
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::MergeFrom(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate const&)
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::New() const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate::~CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate()
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::Clear()
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::MergeFrom(CMsgGCCStrike15_v2_MatchmakingServer2GCKick const&)
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::New() const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingServer2GCKick::~CMsgGCCStrike15_v2_MatchmakingServer2GCKick()
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::Clear()
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::MergeFrom(CMsgGCCStrike15_v2_MatchmakingServerMatchEnd const&)
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::New() const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingServerMatchEnd::~CMsgGCCStrike15_v2_MatchmakingServerMatchEnd()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::Clear()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::MergeFrom(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse const&)
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::New() const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::SharedDtor()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::default_instance()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::descriptor()
 T CMsgGCCStrike15_v2_MatchmakingServerReservationResponse::~CMsgGCCStrike15_v2_MatchmakingServerReservationResponse()
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::Clear()
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::MergeFrom(CMsgGCCStrike15_v2_MatchmakingServerRoundStats const&)
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::New() const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingServerRoundStats::~CMsgGCCStrike15_v2_MatchmakingServerRoundStats()
 T CMsgGCCStrike15_v2_MatchmakingStart::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingStart::Clear()
 T CMsgGCCStrike15_v2_MatchmakingStart::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingStart::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingStart::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingStart::MergeFrom(CMsgGCCStrike15_v2_MatchmakingStart const&)
 T CMsgGCCStrike15_v2_MatchmakingStart::New() const
 T CMsgGCCStrike15_v2_MatchmakingStart::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingStart::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingStart::~CMsgGCCStrike15_v2_MatchmakingStart()
 T CMsgGCCStrike15_v2_MatchmakingStop::ByteSize() const
 T CMsgGCCStrike15_v2_MatchmakingStop::Clear()
 T CMsgGCCStrike15_v2_MatchmakingStop::GetCachedSize() const
 T CMsgGCCStrike15_v2_MatchmakingStop::GetMetadata() const
 T CMsgGCCStrike15_v2_MatchmakingStop::IsInitialized() const
 T CMsgGCCStrike15_v2_MatchmakingStop::MergeFrom(CMsgGCCStrike15_v2_MatchmakingStop const&)
 T CMsgGCCStrike15_v2_MatchmakingStop::New() const
 T CMsgGCCStrike15_v2_MatchmakingStop::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_MatchmakingStop::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_MatchmakingStop::~CMsgGCCStrike15_v2_MatchmakingStop()
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::ByteSize() const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::Clear()
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::GetCachedSize() const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::GetMetadata() const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::IsInitialized() const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::MergeFrom(CMsgGCCStrike15_v2_PlayerEarnedRewardNotification const&)
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::New() const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_PlayerEarnedRewardNotification::~CMsgGCCStrike15_v2_PlayerEarnedRewardNotification()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::ByteSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::Clear()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::GetCachedSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::GetMetadata() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::IsInitialized() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment const&)
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::New() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment::~CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::ByteSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::Clear()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::GetCachedSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::GetMetadata() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::IsInitialized() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus const&)
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::New() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus::~CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::ByteSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::Clear()
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::GetCachedSize() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::GetMetadata() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::IsInitialized() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate const&)
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::New() const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate::~CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate()
 T CMsgGCCStrike15_v2_PlayersProfile::ByteSize() const
 T CMsgGCCStrike15_v2_PlayersProfile::Clear()
 T CMsgGCCStrike15_v2_PlayersProfile::GetCachedSize() const
 T CMsgGCCStrike15_v2_PlayersProfile::GetMetadata() const
 T CMsgGCCStrike15_v2_PlayersProfile::IsInitialized() const
 T CMsgGCCStrike15_v2_PlayersProfile::MergeFrom(CMsgGCCStrike15_v2_PlayersProfile const&)
 T CMsgGCCStrike15_v2_PlayersProfile::New() const
 T CMsgGCCStrike15_v2_PlayersProfile::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_PlayersProfile::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_PlayersProfile::~CMsgGCCStrike15_v2_PlayersProfile()
 T CMsgGCCStrike15_v2_Predictions::ByteSize() const
 T CMsgGCCStrike15_v2_Predictions::Clear()
 T CMsgGCCStrike15_v2_Predictions::GetCachedSize() const
 T CMsgGCCStrike15_v2_Predictions::GetMetadata() const
 T CMsgGCCStrike15_v2_Predictions::IsInitialized() const
 T CMsgGCCStrike15_v2_Predictions::MergeFrom(CMsgGCCStrike15_v2_Predictions const&)
 T CMsgGCCStrike15_v2_Predictions::New() const
 T CMsgGCCStrike15_v2_Predictions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Predictions::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Predictions::~CMsgGCCStrike15_v2_Predictions()
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::ByteSize() const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::Clear()
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::GetCachedSize() const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::GetMetadata() const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::IsInitialized() const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::MergeFrom(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick const&)
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::New() const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick::~CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick()
 T CMsgGCCStrike15_v2_Server2GCClientValidate::ByteSize() const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::CMsgGCCStrike15_v2_Server2GCClientValidate()
 T CMsgGCCStrike15_v2_Server2GCClientValidate::Clear()
 T CMsgGCCStrike15_v2_Server2GCClientValidate::GetCachedSize() const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::GetMetadata() const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::IsInitialized() const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::MergeFrom(CMsgGCCStrike15_v2_Server2GCClientValidate const&)
 T CMsgGCCStrike15_v2_Server2GCClientValidate::New() const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Server2GCClientValidate::default_instance()
 T CMsgGCCStrike15_v2_Server2GCClientValidate::descriptor()
 T CMsgGCCStrike15_v2_Server2GCClientValidate::~CMsgGCCStrike15_v2_Server2GCClientValidate()
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::ByteSize() const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::Clear()
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::GetCachedSize() const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::GetMetadata() const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::IsInitialized() const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::MergeFrom(CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure const&)
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::New() const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::SharedDtor()
 T CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure::~CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure()
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::ByteSize() const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty()
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::Clear()
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::GetCachedSize() const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::GetMetadata() const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::IsInitialized() const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::MergeFrom(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty const&)
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::New() const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::default_instance()
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::descriptor()
 T CMsgGCCStrike15_v2_ServerNotificationForUserPenalty::~CMsgGCCStrike15_v2_ServerNotificationForUserPenalty()
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::ByteSize() const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::Clear()
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::GetCachedSize() const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::GetMetadata() const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::IsInitialized() const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::MergeFrom(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo const&)
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::New() const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_ServerVarValueNotificationInfo::~CMsgGCCStrike15_v2_ServerVarValueNotificationInfo()
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::ByteSize() const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::Clear()
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::GetCachedSize() const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::GetMetadata() const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::IsInitialized() const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::MergeFrom(CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification const&)
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::New() const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification::~CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification()
 T CMsgGCCStrike15_v2_WatchInfoUsers::ByteSize() const
 T CMsgGCCStrike15_v2_WatchInfoUsers::Clear()
 T CMsgGCCStrike15_v2_WatchInfoUsers::GetCachedSize() const
 T CMsgGCCStrike15_v2_WatchInfoUsers::GetMetadata() const
 T CMsgGCCStrike15_v2_WatchInfoUsers::IsInitialized() const
 T CMsgGCCStrike15_v2_WatchInfoUsers::MergeFrom(CMsgGCCStrike15_v2_WatchInfoUsers const&)
 T CMsgGCCStrike15_v2_WatchInfoUsers::New() const
 T CMsgGCCStrike15_v2_WatchInfoUsers::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCStrike15_v2_WatchInfoUsers::SetCachedSize(int) const
 T CMsgGCCStrike15_v2_WatchInfoUsers::~CMsgGCCStrike15_v2_WatchInfoUsers()
 T CMsgGCCheckFriendship::ByteSize() const
 T CMsgGCCheckFriendship::Clear()
 T CMsgGCCheckFriendship::GetCachedSize() const
 T CMsgGCCheckFriendship::GetMetadata() const
 T CMsgGCCheckFriendship::IsInitialized() const
 T CMsgGCCheckFriendship::MergeFrom(CMsgGCCheckFriendship const&)
 T CMsgGCCheckFriendship::New() const
 T CMsgGCCheckFriendship::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCheckFriendship::SetCachedSize(int) const
 T CMsgGCCheckFriendship::~CMsgGCCheckFriendship()
 T CMsgGCCheckFriendship_Response::ByteSize() const
 T CMsgGCCheckFriendship_Response::Clear()
 T CMsgGCCheckFriendship_Response::GetCachedSize() const
 T CMsgGCCheckFriendship_Response::GetMetadata() const
 T CMsgGCCheckFriendship_Response::IsInitialized() const
 T CMsgGCCheckFriendship_Response::MergeFrom(CMsgGCCheckFriendship_Response const&)
 T CMsgGCCheckFriendship_Response::New() const
 T CMsgGCCheckFriendship_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCheckFriendship_Response::SetCachedSize(int) const
 T CMsgGCCheckFriendship_Response::~CMsgGCCheckFriendship_Response()
 T CMsgGCClientDisplayNotification::ByteSize() const
 T CMsgGCClientDisplayNotification::Clear()
 T CMsgGCClientDisplayNotification::GetCachedSize() const
 T CMsgGCClientDisplayNotification::GetMetadata() const
 T CMsgGCClientDisplayNotification::IsInitialized() const
 T CMsgGCClientDisplayNotification::MergeFrom(CMsgGCClientDisplayNotification const&)
 T CMsgGCClientDisplayNotification::New() const
 T CMsgGCClientDisplayNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCClientDisplayNotification::SetCachedSize(int) const
 T CMsgGCClientDisplayNotification::SharedDtor()
 T CMsgGCClientDisplayNotification::~CMsgGCClientDisplayNotification()
 T CMsgGCClientVersionUpdated::ByteSize() const
 T CMsgGCClientVersionUpdated::Clear()
 T CMsgGCClientVersionUpdated::GetCachedSize() const
 T CMsgGCClientVersionUpdated::GetMetadata() const
 T CMsgGCClientVersionUpdated::IsInitialized() const
 T CMsgGCClientVersionUpdated::MergeFrom(CMsgGCClientVersionUpdated const&)
 T CMsgGCClientVersionUpdated::New() const
 T CMsgGCClientVersionUpdated::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCClientVersionUpdated::SetCachedSize(int) const
 T CMsgGCClientVersionUpdated::~CMsgGCClientVersionUpdated()
 T CMsgGCCollectItem::ByteSize() const
 T CMsgGCCollectItem::Clear()
 T CMsgGCCollectItem::GetCachedSize() const
 T CMsgGCCollectItem::GetMetadata() const
 T CMsgGCCollectItem::IsInitialized() const
 T CMsgGCCollectItem::MergeFrom(CMsgGCCollectItem const&)
 T CMsgGCCollectItem::New() const
 T CMsgGCCollectItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCollectItem::SetCachedSize(int) const
 T CMsgGCCollectItem::~CMsgGCCollectItem()
 T CMsgGCCstrike15_v2_ClientRequestNewMission::ByteSize() const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::Clear()
 T CMsgGCCstrike15_v2_ClientRequestNewMission::GetCachedSize() const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::GetMetadata() const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::IsInitialized() const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::MergeFrom(CMsgGCCstrike15_v2_ClientRequestNewMission const&)
 T CMsgGCCstrike15_v2_ClientRequestNewMission::New() const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::SetCachedSize(int) const
 T CMsgGCCstrike15_v2_ClientRequestNewMission::~CMsgGCCstrike15_v2_ClientRequestNewMission()
 T CMsgGCError::ByteSize() const
 T CMsgGCError::Clear()
 T CMsgGCError::GetCachedSize() const
 T CMsgGCError::GetMetadata() const
 T CMsgGCError::IsInitialized() const
 T CMsgGCError::MergeFrom(CMsgGCError const&)
 T CMsgGCError::New() const
 T CMsgGCError::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCError::SetCachedSize(int) const
 T CMsgGCError::~CMsgGCError()
 T CMsgGCGetCommandList::ByteSize() const
 T CMsgGCGetCommandList::Clear()
 T CMsgGCGetCommandList::GetCachedSize() const
 T CMsgGCGetCommandList::GetMetadata() const
 T CMsgGCGetCommandList::IsInitialized() const
 T CMsgGCGetCommandList::MergeFrom(CMsgGCGetCommandList const&)
 T CMsgGCGetCommandList::New() const
 T CMsgGCGetCommandList::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetCommandList::SetCachedSize(int) const
 T CMsgGCGetCommandList::~CMsgGCGetCommandList()
 T CMsgGCGetCommandListResponse::ByteSize() const
 T CMsgGCGetCommandListResponse::Clear()
 T CMsgGCGetCommandListResponse::GetCachedSize() const
 T CMsgGCGetCommandListResponse::GetMetadata() const
 T CMsgGCGetCommandListResponse::IsInitialized() const
 T CMsgGCGetCommandListResponse::MergeFrom(CMsgGCGetCommandListResponse const&)
 T CMsgGCGetCommandListResponse::New() const
 T CMsgGCGetCommandListResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetCommandListResponse::SetCachedSize(int) const
 T CMsgGCGetCommandListResponse::~CMsgGCGetCommandListResponse()
 T CMsgGCGetEmailTemplate::ByteSize() const
 T CMsgGCGetEmailTemplate::Clear()
 T CMsgGCGetEmailTemplate::GetCachedSize() const
 T CMsgGCGetEmailTemplate::GetMetadata() const
 T CMsgGCGetEmailTemplate::IsInitialized() const
 T CMsgGCGetEmailTemplate::MergeFrom(CMsgGCGetEmailTemplate const&)
 T CMsgGCGetEmailTemplate::New() const
 T CMsgGCGetEmailTemplate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetEmailTemplate::SetCachedSize(int) const
 T CMsgGCGetEmailTemplate::~CMsgGCGetEmailTemplate()
 T CMsgGCGetEmailTemplateResponse::ByteSize() const
 T CMsgGCGetEmailTemplateResponse::Clear()
 T CMsgGCGetEmailTemplateResponse::GetCachedSize() const
 T CMsgGCGetEmailTemplateResponse::GetMetadata() const
 T CMsgGCGetEmailTemplateResponse::IsInitialized() const
 T CMsgGCGetEmailTemplateResponse::MergeFrom(CMsgGCGetEmailTemplateResponse const&)
 T CMsgGCGetEmailTemplateResponse::New() const
 T CMsgGCGetEmailTemplateResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetEmailTemplateResponse::SetCachedSize(int) const
 T CMsgGCGetEmailTemplateResponse::~CMsgGCGetEmailTemplateResponse()
 T CMsgGCGetPartnerAccountLink::ByteSize() const
 T CMsgGCGetPartnerAccountLink::Clear()
 T CMsgGCGetPartnerAccountLink::GetCachedSize() const
 T CMsgGCGetPartnerAccountLink::GetMetadata() const
 T CMsgGCGetPartnerAccountLink::IsInitialized() const
 T CMsgGCGetPartnerAccountLink::MergeFrom(CMsgGCGetPartnerAccountLink const&)
 T CMsgGCGetPartnerAccountLink::New() const
 T CMsgGCGetPartnerAccountLink::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetPartnerAccountLink::SetCachedSize(int) const
 T CMsgGCGetPartnerAccountLink::~CMsgGCGetPartnerAccountLink()
 T CMsgGCGetPartnerAccountLink_Response::ByteSize() const
 T CMsgGCGetPartnerAccountLink_Response::Clear()
 T CMsgGCGetPartnerAccountLink_Response::GetCachedSize() const
 T CMsgGCGetPartnerAccountLink_Response::GetMetadata() const
 T CMsgGCGetPartnerAccountLink_Response::IsInitialized() const
 T CMsgGCGetPartnerAccountLink_Response::MergeFrom(CMsgGCGetPartnerAccountLink_Response const&)
 T CMsgGCGetPartnerAccountLink_Response::New() const
 T CMsgGCGetPartnerAccountLink_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetPartnerAccountLink_Response::SetCachedSize(int) const
 T CMsgGCGetPartnerAccountLink_Response::~CMsgGCGetPartnerAccountLink_Response()
 T CMsgGCGetPersonaNames::ByteSize() const
 T CMsgGCGetPersonaNames::Clear()
 T CMsgGCGetPersonaNames::GetCachedSize() const
 T CMsgGCGetPersonaNames::GetMetadata() const
 T CMsgGCGetPersonaNames::IsInitialized() const
 T CMsgGCGetPersonaNames::MergeFrom(CMsgGCGetPersonaNames const&)
 T CMsgGCGetPersonaNames::New() const
 T CMsgGCGetPersonaNames::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetPersonaNames::SetCachedSize(int) const
 T CMsgGCGetPersonaNames::~CMsgGCGetPersonaNames()
 T CMsgGCGetPersonaNames_Response::ByteSize() const
 T CMsgGCGetPersonaNames_Response::Clear()
 T CMsgGCGetPersonaNames_Response::GetCachedSize() const
 T CMsgGCGetPersonaNames_Response::GetMetadata() const
 T CMsgGCGetPersonaNames_Response::IsInitialized() const
 T CMsgGCGetPersonaNames_Response::MergeFrom(CMsgGCGetPersonaNames_Response const&)
 T CMsgGCGetPersonaNames_Response::New() const
 T CMsgGCGetPersonaNames_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetPersonaNames_Response::SetCachedSize(int) const
 T CMsgGCGetPersonaNames_Response::~CMsgGCGetPersonaNames_Response()
 T CMsgGCGetPersonaNames_Response_PersonaName::ByteSize() const
 T CMsgGCGetPersonaNames_Response_PersonaName::Clear()
 T CMsgGCGetPersonaNames_Response_PersonaName::GetCachedSize() const
 T CMsgGCGetPersonaNames_Response_PersonaName::GetMetadata() const
 T CMsgGCGetPersonaNames_Response_PersonaName::IsInitialized() const
 T CMsgGCGetPersonaNames_Response_PersonaName::MergeFrom(CMsgGCGetPersonaNames_Response_PersonaName const&)
 T CMsgGCGetPersonaNames_Response_PersonaName::New() const
 T CMsgGCGetPersonaNames_Response_PersonaName::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetPersonaNames_Response_PersonaName::SetCachedSize(int) const
 T CMsgGCGetPersonaNames_Response_PersonaName::~CMsgGCGetPersonaNames_Response_PersonaName()
 T CMsgGCGiftedItems::ByteSize() const
 T CMsgGCGiftedItems::CMsgGCGiftedItems()
 T CMsgGCGiftedItems::Clear()
 T CMsgGCGiftedItems::GetCachedSize() const
 T CMsgGCGiftedItems::GetMetadata() const
 T CMsgGCGiftedItems::IsInitialized() const
 T CMsgGCGiftedItems::MergeFrom(CMsgGCGiftedItems const&)
 T CMsgGCGiftedItems::New() const
 T CMsgGCGiftedItems::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGiftedItems::SetCachedSize(int) const
 T CMsgGCGiftedItems::default_instance()
 T CMsgGCGiftedItems::descriptor()
 T CMsgGCGiftedItems::~CMsgGCGiftedItems()
 T CMsgGCHAccountVacStatusChange::ByteSize() const
 T CMsgGCHAccountVacStatusChange::Clear()
 T CMsgGCHAccountVacStatusChange::GetCachedSize() const
 T CMsgGCHAccountVacStatusChange::GetMetadata() const
 T CMsgGCHAccountVacStatusChange::IsInitialized() const
 T CMsgGCHAccountVacStatusChange::MergeFrom(CMsgGCHAccountVacStatusChange const&)
 T CMsgGCHAccountVacStatusChange::New() const
 T CMsgGCHAccountVacStatusChange::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCHAccountVacStatusChange::SetCachedSize(int) const
 T CMsgGCHAccountVacStatusChange::~CMsgGCHAccountVacStatusChange()
 T CMsgGCHUpdateSession::ByteSize() const
 T CMsgGCHUpdateSession::Clear()
 T CMsgGCHUpdateSession::GetCachedSize() const
 T CMsgGCHUpdateSession::GetMetadata() const
 T CMsgGCHUpdateSession::IsInitialized() const
 T CMsgGCHUpdateSession::MergeFrom(CMsgGCHUpdateSession const&)
 T CMsgGCHUpdateSession::New() const
 T CMsgGCHUpdateSession::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCHUpdateSession::SetCachedSize(int) const
 T CMsgGCHUpdateSession::~CMsgGCHUpdateSession()
 T CMsgGCHUpdateSession_ExtraField::ByteSize() const
 T CMsgGCHUpdateSession_ExtraField::Clear()
 T CMsgGCHUpdateSession_ExtraField::GetCachedSize() const
 T CMsgGCHUpdateSession_ExtraField::GetMetadata() const
 T CMsgGCHUpdateSession_ExtraField::IsInitialized() const
 T CMsgGCHUpdateSession_ExtraField::MergeFrom(CMsgGCHUpdateSession_ExtraField const&)
 T CMsgGCHUpdateSession_ExtraField::New() const
 T CMsgGCHUpdateSession_ExtraField::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCHUpdateSession_ExtraField::SetCachedSize(int) const
 T CMsgGCHUpdateSession_ExtraField::SharedDtor()
 T CMsgGCHUpdateSession_ExtraField::~CMsgGCHUpdateSession_ExtraField()
 T CMsgGCIncrementKillCountResponse::ByteSize() const
 T CMsgGCIncrementKillCountResponse::Clear()
 T CMsgGCIncrementKillCountResponse::GetCachedSize() const
 T CMsgGCIncrementKillCountResponse::GetMetadata() const
 T CMsgGCIncrementKillCountResponse::IsInitialized() const
 T CMsgGCIncrementKillCountResponse::MergeFrom(CMsgGCIncrementKillCountResponse const&)
 T CMsgGCIncrementKillCountResponse::New() const
 T CMsgGCIncrementKillCountResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCIncrementKillCountResponse::SetCachedSize(int) const
 T CMsgGCIncrementKillCountResponse::~CMsgGCIncrementKillCountResponse()
 T CMsgGCItemPreviewItemBoughtNotification::ByteSize() const
 T CMsgGCItemPreviewItemBoughtNotification::Clear()
 T CMsgGCItemPreviewItemBoughtNotification::GetCachedSize() const
 T CMsgGCItemPreviewItemBoughtNotification::GetMetadata() const
 T CMsgGCItemPreviewItemBoughtNotification::IsInitialized() const
 T CMsgGCItemPreviewItemBoughtNotification::MergeFrom(CMsgGCItemPreviewItemBoughtNotification const&)
 T CMsgGCItemPreviewItemBoughtNotification::New() const
 T CMsgGCItemPreviewItemBoughtNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCItemPreviewItemBoughtNotification::SetCachedSize(int) const
 T CMsgGCItemPreviewItemBoughtNotification::~CMsgGCItemPreviewItemBoughtNotification()
 T CMsgGCMsgMasterSetClientMsgRouting::ByteSize() const
 T CMsgGCMsgMasterSetClientMsgRouting::Clear()
 T CMsgGCMsgMasterSetClientMsgRouting::GetCachedSize() const
 T CMsgGCMsgMasterSetClientMsgRouting::GetMetadata() const
 T CMsgGCMsgMasterSetClientMsgRouting::IsInitialized() const
 T CMsgGCMsgMasterSetClientMsgRouting::MergeFrom(CMsgGCMsgMasterSetClientMsgRouting const&)
 T CMsgGCMsgMasterSetClientMsgRouting::New() const
 T CMsgGCMsgMasterSetClientMsgRouting::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetClientMsgRouting::SetCachedSize(int) const
 T CMsgGCMsgMasterSetClientMsgRouting::~CMsgGCMsgMasterSetClientMsgRouting()
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::ByteSize() const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::Clear()
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::GetCachedSize() const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::GetMetadata() const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::IsInitialized() const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeFrom(CMsgGCMsgMasterSetClientMsgRouting_Entry const&)
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::New() const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::SetCachedSize(int) const
 T CMsgGCMsgMasterSetClientMsgRouting_Entry::~CMsgGCMsgMasterSetClientMsgRouting_Entry()
 T CMsgGCMsgMasterSetClientMsgRouting_Response::ByteSize() const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::Clear()
 T CMsgGCMsgMasterSetClientMsgRouting_Response::GetCachedSize() const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::GetMetadata() const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::IsInitialized() const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::MergeFrom(CMsgGCMsgMasterSetClientMsgRouting_Response const&)
 T CMsgGCMsgMasterSetClientMsgRouting_Response::New() const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::SetCachedSize(int) const
 T CMsgGCMsgMasterSetClientMsgRouting_Response::~CMsgGCMsgMasterSetClientMsgRouting_Response()
 T CMsgGCMsgMasterSetDirectory::ByteSize() const
 T CMsgGCMsgMasterSetDirectory::Clear()
 T CMsgGCMsgMasterSetDirectory::GetCachedSize() const
 T CMsgGCMsgMasterSetDirectory::GetMetadata() const
 T CMsgGCMsgMasterSetDirectory::IsInitialized() const
 T CMsgGCMsgMasterSetDirectory::MergeFrom(CMsgGCMsgMasterSetDirectory const&)
 T CMsgGCMsgMasterSetDirectory::New() const
 T CMsgGCMsgMasterSetDirectory::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetDirectory::SetCachedSize(int) const
 T CMsgGCMsgMasterSetDirectory::~CMsgGCMsgMasterSetDirectory()
 T CMsgGCMsgMasterSetDirectory_Response::ByteSize() const
 T CMsgGCMsgMasterSetDirectory_Response::Clear()
 T CMsgGCMsgMasterSetDirectory_Response::GetCachedSize() const
 T CMsgGCMsgMasterSetDirectory_Response::GetMetadata() const
 T CMsgGCMsgMasterSetDirectory_Response::IsInitialized() const
 T CMsgGCMsgMasterSetDirectory_Response::MergeFrom(CMsgGCMsgMasterSetDirectory_Response const&)
 T CMsgGCMsgMasterSetDirectory_Response::New() const
 T CMsgGCMsgMasterSetDirectory_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetDirectory_Response::SetCachedSize(int) const
 T CMsgGCMsgMasterSetDirectory_Response::~CMsgGCMsgMasterSetDirectory_Response()
 T CMsgGCMsgMasterSetDirectory_SubGC::ByteSize() const
 T CMsgGCMsgMasterSetDirectory_SubGC::Clear()
 T CMsgGCMsgMasterSetDirectory_SubGC::GetCachedSize() const
 T CMsgGCMsgMasterSetDirectory_SubGC::GetMetadata() const
 T CMsgGCMsgMasterSetDirectory_SubGC::IsInitialized() const
 T CMsgGCMsgMasterSetDirectory_SubGC::MergeFrom(CMsgGCMsgMasterSetDirectory_SubGC const&)
 T CMsgGCMsgMasterSetDirectory_SubGC::New() const
 T CMsgGCMsgMasterSetDirectory_SubGC::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetDirectory_SubGC::SetCachedSize(int) const
 T CMsgGCMsgMasterSetDirectory_SubGC::SharedDtor()
 T CMsgGCMsgMasterSetDirectory_SubGC::~CMsgGCMsgMasterSetDirectory_SubGC()
 T CMsgGCMsgMasterSetWebAPIRouting::ByteSize() const
 T CMsgGCMsgMasterSetWebAPIRouting::Clear()
 T CMsgGCMsgMasterSetWebAPIRouting::GetCachedSize() const
 T CMsgGCMsgMasterSetWebAPIRouting::GetMetadata() const
 T CMsgGCMsgMasterSetWebAPIRouting::IsInitialized() const
 T CMsgGCMsgMasterSetWebAPIRouting::MergeFrom(CMsgGCMsgMasterSetWebAPIRouting const&)
 T CMsgGCMsgMasterSetWebAPIRouting::New() const
 T CMsgGCMsgMasterSetWebAPIRouting::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetWebAPIRouting::SetCachedSize(int) const
 T CMsgGCMsgMasterSetWebAPIRouting::~CMsgGCMsgMasterSetWebAPIRouting()
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::ByteSize() const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::Clear()
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::GetCachedSize() const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::GetMetadata() const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::IsInitialized() const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeFrom(CMsgGCMsgMasterSetWebAPIRouting_Entry const&)
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::New() const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::SetCachedSize(int) const
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedDtor()
 T CMsgGCMsgMasterSetWebAPIRouting_Entry::~CMsgGCMsgMasterSetWebAPIRouting_Entry()
 T CMsgGCMsgMasterSetWebAPIRouting_Response::ByteSize() const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::Clear()
 T CMsgGCMsgMasterSetWebAPIRouting_Response::GetCachedSize() const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::GetMetadata() const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::IsInitialized() const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::MergeFrom(CMsgGCMsgMasterSetWebAPIRouting_Response const&)
 T CMsgGCMsgMasterSetWebAPIRouting_Response::New() const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::SetCachedSize(int) const
 T CMsgGCMsgMasterSetWebAPIRouting_Response::~CMsgGCMsgMasterSetWebAPIRouting_Response()
 T CMsgGCMsgSetOptions::ByteSize() const
 T CMsgGCMsgSetOptions::Clear()
 T CMsgGCMsgSetOptions::GetCachedSize() const
 T CMsgGCMsgSetOptions::GetMetadata() const
 T CMsgGCMsgSetOptions::IsInitialized() const
 T CMsgGCMsgSetOptions::MergeFrom(CMsgGCMsgSetOptions const&)
 T CMsgGCMsgSetOptions::New() const
 T CMsgGCMsgSetOptions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgSetOptions::SetCachedSize(int) const
 T CMsgGCMsgSetOptions::~CMsgGCMsgSetOptions()
 T CMsgGCMsgSetOptions_MessageRange::ByteSize() const
 T CMsgGCMsgSetOptions_MessageRange::Clear()
 T CMsgGCMsgSetOptions_MessageRange::GetCachedSize() const
 T CMsgGCMsgSetOptions_MessageRange::GetMetadata() const
 T CMsgGCMsgSetOptions_MessageRange::IsInitialized() const
 T CMsgGCMsgSetOptions_MessageRange::MergeFrom(CMsgGCMsgSetOptions_MessageRange const&)
 T CMsgGCMsgSetOptions_MessageRange::New() const
 T CMsgGCMsgSetOptions_MessageRange::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgSetOptions_MessageRange::SetCachedSize(int) const
 T CMsgGCMsgSetOptions_MessageRange::~CMsgGCMsgSetOptions_MessageRange()
 T CMsgGCMsgSetOptions_Option_IsValid(int)
 T CMsgGCMsgWebAPIJobRequestForwardResponse::ByteSize() const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::Clear()
 T CMsgGCMsgWebAPIJobRequestForwardResponse::GetCachedSize() const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::GetMetadata() const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::IsInitialized() const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::MergeFrom(CMsgGCMsgWebAPIJobRequestForwardResponse const&)
 T CMsgGCMsgWebAPIJobRequestForwardResponse::New() const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::SetCachedSize(int) const
 T CMsgGCMsgWebAPIJobRequestForwardResponse::~CMsgGCMsgWebAPIJobRequestForwardResponse()
 T CMsgGCMultiplexMessage::ByteSize() const
 T CMsgGCMultiplexMessage::Clear()
 T CMsgGCMultiplexMessage::GetCachedSize() const
 T CMsgGCMultiplexMessage::GetMetadata() const
 T CMsgGCMultiplexMessage::IsInitialized() const
 T CMsgGCMultiplexMessage::MergeFrom(CMsgGCMultiplexMessage const&)
 T CMsgGCMultiplexMessage::New() const
 T CMsgGCMultiplexMessage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCMultiplexMessage::SetCachedSize(int) const
 T CMsgGCMultiplexMessage::~CMsgGCMultiplexMessage()
 T CMsgGCNameItemNotification::ByteSize() const
 T CMsgGCNameItemNotification::Clear()
 T CMsgGCNameItemNotification::GetCachedSize() const
 T CMsgGCNameItemNotification::GetMetadata() const
 T CMsgGCNameItemNotification::IsInitialized() const
 T CMsgGCNameItemNotification::MergeFrom(CMsgGCNameItemNotification const&)
 T CMsgGCNameItemNotification::New() const
 T CMsgGCNameItemNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCNameItemNotification::SetCachedSize(int) const
 T CMsgGCNameItemNotification::~CMsgGCNameItemNotification()
 T CMsgGCReportAbuse::ByteSize() const
 T CMsgGCReportAbuse::Clear()
 T CMsgGCReportAbuse::GetCachedSize() const
 T CMsgGCReportAbuse::GetMetadata() const
 T CMsgGCReportAbuse::IsInitialized() const
 T CMsgGCReportAbuse::MergeFrom(CMsgGCReportAbuse const&)
 T CMsgGCReportAbuse::New() const
 T CMsgGCReportAbuse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCReportAbuse::SetCachedSize(int) const
 T CMsgGCReportAbuse::~CMsgGCReportAbuse()
 T CMsgGCReportAbuseResponse::ByteSize() const
 T CMsgGCReportAbuseResponse::Clear()
 T CMsgGCReportAbuseResponse::GetCachedSize() const
 T CMsgGCReportAbuseResponse::GetMetadata() const
 T CMsgGCReportAbuseResponse::IsInitialized() const
 T CMsgGCReportAbuseResponse::MergeFrom(CMsgGCReportAbuseResponse const&)
 T CMsgGCReportAbuseResponse::New() const
 T CMsgGCReportAbuseResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCReportAbuseResponse::SetCachedSize(int) const
 T CMsgGCReportAbuseResponse::~CMsgGCReportAbuseResponse()
 T CMsgGCRequestAnnouncements::ByteSize() const
 T CMsgGCRequestAnnouncements::Clear()
 T CMsgGCRequestAnnouncements::GetCachedSize() const
 T CMsgGCRequestAnnouncements::GetMetadata() const
 T CMsgGCRequestAnnouncements::IsInitialized() const
 T CMsgGCRequestAnnouncements::MergeFrom(CMsgGCRequestAnnouncements const&)
 T CMsgGCRequestAnnouncements::New() const
 T CMsgGCRequestAnnouncements::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCRequestAnnouncements::SetCachedSize(int) const
 T CMsgGCRequestAnnouncements::~CMsgGCRequestAnnouncements()
 T CMsgGCRequestAnnouncementsResponse::ByteSize() const
 T CMsgGCRequestAnnouncementsResponse::Clear()
 T CMsgGCRequestAnnouncementsResponse::GetCachedSize() const
 T CMsgGCRequestAnnouncementsResponse::GetMetadata() const
 T CMsgGCRequestAnnouncementsResponse::IsInitialized() const
 T CMsgGCRequestAnnouncementsResponse::MergeFrom(CMsgGCRequestAnnouncementsResponse const&)
 T CMsgGCRequestAnnouncementsResponse::New() const
 T CMsgGCRequestAnnouncementsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCRequestAnnouncementsResponse::SetCachedSize(int) const
 T CMsgGCRequestAnnouncementsResponse::SharedDtor()
 T CMsgGCRequestAnnouncementsResponse::~CMsgGCRequestAnnouncementsResponse()
 T CMsgGCRequestSessionIP::ByteSize() const
 T CMsgGCRequestSessionIP::Clear()
 T CMsgGCRequestSessionIP::GetCachedSize() const
 T CMsgGCRequestSessionIP::GetMetadata() const
 T CMsgGCRequestSessionIP::IsInitialized() const
 T CMsgGCRequestSessionIP::MergeFrom(CMsgGCRequestSessionIP const&)
 T CMsgGCRequestSessionIP::New() const
 T CMsgGCRequestSessionIP::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCRequestSessionIP::SetCachedSize(int) const
 T CMsgGCRequestSessionIP::~CMsgGCRequestSessionIP()
 T CMsgGCRequestSessionIPResponse::ByteSize() const
 T CMsgGCRequestSessionIPResponse::Clear()
 T CMsgGCRequestSessionIPResponse::GetCachedSize() const
 T CMsgGCRequestSessionIPResponse::GetMetadata() const
 T CMsgGCRequestSessionIPResponse::IsInitialized() const
 T CMsgGCRequestSessionIPResponse::MergeFrom(CMsgGCRequestSessionIPResponse const&)
 T CMsgGCRequestSessionIPResponse::New() const
 T CMsgGCRequestSessionIPResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCRequestSessionIPResponse::SetCachedSize(int) const
 T CMsgGCRequestSessionIPResponse::~CMsgGCRequestSessionIPResponse()
 T CMsgGCRoutingInfo::ByteSize() const
 T CMsgGCRoutingInfo::Clear()
 T CMsgGCRoutingInfo::GetCachedSize() const
 T CMsgGCRoutingInfo::GetMetadata() const
 T CMsgGCRoutingInfo::IsInitialized() const
 T CMsgGCRoutingInfo::MergeFrom(CMsgGCRoutingInfo const&)
 T CMsgGCRoutingInfo::New() const
 T CMsgGCRoutingInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCRoutingInfo::SetCachedSize(int) const
 T CMsgGCRoutingInfo::~CMsgGCRoutingInfo()
 T CMsgGCServerVersionUpdated::ByteSize() const
 T CMsgGCServerVersionUpdated::CMsgGCServerVersionUpdated()
 T CMsgGCServerVersionUpdated::Clear()
 T CMsgGCServerVersionUpdated::GetCachedSize() const
 T CMsgGCServerVersionUpdated::GetMetadata() const
 T CMsgGCServerVersionUpdated::IsInitialized() const
 T CMsgGCServerVersionUpdated::MergeFrom(CMsgGCServerVersionUpdated const&)
 T CMsgGCServerVersionUpdated::New() const
 T CMsgGCServerVersionUpdated::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCServerVersionUpdated::SetCachedSize(int) const
 T CMsgGCServerVersionUpdated::default_instance()
 T CMsgGCServerVersionUpdated::descriptor()
 T CMsgGCServerVersionUpdated::~CMsgGCServerVersionUpdated()
 T CMsgGCShowItemsPickedUp::ByteSize() const
 T CMsgGCShowItemsPickedUp::Clear()
 T CMsgGCShowItemsPickedUp::GetCachedSize() const
 T CMsgGCShowItemsPickedUp::GetMetadata() const
 T CMsgGCShowItemsPickedUp::IsInitialized() const
 T CMsgGCShowItemsPickedUp::MergeFrom(CMsgGCShowItemsPickedUp const&)
 T CMsgGCShowItemsPickedUp::New() const
 T CMsgGCShowItemsPickedUp::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCShowItemsPickedUp::SetCachedSize(int) const
 T CMsgGCShowItemsPickedUp::~CMsgGCShowItemsPickedUp()
 T CMsgGCStorePurchaseCancel::ByteSize() const
 T CMsgGCStorePurchaseCancel::Clear()
 T CMsgGCStorePurchaseCancel::GetCachedSize() const
 T CMsgGCStorePurchaseCancel::GetMetadata() const
 T CMsgGCStorePurchaseCancel::IsInitialized() const
 T CMsgGCStorePurchaseCancel::MergeFrom(CMsgGCStorePurchaseCancel const&)
 T CMsgGCStorePurchaseCancel::New() const
 T CMsgGCStorePurchaseCancel::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseCancel::SetCachedSize(int) const
 T CMsgGCStorePurchaseCancel::~CMsgGCStorePurchaseCancel()
 T CMsgGCStorePurchaseCancelResponse::ByteSize() const
 T CMsgGCStorePurchaseCancelResponse::Clear()
 T CMsgGCStorePurchaseCancelResponse::GetCachedSize() const
 T CMsgGCStorePurchaseCancelResponse::GetMetadata() const
 T CMsgGCStorePurchaseCancelResponse::IsInitialized() const
 T CMsgGCStorePurchaseCancelResponse::MergeFrom(CMsgGCStorePurchaseCancelResponse const&)
 T CMsgGCStorePurchaseCancelResponse::New() const
 T CMsgGCStorePurchaseCancelResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseCancelResponse::SetCachedSize(int) const
 T CMsgGCStorePurchaseCancelResponse::~CMsgGCStorePurchaseCancelResponse()
 T CMsgGCStorePurchaseFinalize::ByteSize() const
 T CMsgGCStorePurchaseFinalize::Clear()
 T CMsgGCStorePurchaseFinalize::GetCachedSize() const
 T CMsgGCStorePurchaseFinalize::GetMetadata() const
 T CMsgGCStorePurchaseFinalize::IsInitialized() const
 T CMsgGCStorePurchaseFinalize::MergeFrom(CMsgGCStorePurchaseFinalize const&)
 T CMsgGCStorePurchaseFinalize::New() const
 T CMsgGCStorePurchaseFinalize::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseFinalize::SetCachedSize(int) const
 T CMsgGCStorePurchaseFinalize::~CMsgGCStorePurchaseFinalize()
 T CMsgGCStorePurchaseFinalizeResponse::ByteSize() const
 T CMsgGCStorePurchaseFinalizeResponse::Clear()
 T CMsgGCStorePurchaseFinalizeResponse::GetCachedSize() const
 T CMsgGCStorePurchaseFinalizeResponse::GetMetadata() const
 T CMsgGCStorePurchaseFinalizeResponse::IsInitialized() const
 T CMsgGCStorePurchaseFinalizeResponse::MergeFrom(CMsgGCStorePurchaseFinalizeResponse const&)
 T CMsgGCStorePurchaseFinalizeResponse::New() const
 T CMsgGCStorePurchaseFinalizeResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseFinalizeResponse::SetCachedSize(int) const
 T CMsgGCStorePurchaseFinalizeResponse::~CMsgGCStorePurchaseFinalizeResponse()
 T CMsgGCStorePurchaseInit::ByteSize() const
 T CMsgGCStorePurchaseInit::Clear()
 T CMsgGCStorePurchaseInit::GetCachedSize() const
 T CMsgGCStorePurchaseInit::GetMetadata() const
 T CMsgGCStorePurchaseInit::IsInitialized() const
 T CMsgGCStorePurchaseInit::MergeFrom(CMsgGCStorePurchaseInit const&)
 T CMsgGCStorePurchaseInit::New() const
 T CMsgGCStorePurchaseInit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseInit::SetCachedSize(int) const
 T CMsgGCStorePurchaseInit::~CMsgGCStorePurchaseInit()
 T CMsgGCStorePurchaseInitResponse::ByteSize() const
 T CMsgGCStorePurchaseInitResponse::Clear()
 T CMsgGCStorePurchaseInitResponse::GetCachedSize() const
 T CMsgGCStorePurchaseInitResponse::GetMetadata() const
 T CMsgGCStorePurchaseInitResponse::IsInitialized() const
 T CMsgGCStorePurchaseInitResponse::MergeFrom(CMsgGCStorePurchaseInitResponse const&)
 T CMsgGCStorePurchaseInitResponse::New() const
 T CMsgGCStorePurchaseInitResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseInitResponse::SetCachedSize(int) const
 T CMsgGCStorePurchaseInitResponse::~CMsgGCStorePurchaseInitResponse()
 T CMsgGCToGCBannedWordListBroadcast::ByteSize() const
 T CMsgGCToGCBannedWordListBroadcast::Clear()
 T CMsgGCToGCBannedWordListBroadcast::GetCachedSize() const
 T CMsgGCToGCBannedWordListBroadcast::GetMetadata() const
 T CMsgGCToGCBannedWordListBroadcast::IsInitialized() const
 T CMsgGCToGCBannedWordListBroadcast::MergeFrom(CMsgGCToGCBannedWordListBroadcast const&)
 T CMsgGCToGCBannedWordListBroadcast::New() const
 T CMsgGCToGCBannedWordListBroadcast::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCBannedWordListBroadcast::SetCachedSize(int) const
 T CMsgGCToGCBannedWordListBroadcast::~CMsgGCToGCBannedWordListBroadcast()
 T CMsgGCToGCBannedWordListUpdated::ByteSize() const
 T CMsgGCToGCBannedWordListUpdated::Clear()
 T CMsgGCToGCBannedWordListUpdated::GetCachedSize() const
 T CMsgGCToGCBannedWordListUpdated::GetMetadata() const
 T CMsgGCToGCBannedWordListUpdated::IsInitialized() const
 T CMsgGCToGCBannedWordListUpdated::MergeFrom(CMsgGCToGCBannedWordListUpdated const&)
 T CMsgGCToGCBannedWordListUpdated::New() const
 T CMsgGCToGCBannedWordListUpdated::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCBannedWordListUpdated::SetCachedSize(int) const
 T CMsgGCToGCBannedWordListUpdated::~CMsgGCToGCBannedWordListUpdated()
 T CMsgGCToGCBroadcastConsoleCommand::ByteSize() const
 T CMsgGCToGCBroadcastConsoleCommand::Clear()
 T CMsgGCToGCBroadcastConsoleCommand::GetCachedSize() const
 T CMsgGCToGCBroadcastConsoleCommand::GetMetadata() const
 T CMsgGCToGCBroadcastConsoleCommand::IsInitialized() const
 T CMsgGCToGCBroadcastConsoleCommand::MergeFrom(CMsgGCToGCBroadcastConsoleCommand const&)
 T CMsgGCToGCBroadcastConsoleCommand::New() const
 T CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCBroadcastConsoleCommand::SetCachedSize(int) const
 T CMsgGCToGCBroadcastConsoleCommand::~CMsgGCToGCBroadcastConsoleCommand()
 T CMsgGCToGCDirtyMultipleSDOCache::ByteSize() const
 T CMsgGCToGCDirtyMultipleSDOCache::Clear()
 T CMsgGCToGCDirtyMultipleSDOCache::GetCachedSize() const
 T CMsgGCToGCDirtyMultipleSDOCache::GetMetadata() const
 T CMsgGCToGCDirtyMultipleSDOCache::IsInitialized() const
 T CMsgGCToGCDirtyMultipleSDOCache::MergeFrom(CMsgGCToGCDirtyMultipleSDOCache const&)
 T CMsgGCToGCDirtyMultipleSDOCache::New() const
 T CMsgGCToGCDirtyMultipleSDOCache::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCDirtyMultipleSDOCache::SetCachedSize(int) const
 T CMsgGCToGCDirtyMultipleSDOCache::~CMsgGCToGCDirtyMultipleSDOCache()
 T CMsgGCToGCDirtySDOCache::ByteSize() const
 T CMsgGCToGCDirtySDOCache::Clear()
 T CMsgGCToGCDirtySDOCache::GetCachedSize() const
 T CMsgGCToGCDirtySDOCache::GetMetadata() const
 T CMsgGCToGCDirtySDOCache::IsInitialized() const
 T CMsgGCToGCDirtySDOCache::MergeFrom(CMsgGCToGCDirtySDOCache const&)
 T CMsgGCToGCDirtySDOCache::New() const
 T CMsgGCToGCDirtySDOCache::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCDirtySDOCache::SetCachedSize(int) const
 T CMsgGCToGCDirtySDOCache::~CMsgGCToGCDirtySDOCache()
 T CMsgGCToGCIsTrustedServer::ByteSize() const
 T CMsgGCToGCIsTrustedServer::Clear()
 T CMsgGCToGCIsTrustedServer::GetCachedSize() const
 T CMsgGCToGCIsTrustedServer::GetMetadata() const
 T CMsgGCToGCIsTrustedServer::IsInitialized() const
 T CMsgGCToGCIsTrustedServer::MergeFrom(CMsgGCToGCIsTrustedServer const&)
 T CMsgGCToGCIsTrustedServer::New() const
 T CMsgGCToGCIsTrustedServer::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCIsTrustedServer::SetCachedSize(int) const
 T CMsgGCToGCIsTrustedServer::~CMsgGCToGCIsTrustedServer()
 T CMsgGCToGCIsTrustedServerResponse::ByteSize() const
 T CMsgGCToGCIsTrustedServerResponse::Clear()
 T CMsgGCToGCIsTrustedServerResponse::GetCachedSize() const
 T CMsgGCToGCIsTrustedServerResponse::GetMetadata() const
 T CMsgGCToGCIsTrustedServerResponse::IsInitialized() const
 T CMsgGCToGCIsTrustedServerResponse::MergeFrom(CMsgGCToGCIsTrustedServerResponse const&)
 T CMsgGCToGCIsTrustedServerResponse::New() const
 T CMsgGCToGCIsTrustedServerResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCIsTrustedServerResponse::SetCachedSize(int) const
 T CMsgGCToGCIsTrustedServerResponse::~CMsgGCToGCIsTrustedServerResponse()
 T CMsgGCToGCReloadVersions::ByteSize() const
 T CMsgGCToGCReloadVersions::Clear()
 T CMsgGCToGCReloadVersions::GetCachedSize() const
 T CMsgGCToGCReloadVersions::GetMetadata() const
 T CMsgGCToGCReloadVersions::IsInitialized() const
 T CMsgGCToGCReloadVersions::MergeFrom(CMsgGCToGCReloadVersions const&)
 T CMsgGCToGCReloadVersions::New() const
 T CMsgGCToGCReloadVersions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCReloadVersions::SetCachedSize(int) const
 T CMsgGCToGCReloadVersions::~CMsgGCToGCReloadVersions()
 T CMsgGCToGCRequestPassportItemGrant::ByteSize() const
 T CMsgGCToGCRequestPassportItemGrant::Clear()
 T CMsgGCToGCRequestPassportItemGrant::GetCachedSize() const
 T CMsgGCToGCRequestPassportItemGrant::GetMetadata() const
 T CMsgGCToGCRequestPassportItemGrant::IsInitialized() const
 T CMsgGCToGCRequestPassportItemGrant::MergeFrom(CMsgGCToGCRequestPassportItemGrant const&)
 T CMsgGCToGCRequestPassportItemGrant::New() const
 T CMsgGCToGCRequestPassportItemGrant::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCRequestPassportItemGrant::SetCachedSize(int) const
 T CMsgGCToGCRequestPassportItemGrant::~CMsgGCToGCRequestPassportItemGrant()
 T CMsgGCToGCUpdateSQLKeyValue::ByteSize() const
 T CMsgGCToGCUpdateSQLKeyValue::Clear()
 T CMsgGCToGCUpdateSQLKeyValue::GetCachedSize() const
 T CMsgGCToGCUpdateSQLKeyValue::GetMetadata() const
 T CMsgGCToGCUpdateSQLKeyValue::IsInitialized() const
 T CMsgGCToGCUpdateSQLKeyValue::MergeFrom(CMsgGCToGCUpdateSQLKeyValue const&)
 T CMsgGCToGCUpdateSQLKeyValue::New() const
 T CMsgGCToGCUpdateSQLKeyValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCUpdateSQLKeyValue::SetCachedSize(int) const
 T CMsgGCToGCUpdateSQLKeyValue::~CMsgGCToGCUpdateSQLKeyValue()
 T CMsgGCToGCWebAPIAccountChanged::ByteSize() const
 T CMsgGCToGCWebAPIAccountChanged::Clear()
 T CMsgGCToGCWebAPIAccountChanged::GetCachedSize() const
 T CMsgGCToGCWebAPIAccountChanged::GetMetadata() const
 T CMsgGCToGCWebAPIAccountChanged::IsInitialized() const
 T CMsgGCToGCWebAPIAccountChanged::MergeFrom(CMsgGCToGCWebAPIAccountChanged const&)
 T CMsgGCToGCWebAPIAccountChanged::New() const
 T CMsgGCToGCWebAPIAccountChanged::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCToGCWebAPIAccountChanged::SetCachedSize(int) const
 T CMsgGCToGCWebAPIAccountChanged::~CMsgGCToGCWebAPIAccountChanged()
 T CMsgGCUpdateSessionIP::ByteSize() const
 T CMsgGCUpdateSessionIP::Clear()
 T CMsgGCUpdateSessionIP::GetCachedSize() const
 T CMsgGCUpdateSessionIP::GetMetadata() const
 T CMsgGCUpdateSessionIP::IsInitialized() const
 T CMsgGCUpdateSessionIP::MergeFrom(CMsgGCUpdateSessionIP const&)
 T CMsgGCUpdateSessionIP::New() const
 T CMsgGCUpdateSessionIP::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCUpdateSessionIP::SetCachedSize(int) const
 T CMsgGCUpdateSessionIP::~CMsgGCUpdateSessionIP()
 T CMsgGC_ServerQuestUpdateData::ByteSize() const
 T CMsgGC_ServerQuestUpdateData::Clear()
 T CMsgGC_ServerQuestUpdateData::GetCachedSize() const
 T CMsgGC_ServerQuestUpdateData::GetMetadata() const
 T CMsgGC_ServerQuestUpdateData::IsInitialized() const
 T CMsgGC_ServerQuestUpdateData::MergeFrom(CMsgGC_ServerQuestUpdateData const&)
 T CMsgGC_ServerQuestUpdateData::New() const
 T CMsgGC_ServerQuestUpdateData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGC_ServerQuestUpdateData::SetCachedSize(int) const
 T CMsgGC_ServerQuestUpdateData::~CMsgGC_ServerQuestUpdateData()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::ByteSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::Clear()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::GetCachedSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::GetMetadata() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::IsInitialized() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::MergeFrom(CMsgGC_ServerQuestUpdateData_PlayerQuestData const&)
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::New() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::SetCachedSize(int) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData::~CMsgGC_ServerQuestUpdateData_PlayerQuestData()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::ByteSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::Clear()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::GetCachedSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::GetMetadata() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::IsInitialized() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::MergeFrom(CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData const&)
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::New() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::SetCachedSize(int) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData::~CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::ByteSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::Clear()
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::GetCachedSize() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::GetMetadata() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::IsInitialized() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::MergeFrom(CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData const&)
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::New() const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::SetCachedSize(int) const
 T CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData::~CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData()
 T CMsgGameServerInfo::ByteSize() const
 T CMsgGameServerInfo::Clear()
 T CMsgGameServerInfo::GetCachedSize() const
 T CMsgGameServerInfo::GetMetadata() const
 T CMsgGameServerInfo::IsInitialized() const
 T CMsgGameServerInfo::MergeFrom(CMsgGameServerInfo const&)
 T CMsgGameServerInfo::New() const
 T CMsgGameServerInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGameServerInfo::SetCachedSize(int) const
 T CMsgGameServerInfo::~CMsgGameServerInfo()
 T CMsgHttpRequest::ByteSize() const
 T CMsgHttpRequest::Clear()
 T CMsgHttpRequest::GetCachedSize() const
 T CMsgHttpRequest::GetMetadata() const
 T CMsgHttpRequest::IsInitialized() const
 T CMsgHttpRequest::MergeFrom(CMsgHttpRequest const&)
 T CMsgHttpRequest::New() const
 T CMsgHttpRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest::SetCachedSize(int) const
 T CMsgHttpRequest::SharedDtor()
 T CMsgHttpRequest::~CMsgHttpRequest()
 T CMsgHttpRequest_QueryParam::ByteSize() const
 T CMsgHttpRequest_QueryParam::Clear()
 T CMsgHttpRequest_QueryParam::GetCachedSize() const
 T CMsgHttpRequest_QueryParam::GetMetadata() const
 T CMsgHttpRequest_QueryParam::IsInitialized() const
 T CMsgHttpRequest_QueryParam::MergeFrom(CMsgHttpRequest_QueryParam const&)
 T CMsgHttpRequest_QueryParam::New() const
 T CMsgHttpRequest_QueryParam::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest_QueryParam::SetCachedSize(int) const
 T CMsgHttpRequest_QueryParam::SharedDtor()
 T CMsgHttpRequest_QueryParam::~CMsgHttpRequest_QueryParam()
 T CMsgHttpRequest_RequestHeader::ByteSize() const
 T CMsgHttpRequest_RequestHeader::Clear()
 T CMsgHttpRequest_RequestHeader::GetCachedSize() const
 T CMsgHttpRequest_RequestHeader::GetMetadata() const
 T CMsgHttpRequest_RequestHeader::IsInitialized() const
 T CMsgHttpRequest_RequestHeader::MergeFrom(CMsgHttpRequest_RequestHeader const&)
 T CMsgHttpRequest_RequestHeader::New() const
 T CMsgHttpRequest_RequestHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest_RequestHeader::SetCachedSize(int) const
 T CMsgHttpRequest_RequestHeader::SharedDtor()
 T CMsgHttpRequest_RequestHeader::~CMsgHttpRequest_RequestHeader()
 T CMsgHttpResponse::ByteSize() const
 T CMsgHttpResponse::Clear()
 T CMsgHttpResponse::GetCachedSize() const
 T CMsgHttpResponse::GetMetadata() const
 T CMsgHttpResponse::IsInitialized() const
 T CMsgHttpResponse::MergeFrom(CMsgHttpResponse const&)
 T CMsgHttpResponse::New() const
 T CMsgHttpResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpResponse::SetCachedSize(int) const
 T CMsgHttpResponse::~CMsgHttpResponse()
 T CMsgHttpResponse_ResponseHeader::ByteSize() const
 T CMsgHttpResponse_ResponseHeader::Clear()
 T CMsgHttpResponse_ResponseHeader::GetCachedSize() const
 T CMsgHttpResponse_ResponseHeader::GetMetadata() const
 T CMsgHttpResponse_ResponseHeader::IsInitialized() const
 T CMsgHttpResponse_ResponseHeader::MergeFrom(CMsgHttpResponse_ResponseHeader const&)
 T CMsgHttpResponse_ResponseHeader::New() const
 T CMsgHttpResponse_ResponseHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpResponse_ResponseHeader::SetCachedSize(int) const
 T CMsgHttpResponse_ResponseHeader::SharedDtor()
 T CMsgHttpResponse_ResponseHeader::~CMsgHttpResponse_ResponseHeader()
 T CMsgIncrementKillCountAttribute::ByteSize() const
 T CMsgIncrementKillCountAttribute::CMsgIncrementKillCountAttribute()
 T CMsgIncrementKillCountAttribute::Clear()
 T CMsgIncrementKillCountAttribute::GetCachedSize() const
 T CMsgIncrementKillCountAttribute::GetMetadata() const
 T CMsgIncrementKillCountAttribute::IsInitialized() const
 T CMsgIncrementKillCountAttribute::MergeFrom(CMsgIncrementKillCountAttribute const&)
 T CMsgIncrementKillCountAttribute::New() const
 T CMsgIncrementKillCountAttribute::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgIncrementKillCountAttribute::SetCachedSize(int) const
 T CMsgIncrementKillCountAttribute::default_instance()
 T CMsgIncrementKillCountAttribute::descriptor()
 T CMsgIncrementKillCountAttribute::~CMsgIncrementKillCountAttribute()
 T CMsgInvitationCreated::ByteSize() const
 T CMsgInvitationCreated::Clear()
 T CMsgInvitationCreated::GetCachedSize() const
 T CMsgInvitationCreated::GetMetadata() const
 T CMsgInvitationCreated::IsInitialized() const
 T CMsgInvitationCreated::MergeFrom(CMsgInvitationCreated const&)
 T CMsgInvitationCreated::New() const
 T CMsgInvitationCreated::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgInvitationCreated::SetCachedSize(int) const
 T CMsgInvitationCreated::~CMsgInvitationCreated()
 T CMsgInviteToParty::ByteSize() const
 T CMsgInviteToParty::Clear()
 T CMsgInviteToParty::GetCachedSize() const
 T CMsgInviteToParty::GetMetadata() const
 T CMsgInviteToParty::IsInitialized() const
 T CMsgInviteToParty::MergeFrom(CMsgInviteToParty const&)
 T CMsgInviteToParty::New() const
 T CMsgInviteToParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgInviteToParty::SetCachedSize(int) const
 T CMsgInviteToParty::~CMsgInviteToParty()
 T CMsgItemAcknowledged::ByteSize() const
 T CMsgItemAcknowledged::CMsgItemAcknowledged()
 T CMsgItemAcknowledged::Clear()
 T CMsgItemAcknowledged::GetCachedSize() const
 T CMsgItemAcknowledged::GetMetadata() const
 T CMsgItemAcknowledged::IsInitialized() const
 T CMsgItemAcknowledged::MergeFrom(CMsgItemAcknowledged const&)
 T CMsgItemAcknowledged::New() const
 T CMsgItemAcknowledged::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgItemAcknowledged::SetCachedSize(int) const
 T CMsgItemAcknowledged::default_instance()
 T CMsgItemAcknowledged::descriptor()
 T CMsgItemAcknowledged::~CMsgItemAcknowledged()
 T CMsgItemAcknowledged__DEPRECATED::ByteSize() const
 T CMsgItemAcknowledged__DEPRECATED::Clear()
 T CMsgItemAcknowledged__DEPRECATED::GetCachedSize() const
 T CMsgItemAcknowledged__DEPRECATED::GetMetadata() const
 T CMsgItemAcknowledged__DEPRECATED::IsInitialized() const
 T CMsgItemAcknowledged__DEPRECATED::MergeFrom(CMsgItemAcknowledged__DEPRECATED const&)
 T CMsgItemAcknowledged__DEPRECATED::New() const
 T CMsgItemAcknowledged__DEPRECATED::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgItemAcknowledged__DEPRECATED::SetCachedSize(int) const
 T CMsgItemAcknowledged__DEPRECATED::~CMsgItemAcknowledged__DEPRECATED()
 T CMsgKickFromParty::ByteSize() const
 T CMsgKickFromParty::Clear()
 T CMsgKickFromParty::GetCachedSize() const
 T CMsgKickFromParty::GetMetadata() const
 T CMsgKickFromParty::IsInitialized() const
 T CMsgKickFromParty::MergeFrom(CMsgKickFromParty const&)
 T CMsgKickFromParty::New() const
 T CMsgKickFromParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgKickFromParty::SetCachedSize(int) const
 T CMsgKickFromParty::~CMsgKickFromParty()
 T CMsgLANServerAvailable::ByteSize() const
 T CMsgLANServerAvailable::Clear()
 T CMsgLANServerAvailable::GetCachedSize() const
 T CMsgLANServerAvailable::GetMetadata() const
 T CMsgLANServerAvailable::IsInitialized() const
 T CMsgLANServerAvailable::MergeFrom(CMsgLANServerAvailable const&)
 T CMsgLANServerAvailable::New() const
 T CMsgLANServerAvailable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgLANServerAvailable::SetCachedSize(int) const
 T CMsgLANServerAvailable::~CMsgLANServerAvailable()
 T CMsgLeaveParty::ByteSize() const
 T CMsgLeaveParty::Clear()
 T CMsgLeaveParty::GetCachedSize() const
 T CMsgLeaveParty::GetMetadata() const
 T CMsgLeaveParty::IsInitialized() const
 T CMsgLeaveParty::MergeFrom(CMsgLeaveParty const&)
 T CMsgLeaveParty::New() const
 T CMsgLeaveParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgLeaveParty::SetCachedSize(int) const
 T CMsgLeaveParty::~CMsgLeaveParty()
 T CMsgNotificationOfSuspiciousActivity::ByteSize() const
 T CMsgNotificationOfSuspiciousActivity::Clear()
 T CMsgNotificationOfSuspiciousActivity::GetCachedSize() const
 T CMsgNotificationOfSuspiciousActivity::GetMetadata() const
 T CMsgNotificationOfSuspiciousActivity::IsInitialized() const
 T CMsgNotificationOfSuspiciousActivity::MergeFrom(CMsgNotificationOfSuspiciousActivity const&)
 T CMsgNotificationOfSuspiciousActivity::New() const
 T CMsgNotificationOfSuspiciousActivity::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgNotificationOfSuspiciousActivity::SetCachedSize(int) const
 T CMsgNotificationOfSuspiciousActivity::~CMsgNotificationOfSuspiciousActivity()
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::ByteSize() const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear()
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetCachedSize() const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetMetadata() const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::IsInitialized() const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances const&)
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::New() const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SetCachedSize(int) const
 T CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances()
 T CMsgNotifyWatchdog::ByteSize() const
 T CMsgNotifyWatchdog::Clear()
 T CMsgNotifyWatchdog::GetCachedSize() const
 T CMsgNotifyWatchdog::GetMetadata() const
 T CMsgNotifyWatchdog::IsInitialized() const
 T CMsgNotifyWatchdog::MergeFrom(CMsgNotifyWatchdog const&)
 T CMsgNotifyWatchdog::New() const
 T CMsgNotifyWatchdog::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgNotifyWatchdog::SetCachedSize(int) const
 T CMsgNotifyWatchdog::~CMsgNotifyWatchdog()
 T CMsgPackageLicense::ByteSize() const
 T CMsgPackageLicense::Clear()
 T CMsgPackageLicense::GetCachedSize() const
 T CMsgPackageLicense::GetMetadata() const
 T CMsgPackageLicense::IsInitialized() const
 T CMsgPackageLicense::MergeFrom(CMsgPackageLicense const&)
 T CMsgPackageLicense::New() const
 T CMsgPackageLicense::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPackageLicense::SetCachedSize(int) const
 T CMsgPackageLicense::~CMsgPackageLicense()
 T CMsgPartyInviteResponse::ByteSize() const
 T CMsgPartyInviteResponse::Clear()
 T CMsgPartyInviteResponse::GetCachedSize() const
 T CMsgPartyInviteResponse::GetMetadata() const
 T CMsgPartyInviteResponse::IsInitialized() const
 T CMsgPartyInviteResponse::MergeFrom(CMsgPartyInviteResponse const&)
 T CMsgPartyInviteResponse::New() const
 T CMsgPartyInviteResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPartyInviteResponse::SetCachedSize(int) const
 T CMsgPartyInviteResponse::~CMsgPartyInviteResponse()
 T CMsgProtoBufHeader::ByteSize() const
 T CMsgProtoBufHeader::CMsgProtoBufHeader()
 T CMsgProtoBufHeader::Clear()
 T CMsgProtoBufHeader::GetCachedSize() const
 T CMsgProtoBufHeader::GetMetadata() const
 T CMsgProtoBufHeader::IsInitialized() const
 T CMsgProtoBufHeader::MergeFrom(CMsgProtoBufHeader const&)
 T CMsgProtoBufHeader::New() const
 T CMsgProtoBufHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgProtoBufHeader::SetCachedSize(int) const
 T CMsgProtoBufHeader::SharedDtor()
 T CMsgProtoBufHeader::default_instance()
 T CMsgProtoBufHeader::descriptor()
 T CMsgProtoBufHeader::~CMsgProtoBufHeader()
 T CMsgQAngle::ByteSize() const
 T CMsgQAngle::Clear()
 T CMsgQAngle::GetCachedSize() const
 T CMsgQAngle::GetMetadata() const
 T CMsgQAngle::IsInitialized() const
 T CMsgQAngle::MergeFrom(CMsgQAngle const&)
 T CMsgQAngle::New() const
 T CMsgQAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgQAngle::SetCachedSize(int) const
 T CMsgQAngle::~CMsgQAngle()
 T CMsgRGBA::ByteSize() const
 T CMsgRGBA::CMsgRGBA()
 T CMsgRGBA::Clear()
 T CMsgRGBA::GetCachedSize() const
 T CMsgRGBA::GetMetadata() const
 T CMsgRGBA::IsInitialized() const
 T CMsgRGBA::MergeFrom(CMsgRGBA const&)
 T CMsgRGBA::New() const
 T CMsgRGBA::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgRGBA::SetCachedSize(int) const
 T CMsgRGBA::default_instance()
 T CMsgRGBA::~CMsgRGBA()
 T CMsgReplayUploadedToYouTube::ByteSize() const
 T CMsgReplayUploadedToYouTube::Clear()
 T CMsgReplayUploadedToYouTube::GetCachedSize() const
 T CMsgReplayUploadedToYouTube::GetMetadata() const
 T CMsgReplayUploadedToYouTube::IsInitialized() const
 T CMsgReplayUploadedToYouTube::MergeFrom(CMsgReplayUploadedToYouTube const&)
 T CMsgReplayUploadedToYouTube::New() const
 T CMsgReplayUploadedToYouTube::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgReplayUploadedToYouTube::SetCachedSize(int) const
 T CMsgReplayUploadedToYouTube::SharedDtor()
 T CMsgReplayUploadedToYouTube::~CMsgReplayUploadedToYouTube()
 T CMsgReplicateConVars::ByteSize() const
 T CMsgReplicateConVars::Clear()
 T CMsgReplicateConVars::GetCachedSize() const
 T CMsgReplicateConVars::GetMetadata() const
 T CMsgReplicateConVars::IsInitialized() const
 T CMsgReplicateConVars::MergeFrom(CMsgReplicateConVars const&)
 T CMsgReplicateConVars::New() const
 T CMsgReplicateConVars::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgReplicateConVars::SetCachedSize(int) const
 T CMsgReplicateConVars::~CMsgReplicateConVars()
 T CMsgRequestInventoryRefresh::ByteSize() const
 T CMsgRequestInventoryRefresh::Clear()
 T CMsgRequestInventoryRefresh::GetCachedSize() const
 T CMsgRequestInventoryRefresh::GetMetadata() const
 T CMsgRequestInventoryRefresh::IsInitialized() const
 T CMsgRequestInventoryRefresh::MergeFrom(CMsgRequestInventoryRefresh const&)
 T CMsgRequestInventoryRefresh::New() const
 T CMsgRequestInventoryRefresh::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgRequestInventoryRefresh::SetCachedSize(int) const
 T CMsgRequestInventoryRefresh::~CMsgRequestInventoryRefresh()
 T CMsgSDONoMemcached::ByteSize() const
 T CMsgSDONoMemcached::Clear()
 T CMsgSDONoMemcached::GetCachedSize() const
 T CMsgSDONoMemcached::GetMetadata() const
 T CMsgSDONoMemcached::IsInitialized() const
 T CMsgSDONoMemcached::MergeFrom(CMsgSDONoMemcached const&)
 T CMsgSDONoMemcached::New() const
 T CMsgSDONoMemcached::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSDONoMemcached::SetCachedSize(int) const
 T CMsgSDONoMemcached::~CMsgSDONoMemcached()
 T CMsgSOCacheHaveVersion::ByteSize() const
 T CMsgSOCacheHaveVersion::Clear()
 T CMsgSOCacheHaveVersion::GetCachedSize() const
 T CMsgSOCacheHaveVersion::GetMetadata() const
 T CMsgSOCacheHaveVersion::IsInitialized() const
 T CMsgSOCacheHaveVersion::MergeFrom(CMsgSOCacheHaveVersion const&)
 T CMsgSOCacheHaveVersion::New() const
 T CMsgSOCacheHaveVersion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheHaveVersion::SetCachedSize(int) const
 T CMsgSOCacheHaveVersion::~CMsgSOCacheHaveVersion()
 T CMsgSOCacheSubscribed::ByteSize() const
 T CMsgSOCacheSubscribed::CMsgSOCacheSubscribed()
 T CMsgSOCacheSubscribed::Clear()
 T CMsgSOCacheSubscribed::GetCachedSize() const
 T CMsgSOCacheSubscribed::GetMetadata() const
 T CMsgSOCacheSubscribed::IsInitialized() const
 T CMsgSOCacheSubscribed::MergeFrom(CMsgSOCacheSubscribed const&)
 T CMsgSOCacheSubscribed::New() const
 T CMsgSOCacheSubscribed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscribed::SetCachedSize(int) const
 T CMsgSOCacheSubscribed::default_instance()
 T CMsgSOCacheSubscribed::descriptor()
 T CMsgSOCacheSubscribed::~CMsgSOCacheSubscribed()
 T CMsgSOCacheSubscribed_SubscribedType::ByteSize() const
 T CMsgSOCacheSubscribed_SubscribedType::Clear()
 T CMsgSOCacheSubscribed_SubscribedType::GetCachedSize() const
 T CMsgSOCacheSubscribed_SubscribedType::GetMetadata() const
 T CMsgSOCacheSubscribed_SubscribedType::IsInitialized() const
 T CMsgSOCacheSubscribed_SubscribedType::MergeFrom(CMsgSOCacheSubscribed_SubscribedType const&)
 T CMsgSOCacheSubscribed_SubscribedType::New() const
 T CMsgSOCacheSubscribed_SubscribedType::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscribed_SubscribedType::SetCachedSize(int) const
 T CMsgSOCacheSubscribed_SubscribedType::~CMsgSOCacheSubscribed_SubscribedType()
 T CMsgSOCacheSubscriptionCheck::ByteSize() const
 T CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck()
 T CMsgSOCacheSubscriptionCheck::Clear()
 T CMsgSOCacheSubscriptionCheck::GetCachedSize() const
 T CMsgSOCacheSubscriptionCheck::GetMetadata() const
 T CMsgSOCacheSubscriptionCheck::IsInitialized() const
 T CMsgSOCacheSubscriptionCheck::MergeFrom(CMsgSOCacheSubscriptionCheck const&)
 T CMsgSOCacheSubscriptionCheck::New() const
 T CMsgSOCacheSubscriptionCheck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscriptionCheck::SetCachedSize(int) const
 T CMsgSOCacheSubscriptionCheck::default_instance()
 T CMsgSOCacheSubscriptionCheck::descriptor()
 T CMsgSOCacheSubscriptionCheck::~CMsgSOCacheSubscriptionCheck()
 T CMsgSOCacheSubscriptionRefresh::ByteSize() const
 T CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh()
 T CMsgSOCacheSubscriptionRefresh::Clear()
 T CMsgSOCacheSubscriptionRefresh::GetCachedSize() const
 T CMsgSOCacheSubscriptionRefresh::GetMetadata() const
 T CMsgSOCacheSubscriptionRefresh::IsInitialized() const
 T CMsgSOCacheSubscriptionRefresh::MergeFrom(CMsgSOCacheSubscriptionRefresh const&)
 T CMsgSOCacheSubscriptionRefresh::New() const
 T CMsgSOCacheSubscriptionRefresh::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscriptionRefresh::SetCachedSize(int) const
 T CMsgSOCacheSubscriptionRefresh::default_instance()
 T CMsgSOCacheSubscriptionRefresh::descriptor()
 T CMsgSOCacheSubscriptionRefresh::~CMsgSOCacheSubscriptionRefresh()
 T CMsgSOCacheUnsubscribed::ByteSize() const
 T CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed()
 T CMsgSOCacheUnsubscribed::Clear()
 T CMsgSOCacheUnsubscribed::GetCachedSize() const
 T CMsgSOCacheUnsubscribed::GetMetadata() const
 T CMsgSOCacheUnsubscribed::IsInitialized() const
 T CMsgSOCacheUnsubscribed::MergeFrom(CMsgSOCacheUnsubscribed const&)
 T CMsgSOCacheUnsubscribed::New() const
 T CMsgSOCacheUnsubscribed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheUnsubscribed::SetCachedSize(int) const
 T CMsgSOCacheUnsubscribed::default_instance()
 T CMsgSOCacheUnsubscribed::descriptor()
 T CMsgSOCacheUnsubscribed::~CMsgSOCacheUnsubscribed()
 T CMsgSOCacheVersion::ByteSize() const
 T CMsgSOCacheVersion::Clear()
 T CMsgSOCacheVersion::GetCachedSize() const
 T CMsgSOCacheVersion::GetMetadata() const
 T CMsgSOCacheVersion::IsInitialized() const
 T CMsgSOCacheVersion::MergeFrom(CMsgSOCacheVersion const&)
 T CMsgSOCacheVersion::New() const
 T CMsgSOCacheVersion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheVersion::SetCachedSize(int) const
 T CMsgSOCacheVersion::~CMsgSOCacheVersion()
 T CMsgSOIDOwner::ByteSize() const
 T CMsgSOIDOwner::CMsgSOIDOwner()
 T CMsgSOIDOwner::Clear()
 T CMsgSOIDOwner::GetCachedSize() const
 T CMsgSOIDOwner::GetMetadata() const
 T CMsgSOIDOwner::IsInitialized() const
 T CMsgSOIDOwner::MergeFrom(CMsgSOIDOwner const&)
 T CMsgSOIDOwner::New() const
 T CMsgSOIDOwner::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOIDOwner::SetCachedSize(int) const
 T CMsgSOIDOwner::~CMsgSOIDOwner()
 T CMsgSOMultipleObjects::ByteSize() const
 T CMsgSOMultipleObjects::CMsgSOMultipleObjects()
 T CMsgSOMultipleObjects::Clear()
 T CMsgSOMultipleObjects::GetCachedSize() const
 T CMsgSOMultipleObjects::GetMetadata() const
 T CMsgSOMultipleObjects::IsInitialized() const
 T CMsgSOMultipleObjects::MergeFrom(CMsgSOMultipleObjects const&)
 T CMsgSOMultipleObjects::New() const
 T CMsgSOMultipleObjects::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOMultipleObjects::SetCachedSize(int) const
 T CMsgSOMultipleObjects::default_instance()
 T CMsgSOMultipleObjects::descriptor()
 T CMsgSOMultipleObjects::~CMsgSOMultipleObjects()
 T CMsgSOMultipleObjects_SingleObject::ByteSize() const
 T CMsgSOMultipleObjects_SingleObject::Clear()
 T CMsgSOMultipleObjects_SingleObject::GetCachedSize() const
 T CMsgSOMultipleObjects_SingleObject::GetMetadata() const
 T CMsgSOMultipleObjects_SingleObject::IsInitialized() const
 T CMsgSOMultipleObjects_SingleObject::MergeFrom(CMsgSOMultipleObjects_SingleObject const&)
 T CMsgSOMultipleObjects_SingleObject::New() const
 T CMsgSOMultipleObjects_SingleObject::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOMultipleObjects_SingleObject::SetCachedSize(int) const
 T CMsgSOMultipleObjects_SingleObject::~CMsgSOMultipleObjects_SingleObject()
 T CMsgSOSingleObject::ByteSize() const
 T CMsgSOSingleObject::CMsgSOSingleObject()
 T CMsgSOSingleObject::Clear()
 T CMsgSOSingleObject::GetCachedSize() const
 T CMsgSOSingleObject::GetMetadata() const
 T CMsgSOSingleObject::IsInitialized() const
 T CMsgSOSingleObject::MergeFrom(CMsgSOSingleObject const&)
 T CMsgSOSingleObject::New() const
 T CMsgSOSingleObject::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOSingleObject::SetCachedSize(int) const
 T CMsgSOSingleObject::default_instance()
 T CMsgSOSingleObject::descriptor()
 T CMsgSOSingleObject::~CMsgSOSingleObject()
 T CMsgSelectItemPresetForClass::ByteSize() const
 T CMsgSelectItemPresetForClass::Clear()
 T CMsgSelectItemPresetForClass::GetCachedSize() const
 T CMsgSelectItemPresetForClass::GetMetadata() const
 T CMsgSelectItemPresetForClass::IsInitialized() const
 T CMsgSelectItemPresetForClass::MergeFrom(CMsgSelectItemPresetForClass const&)
 T CMsgSelectItemPresetForClass::New() const
 T CMsgSelectItemPresetForClass::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSelectItemPresetForClass::SetCachedSize(int) const
 T CMsgSelectItemPresetForClass::~CMsgSelectItemPresetForClass()
 T CMsgSelectItemPresetForClassReply::ByteSize() const
 T CMsgSelectItemPresetForClassReply::Clear()
 T CMsgSelectItemPresetForClassReply::GetCachedSize() const
 T CMsgSelectItemPresetForClassReply::GetMetadata() const
 T CMsgSelectItemPresetForClassReply::IsInitialized() const
 T CMsgSelectItemPresetForClassReply::MergeFrom(CMsgSelectItemPresetForClassReply const&)
 T CMsgSelectItemPresetForClassReply::New() const
 T CMsgSelectItemPresetForClassReply::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSelectItemPresetForClassReply::SetCachedSize(int) const
 T CMsgSelectItemPresetForClassReply::~CMsgSelectItemPresetForClassReply()
 T CMsgServerAvailable::ByteSize() const
 T CMsgServerAvailable::Clear()
 T CMsgServerAvailable::GetCachedSize() const
 T CMsgServerAvailable::GetMetadata() const
 T CMsgServerAvailable::IsInitialized() const
 T CMsgServerAvailable::MergeFrom(CMsgServerAvailable const&)
 T CMsgServerAvailable::New() const
 T CMsgServerAvailable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgServerAvailable::SetCachedSize(int) const
 T CMsgServerAvailable::~CMsgServerAvailable()
 T CMsgSetItemPositions::ByteSize() const
 T CMsgSetItemPositions::Clear()
 T CMsgSetItemPositions::GetCachedSize() const
 T CMsgSetItemPositions::GetMetadata() const
 T CMsgSetItemPositions::IsInitialized() const
 T CMsgSetItemPositions::MergeFrom(CMsgSetItemPositions const&)
 T CMsgSetItemPositions::New() const
 T CMsgSetItemPositions::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSetItemPositions::SetCachedSize(int) const
 T CMsgSetItemPositions::~CMsgSetItemPositions()
 T CMsgSetItemPositions_ItemPosition::ByteSize() const
 T CMsgSetItemPositions_ItemPosition::Clear()
 T CMsgSetItemPositions_ItemPosition::GetCachedSize() const
 T CMsgSetItemPositions_ItemPosition::GetMetadata() const
 T CMsgSetItemPositions_ItemPosition::IsInitialized() const
 T CMsgSetItemPositions_ItemPosition::MergeFrom(CMsgSetItemPositions_ItemPosition const&)
 T CMsgSetItemPositions_ItemPosition::New() const
 T CMsgSetItemPositions_ItemPosition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSetItemPositions_ItemPosition::SetCachedSize(int) const
 T CMsgSetItemPositions_ItemPosition::~CMsgSetItemPositions_ItemPosition()
 T CMsgSetPresetItemPosition::ByteSize() const
 T CMsgSetPresetItemPosition::Clear()
 T CMsgSetPresetItemPosition::GetCachedSize() const
 T CMsgSetPresetItemPosition::GetMetadata() const
 T CMsgSetPresetItemPosition::IsInitialized() const
 T CMsgSetPresetItemPosition::MergeFrom(CMsgSetPresetItemPosition const&)
 T CMsgSetPresetItemPosition::New() const
 T CMsgSetPresetItemPosition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSetPresetItemPosition::SetCachedSize(int) const
 T CMsgSetPresetItemPosition::~CMsgSetPresetItemPosition()
 T CMsgSortItems::ByteSize() const
 T CMsgSortItems::Clear()
 T CMsgSortItems::GetCachedSize() const
 T CMsgSortItems::GetMetadata() const
 T CMsgSortItems::IsInitialized() const
 T CMsgSortItems::MergeFrom(CMsgSortItems const&)
 T CMsgSortItems::New() const
 T CMsgSortItems::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSortItems::SetCachedSize(int) const
 T CMsgSortItems::~CMsgSortItems()
 T CMsgStoreGetUserData::ByteSize() const
 T CMsgStoreGetUserData::Clear()
 T CMsgStoreGetUserData::GetCachedSize() const
 T CMsgStoreGetUserData::GetMetadata() const
 T CMsgStoreGetUserData::IsInitialized() const
 T CMsgStoreGetUserData::MergeFrom(CMsgStoreGetUserData const&)
 T CMsgStoreGetUserData::New() const
 T CMsgStoreGetUserData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgStoreGetUserData::SetCachedSize(int) const
 T CMsgStoreGetUserData::~CMsgStoreGetUserData()
 T CMsgStoreGetUserDataResponse::ByteSize() const
 T CMsgStoreGetUserDataResponse::Clear()
 T CMsgStoreGetUserDataResponse::GetCachedSize() const
 T CMsgStoreGetUserDataResponse::GetMetadata() const
 T CMsgStoreGetUserDataResponse::IsInitialized() const
 T CMsgStoreGetUserDataResponse::MergeFrom(CMsgStoreGetUserDataResponse const&)
 T CMsgStoreGetUserDataResponse::New() const
 T CMsgStoreGetUserDataResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgStoreGetUserDataResponse::SetCachedSize(int) const
 T CMsgStoreGetUserDataResponse::SharedDtor()
 T CMsgStoreGetUserDataResponse::~CMsgStoreGetUserDataResponse()
 T CMsgSystemBroadcast::ByteSize() const
 T CMsgSystemBroadcast::Clear()
 T CMsgSystemBroadcast::GetCachedSize() const
 T CMsgSystemBroadcast::GetMetadata() const
 T CMsgSystemBroadcast::IsInitialized() const
 T CMsgSystemBroadcast::MergeFrom(CMsgSystemBroadcast const&)
 T CMsgSystemBroadcast::New() const
 T CMsgSystemBroadcast::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSystemBroadcast::SetCachedSize(int) const
 T CMsgSystemBroadcast::~CMsgSystemBroadcast()
 T CMsgUpdateItemSchema::ByteSize() const
 T CMsgUpdateItemSchema::Clear()
 T CMsgUpdateItemSchema::GetCachedSize() const
 T CMsgUpdateItemSchema::GetMetadata() const
 T CMsgUpdateItemSchema::IsInitialized() const
 T CMsgUpdateItemSchema::MergeFrom(CMsgUpdateItemSchema const&)
 T CMsgUpdateItemSchema::New() const
 T CMsgUpdateItemSchema::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgUpdateItemSchema::SetCachedSize(int) const
 T CMsgUpdateItemSchema::SharedDtor()
 T CMsgUpdateItemSchema::~CMsgUpdateItemSchema()
 T CMsgUseItem::ByteSize() const
 T CMsgUseItem::Clear()
 T CMsgUseItem::GetCachedSize() const
 T CMsgUseItem::GetMetadata() const
 T CMsgUseItem::IsInitialized() const
 T CMsgUseItem::MergeFrom(CMsgUseItem const&)
 T CMsgUseItem::New() const
 T CMsgUseItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgUseItem::SetCachedSize(int) const
 T CMsgUseItem::~CMsgUseItem()
 T CMsgVector2D::ByteSize() const
 T CMsgVector2D::CMsgVector2D()
 T CMsgVector2D::Clear()
 T CMsgVector2D::GetCachedSize() const
 T CMsgVector2D::GetMetadata() const
 T CMsgVector2D::IsInitialized() const
 T CMsgVector2D::MergeFrom(CMsgVector2D const&)
 T CMsgVector2D::New() const
 T CMsgVector2D::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgVector2D::SetCachedSize(int) const
 T CMsgVector2D::default_instance()
 T CMsgVector2D::~CMsgVector2D()
 T CMsgVector::ByteSize() const
 T CMsgVector::CMsgVector()
 T CMsgVector::Clear()
 T CMsgVector::GetCachedSize() const
 T CMsgVector::GetMetadata() const
 T CMsgVector::IsInitialized() const
 T CMsgVector::MergeFrom(CMsgVector const&)
 T CMsgVector::New() const
 T CMsgVector::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgVector::SetCachedSize(int) const
 T CMsgVector::default_instance()
 T CMsgVector::~CMsgVector()
 T CMsgWebAPIKey::ByteSize() const
 T CMsgWebAPIKey::Clear()
 T CMsgWebAPIKey::GetCachedSize() const
 T CMsgWebAPIKey::GetMetadata() const
 T CMsgWebAPIKey::IsInitialized() const
 T CMsgWebAPIKey::MergeFrom(CMsgWebAPIKey const&)
 T CMsgWebAPIKey::New() const
 T CMsgWebAPIKey::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgWebAPIKey::SetCachedSize(int) const
 T CMsgWebAPIKey::~CMsgWebAPIKey()
 T CMsgWebAPIRequest::ByteSize() const
 T CMsgWebAPIRequest::Clear()
 T CMsgWebAPIRequest::GetCachedSize() const
 T CMsgWebAPIRequest::GetMetadata() const
 T CMsgWebAPIRequest::IsInitialized() const
 T CMsgWebAPIRequest::MergeFrom(CMsgWebAPIRequest const&)
 T CMsgWebAPIRequest::New() const
 T CMsgWebAPIRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgWebAPIRequest::SetCachedSize(int) const
 T CMsgWebAPIRequest::SharedDtor()
 T CMsgWebAPIRequest::~CMsgWebAPIRequest()
 T CMsg_CVars::ByteSize() const
 T CMsg_CVars::Clear()
 T CMsg_CVars::GetCachedSize() const
 T CMsg_CVars::GetMetadata() const
 T CMsg_CVars::IsInitialized() const
 T CMsg_CVars::MergeFrom(CMsg_CVars const&)
 T CMsg_CVars::New() const
 T CMsg_CVars::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsg_CVars::SetCachedSize(int) const
 T CMsg_CVars::~CMsg_CVars()
 T CMsg_CVars_CVar::ByteSize() const
 T CMsg_CVars_CVar::Clear()
 T CMsg_CVars_CVar::GetCachedSize() const
 T CMsg_CVars_CVar::GetMetadata() const
 T CMsg_CVars_CVar::IsInitialized() const
 T CMsg_CVars_CVar::MergeFrom(CMsg_CVars_CVar const&)
 T CMsg_CVars_CVar::New() const
 T CMsg_CVars_CVar::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsg_CVars_CVar::SetCachedSize(int) const
 T CMsg_CVars_CVar::SharedDtor()
 T CMsg_CVars_CVar::~CMsg_CVars_CVar()
 T CMultiInputVar::AddValue(variant_t, int)
 T CMultiInputVar::~CMultiInputVar()
 T CMultiSource::GetDataDescMap()
 T CMultiSource::IsTriggered(CBaseEntity*)
 T CMultiSource::KeyValue(char const*, char const*)
 T CMultiSource::ObjectCaps()
 T CMultiSource::Register()
 T CMultiSource::Spawn()
 T CMultiSource::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMultiSource::~CMultiSource()
 T CMultiplayRules::AllowAutoTargetCrosshair()
 T CMultiplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
 T CMultiplayRules::CMultiplayRules()
 T CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)
 T CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
 T CMultiplayRules::ChangeLevel()
 T CMultiplayRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CMultiplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
 T CMultiplayRules::ClientDisconnected(edict_t*)
 T CMultiplayRules::Damage_GetNoPhysicsForce()
 T CMultiplayRules::Damage_GetShouldGibCorpse()
 T CMultiplayRules::Damage_GetShouldNotBleed()
 T CMultiplayRules::Damage_GetShowOnHud()
 T CMultiplayRules::Damage_GetTimeBased()
 T CMultiplayRules::Damage_IsTimeBased(int)
 T CMultiplayRules::Damage_NoPhysicsForce(int)
 T CMultiplayRules::Damage_ShouldGibCorpse(int)
 T CMultiplayRules::Damage_ShouldNotBleed(int)
 T CMultiplayRules::Damage_ShowOnHUD(int)
 T CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)
 T CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)
 T CMultiplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CMultiplayRules::EndMultiplayerGame()
 T CMultiplayRules::FAllowFlashlight()
 T CMultiplayRules::FAllowNPCs()
 T CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)
 T CMultiplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
 T CMultiplayRules::FlHEVChargerRechargeTime()
 T CMultiplayRules::FlHealthChargerRechargeTime()
 T CMultiplayRules::FlItemRespawnTime(CItem*)
 T CMultiplayRules::FlPlayerFallDamage(CBasePlayer*)
 T CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)
 T CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
 T CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
 T CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::GetIntermissionDuration() const
 T CMultiplayRules::GetIntermissionStartTime() const
 T CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CMultiplayRules::GetNextLevelName(char*, int, bool)
 T CMultiplayRules::GetPlayerSpawnSpot(CBasePlayer*)
 T CMultiplayRules::GetTaggedConVarList(KeyValues*)
 T CMultiplayRules::GoToIntermission()
 T CMultiplayRules::HandleTimeLimitChange()
 T CMultiplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CMultiplayRules::InitHUD(CBasePlayer*)
 T CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)
 T CMultiplayRules::IsCoOp()
 T CMultiplayRules::IsDeathmatch()
 T CMultiplayRules::IsMultiplayer()
 T CMultiplayRules::ItemShouldRespawn(CItem*)
 T CMultiplayRules::LoadVoiceCommandScript()
 T CMultiplayRules::PlayFootstepSounds(CBasePlayer*)
 T CMultiplayRules::PlayTextureSounds()
 T CMultiplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*, bool)
 T CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
 T CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)
 T CMultiplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CMultiplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::PlayerSpawn(CBasePlayer*)
 T CMultiplayRules::PlayerThink(CBasePlayer*)
 T CMultiplayRules::RefreshSkillData(bool)
 T CMultiplayRules::ResetMapCycleTimeStamp()
 T CMultiplayRules::SkipNextMapInCycle()
 T CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CMultiplayRules::Think()
 T CMultiplayRules::UseSuicidePenalty()
 T CMultiplayRules::VecItemRespawnAngles(CItem*)
 T CMultiplayRules::VecItemRespawnSpot(CItem*)
 T CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
 T CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)
 T CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
 T CMultiplayRules::~CMultiplayRules()
 T CMultiplayer_Expresser::AllowMultipleScenes()
 T CMultiplayer_Expresser::CMultiplayer_Expresser(CBaseFlex*)
 T CMultiplayer_Expresser::DisallowMultipleScenes()
 T CMultiplayer_Expresser::IsSpeaking()
 T CNETMsg_Disconnect::ByteSize() const
 T CNETMsg_Disconnect::Clear()
 T CNETMsg_Disconnect::GetCachedSize() const
 T CNETMsg_Disconnect::GetMetadata() const
 T CNETMsg_Disconnect::IsInitialized() const
 T CNETMsg_Disconnect::MergeFrom(CNETMsg_Disconnect const&)
 T CNETMsg_Disconnect::New() const
 T CNETMsg_Disconnect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_Disconnect::SetCachedSize(int) const
 T CNETMsg_Disconnect::~CNETMsg_Disconnect()
 T CNETMsg_File::ByteSize() const
 T CNETMsg_File::Clear()
 T CNETMsg_File::GetCachedSize() const
 T CNETMsg_File::GetMetadata() const
 T CNETMsg_File::IsInitialized() const
 T CNETMsg_File::MergeFrom(CNETMsg_File const&)
 T CNETMsg_File::New() const
 T CNETMsg_File::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_File::SetCachedSize(int) const
 T CNETMsg_File::~CNETMsg_File()
 T CNETMsg_NOP::ByteSize() const
 T CNETMsg_NOP::Clear()
 T CNETMsg_NOP::GetCachedSize() const
 T CNETMsg_NOP::GetMetadata() const
 T CNETMsg_NOP::IsInitialized() const
 T CNETMsg_NOP::MergeFrom(CNETMsg_NOP const&)
 T CNETMsg_NOP::New() const
 T CNETMsg_NOP::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_NOP::SetCachedSize(int) const
 T CNETMsg_NOP::~CNETMsg_NOP()
 T CNETMsg_PlayerAvatarData::ByteSize() const
 T CNETMsg_PlayerAvatarData::Clear()
 T CNETMsg_PlayerAvatarData::GetCachedSize() const
 T CNETMsg_PlayerAvatarData::GetMetadata() const
 T CNETMsg_PlayerAvatarData::IsInitialized() const
 T CNETMsg_PlayerAvatarData::MergeFrom(CNETMsg_PlayerAvatarData const&)
 T CNETMsg_PlayerAvatarData::New() const
 T CNETMsg_PlayerAvatarData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_PlayerAvatarData::SetCachedSize(int) const
 T CNETMsg_PlayerAvatarData::~CNETMsg_PlayerAvatarData()
 T CNETMsg_SetConVar::ByteSize() const
 T CNETMsg_SetConVar::Clear()
 T CNETMsg_SetConVar::GetCachedSize() const
 T CNETMsg_SetConVar::GetMetadata() const
 T CNETMsg_SetConVar::IsInitialized() const
 T CNETMsg_SetConVar::MergeFrom(CNETMsg_SetConVar const&)
 T CNETMsg_SetConVar::New() const
 T CNETMsg_SetConVar::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SetConVar::SetCachedSize(int) const
 T CNETMsg_SetConVar::~CNETMsg_SetConVar()
 T CNETMsg_SignonState::ByteSize() const
 T CNETMsg_SignonState::Clear()
 T CNETMsg_SignonState::GetCachedSize() const
 T CNETMsg_SignonState::GetMetadata() const
 T CNETMsg_SignonState::IsInitialized() const
 T CNETMsg_SignonState::MergeFrom(CNETMsg_SignonState const&)
 T CNETMsg_SignonState::New() const
 T CNETMsg_SignonState::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SignonState::SetCachedSize(int) const
 T CNETMsg_SignonState::~CNETMsg_SignonState()
 T CNETMsg_SplitScreenUser::ByteSize() const
 T CNETMsg_SplitScreenUser::Clear()
 T CNETMsg_SplitScreenUser::GetCachedSize() const
 T CNETMsg_SplitScreenUser::GetMetadata() const
 T CNETMsg_SplitScreenUser::IsInitialized() const
 T CNETMsg_SplitScreenUser::MergeFrom(CNETMsg_SplitScreenUser const&)
 T CNETMsg_SplitScreenUser::New() const
 T CNETMsg_SplitScreenUser::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SplitScreenUser::SetCachedSize(int) const
 T CNETMsg_SplitScreenUser::~CNETMsg_SplitScreenUser()
 T CNETMsg_StringCmd::ByteSize() const
 T CNETMsg_StringCmd::Clear()
 T CNETMsg_StringCmd::GetCachedSize() const
 T CNETMsg_StringCmd::GetMetadata() const
 T CNETMsg_StringCmd::IsInitialized() const
 T CNETMsg_StringCmd::MergeFrom(CNETMsg_StringCmd const&)
 T CNETMsg_StringCmd::New() const
 T CNETMsg_StringCmd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_StringCmd::SetCachedSize(int) const
 T CNETMsg_StringCmd::~CNETMsg_StringCmd()
 T CNETMsg_Tick::ByteSize() const
 T CNETMsg_Tick::Clear()
 T CNETMsg_Tick::GetCachedSize() const
 T CNETMsg_Tick::GetMetadata() const
 T CNETMsg_Tick::IsInitialized() const
 T CNETMsg_Tick::MergeFrom(CNETMsg_Tick const&)
 T CNETMsg_Tick::New() const
 T CNETMsg_Tick::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_Tick::SetCachedSize(int) const
 T CNETMsg_Tick::~CNETMsg_Tick()
 T CNPC_Furniture::Classify()
 T CNPC_Furniture::CreateVPhysics()
 T CNPC_Furniture::DrawDebugGeometryOverlays()
 T CNPC_Furniture::GetDataDescMap()
 T CNPC_Furniture::GetSoundInterests()
 T CNPC_Furniture::InputDisablePlayerCollision(inputdata_t&)
 T CNPC_Furniture::InputEnablePlayerCollision(inputdata_t&)
 T CNPC_Furniture::MaxYawSpeed()
 T CNPC_Furniture::NPCThink()
 T CNPC_Furniture::ObjectCaps()
 T CNPC_Furniture::OnRestore()
 T CNPC_Furniture::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_Furniture::Precache()
 T CNPC_Furniture::SelectSchedule()
 T CNPC_Furniture::SetPlayerAvoidState()
 T CNPC_Furniture::Spawn()
 T CNPC_Furniture::UpdateBoneFollowerState()
 T CNPC_Furniture::UpdateEfficiency(bool)
 T CNPC_Furniture::UpdateOnRemove()
 T CNPC_Furniture::~CNPC_Furniture()
 T CNPC_HearDanger* _CreateEntityTemplate<CNPC_HearDanger>(CNPC_HearDanger*, char const*)
 T CNPC_HearDanger::Classify()
 T CNPC_HearDanger::CreateVPhysics()
 T CNPC_HearDanger::GetDataDescMap()
 T CNPC_HearDanger::GetSoundInterests()
 T CNPC_HearDanger::MaxYawSpeed()
 T CNPC_HearDanger::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_HearDanger::Precache()
 T CNPC_HearDanger::SetPlayerAvoidState()
 T CNPC_HearDanger::Spawn()
 T CNPC_HearDanger::UpdateEfficiency(bool)
 T CNPC_HearDanger::~CNPC_HearDanger()
 T CNPC_VehicleDriver::Activate()
 T CNPC_VehicleDriver::BloodColor()
 T CNPC_VehicleDriver::CheckForTeleport()
 T CNPC_VehicleDriver::Classify()
 T CNPC_VehicleDriver::DriveVehicle()
 T CNPC_VehicleDriver::GatherEnemyConditions(CBaseEntity*)
 T CNPC_VehicleDriver::GetClassScheduleIdSpace()
 T CNPC_VehicleDriver::GetDataDescMap()
 T CNPC_VehicleDriver::GetDefaultNavGoalTolerance()
 T CNPC_VehicleDriver::GetSchedulingErrorName()
 T CNPC_VehicleDriver::IRelationType(CBaseEntity*)
 T CNPC_VehicleDriver::InitCustomSchedules()
 T CNPC_VehicleDriver::InputGotoPathCorner(inputdata_t&)
 T CNPC_VehicleDriver::InputSetDriversMaxSpeed(inputdata_t&)
 T CNPC_VehicleDriver::InputSetDriversMinSpeed(inputdata_t&)
 T CNPC_VehicleDriver::InputStartFiring(inputdata_t&)
 T CNPC_VehicleDriver::InputStartForward(inputdata_t&)
 T CNPC_VehicleDriver::InputStop(inputdata_t&)
 T CNPC_VehicleDriver::InputStopFiring(inputdata_t&)
 T CNPC_VehicleDriver::LoadedSchedules()
 T CNPC_VehicleDriver::OnRestore()
 T CNPC_VehicleDriver::OverrideMove(float)
 T CNPC_VehicleDriver::OverridePathMove(float)
 T CNPC_VehicleDriver::Precache()
 T CNPC_VehicleDriver::PrescheduleThink()
 T CNPC_VehicleDriver::RangeAttack1Conditions(float, float)
 T CNPC_VehicleDriver::RangeAttack2Conditions(float, float)
 T CNPC_VehicleDriver::RunTask(Task_t const*)
 T CNPC_VehicleDriver::SelectSchedule()
 T CNPC_VehicleDriver::Spawn()
 T CNPC_VehicleDriver::SquadSlotName(int)
 T CNPC_VehicleDriver::StartTask(Task_t const*)
 T CNPC_VehicleDriver::TranslateSchedule(int)
 T CNPC_VehicleDriver::UpdateEfficiency(bool)
 T CNPC_VehicleDriver::UpdateOnRemove()
 T CNPC_VehicleDriver::WaypointReached()
 T CNPC_VehicleDriver::~CNPC_VehicleDriver()
 T CNavArea* FindMinimumCostArea<FarAwayFromPositionFunctor>(CNavArea*, FarAwayFromPositionFunctor&)
 T CNavArea::AddIncomingConnection(CNavArea*, NavDirType)
 T CNavArea::AddLadderDown(CNavLadder*)
 T CNavArea::AddLadderUp(CNavLadder*)
 T CNavArea::AddSpotEncounters(CNavArea const*, NavDirType, CNavArea const*, NavDirType)
 T CNavArea::AddToOpenList()
 T CNavArea::AssignNodes(CNavArea*)
 T CNavArea::Build(CNavNode*, CNavNode*, CNavNode*, CNavNode*)
 T CNavArea::Build(Vector const&, Vector const&)
 T CNavArea::Build(Vector const&, Vector const&, Vector const&, Vector const&)
 T CNavArea::CNavArea()
 T CNavArea::CheckFloor(CBaseEntity*)
 T CNavArea::CheckWaterLevel()
 T CNavArea::ClearSearchLists()
 T CNavArea::CompressIDs()
 T CNavArea::ComputeClosestPointInPortal(CNavArea const*, NavDirType, Vector const&, Vector*) const
 T CNavArea::ComputeEarliestOccupyTimes()
 T CNavArea::ComputeGroundHeightChange(CNavArea const*)
 T CNavArea::ComputeHidingSpots()
 T CNavArea::ComputeLargestPortal(CNavArea const*, Vector*, float*) const
 T CNavArea::ComputeLighting()
 T CNavArea::ComputeNormal(Vector*, bool) const
 T CNavArea::ComputePortal(CNavArea const*, NavDirType, Vector*, float*) const
 T CNavArea::ComputeSniperSpots()
 T CNavArea::ComputeSpotEncounters()
 T CNavArea::ComputeVisToArea(CNavArea*&)
 T CNavArea::ComputeVisibility(CNavArea const*, bool, bool, bool*) const
 T CNavArea::ComputeVisibilityDelta(CNavArea const*) const
 T CNavArea::ComputeVisibilityToMesh()
 T CNavArea::ConnectTo(CNavArea*, NavDirType)
 T CNavArea::ConnectTo(CNavLadder*)
 T CNavArea::Contains(CNavArea const*) const
 T CNavArea::Contains(Vector const&) const
 T CNavArea::CustomAnalysis(bool)
 T CNavArea::Disconnect(CNavArea*)
 T CNavArea::Disconnect(CNavLadder*)
 T CNavArea::Draw() const
 T CNavArea::DrawConnectedAreas() const
 T CNavArea::DrawDragSelectionSet(Color&) const
 T CNavArea::DrawFilled(int, int, int, int, float, bool, float) const
 T CNavArea::DrawHidingSpots() const
 T CNavArea::DrawSelectedSet(Vector const&) const
 T CNavArea::FindClosestNode(Vector const&, NavDirType) const
 T CNavArea::FinishMerge(CNavArea*)
 T CNavArea::FinishSplitEdit(CNavArea*, NavDirType)
 T CNavArea::GetClosestPointOnArea(Vector const*, Vector*) const
 T CNavArea::GetCornerHotspot(NavCornerType, Vector*) const
 T CNavArea::GetDanger(int)
 T CNavArea::GetDangerDecayRate() const
 T CNavArea::GetDistanceSquaredToPoint(Vector const&) const
 T CNavArea::GetExtent(Extent*) const
 T CNavArea::GetNodes(NavDirType, CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >*) const
 T CNavArea::GetSpotEncounter(CNavArea const*, CNavArea const*)
 T CNavArea::GetZ(float, float) const
 T CNavArea::HasNodes() const
 T CNavArea::IncreaseDanger(int, float)
 T CNavArea::InheritAttributes(CNavArea*, CNavArea*)
 T CNavArea::IsAbleToMergeWith(CNavArea*) const
 T CNavArea::IsBlocked(int, bool) const
 T CNavArea::IsCompletelyVisible(CNavArea const*) const
 T CNavArea::IsCompletelyVisibleToTeam(int) const
 T CNavArea::IsConnected(CNavArea const*, NavDirType) const
 T CNavArea::IsConnected(CNavLadder const*, CNavLadder::LadderDirectionType) const
 T CNavArea::IsContiguous(CNavArea const*) const
 T CNavArea::IsCoplanar(CNavArea const*) const
 T CNavArea::IsEntirelyVisible(Vector const&, CBaseEntity*) const
 T CNavArea::IsFlat() const
 T CNavArea::IsOverlapping(CNavArea const*) const
 T CNavArea::IsOverlapping(Extent const&) const
 T CNavArea::IsOverlapping(Vector const&, float) const
 T CNavArea::IsPartiallyVisible(Vector const&, CBaseEntity*) const
 T CNavArea::IsPotentiallyVisible(CNavArea const*) const
 T CNavArea::IsPotentiallyVisibleToTeam(int) const
 T CNavArea::IsRoughlySquare() const
 T CNavArea::IsVisible(Vector const&, Vector*) const
 T CNavArea::Load(CUtlBuffer&, unsigned int, unsigned int)
 T CNavArea::MarkAsBlocked(int, CBaseEntity*, bool)
 T CNavArea::MarkObstacleToAvoid(float)
 T CNavArea::MergeAdjacentConnections(CNavArea*)
 T CNavArea::MergeEdit(CNavArea*)
 T CNavArea::OnDestroyNotify(CNavArea*)
 T CNavArea::OnDestroyNotify(CNavLadder*)
 T CNavArea::OnEditCreateNotify(CNavArea*)
 T CNavArea::OnEditDestroyNotify(CNavArea*)
 T CNavArea::OnEditDestroyNotify(CNavLadder*)
 T CNavArea::OnEnter(CBaseCombatCharacter*, CNavArea*)
 T CNavArea::OnExit(CBaseCombatCharacter*, CNavArea*)
 T CNavArea::OnRoundRestart()
 T CNavArea::OnRoundRestartPreEntity()
 T CNavArea::OnServerActivate()
 T CNavArea::PlaceOnGround(NavCornerType, float)
 T CNavArea::PostLoad()
 T CNavArea::RaiseCorner(NavCornerType, int, bool)
 T CNavArea::RemoveFromOpenList()
 T CNavArea::RemoveOrthogonalConnections(NavDirType)
 T CNavArea::ResetNodes()
 T CNavArea::ResetPotentiallyVisibleAreas()
 T CNavArea::RestoreFromSelectedSet(KeyValues*)
 T CNavArea::Save(CUtlBuffer&, unsigned int) const
 T CNavArea::SaveToSelectedSet(KeyValues*) const
 T CNavArea::SetupPVS() const
 T CNavArea::Shift(Vector const&)
 T CNavArea::SpliceEdit(CNavArea*)
 T CNavArea::SplitEdit(bool, float, CNavArea**, CNavArea**)
 T CNavArea::Strip()
 T CNavArea::TestStairs()
 T CNavArea::UpdateAvoidanceObstacles()
 T CNavArea::UpdateBlocked(bool, int)
 T CNavArea::UpdateBlockedFromNavBlockers()
 T CNavArea::UpdateOnOpenList()
 T CNavArea::~CNavArea()
 T CNavLadder::CompressIDs()
 T CNavLadder::ConnectGeneratedLadder(float)
 T CNavLadder::ConnectTo(CNavArea*)
 T CNavLadder::Disconnect(CNavArea*)
 T CNavLadder::DrawConnectedAreas()
 T CNavLadder::DrawLadder() const
 T CNavLadder::GetPosAtHeight(float) const
 T CNavLadder::IsConnected(CNavArea const*, CNavLadder::LadderDirectionType) const
 T CNavLadder::IsInUse(CBasePlayer const*) const
 T CNavLadder::Load(CUtlBuffer&, unsigned int)
 T CNavLadder::OnDestroyNotify(CNavArea*)
 T CNavLadder::OnRoundRestart()
 T CNavLadder::OnSplit(CNavArea*, CNavArea*, CNavArea*)
 T CNavLadder::Save(CUtlBuffer&, unsigned int) const
 T CNavLadder::SetDir(NavDirType)
 T CNavLadder::Shift(Vector const&)
 T CNavLadder::~CNavLadder()
 T CNavMesh::AddNavArea(CNavArea*)
 T CNavMesh::AddNode(Vector const&, Vector const&, NavDirType, CNavNode*, bool, float, float, float)
 T CNavMesh::AddToDragSelectionSet(CNavArea*)
 T CNavMesh::AddToSelectedSet(CNavArea*)
 T CNavMesh::AddWalkableSeed(Vector const&, Vector const&)
 T CNavMesh::AddWalkableSeeds()
 T CNavMesh::AllocateGrid(float, float, float, float)
 T CNavMesh::BeginAnalysis(bool)
 T CNavMesh::BeginCustomAnalysis(bool)
 T CNavMesh::BeginGeneration(bool)
 T CNavMesh::BeginVisibilityComputations()
 T CNavMesh::BuildArea(CNavNode*, int, int)
 T CNavMesh::BuildLadders()
 T CNavMesh::BuildTransientAreaList()
 T CNavMesh::CNavMesh()
 T CNavMesh::ClearSelectedSet()
 T CNavMesh::CommandNavAddToSelectedSet()
 T CNavMesh::CommandNavAddToSelectedSetByID(CCommand const&)
 T CNavMesh::CommandNavBeginArea()
 T CNavMesh::CommandNavBeginDeselecting()
 T CNavMesh::CommandNavBeginDragDeselecting()
 T CNavMesh::CommandNavBeginDragSelecting()
 T CNavMesh::CommandNavBeginSelecting()
 T CNavMesh::CommandNavBeginShiftXY()
 T CNavMesh::CommandNavBuildLadder()
 T CNavMesh::CommandNavClearSelectedSet()
 T CNavMesh::CommandNavConnect()
 T CNavMesh::CommandNavCornerLower(CCommand const&)
 T CNavMesh::CommandNavCornerPlaceOnGround(CCommand const&)
 T CNavMesh::CommandNavCornerRaise(CCommand const&)
 T CNavMesh::CommandNavCornerSelect()
 T CNavMesh::CommandNavDelete()
 T CNavMesh::CommandNavDeleteMarked()
 T CNavMesh::CommandNavDisconnect()
 T CNavMesh::CommandNavEndArea()
 T CNavMesh::CommandNavEndDeselecting()
 T CNavMesh::CommandNavEndDragDeselecting()
 T CNavMesh::CommandNavEndDragSelecting()
 T CNavMesh::CommandNavEndSelecting()
 T CNavMesh::CommandNavEndShiftXY()
 T CNavMesh::CommandNavFloodSelect(CCommand const&)
 T CNavMesh::CommandNavLadderFlip()
 T CNavMesh::CommandNavLowerDragVolumeMax()
 T CNavMesh::CommandNavLowerDragVolumeMin()
 T CNavMesh::CommandNavMakeSniperSpots()
 T CNavMesh::CommandNavMark(CCommand const&)
 T CNavMesh::CommandNavMarkUnnamed()
 T CNavMesh::CommandNavMarkWalkable()
 T CNavMesh::CommandNavMerge()
 T CNavMesh::CommandNavMergeMesh(CCommand const&)
 T CNavMesh::CommandNavPlaceFloodFill()
 T CNavMesh::CommandNavPlacePick()
 T CNavMesh::CommandNavPlaceSet()
 T CNavMesh::CommandNavRaiseDragVolumeMax()
 T CNavMesh::CommandNavRaiseDragVolumeMin()
 T CNavMesh::CommandNavRecallSelectedSet()
 T CNavMesh::CommandNavRemoveFromSelectedSet()
 T CNavMesh::CommandNavRemoveJumpAreas()
 T CNavMesh::CommandNavSaveSelected(CCommand const&)
 T CNavMesh::CommandNavSelectBlockedAreas()
 T CNavMesh::CommandNavSelectDamagingAreas()
 T CNavMesh::CommandNavSelectHalfSpace(CCommand const&)
 T CNavMesh::CommandNavSelectInvalidAreas()
 T CNavMesh::CommandNavSelectObstructedAreas()
 T CNavMesh::CommandNavSelectStairs()
 T CNavMesh::CommandNavSplice()
 T CNavMesh::CommandNavSplit()
 T CNavMesh::CommandNavStoreSelectedSet()
 T CNavMesh::CommandNavSubdivide(CCommand const&)
 T CNavMesh::CommandNavToggleAttribute(NavAttributeType)
 T CNavMesh::CommandNavToggleDeselecting(bool)
 T CNavMesh::CommandNavToggleInSelectedSet()
 T CNavMesh::CommandNavTogglePlaceMode()
 T CNavMesh::CommandNavTogglePlacePainting()
 T CNavMesh::CommandNavToggleSelectedSet()
 T CNavMesh::CommandNavToggleSelecting(bool)
 T CNavMesh::CommandNavUnmark()
 T CNavMesh::CommandNavWarpToMark()
 T CNavMesh::ConnectGeneratedAreas()
 T CNavMesh::CreateArea() const
 T CNavMesh::CreateHidingSpot() const
 T CNavMesh::CreateLadder(Vector const&, Vector const&, float, Vector2D const&, float)
 T CNavMesh::CreateNavAreasFromNodes()
 T CNavMesh::CreateObstacleTopAreaIfNecessary(CNavArea*, CNavArea*, NavDirType, bool)
 T CNavMesh::CreateObstacleTopAreas()
 T CNavMesh::DestroyArea(CNavArea*) const
 T CNavMesh::DestroyHidingSpots()
 T CNavMesh::DestroyLadders()
 T CNavMesh::DestroyNavigationMesh(bool)
 T CNavMesh::DoToggleAttribute(CNavArea*, NavAttributeType)
 T CNavMesh::DrawDanger() const
 T CNavMesh::DrawEditMode()
 T CNavMesh::DrawPlayerCounts() const
 T CNavMesh::EndCustomAnalysis()
 T CNavMesh::EndVisibilityComputations()
 T CNavMesh::FindActiveNavArea()
 T CNavMesh::FindGroundForNode(Vector*, Vector*)
 T CNavMesh::FindLadderCorners(Vector*, Vector*, Vector*)
 T CNavMesh::FindNavAreaOrLadderAlongRay(Vector const&, Vector const&, CNavArea**, CNavLadder**, CNavArea*)
 T CNavMesh::FireGameEvent(IGameEvent*)
 T CNavMesh::FixConnections()
 T CNavMesh::FixCornerOnCornerAreas()
 T CNavMesh::FixUpGeneratedAreas()
 T CNavMesh::GetEditVectors(Vector*, Vector*)
 T CNavMesh::GetFilename() const
 T CNavMesh::GetGenerationTraceMask() const
 T CNavMesh::GetGroundHeight(Vector const&, float*, Vector*) const
 T CNavMesh::GetLadderByID(unsigned int) const
 T CNavMesh::GetMarkedArea() const
 T CNavMesh::GetNavArea(Vector const&, float, bool) const
 T CNavMesh::GetNavAreaByID(unsigned int) const
 T CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const
 T CNavMesh::GetNextWalkableSeedNode()
 T CNavMesh::GetPlace(Vector const&) const
 T CNavMesh::GetSelecteSetSize() const
 T CNavMesh::GetSelectedSet() const
 T CNavMesh::GetSimpleGroundHeight(Vector const&, float*, Vector*) const
 T CNavMesh::GetSubVersionNumber() const
 T CNavMesh::HandleObstacleTopAreas()
 T CNavMesh::IncreaseDangerNearby(int, float, CNavArea*, Vector const&, float, float)
 T CNavMesh::IsAuthoritative() const
 T CNavMesh::IsInSelectedSet(CNavArea const*) const
 T CNavMesh::IsMeshVisibilityGenerated() const
 T CNavMesh::IsSelectedSetEmpty() const
 T CNavMesh::Load()
 T CNavMesh::LoadCustomData(CUtlBuffer&, unsigned int)
 T CNavMesh::LoadCustomDataPreArea(CUtlBuffer&, unsigned int)
 T CNavMesh::LoadPlaceDatabase()
 T CNavMesh::MarkJumpAreas()
 T CNavMesh::MarkStairAreas()
 T CNavMesh::MergeGeneratedAreas()
 T CNavMesh::NameToPlace(char const*) const
 T CNavMesh::OnAreaBlocked(CNavArea*)
 T CNavMesh::OnAreaUnblocked(CNavArea*)
 T CNavMesh::OnAvoidanceObstacleEnteredArea(CNavArea*)
 T CNavMesh::OnAvoidanceObstacleLeftArea(CNavArea*)
 T CNavMesh::OnBreakableBroken(CBaseEntity*)
 T CNavMesh::OnBreakableCreated(CBaseEntity*)
 T CNavMesh::OnEditCreateNotify(CNavArea*)
 T CNavMesh::OnEditDestroyNotify(CNavArea*)
 T CNavMesh::OnEditDestroyNotify(CNavLadder*)
 T CNavMesh::OnEditModeEnd()
 T CNavMesh::OnEditModeStart()
 T CNavMesh::OnNodeAdded(CNavNode*)
 T CNavMesh::OnRoundRestart()
 T CNavMesh::OnRoundRestartPreEntity()
 T CNavMesh::OnServerActivate()
 T CNavMesh::PartialNameToPlace(char const*) const
 T CNavMesh::PlaceNameAutocomplete(char const*, char (*) [64])
 T CNavMesh::PlaceToName(unsigned int) const
 T CNavMesh::PostCustomAnalysis()
 T CNavMesh::PostLoad(unsigned int)
 T CNavMesh::PreLoadAreas(int)
 T CNavMesh::PrintAllPlaces() const
 T CNavMesh::RaiseAreasWithInternalObstacles()
 T CNavMesh::RegisterAvoidanceObstacle(INavAvoidanceObstacle*)
 T CNavMesh::RemoveFromSelectedSet(CNavArea*)
 T CNavMesh::RemoveJumpAreas()
 T CNavMesh::RemoveNavArea(CNavArea*)
 T CNavMesh::RemoveOverlappingObstacleTopAreas()
 T CNavMesh::Reset()
 T CNavMesh::SampleStep()
 T CNavMesh::Save() const
 T CNavMesh::SaveCustomData(CUtlBuffer&) const
 T CNavMesh::SaveCustomDataPreArea(CUtlBuffer&) const
 T CNavMesh::SetEditMode(CNavMesh::EditModeType)
 T CNavMesh::SetMarkedArea(CNavArea*)
 T CNavMesh::SetPlayerSpawnName(char const*)
 T CNavMesh::SimplifySelectedAreas()
 T CNavMesh::SnapToGrid(float, bool) const
 T CNavMesh::SplitAreasUnderOverhangs()
 T CNavMesh::SquareUpAreas()
 T CNavMesh::StichAndRemoveJumpAreas()
 T CNavMesh::StitchAreaSet(CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >*)
 T CNavMesh::StripNavigationAreas()
 T CNavMesh::TestArea(CNavNode*, int, int)
 T CNavMesh::UnregisterAvoidanceObstacle(INavAvoidanceObstacle*)
 T CNavMesh::Update()
 T CNavMesh::UpdateAvoidanceObstacleAreas()
 T CNavMesh::UpdateBlockedAreas()
 T CNavMesh::UpdateDragSelectionSet()
 T CNavMesh::UpdateGeneration(float)
 T CNavMesh::ValidateNavAreaConnections()
 T CNavMesh::~CNavMesh()
 T CNavNode::CNavNode(Vector const&, Vector const&, CNavNode*, bool)
 T CNavNode::CheckCrouch()
 T CNavNode::CleanupGeneration()
 T CNavNode::ConnectTo(CNavNode*, NavDirType, float, float, float)
 T CNavNode::Draw()
 T CNavNode::GetGroundHeightAboveNode(NavCornerType) const
 T CNavNode::GetNode(Vector const&)
 T CNavNode::IsClosedCell() const
 T CNavNode::TestForCrouchArea(NavCornerType, Vector const&, Vector const&, float*)
 T CNavPathFollower::CNavPathFollower()
 T CNavPathFollower::FeelerReflexAdjustment(Vector*, float)
 T CNavPathFollower::FindOurPositionOnPath(Vector*, bool) const
 T CNavPathFollower::FindPathPoint(float, Vector*, int*)
 T CNavPathFollower::Reset()
 T CNavPathFollower::Update(float, bool)
 T CNavVectorNoEditAllocator::Reset()
 T CNetworkColor32Base<color32_s, CBaseEntity::NetworkVar_m_clrRender>::Init(unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CBaseEntity::NetworkVar_m_clrRender>::operator=(CNetworkColor32Base<color32_s, CBaseEntity::NetworkVar_m_clrRender> const&)
 T CNetworkColor32Base<color32_s, CBaseEntity::NetworkVar_m_clrRender>::operator=(color32_s const&)
 T CNetworkColor32Base<color32_s, CCascadeLight::NetworkVar_m_LightColor>::Init(unsigned char, unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CCascadeLight::NetworkVar_m_LightColor>::operator=(color32_s const&)
 T CNetworkColor32Base<color32_s, CDynamicProp::NetworkVar_m_clrGlow>::Init(unsigned char, unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CEnvProjectedTexture::NetworkVar_m_LightColor>::Init(unsigned char, unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CEnvProjectedTexture::NetworkVar_m_LightColor>::operator=(color32_s const&)
 T CNetworkColor32Base<color32_s, CShadowControl::NetworkVar_m_shadowColor>::Init(unsigned char, unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CShadowControl::NetworkVar_m_shadowColor>::operator=(color32_s const&)
 T CNetworkColor32Base<color32_s, CSunlightShadowControl::NetworkVar_m_LightColor>::Init(unsigned char, unsigned char, unsigned char, unsigned char)
 T CNetworkColor32Base<color32_s, CSunlightShadowControl::NetworkVar_m_LightColor>::operator=(color32_s const&)
 T CNetworkHandleBase<CBaseAnimating, CStatueProp::NetworkVar_m_hInitBaseAnimating>::Set(CBaseAnimating const*)
 T CNetworkHandleBase<CBaseCombatWeapon, CBaseCombatCharacter::NetworkVar_m_hActiveWeapon>::Set(CBaseCombatWeapon const*)
 T CNetworkHandleBase<CBaseEntity, CBaseAnimating::NetworkVar_m_hLightingOrigin>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseAnimating::NetworkVar_m_hLightingOriginRelative>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseEntity::NetworkVar_m_hEffectEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseEntity::NetworkVar_m_hMoveParent>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseEntity::NetworkVar_m_hOwnerEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseGrenade::NetworkVar_m_hThrower>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hConstraintEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hObserverTarget>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hTonemapController>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hUseEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hVehicle>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hViewEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBasePlayer::NetworkVar_m_hZoomOwner>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CBaseViewModel::NetworkVar_m_hOwner>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CCSPlayer::NetworkVar_m_hCarriedHostage>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CCSPlayer::NetworkVar_m_hCarriedHostageProp>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CCSPlayer::NetworkVar_m_hRagdoll>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CCSRagdoll::NetworkVar_m_hPlayer>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CEntityFlame::NetworkVar_m_hEntAttached>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CEntityParticleTrail::NetworkVar_m_hConstraintEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CEnvProjectedTexture::NetworkVar_m_hTargetEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CHandleTest::NetworkVar_m_Handle>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CSprite::NetworkVar_m_hAttachedToEntity>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBasePlayer, CBaseEntity::NetworkVar_m_hPlayerSimulationOwner>::Set(CBasePlayer const*)
 T CNetworkHandleBase<CBasePlayer, CPropVehicleDriveable::NetworkVar_m_hPlayer>::Set(CBasePlayer const*)
 T CNetworkHandleBase<CBasePlayer, CWeaponCSBase::NetworkVar_m_hPrevOwner>::Set(CBasePlayer const*)
 T CNetworkHandleBase<CColorCorrection, CBasePlayer::NetworkVar_m_hColorCorrectionCtrl>::Set(CColorCorrection const*)
 T CNetworkHandleBase<CPostProcessController, CBasePlayer::NetworkVar_m_hPostProcessCtrl>::Set(CPostProcessController const*)
 T CNextLevelIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CNextLevelIssue::CanTeamCallVote(int) const
 T CNextLevelIssue::ExecuteCommand()
 T CNextLevelIssue::GetDetailsString()
 T CNextLevelIssue::GetDisplayString()
 T CNextLevelIssue::GetNumberVoteOptions()
 T CNextLevelIssue::GetVoteIssue()
 T CNextLevelIssue::GetVotePassedString()
 T CNextLevelIssue::IsAllyRestrictedVote()
 T CNextLevelIssue::IsEnabled()
 T CNextLevelIssue::IsYesNoVote()
 T CNextLevelIssue::ListIssueDetails(CBasePlayer*)
 T CNextLevelIssue::~CNextLevelIssue()
 T CNoDefuseArea::GetDataDescMap()
 T CNoDefuseArea::NoDefuseAreaTouch(CBaseEntity*)
 T CNoDefuseArea::Spawn()
 T CNoDefuseArea::~CNoDefuseArea()
 T CNodeEnt::GetDataDescMap()
 T CNodeEnt::SetOwnerEntity(CBaseEntity*)
 T CNodeEnt::Spawn()
 T CNodeEnt::Spawn(char const*)
 T CNodeEnt::~CNodeEnt()
 T CNodeFilter::NodeDistanceSqr(CAI_Node&)
 T CNodeFilter::NodeIsValid(CAI_Node&)
 T CNodeList::IsLowerPriority(AI_NearNode_t const&, AI_NearNode_t const&)
 T CNodeList::RevIsLowerPriority(AI_NearNode_t const&, AI_NearNode_t const&)
 T CNonDamagingScan::operator()(CNavArea*, CNavArea*, float)
 T CNonDamagingScan::~CNonDamagingScan()
 T CNonMemberScriptBinding0<bool (*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<char const* (*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<float (*)(), float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<int (*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<void (*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<HSCRIPT__* (*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<char const* (*)(char const*), char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(bool), void, bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(int), void, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<bool (*)(char const*, HSCRIPT__*), bool, char const*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(char const*, int), void, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(int, char const*), void, int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding3<float (*)(Vector const&, Vector const&, HSCRIPT__*), float, Vector const&, Vector const&, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding3<void (*)(char const*, Vector const&, Vector const&), void, char const*, Vector const&, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding4<HSCRIPT__* (*)(char const*, Vector const&, char const*, int), HSCRIPT__*, char const*, Vector const&, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding6<void (*)(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*), void, HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding6<void (*)(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*), void, char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding7<void (*)(Vector const&, Vector const&, int, int, int, bool, float), void, Vector const&, Vector const&, int, int, int, bool, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding8<void (*)(Vector const&, Vector const&, Vector const&, int, int, int, int, float), void, Vector const&, Vector const&, Vector const&, int, int, int, int, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonModifiedPointerProxy::CNonModifiedPointerProxy(void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
 T CNotReadyForMatchIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CNotReadyForMatchIssue::ExecuteCommand()
 T CNotReadyForMatchIssue::GetCommandDelay()
 T CNotReadyForMatchIssue::GetDisplayString()
 T CNotReadyForMatchIssue::GetFailedVoteLockOutTime()
 T CNotReadyForMatchIssue::GetVoteIssue()
 T CNotReadyForMatchIssue::GetVotePassedString()
 T CNotReadyForMatchIssue::GetVotesRequiredToPass()
 T CNotReadyForMatchIssue::IsEnabled()
 T CNotReadyForMatchIssue::IsEnabledDuringWarmup()
 T CNotReadyForMatchIssue::IsEnabledInQueuedMatchmaking()
 T CNotReadyForMatchIssue::ListIssueDetails(CBasePlayer*)
 T CNotReadyForMatchIssue::ShouldIgnoreCreationTimer()
 T CNotReadyForMatchIssue::~CNotReadyForMatchIssue()
 T CNotifyList::AddEntity(CBaseEntity*, CBaseEntity*)
 T CNotifyList::ClearEntity(CBaseEntity*)
 T CNotifyList::LevelShutdownPreEntity()
 T CNotifyList::OnEntityCreated(CBaseEntity*)
 T CNotifyList::OnEntityDeleted(CBaseEntity*)
 T CNotifyList::RemoveEntity(CBaseEntity*, CBaseEntity*)
 T CNotifyList::ReportNamedEvent(CBaseEntity*, char const*)
 T CNotifyList::ReportSystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CNotifyList::~CNotifyList()
 T CNullEntity::Spawn()
 T CNullEntity::~CNullEntity()
 T CONSOLE_ECHO(char*, ...)
 T COrnamentProp::Activate()
 T COrnamentProp::AttachTo(char const*, CBaseEntity*, CBaseEntity*)
 T COrnamentProp::GetDataDescMap()
 T COrnamentProp::InputDetach(inputdata_t&)
 T COrnamentProp::InputSetAttached(inputdata_t&)
 T COrnamentProp::Spawn()
 T COrnamentProp::~COrnamentProp()
 T COutputEvent::FireOutput(CBaseEntity*, CBaseEntity*, float)
 T COuttroStats::GetDataDescMap()
 T COuttroStats::InputRollCredits(inputdata_t&)
 T COuttroStats::InputRollStatsCrawl(inputdata_t&)
 T COuttroStats::InputSkipStateChanged(inputdata_t&)
 T COuttroStats::SkipThink()
 T COuttroStats::Spawn()
 T COuttroStats::~COuttroStats()
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, char const*)
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, float)
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, soundlevel_t)
 T CPASAttenuationFilter::CPASAttenuationFilter(Vector const&, soundlevel_t)
 T CPASAttenuationFilter::Filter(Vector const&, float)
 T CPASAttenuationFilter::~CPASAttenuationFilter()
 T CPASFilter::~CPASFilter()
 T CPVSFilter::~CPVSFilter()
 T CPaintKit::CPaintKit()
 T CPaintKit::InitFromKeyValues(KeyValues*, CPaintKit const*, bool)
 T CPanelAnimationDictionary::FindOrAddPanelAnimationMap(char const*)
 T CPanelAnimationDictionary::~CPanelAnimationDictionary()
 T CPanelKeyBindingMapDictionary::CPanelKeyBindingMapDictionary()
 T CPanelKeyBindingMapDictionary::FindOrAddPanelKeyBindingMap(char const*)
 T CPanelKeyBindingMapDictionary::~CPanelKeyBindingMapDictionary()
 T CPanelMessageMapDictionary::CPanelMessageMapDictionary()
 T CPanelMessageMapDictionary::FindOrAddPanelMessageMap(char const*)
 T CPanelMessageMapDictionary::~CPanelMessageMapDictionary()
 T CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::DoExecute()
 T CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::Run(CNavArea**, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::DoExecute()
 T CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::Run(QueryCacheUpdateRecord_t*, unsigned int, int, int, IThreadPool*)
 T CParticleFire::GetDataDescMap()
 T CParticleFire::GetServerClass()
 T CParticleFire::YouForgotToImplementOrDeclareServerClass()
 T CParticleFire::~CParticleFire()
 T CParticleLight::GetDataDescMap()
 T CParticleLight::~CParticleLight()
 T CParticlePerformanceMonitor::GetDataDescMap()
 T CParticlePerformanceMonitor::GetServerClass()
 T CParticlePerformanceMonitor::InputStartMeasuring(inputdata_t&)
 T CParticlePerformanceMonitor::InputStopMeasuring(inputdata_t&)
 T CParticlePerformanceMonitor::InputTurnOffDisplay(inputdata_t&)
 T CParticlePerformanceMonitor::InputTurnOnDisplay(inputdata_t&)
 T CParticlePerformanceMonitor::Spawn()
 T CParticlePerformanceMonitor::UpdateTransmitState()
 T CParticlePerformanceMonitor::YouForgotToImplementOrDeclareServerClass()
 T CParticlePerformanceMonitor::~CParticlePerformanceMonitor()
 T CParticleSystem::Activate()
 T CParticleSystem::CParticleSystem()
 T CParticleSystem::GetDataDescMap()
 T CParticleSystem::GetKeyValue(char const*, char*, int)
 T CParticleSystem::GetServerClass()
 T CParticleSystem::InputDestroy(inputdata_t&)
 T CParticleSystem::InputStart(inputdata_t&)
 T CParticleSystem::InputStop(inputdata_t&)
 T CParticleSystem::InputStopEndCap(inputdata_t&)
 T CParticleSystem::KeyValue(char const*, char const*)
 T CParticleSystem::ObjectCaps()
 T CParticleSystem::Precache()
 T CParticleSystem::ReadControlPointEnts()
 T CParticleSystem::Spawn()
 T CParticleSystem::StartParticleSystem()
 T CParticleSystem::StartParticleSystemThink()
 T CParticleSystem::StopParticleSystem(int)
 T CParticleSystem::UpdateTransmitState()
 T CParticleSystem::YouForgotToImplementOrDeclareServerClass()
 T CParticleSystem::~CParticleSystem()
 T CParticleSystemDefinition::CParticleSystemDefinition()
 T CParticleSystemDefinition::GetFallbackReplacementDefinition() const
 T CParticleSystemDefinition::ParseChildren(CDmxElement*)
 T CParticleSystemDefinition::ParseOperators(char const*, ParticleFunctionType_t, CDmxElement*, CUtlVector<CParticleOperatorInstance*, CUtlMemory<CParticleOperatorInstance*, int> >&)
 T CParticleSystemDefinition::Precache()
 T CParticleSystemDefinition::Read(CDmxElement*)
 T CParticleSystemDefinition::SetupContextData()
 T CParticleSystemDefinition::ShouldAlwaysPrecache() const
 T CParticleSystemDefinition::UnlinkAllCollections()
 T CParticleSystemDefinition::~CParticleSystemDefinition()
 T CParticleSystemDictionary::AddParticleSystem(CDmxElement*)
 T CParticleSystemDictionary::DestroyExistingElement(CDmxElement*)
 T CParticleSystemDictionary::FindOrAddParticleSystemHandle(char const*)
 T CParticleSystemDictionary::~CParticleSystemDictionary()
 T CParticleSystemMgr::CParticleSystemMgr()
 T CParticleSystemMgr::DecommitTempMemory()
 T CParticleSystemMgr::FindOrLoadSheet(CParticleSystemDefinition*, bool)
 T CParticleSystemMgr::FindParticleSystem(char const*)
 T CParticleSystemMgr::GetParticleSystemCount()
 T CParticleSystemMgr::GetParticleSystemNameFromIndex(int)
 T CParticleSystemMgr::GetParticleSystemsInBuffer(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CParticleSystemMgr::GetParticleSystemsInFile(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CParticleSystemMgr::Init(IParticleSystemQuery*, bool)
 T CParticleSystemMgr::InitAttributeTable()
 T CParticleSystemMgr::ReadParticleConfigFile(CUtlBuffer&, bool, bool, char const*)
 T CParticleSystemMgr::ReadParticleConfigFile(char const*, bool, bool)
 T CParticleSystemMgr::ReadParticleDefinitions(CUtlBuffer&, char const*, bool, bool)
 T CParticleSystemMgr::ShouldLoadSheets(bool)
 T CParticleSystemMgr::Shutdown()
 T CParticleSystemMgr::~CParticleSystemMgr()
 T CParticleSystemQuery::BeginDrawModels(int, Vector const&, CParticleCollection*)
 T CParticleSystemQuery::DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T CParticleSystemQuery::DrawModel(void*, matrix3x4_t const&, CParticleCollection*, int, int, int, int, int, float, float, float, float, float)
 T CParticleSystemQuery::FinishDrawModels(CParticleCollection*)
 T CParticleSystemQuery::GetActivityCount()
 T CParticleSystemQuery::GetActivityNameFromIndex(int)
 T CParticleSystemQuery::GetActivityNumber(void*, char const*)
 T CParticleSystemQuery::GetClosestControllingObjectHitBox(CParticleCollection*, int, int, float, Vector*, Vector*, int*, int, char const*)
 T CParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T CParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*, char const*)
 T CParticleSystemQuery::GetControllingObjectOBBox(CParticleCollection*, int, Vector, Vector)
 T CParticleSystemQuery::GetCurrentViewOrigin()
 T CParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T CParticleSystemQuery::GetLocalPlayerPos()
 T CParticleSystemQuery::GetModel(char const*)
 T CParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*, int, char const*)
 T CParticleSystemQuery::GetRayTraceEnvironmentFromName(char const*)
 T CParticleSystemQuery::IsEditor()
 T CParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool, char const*)
 T CParticleSystemQuery::IsPointInSolid(Vector const&, int)
 T CParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T CParticleSystemQuery::PostSimulate()
 T CParticleSystemQuery::PreSimulate()
 T CParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T CParticleSystemQuery::TraceAgainstRayTraceEnv(int, FourRays const&, float __vector(4), float __vector(4), RayTracingResult*, int) const
 T CParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CParticleSystemQuery::UpdateProjectedTexture(int, IMaterial*, Vector&, float, float, float, float, float, float, void*&)
 T CPathCorner::DrawDebugGeometryOverlays()
 T CPathCorner::DrawDebugTextOverlays()
 T CPathCorner::GetDataDescMap()
 T CPathCorner::GetDelay()
 T CPathCorner::InputInPass(inputdata_t&)
 T CPathCorner::InputSetNextPathCorner(inputdata_t&)
 T CPathCorner::Spawn()
 T CPathCorner::~CPathCorner()
 T CPathCornerCrash::~CPathCornerCrash()
 T CPathKeyFrame::Activate()
 T CPathKeyFrame::CalculateFrameDuration()
 T CPathKeyFrame::GetDataDescMap()
 T CPathKeyFrame::Spawn()
 T CPathKeyFrame::~CPathKeyFrame()
 T CPathTrack::Activate()
 T CPathTrack::BeginIteration()
 T CPathTrack::DisableAlternatePath()
 T CPathTrack::DisablePath()
 T CPathTrack::DrawDebugGeometryOverlays()
 T CPathTrack::EnableAlternatePath()
 T CPathTrack::EnablePath()
 T CPathTrack::EndIteration()
 T CPathTrack::GetDataDescMap()
 T CPathTrack::GetNext()
 T CPathTrack::GetOrientation(bool)
 T CPathTrack::GetOrientationType()
 T CPathTrack::GetPrevious()
 T CPathTrack::HasBeenVisited() const
 T CPathTrack::InputDisableAlternatePath(inputdata_t&)
 T CPathTrack::InputDisablePath(inputdata_t&)
 T CPathTrack::InputEnableAlternatePath(inputdata_t&)
 T CPathTrack::InputEnablePath(inputdata_t&)
 T CPathTrack::InputPass(inputdata_t&)
 T CPathTrack::InputToggleAlternatePath(inputdata_t&)
 T CPathTrack::InputTogglePath(inputdata_t&)
 T CPathTrack::Link()
 T CPathTrack::LookAhead(Vector&, float, int, CPathTrack**)
 T CPathTrack::Nearest(Vector const&)
 T CPathTrack::Spawn()
 T CPathTrack::ValidPath(CPathTrack*, int)
 T CPathTrack::Visit()
 T CPathTrack::~CPathTrack()
 T CPathfindNearestNodeFilter::IsValid(CAI_Node*)
 T CPathfindNearestNodeFilter::ShouldContinue()
 T CPauseMatchIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CPauseMatchIssue::ExecuteCommand()
 T CPauseMatchIssue::GetCommandDelay()
 T CPauseMatchIssue::GetDisplayString()
 T CPauseMatchIssue::GetFailedVoteLockOutTime()
 T CPauseMatchIssue::GetVoteIssue()
 T CPauseMatchIssue::GetVotePassedString()
 T CPauseMatchIssue::GetVotesRequiredToPass()
 T CPauseMatchIssue::IsEnabled()
 T CPauseMatchIssue::IsEnabledDuringWarmup()
 T CPauseMatchIssue::IsEnabledInQueuedMatchmaking()
 T CPauseMatchIssue::ListIssueDetails(CBasePlayer*)
 T CPauseMatchIssue::ShouldIgnoreCreationTimer()
 T CPauseMatchIssue::~CPauseMatchIssue()
 T CPhysBallSocket::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysBallSocket::~CPhysBallSocket()
 T CPhysBox::CreateVPhysics()
 T CPhysBox::DrawDebugTextOverlays()
 T CPhysBox::GetDataDescMap()
 T CPhysBox::GetServerClass()
 T CPhysBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPhysBox::InputBecomeDebris(inputdata_t&)
 T CPhysBox::InputDisable(inputdata_t&)
 T CPhysBox::InputDisableFloating(inputdata_t&)
 T CPhysBox::InputDisableMotion(inputdata_t&)
 T CPhysBox::InputEnable(inputdata_t&)
 T CPhysBox::InputEnableMotion(inputdata_t&)
 T CPhysBox::InputForceDrop(inputdata_t&)
 T CPhysBox::InputSleep(inputdata_t&)
 T CPhysBox::InputWake(inputdata_t&)
 T CPhysBox::ObjectCaps()
 T CPhysBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysBox::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysBox::PreferredCarryAngles()
 T CPhysBox::Spawn()
 T CPhysBox::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysBox::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysBox::VPhysicsUpdate(IPhysicsObject*)
 T CPhysBox::YouForgotToImplementOrDeclareServerClass()
 T CPhysBox::~CPhysBox()
 T CPhysBoxMultiplayer::Activate()
 T CPhysBoxMultiplayer::GetDataDescMap()
 T CPhysBoxMultiplayer::GetMass()
 T CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysBoxMultiplayer::GetServerClass()
 T CPhysBoxMultiplayer::IsAsleep()
 T CPhysBoxMultiplayer::YouForgotToImplementOrDeclareServerClass()
 T CPhysBoxMultiplayer::~CPhysBoxMultiplayer()
 T CPhysConstraint::Activate()
 T CPhysConstraint::ActivateConstraint()
 T CPhysConstraint::Deactivate()
 T CPhysConstraint::DrawDebugGeometryOverlays()
 T CPhysConstraint::DrawDebugTextOverlays()
 T CPhysConstraint::GetConstraintObjects(hl_constraint_info_t&)
 T CPhysConstraint::GetDataDescMap()
 T CPhysConstraint::InputBreak(inputdata_t&)
 T CPhysConstraint::InputOnBreak(inputdata_t&)
 T CPhysConstraint::InputTurnOff(inputdata_t&)
 T CPhysConstraint::InputTurnOn(inputdata_t&)
 T CPhysConstraint::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPhysConstraint::OnBreak()
 T CPhysConstraint::OnConstraintSetup(hl_constraint_info_t&)
 T CPhysConstraint::Precache()
 T CPhysConstraint::Spawn()
 T CPhysConstraint::~CPhysConstraint()
 T CPhysConstraintEvents::ConstraintBroken(IPhysicsConstraint*)
 T CPhysConstraintSystem::GetDataDescMap()
 T CPhysConstraintSystem::Spawn()
 T CPhysConstraintSystem::~CPhysConstraintSystem()
 T CPhysConvert::GetDataDescMap()
 T CPhysConvert::InputConvertTarget(inputdata_t&)
 T CPhysConvert::~CPhysConvert()
 T CPhysExplosion::DrawDebugTextOverlays()
 T CPhysExplosion::Explode(CBaseEntity*, CBaseEntity*)
 T CPhysExplosion::FindEntity(CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CPhysExplosion::GetDataDescMap()
 T CPhysExplosion::InputExplode(inputdata_t&)
 T CPhysExplosion::InputExplodeAndRemove(inputdata_t&)
 T CPhysExplosion::Spawn()
 T CPhysExplosion::~CPhysExplosion()
 T CPhysFixed::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysFixed::DrawDebugGeometryOverlays()
 T CPhysFixed::DrawDebugTextOverlays()
 T CPhysFixed::~CPhysFixed()
 T CPhysForce::Activate()
 T CPhysForce::ActivateForce()
 T CPhysForce::ForceOff()
 T CPhysForce::GetDataDescMap()
 T CPhysForce::InputActivate(inputdata_t&)
 T CPhysForce::InputDeactivate(inputdata_t&)
 T CPhysForce::InputForceScale(inputdata_t&)
 T CPhysForce::OnActivate()
 T CPhysForce::OnRestore()
 T CPhysForce::ScaleForce(float)
 T CPhysForce::Spawn()
 T CPhysForce::~CPhysForce()
 T CPhysHinge::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysHinge::Deactivate()
 T CPhysHinge::DrawDebugGeometryOverlays()
 T CPhysHinge::GetDataDescMap()
 T CPhysHinge::InputSetHingeFriction(inputdata_t&)
 T CPhysHinge::InputSetVelocity(inputdata_t&)
 T CPhysHinge::IsWorldHinge(hl_constraint_info_t const&, int*)
 T CPhysHinge::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CPhysHinge::Spawn()
 T CPhysHinge::~CPhysHinge()
 T CPhysImpact::Activate()
 T CPhysImpact::GetDataDescMap()
 T CPhysImpact::InputImpact(inputdata_t&)
 T CPhysImpact::PointAtEntity()
 T CPhysImpact::Spawn()
 T CPhysImpact::~CPhysImpact()
 T CPhysLength::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysLength::DrawDebugGeometryOverlays()
 T CPhysLength::GetDataDescMap()
 T CPhysLength::~CPhysLength()
 T CPhysMagnet::ConstraintBroken(IPhysicsConstraint*)
 T CPhysMagnet::DetachAll()
 T CPhysMagnet::DoMagnetSuck(CBaseEntity*)
 T CPhysMagnet::GetDataDescMap()
 T CPhysMagnet::GetServerClass()
 T CPhysMagnet::InputToggle(inputdata_t&)
 T CPhysMagnet::InputTurnOff(inputdata_t&)
 T CPhysMagnet::InputTurnOn(inputdata_t&)
 T CPhysMagnet::Precache()
 T CPhysMagnet::Spawn()
 T CPhysMagnet::Touch(CBaseEntity*)
 T CPhysMagnet::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysMagnet::YouForgotToImplementOrDeclareServerClass()
 T CPhysMagnet::~CPhysMagnet()
 T CPhysMotor::Activate()
 T CPhysMotor::GetDataDescMap()
 T CPhysMotor::InputSetTargetSpeed(inputdata_t&)
 T CPhysMotor::InputTurnOff(inputdata_t&)
 T CPhysMotor::InputTurnOn(inputdata_t&)
 T CPhysMotor::OnRestore()
 T CPhysMotor::Spawn()
 T CPhysMotor::Think()
 T CPhysMotor::~CPhysMotor()
 T CPhysObjSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CPhysObjSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CPhysPulley::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysPulley::DrawDebugGeometryOverlays()
 T CPhysPulley::GetDataDescMap()
 T CPhysPulley::~CPhysPulley()
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T CPhysSaveRestoreBlockHandler::CEntityRestoreSet::Add(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T CPhysSaveRestoreBlockHandler::GetBBox(IPhysicsObject*)
 T CPhysSaveRestoreBlockHandler::GetBlockName()
 T CPhysSaveRestoreBlockHandler::GetModelName(IPhysicsObject*)
 T CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T CPhysSaveRestoreBlockHandler::OnEntityCreated(CBaseEntity*)
 T CPhysSaveRestoreBlockHandler::OnEntityDeleted(CBaseEntity*)
 T CPhysSaveRestoreBlockHandler::PostRestore()
 T CPhysSaveRestoreBlockHandler::PostSave()
 T CPhysSaveRestoreBlockHandler::PreRestore()
 T CPhysSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CPhysSaveRestoreBlockHandler::QueueRestore(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::QueueSave(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CPhysSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CPhysSaveRestoreBlockHandler::RestoreBlock(IRestore*, PhysObjectHeader_t const&)
 T CPhysSaveRestoreBlockHandler::RestorePhysicsObjectAndModel(IRestore*, PhysObjectHeader_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t*, int)
 T CPhysSaveRestoreBlockHandler::Save(ISave*)
 T CPhysSaveRestoreBlockHandler::SaveQueueFunc(CPhysSaveRestoreBlockHandler::QueuedItem_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CPhysSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CPhysSaveRestoreBlockHandler::~CPhysSaveRestoreBlockHandler()
 T CPhysSlideConstraint::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysSlideConstraint::DrawDebugGeometryOverlays()
 T CPhysSlideConstraint::GetDataDescMap()
 T CPhysSlideConstraint::InputSetVelocity(inputdata_t&)
 T CPhysSlideConstraint::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CPhysSlideConstraint::~CPhysSlideConstraint()
 T CPhysSphere::CreateVPhysics()
 T CPhysSphere::OverridePropdata()
 T CPhysSphere::~CPhysSphere()
 T CPhysThruster::GetDataDescMap()
 T CPhysThruster::OnActivate()
 T CPhysThruster::SetupForces(IPhysicsObject*, Vector&, Vector&)
 T CPhysThruster::~CPhysThruster()
 T CPhysTorque::GetDataDescMap()
 T CPhysTorque::SetupForces(IPhysicsObject*, Vector&, Vector&)
 T CPhysTorque::Spawn()
 T CPhysTorque::~CPhysTorque()
 T CPhysicsCannister::BeginShutdownThink()
 T CPhysicsCannister::CannisterActivate(CBaseEntity*, Vector const&)
 T CPhysicsCannister::CreateVPhysics()
 T CPhysicsCannister::Deactivate()
 T CPhysicsCannister::Explode(CBaseEntity*)
 T CPhysicsCannister::ExplodeTouch(CBaseEntity*)
 T CPhysicsCannister::GetDataDescMap()
 T CPhysicsCannister::HasPhysicsAttacker(float)
 T CPhysicsCannister::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPhysicsCannister::InputActivate(inputdata_t&)
 T CPhysicsCannister::InputDeactivate(inputdata_t&)
 T CPhysicsCannister::InputExplode(inputdata_t&)
 T CPhysicsCannister::InputWake(inputdata_t&)
 T CPhysicsCannister::IsAlive()
 T CPhysicsCannister::ObjectCaps()
 T CPhysicsCannister::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsCannister::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysicsCannister::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsCannister::OnRestore()
 T CPhysicsCannister::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysicsCannister::PhysGunLaunchAngularImpulse()
 T CPhysicsCannister::PhysGunLaunchVelocity(Vector const&, float)
 T CPhysicsCannister::Precache()
 T CPhysicsCannister::PreferredCarryAngles()
 T CPhysicsCannister::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T CPhysicsCannister::ShutdownJet()
 T CPhysicsCannister::Spawn()
 T CPhysicsCannister::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPhysicsCannister::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CPhysicsCannister::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysicsCannister::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysicsCannister::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsCannister::~CPhysicsCannister()
 T CPhysicsEntitySolver::GetDataDescMap()
 T CPhysicsEntitySolver::Spawn()
 T CPhysicsEntitySolver::Think()
 T CPhysicsEntitySolver::UpdateOnRemove()
 T CPhysicsEntitySolver::~CPhysicsEntitySolver()
 T CPhysicsGameTrace::VehiclePointInWater(Vector const&)
 T CPhysicsGameTrace::VehicleTraceRay(Ray_t const&, void*, CGameTrace*)
 T CPhysicsGameTrace::VehicleTraceRayWithWater(Ray_t const&, void*, CGameTrace*)
 T CPhysicsHook::FindOrAddVehicleScript(char const*, vehicleparams_t*, vehiclesounds_t*)
 T CPhysicsHook::FrameUpdatePostEntityThink()
 T CPhysicsHook::Init()
 T CPhysicsHook::LevelInitPostEntity()
 T CPhysicsHook::LevelInitPreEntity()
 T CPhysicsHook::LevelShutdownPostEntity()
 T CPhysicsHook::LevelShutdownPreEntity()
 T CPhysicsHook::Name()
 T CPhysicsHook::PreClientUpdate()
 T CPhysicsHook::~CPhysicsHook()
 T CPhysicsNPCSolver::BecomePenetrationSolver()
 T CPhysicsNPCSolver::CheckTouching()
 T CPhysicsNPCSolver::GetDataDescMap()
 T CPhysicsNPCSolver::IsContactOnNPCHead(IPhysicsFrictionSnapshot*, IPhysicsObject*, CAI_BaseNPC*)
 T CPhysicsNPCSolver::IsIntersecting()
 T CPhysicsNPCSolver::OnRestore()
 T CPhysicsNPCSolver::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsNPCSolver::Spawn()
 T CPhysicsNPCSolver::Think()
 T CPhysicsNPCSolver::UpdateOnRemove()
 T CPhysicsNPCSolver::~CPhysicsNPCSolver()
 T CPhysicsPlayerCallback::ShouldMoveTo(IPhysicsObject*, Vector const&)
 T CPhysicsProp::CPhysicsProp()
 T CPhysicsProp::CanObstructNavAreas() const
 T CPhysicsProp::ClearFlagsThink()
 T CPhysicsProp::ComputeEnablingImpulse(int, gamevcollisionevent_t*)
 T CPhysicsProp::CreateVPhysics()
 T CPhysicsProp::DrawDebugTextOverlays()
 T CPhysicsProp::EnableMotion()
 T CPhysicsProp::GetDataDescMap()
 T CPhysicsProp::GetNavObstructionHeight() const
 T CPhysicsProp::GetObstructingEntity()
 T CPhysicsProp::GetPropDataAngles(char const*, QAngle&)
 T CPhysicsProp::GetServerClass()
 T CPhysicsProp::HandleAnyCollisionInteractions(int, gamevcollisionevent_t*)
 T CPhysicsProp::InputDisableFloating(inputdata_t&)
 T CPhysicsProp::InputDisableMotion(inputdata_t&)
 T CPhysicsProp::InputEnableMotion(inputdata_t&)
 T CPhysicsProp::InputSleep(inputdata_t&)
 T CPhysicsProp::InputWake(inputdata_t&)
 T CPhysicsProp::IsPotentiallyAbleToObstructNavAreas() const
 T CPhysicsProp::NavThink()
 T CPhysicsProp::ObjectCaps()
 T CPhysicsProp::OnNavMeshLoaded()
 T CPhysicsProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysicsProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsProp::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysicsProp::OverridePropdata()
 T CPhysicsProp::Precache()
 T CPhysicsProp::ShouldDisableMotionOnFreeze()
 T CPhysicsProp::Spawn()
 T CPhysicsProp::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysicsProp::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysicsProp::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsProp::YouForgotToImplementOrDeclareServerClass()
 T CPhysicsProp::~CPhysicsProp()
 T CPhysicsPropMultiplayer::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CPhysicsPropMultiplayer::GetDataDescMap()
 T CPhysicsPropMultiplayer::GetMass()
 T CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysicsPropMultiplayer::GetPhysicsMode()
 T CPhysicsPropMultiplayer::GetServerClass()
 T CPhysicsPropMultiplayer::IsAsleep()
 T CPhysicsPropMultiplayer::SetPhysicsMode(int)
 T CPhysicsPropMultiplayer::Spawn()
 T CPhysicsPropMultiplayer::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsPropMultiplayer::YouForgotToImplementOrDeclareServerClass()
 T CPhysicsPropMultiplayer::~CPhysicsPropMultiplayer()
 T CPhysicsPropRespawnable::Event_Killed(CTakeDamageInfo const&)
 T CPhysicsPropRespawnable::GetDataDescMap()
 T CPhysicsPropRespawnable::Materialize()
 T CPhysicsPropRespawnable::Spawn()
 T CPhysicsPropRespawnable::~CPhysicsPropRespawnable()
 T CPhysicsPushedEntities::AddEntity(CBaseEntity*)
 T CPhysicsPushedEntities::ComputeRotationalPushDirection(CBaseEntity*, CPhysicsPushedEntities::RotatingPushMove_t const&, Vector*, CBaseEntity*)
 T CPhysicsPushedEntities::FinishPush(bool, CPhysicsPushedEntities::RotatingPushMove_t const*)
 T CPhysicsPushedEntities::FinishRotPushedEntity(CBaseEntity*, CPhysicsPushedEntities::RotatingPushMove_t const&)
 T CPhysicsPushedEntities::GenerateBlockingEntityList()
 T CPhysicsPushedEntities::GenerateBlockingEntityListAddBox(Vector const&)
 T CPhysicsPushedEntities::IsPushedPositionValid(CBaseEntity*)
 T CPhysicsPushedEntities::LinearlyMoveRootEntity(CBaseEntity*, float, Vector*)
 T CPhysicsPushedEntities::PerformLinearPush(CBaseEntity*, float)
 T CPhysicsPushedEntities::PerformRotatePush(CBaseEntity*, float)
 T CPhysicsPushedEntities::RotateRootEntity(CBaseEntity*, float, CPhysicsPushedEntities::RotatingPushMove_t&)
 T CPhysicsPushedEntities::SetupAllInHierarchy(CBaseEntity*)
 T CPhysicsPushedEntities::SpeculativelyCheckLinearPush(Vector const&)
 T CPhysicsPushedEntities::SpeculativelyCheckPush(CPhysicsPushedEntities::PhysicsPushedInfo_t&, Vector const&, bool, CBaseEntity*)
 T CPhysicsPushedEntities::SpeculativelyCheckRotPush(CPhysicsPushedEntities::RotatingPushMove_t const&, CBaseEntity*)
 T CPhysicsPushedEntities::StoreMovedEntities(physicspushlist_t&)
 T CPhysicsPushedEntities::UpdatePusherPhysicsEndOfTick()
 T CPhysicsPushedEntities::~CPhysicsPushedEntities()
 T CPhysicsShake::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsSpring::Activate()
 T CPhysicsSpring::DrawDebugGeometryOverlays()
 T CPhysicsSpring::DrawDebugTextOverlays()
 T CPhysicsSpring::GetDataDescMap()
 T CPhysicsSpring::GetSpringObjectConnections(string_t, string_t, IPhysicsObject**, IPhysicsObject**)
 T CPhysicsSpring::InputSetSpringConstant(inputdata_t&)
 T CPhysicsSpring::InputSetSpringDamping(inputdata_t&)
 T CPhysicsSpring::InputSetSpringLength(inputdata_t&)
 T CPhysicsSpring::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPhysicsSpring::Spawn()
 T CPhysicsSpring::~CPhysicsSpring()
 T CPhysicsWind::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsWire::GetDataDescMap()
 T CPhysicsWire::Precache()
 T CPhysicsWire::Spawn()
 T CPhysicsWire::~CPhysicsWire()
 T CPlane::CPlane()
 T CPlane::InitializePlane(Vector const&, Vector const&)
 T CPlane::PointDist(Vector const&)
 T CPlane::PointInFront(Vector const&)
 T CPlantedC4::ActivateSetTimerLength(float)
 T CPlantedC4::C4Think()
 T CPlantedC4::CPlantedC4()
 T CPlantedC4::Explode(CGameTrace*, int)
 T CPlantedC4::GetDataDescMap()
 T CPlantedC4::GetServerClass()
 T CPlantedC4::Init(CCSPlayer*, Vector, QAngle, bool)
 T CPlantedC4::ObjectCaps()
 T CPlantedC4::Precache()
 T CPlantedC4::SetTransmit(CCheckTransmitInfo*, bool)
 T CPlantedC4::ShootSatchelCharge(CCSPlayer*, Vector, QAngle)
 T CPlantedC4::ShouldTransmit(CCheckTransmitInfo const*)
 T CPlantedC4::Spawn()
 T CPlantedC4::SpawnControlPanels()
 T CPlantedC4::UpdateTransmitState()
 T CPlantedC4::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPlantedC4::YouForgotToImplementOrDeclareServerClass()
 T CPlantedC4::~CPlantedC4()
 T CPlantedC4Training::Explode(CGameTrace*, int)
 T CPlantedC4Training::GetDataDescMap()
 T CPlantedC4Training::InputActivateSetTimerLength(inputdata_t&)
 T CPlantedC4Training::~CPlantedC4Training()
 T CPlasma::CPlasma()
 T CPlasma::EnableSmoke(int)
 T CPlasma::GetDataDescMap()
 T CPlasma::GetServerClass()
 T CPlasma::Precache()
 T CPlasma::YouForgotToImplementOrDeclareServerClass()
 T CPlasma::~CPlasma()
 T CPlatTrigger::ObjectCaps()
 T CPlatTrigger::SpawnInsideTrigger(CFuncPlat*)
 T CPlatTrigger::Touch(CBaseEntity*)
 T CPlatTrigger::~CPlatTrigger()
 T CPlayerInfo::ChangeTeam(int)
 T CPlayerInfo::GetAbsAngles()
 T CPlayerInfo::GetAbsOrigin()
 T CPlayerInfo::GetArmorValue()
 T CPlayerInfo::GetAssistsCount()
 T CPlayerInfo::GetDeathCount()
 T CPlayerInfo::GetFragCount()
 T CPlayerInfo::GetHealth()
 T CPlayerInfo::GetLastUserCommand()
 T CPlayerInfo::GetLocalAngles()
 T CPlayerInfo::GetLocalOrigin()
 T CPlayerInfo::GetMaxHealth()
 T CPlayerInfo::GetModelName()
 T CPlayerInfo::GetName()
 T CPlayerInfo::GetNetworkIDString()
 T CPlayerInfo::GetPlayerMaxs()
 T CPlayerInfo::GetPlayerMins()
 T CPlayerInfo::GetTeamIndex()
 T CPlayerInfo::GetUserID()
 T CPlayerInfo::GetWeaponName()
 T CPlayerInfo::IsConnected()
 T CPlayerInfo::IsDead()
 T CPlayerInfo::IsEFlagSet(int)
 T CPlayerInfo::IsFakeClient()
 T CPlayerInfo::IsHLTV()
 T CPlayerInfo::IsInAVehicle()
 T CPlayerInfo::IsObserver()
 T CPlayerInfo::IsPlayer()
 T CPlayerInfo::PostClientMessagesSent()
 T CPlayerInfo::RemoveAllItems(bool)
 T CPlayerInfo::RunPlayerMove(CBotCmd*)
 T CPlayerInfo::SetAbsAngles(QAngle&)
 T CPlayerInfo::SetAbsOrigin(Vector&)
 T CPlayerInfo::SetActiveWeapon(char const*)
 T CPlayerInfo::SetLastUserCommand(CBotCmd const&)
 T CPlayerInfo::SetLocalAngles(QAngle const&)
 T CPlayerInfo::SetLocalOrigin(Vector const&)
 T CPlayerInfoManager::GetGlobalVars()
 T CPlayerInfoManager::GetPlayerInfo(edict_t*)
 T CPlayerInventory::AddEconItem(CEconItem*, bool, bool, bool)
 T CPlayerInventory::AddListener(GCSDK::ISharedObjectListener*)
 T CPlayerInventory::CPlayerInventory()
 T CPlayerInventory::CanPurchaseItems(int) const
 T CPlayerInventory::DefaultEquippedDefinitionHasBeenUpdated(CEconDefaultEquippedDefinitionInstanceClient*)
 T CPlayerInventory::DumpInventoryToConsole(bool)
 T CPlayerInventory::ExtractInventorySortPosition(unsigned int)
 T CPlayerInventory::FilloutItemFromEconItem(CEconItemView*, CEconItem*)
 T CPlayerInventory::FindDefaultEquippedDefinitionItemBySlot(int, int)
 T CPlayerInventory::GetInventoryItemByItemID(unsigned long long, int*)
 T CPlayerInventory::GetItemInLoadout(int, int)
 T CPlayerInventory::GetMaxItemCount() const
 T CPlayerInventory::GetPreviewItemDef() const
 T CPlayerInventory::GetSOCDataForItem(unsigned long long)
 T CPlayerInventory::ItemHasBeenUpdated(CEconItemView*, bool, bool, CPlayerInventory::EInventoryItemEvent)
 T CPlayerInventory::ItemIsBeingRemoved(CEconItemView*)
 T CPlayerInventory::ItemShouldBeIncluded(int)
 T CPlayerInventory::MarkSetItemDescriptionsDirty(int)
 T CPlayerInventory::NotifyHasNewItems()
 T CPlayerInventory::OnHasNewItems()
 T CPlayerInventory::OnItemChangedPosition(CEconItemView*, unsigned int)
 T CPlayerInventory::RemoveItem(unsigned long long)
 T CPlayerInventory::RemoveListener(GCSDK::ISharedObjectListener*)
 T CPlayerInventory::RequestInventory(GCSDK::SOID_t)
 T CPlayerInventory::SOCacheSubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T CPlayerInventory::SOCacheUnsubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T CPlayerInventory::SOClear()
 T CPlayerInventory::SOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CPlayerInventory::SODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CPlayerInventory::SOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T CPlayerInventory::SendInventoryUpdateEvent()
 T CPlayerInventory::SetDefaultEquippedDefinitionItemBySlot(int, int, unsigned short)
 T CPlayerInventory::Shutdown()
 T CPlayerInventory::ValidateInventoryPositions()
 T CPlayerInventory::~CPlayerInventory()
 T CPlayerLocalData::CPlayerLocalData()
 T CPlayerLocalData::NetworkStateChanged()
 T CPlayerLocalData::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_PlayerFog::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_PlayerFog::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_audio::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_audio::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_skybox3d::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_skybox3d::NetworkStateChanged(void*)
 T CPlayerLocalData::UpdateAreaBits(CBasePlayer*, unsigned char*)
 T CPlayerMove::CPlayerMove()
 T CPlayerMove::CheckMovingGround(CBasePlayer*, double)
 T CPlayerMove::FinishCommand(CBasePlayer*)
 T CPlayerMove::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CPlayerMove::RunCommand(CBasePlayer*, CUserCmd*, IMoveHelper*)
 T CPlayerMove::RunPostThink(CBasePlayer*)
 T CPlayerMove::RunPreThink(CBasePlayer*)
 T CPlayerMove::RunThink(CBasePlayer*, double)
 T CPlayerMove::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPlayerMove::StartCommand(CBasePlayer*, CUserCmd*)
 T CPlayerMove::~CPlayerMove()
 T CPlayerResource::GetDataDescMap()
 T CPlayerResource::GetServerClass()
 T CPlayerResource::ObjectCaps()
 T CPlayerResource::ResourceThink()
 T CPlayerResource::Spawn()
 T CPlayerResource::UpdatePlayerData()
 T CPlayerResource::UpdateTransmitState()
 T CPlayerResource::YouForgotToImplementOrDeclareServerClass()
 T CPlayerResource::~CPlayerResource()
 T CPlayerVoiceListener::AddPlayerSpeakTime(CBasePlayer*)
 T CPlayerVoiceListener::LevelInitPreEntity()
 T CPlayerVoiceListener::LevelShutdownPreEntity()
 T CPlayerVoiceListener::ScriptGetPlayerSpeechDuration(int)
 T CPlayerVoiceListener::ScriptIsPlayerSpeaking(int)
 T CPlayerVoiceListener::~CPlayerVoiceListener()
 T CPluginBotManager::CreateBot(char const*)
 T CPluginBotManager::GetBotController(edict_t*)
 T CPluginHelpersCheck::CreateMessage(char const*, edict_t*, DIALOG_TYPE, KeyValues*)
 T CPointAngleSensor* _CreateEntityTemplate<CPointAngleSensor>(CPointAngleSensor*, char const*)
 T CPointAngleSensor::Activate()
 T CPointAngleSensor::DrawDebugTextOverlays()
 T CPointAngleSensor::GetDataDescMap()
 T CPointAngleSensor::InputDisable(inputdata_t&)
 T CPointAngleSensor::InputEnable(inputdata_t&)
 T CPointAngleSensor::InputSetTargetEntity(inputdata_t&)
 T CPointAngleSensor::InputTest(inputdata_t&)
 T CPointAngleSensor::InputToggle(inputdata_t&)
 T CPointAngleSensor::IsFacingWithinTolerance(CBaseEntity*, CBaseEntity*, float, float*)
 T CPointAngleSensor::KeyValue(char const*, char const*)
 T CPointAngleSensor::Spawn()
 T CPointAngleSensor::Think()
 T CPointAngleSensor::~CPointAngleSensor()
 T CPointAngularVelocitySensor::Activate()
 T CPointAngularVelocitySensor::CompareToThreshold(CBaseEntity*, float, bool)
 T CPointAngularVelocitySensor::DrawDebugLines()
 T CPointAngularVelocitySensor::FireCompareOutput(int, CBaseEntity*)
 T CPointAngularVelocitySensor::GetDataDescMap()
 T CPointAngularVelocitySensor::InputTest(inputdata_t&)
 T CPointAngularVelocitySensor::InputTestWithInterval(inputdata_t&)
 T CPointAngularVelocitySensor::SampleAngularVelocity(CBaseEntity*)
 T CPointAngularVelocitySensor::Spawn()
 T CPointAngularVelocitySensor::Think()
 T CPointAngularVelocitySensor::~CPointAngularVelocitySensor()
 T CPointBonusMapsAccessor::Activate()
 T CPointBonusMapsAccessor::GetDataDescMap()
 T CPointBonusMapsAccessor::InputComplete(inputdata_t&)
 T CPointBonusMapsAccessor::InputSave(inputdata_t&)
 T CPointBonusMapsAccessor::InputUnlock(inputdata_t&)
 T CPointBonusMapsAccessor::~CPointBonusMapsAccessor()
 T CPointBroadcastClientCommand::GetDataDescMap()
 T CPointBroadcastClientCommand::InputCommand(inputdata_t&)
 T CPointBroadcastClientCommand::~CPointBroadcastClientCommand()
 T CPointCamera::ChangeFOVThink()
 T CPointCamera::GetDataDescMap()
 T CPointCamera::GetServerClass()
 T CPointCamera::InputChangeFOV(inputdata_t&)
 T CPointCamera::InputForceActive(inputdata_t&)
 T CPointCamera::InputForceInactive(inputdata_t&)
 T CPointCamera::InputSetOff(inputdata_t&)
 T CPointCamera::InputSetOn(inputdata_t&)
 T CPointCamera::InputSetOnAndTurnOthersOff(inputdata_t&)
 T CPointCamera::SetActive(bool)
 T CPointCamera::Spawn()
 T CPointCamera::UpdateTransmitState()
 T CPointCamera::YouForgotToImplementOrDeclareServerClass()
 T CPointCamera::~CPointCamera()
 T CPointClientCommand::GetDataDescMap()
 T CPointClientCommand::InputCommand(inputdata_t&)
 T CPointClientCommand::~CPointClientCommand()
 T CPointCommentaryNode::Activate()
 T CPointCommentaryNode::CPointCommentaryNode()
 T CPointCommentaryNode::CleanupPostCommentary()
 T CPointCommentaryNode::FinishCommentary(bool)
 T CPointCommentaryNode::GetDataDescMap()
 T CPointCommentaryNode::GetServerClass()
 T CPointCommentaryNode::InputDisable(inputdata_t&)
 T CPointCommentaryNode::InputEnable(inputdata_t&)
 T CPointCommentaryNode::InputStartCommentary(inputdata_t&)
 T CPointCommentaryNode::InputStartUnstoppableCommentary(inputdata_t&)
 T CPointCommentaryNode::Precache()
 T CPointCommentaryNode::SetDisabled(bool)
 T CPointCommentaryNode::SetNodeNumber(int)
 T CPointCommentaryNode::SetTransmit(CCheckTransmitInfo*, bool)
 T CPointCommentaryNode::SetUnderCrosshair(bool)
 T CPointCommentaryNode::Spawn()
 T CPointCommentaryNode::SpinThink()
 T CPointCommentaryNode::StartCommentary()
 T CPointCommentaryNode::TeleportTo(CBasePlayer*)
 T CPointCommentaryNode::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPointCommentaryNode::UpdateTransmitState()
 T CPointCommentaryNode::UpdateViewPostThink()
 T CPointCommentaryNode::UpdateViewThink()
 T CPointCommentaryNode::YouForgotToImplementOrDeclareServerClass()
 T CPointCommentaryNode::~CPointCommentaryNode()
 T CPointDevShotCamera::DevShotThink_PostShot()
 T CPointDevShotCamera::DevShotThink_Setup()
 T CPointDevShotCamera::DevShotThink_TakeShot()
 T CPointDevShotCamera::GetDataDescMap()
 T CPointDevShotCamera::Spawn()
 T CPointDevShotCamera::UpdateTransmitState()
 T CPointDevShotCamera::~CPointDevShotCamera()
 T CPointEntity::KeyValue(char const*, char const*)
 T CPointEntity::ObjectCaps()
 T CPointEntity::Spawn()
 T CPointEntity::~CPointEntity()
 T CPointEntityFinder::Activate()
 T CPointEntityFinder::FindByDistance()
 T CPointEntityFinder::FindByRandom()
 T CPointEntityFinder::FindEntity()
 T CPointEntityFinder::GetDataDescMap()
 T CPointEntityFinder::InputFindEntity(inputdata_t&)
 T CPointEntityFinder::~CPointEntityFinder()
 T CPointGamestatsCounter::GetDataDescMap()
 T CPointGamestatsCounter::InputDisable(inputdata_t&)
 T CPointGamestatsCounter::InputEnable(inputdata_t&)
 T CPointGamestatsCounter::InputIncrement(inputdata_t&)
 T CPointGamestatsCounter::InputSetName(inputdata_t&)
 T CPointGamestatsCounter::~CPointGamestatsCounter()
 T CPointHurt::GetDataDescMap()
 T CPointHurt::HurtThink()
 T CPointHurt::InputHurt(inputdata_t&)
 T CPointHurt::InputToggle(inputdata_t&)
 T CPointHurt::InputTurnOff(inputdata_t&)
 T CPointHurt::InputTurnOn(inputdata_t&)
 T CPointHurt::Precache()
 T CPointHurt::Spawn()
 T CPointHurt::~CPointHurt()
 T CPointPlayerMoveConstraint::Activate()
 T CPointPlayerMoveConstraint::ConstraintThink()
 T CPointPlayerMoveConstraint::GetDataDescMap()
 T CPointPlayerMoveConstraint::InputTurnOff(inputdata_t&)
 T CPointPlayerMoveConstraint::InputTurnOn(inputdata_t&)
 T CPointPlayerMoveConstraint::UpdateTransmitState()
 T CPointPlayerMoveConstraint::~CPointPlayerMoveConstraint()
 T CPointProximitySensor::Activate()
 T CPointProximitySensor::GetDataDescMap()
 T CPointProximitySensor::InputDisable(inputdata_t&)
 T CPointProximitySensor::InputEnable(inputdata_t&)
 T CPointProximitySensor::InputSetTargetEntity(inputdata_t&)
 T CPointProximitySensor::InputToggle(inputdata_t&)
 T CPointProximitySensor::Think()
 T CPointProximitySensor::~CPointProximitySensor()
 T CPointServerCommand::GetDataDescMap()
 T CPointServerCommand::InputCommand(inputdata_t&)
 T CPointServerCommand::~CPointServerCommand()
 T CPointSpotlight::Activate()
 T CPointSpotlight::ComputeRenderInfo()
 T CPointSpotlight::CreateEfficientSpotlight()
 T CPointSpotlight::GetDataDescMap()
 T CPointSpotlight::InputForceUpdate(inputdata_t&)
 T CPointSpotlight::InputLightOff(inputdata_t&)
 T CPointSpotlight::InputLightOn(inputdata_t&)
 T CPointSpotlight::InputSetColor(inputdata_t&)
 T CPointSpotlight::OnEntityEvent(EntityEvent_t, void*)
 T CPointSpotlight::Precache()
 T CPointSpotlight::Spawn()
 T CPointSpotlight::SpotlightCreate()
 T CPointSpotlight::SpotlightCurrentPos()
 T CPointSpotlight::SpotlightDestroy()
 T CPointSpotlight::SpotlightThink()
 T CPointSpotlight::SpotlightUpdate()
 T CPointSpotlight::UpdateTransmitState()
 T CPointSpotlight::~CPointSpotlight()
 T CPointTeleport::Activate()
 T CPointTeleport::DoTeleport(inputdata_t&, Vector const&, QAngle const&, bool)
 T CPointTeleport::GetDataDescMap()
 T CPointTeleport::InputTeleport(inputdata_t&)
 T CPointTeleport::InputTeleportEntity(inputdata_t&)
 T CPointTeleport::InputTeleportToCurrentPos(inputdata_t&)
 T CPointTeleport::ObjectCaps()
 T CPointTeleport::~CPointTeleport()
 T CPointTemplate::AddTemplate(CBaseEntity*, char const*, int)
 T CPointTemplate::AllowNameFixup()
 T CPointTemplate::CreateInstance(Vector const&, QAngle const&, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*, CBaseEntity*, bool)
 T CPointTemplate::CreationComplete(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > const&)
 T CPointTemplate::FinishBuildingTemplates()
 T CPointTemplate::GetDataDescMap()
 T CPointTemplate::GetNumTemplateEntities()
 T CPointTemplate::GetNumTemplates()
 T CPointTemplate::GetTemplateEntity(int)
 T CPointTemplate::GetTemplateIndexForTemplate(int)
 T CPointTemplate::InputForceSpawn(inputdata_t&)
 T CPointTemplate::PerformPrecache()
 T CPointTemplate::Precache()
 T CPointTemplate::ShouldRemoveTemplateEntities()
 T CPointTemplate::Spawn()
 T CPointTemplate::StartBuildingTemplates()
 T CPointTemplate::~CPointTemplate()
 T CPointTemplatePrecacher::LevelInitPreEntity()
 T CPointTemplatePrecacher::Shutdown()
 T CPointTemplatePrecacher::~CPointTemplatePrecacher()
 T CPointVelocitySensor::Activate()
 T CPointVelocitySensor::GetDataDescMap()
 T CPointVelocitySensor::InputDisable(inputdata_t&)
 T CPointVelocitySensor::InputEnable(inputdata_t&)
 T CPointVelocitySensor::SampleVelocity()
 T CPointVelocitySensor::Spawn()
 T CPointVelocitySensor::Think()
 T CPointVelocitySensor::~CPointVelocitySensor()
 T CPoseController::BuildPoseIndexList()
 T CPoseController::BuildPropList()
 T CPoseController::GetDataDescMap()
 T CPoseController::GetServerClass()
 T CPoseController::InputGetFMod(inputdata_t&)
 T CPoseController::InputRandomizeFMod(inputdata_t&)
 T CPoseController::InputSetCycleFrequency(inputdata_t&)
 T CPoseController::InputSetFModAmplitude(inputdata_t&)
 T CPoseController::InputSetFModRate(inputdata_t&)
 T CPoseController::InputSetFModTimeOffset(inputdata_t&)
 T CPoseController::InputSetFModType(inputdata_t&)
 T CPoseController::InputSetInterpolationTime(inputdata_t&)
 T CPoseController::InputSetPoseParameterName(inputdata_t&)
 T CPoseController::InputSetPoseValue(inputdata_t&)
 T CPoseController::RandomizeFMod(float)
 T CPoseController::SetCurrentPose(float)
 T CPoseController::SetCycleFrequency(float)
 T CPoseController::SetFModAmplitude(float)
 T CPoseController::SetFModRate(float)
 T CPoseController::SetFModTimeOffset(float)
 T CPoseController::SetFModType(int)
 T CPoseController::SetInterpolationTime(float)
 T CPoseController::SetPoseIndex(int, int)
 T CPoseController::SetPoseValue(float)
 T CPoseController::Spawn()
 T CPoseController::Think()
 T CPoseController::YouForgotToImplementOrDeclareServerClass()
 T CPoseController::~CPoseController()
 T CPostClientMessageManager::AddEntity(CBaseEntity*)
 T CPostClientMessageManager::~CPostClientMessageManager()
 T CPostFrameNavigationHook::EnqueueEntityNavigationQuery(CAI_BaseNPC*, CFunctor*)
 T CPostFrameNavigationHook::FrameUpdatePostEntityThink()
 T CPostFrameNavigationHook::FrameUpdatePreEntityThink()
 T CPostFrameNavigationHook::Init()
 T CPostFrameNavigationHook::Name()
 T CPostFrameNavigationHook::~CPostFrameNavigationHook()
 T CPostProcessController::Activate()
 T CPostProcessController::CPostProcessController()
 T CPostProcessController::GetDataDescMap()
 T CPostProcessController::GetServerClass()
 T CPostProcessController::InputSetDepthBlurFocalDistance(inputdata_t&)
 T CPostProcessController::InputSetDepthBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetFadeTime(inputdata_t&)
 T CPostProcessController::InputSetFadeToBlackStrength(inputdata_t&)
 T CPostProcessController::InputSetFilmGrainStrength(inputdata_t&)
 T CPostProcessController::InputSetLocalContrastEdgeStrength(inputdata_t&)
 T CPostProcessController::InputSetLocalContrastStrength(inputdata_t&)
 T CPostProcessController::InputSetScreenBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetVignetteBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetVignetteEnd(inputdata_t&)
 T CPostProcessController::InputSetVignetteStart(inputdata_t&)
 T CPostProcessController::NetworkVar_m_flPostProcessParameters::Set(int, float const&)
 T CPostProcessController::Spawn()
 T CPostProcessController::UpdateTransmitState()
 T CPostProcessController::YouForgotToImplementOrDeclareServerClass()
 T CPostProcessController::~CPostProcessController()
 T CPostProcessSystem::FireGameEvent(IGameEvent*)
 T CPostProcessSystem::InitMasterController()
 T CPostProcessSystem::LevelInitPostEntity()
 T CPostProcessSystem::LevelInitPreEntity()
 T CPostProcessSystem::~CPostProcessSystem()
 T CPreMatchInfoData::ByteSize() const
 T CPreMatchInfoData::Clear()
 T CPreMatchInfoData::GetCachedSize() const
 T CPreMatchInfoData::GetMetadata() const
 T CPreMatchInfoData::IsInitialized() const
 T CPreMatchInfoData::MergeFrom(CPreMatchInfoData const&)
 T CPreMatchInfoData::New() const
 T CPreMatchInfoData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CPreMatchInfoData::SetCachedSize(int) const
 T CPreMatchInfoData::~CPreMatchInfoData()
 T CPreMatchInfoData_TeamStats::ByteSize() const
 T CPreMatchInfoData_TeamStats::Clear()
 T CPreMatchInfoData_TeamStats::GetCachedSize() const
 T CPreMatchInfoData_TeamStats::GetMetadata() const
 T CPreMatchInfoData_TeamStats::IsInitialized() const
 T CPreMatchInfoData_TeamStats::MergeFrom(CPreMatchInfoData_TeamStats const&)
 T CPreMatchInfoData_TeamStats::New() const
 T CPreMatchInfoData_TeamStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CPreMatchInfoData_TeamStats::SetCachedSize(int) const
 T CPreMatchInfoData_TeamStats::~CPreMatchInfoData_TeamStats()
 T CPrecacheHandler::CacheResource(PrecacheResourceType_t, char const*, bool, ResourceList_t__*, int*)
 T CPrecacheHandler::CacheResourceFile(char const*, bool, ResourceList_t__*)
 T CPrecacheHandler::PrecachePhysicsSounds(char const*, bool, ResourceList_t__*)
 T CPrecacheOtherList::LevelInitPreEntity()
 T CPrecacheOtherList::LevelShutdownPostEntity()
 T CPrecacheOtherList::~CPrecacheOtherList()
 T CPrecacheRegister::Init()
 T CPrecacheRegister::IsPerFrame()
 T CPrecacheRegister::LevelInitPostEntity()
 T CPrecacheRegister::LevelInitPreEntity()
 T CPrecacheRegister::LevelShutdownPostEntity()
 T CPrecacheRegister::LevelShutdownPreEntity()
 T CPrecacheRegister::Name()
 T CPrecacheRegister::OnRestore()
 T CPrecacheRegister::OnSave()
 T CPrecacheRegister::PostInit()
 T CPrecacheRegister::SafeRemoveIfDesired()
 T CPrecacheRegister::Shutdown()
 T CPrecacheRegister::~CPrecacheRegister()
 T CPrecipitation::GetDataDescMap()
 T CPrecipitation::GetServerClass()
 T CPrecipitation::Spawn()
 T CPrecipitation::UpdateTransmitState()
 T CPrecipitation::YouForgotToImplementOrDeclareServerClass()
 T CPrecipitation::~CPrecipitation()
 T CPrecipitationBlocker::GetDataDescMap()
 T CPrecipitationBlocker::GetServerClass()
 T CPrecipitationBlocker::Spawn()
 T CPrecipitationBlocker::UpdateTransmitState()
 T CPrecipitationBlocker::YouForgotToImplementOrDeclareServerClass()
 T CPrecipitationBlocker::~CPrecipitationBlocker()
 T CPredictedViewModel::AddViewModelBob(CBasePlayer*, Vector&, QAngle&)
 T CPredictedViewModel::ApplyViewModelPitchAndDip(CBasePlayer*, Vector&, QAngle&)
 T CPredictedViewModel::CalcViewModelLag(Vector&, QAngle&, QAngle&)
 T CPredictedViewModel::CalcViewModelView(CBasePlayer*, Vector const&, QAngle const&)
 T CPredictedViewModel::GetServerClass()
 T CPredictedViewModel::YouForgotToImplementOrDeclareServerClass()
 T CPredictedViewModel::~CPredictedViewModel()
 T CProjectedDecal::Activate()
 T CProjectedDecal::GetDataDescMap()
 T CProjectedDecal::InputActivate(inputdata_t&)
 T CProjectedDecal::KeyValue(char const*, char const*)
 T CProjectedDecal::Spawn()
 T CProjectedDecal::StaticDecal()
 T CProjectedDecal::TriggerDecal(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CProjectedDecal::~CProjectedDecal()
 T CPropData::CPropData()
 T CPropData::GetRandomChunkModel(char const*, int)
 T CPropData::LevelInitPreEntity()
 T CPropData::LevelShutdownPostEntity()
 T CPropData::ParsePropDataFile()
 T CPropData::ParsePropFromBase(CBaseEntity*, IBreakableWithPropData*, char const*)
 T CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)
 T CPropData::~CPropData()
 T CPropDoorRotating::AngularMove(QAngle const&, float)
 T CPropDoorRotating::BeginClosing()
 T CPropDoorRotating::BeginOpening(CBaseEntity*)
 T CPropDoorRotating::CalculateDoorVolume(QAngle, QAngle, Vector*, Vector*)
 T CPropDoorRotating::CheckDoorClear(doorCheck_e)
 T CPropDoorRotating::ComputeDoorExtent(Extent*, unsigned int)
 T CPropDoorRotating::DoorCanClose(bool)
 T CPropDoorRotating::DoorResume()
 T CPropDoorRotating::DoorStop()
 T CPropDoorRotating::DoorTeleportToSpawnPosition()
 T CPropDoorRotating::DrawDebugTextOverlays()
 T CPropDoorRotating::GetDataDescMap()
 T CPropDoorRotating::GetNPCOpenData(CAI_BaseNPC*, opendata_t&)
 T CPropDoorRotating::GetOpenInterval()
 T CPropDoorRotating::GetServerClass()
 T CPropDoorRotating::InputMoveToRotationDistance(inputdata_t&)
 T CPropDoorRotating::InputSetRotationDistance(inputdata_t&)
 T CPropDoorRotating::InputSetSpeed(inputdata_t&)
 T CPropDoorRotating::IsHingeOnLeft()
 T CPropDoorRotating::MoveDone()
 T CPropDoorRotating::OnDoorClosed()
 T CPropDoorRotating::OnDoorOpened()
 T CPropDoorRotating::OnRestore()
 T CPropDoorRotating::OverridePropdata()
 T CPropDoorRotating::Spawn()
 T CPropDoorRotating::YouForgotToImplementOrDeclareServerClass()
 T CPropDoorRotating::~CPropDoorRotating()
 T CPropDoorRotatingBreakable::DrawDebugTextOverlays()
 T CPropDoorRotatingBreakable::Event_Killed(CTakeDamageInfo const&)
 T CPropDoorRotatingBreakable::GetDataDescMap()
 T CPropDoorRotatingBreakable::InputSetBreakable(inputdata_t&)
 T CPropDoorRotatingBreakable::InputSetUnbreakable(inputdata_t&)
 T CPropDoorRotatingBreakable::IsAbleToCloseAreaPortals() const
 T CPropDoorRotatingBreakable::OnDoorClosed()
 T CPropDoorRotatingBreakable::OnDoorOpened()
 T CPropDoorRotatingBreakable::OnTakeDamage(CTakeDamageInfo const&)
 T CPropDoorRotatingBreakable::Precache()
 T CPropDoorRotatingBreakable::PrecacheBreakables()
 T CPropDoorRotatingBreakable::Spawn()
 T CPropDoorRotatingBreakable::~CPropDoorRotatingBreakable()
 T CPropJeep::InputFinishRemoveTauCannon(inputdata_t&)
 T CPropJeep::InputStartRemoveTauCannon(inputdata_t&)
 T CPropVehicle::DampenEyePosition(Vector&, QAngle&)
 T CPropVehicle::DrawDebugGeometryOverlays()
 T CPropVehicle::DrawDebugTextOverlays()
 T CPropVehicle::GetDataDescMap()
 T CPropVehicle::GetSmoothedVelocity()
 T CPropVehicle::GetUprightStrength()
 T CPropVehicle::GetUprightTime()
 T CPropVehicle::HasPhysicsAttacker(float)
 T CPropVehicle::InputAction(inputdata_t&)
 T CPropVehicle::InputHandBrakeOff(inputdata_t&)
 T CPropVehicle::InputHandBrakeOn(inputdata_t&)
 T CPropVehicle::InputSteering(inputdata_t&)
 T CPropVehicle::InputThrottle(inputdata_t&)
 T CPropVehicle::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropVehicle::Precache()
 T CPropVehicle::Restore(IRestore&)
 T CPropVehicle::Spawn()
 T CPropVehicle::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CPropVehicle::Think()
 T CPropVehicle::VPhysicsUpdate(IPhysicsObject*)
 T CPropVehicle::~CPropVehicle()
 T CPropVehicleDriveable::AllowBlockedExit(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::AllowMidairExit(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::CPropVehicleDriveable()
 T CPropVehicleDriveable::CanEnterVehicle(CBaseEntity*)
 T CPropVehicleDriveable::CanExitVehicle(CBaseEntity*)
 T CPropVehicleDriveable::CreateServerVehicle()
 T CPropVehicleDriveable::DriveVehicle(float, CUserCmd*, int, int)
 T CPropVehicleDriveable::EnterVehicle(CBaseCombatCharacter*)
 T CPropVehicleDriveable::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CPropVehicleDriveable::ExitVehicle(int)
 T CPropVehicleDriveable::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CPropVehicleDriveable::GetDataDescMap()
 T CPropVehicleDriveable::GetDriver()
 T CPropVehicleDriveable::GetServerClass()
 T CPropVehicleDriveable::GetServerVehicle()
 T CPropVehicleDriveable::GetVectors(Vector*, Vector*, Vector*) const
 T CPropVehicleDriveable::GetVehicleScriptName()
 T CPropVehicleDriveable::InputLock(inputdata_t&)
 T CPropVehicleDriveable::InputTurnOff(inputdata_t&)
 T CPropVehicleDriveable::InputTurnOn(inputdata_t&)
 T CPropVehicleDriveable::InputUnlock(inputdata_t&)
 T CPropVehicleDriveable::IsOverturned()
 T CPropVehicleDriveable::IsVehicleBodyInWater()
 T CPropVehicleDriveable::ItemPostFrame(CBasePlayer*)
 T CPropVehicleDriveable::NPC_AddPassenger(CAI_BaseNPC*, string_t, int)
 T CPropVehicleDriveable::NPC_CanEnterVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_CanExitVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_FinishedEnterVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_FinishedExitVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_RemovePassenger(CAI_BaseNPC*)
 T CPropVehicleDriveable::ObjectCaps()
 T CPropVehicleDriveable::OnRestore()
 T CPropVehicleDriveable::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T CPropVehicleDriveable::PreExitVehicle(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::Precache()
 T CPropVehicleDriveable::ProcessMovement(CBasePlayer*, CMoveData*)
 T CPropVehicleDriveable::Restore(IRestore&)
 T CPropVehicleDriveable::SetVehicleEntryAnim(bool)
 T CPropVehicleDriveable::SetVehicleExitAnim(bool, Vector)
 T CPropVehicleDriveable::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPropVehicleDriveable::ShouldThink()
 T CPropVehicleDriveable::Spawn()
 T CPropVehicleDriveable::Think()
 T CPropVehicleDriveable::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CPropVehicleDriveable::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropVehicleDriveable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropVehicleDriveable::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CPropVehicleDriveable::VehicleAngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T CPropVehicleDriveable::YouForgotToImplementOrDeclareServerClass()
 T CPropVehicleDriveable::~CPropVehicleDriveable()
 T CProp_Hallucination::DrawDebugTextOverlays()
 T CProp_Hallucination::GetDataDescMap()
 T CProp_Hallucination::GetServerClass()
 T CProp_Hallucination::InputDisable(inputdata_t&)
 T CProp_Hallucination::InputEnable(inputdata_t&)
 T CProp_Hallucination::InputSetRechargeTime(inputdata_t&)
 T CProp_Hallucination::InputSetVisibleTime(inputdata_t&)
 T CProp_Hallucination::Precache()
 T CProp_Hallucination::Spawn()
 T CProp_Hallucination::YouForgotToImplementOrDeclareServerClass()
 T CProp_Hallucination::~CProp_Hallucination()
 T CProportionalFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProtobufLogHandler::~CProtobufLogHandler()
 T CPublishedFileInfoHTTPRequest::CreateHTTPRequest(char const*)
 T CPublishedFileInfoHTTPRequest::ProcessHTTPResponse(KeyValues*)
 T CPublishedFileInfoHTTPRequest::~CPublishedFileInfoHTTPRequest()
 T CPushAwayEnumerator::EnumElement(IHandleEntity*)
 T CPushBlockerEnum::CPushBlockerEnum(CPhysicsPushedEntities*)
 T CPushBlockerEnum::EnumElement(IHandleEntity*)
 T CPushBlockerEnum::GetPushableEntity(IHandleEntity*)
 T CPushBlockerEnum::IntersectsPushers(CBaseEntity*)
 T CPushable::CreateVPhysics()
 T CPushable::ObjectCaps()
 T CPushable::OnTakeDamage(CTakeDamageInfo const&)
 T CPushable::PhysicsSolidMaskForEntity() const
 T CPushable::Spawn()
 T CPushable::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPushable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPushable::~CPushable()
 T CQueuedMatchmakingRematch::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CQueuedMatchmakingRematch::ExecuteCommand()
 T CQueuedMatchmakingRematch::GetDisplayString()
 T CQueuedMatchmakingRematch::GetVoteIssue()
 T CQueuedMatchmakingRematch::GetVotePassedString()
 T CQueuedMatchmakingRematch::IsAllyRestrictedVote()
 T CQueuedMatchmakingRematch::IsEnabled()
 T CQueuedMatchmakingRematch::IsEnabledInQueuedMatchmaking()
 T CQueuedMatchmakingRematch::ListIssueDetails(CBasePlayer*)
 T CQueuedMatchmakingRematch::MakeVoteFailErrorCodeForClients(vote_create_failed_t)
 T CQueuedMatchmakingRematch::OnVoteFailed()
 T CQueuedMatchmakingRematch::OnVoteStarted()
 T CQueuedMatchmakingRematch::~CQueuedMatchmakingRematch()
 T CRC32_Final(unsigned long*)
 T CRC32_Init(unsigned long*)
 T CRC32_ProcessBuffer(unsigned long*, void const*, int)
 T CRTime::RTime32FromFmtString(char const*, char const*)
 T CRTime::UpdateRealTime()
 T CRagGib::Spawn(char const*, Vector const&, Vector const&, float)
 T CRagGib::~CRagGib()
 T CRagdollBoogie::AttachToEntity(CBaseEntity*)
 T CRagdollBoogie::BoogieThink()
 T CRagdollBoogie::Create(CBaseEntity*, float, float, float, int)
 T CRagdollBoogie::DecrementSuppressionCount(CBaseEntity*)
 T CRagdollBoogie::GetDataDescMap()
 T CRagdollBoogie::IncrementSuppressionCount(CBaseEntity*)
 T CRagdollBoogie::Precache()
 T CRagdollBoogie::Spawn()
 T CRagdollBoogie::ZapThink()
 T CRagdollBoogie::~CRagdollBoogie()
 T CRagdollConstraint::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CRagdollConstraint::GetDataDescMap()
 T CRagdollConstraint::~CRagdollConstraint()
 T CRagdollLRURetirement::FrameUpdatePostEntityThink()
 T CRagdollLRURetirement::LevelInitPreEntity()
 T CRagdollLRURetirement::MoveToTopOfLRU(CBaseAnimating*, bool, float)
 T CRagdollLRURetirement::Update(float)
 T CRagdollLRURetirement::~CRagdollLRURetirement()
 T CRagdollLowViolenceManager::SetLowViolence(char const*)
 T CRagdollMagnet::DistToPoint(Vector const&)
 T CRagdollMagnet::FindBestMagnet(CBaseEntity*)
 T CRagdollMagnet::GetDataDescMap()
 T CRagdollMagnet::GetForceVector(CBaseEntity*)
 T CRagdollMagnet::InputDisable(inputdata_t&)
 T CRagdollMagnet::InputEnable(inputdata_t&)
 T CRagdollMagnet::~CRagdollMagnet()
 T CRagdollManager::Activate()
 T CRagdollManager::CRagdollManager()
 T CRagdollManager::DrawDebugTextOverlays()
 T CRagdollManager::GetDataDescMap()
 T CRagdollManager::GetServerClass()
 T CRagdollManager::InputSetMaxRagdollCount(inputdata_t&)
 T CRagdollManager::UpdateCurrentMaxRagDollCount()
 T CRagdollManager::UpdateTransmitState()
 T CRagdollManager::YouForgotToImplementOrDeclareServerClass()
 T CRagdollManager::~CRagdollManager()
 T CRagdollProp::ClearFlagsThink()
 T CRagdollProp::DrawDebugGeometryOverlays()
 T CRagdollProp::DrawDebugTextOverlays()
 T CRagdollProp::FadeOutThink()
 T CRagdollProp::GetAngleOverrideFromCurrentState(char*, int)
 T CRagdollProp::GetDataDescMap()
 T CRagdollProp::GetResponseSystem()
 T CRagdollProp::GetServerClass()
 T CRagdollProp::HandleFirstCollisionInteractions(int, gamevcollisionevent_t*)
 T CRagdollProp::HasPhysgunInteraction(char const*, char const*)
 T CRagdollProp::HasPhysicsAttacker(float)
 T CRagdollProp::InitRagdoll(Vector const&, int, Vector const&, matrix3x4_t*, matrix3x4_t*, float, int, bool, bool)
 T CRagdollProp::InitRagdollAnimation()
 T CRagdollProp::InputDisableMotion(inputdata_t&)
 T CRagdollProp::InputEnableMotion(inputdata_t&)
 T CRagdollProp::InputFadeAndRemove(inputdata_t&)
 T CRagdollProp::InputStartRadgollBoogie(inputdata_t&)
 T CRagdollProp::InputTurnOff(inputdata_t&)
 T CRagdollProp::InputTurnOn(inputdata_t&)
 T CRagdollProp::IsAlive()
 T CRagdollProp::IsRagdoll()
 T CRagdollProp::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CRagdollProp::ObjectCaps()
 T CRagdollProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CRagdollProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CRagdollProp::OnRestore()
 T CRagdollProp::OnSave(IEntitySaveUtils*)
 T CRagdollProp::OnTakeDamage(CTakeDamageInfo const&)
 T CRagdollProp::PhysGunLaunchAngularImpulse()
 T CRagdollProp::Precache()
 T CRagdollProp::SetDamageEntity(CBaseEntity*)
 T CRagdollProp::SetDebrisThink()
 T CRagdollProp::SetupBones(matrix3x4a_t*, int)
 T CRagdollProp::Spawn()
 T CRagdollProp::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CRagdollProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CRagdollProp::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CRagdollProp::UpdateNetworkDataFromVPhysics(IPhysicsObject*, int)
 T CRagdollProp::UpdateOnRemove()
 T CRagdollProp::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CRagdollProp::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CRagdollProp::VPhysicsUpdate(IPhysicsObject*)
 T CRagdollProp::YouForgotToImplementOrDeclareServerClass()
 T CRagdollProp::~CRagdollProp()
 T CRagdollPropAttached::Detach()
 T CRagdollPropAttached::GetDataDescMap()
 T CRagdollPropAttached::GetServerClass()
 T CRagdollPropAttached::InitRagdollAttached(IPhysicsObject*, Vector const&, int, matrix3x4_t*, matrix3x4_t*, float, int, CBaseAnimating*, int, Vector const&, int, Vector const&)
 T CRagdollPropAttached::VPhysicsUpdate(IPhysicsObject*)
 T CRagdollPropAttached::YouForgotToImplementOrDeclareServerClass()
 T CRagdollPropAttached::~CRagdollPropAttached()
 T CRallyPoint::DrawDebugTextOverlays()
 T CRallyPoint::GetDataDescMap()
 T CRallyPoint::~CRallyPoint()
 T CReadyForMatchIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CReadyForMatchIssue::ExecuteCommand()
 T CReadyForMatchIssue::GetDisplayString()
 T CReadyForMatchIssue::GetFailedVoteLockOutTime()
 T CReadyForMatchIssue::GetVoteIssue()
 T CReadyForMatchIssue::GetVotePassedString()
 T CReadyForMatchIssue::IsEnabled()
 T CReadyForMatchIssue::IsEnabledDuringWarmup()
 T CReadyForMatchIssue::IsEnabledInQueuedMatchmaking()
 T CReadyForMatchIssue::IsUnanimousVoteToPass()
 T CReadyForMatchIssue::ListIssueDetails(CBasePlayer*)
 T CReadyForMatchIssue::ShouldIgnoreCreationTimer()
 T CReadyForMatchIssue::~CReadyForMatchIssue()
 T CRecipientFilter::AddAllPlayers()
 T CRecipientFilter::AddRecipient(CBasePlayer*)
 T CRecipientFilter::AddRecipientsByPAS(Vector const&)
 T CRecipientFilter::AddRecipientsByPVS(Vector const&)
 T CRecipientFilter::AddRecipientsByTeam(CTeam*)
 T CRecipientFilter::CRecipientFilter()
 T CRecipientFilter::CopyFrom(CRecipientFilter const&)
 T CRecipientFilter::GetRecipientCount() const
 T CRecipientFilter::GetRecipientIndex(int) const
 T CRecipientFilter::IgnorePredictionCull() const
 T CRecipientFilter::IsInitMessage() const
 T CRecipientFilter::IsReliable() const
 T CRecipientFilter::MakeInitMessage()
 T CRecipientFilter::MakeReliable()
 T CRecipientFilter::RemoveAllRecipients()
 T CRecipientFilter::RemovePlayersFromBitMask(CBitVec<255>&)
 T CRecipientFilter::RemoveRecipient(CBasePlayer*)
 T CRecipientFilter::RemoveRecipientByPlayerIndex(int)
 T CRecipientFilter::RemoveRecipientsByPVS(Vector const&)
 T CRecipientFilter::RemoveRecipientsByTeam(CTeam*)
 T CRecipientFilter::RemoveRecipientsNotOnTeam(CTeam*)
 T CRecipientFilter::RemoveSplitScreenPlayers()
 T CRecipientFilter::Reset()
 T CRecipientFilter::SetIgnorePredictionCull(bool)
 T CRecipientFilter::UsePredictionRules()
 T CRecipientFilter::~CRecipientFilter()
 T CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRegistry::DirectInit(char const*)
 T CRegistry::Init(char const*)
 T CRegistry::ReadInt(char const*, char const*, int)
 T CRegistry::ReadInt(char const*, int)
 T CRegistry::ReadString(char const*, char const*)
 T CRegistry::ReadString(char const*, char const*, char const*)
 T CRegistry::Shutdown()
 T CRegistry::WriteInt(char const*, char const*, int)
 T CRegistry::WriteInt(char const*, int)
 T CRegistry::WriteString(char const*, char const*)
 T CRegistry::WriteString(char const*, char const*, char const*)
 T CRegistry::~CRegistry()
 T CReliableBroadcastRecipientFilter::~CReliableBroadcastRecipientFilter()
 T CRemarkableEntityList::LevelShutdownPostEntity()
 T CRemarkableEntityList::~CRemarkableEntityList()
 T CRespawnEntitiesFilter::CreateNextEntity(char const*)
 T CRespawnEntitiesFilter::ShouldCreateEntity(char const*)
 T CResponseQueue::Add(CAI_Concept const&, ResponseRules::CriteriaSet const*, float, CResponseQueue::CFollowupTargetSpec_t const&, CBaseEntity*)
 T CResponseQueue::AddExpresserHost(CBaseEntity*)
 T CResponseQueue::CResponseQueue(int)
 T CResponseQueue::DispatchOneResponse(CResponseQueue::CDeferredResponse&)
 T CResponseQueue::DispatchOneResponse_ThenANY(CResponseQueue::CDeferredResponse&, ResponseRules::CriteriaSet*, CBaseEntity*, float)
 T CResponseQueue::PerFrameDispatch()
 T CResponseQueue::RemoveExpresserHost(CBaseEntity*)
 T CResponseQueue::RemoveSpeechQueuedFor(CBaseEntity const*)
 T CResponseQueueManager::FrameUpdatePostEntityThink()
 T CResponseQueueManager::LevelInitPreEntity()
 T CResponseQueueManager::Shutdown()
 T CResponseQueueManager::~CResponseQueueManager()
 T CResponseRulesToEngineInterface::FreeFile(unsigned char*)
 T CResponseRulesToEngineInterface::GetCommandLine()
 T CResponseRulesToEngineInterface::GetFilesystem()
 T CResponseRulesToEngineInterface::GetRandomStream()
 T CResponseRulesToEngineInterface::LoadFileForMe(char const*, int*)
 T CResponseRulesToEngineInterface::ParseFile(char const*, char*, int)
 T CRestartGameIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CRestartGameIssue::ExecuteCommand()
 T CRestartGameIssue::GetDisplayString()
 T CRestartGameIssue::GetVoteIssue()
 T CRestartGameIssue::GetVotePassedString()
 T CRestartGameIssue::IsAllyRestrictedVote()
 T CRestartGameIssue::IsEnabled()
 T CRestartGameIssue::ListIssueDetails(CBasePlayer*)
 T CRestartGameIssue::~CRestartGameIssue()
 T CRestore::CRestore(CSaveRestoreData*)
 T CRestore::DoReadAll(void*, datamap_t*, datamap_t*)
 T CRestore::EmptyFields(void*, typedescription_t*, int)
 T CRestore::EndBlock()
 T CRestore::GetGameSaveRestoreInfo()
 T CRestore::GetPrecacheMode()
 T CRestore::GetReadPos() const
 T CRestore::ReadAll(void*, datamap_t*)
 T CRestore::ReadBasicField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadBool(bool*, int, int)
 T CRestore::ReadData(char*, int, int)
 T CRestore::ReadEHandle(CHandle<CBaseEntity>*, int, int)
 T CRestore::ReadEdictPtr(edict_t**, int, int)
 T CRestore::ReadEntityPtr(CBaseEntity**, int, int)
 T CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)
 T CRestore::ReadFloat(float*, int, int)
 T CRestore::ReadFunction(datamap_t*, void (CBaseEntity::**)(inputdata_t&), int, int)
 T CRestore::ReadGameField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadHeader(SaveRestoreRecordHeader_t*)
 T CRestore::ReadInt()
 T CRestore::ReadInt(int*, int, int)
 T CRestore::ReadMatrix3x4Worldspace(matrix3x4_t*, int, int)
 T CRestore::ReadPositionVector(Vector*)
 T CRestore::ReadPositionVector(Vector*, int, int)
 T CRestore::ReadQuaternion(Quaternion*)
 T CRestore::ReadQuaternion(Quaternion*, int, int)
 T CRestore::ReadShort()
 T CRestore::ReadShort(short*, int, int)
 T CRestore::ReadString(char*, int, int)
 T CRestore::ReadString(string_t*, int, int)
 T CRestore::ReadTick(int*, int, int)
 T CRestore::ReadTime(float*, int, int)
 T CRestore::ReadVMatrix(VMatrix*, int, int)
 T CRestore::ReadVMatrixWorldspace(VMatrix*, int, int)
 T CRestore::ReadVector(Vector*)
 T CRestore::ReadVector(Vector*, int, int)
 T CRestore::ScanAheadForHammerID()
 T CRestore::SetReadPos(int)
 T CRestore::SkipEntityData()
 T CRestore::SkipHeader()
 T CRestore::StartBlock()
 T CRestore::StartBlock(SaveRestoreRecordHeader_t*)
 T CRestore::StartBlock(char*)
 T CRestore::StringFromHeaderSymbol(int)
 T CRestore::~CRestore()
 T CRevertSaved::GetDataDescMap()
 T CRevertSaved::InputReload(inputdata_t&)
 T CRevertSaved::LoadThink()
 T CRevertSaved::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CRevertSaved::~CRevertSaved()
 T CRopeAnchor::FallThink()
 T CRopeAnchor::GetDataDescMap()
 T CRopeAnchor::RemoveThink()
 T CRopeAnchor::Spawn()
 T CRopeAnchor::~CRopeAnchor()
 T CRopeKeyframe::Activate()
 T CRopeKeyframe::Break()
 T CRopeKeyframe::CRopeKeyframe()
 T CRopeKeyframe::CreateWithSecondPointDetached(CBaseEntity*, int, int, int, char const*, int, bool, char const*)
 T CRopeKeyframe::DetachPoint(int)
 T CRopeKeyframe::EndpointsChanged()
 T CRopeKeyframe::GetDataDescMap()
 T CRopeKeyframe::GetEndPointPos(int, Vector&)
 T CRopeKeyframe::GetServerClass()
 T CRopeKeyframe::Init()
 T CRopeKeyframe::InputBreak(inputdata_t&)
 T CRopeKeyframe::InputSetForce(inputdata_t&)
 T CRopeKeyframe::InputSetScrollSpeed(inputdata_t&)
 T CRopeKeyframe::KeyValue(char const*, char const*)
 T CRopeKeyframe::NotifyPositionChanged(CBaseEntity*)
 T CRopeKeyframe::ObjectCaps()
 T CRopeKeyframe::OnTakeDamage(CTakeDamageInfo const&)
 T CRopeKeyframe::Precache()
 T CRopeKeyframe::PrecacheShakeRopes()
 T CRopeKeyframe::PropagateForce(CBaseEntity*, CBaseEntity*, CBaseEntity*, float, float, float)
 T CRopeKeyframe::RecalculateLength()
 T CRopeKeyframe::SetAttachmentPoint(CBaseHandle&, short&, CBaseEntity*, int)
 T CRopeKeyframe::SetEndPoint(CBaseEntity*, int)
 T CRopeKeyframe::SetParent(CBaseEntity*, int)
 T CRopeKeyframe::SetStartPoint(CBaseEntity*, int)
 T CRopeKeyframe::SetTransmit(CCheckTransmitInfo*, bool)
 T CRopeKeyframe::ShakeRopes(Vector const&, float, float)
 T CRopeKeyframe::Spawn()
 T CRopeKeyframe::UpdateBBox(bool)
 T CRopeKeyframe::UpdateTransmitState()
 T CRopeKeyframe::YouForgotToImplementOrDeclareServerClass()
 T CRopeKeyframe::~CRopeKeyframe()
 T CRotButton* _CreateEntityTemplate<CRotButton>(CRotButton*, char const*)
 T CRotButton::CreateVPhysics()
 T CRotButton::Spawn()
 T CRotButton::~CRotButton()
 T CRotDoor::CreateVPhysics()
 T CRotDoor::GetDataDescMap()
 T CRotDoor::IsRotatingDoor()
 T CRotDoor::SetToggleState(int)
 T CRotDoor::Spawn()
 T CRotDoor::~CRotDoor()
 T CRotorWashShooter::DoWashPush(float, Vector const&)
 T CRotorWashShooter::GetDataDescMap()
 T CRotorWashShooter::Spawn()
 T CRotorWashShooter::~CRotorWashShooter()
 T CRuleBrushEntity::Spawn()
 T CRulePointEntity::GetDataDescMap()
 T CRulePointEntity::Spawn()
 T CSCAR17::GetServerClass()
 T CSCAR17::YouForgotToImplementOrDeclareServerClass()
 T CSCAR17::~CSCAR17()
 T CSGameState::AreAllHostagesBeingRescued() const
 T CSGameState::AreAllHostagesGone() const
 T CSGameState::CSGameState(CCSBot*)
 T CSGameState::ClearBombsite(int)
 T CSGameState::GetBombPosition() const
 T CSGameState::GetNearestFreeHostage(Vector*) const
 T CSGameState::GetNearestVisibleFreeHostage() const
 T CSGameState::GetNextBombsiteToSearch()
 T CSGameState::GetPlantedBombsite() const
 T CSGameState::GetRandomFreeHostagePosition() const
 T CSGameState::InitializeHostageInfo()
 T CSGameState::IsAtPlantedBombsite() const
 T CSGameState::IsBombsiteClear(int) const
 T CSGameState::IsLooseBombLocationKnown() const
 T CSGameState::IsPlantedBombLocationKnown() const
 T CSGameState::IsRoundOver() const
 T CSGameState::MarkBombsiteAsPlanted(int)
 T CSGameState::OnBombDefused(IGameEvent*)
 T CSGameState::OnBombExploded(IGameEvent*)
 T CSGameState::OnBombPlanted(IGameEvent*)
 T CSGameState::OnHostageRescuedAll(IGameEvent*)
 T CSGameState::OnRoundEnd(IGameEvent*)
 T CSGameState::OnRoundStart(IGameEvent*)
 T CSGameState::Reset()
 T CSGameState::UpdateBomber(Vector const&)
 T CSGameState::UpdateLooseBomb(Vector const&)
 T CSGameState::UpdatePlantedBomb(Vector const&)
 T CSGameState::ValidateHostagePositions()
 T CSInventoryManager()
 T CSNavMesh::BeginCustomAnalysis(bool)
 T CSNavMesh::CSNavMesh()
 T CSNavMesh::CreateArea() const
 T CSNavMesh::EndCustomAnalysis()
 T CSNavMesh::GetSubVersionNumber() const
 T CSNavMesh::IsMeshVisibilityGenerated() const
 T CSNavMesh::IsSpawnBlockedByTrigger(Vector)
 T CSNavMesh::Load()
 T CSNavMesh::LoadCustomData(CUtlBuffer&, unsigned int)
 T CSNavMesh::MaintainChickenPopulation()
 T CSNavMesh::MaintainDMSpawnPopulation()
 T CSNavMesh::PostCustomAnalysis()
 T CSNavMesh::PostLoad(unsigned int)
 T CSNavMesh::Reset()
 T CSNavMesh::Save() const
 T CSNavMesh::SaveCustomData(CUtlBuffer&) const
 T CSNavMesh::Update()
 T CSNavMesh::~CSNavMesh()
 T CSOEconClaimCode::ByteSize() const
 T CSOEconClaimCode::Clear()
 T CSOEconClaimCode::GetCachedSize() const
 T CSOEconClaimCode::GetMetadata() const
 T CSOEconClaimCode::IsInitialized() const
 T CSOEconClaimCode::MergeFrom(CSOEconClaimCode const&)
 T CSOEconClaimCode::New() const
 T CSOEconClaimCode::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconClaimCode::SetCachedSize(int) const
 T CSOEconClaimCode::~CSOEconClaimCode()
 T CSOEconDefaultEquippedDefinitionInstanceClient::ByteSize() const
 T CSOEconDefaultEquippedDefinitionInstanceClient::CSOEconDefaultEquippedDefinitionInstanceClient()
 T CSOEconDefaultEquippedDefinitionInstanceClient::Clear()
 T CSOEconDefaultEquippedDefinitionInstanceClient::GetCachedSize() const
 T CSOEconDefaultEquippedDefinitionInstanceClient::GetMetadata() const
 T CSOEconDefaultEquippedDefinitionInstanceClient::IsInitialized() const
 T CSOEconDefaultEquippedDefinitionInstanceClient::MergeFrom(CSOEconDefaultEquippedDefinitionInstanceClient const&)
 T CSOEconDefaultEquippedDefinitionInstanceClient::New() const
 T CSOEconDefaultEquippedDefinitionInstanceClient::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconDefaultEquippedDefinitionInstanceClient::SetCachedSize(int) const
 T CSOEconDefaultEquippedDefinitionInstanceClient::~CSOEconDefaultEquippedDefinitionInstanceClient()
 T CSOEconGameAccountClient::ByteSize() const
 T CSOEconGameAccountClient::Clear()
 T CSOEconGameAccountClient::GetCachedSize() const
 T CSOEconGameAccountClient::GetMetadata() const
 T CSOEconGameAccountClient::IsInitialized() const
 T CSOEconGameAccountClient::MergeFrom(CSOEconGameAccountClient const&)
 T CSOEconGameAccountClient::New() const
 T CSOEconGameAccountClient::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconGameAccountClient::SetCachedSize(int) const
 T CSOEconGameAccountClient::~CSOEconGameAccountClient()
 T CSOEconItem::ByteSize() const
 T CSOEconItem::CSOEconItem()
 T CSOEconItem::Clear()
 T CSOEconItem::GetCachedSize() const
 T CSOEconItem::GetMetadata() const
 T CSOEconItem::IsInitialized() const
 T CSOEconItem::MergeFrom(CSOEconItem const&)
 T CSOEconItem::New() const
 T CSOEconItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItem::SetCachedSize(int) const
 T CSOEconItem::SharedDtor()
 T CSOEconItem::~CSOEconItem()
 T CSOEconItemAttribute::ByteSize() const
 T CSOEconItemAttribute::CSOEconItemAttribute()
 T CSOEconItemAttribute::Clear()
 T CSOEconItemAttribute::GetCachedSize() const
 T CSOEconItemAttribute::GetMetadata() const
 T CSOEconItemAttribute::IsInitialized() const
 T CSOEconItemAttribute::MergeFrom(CSOEconItemAttribute const&)
 T CSOEconItemAttribute::New() const
 T CSOEconItemAttribute::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemAttribute::SetCachedSize(int) const
 T CSOEconItemAttribute::~CSOEconItemAttribute()
 T CSOEconItemDropRateBonus::ByteSize() const
 T CSOEconItemDropRateBonus::CSOEconItemDropRateBonus()
 T CSOEconItemDropRateBonus::Clear()
 T CSOEconItemDropRateBonus::GetCachedSize() const
 T CSOEconItemDropRateBonus::GetMetadata() const
 T CSOEconItemDropRateBonus::IsInitialized() const
 T CSOEconItemDropRateBonus::MergeFrom(CSOEconItemDropRateBonus const&)
 T CSOEconItemDropRateBonus::New() const
 T CSOEconItemDropRateBonus::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemDropRateBonus::SetCachedSize(int) const
 T CSOEconItemDropRateBonus::~CSOEconItemDropRateBonus()
 T CSOEconItemEquipped::ByteSize() const
 T CSOEconItemEquipped::CSOEconItemEquipped()
 T CSOEconItemEquipped::Clear()
 T CSOEconItemEquipped::GetCachedSize() const
 T CSOEconItemEquipped::GetMetadata() const
 T CSOEconItemEquipped::IsInitialized() const
 T CSOEconItemEquipped::MergeFrom(CSOEconItemEquipped const&)
 T CSOEconItemEquipped::New() const
 T CSOEconItemEquipped::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemEquipped::SetCachedSize(int) const
 T CSOEconItemEquipped::~CSOEconItemEquipped()
 T CSOEconItemEventTicket::ByteSize() const
 T CSOEconItemEventTicket::CSOEconItemEventTicket()
 T CSOEconItemEventTicket::Clear()
 T CSOEconItemEventTicket::GetCachedSize() const
 T CSOEconItemEventTicket::GetMetadata() const
 T CSOEconItemEventTicket::IsInitialized() const
 T CSOEconItemEventTicket::MergeFrom(CSOEconItemEventTicket const&)
 T CSOEconItemEventTicket::New() const
 T CSOEconItemEventTicket::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemEventTicket::SetCachedSize(int) const
 T CSOEconItemEventTicket::~CSOEconItemEventTicket()
 T CSOEconItemLeagueViewPass::ByteSize() const
 T CSOEconItemLeagueViewPass::Clear()
 T CSOEconItemLeagueViewPass::GetCachedSize() const
 T CSOEconItemLeagueViewPass::GetMetadata() const
 T CSOEconItemLeagueViewPass::IsInitialized() const
 T CSOEconItemLeagueViewPass::MergeFrom(CSOEconItemLeagueViewPass const&)
 T CSOEconItemLeagueViewPass::New() const
 T CSOEconItemLeagueViewPass::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemLeagueViewPass::SetCachedSize(int) const
 T CSOEconItemLeagueViewPass::~CSOEconItemLeagueViewPass()
 T CSOEconItemPresetInstance::ByteSize() const
 T CSOEconItemPresetInstance::Clear()
 T CSOEconItemPresetInstance::GetCachedSize() const
 T CSOEconItemPresetInstance::GetMetadata() const
 T CSOEconItemPresetInstance::IsInitialized() const
 T CSOEconItemPresetInstance::MergeFrom(CSOEconItemPresetInstance const&)
 T CSOEconItemPresetInstance::New() const
 T CSOEconItemPresetInstance::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemPresetInstance::SetCachedSize(int) const
 T CSOEconItemPresetInstance::~CSOEconItemPresetInstance()
 T CSOItemCriteria::ByteSize() const
 T CSOItemCriteria::CSOItemCriteria()
 T CSOItemCriteria::Clear()
 T CSOItemCriteria::GetCachedSize() const
 T CSOItemCriteria::GetMetadata() const
 T CSOItemCriteria::IsInitialized() const
 T CSOItemCriteria::MergeFrom(CSOItemCriteria const&)
 T CSOItemCriteria::New() const
 T CSOItemCriteria::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemCriteria::SetCachedSize(int) const
 T CSOItemCriteria::~CSOItemCriteria()
 T CSOItemCriteriaCondition::ByteSize() const
 T CSOItemCriteriaCondition::CSOItemCriteriaCondition()
 T CSOItemCriteriaCondition::Clear()
 T CSOItemCriteriaCondition::GetCachedSize() const
 T CSOItemCriteriaCondition::GetMetadata() const
 T CSOItemCriteriaCondition::IsInitialized() const
 T CSOItemCriteriaCondition::MergeFrom(CSOItemCriteriaCondition const&)
 T CSOItemCriteriaCondition::New() const
 T CSOItemCriteriaCondition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemCriteriaCondition::SetCachedSize(int) const
 T CSOItemCriteriaCondition::SharedDtor()
 T CSOItemCriteriaCondition::~CSOItemCriteriaCondition()
 T CSOItemRecipe::ByteSize() const
 T CSOItemRecipe::Clear()
 T CSOItemRecipe::GetCachedSize() const
 T CSOItemRecipe::GetMetadata() const
 T CSOItemRecipe::IsInitialized() const
 T CSOItemRecipe::MergeFrom(CSOItemRecipe const&)
 T CSOItemRecipe::New() const
 T CSOItemRecipe::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemRecipe::SetCachedSize(int) const
 T CSOItemRecipe::SharedDtor()
 T CSOItemRecipe::~CSOItemRecipe()
 T CSOLobbyInvite::ByteSize() const
 T CSOLobbyInvite::Clear()
 T CSOLobbyInvite::GetCachedSize() const
 T CSOLobbyInvite::GetMetadata() const
 T CSOLobbyInvite::IsInitialized() const
 T CSOLobbyInvite::MergeFrom(CSOLobbyInvite const&)
 T CSOLobbyInvite::New() const
 T CSOLobbyInvite::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOLobbyInvite::SetCachedSize(int) const
 T CSOLobbyInvite::~CSOLobbyInvite()
 T CSOPartyInvite::ByteSize() const
 T CSOPartyInvite::Clear()
 T CSOPartyInvite::GetCachedSize() const
 T CSOPartyInvite::GetMetadata() const
 T CSOPartyInvite::IsInitialized() const
 T CSOPartyInvite::MergeFrom(CSOPartyInvite const&)
 T CSOPartyInvite::New() const
 T CSOPartyInvite::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOPartyInvite::SetCachedSize(int) const
 T CSOPartyInvite::~CSOPartyInvite()
 T CSOSelectedItemPreset::ByteSize() const
 T CSOSelectedItemPreset::Clear()
 T CSOSelectedItemPreset::GetCachedSize() const
 T CSOSelectedItemPreset::GetMetadata() const
 T CSOSelectedItemPreset::IsInitialized() const
 T CSOSelectedItemPreset::MergeFrom(CSOSelectedItemPreset const&)
 T CSOSelectedItemPreset::New() const
 T CSOSelectedItemPreset::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOSelectedItemPreset::SetCachedSize(int) const
 T CSOSelectedItemPreset::~CSOSelectedItemPreset()
 T CSVCMsg_BSPDecal::ByteSize() const
 T CSVCMsg_BSPDecal::Clear()
 T CSVCMsg_BSPDecal::GetCachedSize() const
 T CSVCMsg_BSPDecal::GetMetadata() const
 T CSVCMsg_BSPDecal::IsInitialized() const
 T CSVCMsg_BSPDecal::MergeFrom(CSVCMsg_BSPDecal const&)
 T CSVCMsg_BSPDecal::New() const
 T CSVCMsg_BSPDecal::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_BSPDecal::SetCachedSize(int) const
 T CSVCMsg_BSPDecal::~CSVCMsg_BSPDecal()
 T CSVCMsg_ClassInfo::ByteSize() const
 T CSVCMsg_ClassInfo::Clear()
 T CSVCMsg_ClassInfo::GetCachedSize() const
 T CSVCMsg_ClassInfo::GetMetadata() const
 T CSVCMsg_ClassInfo::IsInitialized() const
 T CSVCMsg_ClassInfo::MergeFrom(CSVCMsg_ClassInfo const&)
 T CSVCMsg_ClassInfo::New() const
 T CSVCMsg_ClassInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ClassInfo::SetCachedSize(int) const
 T CSVCMsg_ClassInfo::~CSVCMsg_ClassInfo()
 T CSVCMsg_ClassInfo_class_t::ByteSize() const
 T CSVCMsg_ClassInfo_class_t::Clear()
 T CSVCMsg_ClassInfo_class_t::GetCachedSize() const
 T CSVCMsg_ClassInfo_class_t::GetMetadata() const
 T CSVCMsg_ClassInfo_class_t::IsInitialized() const
 T CSVCMsg_ClassInfo_class_t::MergeFrom(CSVCMsg_ClassInfo_class_t const&)
 T CSVCMsg_ClassInfo_class_t::New() const
 T CSVCMsg_ClassInfo_class_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ClassInfo_class_t::SetCachedSize(int) const
 T CSVCMsg_ClassInfo_class_t::SharedDtor()
 T CSVCMsg_ClassInfo_class_t::~CSVCMsg_ClassInfo_class_t()
 T CSVCMsg_CmdKeyValues::ByteSize() const
 T CSVCMsg_CmdKeyValues::Clear()
 T CSVCMsg_CmdKeyValues::GetCachedSize() const
 T CSVCMsg_CmdKeyValues::GetMetadata() const
 T CSVCMsg_CmdKeyValues::IsInitialized() const
 T CSVCMsg_CmdKeyValues::MergeFrom(CSVCMsg_CmdKeyValues const&)
 T CSVCMsg_CmdKeyValues::New() const
 T CSVCMsg_CmdKeyValues::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_CmdKeyValues::SetCachedSize(int) const
 T CSVCMsg_CmdKeyValues::~CSVCMsg_CmdKeyValues()
 T CSVCMsg_CreateStringTable::ByteSize() const
 T CSVCMsg_CreateStringTable::Clear()
 T CSVCMsg_CreateStringTable::GetCachedSize() const
 T CSVCMsg_CreateStringTable::GetMetadata() const
 T CSVCMsg_CreateStringTable::IsInitialized() const
 T CSVCMsg_CreateStringTable::MergeFrom(CSVCMsg_CreateStringTable const&)
 T CSVCMsg_CreateStringTable::New() const
 T CSVCMsg_CreateStringTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_CreateStringTable::SetCachedSize(int) const
 T CSVCMsg_CreateStringTable::SharedDtor()
 T CSVCMsg_CreateStringTable::~CSVCMsg_CreateStringTable()
 T CSVCMsg_CrosshairAngle::ByteSize() const
 T CSVCMsg_CrosshairAngle::Clear()
 T CSVCMsg_CrosshairAngle::GetCachedSize() const
 T CSVCMsg_CrosshairAngle::GetMetadata() const
 T CSVCMsg_CrosshairAngle::IsInitialized() const
 T CSVCMsg_CrosshairAngle::MergeFrom(CSVCMsg_CrosshairAngle const&)
 T CSVCMsg_CrosshairAngle::New() const
 T CSVCMsg_CrosshairAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_CrosshairAngle::SetCachedSize(int) const
 T CSVCMsg_CrosshairAngle::~CSVCMsg_CrosshairAngle()
 T CSVCMsg_EncryptedData::ByteSize() const
 T CSVCMsg_EncryptedData::Clear()
 T CSVCMsg_EncryptedData::GetCachedSize() const
 T CSVCMsg_EncryptedData::GetMetadata() const
 T CSVCMsg_EncryptedData::IsInitialized() const
 T CSVCMsg_EncryptedData::MergeFrom(CSVCMsg_EncryptedData const&)
 T CSVCMsg_EncryptedData::New() const
 T CSVCMsg_EncryptedData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_EncryptedData::SetCachedSize(int) const
 T CSVCMsg_EncryptedData::~CSVCMsg_EncryptedData()
 T CSVCMsg_EntityMsg::ByteSize() const
 T CSVCMsg_EntityMsg::Clear()
 T CSVCMsg_EntityMsg::GetCachedSize() const
 T CSVCMsg_EntityMsg::GetMetadata() const
 T CSVCMsg_EntityMsg::IsInitialized() const
 T CSVCMsg_EntityMsg::MergeFrom(CSVCMsg_EntityMsg const&)
 T CSVCMsg_EntityMsg::New() const
 T CSVCMsg_EntityMsg::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_EntityMsg::SetCachedSize(int) const
 T CSVCMsg_EntityMsg::~CSVCMsg_EntityMsg()
 T CSVCMsg_FixAngle::ByteSize() const
 T CSVCMsg_FixAngle::Clear()
 T CSVCMsg_FixAngle::GetCachedSize() const
 T CSVCMsg_FixAngle::GetMetadata() const
 T CSVCMsg_FixAngle::IsInitialized() const
 T CSVCMsg_FixAngle::MergeFrom(CSVCMsg_FixAngle const&)
 T CSVCMsg_FixAngle::New() const
 T CSVCMsg_FixAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_FixAngle::SetCachedSize(int) const
 T CSVCMsg_FixAngle::~CSVCMsg_FixAngle()
 T CSVCMsg_GameEvent::ByteSize() const
 T CSVCMsg_GameEvent::Clear()
 T CSVCMsg_GameEvent::GetCachedSize() const
 T CSVCMsg_GameEvent::GetMetadata() const
 T CSVCMsg_GameEvent::IsInitialized() const
 T CSVCMsg_GameEvent::MergeFrom(CSVCMsg_GameEvent const&)
 T CSVCMsg_GameEvent::New() const
 T CSVCMsg_GameEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEvent::SetCachedSize(int) const
 T CSVCMsg_GameEvent::~CSVCMsg_GameEvent()
 T CSVCMsg_GameEventList::ByteSize() const
 T CSVCMsg_GameEventList::Clear()
 T CSVCMsg_GameEventList::GetCachedSize() const
 T CSVCMsg_GameEventList::GetMetadata() const
 T CSVCMsg_GameEventList::IsInitialized() const
 T CSVCMsg_GameEventList::MergeFrom(CSVCMsg_GameEventList const&)
 T CSVCMsg_GameEventList::New() const
 T CSVCMsg_GameEventList::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList::SetCachedSize(int) const
 T CSVCMsg_GameEventList::~CSVCMsg_GameEventList()
 T CSVCMsg_GameEventList_descriptor_t::ByteSize() const
 T CSVCMsg_GameEventList_descriptor_t::Clear()
 T CSVCMsg_GameEventList_descriptor_t::GetCachedSize() const
 T CSVCMsg_GameEventList_descriptor_t::GetMetadata() const
 T CSVCMsg_GameEventList_descriptor_t::IsInitialized() const
 T CSVCMsg_GameEventList_descriptor_t::MergeFrom(CSVCMsg_GameEventList_descriptor_t const&)
 T CSVCMsg_GameEventList_descriptor_t::New() const
 T CSVCMsg_GameEventList_descriptor_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList_descriptor_t::SetCachedSize(int) const
 T CSVCMsg_GameEventList_descriptor_t::~CSVCMsg_GameEventList_descriptor_t()
 T CSVCMsg_GameEventList_key_t::ByteSize() const
 T CSVCMsg_GameEventList_key_t::Clear()
 T CSVCMsg_GameEventList_key_t::GetCachedSize() const
 T CSVCMsg_GameEventList_key_t::GetMetadata() const
 T CSVCMsg_GameEventList_key_t::IsInitialized() const
 T CSVCMsg_GameEventList_key_t::MergeFrom(CSVCMsg_GameEventList_key_t const&)
 T CSVCMsg_GameEventList_key_t::New() const
 T CSVCMsg_GameEventList_key_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList_key_t::SetCachedSize(int) const
 T CSVCMsg_GameEventList_key_t::~CSVCMsg_GameEventList_key_t()
 T CSVCMsg_GameEvent_key_t::ByteSize() const
 T CSVCMsg_GameEvent_key_t::Clear()
 T CSVCMsg_GameEvent_key_t::GetCachedSize() const
 T CSVCMsg_GameEvent_key_t::GetMetadata() const
 T CSVCMsg_GameEvent_key_t::IsInitialized() const
 T CSVCMsg_GameEvent_key_t::MergeFrom(CSVCMsg_GameEvent_key_t const&)
 T CSVCMsg_GameEvent_key_t::New() const
 T CSVCMsg_GameEvent_key_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEvent_key_t::SetCachedSize(int) const
 T CSVCMsg_GameEvent_key_t::SharedDtor()
 T CSVCMsg_GameEvent_key_t::~CSVCMsg_GameEvent_key_t()
 T CSVCMsg_GetCvarValue::ByteSize() const
 T CSVCMsg_GetCvarValue::Clear()
 T CSVCMsg_GetCvarValue::GetCachedSize() const
 T CSVCMsg_GetCvarValue::GetMetadata() const
 T CSVCMsg_GetCvarValue::IsInitialized() const
 T CSVCMsg_GetCvarValue::MergeFrom(CSVCMsg_GetCvarValue const&)
 T CSVCMsg_GetCvarValue::New() const
 T CSVCMsg_GetCvarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GetCvarValue::SetCachedSize(int) const
 T CSVCMsg_GetCvarValue::~CSVCMsg_GetCvarValue()
 T CSVCMsg_Menu::ByteSize() const
 T CSVCMsg_Menu::Clear()
 T CSVCMsg_Menu::GetCachedSize() const
 T CSVCMsg_Menu::GetMetadata() const
 T CSVCMsg_Menu::IsInitialized() const
 T CSVCMsg_Menu::MergeFrom(CSVCMsg_Menu const&)
 T CSVCMsg_Menu::New() const
 T CSVCMsg_Menu::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Menu::SetCachedSize(int) const
 T CSVCMsg_Menu::~CSVCMsg_Menu()
 T CSVCMsg_PacketEntities::ByteSize() const
 T CSVCMsg_PacketEntities::Clear()
 T CSVCMsg_PacketEntities::GetCachedSize() const
 T CSVCMsg_PacketEntities::GetMetadata() const
 T CSVCMsg_PacketEntities::IsInitialized() const
 T CSVCMsg_PacketEntities::MergeFrom(CSVCMsg_PacketEntities const&)
 T CSVCMsg_PacketEntities::New() const
 T CSVCMsg_PacketEntities::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_PacketEntities::SetCachedSize(int) const
 T CSVCMsg_PacketEntities::~CSVCMsg_PacketEntities()
 T CSVCMsg_PaintmapData::ByteSize() const
 T CSVCMsg_PaintmapData::Clear()
 T CSVCMsg_PaintmapData::GetCachedSize() const
 T CSVCMsg_PaintmapData::GetMetadata() const
 T CSVCMsg_PaintmapData::IsInitialized() const
 T CSVCMsg_PaintmapData::MergeFrom(CSVCMsg_PaintmapData const&)
 T CSVCMsg_PaintmapData::New() const
 T CSVCMsg_PaintmapData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_PaintmapData::SetCachedSize(int) const
 T CSVCMsg_PaintmapData::~CSVCMsg_PaintmapData()
 T CSVCMsg_Prefetch::ByteSize() const
 T CSVCMsg_Prefetch::Clear()
 T CSVCMsg_Prefetch::GetCachedSize() const
 T CSVCMsg_Prefetch::GetMetadata() const
 T CSVCMsg_Prefetch::IsInitialized() const
 T CSVCMsg_Prefetch::MergeFrom(CSVCMsg_Prefetch const&)
 T CSVCMsg_Prefetch::New() const
 T CSVCMsg_Prefetch::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Prefetch::SetCachedSize(int) const
 T CSVCMsg_Prefetch::~CSVCMsg_Prefetch()
 T CSVCMsg_Print::ByteSize() const
 T CSVCMsg_Print::Clear()
 T CSVCMsg_Print::GetCachedSize() const
 T CSVCMsg_Print::GetMetadata() const
 T CSVCMsg_Print::IsInitialized() const
 T CSVCMsg_Print::MergeFrom(CSVCMsg_Print const&)
 T CSVCMsg_Print::New() const
 T CSVCMsg_Print::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Print::SetCachedSize(int) const
 T CSVCMsg_Print::~CSVCMsg_Print()
 T CSVCMsg_SendTable::ByteSize() const
 T CSVCMsg_SendTable::Clear()
 T CSVCMsg_SendTable::GetCachedSize() const
 T CSVCMsg_SendTable::GetMetadata() const
 T CSVCMsg_SendTable::IsInitialized() const
 T CSVCMsg_SendTable::MergeFrom(CSVCMsg_SendTable const&)
 T CSVCMsg_SendTable::New() const
 T CSVCMsg_SendTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SendTable::SetCachedSize(int) const
 T CSVCMsg_SendTable::~CSVCMsg_SendTable()
 T CSVCMsg_SendTable_sendprop_t::ByteSize() const
 T CSVCMsg_SendTable_sendprop_t::Clear()
 T CSVCMsg_SendTable_sendprop_t::GetCachedSize() const
 T CSVCMsg_SendTable_sendprop_t::GetMetadata() const
 T CSVCMsg_SendTable_sendprop_t::IsInitialized() const
 T CSVCMsg_SendTable_sendprop_t::MergeFrom(CSVCMsg_SendTable_sendprop_t const&)
 T CSVCMsg_SendTable_sendprop_t::New() const
 T CSVCMsg_SendTable_sendprop_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SendTable_sendprop_t::SetCachedSize(int) const
 T CSVCMsg_SendTable_sendprop_t::SharedDtor()
 T CSVCMsg_SendTable_sendprop_t::~CSVCMsg_SendTable_sendprop_t()
 T CSVCMsg_ServerInfo::ByteSize() const
 T CSVCMsg_ServerInfo::Clear()
 T CSVCMsg_ServerInfo::GetCachedSize() const
 T CSVCMsg_ServerInfo::GetMetadata() const
 T CSVCMsg_ServerInfo::IsInitialized() const
 T CSVCMsg_ServerInfo::MergeFrom(CSVCMsg_ServerInfo const&)
 T CSVCMsg_ServerInfo::New() const
 T CSVCMsg_ServerInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ServerInfo::SetCachedSize(int) const
 T CSVCMsg_ServerInfo::SharedDtor()
 T CSVCMsg_ServerInfo::~CSVCMsg_ServerInfo()
 T CSVCMsg_SetPause::ByteSize() const
 T CSVCMsg_SetPause::Clear()
 T CSVCMsg_SetPause::GetCachedSize() const
 T CSVCMsg_SetPause::GetMetadata() const
 T CSVCMsg_SetPause::IsInitialized() const
 T CSVCMsg_SetPause::MergeFrom(CSVCMsg_SetPause const&)
 T CSVCMsg_SetPause::New() const
 T CSVCMsg_SetPause::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SetPause::SetCachedSize(int) const
 T CSVCMsg_SetPause::~CSVCMsg_SetPause()
 T CSVCMsg_SetView::ByteSize() const
 T CSVCMsg_SetView::Clear()
 T CSVCMsg_SetView::GetCachedSize() const
 T CSVCMsg_SetView::GetMetadata() const
 T CSVCMsg_SetView::IsInitialized() const
 T CSVCMsg_SetView::MergeFrom(CSVCMsg_SetView const&)
 T CSVCMsg_SetView::New() const
 T CSVCMsg_SetView::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SetView::SetCachedSize(int) const
 T CSVCMsg_SetView::~CSVCMsg_SetView()
 T CSVCMsg_Sounds::ByteSize() const
 T CSVCMsg_Sounds::Clear()
 T CSVCMsg_Sounds::GetCachedSize() const
 T CSVCMsg_Sounds::GetMetadata() const
 T CSVCMsg_Sounds::IsInitialized() const
 T CSVCMsg_Sounds::MergeFrom(CSVCMsg_Sounds const&)
 T CSVCMsg_Sounds::New() const
 T CSVCMsg_Sounds::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Sounds::SetCachedSize(int) const
 T CSVCMsg_Sounds::~CSVCMsg_Sounds()
 T CSVCMsg_Sounds_sounddata_t::ByteSize() const
 T CSVCMsg_Sounds_sounddata_t::Clear()
 T CSVCMsg_Sounds_sounddata_t::GetCachedSize() const
 T CSVCMsg_Sounds_sounddata_t::GetMetadata() const
 T CSVCMsg_Sounds_sounddata_t::IsInitialized() const
 T CSVCMsg_Sounds_sounddata_t::MergeFrom(CSVCMsg_Sounds_sounddata_t const&)
 T CSVCMsg_Sounds_sounddata_t::New() const
 T CSVCMsg_Sounds_sounddata_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Sounds_sounddata_t::SetCachedSize(int) const
 T CSVCMsg_Sounds_sounddata_t::~CSVCMsg_Sounds_sounddata_t()
 T CSVCMsg_SplitScreen::ByteSize() const
 T CSVCMsg_SplitScreen::Clear()
 T CSVCMsg_SplitScreen::GetCachedSize() const
 T CSVCMsg_SplitScreen::GetMetadata() const
 T CSVCMsg_SplitScreen::IsInitialized() const
 T CSVCMsg_SplitScreen::MergeFrom(CSVCMsg_SplitScreen const&)
 T CSVCMsg_SplitScreen::New() const
 T CSVCMsg_SplitScreen::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SplitScreen::SetCachedSize(int) const
 T CSVCMsg_SplitScreen::~CSVCMsg_SplitScreen()
 T CSVCMsg_TempEntities::ByteSize() const
 T CSVCMsg_TempEntities::Clear()
 T CSVCMsg_TempEntities::GetCachedSize() const
 T CSVCMsg_TempEntities::GetMetadata() const
 T CSVCMsg_TempEntities::IsInitialized() const
 T CSVCMsg_TempEntities::MergeFrom(CSVCMsg_TempEntities const&)
 T CSVCMsg_TempEntities::New() const
 T CSVCMsg_TempEntities::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_TempEntities::SetCachedSize(int) const
 T CSVCMsg_TempEntities::~CSVCMsg_TempEntities()
 T CSVCMsg_UpdateStringTable::ByteSize() const
 T CSVCMsg_UpdateStringTable::Clear()
 T CSVCMsg_UpdateStringTable::GetCachedSize() const
 T CSVCMsg_UpdateStringTable::GetMetadata() const
 T CSVCMsg_UpdateStringTable::IsInitialized() const
 T CSVCMsg_UpdateStringTable::MergeFrom(CSVCMsg_UpdateStringTable const&)
 T CSVCMsg_UpdateStringTable::New() const
 T CSVCMsg_UpdateStringTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_UpdateStringTable::SetCachedSize(int) const
 T CSVCMsg_UpdateStringTable::~CSVCMsg_UpdateStringTable()
 T CSVCMsg_UserMessage::ByteSize() const
 T CSVCMsg_UserMessage::Clear()
 T CSVCMsg_UserMessage::GetCachedSize() const
 T CSVCMsg_UserMessage::GetMetadata() const
 T CSVCMsg_UserMessage::IsInitialized() const
 T CSVCMsg_UserMessage::MergeFrom(CSVCMsg_UserMessage const&)
 T CSVCMsg_UserMessage::New() const
 T CSVCMsg_UserMessage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_UserMessage::SetCachedSize(int) const
 T CSVCMsg_UserMessage::~CSVCMsg_UserMessage()
 T CSVCMsg_VoiceData::ByteSize() const
 T CSVCMsg_VoiceData::Clear()
 T CSVCMsg_VoiceData::GetCachedSize() const
 T CSVCMsg_VoiceData::GetMetadata() const
 T CSVCMsg_VoiceData::IsInitialized() const
 T CSVCMsg_VoiceData::MergeFrom(CSVCMsg_VoiceData const&)
 T CSVCMsg_VoiceData::New() const
 T CSVCMsg_VoiceData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_VoiceData::SetCachedSize(int) const
 T CSVCMsg_VoiceData::~CSVCMsg_VoiceData()
 T CSVCMsg_VoiceInit::ByteSize() const
 T CSVCMsg_VoiceInit::Clear()
 T CSVCMsg_VoiceInit::GetCachedSize() const
 T CSVCMsg_VoiceInit::GetMetadata() const
 T CSVCMsg_VoiceInit::IsInitialized() const
 T CSVCMsg_VoiceInit::MergeFrom(CSVCMsg_VoiceInit const&)
 T CSVCMsg_VoiceInit::New() const
 T CSVCMsg_VoiceInit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_VoiceInit::SetCachedSize(int) const
 T CSVCMsg_VoiceInit::~CSVCMsg_VoiceInit()
 T CSave::BufferData(char const*, int)
 T CSave::CSave(CSaveRestoreData*)
 T CSave::DoWriteAll(void const*, datamap_t*, datamap_t*)
 T CSave::EndBlock()
 T CSave::EndLogging()
 T CSave::EntityFlagsSet(int, int)
 T CSave::EntityIndex(CBaseEntity const*)
 T CSave::GetGameSaveRestoreInfo()
 T CSave::GetWritePos() const
 T CSave::IsAsync()
 T CSave::SetWritePos(int)
 T CSave::ShouldSaveField(void const*, typedescription_t*)
 T CSave::StartBlock()
 T CSave::StartBlock(char const*)
 T CSave::StartLogging(char const*)
 T CSave::WriteAll(void const*, datamap_t*)
 T CSave::WriteBasicField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteBool(bool const*, int)
 T CSave::WriteBool(char const*, bool const*, int)
 T CSave::WriteData(char const*, int)
 T CSave::WriteData(char const*, int, char const*)
 T CSave::WriteEHandle(CHandle<CBaseEntity> const*, int)
 T CSave::WriteEHandle(char const*, CHandle<CBaseEntity> const*, int)
 T CSave::WriteEdictPtr(char const*, edict_t**, int)
 T CSave::WriteEdictPtr(edict_t**, int)
 T CSave::WriteEntityPtr(CBaseEntity**, int)
 T CSave::WriteEntityPtr(char const*, CBaseEntity**, int)
 T CSave::WriteFields(char const*, void const*, datamap_t*, typedescription_t*, int)
 T CSave::WriteFloat(char const*, float const*, int)
 T CSave::WriteFloat(float const*, int)
 T CSave::WriteFunction(datamap_t*, char const*, void (CBaseEntity::* const*)(inputdata_t&), int)
 T CSave::WriteGameField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteHeader(char const*, int)
 T CSave::WriteInt(char const*, int const*, int)
 T CSave::WriteInt(int const*, int)
 T CSave::WriteMatrix3x4Worldspace(matrix3x4_t const*, int)
 T CSave::WritePositionVector(Vector const&)
 T CSave::WritePositionVector(Vector const*, int)
 T CSave::WritePositionVector(char const*, Vector const&)
 T CSave::WritePositionVector(char const*, Vector const*, int)
 T CSave::WriteQuaternion(Quaternion const&)
 T CSave::WriteQuaternion(Quaternion const*, int)
 T CSave::WriteQuaternion(char const*, Quaternion const&)
 T CSave::WriteQuaternion(char const*, Quaternion const*, int)
 T CSave::WriteShort(char const*, short const*, int)
 T CSave::WriteShort(short const*, int)
 T CSave::WriteString(char const*)
 T CSave::WriteString(char const*, char const*)
 T CSave::WriteString(char const*, string_t const*, int)
 T CSave::WriteString(string_t const*, int)
 T CSave::WriteTick(char const*, int const*, int)
 T CSave::WriteTick(int const*, int)
 T CSave::WriteTime(char const*, float const*, int)
 T CSave::WriteTime(float const*, int)
 T CSave::WriteVMatrixWorldspace(char const*, VMatrix const*, int)
 T CSave::WriteVector(Vector const&)
 T CSave::WriteVector(Vector const*, int)
 T CSave::WriteVector(char const*, Vector const&)
 T CSave::WriteVector(char const*, Vector const*, int)
 T CSave::~CSave()
 T CSaveRestoreBlockSet::AddBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::CallBlockHandlerRestore(ISaveRestoreBlockHandler*, int, IRestore*, bool)
 T CSaveRestoreBlockSet::GetBlockName()
 T CSaveRestoreBlockSet::PostRestore()
 T CSaveRestoreBlockSet::PostSave()
 T CSaveRestoreBlockSet::PreRestore()
 T CSaveRestoreBlockSet::PreSave(CSaveRestoreData*)
 T CSaveRestoreBlockSet::ReadRestoreHeaders(IRestore*)
 T CSaveRestoreBlockSet::RemoveBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::Restore(IRestore*, bool)
 T CSaveRestoreBlockSet::Save(ISave*)
 T CSaveRestoreBlockSet::WriteSaveHeaders(ISave*)
 T CSaveRestoreBlockSet::~CSaveRestoreBlockSet()
 T CSceneEntity::Activate()
 T CSceneEntity::AddBroadcastTeamTarget(int)
 T CSceneEntity::AddListManager(CSceneListManager*)
 T CSceneEntity::BuildSortedSpeakEventSoundsPrefetchList(CChoreoScene*, CUtlSymbolTable&, CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >&, float)
 T CSceneEntity::CSceneEntity()
 T CSceneEntity::CancelPlayback()
 T CSceneEntity::CheckActors()
 T CSceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::CheckInterruptCompletion()
 T CSceneEntity::ClearActivatorTargets()
 T CSceneEntity::ClearInterrupt()
 T CSceneEntity::ClearSceneEvents(CChoreoScene*, bool)
 T CSceneEntity::ClearSchedules(CChoreoScene*)
 T CSceneEntity::DispatchEndExpression(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndFace(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndFlexAnimation(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndGeneric(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndGesture(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndInterrupt(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchEndLookAt(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndMoveTo(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndPermitResponses(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndSpeak(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchPauseScene(CChoreoScene*, char const*)
 T CSceneEntity::DispatchProcessLoop(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchStartExpression(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartFace(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartFlexAnimation(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartGeneric(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartGesture(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartInterrupt(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchStartLookAt(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartMoveTo(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartPermitResponses(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartSpeak(CChoreoScene*, CBaseFlex*, CChoreoEvent*, soundlevel_t)
 T CSceneEntity::DispatchStartSubScene(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStopPoint(CChoreoScene*, char const*)
 T CSceneEntity::DoThink(float)
 T CSceneEntity::DrawDebugTextOverlays()
 T CSceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::EstimateLength()
 T CSceneEntity::FindNamedActor(CChoreoActor*)
 T CSceneEntity::FindNamedActor(char const*)
 T CSceneEntity::FindNamedActor(int)
 T CSceneEntity::FindNamedEntity(char const*, CBaseEntity*, bool, bool)
 T CSceneEntity::FindNamedEntityClosest(char const*, CBaseEntity*, bool, bool, char const*)
 T CSceneEntity::FindNamedTarget(string_t, bool)
 T CSceneEntity::GenerateSceneForSound(CBaseFlex*, char const*)
 T CSceneEntity::GetDataDescMap()
 T CSceneEntity::GetPostSpeakDelay()
 T CSceneEntity::GetScriptDesc()
 T CSceneEntity::GetServerClass()
 T CSceneEntity::GetSoundNameForPlayer(CChoreoEvent*, CBasePlayer*, char*, unsigned long)
 T CSceneEntity::InputCancelAtNextInterrupt(inputdata_t&)
 T CSceneEntity::InputCancelPlayback(inputdata_t&)
 T CSceneEntity::InputInterjectResponse(inputdata_t&)
 T CSceneEntity::InputPausePlayback(inputdata_t&)
 T CSceneEntity::InputPitchShiftPlayback(inputdata_t&)
 T CSceneEntity::InputResumePlayback(inputdata_t&)
 T CSceneEntity::InputScriptPlayerDeath(inputdata_t&)
 T CSceneEntity::InputSetTarget1(inputdata_t&)
 T CSceneEntity::InputSetTarget2(inputdata_t&)
 T CSceneEntity::InputSetTarget3(inputdata_t&)
 T CSceneEntity::InputSetTarget4(inputdata_t&)
 T CSceneEntity::InputStartPlayback(inputdata_t&)
 T CSceneEntity::InputStopWaitingForActor(inputdata_t&)
 T CSceneEntity::InputTriggerEvent(inputdata_t&)
 T CSceneEntity::InterruptThisScene(CSceneEntity*)
 T CSceneEntity::IsPaused() const
 T CSceneEntity::IsPlayingBack() const
 T CSceneEntity::LoadScene(char const*, IChoreoEventCallback*)
 T CSceneEntity::NotifyOfCompletion(CSceneEntity*)
 T CSceneEntity::OnLoaded()
 T CSceneEntity::OnRestore()
 T CSceneEntity::OnSceneFinished(bool, bool)
 T CSceneEntity::PausePlayback()
 T CSceneEntity::PauseThink()
 T CSceneEntity::PitchShiftPlayback(float)
 T CSceneEntity::Precache()
 T CSceneEntity::PrecacheScene(CChoreoScene*)
 T CSceneEntity::PrefetchAnimBlocks(CChoreoScene*)
 T CSceneEntity::PrefetchSpeakEventSounds(CUtlSymbolTable&, CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >&)
 T CSceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::QueueResumePlayback()
 T CSceneEntity::RemoveBroadcastTeamTarget(int)
 T CSceneEntity::RequestCompletionNotification(CSceneEntity*)
 T CSceneEntity::ResumePlayback()
 T CSceneEntity::ScriptFindNamedEntity(char const*)
 T CSceneEntity::ScriptLoadSceneFromString(char const*, char const*)
 T CSceneEntity::SetCurrentTime(float, bool)
 T CSceneEntity::ShouldNetwork() const
 T CSceneEntity::ShouldTransmit(CCheckTransmitInfo const*)
 T CSceneEntity::Spawn()
 T CSceneEntity::SpeakEventSoundLessFunc(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&)
 T CSceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::StartPlayback()
 T CSceneEntity::Think()
 T CSceneEntity::UnloadScene()
 T CSceneEntity::UpdateOnRemove()
 T CSceneEntity::UpdateTransmitState()
 T CSceneEntity::YouForgotToImplementOrDeclareServerClass()
 T CSceneEntity::~CSceneEntity()
 T CSceneEventInfo::InitWeight(CBaseFlex*)
 T CSceneEventInfo::UpdateWeight(CBaseFlex*)
 T CSceneFindMarkFilter::GetFilterResult()
 T CSceneFindMarkFilter::ShouldFindEntity(CBaseEntity*)
 T CSceneFindNearestMarkFilter::CSceneFindNearestMarkFilter(CBaseEntity const*, Vector const&, float)
 T CSceneFindNearestMarkFilter::GetFilterResult()
 T CSceneFindNearestMarkFilter::ShouldFindEntity(CBaseEntity*)
 T CSceneListManager::Activate()
 T CSceneListManager::AddListManager(CSceneListManager*)
 T CSceneListManager::GetDataDescMap()
 T CSceneListManager::InputShutdown(inputdata_t&)
 T CSceneListManager::RemoveScene(int)
 T CSceneListManager::SceneStarted(CBaseEntity*)
 T CSceneListManager::~CSceneListManager()
 T CSceneManager::ActivateScene(CSceneEntity*)
 T CSceneManager::AddSceneEntity(CSceneEntity*)
 T CSceneManager::GetDataDescMap()
 T CSceneManager::IsInInterruptableScenes(CBaseFlex*)
 T CSceneManager::IsRunningScriptedScene(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneAndNotPaused(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneWithSpeech(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneWithSpeechAndNotPaused(CBaseFlex*, bool)
 T CSceneManager::ObjectCaps()
 T CSceneManager::OnClientActive(CBasePlayer*)
 T CSceneManager::PauseActorsScenes(CBaseFlex*, bool)
 T CSceneManager::QueueActorsScenesToResume(CBaseFlex*, bool)
 T CSceneManager::QueueRestoredSound(CBaseFlex*, char const*, soundlevel_t, float)
 T CSceneManager::RemoveActorFromScenes(CBaseFlex*, bool, bool, char const*)
 T CSceneManager::Spawn()
 T CSceneManager::Think()
 T CSceneManager::~CSceneManager()
 T CScenePrecacheSystem::LevelShutdownPreEntity()
 T CScenePrecacheSystem::ShouldPrecache(char const*)
 T CScenePrecacheSystem::~CScenePrecacheSystem()
 T CSceneTokenProcessor::CurrentToken()
 T CSceneTokenProcessor::Error(char const*, ...)
 T CSceneTokenProcessor::GetToken(bool)
 T CSceneTokenProcessor::SetBuffer(char*)
 T CSceneTokenProcessor::TokenAvailable()
 T CSchemaAttributeTypeProtobufBase<CAttribute_String>::ConvertByteStreamToTypedValue(std::string const&, CAttribute_String*) const
 T CSchemaAttributeTypeProtobufBase<CAttribute_String>::ConvertTypedValueToByteStream(CAttribute_String const&, std::string*) const
 T CSchemaAttributeType_Default::BConvertStringToEconAttributeValue(CEconItemAttributeDefinition const*, char const*, attribute_data_union_t*) const
 T CSchemaAttributeType_Default::BSupportsGameplayModificationAndNetworking() const
 T CSchemaAttributeType_Default::ConvertByteStreamToTypedValue(std::string const&, unsigned int*) const
 T CSchemaAttributeType_Default::ConvertEconAttributeValueToString(CEconItemAttributeDefinition const*, attribute_data_union_t const&, std::string*) const
 T CSchemaAttributeType_Default::ConvertTypedValueToByteStream(unsigned int const&, std::string*) const
 T CSchemaAttributeType_Default::~CSchemaAttributeType_Default()
 T CSchemaAttributeType_Float::BConvertStringToEconAttributeValue(CEconItemAttributeDefinition const*, char const*, attribute_data_union_t*) const
 T CSchemaAttributeType_Float::BSupportsGameplayModificationAndNetworking() const
 T CSchemaAttributeType_Float::ConvertByteStreamToTypedValue(std::string const&, float*) const
 T CSchemaAttributeType_Float::ConvertEconAttributeValueToString(CEconItemAttributeDefinition const*, attribute_data_union_t const&, std::string*) const
 T CSchemaAttributeType_Float::ConvertTypedValueToByteStream(float const&, std::string*) const
 T CSchemaAttributeType_Float::OnIterateAttributeValue(IEconItemAttributeIterator*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T CSchemaAttributeType_Float::~CSchemaAttributeType_Float()
 T CSchemaAttributeType_String::BConvertStringToEconAttributeValue(CEconItemAttributeDefinition const*, char const*, attribute_data_union_t*) const
 T CSchemaAttributeType_String::ConvertEconAttributeValueToString(CEconItemAttributeDefinition const*, attribute_data_union_t const&, std::string*) const
 T CSchemaAttributeType_String::~CSchemaAttributeType_String()
 T CSchemaAttributeType_Uint32::BConvertStringToEconAttributeValue(CEconItemAttributeDefinition const*, char const*, attribute_data_union_t*) const
 T CSchemaAttributeType_Uint32::BSupportsGameplayModificationAndNetworking() const
 T CSchemaAttributeType_Uint32::ConvertByteStreamToTypedValue(std::string const&, unsigned int*) const
 T CSchemaAttributeType_Uint32::ConvertEconAttributeValueToString(CEconItemAttributeDefinition const*, attribute_data_union_t const&, std::string*) const
 T CSchemaAttributeType_Uint32::ConvertTypedValueToByteStream(unsigned int const&, std::string*) const
 T CSchemaAttributeType_Uint32::~CSchemaAttributeType_Uint32()
 T CSchemaAttributeType_Vector::BConvertStringToEconAttributeValue(CEconItemAttributeDefinition const*, char const*, attribute_data_union_t*) const
 T CSchemaAttributeType_Vector::ConvertByteStreamToTypedValue(std::string const&, Vector*) const
 T CSchemaAttributeType_Vector::ConvertEconAttributeValueToString(CEconItemAttributeDefinition const*, attribute_data_union_t const&, std::string*) const
 T CSchemaAttributeType_Vector::ConvertTypedValueToByteStream(Vector const&, std::string*) const
 T CSchemaAttributeType_Vector::~CSchemaAttributeType_Vector()
 T CSchemaClassBindingBase::Install()
 T CScrambleTeams::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CScrambleTeams::ExecuteCommand()
 T CScrambleTeams::GetDisplayString()
 T CScrambleTeams::GetVoteIssue()
 T CScrambleTeams::GetVotePassedString()
 T CScrambleTeams::IsAllyRestrictedVote()
 T CScrambleTeams::IsEnabled()
 T CScrambleTeams::ListIssueDetails(CBasePlayer*)
 T CScrambleTeams::~CScrambleTeams()
 T CScriptConstructor<CScriptKeyValues>::Construct()
 T CScriptConstructor<CScriptKeyValues>::Destruct(void*)
 T CScriptEntityIterator::CreateByClassname(char const*)
 T CScriptEntityIterator::FindByClassname(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByClassnameNearest(char const*, Vector const&, float)
 T CScriptEntityIterator::FindByClassnameWithin(HSCRIPT__*, char const*, Vector const&, float)
 T CScriptEntityIterator::FindByModel(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByName(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByNameNearest(char const*, Vector const&, float)
 T CScriptEntityIterator::FindByNameWithin(HSCRIPT__*, char const*, Vector const&, float)
 T CScriptEntityIterator::FindByTarget(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindInSphere(HSCRIPT__*, Vector const&, float)
 T CScriptEntityIterator::First()
 T CScriptEntityIterator::Next(HSCRIPT__*)
 T CScriptKeyValues::CScriptKeyValues(KeyValues*)
 T CScriptKeyValues::ScriptFindKey(char const*)
 T CScriptKeyValues::ScriptGetFirstSubKey()
 T CScriptKeyValues::ScriptGetKeyValueBool(char const*)
 T CScriptKeyValues::ScriptGetKeyValueFloat(char const*)
 T CScriptKeyValues::ScriptGetKeyValueInt(char const*)
 T CScriptKeyValues::ScriptGetKeyValueString(char const*)
 T CScriptKeyValues::ScriptGetNextKey()
 T CScriptKeyValues::ScriptIsKeyValueEmpty(char const*)
 T CScriptKeyValues::ScriptReleaseKeyValues()
 T CScriptScopeT<CDefScriptScopeBase>::Run(char const*, char const*)
 T CScriptScopeT<CDefScriptScopeBase>::Term()
 T CScriptScopeT<CDefScriptScopeBase>::~CScriptScopeT()
 T CScriptedTarget::DrawDebugGeometryOverlays()
 T CScriptedTarget::DrawDebugTextOverlays()
 T CScriptedTarget::FindEntity()
 T CScriptedTarget::GetDataDescMap()
 T CScriptedTarget::InputDisable(inputdata_t&)
 T CScriptedTarget::InputEnable(inputdata_t&)
 T CScriptedTarget::ObjectCaps()
 T CScriptedTarget::ScriptThink()
 T CScriptedTarget::Spawn()
 T CScriptedTarget::~CScriptedTarget()
 T CSendProxyRecipients::ClearRecipient(int)
 T CSendProxyRecipients::ExcludeOnly(int)
 T CSendProxyRecipients::SetOnly(int)
 T CSendProxyRecipients::SetRecipient(int)
 T CServerBenchmark::CalculateBenchmarkCRC()
 T CServerBenchmark::EndBenchmark()
 T CServerBenchmark::GetTickOffset()
 T CServerBenchmark::InternalStartBenchmark(int, float)
 T CServerBenchmark::IsBenchmarkRunning()
 T CServerBenchmark::IsLocalBenchmarkPlayer(CBasePlayer*)
 T CServerBenchmark::OutputResults()
 T CServerBenchmark::RandomFloat(float, float)
 T CServerBenchmark::RandomInt(int, int)
 T CServerBenchmark::StartBenchmark()
 T CServerBenchmark::UpdateBenchmark()
 T CServerBenchmark::UpdateVPhysicsObjects()
 T CServerBenchmark::~CServerBenchmark()
 T CServerDLLSharedAppSystems::Count()
 T CServerDLLSharedAppSystems::GetDllName(int)
 T CServerDLLSharedAppSystems::GetInterfaceName(int)
 T CServerDLLSharedAppSystems::~CServerDLLSharedAppSystems()
 T CServerGameClients::ClientActive(edict_t*, bool)
 T CServerGameClients::ClientCommand(edict_t*, CCommand const&)
 T CServerGameClients::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CServerGameClients::ClientConnect(edict_t*, char const*, char const*, char*, int)
 T CServerGameClients::ClientDisconnect(edict_t*)
 T CServerGameClients::ClientEarPosition(edict_t*, Vector*)
 T CServerGameClients::ClientFullyConnect(edict_t*)
 T CServerGameClients::ClientNameHandler(unsigned long long, char const*)
 T CServerGameClients::ClientPutInServer(edict_t*, char const*)
 T CServerGameClients::ClientSettingsChanged(edict_t*)
 T CServerGameClients::ClientSetupVisibility(edict_t*, edict_t*, unsigned char*, int)
 T CServerGameClients::ClientVoice(edict_t*)
 T CServerGameClients::GetBugReportInfo(char*, int)
 T CServerGameClients::GetMaxHumanPlayers()
 T CServerGameClients::GetMaxSplitscreenPlayers()
 T CServerGameClients::GetPlayerLimits(int&, int&, int&) const
 T CServerGameClients::GetPlayerState(edict_t*)
 T CServerGameClients::GetReplayDelay(edict_t*, int&)
 T CServerGameClients::NetworkIDValidated(char const*, char const*, CSteamID)
 T CServerGameClients::PostClientMessagesSent()
 T CServerGameClients::ProcessUsercmds(edict_t*, bf_read*, int, int, int, bool, bool)
 T CServerGameClients::SetCommandClient(int)
 T CServerGameDLL::ApplyGameSettings(KeyValues*)
 T CServerGameDLL::BuildAdjacentMapList()
 T CServerGameDLL::ClientConnectionValidatePreNetChan(bool, char const*, int, unsigned long long)
 T CServerGameDLL::CreateEntityTransitionList(CSaveRestoreData*, int)
 T CServerGameDLL::CreateNetworkStringTables()
 T CServerGameDLL::DLLInit(void* (*)(char const*, int*), void* (*)(char const*, int*), void* (*)(char const*, int*), CGlobalVars*)
 T CServerGameDLL::DLLShutdown()
 T CServerGameDLL::FriendsReqdForDirectConnect()
 T CServerGameDLL::GameFrame(bool)
 T CServerGameDLL::GameInit()
 T CServerGameDLL::GameServerSteamAPIActivated(bool)
 T CServerGameDLL::GameShutdown()
 T CServerGameDLL::GetAllServerClasses()
 T CServerGameDLL::GetExtendedServerInfoForNewClient()
 T CServerGameDLL::GetGameDescription()
 T CServerGameDLL::GetMatchmakingGameData(char*, unsigned long)
 T CServerGameDLL::GetMatchmakingTags(char*, unsigned long)
 T CServerGameDLL::GetMessageEncryptionKey(INetMessage*)
 T CServerGameDLL::GetNewestSubscribedFiles()
 T CServerGameDLL::GetSaveComment(char*, int, float, float, bool)
 T CServerGameDLL::GetStandardSendProxies()
 T CServerGameDLL::GetTickInterval() const
 T CServerGameDLL::GetUGCMapFileID(char const*)
 T CServerGameDLL::HasPendingMapDownloads() const
 T CServerGameDLL::InvalidateMdlCache()
 T CServerGameDLL::IsLoadTestServer()
 T CServerGameDLL::IsRestoring()
 T CServerGameDLL::IsValveDS()
 T CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
 T CServerGameDLL::LevelInit_ParseAllEntities(char const*)
 T CServerGameDLL::LevelShutdown()
 T CServerGameDLL::LoadMessageOfTheDay()
 T CServerGameDLL::OnEngineClientNetworkEvent(edict_t*, unsigned long long, int, void*)
 T CServerGameDLL::OnPureServerFileValidationFailure(edict_t*, char const*, char const*, unsigned int, int, int, int, int)
 T CServerGameDLL::OnQueryCvarValueFinished(int, edict_t*, EQueryCvarValueStatus, char const*, char const*)
 T CServerGameDLL::PostInit()
 T CServerGameDLL::PostToolsInit()
 T CServerGameDLL::PreClientUpdate(bool)
 T CServerGameDLL::PreSave(CSaveRestoreData*)
 T CServerGameDLL::PreSaveGameLoaded(char const*, bool)
 T CServerGameDLL::PrecacheParticleSystemFile(char const*)
 T CServerGameDLL::ReadRestoreHeaders(CSaveRestoreData*)
 T CServerGameDLL::ReportGCQueuedMatchStart(int, unsigned int*, int)
 T CServerGameDLL::Restore(CSaveRestoreData*, bool)
 T CServerGameDLL::RestoreGlobalState(CSaveRestoreData*)
 T CServerGameDLL::Save(CSaveRestoreData*)
 T CServerGameDLL::SaveGlobalState(CSaveRestoreData*)
 T CServerGameDLL::SaveInit(int)
 T CServerGameDLL::SaveReadFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CServerGameDLL::SaveWriteFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CServerGameDLL::ServerActivate(edict_t*, int, int)
 T CServerGameDLL::ServerHibernationUpdate(bool)
 T CServerGameDLL::ShouldAllowDirectConnect()
 T CServerGameDLL::ShouldHideServer()
 T CServerGameDLL::ShouldHoldGameServerReservation(float)
 T CServerGameDLL::ShouldPreferSteamAuth()
 T CServerGameDLL::SupportsSaveRestore()
 T CServerGameDLL::Think(bool)
 T CServerGameDLL::UpdateGCInformation()
 T CServerGameDLL::UpdateUGCMap(unsigned long long)
 T CServerGameDLL::ValidateAndAddActiveCaster(CSteamID const&)
 T CServerGameDLL::WriteSaveHeaders(CSaveRestoreData*)
 T CServerGameEnts::BaseEntityToEdict(CBaseEntity*)
 T CServerGameEnts::CheckTransmit(CCheckTransmitInfo*, unsigned short const*, int)
 T CServerGameEnts::EdictToBaseEntity(edict_t*)
 T CServerGameEnts::FreeContainingEntity(edict_t*)
 T CServerGameEnts::MarkEntitiesAsTouching(edict_t*, edict_t*)
 T CServerGameEnts::PrepareForFullUpdate(edict_t*)
 T CServerGameEnts::~CServerGameEnts()
 T CServerGameTags::GetTaggedConVarList(KeyValues*)
 T CServerNetworkProperty::AreaNum() const
 T CServerNetworkProperty::AttachEdict(edict_t*)
 T CServerNetworkProperty::CServerNetworkProperty()
 T CServerNetworkProperty::CacheServerClass()
 T CServerNetworkProperty::FireEvent()
 T CServerNetworkProperty::GetBaseEntity()
 T CServerNetworkProperty::GetBaseNetworkable()
 T CServerNetworkProperty::GetClassName() const
 T CServerNetworkProperty::GetDataDescMap()
 T CServerNetworkProperty::GetEdict() const
 T CServerNetworkProperty::GetEntityHandle()
 T CServerNetworkProperty::GetNetworkParent()
 T CServerNetworkProperty::GetPVSInfo()
 T CServerNetworkProperty::GetServerClass()
 T CServerNetworkProperty::Init(CBaseEntity*)
 T CServerNetworkProperty::IsInPVS(CCheckTransmitInfo const*)
 T CServerNetworkProperty::IsInPVS(edict_t const*, void const*, int)
 T CServerNetworkProperty::IsMarkedForDeletion() const
 T CServerNetworkProperty::MarkForDeletion()
 T CServerNetworkProperty::RecomputePVSInformation()
 T CServerNetworkProperty::Release()
 T CServerNetworkProperty::SetUpdateInterval(float)
 T CServerNetworkProperty::~CServerNetworkProperty()
 T CServerOnlyEntity::ObjectCaps()
 T CServerOnlyPointEntity::KeyValue(char const*, char const*)
 T CServerRagdollTrigger::EndTouch(CBaseEntity*)
 T CServerRagdollTrigger::Spawn()
 T CServerRagdollTrigger::StartTouch(CBaseEntity*)
 T CServerRagdollTrigger::~CServerRagdollTrigger()
 T CServerTools::AddOriginToPVS(Vector const&)
 T CServerTools::CreateEntityByName(char const*)
 T CServerTools::DestroyEntityByHammerId(int)
 T CServerTools::DispatchSpawn(void*)
 T CServerTools::FindEntityByHammerID(int)
 T CServerTools::FirstEntity()
 T CServerTools::GetIServerEntity(IClientEntity*)
 T CServerTools::GetKeyValue(void*, char const*, char*, int)
 T CServerTools::GetPlayerFOV(IClientEntity*)
 T CServerTools::GetPlayerPosition(Vector&, QAngle&, IClientEntity*)
 T CServerTools::IsInNoClipMode(IClientEntity*)
 T CServerTools::MoveEngineViewTo(Vector const&, QAngle const&)
 T CServerTools::NextEntity(void*)
 T CServerTools::ReloadParticleDefintions(char const*, void const*, int)
 T CServerTools::RemoveEntity(int)
 T CServerTools::RespawnEntitiesWithEdits(CEntityRespawnInfo*, int)
 T CServerTools::SetKeyValue(void*, char const*, Vector const&)
 T CServerTools::SetKeyValue(void*, char const*, char const*)
 T CServerTools::SetKeyValue(void*, char const*, float)
 T CServerTools::SetPlayerFOV(int, IClientEntity*)
 T CServerTools::SnapPlayerToPosition(Vector const&, QAngle const&, IClientEntity*)
 T CServerTools::~CServerTools()
 T CShadowControl::CShadowControl()
 T CShadowControl::GetDataDescMap()
 T CShadowControl::GetServerClass()
 T CShadowControl::InputSetAngles(inputdata_t&)
 T CShadowControl::KeyValue(char const*, char const*)
 T CShadowControl::ObjectCaps()
 T CShadowControl::Spawn()
 T CShadowControl::UpdateTransmitState()
 T CShadowControl::YouForgotToImplementOrDeclareServerClass()
 T CShadowControl::~CShadowControl()
 T CSheet::CSheet(CUtlBuffer&)
 T CSheet::~CSheet()
 T CShower::ObjectCaps()
 T CShower::Spawn()
 T CShower::Think()
 T CShower::Touch(CBaseEntity*)
 T CShower::~CShower()
 T CSimThinkManager::EntityChanged(CBaseEntity*)
 T CSimThinkManager::LevelShutdownPostEntity()
 T CSimThinkManager::OnEntityCreated(CBaseEntity*)
 T CSimThinkManager::OnEntityDeleted(CBaseEntity*)
 T CSimThinkManager::~CSimThinkManager()
 T CSimplePhysicsBrush::Spawn()
 T CSimplePhysicsBrush::~CSimplePhysicsBrush()
 T CSimplePhysicsProp::ObjectCaps()
 T CSimplePhysicsProp::Spawn()
 T CSimplePhysicsProp::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSimplePhysicsProp::~CSimplePhysicsProp()
 T CSingleUserRecipientFilter::~CSingleUserRecipientFilter()
 T CSkipKeys::ParseKeyValue(void*, char const*, char const*)
 T CSkipKeys::SetDefaults(void*)
 T CSkyCamera::Activate()
 T CSkyCamera::GetDataDescMap()
 T CSkyCamera::InputActivateSkybox(inputdata_t&)
 T CSkyCamera::Spawn()
 T CSkyCamera::~CSkyCamera()
 T CSkyboxSwapper::GetDataDescMap()
 T CSkyboxSwapper::InputTrigger(inputdata_t&)
 T CSkyboxSwapper::Precache()
 T CSkyboxSwapper::Spawn()
 T CSkyboxSwapper::~CSkyboxSwapper()
 T CSlideshowDisplay::BuildSlideShowImagesList()
 T CSlideshowDisplay::Disable()
 T CSlideshowDisplay::Enable()
 T CSlideshowDisplay::GetDataDescMap()
 T CSlideshowDisplay::GetServerClass()
 T CSlideshowDisplay::InputAddSlides(inputdata_t&)
 T CSlideshowDisplay::InputDisable(inputdata_t&)
 T CSlideshowDisplay::InputEnable(inputdata_t&)
 T CSlideshowDisplay::InputRemoveAllSlides(inputdata_t&)
 T CSlideshowDisplay::InputSetCycleType(inputdata_t&)
 T CSlideshowDisplay::InputSetDisplayText(inputdata_t&)
 T CSlideshowDisplay::InputSetMaxSlideTime(inputdata_t&)
 T CSlideshowDisplay::InputSetMinSlideTime(inputdata_t&)
 T CSlideshowDisplay::InputSetNoListRepeats(inputdata_t&)
 T CSlideshowDisplay::KeyValue(char const*, char const*)
 T CSlideshowDisplay::OnRestore()
 T CSlideshowDisplay::Precache()
 T CSlideshowDisplay::RestoreControlPanels()
 T CSlideshowDisplay::ScreenVisible(bool)
 T CSlideshowDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CSlideshowDisplay::Spawn()
 T CSlideshowDisplay::SpawnControlPanels()
 T CSlideshowDisplay::UpdateTransmitState()
 T CSlideshowDisplay::YouForgotToImplementOrDeclareServerClass()
 T CSlideshowDisplay::~CSlideshowDisplay()
 T CSmallTextEntry::ApplySchemeSettings(vgui::IScheme*)
 T CSmallTextEntry::CSmallTextEntry(vgui::Panel*, char const*)
 T CSmallTextEntry::GetAnimMap()
 T CSmallTextEntry::GetKBMap()
 T CSmallTextEntry::GetMessageMap()
 T CSmallTextEntry::GetPanelClassName()
 T CSmallTextEntry::~CSmallTextEntry()
 T CSmokeGrenade::EmitGrenade(Vector, QAngle, Vector, Vector, CBasePlayer*, CCSWeaponInfo const&)
 T CSmokeGrenade::GetCSWeaponID() const
 T CSmokeGrenade::GetDataDescMap()
 T CSmokeGrenade::GetServerClass()
 T CSmokeGrenade::YouForgotToImplementOrDeclareServerClass()
 T CSmokeGrenade::~CSmokeGrenade()
 T CSmokeGrenadeProjectile::BounceSound()
 T CSmokeGrenadeProjectile::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CBaseCombatCharacter*, CCSWeaponInfo const&)
 T CSmokeGrenadeProjectile::Detonate()
 T CSmokeGrenadeProjectile::GetDataDescMap()
 T CSmokeGrenadeProjectile::GetGrenadeType()
 T CSmokeGrenadeProjectile::GetServerClass()
 T CSmokeGrenadeProjectile::OnBounced()
 T CSmokeGrenadeProjectile::Precache()
 T CSmokeGrenadeProjectile::RemoveGrenadeFromLists()
 T CSmokeGrenadeProjectile::SmokeDetonate()
 T CSmokeGrenadeProjectile::Spawn()
 T CSmokeGrenadeProjectile::Think_Detonate()
 T CSmokeGrenadeProjectile::Think_Fade()
 T CSmokeGrenadeProjectile::Think_Remove()
 T CSmokeGrenadeProjectile::YouForgotToImplementOrDeclareServerClass()
 T CSmokeGrenadeProjectile::~CSmokeGrenadeProjectile()
 T CSmokeStack::Activate()
 T CSmokeStack::CSmokeStack()
 T CSmokeStack::GetDataDescMap()
 T CSmokeStack::GetServerClass()
 T CSmokeStack::InputToggle(inputdata_t&)
 T CSmokeStack::InputTurnOff(inputdata_t&)
 T CSmokeStack::InputTurnOn(inputdata_t&)
 T CSmokeStack::KeyValue(char const*, char const*)
 T CSmokeStack::Precache()
 T CSmokeStack::RecalcWindVector()
 T CSmokeStack::Spawn()
 T CSmokeStack::YouForgotToImplementOrDeclareServerClass()
 T CSmokeStack::~CSmokeStack()
 T CSolidSetDefaults::ParseKeyValue(void*, char const*, char const*)
 T CSolidSetDefaults::SetDefaults(void*)
 T CSortedEntityList::ReportEntityList()
 T CSound::FIsScent()
 T CSound::FIsSound()
 T CSound::GetSoundOrigin()
 T CSound::GetSoundReactOrigin()
 T CSound::Reset()
 T CSoundControllerImp::CheckLoopingSoundsForPlayer(CBasePlayer*)
 T CSoundControllerImp::CommandAdd(CSoundPatch*, float, soundcommands_t, float, float)
 T CSoundControllerImp::CommandClear(CSoundPatch*)
 T CSoundControllerImp::LevelShutdownPreEntity()
 T CSoundControllerImp::OnRestore()
 T CSoundControllerImp::Play(CSoundPatch*, float, float, float)
 T CSoundControllerImp::PreClientUpdate()
 T CSoundControllerImp::ProcessCommand(SoundCommand_t*)
 T CSoundControllerImp::RestoreSoundPatch(CSoundPatch**, IRestore*)
 T CSoundControllerImp::SaveSoundPatch(CSoundPatch*, ISave*)
 T CSoundControllerImp::Shutdown(CSoundPatch*)
 T CSoundControllerImp::SoundChangePitch(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundChangeVolume(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, char const*)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, float, Vector const*, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, float, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, soundlevel_t)
 T CSoundControllerImp::SoundDestroy(CSoundPatch*)
 T CSoundControllerImp::SoundFadeOut(CSoundPatch*, float, bool)
 T CSoundControllerImp::SoundGetName(CSoundPatch*)
 T CSoundControllerImp::SoundGetPitch(CSoundPatch*)
 T CSoundControllerImp::SoundGetScriptName(CSoundPatch*)
 T CSoundControllerImp::SoundGetVolume(CSoundPatch*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopeDescription_t*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopePoint_t*, int)
 T CSoundControllerImp::SoundSetCloseCaptionDuration(CSoundPatch*, float)
 T CSoundControllerImp::SystemReset()
 T CSoundControllerImp::SystemUpdate()
 T CSoundControllerImp::~CSoundControllerImp()
 T CSoundEmitterSystem::AddCaptionFile(char const*)
 T CSoundEmitterSystem::EmitAmbientSound(int, Vector const&, char const*, float, int, int, float, float*)
 T CSoundEmitterSystem::EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float, float*)
 T CSoundEmitterSystem::EmitAmbientSoundAsEntry(CSoundParameters&, int, Vector const&, char const*, float, int, int, float, float*)
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, CSoundParameters const&, EmitSound_t const&)
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, bool, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool, bool)
 T CSoundEmitterSystem::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundEmitterSystem::EmitSoundByHandle(IRecipientFilter&, int, EmitSound_t const&, unsigned int&)
 T CSoundEmitterSystem::EmitSoundBySoundFile(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)
 T CSoundEmitterSystem::GetSoundEntryParameters(int, EmitSound_t const&, CSoundParameters&, unsigned int&)
 T CSoundEmitterSystem::Init()
 T CSoundEmitterSystem::InternalPrecacheWaves(int)
 T CSoundEmitterSystem::LevelInitPostEntity()
 T CSoundEmitterSystem::LevelInitPreEntity()
 T CSoundEmitterSystem::LevelShutdownPostEntity()
 T CSoundEmitterSystem::LoadServerCaptions()
 T CSoundEmitterSystem::LogPrecache(char const*)
 T CSoundEmitterSystem::Name()
 T CSoundEmitterSystem::PrecacheSOSScriptSounds(KeyValues*)
 T CSoundEmitterSystem::PrecacheScriptSound(char const*)
 T CSoundEmitterSystem::PrefetchScriptSound(char const*)
 T CSoundEmitterSystem::PreloadSounds()
 T CSoundEmitterSystem::Shutdown()
 T CSoundEmitterSystem::StartLog()
 T CSoundEmitterSystem::StopSound(int, int, char const*, bool)
 T CSoundEmitterSystem::StopSoundByHandle(int, char const*, unsigned int&, bool)
 T CSoundEmitterSystem::TraceEmitSound(int, char const*, ...)
 T CSoundEmitterSystem::~CSoundEmitterSystem()
 T CSoundEnt::ActiveList()
 T CSoundEnt::ClientSoundIndex(edict_t*)
 T CSoundEnt::FindOrAllocateSound(CBaseEntity*, int)
 T CSoundEnt::FreeSound(int)
 T CSoundEnt::GetDataDescMap()
 T CSoundEnt::InitSoundEnt()
 T CSoundEnt::Initialize()
 T CSoundEnt::InsertSound(int, Vector const&, int, float, CBaseEntity*, int, CBaseEntity*)
 T CSoundEnt::ObjectCaps()
 T CSoundEnt::OnRestore()
 T CSoundEnt::Precache()
 T CSoundEnt::ShutdownSoundEnt()
 T CSoundEnt::SoundPointerForIndex(int)
 T CSoundEnt::Spawn()
 T CSoundEnt::Think()
 T CSoundEnt::~CSoundEnt()
 T CSoundEnvelopeController::GetController()
 T CSoundPatch::AddPlayerPost(CBasePlayer*)
 T CSoundPatch::Init(IRecipientFilter*, CBaseEntity*, int, char const*, soundlevel_t, Vector const*, float)
 T CSoundPatch::ResumeSound()
 T CSoundPatch::Shutdown()
 T CSoundPatch::StartSound(float)
 T CSoundPatch::Update(float, float)
 T CSoundPatchSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CSoundPatchSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CSoundscapeSystem::AddSoundscapeEntity(CEnvSoundscape*)
 T CSoundscapeSystem::AddSoundscapeFile(char const*)
 T CSoundscapeSystem::FrameUpdatePostEntityThink()
 T CSoundscapeSystem::GetSoundscapeIndex(char const*)
 T CSoundscapeSystem::Init()
 T CSoundscapeSystem::IsValidIndex(int)
 T CSoundscapeSystem::LevelInitPostEntity()
 T CSoundscapeSystem::LevelInitPreEntity()
 T CSoundscapeSystem::PrintDebugInfo()
 T CSoundscapeSystem::RemoveSoundscapeEntity(CEnvSoundscape*)
 T CSoundscapeSystem::Shutdown()
 T CSoundscapeSystem::~CSoundscapeSystem()
 T CSpatialEntity::CSpatialEntity()
 T CSpatialEntity::FadeIn()
 T CSpatialEntity::FadeInThink()
 T CSpatialEntity::FadeOut()
 T CSpatialEntity::FadeOutThink()
 T CSpatialEntity::GetDataDescMap()
 T CSpatialEntity::GetServerClass()
 T CSpatialEntity::InputDisable(inputdata_t&)
 T CSpatialEntity::InputEnable(inputdata_t&)
 T CSpatialEntity::InputSetFadeInDuration(inputdata_t&)
 T CSpatialEntity::InputSetFadeOutDuration(inputdata_t&)
 T CSpatialEntity::ObjectCaps()
 T CSpatialEntity::Spawn()
 T CSpatialEntity::UpdateTransmitState()
 T CSpatialEntity::YouForgotToImplementOrDeclareServerClass()
 T CSpatialEntity::~CSpatialEntity()
 T CSplitString::CSplitString(char const*, char const*)
 T CSplitString::Construct(char const*, char const**, int)
 T CSplitString::~CSplitString()
 T CSpotlightEnd::GetDataDescMap()
 T CSpotlightEnd::GetServerClass()
 T CSpotlightEnd::ObjectCaps()
 T CSpotlightEnd::Spawn()
 T CSpotlightEnd::YouForgotToImplementOrDeclareServerClass()
 T CSpotlightEnd::~CSpotlightEnd()
 T CSprayCan::ObjectCaps()
 T CSprayCan::Precache()
 T CSprayCan::Think()
 T CSprayCan::~CSprayCan()
 T CSprite::Animate(float)
 T CSprite::AnimateThink()
 T CSprite::AnimateUntilDead()
 T CSprite::BeginFadeOutThink()
 T CSprite::CSprite()
 T CSprite::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CSprite::ExpandThink()
 T CSprite::GetDataDescMap()
 T CSprite::GetServerClass()
 T CSprite::InputColorBlueValue(inputdata_t&)
 T CSprite::InputColorGreenValue(inputdata_t&)
 T CSprite::InputColorRedValue(inputdata_t&)
 T CSprite::InputHideSprite(inputdata_t&)
 T CSprite::InputShowSprite(inputdata_t&)
 T CSprite::InputToggleSprite(inputdata_t&)
 T CSprite::ObjectCaps()
 T CSprite::OnRestore()
 T CSprite::Precache()
 T CSprite::SetBrightness(int, float)
 T CSprite::SetModel(char const*)
 T CSprite::SetScale(float, float)
 T CSprite::SetSpriteScale(float)
 T CSprite::SetTransparency(int, int, int, int, int, int)
 T CSprite::ShouldTransmit(CCheckTransmitInfo const*)
 T CSprite::Spawn()
 T CSprite::SpriteCreate(char const*, Vector const&, bool)
 T CSprite::SpriteInit(char const*, Vector const&)
 T CSprite::TurnOff()
 T CSprite::TurnOn()
 T CSprite::UpdateTransmitState()
 T CSprite::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSprite::YouForgotToImplementOrDeclareServerClass()
 T CSprite::~CSprite()
 T CSpriteOriented::GetServerClass()
 T CSpriteOriented::Spawn()
 T CSpriteOriented::YouForgotToImplementOrDeclareServerClass()
 T CSpriteOriented::~CSpriteOriented()
 T CSpriteTrail::CSpriteTrail()
 T CSpriteTrail::GetDataDescMap()
 T CSpriteTrail::GetServerClass()
 T CSpriteTrail::Precache()
 T CSpriteTrail::SetLifeTime(float)
 T CSpriteTrail::SetStartWidth(float)
 T CSpriteTrail::SetTextureResolution(float)
 T CSpriteTrail::Spawn()
 T CSpriteTrail::SpriteTrailCreate(char const*, Vector const&, bool)
 T CSpriteTrail::YouForgotToImplementOrDeclareServerClass()
 T CSpriteTrail::~CSpriteTrail()
 T CStatueProp::CStatueProp()
 T CStatueProp::CollisionPartnerThink()
 T CStatueProp::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CStatueProp::CreateVPhysics()
 T CStatueProp::CreateVPhysicsFromHitBoxes(CBaseAnimating*)
 T CStatueProp::CreateVPhysicsFromOBBs(CBaseAnimating*)
 T CStatueProp::Event_Killed(CTakeDamageInfo const&)
 T CStatueProp::Freeze(float, CBaseEntity*, Ray_t*)
 T CStatueProp::GetDataDescMap()
 T CStatueProp::GetServerClass()
 T CStatueProp::OnTakeDamage(CTakeDamageInfo const&)
 T CStatueProp::Precache()
 T CStatueProp::Spawn()
 T CStatueProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CStatueProp::VPhysicsUpdate(IPhysicsObject*)
 T CStatueProp::YouForgotToImplementOrDeclareServerClass()
 T CStatueProp::~CStatueProp()
 T CStdStringSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CStdStringSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CStdStringSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CStdStringSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CSteamAPIContext::Init()
 T CSteamID::Render() const
 T CSteamJet::CSteamJet()
 T CSteamJet::GetDataDescMap()
 T CSteamJet::GetServerClass()
 T CSteamJet::InputToggle(inputdata_t&)
 T CSteamJet::InputTurnOff(inputdata_t&)
 T CSteamJet::InputTurnOn(inputdata_t&)
 T CSteamJet::Precache()
 T CSteamJet::Spawn()
 T CSteamJet::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSteamJet::YouForgotToImplementOrDeclareServerClass()
 T CSteamJet::~CSteamJet()
 T CSteamWorksGameStatsServer::AddSessionIDsToTable(int)
 T CSteamWorksGameStatsServer::GetGameStatsAccountType()
 T CSteamWorksGameStatsServer::WriteSessionRow()
 T CSteamWorksGameStatsServer::~CSteamWorksGameStatsServer()
 T CSteamWorksGameStatsUploader::AddStatsForUpload(KeyValues*, bool)
 T CSteamWorksGameStatsUploader::CSteamWorksGameStatsUploader(char const*, char const*)
 T CSteamWorksGameStatsUploader::EndSession()
 T CSteamWorksGameStatsUploader::FireGameEvent(IGameEvent*)
 T CSteamWorksGameStatsUploader::FrameUpdatePostEntityThink()
 T CSteamWorksGameStatsUploader::GetInterface()
 T CSteamWorksGameStatsUploader::GetTimeSinceEpoch()
 T CSteamWorksGameStatsUploader::Init()
 T CSteamWorksGameStatsUploader::IsPerFrame()
 T CSteamWorksGameStatsUploader::OnSteamSessionClosed(GameStatsSessionClosed_t*, bool)
 T CSteamWorksGameStatsUploader::OnSteamSessionIssued(GameStatsSessionIssued_t*, bool)
 T CSteamWorksGameStatsUploader::ParseKeyValuesAndSendStats(KeyValues*)
 T CSteamWorksGameStatsUploader::RequestSessionID()
 T CSteamWorksGameStatsUploader::Reset()
 T CSteamWorksGameStatsUploader::ServerAddressToInt()
 T CSteamWorksGameStatsUploader::StartSession()
 T CSteamWorksGameStatsUploader::Steam_OnSteamSessionInfoClosed(GameStatsSessionClosed_t*, bool)
 T CSteamWorksGameStatsUploader::Steam_OnSteamSessionInfoIssued(GameStatsSessionIssued_t*, bool)
 T CSteamWorksGameStatsUploader::WriteInt64ToTable(unsigned long long, unsigned long long, char const*)
 T CSteamWorksGameStatsUploader::WriteSessionRow()
 T CSteamWorksGameStatsUploader::~CSteamWorksGameStatsUploader()
 T CStickerKit::CStickerKit()
 T CStickerKit::InitFromKeyValues(KeyValues*, CStickerKit const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CStickerKit::~CStickerKit()
 T CStreamingUGCDownloader::Cleanup()
 T CStreamingUGCDownloader::HTTPRequestPartialContent(unsigned int, unsigned int)
 T CStreamingUGCDownloader::OnHTTPRequestComplete(HTTPRequestCompleted_t*, bool)
 T CStreamingUGCDownloader::StartFileDownload(DedicatedServerUGCFileInfo_t const*, unsigned int)
 T CStreamingUGCDownloader::Update()
 T CStreamingUGCDownloader::~CStreamingUGCDownloader()
 T CStrike15ItemSystem()
 T CStringPool::Allocate(char const*)
 T CStringPool::CStringPool(StringPoolCase_t)
 T CStringPool::Find(char const*)
 T CStringPool::FreeAll()
 T CStringPool::~CStringPool()
 T CStringProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CStringProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringRegistry::AddString(char const*, int)
 T CStringRegistry::CStringRegistry()
 T CStringRegistry::ClearStrings()
 T CStringRegistry::First() const
 T CStringRegistry::GetIDForKey(unsigned short)
 T CStringRegistry::GetStringForKey(unsigned short)
 T CStringRegistry::GetStringID(char const*)
 T CStringRegistry::GetStringText(int)
 T CStringRegistry::InvalidIndex() const
 T CStringRegistry::Next(unsigned short) const
 T CStringRegistry::~CStringRegistry()
 T CStringTableSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CStringTableSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CStringTableSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CStringTableSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CStripWeapons::GetDataDescMap()
 T CStripWeapons::InputStripWeapons(inputdata_t&)
 T CStripWeapons::InputStripWeaponsAndSuit(inputdata_t&)
 T CStripWeapons::~CStripWeapons()
 T CStuckMonitor::Update(CImprovLocomotor*)
 T CStudioHdr::CActivityToSequenceMapping::FindMapping(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::Initialize(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::NumSequencesForActivity(int)
 T CStudioHdr::CActivityToSequenceMapping::Reinitialize(CStudioHdr*)
 T CStudioHdr::CActivityToSequenceMapping::ReleaseMapping(CStudioHdr::CActivityToSequenceMapping*)
 T CStudioHdr::CActivityToSequenceMapping::ResetMappings()
 T CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)
 T CStudioHdr::CActivityToSequenceMapping::ValidateAgainst(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
 T CStudioHdr::CStudioHdr()
 T CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::EntryNode(int)
 T CStudioHdr::ExitNode(int)
 T CStudioHdr::GetActivityListVersion()
 T CStudioHdr::GetAttachmentBone(int)
 T CStudioHdr::GetNumAttachments() const
 T CStudioHdr::GetNumIKAutoplayLocks() const
 T CStudioHdr::GetNumPoseParameters() const
 T CStudioHdr::GetNumSeq_Internal() const
 T CStudioHdr::GetSharedPoseParameter(int, int) const
 T CStudioHdr::GetTransition(int, int) const
 T CStudioHdr::GroupStudioHdr(int)
 T CStudioHdr::Init(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::LookupSequence(char const*)
 T CStudioHdr::RemapSeqBone(int, int) const
 T CStudioHdr::ResetVModel(virtualmodel_t const*) const
 T CStudioHdr::SequencesAvailable() const
 T CStudioHdr::SetActivityListVersion(int)
 T CStudioHdr::SetEventListVersion(int)
 T CStudioHdr::Term()
 T CStudioHdr::iRelativeAnim_Internal(int, int) const
 T CStudioHdr::iRelativeSeq(int, int) const
 T CStudioHdr::pAnimStudioHdr(int)
 T CStudioHdr::pAnimdesc_Internal(int)
 T CStudioHdr::pAttachment(int)
 T CStudioHdr::pIKAutoplayLock(int)
 T CStudioHdr::pPoseParameter(int)
 T CStudioHdr::pSeqStudioHdr(int)
 T CStudioHdr::pSeqdesc_Internal(int)
 T CStudioHdr::pszNodeName(int)
 T CStudioHdr::~CStudioHdr()
 T CSun::Activate()
 T CSun::CSun()
 T CSun::GetDataDescMap()
 T CSun::GetServerClass()
 T CSun::InputSetColor(inputdata_t&)
 T CSun::InputTurnOff(inputdata_t&)
 T CSun::InputTurnOn(inputdata_t&)
 T CSun::UpdateTransmitState()
 T CSun::YouForgotToImplementOrDeclareServerClass()
 T CSun::~CSun()
 T CSunlightShadowControl::CSunlightShadowControl()
 T CSunlightShadowControl::GetDataDescMap()
 T CSunlightShadowControl::GetKeyValue(char const*, char*, int)
 T CSunlightShadowControl::GetServerClass()
 T CSunlightShadowControl::InputDisable(inputdata_t&)
 T CSunlightShadowControl::InputEnable(inputdata_t&)
 T CSunlightShadowControl::InputSetAngles(inputdata_t&)
 T CSunlightShadowControl::InputSetEnableShadows(inputdata_t&)
 T CSunlightShadowControl::InputSetLightColor(inputdata_t&)
 T CSunlightShadowControl::InputSetTexture(inputdata_t&)
 T CSunlightShadowControl::KeyValue(char const*, char const*)
 T CSunlightShadowControl::ObjectCaps()
 T CSunlightShadowControl::Spawn()
 T CSunlightShadowControl::UpdateTransmitState()
 T CSunlightShadowControl::YouForgotToImplementOrDeclareServerClass()
 T CSunlightShadowControl::~CSunlightShadowControl()
 T CSurrender::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CSurrender::CanTeamCallVote(int) const
 T CSurrender::ExecuteCommand()
 T CSurrender::GetDisplayString()
 T CSurrender::GetOtherTeamDisplayString()
 T CSurrender::GetVoteIssue()
 T CSurrender::GetVotePassedString()
 T CSurrender::IsAllyRestrictedVote()
 T CSurrender::IsEnabled()
 T CSurrender::IsEnabledInQueuedMatchmaking()
 T CSurrender::IsUnanimousVoteToPass()
 T CSurrender::ListIssueDetails(CBasePlayer*)
 T CSurrender::MakeVoteFailErrorCodeForClients(vote_create_failed_t)
 T CSurrender::~CSurrender()
 T CSurroundTest::FireCorrectOutput(inputdata_t&)
 T CSurroundTest::GetDataDescMap()
 T CSurroundTest::Spawn()
 T CSurroundTest::~CSurroundTest()
 T CSwapTeams::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CSwapTeams::ExecuteCommand()
 T CSwapTeams::GetDisplayString()
 T CSwapTeams::GetVoteIssue()
 T CSwapTeams::GetVotePassedString()
 T CSwapTeams::IsAllyRestrictedVote()
 T CSwapTeams::IsEnabled()
 T CSwapTeams::ListIssueDetails(CBasePlayer*)
 T CSwapTeams::~CSwapTeams()
 T CTEArmorRicochet::GetServerClass()
 T CTEArmorRicochet::YouForgotToImplementOrDeclareServerClass()
 T CTEArmorRicochet::~CTEArmorRicochet()
 T CTEBSPDecal::GetServerClass()
 T CTEBSPDecal::Test(Vector const&, QAngle const&)
 T CTEBSPDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEBSPDecal::~CTEBSPDecal()
 T CTEBaseBeam::CTEBaseBeam(char const*)
 T CTEBaseBeam::GetServerClass()
 T CTEBaseBeam::YouForgotToImplementOrDeclareServerClass()
 T CTEBaseBeam::~CTEBaseBeam()
 T CTEBeamEntPoint::GetServerClass()
 T CTEBeamEntPoint::Test(Vector const&, QAngle const&)
 T CTEBeamEntPoint::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamEntPoint::~CTEBeamEntPoint()
 T CTEBeamEnts::GetServerClass()
 T CTEBeamEnts::Test(Vector const&, QAngle const&)
 T CTEBeamEnts::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamEnts::~CTEBeamEnts()
 T CTEBeamFollow::GetServerClass()
 T CTEBeamFollow::Test(Vector const&, QAngle const&)
 T CTEBeamFollow::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamFollow::~CTEBeamFollow()
 T CTEBeamLaser::GetServerClass()
 T CTEBeamLaser::Test(Vector const&, QAngle const&)
 T CTEBeamLaser::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamLaser::~CTEBeamLaser()
 T CTEBeamPoints::GetServerClass()
 T CTEBeamPoints::Test(Vector const&, QAngle const&)
 T CTEBeamPoints::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamPoints::~CTEBeamPoints()
 T CTEBeamRing::GetServerClass()
 T CTEBeamRing::Test(Vector const&, QAngle const&)
 T CTEBeamRing::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamRing::~CTEBeamRing()
 T CTEBeamRingPoint::GetServerClass()
 T CTEBeamRingPoint::Test(Vector const&, QAngle const&)
 T CTEBeamRingPoint::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamRingPoint::~CTEBeamRingPoint()
 T CTEBeamSpline::GetServerClass()
 T CTEBeamSpline::Test(Vector const&, QAngle const&)
 T CTEBeamSpline::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamSpline::~CTEBeamSpline()
 T CTEBloodSprite::GetServerClass()
 T CTEBloodSprite::Test(Vector const&, QAngle const&)
 T CTEBloodSprite::YouForgotToImplementOrDeclareServerClass()
 T CTEBloodSprite::~CTEBloodSprite()
 T CTEBloodStream::GetServerClass()
 T CTEBloodStream::Test(Vector const&, QAngle const&)
 T CTEBloodStream::YouForgotToImplementOrDeclareServerClass()
 T CTEBloodStream::~CTEBloodStream()
 T CTEBreakModel::GetServerClass()
 T CTEBreakModel::YouForgotToImplementOrDeclareServerClass()
 T CTEBreakModel::~CTEBreakModel()
 T CTEBubbleTrail::GetServerClass()
 T CTEBubbleTrail::Test(Vector const&, QAngle const&)
 T CTEBubbleTrail::YouForgotToImplementOrDeclareServerClass()
 T CTEBubbleTrail::~CTEBubbleTrail()
 T CTEBubbles::GetServerClass()
 T CTEBubbles::Test(Vector const&, QAngle const&)
 T CTEBubbles::YouForgotToImplementOrDeclareServerClass()
 T CTEBubbles::~CTEBubbles()
 T CTEClientProjectile::GetServerClass()
 T CTEClientProjectile::Test(Vector const&, QAngle const&)
 T CTEClientProjectile::YouForgotToImplementOrDeclareServerClass()
 T CTEClientProjectile::~CTEClientProjectile()
 T CTEDecal::GetServerClass()
 T CTEDecal::Test(Vector const&, QAngle const&)
 T CTEDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEDecal::~CTEDecal()
 T CTEDust::GetServerClass()
 T CTEDust::Test(Vector const&, QAngle const&)
 T CTEDust::YouForgotToImplementOrDeclareServerClass()
 T CTEDust::~CTEDust()
 T CTEDynamicLight::GetServerClass()
 T CTEDynamicLight::Test(Vector const&, QAngle const&)
 T CTEDynamicLight::YouForgotToImplementOrDeclareServerClass()
 T CTEDynamicLight::~CTEDynamicLight()
 T CTEEffectDispatch::GetServerClass()
 T CTEEffectDispatch::YouForgotToImplementOrDeclareServerClass()
 T CTEEffectDispatch::~CTEEffectDispatch()
 T CTEEnergySplash::GetServerClass()
 T CTEEnergySplash::Test(Vector const&, QAngle const&)
 T CTEEnergySplash::YouForgotToImplementOrDeclareServerClass()
 T CTEEnergySplash::~CTEEnergySplash()
 T CTEExplosion::GetServerClass()
 T CTEExplosion::Test(Vector const&, QAngle const&)
 T CTEExplosion::YouForgotToImplementOrDeclareServerClass()
 T CTEExplosion::~CTEExplosion()
 T CTEFireBullets::GetServerClass()
 T CTEFireBullets::YouForgotToImplementOrDeclareServerClass()
 T CTEFireBullets::~CTEFireBullets()
 T CTEFizz::GetServerClass()
 T CTEFizz::Precache()
 T CTEFizz::Test(Vector const&, QAngle const&)
 T CTEFizz::YouForgotToImplementOrDeclareServerClass()
 T CTEFizz::~CTEFizz()
 T CTEFootprintDecal::GetServerClass()
 T CTEFootprintDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEFootprintDecal::~CTEFootprintDecal()
 T CTEFoundryHelpers::GetServerClass()
 T CTEFoundryHelpers::YouForgotToImplementOrDeclareServerClass()
 T CTEFoundryHelpers::~CTEFoundryHelpers()
 T CTEGaussExplosion::GetServerClass()
 T CTEGaussExplosion::Test(Vector const&, QAngle const&)
 T CTEGaussExplosion::YouForgotToImplementOrDeclareServerClass()
 T CTEGaussExplosion::~CTEGaussExplosion()
 T CTEGlowSprite::GetServerClass()
 T CTEGlowSprite::Test(Vector const&, QAngle const&)
 T CTEGlowSprite::YouForgotToImplementOrDeclareServerClass()
 T CTEGlowSprite::~CTEGlowSprite()
 T CTEImpact::GetServerClass()
 T CTEImpact::Precache()
 T CTEImpact::YouForgotToImplementOrDeclareServerClass()
 T CTEImpact::~CTEImpact()
 T CTEKillPlayerAttachments::GetServerClass()
 T CTEKillPlayerAttachments::Test(Vector const&, QAngle const&)
 T CTEKillPlayerAttachments::YouForgotToImplementOrDeclareServerClass()
 T CTEKillPlayerAttachments::~CTEKillPlayerAttachments()
 T CTELargeFunnel::GetServerClass()
 T CTELargeFunnel::Test(Vector const&, QAngle const&)
 T CTELargeFunnel::YouForgotToImplementOrDeclareServerClass()
 T CTELargeFunnel::~CTELargeFunnel()
 T CTEMetalSparks::GetServerClass()
 T CTEMetalSparks::Test(Vector const&, QAngle const&)
 T CTEMetalSparks::YouForgotToImplementOrDeclareServerClass()
 T CTEMetalSparks::~CTEMetalSparks()
 T CTEMuzzleFlash::GetServerClass()
 T CTEMuzzleFlash::Test(Vector const&, QAngle const&)
 T CTEMuzzleFlash::YouForgotToImplementOrDeclareServerClass()
 T CTEMuzzleFlash::~CTEMuzzleFlash()
 T CTEPhysicsProp::GetServerClass()
 T CTEPhysicsProp::YouForgotToImplementOrDeclareServerClass()
 T CTEPhysicsProp::~CTEPhysicsProp()
 T CTEPlantBomb::GetServerClass()
 T CTEPlantBomb::YouForgotToImplementOrDeclareServerClass()
 T CTEPlantBomb::~CTEPlantBomb()
 T CTEPlayerAnimEvent::GetServerClass()
 T CTEPlayerAnimEvent::YouForgotToImplementOrDeclareServerClass()
 T CTEPlayerAnimEvent::~CTEPlayerAnimEvent()
 T CTEPlayerDecal::GetServerClass()
 T CTEPlayerDecal::Test(Vector const&, QAngle const&)
 T CTEPlayerDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEPlayerDecal::~CTEPlayerDecal()
 T CTEProjectedDecal::GetServerClass()
 T CTEProjectedDecal::Test(Vector const&, QAngle const&)
 T CTEProjectedDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEProjectedDecal::~CTEProjectedDecal()
 T CTERadioIcon::GetServerClass()
 T CTERadioIcon::Precache()
 T CTERadioIcon::YouForgotToImplementOrDeclareServerClass()
 T CTERadioIcon::~CTERadioIcon()
 T CTEShatterSurface::GetServerClass()
 T CTEShatterSurface::Test(Vector const&, QAngle const&)
 T CTEShatterSurface::YouForgotToImplementOrDeclareServerClass()
 T CTEShatterSurface::~CTEShatterSurface()
 T CTEShowLine::GetServerClass()
 T CTEShowLine::Test(Vector const&, QAngle const&)
 T CTEShowLine::YouForgotToImplementOrDeclareServerClass()
 T CTEShowLine::~CTEShowLine()
 T CTESmoke::GetServerClass()
 T CTESmoke::Test(Vector const&, QAngle const&)
 T CTESmoke::YouForgotToImplementOrDeclareServerClass()
 T CTESmoke::~CTESmoke()
 T CTESparks::GetServerClass()
 T CTESparks::Test(Vector const&, QAngle const&)
 T CTESparks::YouForgotToImplementOrDeclareServerClass()
 T CTESparks::~CTESparks()
 T CTESprite::GetServerClass()
 T CTESprite::Precache()
 T CTESprite::Test(Vector const&, QAngle const&)
 T CTESprite::YouForgotToImplementOrDeclareServerClass()
 T CTESprite::~CTESprite()
 T CTESpriteSpray::GetServerClass()
 T CTESpriteSpray::Test(Vector const&, QAngle const&)
 T CTESpriteSpray::YouForgotToImplementOrDeclareServerClass()
 T CTESpriteSpray::~CTESpriteSpray()
 T CTEWorldDecal::GetServerClass()
 T CTEWorldDecal::Test(Vector const&, QAngle const&)
 T CTEWorldDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEWorldDecal::~CTEWorldDecal()
 T CTSListWithFreeList<CBaseHandle>::Purge()
 T CTSListWithFreeList<CBaseHandle>::PushItem(CBaseHandle const&)
 T CTSListWithFreeList<CBaseHandle>::~CTSListWithFreeList()
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::PopItem(CNavArea::AreaBindInfo*)
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::Purge()
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::PushItem(CNavArea::AreaBindInfo const&)
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::~CTSListWithFreeList()
 T CTSQueue<CFunctor*, false>::CTSQueue()
 T CTSQueue<CFunctor*, false>::Pop()
 T CTSQueue<CFunctor*, false>::Purge()
 T CTSQueue<CFunctor*, false>::Push(CTSQueue<CFunctor*, false>::Node_t*)
 T CTSQueue<CFunctor*, false>::~CTSQueue()
 T CTSQueue<GCSDK::CWorkItem*, false>::CTSQueue()
 T CTSQueue<GCSDK::CWorkItem*, false>::Pop()
 T CTSQueue<GCSDK::CWorkItem*, false>::PopItem(GCSDK::CWorkItem**)
 T CTSQueue<GCSDK::CWorkItem*, false>::Purge()
 T CTSQueue<GCSDK::CWorkItem*, false>::Push(CTSQueue<GCSDK::CWorkItem*, false>::Node_t*)
 T CTSQueue<GCSDK::CWorkItem*, false>::~CTSQueue()
 T CTakeDamageInfo::AdjustPlayerDamageInflictedForSkillLevel()
 T CTakeDamageInfo::CTakeDamageInfo()
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, CBaseEntity*, float, int, int, int)
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, Vector const&, Vector const&, float, int, int, Vector*, int)
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, float, int, int, int)
 T CTakeDamageInfo::DebugGetDamageTypeString(unsigned int, char*, int)
 T CTakeDamageInfo::Init(CBaseEntity*, CBaseEntity*, CBaseEntity*, Vector const&, Vector const&, Vector const&, float, int, int, int)
 T CTakeDamageInfo::Set(CBaseEntity*, CBaseEntity*, CBaseEntity*, float, int, int, int)
 T CTankTargetChange::GetDataDescMap()
 T CTankTargetChange::Precache()
 T CTankTargetChange::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTankTargetChange::~CTankTargetChange()
 T CTankTrainAI::Activate()
 T CTankTrainAI::GetDataDescMap()
 T CTankTrainAI::InputTargetEntity(inputdata_t&)
 T CTankTrainAI::Precache()
 T CTankTrainAI::SoundEngineStart()
 T CTankTrainAI::Spawn()
 T CTankTrainAI::Think()
 T CTankTrainAI::~CTankTrainAI()
 T CTargetCDAudioRep::GetDataDescMap()
 T CTargetCDAudioRep::InputChangeCDTrack(inputdata_t&)
 T CTargetCDAudioRep::~CTargetCDAudioRep()
 T CTargetChangeGravity::GetDataDescMap()
 T CTargetChangeGravity::InputChangeGrav(inputdata_t&)
 T CTargetChangeGravity::InputResetGrav(inputdata_t&)
 T CTargetChangeGravity::~CTargetChangeGravity()
 T CTeam::AddPlayer(CBasePlayer*)
 T CTeam::AddScore(int)
 T CTeam::AddScoreFirstHalf(int)
 T CTeam::AddScoreOvertime(int)
 T CTeam::AddScoreSecondHalf(int)
 T CTeam::AddSpawnpoint(CTeamSpawnPoint*)
 T CTeam::CTeam()
 T CTeam::DetermineGGLeaderAndSort()
 T CTeam::GetAliveMembers()
 T CTeam::GetClanID()
 T CTeam::GetClanName()
 T CTeam::GetFlagImageString()
 T CTeam::GetGGLeader(int)
 T CTeam::GetLogoImageString()
 T CTeam::GetName()
 T CTeam::GetNumPlayers()
 T CTeam::GetPlayer(int)
 T CTeam::GetScore()
 T CTeam::GetScoreFirstHalf()
 T CTeam::GetScoreOvertime()
 T CTeam::GetScoreSecondHalf()
 T CTeam::GetServerClass()
 T CTeam::GetTeamNumber() const
 T CTeam::Init(char const*, int)
 T CTeam::InitializePlayers()
 T CTeam::InitializeSpawnpoints()
 T CTeam::MarkSurrendered()
 T CTeam::Precache()
 T CTeam::RemovePlayer(CBasePlayer*)
 T CTeam::RemoveSpawnpoint(CTeamSpawnPoint*)
 T CTeam::ResetScores()
 T CTeam::ResetTeamLeaders()
 T CTeam::SetClanID(unsigned int)
 T CTeam::SetClanName(char const*)
 T CTeam::SetFlagImageString(char const*)
 T CTeam::SetLogoImageString(char const*)
 T CTeam::SetName(char const*)
 T CTeam::SetScore(int)
 T CTeam::SetScoreFirstHalf(int)
 T CTeam::SetScoreOvertime(int)
 T CTeam::SetScoreSecondHalf(int)
 T CTeam::ShouldTransmitToPlayer(CBasePlayer*, CBaseEntity*)
 T CTeam::SpawnPlayer(CBasePlayer*)
 T CTeam::TeamGGSortFunction(CCSPlayer* const*, CCSPlayer* const*)
 T CTeam::Think()
 T CTeam::UpdateClientData(CBasePlayer*)
 T CTeam::UpdateTransmitState()
 T CTeam::YouForgotToImplementOrDeclareServerClass()
 T CTeam::~CTeam()
 T CTeamRecipientFilter::CTeamRecipientFilter(int, bool)
 T CTeamRecipientFilter::~CTeamRecipientFilter()
 T CTeamSpawnPoint::Activate()
 T CTeamSpawnPoint::GetDataDescMap()
 T CTeamSpawnPoint::InputDisable(inputdata_t&)
 T CTeamSpawnPoint::InputEnable(inputdata_t&)
 T CTeamSpawnPoint::IsValid(CBasePlayer*)
 T CTeamSpawnPoint::~CTeamSpawnPoint()
 T CTeamVehicleSpawnPoint::Activate()
 T CTeamVehicleSpawnPoint::GetDataDescMap()
 T CTeamVehicleSpawnPoint::~CTeamVehicleSpawnPoint()
 T CTeamplayRoundBasedRulesProxy::InputSetStalemateOnTimelimit(inputdata_t&)
 T CTeamplayRules::CTeamplayRules()
 T CTeamplayRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
 T CTeamplayRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CTeamplayRules::ClientDisconnected(edict_t*)
 T CTeamplayRules::ClientSettingsChanged(CBasePlayer*)
 T CTeamplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CTeamplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CTeamplayRules::GetCaptureValueForPlayer(CBasePlayer*)
 T CTeamplayRules::GetGameDescription()
 T CTeamplayRules::GetIndexedTeamName(int)
 T CTeamplayRules::GetTeamIndex(char const*)
 T CTeamplayRules::HandleScrambleTeams()
 T CTeamplayRules::HandleSwitchTeams()
 T CTeamplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CTeamplayRules::InitHUD(CBasePlayer*)
 T CTeamplayRules::IsTeamplay()
 T CTeamplayRules::IsValidTeam(char const*)
 T CTeamplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*, bool)
 T CTeamplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CTeamplayRules::PlayerMayBlockPoint(CBasePlayer*, int, char*, int)
 T CTeamplayRules::PlayerMayCapturePoint(CBasePlayer*, int, char*, int)
 T CTeamplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CTeamplayRules::PointsMayBeCaptured()
 T CTeamplayRules::Precache()
 T CTeamplayRules::RecountTeams()
 T CTeamplayRules::SetDefaultPlayerTeam(CBasePlayer*)
 T CTeamplayRules::SetLastCapPointChanged(int)
 T CTeamplayRules::SetScrambleTeams(bool)
 T CTeamplayRules::SetStalemate(int, bool, bool)
 T CTeamplayRules::SetSwitchTeams(bool)
 T CTeamplayRules::SetWinningTeam(int, int, bool, bool, bool)
 T CTeamplayRules::ShouldAutoAim(CBasePlayer*, edict_t*)
 T CTeamplayRules::ShouldScrambleTeams()
 T CTeamplayRules::ShouldSwitchTeams()
 T CTeamplayRules::TeamMayCapturePoint(int, int)
 T CTeamplayRules::Think()
 T CTeamplayRules::TimerMayExpire()
 T CTeamplayRules::~CTeamplayRules()
 T CTempEntTester::Create(Vector const&, QAngle const&, char const*, char const*)
 T CTempEntTester::Spawn()
 T CTempEntTester::Think()
 T CTempEntTester::~CTempEntTester()
 T CTempEntsSystem::ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T CTempEntsSystem::BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T CTempEntsSystem::BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T CTempEntsSystem::BeamSpline(IRecipientFilter&, float, int, Vector*)
 T CTempEntsSystem::BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T CTempEntsSystem::BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T CTempEntsSystem::BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T CTempEntsSystem::BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T CTempEntsSystem::Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T CTempEntsSystem::ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, CBaseEntity*)
 T CTempEntsSystem::Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T CTempEntsSystem::Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T CTempEntsSystem::DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float)
 T CTempEntsSystem::EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T CTempEntsSystem::Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char)
 T CTempEntsSystem::Fizz(IRecipientFilter&, float, CBaseEntity const*, int, int, int)
 T CTempEntsSystem::FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T CTempEntsSystem::GaussExplosion(IRecipientFilter&, float, Vector const&, Vector const&, int)
 T CTempEntsSystem::GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T CTempEntsSystem::KillPlayerAttachments(IRecipientFilter&, float, int)
 T CTempEntsSystem::LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T CTempEntsSystem::PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, int, int, color24)
 T CTempEntsSystem::PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T CTempEntsSystem::ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T CTempEntsSystem::ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T CTempEntsSystem::Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T CTempEntsSystem::Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T CTempEntsSystem::SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T CTempEntsSystem::SuppressTE(IRecipientFilter&)
 T CTempEntsSystem::TriggerTempEntity(KeyValues*)
 T CTempEntsSystem::WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T CTempEntsSystem::~CTempEntsSystem()
 T CTemplate_SaveRestoreBlockHandler::GetBlockName()
 T CTemplate_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CTemplate_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CTemplate_SaveRestoreBlockHandler::Save(ISave*)
 T CTemplate_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CTemplatesHook::LevelShutdownPostEntity()
 T CTemplatesHook::~CTemplatesHook()
 T CTesla::Activate()
 T CTesla::DoSpark()
 T CTesla::GetDataDescMap()
 T CTesla::GetServerClass()
 T CTesla::InputDoSpark(inputdata_t&)
 T CTesla::InputTurnOff(inputdata_t&)
 T CTesla::InputTurnOn(inputdata_t&)
 T CTesla::Precache()
 T CTesla::ShootArcThink()
 T CTesla::Spawn()
 T CTesla::YouForgotToImplementOrDeclareServerClass()
 T CTesla::~CTesla()
 T CTestEffect::Precache()
 T CTestEffect::Spawn()
 T CTestEffect::Think()
 T CTestEffect::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTestEffect::~CTestEffect()
 T CTestTraceline::GetDataDescMap()
 T CTestTraceline::GetServerClass()
 T CTestTraceline::Spawn()
 T CTestTraceline::Spin()
 T CTestTraceline::UpdateTransmitState()
 T CTestTraceline::YouForgotToImplementOrDeclareServerClass()
 T CTestTraceline::~CTestTraceline()
 T CTest_ProxyToggle_Networkable::CTest_ProxyToggle_Networkable()
 T CTest_ProxyToggle_Networkable::GetServerClass()
 T CTest_ProxyToggle_Networkable::UpdateTransmitState()
 T CTest_ProxyToggle_Networkable::YouForgotToImplementOrDeclareServerClass()
 T CTest_ProxyToggle_Networkable::~CTest_ProxyToggle_Networkable()
 T CTextStat::~CTextStat()
 T CTextStatsMgr::GetStatsFilename()
 T CTextStatsMgr::SetStatsFilename(char*)
 T CTextStatsMgr::WriteFile(IFileSystem*, char const*)
 T CTextureIdProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureIdProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CTextureIdProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureToggle::GetDataDescMap()
 T CTextureToggle::InputIncrementBrushTexIndex(inputdata_t&)
 T CTextureToggle::InputSetBrushTexIndex(inputdata_t&)
 T CTextureToggle::~CTextureToggle()
 T CThinkContextsSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CThinkContextsSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CThinkContextsSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CThinkContextsSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CThinkSyncTester::EntityThinking(int, CBaseEntity*, float, int)
 T CThinkSyncTester::FindOrAddItem(CBaseEntity*, float)
 T CThinkSyncTester::Report()
 T CThinkSyncTester::ThinkLessFunc(ThinkSync const&, ThinkSync const&)
 T CThinkSyncTester::~CThinkSyncTester()
 T CThreadMutex::~CThreadMutex()
 T CThreadSafeMemoryPool::Alloc(unsigned int)
 T CThreadSafeMemoryPool::CThreadSafeMemoryPool(int, int, int)
 T CThreadSafeMemoryPool::Free(void*, int)
 T CThreadSafeMemoryPool::~CThreadSafeMemoryPool()
 T CThreadSafeMultiMemoryPool::Alloc(unsigned int)
 T CThreadSafeMultiMemoryPool::CThreadSafeMultiMemoryPool(CThreadSafeMultiMemoryPool::MemPoolConfig_t const*, int, int)
 T CThreadSafeMultiMemoryPool::Free(void*)
 T CThreadSafeMultiMemoryPool::~CThreadSafeMultiMemoryPool()
 T CThrustController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTimedEventMgr::CTimedEventMgr()
 T CTimedEventMgr::FireEvents()
 T CTimedEventMgr::~CTimedEventMgr()
 T CTimedItemRewardDefinition::~CTimedItemRewardDefinition()
 T CTimerEntity::DrawDebugTextOverlays()
 T CTimerEntity::FireTimer()
 T CTimerEntity::GetDataDescMap()
 T CTimerEntity::InputAddToTimer(inputdata_t&)
 T CTimerEntity::InputDisable(inputdata_t&)
 T CTimerEntity::InputEnable(inputdata_t&)
 T CTimerEntity::InputFireTimer(inputdata_t&)
 T CTimerEntity::InputRefireTime(inputdata_t&)
 T CTimerEntity::InputResetTimer(inputdata_t&)
 T CTimerEntity::InputSubtractFromTimer(inputdata_t&)
 T CTimerEntity::InputToggle(inputdata_t&)
 T CTimerEntity::Spawn()
 T CTimerEntity::Think()
 T CTimerEntity::~CTimerEntity()
 T CTonemapSystem::LevelInitPostEntity()
 T CTonemapSystem::LevelInitPreEntity()
 T CTonemapSystem::~CTonemapSystem()
 T CTonemapTrigger::EndTouch(CBaseEntity*)
 T CTonemapTrigger::GetDataDescMap()
 T CTonemapTrigger::Spawn()
 T CTonemapTrigger::StartTouch(CBaseEntity*)
 T CTonemapTrigger::~CTonemapTrigger()
 T CToolFrameworkServer::FrameUpdatePostEntityThink()
 T CToolFrameworkServer::FrameUpdatePreEntityThink()
 T CToolFrameworkServer::Init()
 T CToolFrameworkServer::LevelInitPostEntity()
 T CToolFrameworkServer::LevelInitPreEntity()
 T CToolFrameworkServer::LevelShutdownPostEntity()
 T CToolFrameworkServer::LevelShutdownPreEntity()
 T CToolFrameworkServer::PreClientUpdate()
 T CToolFrameworkServer::PreSetupVisibility()
 T CToolFrameworkServer::~CToolFrameworkServer()
 T CTraceFilter::GetTraceType() const
 T CTraceFilterAgainstEntityList::GetTraceType() const
 T CTraceFilterAgainstEntityList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterDoor::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterEntitiesOnly::GetTraceType() const
 T CTraceFilterEntity::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterEntityIgnoreOther::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterLOS::CTraceFilterLOS(IHandleEntity*, int, IHandleEntity*)
 T CTraceFilterLOS::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterMelee::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNav::CTraceFilterNav(CAI_BaseNPC*, bool, IServerEntity const*, int, bool)
 T CTraceFilterNav::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoCombatCharacters::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoNPCsOrPlayer::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoPlayers::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPlayersNPCs::GetTraceType() const
 T CTraceFilterPlayersNPCs::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPlayersNPCsPhysicsProps::GetTraceType() const
 T CTraceFilterPlayersNPCsPhysicsProps::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPushFinal::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPushMove::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimple::CTraceFilterSimple(IHandleEntity const*, int, bool (*)(IHandleEntity*, int))
 T CTraceFilterSimple::SetCollisionGroup(int)
 T CTraceFilterSimple::SetPassEntity(IHandleEntity const*)
 T CTraceFilterSimple::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimpleList::AddEntityToIgnore(IHandleEntity*)
 T CTraceFilterSimpleList::CTraceFilterSimpleList(int)
 T CTraceFilterSimpleList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipNPCs::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntities::CTraceFilterSkipTwoEntities(IHandleEntity const*, IHandleEntity const*, int)
 T CTraceFilterSkipTwoEntities::SetPassEntity2(IHandleEntity const*)
 T CTraceFilterSkipTwoEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntitiesAndCheckTeamMask::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntitiesAndTeammates::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterValidForDecal::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWalkableEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTracePassFilter::ShouldHitEntity(IHandleEntity*, int)
 T CTriggerAutoCrouch::EndTouch(CBaseEntity*)
 T CTriggerAutoCrouch::GetDataDescMap()
 T CTriggerAutoCrouch::PassesTriggerFilters(CBaseEntity*)
 T CTriggerAutoCrouch::Spawn()
 T CTriggerAutoCrouch::StartTouch(CBaseEntity*)
 T CTriggerAutoCrouch::~CTriggerAutoCrouch()
 T CTriggerBombReset::GetDataDescMap()
 T CTriggerBombReset::Spawn()
 T CTriggerBombReset::Touch(CBaseEntity*)
 T CTriggerBombReset::~CTriggerBombReset()
 T CTriggerBrush::EndTouch(CBaseEntity*)
 T CTriggerBrush::GetDataDescMap()
 T CTriggerBrush::InputDisable(inputdata_t&)
 T CTriggerBrush::InputEnable(inputdata_t&)
 T CTriggerBrush::Spawn()
 T CTriggerBrush::StartTouch(CBaseEntity*)
 T CTriggerBrush::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerBrush::~CTriggerBrush()
 T CTriggerCDAudio::Spawn()
 T CTriggerCDAudio::Touch(CBaseEntity*)
 T CTriggerCDAudio::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerCDAudio::~CTriggerCDAudio()
 T CTriggerCamera::Disable()
 T CTriggerCamera::Enable()
 T CTriggerCamera::FindAttachment()
 T CTriggerCamera::FollowTarget()
 T CTriggerCamera::GetDataDescMap()
 T CTriggerCamera::GetScriptDesc()
 T CTriggerCamera::InputDisable(inputdata_t&)
 T CTriggerCamera::InputEnable(inputdata_t&)
 T CTriggerCamera::InputReturnToEyes(inputdata_t&)
 T CTriggerCamera::InputSetPath(inputdata_t&)
 T CTriggerCamera::InputSetTarget(inputdata_t&)
 T CTriggerCamera::InputSetTargetAttachment(inputdata_t&)
 T CTriggerCamera::InputSetTrackSpeed(inputdata_t&)
 T CTriggerCamera::InputTeleportToView(inputdata_t&)
 T CTriggerCamera::KeyValue(char const*, char const*)
 T CTriggerCamera::Move()
 T CTriggerCamera::MoveViewTo(QAngle)
 T CTriggerCamera::ReturnToEyes()
 T CTriggerCamera::ScriptGetFov()
 T CTriggerCamera::ScriptSetFov(int, float)
 T CTriggerCamera::Spawn()
 T CTriggerCamera::StartCameraShot(char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*, float)
 T CTriggerCamera::UpdateTransmitState()
 T CTriggerCamera::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerCamera::~CTriggerCamera()
 T CTriggerCameraMultiplayer::AddPlayer(CBasePlayer*)
 T CTriggerCameraMultiplayer::Disable()
 T CTriggerCameraMultiplayer::Enable()
 T CTriggerCameraMultiplayer::GetDataDescMap()
 T CTriggerCameraMultiplayer::InputAddPlayer(inputdata_t&)
 T CTriggerCameraMultiplayer::InputDisable(inputdata_t&)
 T CTriggerCameraMultiplayer::InputEnable(inputdata_t&)
 T CTriggerCameraMultiplayer::InputRemovePlayer(inputdata_t&)
 T CTriggerCameraMultiplayer::InputStartMovement(inputdata_t&)
 T CTriggerCameraMultiplayer::MoveTime(float)
 T CTriggerCameraMultiplayer::Spawn()
 T CTriggerCameraMultiplayer::UpdateTransmitState()
 T CTriggerCameraMultiplayer::~CTriggerCameraMultiplayer()
 T CTriggerGravity::EndTouch(CBaseEntity*)
 T CTriggerGravity::GetDataDescMap()
 T CTriggerGravity::GravityTouch(CBaseEntity*)
 T CTriggerGravity::Spawn()
 T CTriggerGravity::~CTriggerGravity()
 T CTriggerHierarchy::Activate()
 T CTriggerHierarchy::GetDataDescMap()
 T CTriggerHierarchy::HasChildThatPassesChildFilter(CBaseEntity*)
 T CTriggerHierarchy::PassesTriggerFilters(CBaseEntity*)
 T CTriggerHierarchy::~CTriggerHierarchy()
 T CTriggerHurt::EndTouch(CBaseEntity*)
 T CTriggerHurt::GetDataDescMap()
 T CTriggerHurt::HurtAllTouchers(float)
 T CTriggerHurt::HurtEntity(CBaseEntity*, float)
 T CTriggerHurt::HurtThink()
 T CTriggerHurt::NavThink()
 T CTriggerHurt::RadiationThink()
 T CTriggerHurt::Spawn()
 T CTriggerHurt::Touch(CBaseEntity*)
 T CTriggerHurt::~CTriggerHurt()
 T CTriggerImpact::DrawDebugTextOverlays()
 T CTriggerImpact::GetDataDescMap()
 T CTriggerImpact::InputImpact(inputdata_t&)
 T CTriggerImpact::InputSetMagnitude(inputdata_t&)
 T CTriggerImpact::Spawn()
 T CTriggerImpact::StartTouch(CBaseEntity*)
 T CTriggerImpact::~CTriggerImpact()
 T CTriggerLook::Activate()
 T CTriggerLook::DrawDebugTextOverlays()
 T CTriggerLook::EndTouch(CBaseEntity*)
 T CTriggerLook::GetDataDescMap()
 T CTriggerLook::Spawn()
 T CTriggerLook::StartTouch(CBaseEntity*)
 T CTriggerLook::TimeoutThink()
 T CTriggerLook::Touch(CBaseEntity*)
 T CTriggerLook::Trigger(CBaseEntity*, bool)
 T CTriggerLook::~CTriggerLook()
 T CTriggerMultiple::ActivateMultiTrigger(CBaseEntity*)
 T CTriggerMultiple::GetDataDescMap()
 T CTriggerMultiple::MultiTouch(CBaseEntity*)
 T CTriggerMultiple::MultiWaitOver()
 T CTriggerMultiple::Spawn()
 T CTriggerMultiple::~CTriggerMultiple()
 T CTriggerOnce::Spawn()
 T CTriggerOnce::~CTriggerOnce()
 T CTriggerPlayerMovement::EndTouch(CBaseEntity*)
 T CTriggerPlayerMovement::GetDataDescMap()
 T CTriggerPlayerMovement::GetServerClass()
 T CTriggerPlayerMovement::Spawn()
 T CTriggerPlayerMovement::StartTouch(CBaseEntity*)
 T CTriggerPlayerMovement::YouForgotToImplementOrDeclareServerClass()
 T CTriggerPlayerMovement::~CTriggerPlayerMovement()
 T CTriggerProximity::Activate()
 T CTriggerProximity::EndTouch(CBaseEntity*)
 T CTriggerProximity::GetDataDescMap()
 T CTriggerProximity::MeasureThink()
 T CTriggerProximity::Spawn()
 T CTriggerProximity::StartTouch(CBaseEntity*)
 T CTriggerProximity::~CTriggerProximity()
 T CTriggerPush::Activate()
 T CTriggerPush::DrawDebugGeometryOverlays()
 T CTriggerPush::GetDataDescMap()
 T CTriggerPush::InputSetPushDirection(inputdata_t&)
 T CTriggerPush::Spawn()
 T CTriggerPush::Touch(CBaseEntity*)
 T CTriggerPush::~CTriggerPush()
 T CTriggerRemove::GetDataDescMap()
 T CTriggerRemove::Spawn()
 T CTriggerRemove::Touch(CBaseEntity*)
 T CTriggerRemove::~CTriggerRemove()
 T CTriggerSave::GetDataDescMap()
 T CTriggerSave::Spawn()
 T CTriggerSave::Touch(CBaseEntity*)
 T CTriggerSave::~CTriggerSave()
 T CTriggerSoundscape::Activate()
 T CTriggerSoundscape::EndTouch(CBaseEntity*)
 T CTriggerSoundscape::GetDataDescMap()
 T CTriggerSoundscape::PlayerUpdateThink()
 T CTriggerSoundscape::Spawn()
 T CTriggerSoundscape::StartTouch(CBaseEntity*)
 T CTriggerSoundscape::~CTriggerSoundscape()
 T CTriggerTeleport::GetDataDescMap()
 T CTriggerTeleport::InputSetTarget(inputdata_t&)
 T CTriggerTeleport::Spawn()
 T CTriggerTeleport::Touch(CBaseEntity*)
 T CTriggerTeleport::~CTriggerTeleport()
 T CTriggerToggleSave::GetDataDescMap()
 T CTriggerToggleSave::InputDisable(inputdata_t&)
 T CTriggerToggleSave::InputEnable(inputdata_t&)
 T CTriggerToggleSave::Spawn()
 T CTriggerToggleSave::Touch(CBaseEntity*)
 T CTriggerToggleSave::~CTriggerToggleSave()
 T CTriggerTraceEnum::EnumEntity(IHandleEntity*)
 T CTriggerVPhysicsMotion::CreateVPhysics()
 T CTriggerVPhysicsMotion::EndTouch(CBaseEntity*)
 T CTriggerVPhysicsMotion::GetDataDescMap()
 T CTriggerVPhysicsMotion::InputSetVelocityLimitTime(inputdata_t&)
 T CTriggerVPhysicsMotion::OnRestore()
 T CTriggerVPhysicsMotion::Precache()
 T CTriggerVPhysicsMotion::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTriggerVPhysicsMotion::Spawn()
 T CTriggerVPhysicsMotion::StartTouch(CBaseEntity*)
 T CTriggerVPhysicsMotion::UpdateOnRemove()
 T CTriggerVPhysicsMotion::~CTriggerVPhysicsMotion()
 T CTriggerViewProxy::Disable()
 T CTriggerViewProxy::Enable()
 T CTriggerViewProxy::GetDataDescMap()
 T CTriggerViewProxy::GetPlayerOffset()
 T CTriggerViewProxy::InputDisable(inputdata_t&)
 T CTriggerViewProxy::InputEnable(inputdata_t&)
 T CTriggerViewProxy::InputTeleportPlayerToProxy(inputdata_t&)
 T CTriggerViewProxy::KeyValue(char const*, char const*)
 T CTriggerViewProxy::Move()
 T CTriggerViewProxy::Spawn()
 T CTriggerViewProxy::TranslateViewToProxy()
 T CTriggerViewProxy::UpdateTransmitState()
 T CTriggerViewProxy::~CTriggerViewProxy()
 T CTriggerVolume::Activate()
 T CTriggerVolume::Spawn()
 T CTriggerVolume::~CTriggerVolume()
 T CTriggerWind::CreateVPhysics()
 T CTriggerWind::DrawDebugTextOverlays()
 T CTriggerWind::EndTouch(CBaseEntity*)
 T CTriggerWind::GetDataDescMap()
 T CTriggerWind::InputSetSpeed(inputdata_t&)
 T CTriggerWind::KeyValue(char const*, char const*)
 T CTriggerWind::OnRestore()
 T CTriggerWind::Spawn()
 T CTriggerWind::StartTouch(CBaseEntity*)
 T CTriggerWind::UpdateOnRemove()
 T CTriggerWind::WindThink()
 T CTriggerWind::~CTriggerWind()
 T CUnpauseMatchIssue::CanCallVote(int, char const*, char const*, vote_create_failed_t&, int&)
 T CUnpauseMatchIssue::ExecuteCommand()
 T CUnpauseMatchIssue::GetDisplayString()
 T CUnpauseMatchIssue::GetFailedVoteLockOutTime()
 T CUnpauseMatchIssue::GetVoteIssue()
 T CUnpauseMatchIssue::GetVotePassedString()
 T CUnpauseMatchIssue::IsEnabled()
 T CUnpauseMatchIssue::IsEnabledDuringWarmup()
 T CUnpauseMatchIssue::IsEnabledInQueuedMatchmaking()
 T CUnpauseMatchIssue::IsUnanimousVoteToPass()
 T CUnpauseMatchIssue::ListIssueDetails(CBasePlayer*)
 T CUnpauseMatchIssue::ShouldIgnoreCreationTimer()
 T CUnpauseMatchIssue::~CUnpauseMatchIssue()
 T CUsePushFilter::ShouldHitEntity(IHandleEntity*, int)
 T CUserCmd::operator=(CUserCmd const&)
 T CUserCmd::~CUserCmd()
 T CUserMessageThrottleMgr::ShouldThrottle(CBasePlayer*, char const*)
 T CUserMessageThrottleMgr::~CUserMessageThrottleMgr()
 T CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 T CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 T CUtlBinaryBlock::Set(void const*, int)
 T CUtlBinaryBlock::SetLength(int)
 T CUtlBuffer::AddNullTermination(int)
 T CUtlBuffer::AssumeMemory(void*, int, int, int)
 T CUtlBuffer::CUtlBuffer(int, int, int)
 T CUtlBuffer::CUtlBuffer(void const*, int, int)
 T CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 T CUtlBuffer::CheckGet(int)
 T CUtlBuffer::CheckPut(int)
 T CUtlBuffer::EatCPPComment()
 T CUtlBuffer::EatWhiteSpace()
 T CUtlBuffer::EnsureCapacity(int)
 T CUtlBuffer::Get(void*, int)
 T CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 T CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 T CUtlBuffer::GetLine(char*, int)
 T CUtlBuffer::GetOverflow(int)
 T CUtlBuffer::GetString(char*, int)
 T CUtlBuffer::GetToken(char const*)
 T CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 T CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
 T CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 T CUtlBuffer::PeekGet(int, int)
 T CUtlBuffer::PeekLineLength()
 T CUtlBuffer::PeekStringLength()
 T CUtlBuffer::PeekStringMatch(int, char const*, int)
 T CUtlBuffer::PeekWhiteSpace(int)
 T CUtlBuffer::Printf(char const*, ...)
 T CUtlBuffer::Put(void const*, int)
 T CUtlBuffer::PutOverflow(int)
 T CUtlBuffer::PutString(char const*)
 T CUtlBuffer::Scanf(char const*, ...)
 T CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SetBufferType(bool, bool)
 T CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 T CUtlBuffer::VaScanf(char const*, char*)
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCachedFileData<CModelSoundsCache>::CheckDiskInfo(bool, long)
 T CUtlCachedFileData<CModelSoundsCache>::FileNameHandleLessFunc(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&)
 T CUtlCachedFileData<CModelSoundsCache>::Get(char const*)
 T CUtlCachedFileData<CModelSoundsCache>::GetIndex(char const*)
 T CUtlCachedFileData<CModelSoundsCache>::Init()
 T CUtlCachedFileData<CModelSoundsCache>::InitLargeBuffer(void*&, bool&)
 T CUtlCachedFileData<CModelSoundsCache>::InitSmallBuffer(void*&, int, bool&)
 T CUtlCachedFileData<CModelSoundsCache>::Save()
 T CUtlCachedFileData<CModelSoundsCache>::SaveManifest()
 T CUtlCachedFileData<CModelSoundsCache>::Shutdown()
 T CUtlCachedFileData<CModelSoundsCache>::~CUtlCachedFileData()
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlDict<AchievementAward_t*, int>::RemoveAll()
 T CUtlDict<BasicGameStatsRecord_t, unsigned short>::Insert(char const*)
 T CUtlDict<BasicGameStatsRecord_t, unsigned short>::RemoveAll()
 T CUtlDict<CActivityRemapCache, int>::RemoveAll()
 T CUtlDict<CActivityRemapCache, int>::~CUtlDict()
 T CUtlDict<CBitVec<255>, int>::RemoveAll()
 T CUtlDict<CDecalEmitterSystem::DecalEntry, int>::RemoveAll()
 T CUtlDict<CEconLootListDefinition, int>::RemoveAll()
 T CUtlDict<CInstancedResponseSystem*, int>::RemoveAll()
 T CUtlDict<CNavArea*, int>::RemoveAll()
 T CUtlDict<CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::RemoveAll()
 T CUtlDict<CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::RemoveAll()
 T CUtlDict<CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::RemoveAll()
 T CUtlDict<CSStatType_t, short>::RemoveAll()
 T CUtlDict<CStickerKit*, int>::RemoveAll()
 T CUtlDict<CStickerList*, int>::RemoveAll()
 T CUtlDict<CUtlConstStringBase<char>, int>::RemoveAll()
 T CUtlDict<CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int>::RemoveAll()
 T CUtlDict<CWebResource*, int>::RemoveAll()
 T CUtlDict<ConceptHistory_t, int>::Insert(char const*, ConceptHistory_t const&)
 T CUtlDict<ConceptHistory_t, int>::RemoveAll()
 T CUtlDict<EventGroup, int>::RemoveAll()
 T CUtlDict<FileWeaponInfo_t*, unsigned short>::RemoveAll()
 T CUtlDict<IEntityFactory*, unsigned short>::RemoveAll()
 T CUtlDict<ResponseRules::CResponseSystem::Enumeration, short>::RemoveAll()
 T CUtlDict<ResponseRules::Criteria, short>::Insert(char const*)
 T CUtlDict<ResponseRules::Criteria, short>::RemoveAll()
 T CUtlDict<ResponseRules::ResponseGroup, short>::Insert(char const*)
 T CUtlDict<ResponseRules::ResponseGroup, short>::RemoveAll()
 T CUtlDict<float, int>::RemoveAll()
 T CUtlDict<int, int>::RemoveAll()
 T CUtlDict<int, int>::~CUtlDict()
 T CUtlDict<int, unsigned short>::RemoveAll()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::RemoveAll()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::~CUtlDict()
 T CUtlFixedLinkedList<CAI_PlaneSolver::CircleObstacles_t>::~CUtlFixedLinkedList()
 T CUtlFixedLinkedList<CInfoCameraLink*>::~CUtlFixedLinkedList()
 T CUtlHandleTable<vgui::BuildGroup, 20>::AddHandle()
 T CUtlHandleTable<vgui::BuildGroup, 20>::RemoveHandle(unsigned int)
 T CUtlHandleTable<vgui::BuildGroup, 20>::~CUtlHandleTable()
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::Insert(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::Insert(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::Insert(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CGameSaveRestoreInfo::CHashElement, CGameSaveRestoreInfo::CHashFuncs, CGameSaveRestoreInfo::CHashFuncs>::Insert(CGameSaveRestoreInfo::CHashElement const&)
 T CUtlHash<CNavNode*, CNodeHashFuncs, CNodeHashFuncs>::Insert(CNavNode* const&, bool*)
 T CUtlHash<CNavNode*, CNodeHashFuncs, CNodeHashFuncs>::~CUtlHash()
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::Insert(CStudioHdr::CActivityToSequenceMapping::HashValueType const&)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::~CUtlHash()
 T CUtlHash<EntsByStringList_t, CEntsByStringHashFuncs, CEntsByStringHashFuncs>::Insert(EntsByStringList_t const&)
 T CUtlHash<EntsByStringList_t, CEntsByStringHashFuncs, CEntsByStringHashFuncs>::~CUtlHash()
 T CUtlHash<NavVisPair_t, CVisPairHashFuncs, CVisPairHashFuncs>::Insert(NavVisPair_t const&)
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::EnsureCapacity(int)
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::Find(char const* const&) const
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::IncrementalRehash()
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::InsertInternal(char const* const&, GCSDK::JobType_t const* const&, CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::EInsertPolicy)
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::RehashNodesInBucket(int)
 T CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::~CUtlHashMapLarge()
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::EnsureCapacity(int)
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::Find(int const&) const
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::IncrementalRehash()
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::InsertInternal(int const&, CEconItemDefinition* const&, CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::EInsertPolicy)
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::PurgeAndDeleteElements()
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::RemoveAt(int)
 T CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::~CUtlHashMapLarge()
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EnsureCapacity(int)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Find(unsigned int const&) const
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::IncrementalRehash()
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::InsertInternal(unsigned int const&, GCSDK::JobStatsBucket_t const&, CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EInsertPolicy)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::~CUtlHashMapLarge()
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EnsureCapacity(int)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Find(unsigned int const&) const
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::IncrementalRehash()
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::InsertInternal(unsigned int const&, GCSDK::JobType_t const* const&, CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EInsertPolicy)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::~CUtlHashMapLarge()
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EnsureCapacity(int)
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Find(unsigned int const&) const
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::IncrementalRehash()
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::InsertInternal(unsigned int const&, int const&, CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::EInsertPolicy)
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::~CUtlHashMapLarge()
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::EnsureCapacity(int)
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::Find(unsigned long long const&) const
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::IncrementalRehash()
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::InsertInternal(unsigned long long const&, GCSDK::CJob* const&, CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::EInsertPolicy)
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::RemoveAt(int)
 T CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::~CUtlHashMapLarge()
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::EnsureCapacity(int)
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::Find(unsigned long long const&) const
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::IncrementalRehash()
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::InsertInternal(unsigned long long const&, int const&, CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::EInsertPolicy)
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::RehashNodesInBucket(int)
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::RemoveAt(int)
 T CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::~CUtlHashMapLarge()
 T CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::BumpEntry(unsigned int)
 T CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoRealloc(int)
 T CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::Find(unsigned int) const
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::AllocInternal(bool)
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::RemoveAll()
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::Unlink(int)
 T CUtlLinkedList<ActiveGrenade*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<ActiveGrenade*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<ActiveGrenade*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<ActiveGrenade*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<ActiveGrenade*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<ActiveGrenade*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<ActiveGrenade*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<ActiveGrenade*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<BotProfile*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<BotProfile*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<BotProfile*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<BotProfile*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<BotProfile*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<BotProfile*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CAI_PlaneSolver::CircleObstacles_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CAI_PlaneSolver::CircleObstacles_t, int> > >::RemoveAll()
 T CUtlLinkedList<CAI_PlaneSolver::CircleObstacles_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CAI_PlaneSolver::CircleObstacles_t, int> > >::Unlink(int)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CDamageRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDamageRecord*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CDamageRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDamageRecord*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<CDamageRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDamageRecord*, int>, int> >::Purge()
 T CUtlLinkedList<CDamageRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDamageRecord*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared::WindAveEvent_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared::WindAveEvent_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared::WindVariationEvent_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared::WindVariationEvent_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::Purge()
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::RemoveAll()
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::Unlink(int)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::RemoveAll()
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::Unlink(int)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::AllocInternal(bool)
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::LinkAfter(int, int)
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::RemoveAll()
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::Unlink(int)
 T CUtlLinkedList<ResponseRules::CRR_Concept, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::GraphPanel::Sample_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::GraphPanel::Sample_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::Free(unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::LinkBefore(unsigned char, unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::~CUtlLinkedList()
 T CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Remove(IPhysicsObject* const&)
 T CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Remove(IPhysicsObject* const&)
 T CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Insert(char const* const&, CDecalEmitterSystem::DecalEntry const&)
 T CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Insert(char const* const&)
 T CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Find(char const* const&) const
 T CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Insert(char const* const&)
 T CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Insert(char const* const&, CUtlConstStringBase<char> const&)
 T CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Find(char const* const&) const
 T CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Find(char const* const&) const
 T CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Find(char const* const&) const
 T CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Find(int const&) const
 T CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::~CUtlMap()
 T CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::PurgeAndDeleteElements()
 T CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::PurgeAndDeleteElements()
 T CUtlMap<int, CPaintKit*, int, CDefLess<int> >::PurgeAndDeleteElements()
 T CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::~CUtlMap()
 T CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::~CUtlMap()
 T CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::~CUtlMap()
 T CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::PurgeAndDeleteElements()
 T CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::~CUtlMap()
 T CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Remove(unsigned int const&)
 T CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::~CUtlMap()
 T CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Find(unsigned long long const&) const
 T CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Insert(unsigned long long const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>, 2, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlMemory<AIChannelScheduleState_t, int>::Grow(int)
 T CUtlMemory<AIRebalanceInfo_t, int>::Grow(int)
 T CUtlMemory<AISquadEnemyInfo_t, int>::Grow(int)
 T CUtlMemory<AI_FollowGroup_t*, int>::Grow(int)
 T CUtlMemory<AI_MoveSuggestion_t, int>::Grow(int)
 T CUtlMemory<AI_NearNode_t, int>::Grow(int)
 T CUtlMemory<AI_Waypoint_t, int>::Grow(int)
 T CUtlMemory<Activity, int>::Grow(int)
 T CUtlMemory<AppSystemInfo_t, int>::Grow(int)
 T CUtlMemory<AssetModifier*, int>::Grow(int)
 T CUtlMemory<AsyncCaption_t, int>::Grow(int)
 T CUtlMemory<BotChatterOutputType, int>::Grow(int)
 T CUtlMemory<BotEventInterface*, int>::Grow(int)
 T CUtlMemory<BotPhrase*, int>::Grow(int)
 T CUtlMemory<BotProfile const*, int>::Grow(int)
 T CUtlMemory<BotSpeakable*, int>::Grow(int)
 T CUtlMemory<CAI_BaseNPC*, int>::Grow(int)
 T CUtlMemory<CAI_BlendedMotor::AI_Movementscript_t, int>::Grow(int)
 T CUtlMemory<CAI_Hint*, int>::Grow(int)
 T CUtlMemory<CAI_InterestTarget_t, int>::Grow(int)
 T CUtlMemory<CAI_Link*, int>::Grow(int)
 T CUtlMemory<CAI_PlaneSolver::CircleObstacles_t, int>::Grow(int)
 T CUtlMemory<CAI_ScriptConditionsElement, int>::Grow(int)
 T CUtlMemory<CAnimationLayer, int>::Grow(int)
 T CUtlMemory<CAttributeManager::cached_attribute_float_t, int>::Grow(int)
 T CUtlMemory<CBaseEntity*, int>::Grow(int)
 T CUtlMemory<CBaseIssue*, int>::Grow(int)
 T CUtlMemory<CBaseIssue::FailedVote*, int>::Grow(int)
 T CUtlMemory<CBasePlayer*, int>::Grow(int)
 T CUtlMemory<CBaseServerVehicle::entryanim_t, int>::Grow(int)
 T CUtlMemory<CBaseServerVehicle::exitanim_t, int>::Grow(int)
 T CUtlMemory<CCSBot*, int>::Grow(int)
 T CUtlMemory<CCSPlayer*, int>::Grow(int)
 T CUtlMemory<CChoreoActor*, int>::Grow(int)
 T CUtlMemory<CChoreoChannel*, int>::Grow(int)
 T CUtlMemory<CChoreoEvent*, int>::Grow(int)
 T CUtlMemory<CChoreoScene*, int>::Grow(int)
 T CUtlMemory<CCollectionInfoHTTPRequest*, int>::Grow(int)
 T CUtlMemory<CCommandContext, int>::Grow(int)
 T CUtlMemory<CConstraintFloodEntry, int>::Grow(int)
 T CUtlMemory<CDecalEmitterSystem::DecalListEntry, int>::Grow(int)
 T CUtlMemory<CDmxAttribute*, int>::Grow(int)
 T CUtlMemory<CDmxElement*, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::DictInfo_t, int>::Grow(int)
 T CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int>::Grow(int)
 T CUtlMemory<CEconColorDefinition*, int>::Grow(int)
 T CUtlMemory<CEconItemAttribute, int>::Grow(int)
 T CUtlMemory<CEconItemDefinition const*, int>::Grow(int)
 T CUtlMemory<CEconItemDefinition*, int>::Grow(int)
 T CUtlMemory<CEconItemPreviewDataBlock*, int>::Grow(int)
 T CUtlMemory<CEconItemSchema::EquipRegion, int>::Grow(int)
 T CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int>::Grow(int)
 T CUtlMemory<CEconItemView*, int>::Grow(int)
 T CUtlMemory<CEconLootListDefinition::loot_list_additional_drop_t, int>::Grow(int)
 T CUtlMemory<CEconLootListDefinition::lootlist_attrib_t, int>::Grow(int)
 T CUtlMemory<CEconLootListDefinition::random_attrib_t*, int>::Grow(int)
 T CUtlMemory<CEconStyleInfo*, int>::Grow(int)
 T CUtlMemory<CEffectScriptElement, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEnvSoundscape*, int>::Grow(int)
 T CUtlMemory<CEventAbsoluteTag, int>::Grow(int)
 T CUtlMemory<CEventRegister*, int>::Grow(int)
 T CUtlMemory<CEventRelativeTag, int>::Grow(int)
 T CUtlMemory<CExpressionSample, int>::Grow(int)
 T CUtlMemory<CFish*, int>::Grow(int)
 T CUtlMemory<CFlexAnimationTrack*, int>::Grow(int)
 T CUtlMemory<CFlexSceneFile*, int>::Grow(int)
 T CUtlMemory<CFlexTimingTag, int>::Grow(int)
 T CUtlMemory<CFogVolume*, int>::Grow(int)
 T CUtlMemory<CFuncLadder*, int>::Grow(int)
 T CUtlMemory<CFunctor*, int>::Grow(int)
 T CUtlMemory<CGameSaveRestoreInfo::CHashElement, int>::Grow(int)
 T CUtlMemory<CGameWeaponManager*, int>::Grow(int)
 T CUtlMemory<CGlobalEvent*, int>::Grow(int)
 T CUtlMemory<CHandle<CAI_BaseNPC>, int>::Grow(int)
 T CUtlMemory<CHandle<CAI_DynamicLink>, int>::Grow(int)
 T CUtlMemory<CHandle<CBaseEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CBaseFlex>, int>::Grow(int)
 T CUtlMemory<CHandle<CBasePlayer>, int>::Grow(int)
 T CUtlMemory<CHandle<CBasePropDoor>, int>::Grow(int)
 T CUtlMemory<CHandle<CCSPlayer>, int>::Grow(int)
 T CUtlMemory<CHandle<CEnvMicrophone>, int>::Grow(int)
 T CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int>::Grow(int)
 T CUtlMemory<CHandle<CFish>, int>::Grow(int)
 T CUtlMemory<CHandle<CInfoLadderDismount>, int>::Grow(int)
 T CUtlMemory<CHandle<CMessageEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CPointTemplate>, int>::Grow(int)
 T CUtlMemory<CHandle<CSceneEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CSceneListManager>, int>::Grow(int)
 T CUtlMemory<CHandle<CTonemapTrigger>, int>::Grow(int)
 T CUtlMemory<CHandle<CVGuiScreen>, int>::Grow(int)
 T CUtlMemory<CHintCriteria::hintZone_t, int>::Grow(int)
 T CUtlMemory<CHintMessage*, int>::Grow(int)
 T CUtlMemory<CHintMessageTimers::hintmessagetime_t*, int>::Grow(int)
 T CUtlMemory<CHostage*, int>::Grow(int)
 T CUtlMemory<CInventoryManager::inventories_t, int>::Grow(int)
 T CUtlMemory<CItemLevelingDefinition, int>::Grow(int)
 T CUtlMemory<CItemSelectionCriteria, int>::Grow(int)
 T CUtlMemory<CItemSelectionCriteria::CCondition*, int>::Grow(int)
 T CUtlMemory<CModelSoundsCache*, int>::Grow(int)
 T CUtlMemory<CMoveHelperServer::touchlist_t, int>::Grow(int)
 T CUtlMemory<CNavArea*, int>::Grow(int)
 T CUtlMemory<CNavLadder*, int>::Grow(int)
 T CUtlMemory<CNavMesh::WalkableSeedSpot, int>::Grow(int)
 T CUtlMemory<CNavNode*, int>::Grow(int)
 T CUtlMemory<CParticleOperatorInstance*, int>::Grow(int)
 T CUtlMemory<CParticleSystemDefinition*, int>::Grow(int)
 T CUtlMemory<CPassengerInfo, int>::Grow(int)
 T CUtlMemory<CPassengerRole, int>::Grow(int)
 T CUtlMemory<CPassengerSeat, int>::Grow(int)
 T CUtlMemory<CPassengerSeatTransition, int>::Grow(int)
 T CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int>::Grow(int)
 T CUtlMemory<CPhysicsPushedEntities::PhysicsPushedInfo_t, int>::Grow(int)
 T CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int>::Grow(int)
 T CUtlMemory<CPlantedC4*, int>::Grow(int)
 T CUtlMemory<CPointTemplate*, int>::Grow(int)
 T CUtlMemory<CPropData::propdata_breakablechunk_t, int>::Grow(int)
 T CUtlMemory<CPublishedFileInfoHTTPRequest*, int>::Grow(int)
 T CUtlMemory<CSWeaponID, int>::Grow(int)
 T CUtlMemory<CSceneEventInfo, int>::Grow(int)
 T CUtlMemory<CSceneManager::CRestoreSceneSound, int>::Grow(int)
 T CUtlMemory<CSheet*, int>::Grow(int)
 T CUtlMemory<CSheet::SheetInfo_t, int>::Grow(int)
 T CUtlMemory<CSoundPatch*, int>::Grow(int)
 T CUtlMemory<CStreamingUGCDownloader*, int>::Grow(int)
 T CUtlMemory<CStressEntityReg*, int>::Grow(int)
 T CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
 T CUtlMemory<CTeam*, int>::Grow(int)
 T CUtlMemory<CTeamSpawnPoint*, int>::Grow(int)
 T CUtlMemory<CThreadSafeMemoryPool::BlockSet_t, int>::Grow(int)
 T CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, int>::Grow(int)
 T CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t, int>::Grow(int)
 T CUtlMemory<CUserCmd, int>::Grow(int)
 T CUtlMemory<CUtlBinaryBlock, int>::Grow(int)
 T CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, int>::Grow(int)
 T CUtlMemory<CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::Node_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<watcher_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlString, int>::Grow(int)
 T CUtlMemory<CUtlSymbol, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlVector<BotSpeakable*, CUtlMemory<BotSpeakable*, int> >*, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int>::Grow(int)
 T CUtlMemory<CVarBitVec, int>::Grow(int)
 T CUtlMemory<CaptionLookup_t, int>::Grow(int)
 T CUtlMemory<Color, int>::Grow(int)
 T CUtlMemory<DedicatedServerUGCFileInfo_t const*, int>::Grow(int)
 T CUtlMemory<DedicatedServerUGCFileInfo_t*, int>::Grow(int)
 T CUtlMemory<DelayedDamageInfoData_t, int>::Grow(int)
 T CUtlMemory<DmeTime_t, int>::Grow(int)
 T CUtlMemory<EntsByStringList_t, int>::Grow(int)
 T CUtlMemory<FunFact, int>::Grow(int)
 T CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int>::Grow(int)
 T CUtlMemory<GCSDK::CLock*, int>::Grow(int)
 T CUtlMemory<GCSDK::CProtoBufMsgMemoryPoolBase*, int>::Grow(int)
 T CUtlMemory<GCSDK::CSharedObject*, int>::Grow(int)
 T CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int>::Grow(int)
 T CUtlMemory<GCSDK::CSharedObjectTypeCache*, int>::Grow(int)
 T CUtlMemory<GCSDK::CWorkItem*, int>::Grow(int)
 T CUtlMemory<GCSDK::IMsgNetPacket*, int>::Grow(int)
 T CUtlMemory<GCSDK::ISharedObjectListener*, int>::Grow(int)
 T CUtlMemory<GameTypes::CustomBotDifficulty*, int>::Grow(int)
 T CUtlMemory<GameTypes::GameMode*, int>::Grow(int)
 T CUtlMemory<GameTypes::GameType*, int>::Grow(int)
 T CUtlMemory<GameTypes::Map*, int>::Grow(int)
 T CUtlMemory<GameTypes::MapGroup*, int>::Grow(int)
 T CUtlMemory<IEntityListener*, int>::Grow(int)
 T CUtlMemory<IGameStatTracker::IStatContainer*, int>::Grow(int)
 T CUtlMemory<IGameSystem*, int>::Grow(int)
 T CUtlMemory<IGameSystemPerFrame*, int>::Grow(int)
 T CUtlMemory<IGameTypes::WeaponProgression, int>::Grow(int)
 T CUtlMemory<IHandleEntity*, int>::Grow(int)
 T CUtlMemory<INavAvoidanceObstacle*, int>::Grow(int)
 T CUtlMemory<IParticleOperatorDefinition*, int>::Grow(int)
 T CUtlMemory<ISaveRestoreBlockHandler*, int>::Grow(int)
 T CUtlMemory<IServerNetworkable*, int>::Grow(int)
 T CUtlMemory<KeyValues*, int>::Grow(int)
 T CUtlMemory<NPCInterjection, int>::Grow(int)
 T CUtlMemory<NavVisPair_t, int>::Grow(int)
 T CUtlMemory<OneWayLink_t, int>::Grow(int)
 T CUtlMemory<PanelAnimationMapEntry, int>::Grow(int)
 T CUtlMemory<PanelItem_t, int>::Grow(int)
 T CUtlMemory<ParticleChildrenInfo_t, int>::Grow(int)
 T CUtlMemory<QAngle, int>::Grow(int)
 T CUtlMemory<Quaternion, int>::Grow(int)
 T CUtlMemory<Relationship_t, int>::Grow(int)
 T CUtlMemory<ResponseContext_t, int>::Grow(int)
 T CUtlMemory<ResponseRules::CRR_Response, int>::Grow(int)
 T CUtlMemory<ResponseRules::CResponseSystem::ScriptEntry, int>::Grow(int)
 T CUtlMemory<ResponseRules::ParserResponse, int>::Grow(int)
 T CUtlMemory<SMarketPurchases*, int>::Grow(int)
 T CUtlMemory<SWeaponHitData*, int>::Grow(int)
 T CUtlMemory<SWeaponMissData*, int>::Grow(int)
 T CUtlMemory<SWeaponShotData*, int>::Grow(int)
 T CUtlMemory<SaveRestoreBlockHeader_t, int>::Grow(int)
 T CUtlMemory<ScriptFunctionBinding_t, int>::Grow(int)
 T CUtlMemory<ScriptedNPCInteraction_t, int>::Grow(int)
 T CUtlMemory<SlideKeywordList_t*, int>::Grow(int)
 T CUtlMemory<SoundCommand_t*, int>::Grow(int)
 T CUtlMemory<SpawnPoint*, int>::Grow(int)
 T CUtlMemory<SpotOrder, int>::Grow(int)
 T CUtlMemory<StickerData_t, int>::Grow(int)
 T CUtlMemory<TeleportListEntry_t, int>::Grow(int)
 T CUtlMemory<TemplateEntityData_t*, int>::Grow(int)
 T CUtlMemory<UnreachableEnt_t, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<ActiveGrenade*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<BotProfile*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDamageRecord*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<void*, int>, int>::Grow(int)
 T CUtlMemory<VMatrix, int>::Grow(int)
 T CUtlMemory<Vector, int>::Grow(int)
 T CUtlMemory<Vector2D, int>::Grow(int)
 T CUtlMemory<Vector4D, int>::Grow(int)
 T CUtlMemory<VoiceCommandMenuItem_t, int>::Grow(int)
 T CUtlMemory<WeaponInfoLookup*, int>::Grow(int)
 T CUtlMemory<WeaponPaintableMaterial_t, int>::Grow(int)
 T CUtlMemory<ability_icon_replacement_t, int>::Grow(int)
 T CUtlMemory<activitylist_t, int>::Grow(int)
 T CUtlMemory<animation_on_wearable_t, int>::Grow(int)
 T CUtlMemory<announcer_preview_t, int>::Grow(int)
 T CUtlMemory<attachedmodel_t, int>::Grow(int)
 T CUtlMemory<attachedparticle_t, int>::Grow(int)
 T CUtlMemory<attachedparticlecontrolpoint_t, int>::Grow(int)
 T CUtlMemory<attr_type_t, int>::Grow(int)
 T CUtlMemory<breakmodel_t, int>::Grow(int)
 T CUtlMemory<char const*, int>::Grow(int)
 T CUtlMemory<char*, int>::Grow(int)
 T CUtlMemory<clusterSoundscapeList_t, int>::Grow(int)
 T CUtlMemory<constraint_anchor_t, int>::Grow(int)
 T CUtlMemory<damageevent_t, int>::Grow(int)
 T CUtlMemory<entitynotify_t, int>::Grow(int)
 T CUtlMemory<eventlist_t, int>::Grow(int)
 T CUtlMemory<float, int>::Grow(int)
 T CUtlMemory<fluidevent_t, int>::Grow(int)
 T CUtlMemory<globalentity_t, int>::Grow(int)
 T CUtlMemory<ikcontextikrule_t, int>::Grow(int)
 T CUtlMemory<inflictorstate_t, int>::Grow(int)
 T CUtlMemory<int, int>::Grow(int)
 T CUtlMemory<item_list_entry_t, int>::Grow(int)
 T CUtlMemory<loadout_positions_t, int>::Grow(int)
 T CUtlMemory<magnetted_objects_t, int>::Grow(int)
 T CUtlMemory<masscenteroverride_t, int>::Grow(int)
 T CUtlMemory<modifiedconvars_t, int>::Grow(int)
 T CUtlMemory<particle_control_point_on_wearable_t, int>::Grow(int)
 T CUtlMemory<particle_on_wearable_t, int>::Grow(int)
 T CUtlMemory<particlesnapshot_on_wearable_t, int>::Grow(int)
 T CUtlMemory<penetrateevent_t, int>::Grow(int)
 T CUtlMemory<physfollower_t, int>::Grow(int)
 T CUtlMemory<physicssound::breaksound_t, int>::Grow(int)
 T CUtlMemory<physicssound::impactsound_t, int>::Grow(int)
 T CUtlMemory<simthinkentry_t, int>::Grow(int)
 T CUtlMemory<sound_on_wearable_t, int>::Grow(int)
 T CUtlMemory<static_attrib_t, int>::Grow(int)
 T CUtlMemory<string_t, int>::Grow(int)
 T CUtlMemory<studiohdr_t const*, int>::Grow(int)
 T CUtlMemory<template_t, int>::Grow(int)
 T CUtlMemory<thinkfunc_t, int>::Grow(int)
 T CUtlMemory<touchevent_t, int>::Grow(int)
 T CUtlMemory<unsigned int, int>::Grow(int)
 T CUtlMemory<unsigned long long, int>::Grow(int)
 T CUtlMemory<unsigned long, int>::Grow(int)
 T CUtlMemory<unsigned short, int>::Grow(int)
 T CUtlMemory<vehicle_crashsound_t, int>::Grow(int)
 T CUtlMemory<vehicle_gear_t, int>::Grow(int)
 T CUtlMemory<vehiclescript_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int>::Grow(int)
 T CUtlMemory<vgui::BoundKey_t, int>::Grow(int)
 T CUtlMemory<vgui::BuildModeDialog*, int>::Grow(int)
 T CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int>::Grow(int)
 T CUtlMemory<vgui::ClickPanel*, int>::Grow(int)
 T CUtlMemory<vgui::DHANDLE<vgui::Menu>, int>::Grow(int)
 T CUtlMemory<vgui::IImage*, int>::Grow(int)
 T CUtlMemory<vgui::Label::TImageInfo, int>::Grow(int)
 T CUtlMemory<vgui::MenuButton*, int>::Grow(int)
 T CUtlMemory<vgui::MenuSeparator*, int>::Grow(int)
 T CUtlMemory<vgui::MessageMapItem_t, int>::Grow(int)
 T CUtlMemory<vgui::OverridableColorEntry, int>::Grow(int)
 T CUtlMemory<vgui::PHandle, int>::Grow(int)
 T CUtlMemory<vgui::Panel*, int>::Grow(int)
 T CUtlMemory<vgui::RichText::TFormatStream, int>::Grow(int)
 T CUtlMemory<vgui::TreeNode*, int>::Grow(int)
 T CUtlMemory<visibility_target_t, int>::Grow(int)
 T CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
 T CUtlMemory<wchar_t*, int>::Grow(int)
 T CUtlMemory<wchar_t, int>::Grow(int)
 T CUtlMemoryFixedGrowable<GCSDK::CSharedObject*, 1ul, int>::EnsureCapacity(int)
 T CUtlMemoryPool::AddNewBlob()
 T CUtlMemoryPool::Alloc()
 T CUtlMemoryPool::Alloc(unsigned long)
 T CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
 T CUtlMemoryPool::Clear()
 T CUtlMemoryPool::Free(void*)
 T CUtlMemoryPool::~CUtlMemoryPool()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
 T CUtlMultiList<watcher_t, unsigned short>::Alloc()
 T CUtlMultiList<watcher_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<watcher_t, unsigned short>::Remove(unsigned short, unsigned short)
 T CUtlMultiList<watcher_t, unsigned short>::~CUtlMultiList()
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlPriorityQueue<AI_NearNode_t, CDefUtlPriorityQueueLessFunc<AI_NearNode_t>, CUtlMemory<AI_NearNode_t, int> >::Insert(AI_NearNode_t const&)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::Insert(CEventRegister* const&)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::RemoveAt(int)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::RemoveAtHead()
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t, CDefUtlPriorityQueueLessFunc<CPhysSaveRestoreBlockHandler::QueuedItem_t>, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::Insert(CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t, CDefUtlPriorityQueueLessFunc<CPhysSaveRestoreBlockHandler::QueuedItem_t>, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::RemoveAtHead()
 T CUtlPriorityQueue<GCSDK::CJobMgr::JobSleeping_t, CDefUtlPriorityQueueLessFunc<GCSDK::CJobMgr::JobSleeping_t>, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::RemoveAt(int)
 T CUtlPriorityQueue<GCSDK::CJobMgr::JobSleeping_t, CDefUtlPriorityQueueLessFunc<GCSDK::CJobMgr::JobSleeping_t>, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::RemoveAtHead()
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::Insert(SoundCommand_t* const&)
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::RemoveAt(int)
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::RemoveAtHead()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Insert(CAI_BaseNPC* const&)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Insert(CBaseEntity* const&)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Insert(CBaseFlex::FS_LocalToGlobal_t const&)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::Insert(CBreakModelsPrecached::breakable_precache_t const&)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Insert(CChoreoEvent* const&)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Insert(CChoreoScene::ActiveList const&)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::NewNode()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Purge()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateRight(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Insert(CHLTVGameEvent const&)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Insert(CHandle<CBaseEntity> const&)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::Insert(CSceneEntity::SpeakEventSound_t const&)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::Insert(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::Insert(CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::InsertRebalance(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::Purge()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::RemoveRebalance(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::RotateLeft(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::RotateRight(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::Unlink(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned char>, unsigned char> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short, bool (*)(CChoreoActor* const&, CChoreoActor* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short, bool (*)(CPhysCollide const* const&, CPhysCollide const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short, CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GCSDK::SOID_t, GCSDK::CGCClientSharedObjectCache*, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short, bool (*)(IPhysicsObject* const&, IPhysicsObject* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<255>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Insert(CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSStatType_t, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerKit*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CStickerList*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlVector<CItemLevelingDefinition, CUtlMemory<CItemLevelingDefinition, int> >*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CWebResource*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Insert(CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Insert(CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::Insert(CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short, bool (*)(char const* const&, char const* const&)>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short, bool (*)(char const* const&, char const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Insert(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int, bool (*)(char const* const&, char const* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, AlternateIconData_t, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CCSFunFactMgr::FunFactDatabaseEntry, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCampaignDefinition::CEconCampaignNodeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemRarityDefinition, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconMusicDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconQuestDefinition*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconSoundMaterialDefinition, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CPaintKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CPaintKit*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, CStickerKit*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CStickerKit*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CUtlVector<AssetModifier*, CUtlMemory<AssetModifier*, int> >*, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSOIDNameInfo, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int, CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, char const*, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int, CUtlMap<int, char const*, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(int const&, int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::Insert(CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int, CUtlMap<int, unsigned int, int, CDefLess<int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, unsigned int, int, CDefLess<int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::Insert(CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::InsertRebalance(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::NewNode()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::Purge()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::RotateLeft(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::RotateRight(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char, bool (*)(string_t const&, string_t const&)>::Node_t, char>, char> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short, bool (*)(studiohdr_t const* const&, studiohdr_t const* const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Insert(CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CGcBanInformation_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Insert(CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CCSGameRules::CQMMPlayerData_t*, int, CDefLess<unsigned int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Insert(CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, kill_eater_score_type_t, unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short, bool (*)(unsigned int const&, unsigned int const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CEconItem*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlString, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, DedicatedServerUGCFileInfo_t*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short, CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, KeyValues*, unsigned short, bool (*)(unsigned long long const&, unsigned long long const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short, CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, WeaponRecoilData::RecoilData*, unsigned short, bool (*)(unsigned short const&, unsigned short const&)>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::Insert(CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t const&)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::Purge()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int, bool (*)(void* const&, void* const&)>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::Insert(CUtlString const&)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::NewNode()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::Purge()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::Insert(GCSDK::SOID_t const&)
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<GCSDK::SOID_t, unsigned short, bool (*)(GCSDK::SOID_t const&, GCSDK::SOID_t const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::SOID_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Insert(ResponseRules::CriteriaSet::CritEntry_t const&)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::NewNode()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Purge()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RemoveRebalance(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Unlink(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Insert(ThinkSync const&)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Insert(VisibilityCacheEntry_t const&)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Insert(char const* const&)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::NewNode()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Purge()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateRight(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Insert(char const* const&)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::Insert(int const&)
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<int, unsigned short, bool (*)(int const&, int const&), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Insert(unsigned int const&)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Insert(vgui::ListPanel::IndexItem_t const&)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::NewNode()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Purge()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Unlink(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::Insert(void* const&)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::NewNode()
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::Purge()
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::RotateRight(int)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::~CUtlRBTree()
 T CUtlSortVector<CBaseEntity*, CSortedEntityList::CEntityReportLess, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >::FindLessOrEqual(CBaseEntity* const&) const
 T CUtlSortVector<CBaseEntity*, CSortedEntityList::CEntityReportLess, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >::Insert(CBaseEntity* const&)
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::CompareHelper(CDmxAttribute* const*, CDmxAttribute* const*)
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find(CDmxAttribute* const&) const
 T CUtlSortVector<CEconItemView*, CInventoryListLess, CUtlVector<CEconItemView*, CUtlMemory<CEconItemView*, int> > >::CompareHelper(CEconItemView* const*, CEconItemView* const*)
 T CUtlSortVector<CEconItemView*, CInventoryListLess, CUtlVector<CEconItemView*, CUtlMemory<CEconItemView*, int> > >::FindLessOrEqual(CEconItemView* const&) const
 T CUtlSortVector<CEconItemView*, CInventoryListLess, CUtlVector<CEconItemView*, CUtlMemory<CEconItemView*, int> > >::Insert(CEconItemView* const&)
 T CUtlSortVector<CSortedCacheFile, CSortedCacheFile, CUtlVector<CSortedCacheFile, CUtlMemory<CSortedCacheFile, int> > >::CompareHelper(CSortedCacheFile const*, CSortedCacheFile const*)
 T CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::CompareHelper(CaptionLookup_t const*, CaptionLookup_t const*)
 T CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::Find(CaptionLookup_t const&) const
 T CUtlSortVector<GCSDK::CSharedObject::SharedObjectInfo_t, GCSDK::CSharedObject::CCompareSharedObject, CUtlVector<GCSDK::CSharedObject::SharedObjectInfo_t, CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int> > >::Find(GCSDK::CSharedObject::SharedObjectInfo_t const&) const
 T CUtlSortVector<GCSDK::CSharedObject::SharedObjectInfo_t, GCSDK::CSharedObject::CCompareSharedObject, CUtlVector<GCSDK::CSharedObject::SharedObjectInfo_t, CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int> > >::FindLessOrEqual(GCSDK::CSharedObject::SharedObjectInfo_t const&) const
 T CUtlSortVector<GCSDK::CSharedObject::SharedObjectInfo_t, GCSDK::CSharedObject::CCompareSharedObject, CUtlVector<GCSDK::CSharedObject::SharedObjectInfo_t, CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int> > >::Insert(GCSDK::CSharedObject::SharedObjectInfo_t const&)
 T CUtlSortVector<GCSDK::CSharedObject::SharedObjectInfo_t, GCSDK::CSharedObject::CCompareSharedObject, CUtlVector<GCSDK::CSharedObject::SharedObjectInfo_t, CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int> > >::~CUtlSortVector()
 T CUtlSortVector<WeaponInfoLookup*, CWeaponInfoLookupListLess, CUtlVector<WeaponInfoLookup*, CUtlMemory<WeaponInfoLookup*, int> > >::Find(WeaponInfoLookup* const&) const
 T CUtlSortVector<WeaponInfoLookup*, CWeaponInfoLookupListLess, CUtlVector<WeaponInfoLookup*, CUtlMemory<WeaponInfoLookup*, int> > >::FindLessOrEqual(WeaponInfoLookup* const&) const
 T CUtlSortVector<WeaponInfoLookup*, CWeaponInfoLookupListLess, CUtlVector<WeaponInfoLookup*, CUtlMemory<WeaponInfoLookup*, int> > >::Insert(WeaponInfoLookup* const&)
 T CUtlSortVector<WeaponInfoLookup*, CWeaponInfoLookupListLess, CUtlVector<WeaponInfoLookup*, CUtlMemory<WeaponInfoLookup*, int> > >::~CUtlSortVector()
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::Find(int const&) const
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual(int const&) const
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)
 T CUtlSortVector<unsigned int, CUtlSortVectorDefaultLess<unsigned int>, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> > >::FindLessOrEqual(unsigned int const&) const
 T CUtlSortVector<unsigned int, CUtlSortVectorDefaultLess<unsigned int>, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> > >::Insert(unsigned int const&)
 T CUtlStack<float, CUtlMemory<float, int> >::~CUtlStack()
 T CUtlString::CUtlString()
 T CUtlString::CUtlString(CUtlString const&)
 T CUtlString::CUtlString(char const*)
 T CUtlString::Format(char const*, ...)
 T CUtlString::Get()
 T CUtlString::Get() const
 T CUtlString::Length() const
 T CUtlString::Set(char const*)
 T CUtlString::SetDirect(char const*, int)
 T CUtlString::SetLength(int)
 T CUtlString::operator char const*() const
 T CUtlString::operator=(CUtlString const&)
 T CUtlString::operator=(char const*)
 T CUtlString::~CUtlString()
 T CUtlStringList::CopyAndAddToTail(char const*)
 T CUtlStringList::~CUtlStringList()
 T CUtlStringMap<CParticleSystemDefinition*>::operator[](char const*)
 T CUtlStringMap<CSheet*>::PurgeAndDeleteElements()
 T CUtlSymbol::CUtlSymbol(char const*)
 T CUtlSymbol::Initialize()
 T CUtlSymbol::String() const
 T CUtlSymbolDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlSymbolDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlSymbolDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlSymbolDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlSymbolTable::AddString(char const*)
 T CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
 T CUtlSymbolTable::Find(char const*) const
 T CUtlSymbolTable::RemoveAll()
 T CUtlSymbolTable::String(CUtlSymbol) const
 T CUtlSymbolTable::~CUtlSymbolTable()
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableMT::String(CUtlSymbol) const
 T CUtlTSHash<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, 0>::Find(CUtlSymbolTableLargeBaseTreeEntry_t*)
 T CUtlTSHash<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, 0>::Insert(CUtlSymbolTableLargeBaseTreeEntry_t*, CUtlSymbolTableLargeBaseTreeEntry_t* const&, bool*)
 T CUtlTSHash<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, 0>::RemoveAll()
 T CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AIRebalanceInfo_t, CUtlMemory<AIRebalanceInfo_t, int> >::~CUtlVector()
 T CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >::~CUtlVector()
 T CUtlVector<AI_FollowGroup_t*, CUtlMemory<AI_FollowGroup_t*, int> >::~CUtlVector()
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::AddVectorToTail(CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> > const&)
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::~CUtlVector()
 T CUtlVector<AI_NamespaceAddInfo_t, CUtlMemory<AI_NamespaceAddInfo_t, int> >::~CUtlVector()
 T CUtlVector<AI_NearNode_t, CUtlMemory<AI_NearNode_t, int> >::~CUtlVector()
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::InsertBefore(int, AI_Waypoint_t const&)
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::~CUtlVector()
 T CUtlVector<Activity, CUtlMemory<Activity, int> >::~CUtlVector()
 T CUtlVector<AppSystemInfo_t, CUtlMemory<AppSystemInfo_t, int> >::~CUtlVector()
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::InsertBefore(int)
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::~CUtlVector()
 T CUtlVector<BotChatterOutputType, CUtlMemory<BotChatterOutputType, int> >::~CUtlVector()
 T CUtlVector<BotEventInterface*, CUtlMemory<BotEventInterface*, int> >::~CUtlVector()
 T CUtlVector<BotPhrase*, CUtlMemory<BotPhrase*, int> >::~CUtlVector()
 T CUtlVector<BotProfile const*, CUtlMemory<BotProfile const*, int> >::~CUtlVector()
 T CUtlVector<BotSpeakable*, CUtlMemory<BotSpeakable*, int> >::~CUtlVector()
 T CUtlVector<CAIHintVector*, CUtlMemory<CAIHintVector*, int> >::~CUtlVector()
 T CUtlVector<CAI_BaseActor*, CUtlMemory<CAI_BaseActor*, int> >::~CUtlVector()
 T CUtlVector<CAI_BaseNPC*, CUtlMemory<CAI_BaseNPC*, int> >::~CUtlVector()
 T CUtlVector<CAI_BehaviorBase*, CUtlMemory<CAI_BehaviorBase*, int> >::~CUtlVector()
 T CUtlVector<CAI_BlendedMotor::AI_Movementscript_t, CUtlMemory<CAI_BlendedMotor::AI_Movementscript_t, int> >::~CUtlVector()
 T CUtlVector<CAI_Hint*, CUtlMemory<CAI_Hint*, int> >::~CUtlVector()
 T CUtlVector<CAI_InterestTarget_t*, CUtlMemory<CAI_InterestTarget_t*, int> >::~CUtlVector()
 T CUtlVector<CAI_InterestTarget_t, CUtlMemory<CAI_InterestTarget_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAI_InterestTarget_t, CUtlMemory<CAI_InterestTarget_t, int> >::~CUtlVector()
 T CUtlVector<CAI_Link*, CUtlMemory<CAI_Link*, int> >::~CUtlVector()
 T CUtlVector<CAI_PlaneSolver::CircleObstacles_t, CUtlMemory<CAI_PlaneSolver::CircleObstacles_t, int> >::~CUtlVector()
 T CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >::~CUtlVector()
 T CUtlVector<CActivityRemap, CUtlMemory<CActivityRemap, int> >::~CUtlVector()
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::InsertBefore(int)
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::~CUtlVector()
 T CUtlVector<CAssaultPoint*, CUtlMemory<CAssaultPoint*, int> >::~CUtlVector()
 T CUtlVector<CAttributeManager::cached_attribute_float_t, CUtlMemory<CAttributeManager::cached_attribute_float_t, int> >::~CUtlVector()
 T CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >::~CUtlVector()
 T CUtlVector<CBaseHandle, CUtlMemory<CBaseHandle, int> >::~CUtlVector()
 T CUtlVector<CBaseIssue*, CUtlMemory<CBaseIssue*, int> >::~CUtlVector()
 T CUtlVector<CBaseIssue::FailedVote*, CUtlMemory<CBaseIssue::FailedVote*, int> >::~CUtlVector()
 T CUtlVector<CBasePlayer*, CUtlMemory<CBasePlayer*, int> >::~CUtlVector()
 T CUtlVector<CBasePlayer*, CUtlMemoryFixedGrowable<CBasePlayer*, 2ul, int> >::InsertBefore(int, CBasePlayer* const&)
 T CUtlVector<CBasePlayer*, CUtlMemoryFixedGrowable<CBasePlayer*, 2ul, int> >::~CUtlVector()
 T CUtlVector<CBaseServerVehicle::entryanim_t, CUtlMemory<CBaseServerVehicle::entryanim_t, int> >::~CUtlVector()
 T CUtlVector<CBaseServerVehicle::exitanim_t, CUtlMemory<CBaseServerVehicle::exitanim_t, int> >::~CUtlVector()
 T CUtlVector<CCSBot*, CUtlMemory<CCSBot*, int> >::~CUtlVector()
 T CUtlVector<CCSBotManager::Zone const*, CUtlMemory<CCSBotManager::Zone const*, int> >::~CUtlVector()
 T CUtlVector<CCSPlayer*, CUtlMemory<CCSPlayer*, int> >::~CUtlVector()
 T CUtlVector<CCStrike15ItemDefinition const*, CUtlMemory<CCStrike15ItemDefinition const*, int> >::~CUtlVector()
 T CUtlVector<CChoreoActor*, CUtlMemory<CChoreoActor*, int> >::~CUtlVector()
 T CUtlVector<CChoreoChannel*, CUtlMemory<CChoreoChannel*, int> >::~CUtlVector()
 T CUtlVector<CChoreoEvent*, CUtlMemory<CChoreoEvent*, int> >::~CUtlVector()
 T CUtlVector<CChoreoScene*, CUtlMemory<CChoreoScene*, int> >::~CUtlVector()
 T CUtlVector<CCollectionInfoHTTPRequest*, CUtlMemory<CCollectionInfoHTTPRequest*, int> >::~CUtlVector()
 T CUtlVector<CCommandContext, CUtlMemory<CCommandContext, int> >::~CUtlVector()
 T CUtlVector<CConstraintFloodEntry, CUtlMemory<CConstraintFloodEntry, int> >::~CUtlVector()
 T CUtlVector<CDecalEmitterSystem::DecalListEntry, CUtlMemory<CDecalEmitterSystem::DecalListEntry, int> >::~CUtlVector()
 T CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> >::~CUtlVector()
 T CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >::~CUtlVector()
 T CUtlVector<CDmxElementDictionary::AttributeInfo_t, CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int> >::~CUtlVector()
 T CUtlVector<CDmxElementDictionary::DictInfo_t, CUtlMemory<CDmxElementDictionary::DictInfo_t, int> >::~CUtlVector()
 T CUtlVector<CDragDropHelperPanel::DragHelperPanel_t, CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int> >::~CUtlVector()
 T CUtlVector<CEconColorDefinition*, CUtlMemory<CEconColorDefinition*, int> >::~CUtlVector()
 T CUtlVector<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::~CUtlVector()
 T CUtlVector<CEconItemDefinition const*, CUtlMemory<CEconItemDefinition const*, int> >::operator=(CUtlVector<CEconItemDefinition const*, CUtlMemory<CEconItemDefinition const*, int> > const&)
 T CUtlVector<CEconItemDefinition const*, CUtlMemory<CEconItemDefinition const*, int> >::~CUtlVector()
 T CUtlVector<CEconItemDefinition*, CUtlMemory<CEconItemDefinition*, int> >::~CUtlVector()
 T CUtlVector<CEconItemPreviewDataBlock*, CUtlMemory<CEconItemPreviewDataBlock*, int> >::~CUtlVector()
 T CUtlVector<CEconItemSchema::EquipRegion, CUtlMemory<CEconItemSchema::EquipRegion, int> >::InsertBefore(int, CEconItemSchema::EquipRegion const&)
 T CUtlVector<CEconItemSchema::EquipRegion, CUtlMemory<CEconItemSchema::EquipRegion, int> >::~CUtlVector()
 T CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> >::operator=(CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> > const&)
 T CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> >::~CUtlVector()
 T CUtlVector<CEconItemView*, CUtlMemory<CEconItemView*, int> >::~CUtlVector()
 T CUtlVector<CEconLootListDefinition const*, CUtlMemory<CEconLootListDefinition const*, int> >::PurgeAndDeleteElements()
 T CUtlVector<CEconLootListDefinition const*, CUtlMemory<CEconLootListDefinition const*, int> >::~CUtlVector()
 T CUtlVector<CEconLootListDefinition::loot_list_additional_drop_t, CUtlMemory<CEconLootListDefinition::loot_list_additional_drop_t, int> >::~CUtlVector()
 T CUtlVector<CEconLootListDefinition::lootlist_attrib_t, CUtlMemory<CEconLootListDefinition::lootlist_attrib_t, int> >::InsertBefore(int, CEconLootListDefinition::lootlist_attrib_t const&)
 T CUtlVector<CEconLootListDefinition::random_attrib_t*, CUtlMemory<CEconLootListDefinition::random_attrib_t*, int> >::~CUtlVector()
 T CUtlVector<CEconStyleInfo*, CUtlMemory<CEconStyleInfo*, int> >::~CUtlVector()
 T CUtlVector<CEffectScriptElement, CUtlMemory<CEffectScriptElement, int> >::InsertBefore(int, CEffectScriptElement const&)
 T CUtlVector<CEffectScriptElement, CUtlMemory<CEffectScriptElement, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEnvSoundscape*, CUtlMemory<CEnvSoundscape*, int> >::~CUtlVector()
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::InsertBefore(int, CEventAbsoluteTag const&)
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::Purge()
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::~CUtlVector()
 T CUtlVector<CEventRegister*, CUtlMemory<CEventRegister*, int> >::~CUtlVector()
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::InsertBefore(int, CEventRelativeTag const&)
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::Purge()
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::~CUtlVector()
 T CUtlVector<CExpressionSample, CUtlMemory<CExpressionSample, int> >::~CUtlVector()
 T CUtlVector<CFish*, CUtlMemory<CFish*, int> >::~CUtlVector()
 T CUtlVector<CFlexAnimationTrack*, CUtlMemory<CFlexAnimationTrack*, int> >::~CUtlVector()
 T CUtlVector<CFlexSceneFile*, CUtlMemory<CFlexSceneFile*, int> >::~CUtlVector()
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::InsertBefore(int, CFlexTimingTag const&)
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::Purge()
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::~CUtlVector()
 T CUtlVector<CFogVolume*, CUtlMemory<CFogVolume*, int> >::~CUtlVector()
 T CUtlVector<CFuncLadder*, CUtlMemory<CFuncLadder*, int> >::~CUtlVector()
 T CUtlVector<CFunctor*, CUtlMemory<CFunctor*, int> >::~CUtlVector()
 T CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >::~CUtlVector()
 T CUtlVector<CGameWeaponManager*, CUtlMemory<CGameWeaponManager*, int> >::~CUtlVector()
 T CUtlVector<CGlobalEvent*, CUtlMemory<CGlobalEvent*, int> >::~CUtlVector()
 T CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CAI_DynamicLink>, CUtlMemory<CHandle<CAI_DynamicLink>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::FindAndRemove(CHandle<CBaseEntity> const&)
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::AddVectorToTail(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > const&)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::FindAndRemove(CHandle<CBasePlayer> const&)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBasePropDoor>, CUtlMemory<CHandle<CBasePropDoor>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CCSPlayer>, CUtlMemory<CHandle<CCSPlayer>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CEnvMicrophone>, CUtlMemory<CHandle<CEnvMicrophone>, int> >::FindAndRemove(CHandle<CEnvMicrophone> const&)
 T CUtlVector<CHandle<CEnvMicrophone>, CUtlMemory<CHandle<CEnvMicrophone>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CEnvPlayerSurfaceTrigger>, CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int> >::FindAndRemove(CHandle<CEnvPlayerSurfaceTrigger> const&)
 T CUtlVector<CHandle<CEnvPlayerSurfaceTrigger>, CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CInfoLadderDismount>, CUtlMemory<CHandle<CInfoLadderDismount>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CMessageEntity>, CUtlMemory<CHandle<CMessageEntity>, int> >::FindAndRemove(CHandle<CMessageEntity> const&)
 T CUtlVector<CHandle<CMessageEntity>, CUtlMemory<CHandle<CMessageEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CPointTemplate>, CUtlMemory<CHandle<CPointTemplate>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::FindAndRemove(CHandle<CSceneEntity> const&)
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CTeamControlPointMaster>, CUtlMemory<CHandle<CTeamControlPointMaster>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CTonemapTrigger>, CUtlMemory<CHandle<CTonemapTrigger>, int> >::FindAndRemove(CHandle<CTonemapTrigger> const&)
 T CUtlVector<CHandle<CTonemapTrigger>, CUtlMemory<CHandle<CTonemapTrigger>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CTriggerMultiple>, CUtlMemory<CHandle<CTriggerMultiple>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >::~CUtlVector()
 T CUtlVector<CHintCriteria::hintZone_t, CUtlMemory<CHintCriteria::hintZone_t, int> >::~CUtlVector()
 T CUtlVector<CHintMessage*, CUtlMemory<CHintMessage*, int> >::~CUtlVector()
 T CUtlVector<CHostage*, CUtlMemory<CHostage*, int> >::InsertMultipleBefore(int, int, CHostage* const*)
 T CUtlVector<CHostage*, CUtlMemory<CHostage*, int> >::~CUtlVector()
 T CUtlVector<CInventoryManager::inventories_t, CUtlMemory<CInventoryManager::inventories_t, int> >::~CUtlVector()
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::InsertBefore(int)
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::~CUtlVector()
 T CUtlVector<CItemSelectionCriteria::CCondition*, CUtlMemory<CItemSelectionCriteria::CCondition*, int> >::~CUtlVector()
 T CUtlVector<CModelSoundsCache*, CUtlMemory<CModelSoundsCache*, int> >::~CUtlVector()
 T CUtlVector<CMoveHelperServer::touchlist_t, CUtlMemory<CMoveHelperServer::touchlist_t, int> >::~CUtlVector()
 T CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >::~CUtlVector()
 T CUtlVector<CNavArea::AreaBindInfo, CUtlMemoryConservative<CNavArea::AreaBindInfo> >::GrowVector(int)
 T CUtlVector<CNavLadder*, CUtlMemory<CNavLadder*, int> >::~CUtlVector()
 T CUtlVector<CNavMesh::WalkableSeedSpot, CUtlMemory<CNavMesh::WalkableSeedSpot, int> >::~CUtlVector()
 T CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >::~CUtlVector()
 T CUtlVector<CParticleCollection*, CUtlMemory<CParticleCollection*, int> >::~CUtlVector()
 T CUtlVector<CParticleOperatorInstance*, CUtlMemory<CParticleOperatorInstance*, int> >::~CUtlVector()
 T CUtlVector<CParticleSystemDefinition*, CUtlMemory<CParticleSystemDefinition*, int> >::~CUtlVector()
 T CUtlVector<CParticleSystemMgr::RenderCache_t, CUtlMemory<CParticleSystemMgr::RenderCache_t, int> >::~CUtlVector()
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::InsertBefore(int)
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::~CUtlVector()
 T CUtlVector<CPassengerRole, CUtlMemory<CPassengerRole, int> >::~CUtlVector()
 T CUtlVector<CPassengerSeat, CUtlMemory<CPassengerSeat, int> >::~CUtlVector()
 T CUtlVector<CPassengerSeatTransition, CUtlMemory<CPassengerSeatTransition, int> >::~CUtlVector()
 T CUtlVector<CPhysSaveRestoreBlockHandler::QueuedItem_t, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::~CUtlVector()
 T CUtlVector<CPhysicsPushedEntities::PhysicsPushedInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPushedInfo_t, int> >::~CUtlVector()
 T CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> >::AddVectorToTail(CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> > const&)
 T CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> >::~CUtlVector()
 T CUtlVector<CPlantedC4*, CUtlMemory<CPlantedC4*, int> >::~CUtlVector()
 T CUtlVector<CPointTemplate*, CUtlMemory<CPointTemplate*, int> >::~CUtlVector()
 T CUtlVector<CPropData::propdata_breakablechunk_t, CUtlMemory<CPropData::propdata_breakablechunk_t, int> >::~CUtlVector()
 T CUtlVector<CPublishedFileInfoHTTPRequest*, CUtlMemory<CPublishedFileInfoHTTPRequest*, int> >::~CUtlVector()
 T CUtlVector<CRallyPoint*, CUtlMemory<CRallyPoint*, int> >::~CUtlVector()
 T CUtlVector<CSWeaponID, CUtlMemory<CSWeaponID, int> >::~CUtlVector()
 T CUtlVector<CSceneEventInfo, CUtlMemory<CSceneEventInfo, int> >::InsertBefore(int, CSceneEventInfo const&)
 T CUtlVector<CSceneEventInfo, CUtlMemory<CSceneEventInfo, int> >::~CUtlVector()
 T CUtlVector<CSceneManager::CRestoreSceneSound, CUtlMemory<CSceneManager::CRestoreSceneSound, int> >::~CUtlVector()
 T CUtlVector<CSheet*, CUtlMemory<CSheet*, int> >::~CUtlVector()
 T CUtlVector<CSheet::SheetInfo_t, CUtlMemory<CSheet::SheetInfo_t, int> >::~CUtlVector()
 T CUtlVector<CSortedCacheFile, CUtlMemory<CSortedCacheFile, int> >::~CUtlVector()
 T CUtlVector<CSoundPatch*, CUtlMemory<CSoundPatch*, int> >::~CUtlVector()
 T CUtlVector<CStreamingUGCDownloader*, CUtlMemory<CStreamingUGCDownloader*, int> >::~CUtlVector()
 T CUtlVector<CStressEntityReg*, CUtlMemory<CStressEntityReg*, int> >::~CUtlVector()
 T CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::~CUtlVector()
 T CUtlVector<CTeam*, CUtlMemory<CTeam*, int> >::~CUtlVector()
 T CUtlVector<CTeamSpawnPoint*, CUtlMemory<CTeamSpawnPoint*, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMemoryPool::BlockSet_t, CUtlMemory<CThreadSafeMemoryPool::BlockSet_t, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMultiMemoryPool::MemPoolRecord_t, CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t, int> >::~CUtlVector()
 T CUtlVector<CTimedItemRewardDefinition, CUtlMemory<CTimedItemRewardDefinition, int> >::~CUtlVector()
 T CUtlVector<CUserCmd, CUtlMemory<CUserCmd, int> >::InsertBefore(int, CUserCmd const&)
 T CUtlVector<CUserCmd, CUtlMemory<CUserCmd, int> >::~CUtlVector()
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int)
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int, CUtlBinaryBlock const&)
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::Purge()
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::~CUtlVector()
 T CUtlVector<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::HashBucket_t, CUtlMemory<CUtlHashMapLarge<char const*, GCSDK::JobType_t const*, CaseSensitiveStrEquals, MurmurHash3ConstCharPtr>::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<int, CEconItemDefinition*, CDefEquals<int>, MurmurHash3Functor<int> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobStatsBucket_t, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<unsigned int, GCSDK::JobType_t const*, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<unsigned int, int, CDefEquals<unsigned int>, MurmurHash3Functor<unsigned int> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<unsigned long long, GCSDK::CJob*, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, CUtlMemory<CUtlHashMapLarge<unsigned long long, int, CDefEquals<unsigned long long>, MurmurHash3Functor<unsigned long long> >::HashBucket_t, int> >::~CUtlVector()
 T CUtlVector<CUtlPair<unsigned long long, char const*>, CUtlMemory<CUtlPair<unsigned long long, char const*>, int> >::~CUtlVector()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int)
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::Purge()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<BotSpeakable*, CUtlMemory<BotSpeakable*, int> >*, CUtlMemory<CUtlVector<BotSpeakable*, CUtlMemory<BotSpeakable*, int> >*, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, CUtlMemory<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlMemory<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, CUtlMemory<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, CUtlMemory<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::Purge()
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::~CUtlVector()
 T CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> >::~CUtlVector()
 T CUtlVector<Color, CUtlMemory<Color, int> >::~CUtlVector()
 T CUtlVector<DedicatedServerUGCFileInfo_t const*, CUtlMemory<DedicatedServerUGCFileInfo_t const*, int> >::~CUtlVector()
 T CUtlVector<DedicatedServerUGCFileInfo_t*, CUtlMemory<DedicatedServerUGCFileInfo_t*, int> >::~CUtlVector()
 T CUtlVector<DelayedDamageInfoData_t, CUtlMemoryFixedGrowable<DelayedDamageInfoData_t, 4ul, int> >::InsertBefore(int)
 T CUtlVector<DelayedDamageInfoData_t, CUtlMemoryFixedGrowable<DelayedDamageInfoData_t, 4ul, int> >::~CUtlVector()
 T CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> >::~CUtlVector()
 T CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >::~CUtlVector()
 T CUtlVector<FunFact, CUtlMemory<FunFact, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CJobMgr::JobSleeping_t, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::InsertBefore(int)
 T CUtlVector<GCSDK::CJobMgr::JobSleeping_t, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CLock*, CUtlMemoryFixedGrowable<GCSDK::CLock*, 2ul, int> >::InsertBefore(int, GCSDK::CLock* const&)
 T CUtlVector<GCSDK::CLock*, CUtlMemoryFixedGrowable<GCSDK::CLock*, 2ul, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CProtoBufMsgMemoryPoolBase*, CUtlMemory<GCSDK::CProtoBufMsgMemoryPoolBase*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CSharedObject*, CUtlMemoryFixedGrowable<GCSDK::CSharedObject*, 1ul, int> >::InsertBefore(int, GCSDK::CSharedObject* const&)
 T CUtlVector<GCSDK::CSharedObject*, CUtlMemoryFixedGrowable<GCSDK::CSharedObject*, 1ul, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CSharedObject::SharedObjectInfo_t, CUtlMemory<GCSDK::CSharedObject::SharedObjectInfo_t, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CSharedObjectTypeCache*, CUtlMemory<GCSDK::CSharedObjectTypeCache*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CWorkItem*, CUtlMemory<GCSDK::CWorkItem*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CWorkThread*, CUtlMemory<GCSDK::CWorkThread*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::IMsgNetPacket*, CUtlMemoryFixedGrowable<GCSDK::IMsgNetPacket*, 1ul, int> >::InsertBefore(int, GCSDK::IMsgNetPacket* const&)
 T CUtlVector<GCSDK::IMsgNetPacket*, CUtlMemoryFixedGrowable<GCSDK::IMsgNetPacket*, 1ul, int> >::~CUtlVector()
 T CUtlVector<GCSDK::ISharedObjectListener*, CUtlMemory<GCSDK::ISharedObjectListener*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::MsgInfo_t, CUtlMemory<GCSDK::MsgInfo_t, int> >::~CUtlVector()
 T CUtlVector<GCSDK::SOID_t, CUtlMemory<GCSDK::SOID_t, int> >::~CUtlVector()
 T CUtlVector<GGWeaponAliasName, CUtlMemory<GGWeaponAliasName, int> >::~CUtlVector()
 T CUtlVector<GameTypes::CustomBotDifficulty*, CUtlMemory<GameTypes::CustomBotDifficulty*, int> >::PurgeAndDeleteElements()
 T CUtlVector<GameTypes::CustomBotDifficulty*, CUtlMemory<GameTypes::CustomBotDifficulty*, int> >::~CUtlVector()
 T CUtlVector<GameTypes::GameMode*, CUtlMemory<GameTypes::GameMode*, int> >::~CUtlVector()
 T CUtlVector<GameTypes::GameType*, CUtlMemory<GameTypes::GameType*, int> >::~CUtlVector()
 T CUtlVector<GameTypes::Map*, CUtlMemory<GameTypes::Map*, int> >::~CUtlVector()
 T CUtlVector<GameTypes::MapGroup*, CUtlMemory<GameTypes::MapGroup*, int> >::~CUtlVector()
 T CUtlVector<IEntityListener*, CUtlMemory<IEntityListener*, int> >::~CUtlVector()
 T CUtlVector<IGameSystem*, CUtlMemory<IGameSystem*, int> >::~CUtlVector()
 T CUtlVector<IGameSystemPerFrame*, CUtlMemory<IGameSystemPerFrame*, int> >::~CUtlVector()
 T CUtlVector<IGameTypes::WeaponProgression, CUtlMemory<IGameTypes::WeaponProgression, int> >::InsertBefore(int, IGameTypes::WeaponProgression const&)
 T CUtlVector<IGameTypes::WeaponProgression, CUtlMemory<IGameTypes::WeaponProgression, int> >::Purge()
 T CUtlVector<IGameTypes::WeaponProgression, CUtlMemory<IGameTypes::WeaponProgression, int> >::~CUtlVector()
 T CUtlVector<IHandleEntity const*, CUtlMemory<IHandleEntity const*, int> >::~CUtlVector()
 T CUtlVector<IHandleEntity*, CUtlMemory<IHandleEntity*, int> >::~CUtlVector()
 T CUtlVector<INavAvoidanceObstacle*, CUtlMemory<INavAvoidanceObstacle*, int> >::~CUtlVector()
 T CUtlVector<IParticleOperatorDefinition*, CUtlMemory<IParticleOperatorDefinition*, int> >::~CUtlVector()
 T CUtlVector<ISaveRestoreBlockHandler*, CUtlMemory<ISaveRestoreBlockHandler*, int> >::~CUtlVector()
 T CUtlVector<IServerNetworkable*, CUtlMemory<IServerNetworkable*, int> >::~CUtlVector()
 T CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
 T CUtlVector<NPCInterjection, CUtlMemory<NPCInterjection, int> >::InsertBefore(int, NPCInterjection const&)
 T CUtlVector<NPCInterjection, CUtlMemory<NPCInterjection, int> >::~CUtlVector()
 T CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >::~CUtlVector()
 T CUtlVector<OneWayLink_t, CUtlMemoryFixedGrowable<OneWayLink_t, 512ul, int> >::InsertBefore(int, OneWayLink_t const&)
 T CUtlVector<OneWayLink_t, CUtlMemoryFixedGrowable<OneWayLink_t, 512ul, int> >::~CUtlVector()
 T CUtlVector<PanelAnimationMapEntry, CUtlMemory<PanelAnimationMapEntry, int> >::~CUtlVector()
 T CUtlVector<ParticleChildrenInfo_t, CUtlMemory<ParticleChildrenInfo_t, int> >::~CUtlVector()
 T CUtlVector<QAngle, CUtlMemory<QAngle, int> >::~CUtlVector()
 T CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >::~CUtlVector()
 T CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >::~CUtlVector()
 T CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >::~CUtlVector()
 T CUtlVector<ResponseRules::CRR_Response, CUtlMemory<ResponseRules::CRR_Response, int> >::InsertBefore(int)
 T CUtlVector<ResponseRules::CResponseSystem::ScriptEntry, CUtlMemory<ResponseRules::CResponseSystem::ScriptEntry, int> >::~CUtlVector()
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::InsertBefore(int)
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::InsertBefore(int, ResponseRules::ParserResponse const&)
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::~CUtlVector()
 T CUtlVector<SMarketPurchases*, CUtlMemory<SMarketPurchases*, int> >::~CUtlVector()
 T CUtlVector<SWeaponHitData*, CUtlMemory<SWeaponHitData*, int> >::~CUtlVector()
 T CUtlVector<SWeaponMissData*, CUtlMemory<SWeaponMissData*, int> >::~CUtlVector()
 T CUtlVector<SWeaponShotData*, CUtlMemory<SWeaponShotData*, int> >::~CUtlVector()
 T CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >::~CUtlVector()
 T CUtlVector<ScriptFunctionBinding_t, CUtlMemory<ScriptFunctionBinding_t, int> >::InsertBefore(int)
 T CUtlVector<ScriptFunctionBinding_t, CUtlMemory<ScriptFunctionBinding_t, int> >::~CUtlVector()
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::InsertBefore(int)
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::~CUtlVector()
 T CUtlVector<SlideKeywordList_t*, CUtlMemory<SlideKeywordList_t*, int> >::~CUtlVector()
 T CUtlVector<SoundCommand_t*, CUtlMemory<SoundCommand_t*, int> >::~CUtlVector()
 T CUtlVector<SpawnPoint*, CUtlMemory<SpawnPoint*, int> >::~CUtlVector()
 T CUtlVector<SpotOrder, CUtlMemory<SpotOrder, int> >::~CUtlVector()
 T CUtlVector<StickerData_t, CUtlMemory<StickerData_t, int> >::~CUtlVector()
 T CUtlVector<TeleportListEntry_t, CUtlMemory<TeleportListEntry_t, int> >::~CUtlVector()
 T CUtlVector<TemplateEntityData_t*, CUtlMemory<TemplateEntityData_t*, int> >::~CUtlVector()
 T CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >::~CUtlVector()
 T CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >::~CUtlVector()
 T CUtlVector<Vector, CUtlMemory<Vector, int> >::~CUtlVector()
 T CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >::~CUtlVector()
 T CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >::~CUtlVector()
 T CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >::~CUtlVector()
 T CUtlVector<WeaponInfoLookup*, CUtlMemory<WeaponInfoLookup*, int> >::~CUtlVector()
 T CUtlVector<WeaponPaintableMaterial_t, CUtlMemory<WeaponPaintableMaterial_t, int> >::~CUtlVector()
 T CUtlVector<ability_icon_replacement_t, CUtlMemory<ability_icon_replacement_t, int> >::InsertBefore(int, ability_icon_replacement_t const&)
 T CUtlVector<ability_icon_replacement_t, CUtlMemory<ability_icon_replacement_t, int> >::~CUtlVector()
 T CUtlVector<activitylist_t, CUtlMemory<activitylist_t, int> >::~CUtlVector()
 T CUtlVector<animation_on_wearable_t, CUtlMemory<animation_on_wearable_t, int> >::~CUtlVector()
 T CUtlVector<announcer_preview_t, CUtlMemory<announcer_preview_t, int> >::InsertBefore(int, announcer_preview_t const&)
 T CUtlVector<announcer_preview_t, CUtlMemory<announcer_preview_t, int> >::~CUtlVector()
 T CUtlVector<attachedmodel_t, CUtlMemory<attachedmodel_t, int> >::~CUtlVector()
 T CUtlVector<attachedparticle_t, CUtlMemory<attachedparticle_t, int> >::~CUtlVector()
 T CUtlVector<attachedparticlecontrolpoint_t, CUtlMemory<attachedparticlecontrolpoint_t, int> >::~CUtlVector()
 T CUtlVector<attr_type_t, CUtlMemory<attr_type_t, int> >::InsertBefore(int, attr_type_t const&)
 T CUtlVector<attr_type_t, CUtlMemory<attr_type_t, int> >::~CUtlVector()
 T CUtlVector<bbox_t, CUtlMemory<bbox_t, int> >::~CUtlVector()
 T CUtlVector<bool (*)(), CUtlMemory<bool (*)(), int> >::~CUtlVector()
 T CUtlVector<bool, CUtlMemory<bool, int> >::GrowVector(int)
 T CUtlVector<bool, CUtlMemory<bool, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<bool, CUtlMemory<bool, int> >::~CUtlVector()
 T CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >::~CUtlVector()
 T CUtlVector<char const*, CUtlMemory<char const*, int> >::operator=(CUtlVector<char const*, CUtlMemory<char const*, int> > const&)
 T CUtlVector<char const*, CUtlMemory<char const*, int> >::~CUtlVector()
 T CUtlVector<char*, CUtlMemory<char*, int> >::~CUtlVector()
 T CUtlVector<char, CUtlMemory<char, int> >::AddToTail(char const&)
 T CUtlVector<char, CUtlMemory<char, int> >::GrowVector(int)
 T CUtlVector<char, CUtlMemory<char, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
 T CUtlVector<clusterSoundscapeList_t, CUtlMemory<clusterSoundscapeList_t, int> >::~CUtlVector()
 T CUtlVector<collidelist_t, CUtlMemory<collidelist_t, int> >::~CUtlVector()
 T CUtlVector<constraint_anchor_t, CUtlMemory<constraint_anchor_t, int> >::~CUtlVector()
 T CUtlVector<damageevent_t, CUtlMemory<damageevent_t, int> >::InsertBefore(int)
 T CUtlVector<damageevent_t, CUtlMemory<damageevent_t, int> >::~CUtlVector()
 T CUtlVector<double, CUtlMemory<double, int> >::~CUtlVector()
 T CUtlVector<entitynotify_t, CUtlMemory<entitynotify_t, int> >::~CUtlVector()
 T CUtlVector<eventlist_t, CUtlMemory<eventlist_t, int> >::~CUtlVector()
 T CUtlVector<float, CUtlMemory<float, int> >::~CUtlVector()
 T CUtlVector<fluidevent_t, CUtlMemory<fluidevent_t, int> >::~CUtlVector()
 T CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >::~CUtlVector()
 T CUtlVector<grouptemplate_t, CUtlMemory<grouptemplate_t, int> >::~CUtlVector()
 T CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >::~CUtlVector()
 T CUtlVector<inflictorstate_t, CUtlMemory<inflictorstate_t, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemory<int, int> >::AddToTail(int const&)
 T CUtlVector<int, CUtlMemory<int, int> >::InsertMultipleBefore(int, int, int const*)
 T CUtlVector<int, CUtlMemory<int, int> >::operator=(CUtlVector<int, CUtlMemory<int, int> > const&)
 T CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemoryFixedGrowable<int, 10ul, int> >::InsertBefore(int, int const&)
 T CUtlVector<int, CUtlMemoryFixedGrowable<int, 10ul, int> >::~CUtlVector()
 T CUtlVector<item_list_entry_t, CUtlMemory<item_list_entry_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<item_list_entry_t, CUtlMemory<item_list_entry_t, int> >::~CUtlVector()
 T CUtlVector<loadout_positions_t, CUtlMemory<loadout_positions_t, int> >::~CUtlVector()
 T CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >::~CUtlVector()
 T CUtlVector<masscenteroverride_t, CUtlMemory<masscenteroverride_t, int> >::~CUtlVector()
 T CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >::~CUtlVector()
 T CUtlVector<particle_control_point_on_wearable_t, CUtlMemory<particle_control_point_on_wearable_t, int> >::~CUtlVector()
 T CUtlVector<particle_on_wearable_t, CUtlMemory<particle_on_wearable_t, int> >::~CUtlVector()
 T CUtlVector<particlesnapshot_on_wearable_t, CUtlMemory<particlesnapshot_on_wearable_t, int> >::~CUtlVector()
 T CUtlVector<penetrateevent_t, CUtlMemory<penetrateevent_t, int> >::~CUtlVector()
 T CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >::~CUtlVector()
 T CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >::~CUtlVector()
 T CUtlVector<physicssound::impactsound_t, CUtlMemory<physicssound::impactsound_t, int> >::~CUtlVector()
 T CUtlVector<short*, CUtlMemory<short*, int> >::~CUtlVector()
 T CUtlVector<short, CUtlMemory<short, int> >::~CUtlVector()
 T CUtlVector<simthinkentry_t, CUtlMemory<simthinkentry_t, int> >::~CUtlVector()
 T CUtlVector<sound_on_wearable_t, CUtlMemory<sound_on_wearable_t, int> >::~CUtlVector()
 T CUtlVector<static_attrib_t, CUtlMemory<static_attrib_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<static_attrib_t, CUtlMemory<static_attrib_t, int> >::~CUtlVector()
 T CUtlVector<stickerMaterialReference_t, CUtlMemory<stickerMaterialReference_t, int> >::~CUtlVector()
 T CUtlVector<string_t, CUtlMemory<string_t, int> >::~CUtlVector()
 T CUtlVector<studiohdr_t const*, CUtlMemory<studiohdr_t const*, int> >::~CUtlVector()
 T CUtlVector<template_t, CUtlMemory<template_t, int> >::~CUtlVector()
 T CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >::~CUtlVector()
 T CUtlVector<touchevent_t, CUtlMemory<touchevent_t, int> >::~CUtlVector()
 T CUtlVector<triggerevent_t, CUtlMemory<triggerevent_t, int> >::~CUtlVector()
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::GrowVector(int)
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::InsertBefore(int, unsigned char const&)
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
 T CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::operator=(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> > const&)
 T CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::~CUtlVector()
 T CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >::AddVectorToTail(CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> > const&)
 T CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >::~CUtlVector()
 T CUtlVector<unsigned long, CUtlMemory<unsigned long, int> >::~CUtlVector()
 T CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::operator=(CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > const&)
 T CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::~CUtlVector()
 T CUtlVector<unsigned short, CUtlMemoryConservative<unsigned short> >::GrowVector(int)
 T CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >::~CUtlVector()
 T CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >::~CUtlVector()
 T CUtlVector<vehiclescript_t, CUtlMemory<vehiclescript_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::ActiveAnimation_t, CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::AnimCommand_t, CUtlMemory<vgui::AnimationController::AnimCommand_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::PostedMessage_t, CUtlMemory<vgui::AnimationController::PostedMessage_t, int> >::~CUtlVector()
 T CUtlVector<vgui::BoundKey_t, CUtlMemory<vgui::BoundKey_t, int> >::InsertBefore(int, vgui::BoundKey_t const&)
 T CUtlVector<vgui::BuildModeDialog*, CUtlMemory<vgui::BuildModeDialog*, int> >::~CUtlVector()
 T CUtlVector<vgui::CTreeViewListControl::CColumnInfo, CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vgui::CTreeViewListControl::CColumnInfo, CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int> >::~CUtlVector()
 T CUtlVector<vgui::ClickPanel*, CUtlMemory<vgui::ClickPanel*, int> >::~CUtlVector()
 T CUtlVector<vgui::DHANDLE<vgui::Menu>, CUtlMemory<vgui::DHANDLE<vgui::Menu>, int> >::~CUtlVector()
 T CUtlVector<vgui::IImage*, CUtlMemory<vgui::IImage*, int> >::~CUtlVector()
 T CUtlVector<vgui::Label::TImageInfo, CUtlMemory<vgui::Label::TImageInfo, int> >::~CUtlVector()
 T CUtlVector<vgui::MenuButton*, CUtlMemory<vgui::MenuButton*, int> >::~CUtlVector()
 T CUtlVector<vgui::MenuSeparator*, CUtlMemory<vgui::MenuSeparator*, int> >::~CUtlVector()
 T CUtlVector<vgui::OverridableColorEntry, CUtlMemory<vgui::OverridableColorEntry, int> >::~CUtlVector()
 T CUtlVector<vgui::PHandle, CUtlMemory<vgui::PHandle, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vgui::PHandle, CUtlMemory<vgui::PHandle, int> >::~CUtlVector()
 T CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >::~CUtlVector()
 T CUtlVector<vgui::RichText::TFormatStream, CUtlMemory<vgui::RichText::TFormatStream, int> >::~CUtlVector()
 T CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >::~CUtlVector()
 T CUtlVector<vgui::label_colorchange_t, CUtlMemory<vgui::label_colorchange_t, int> >::~CUtlVector()
 T CUtlVector<visibility_target_t, CUtlMemory<visibility_target_t, int> >::~CUtlVector()
 T CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
 T CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
 T CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::~CUtlVector()
 T CUtlVector<wchar_t, CUtlMemory<wchar_t, int> >::~CUtlVector()
 T CUtlVectorConservative<CNavArea::AreaBindInfo>::~CUtlVectorConservative()
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorUltraConservative<HidingSpot*, CUtlVectorUltraConservativeAllocator>::~CUtlVectorUltraConservative()
 T CVGuiScreen::Activate()
 T CVGuiScreen::CVGuiScreen()
 T CVGuiScreen::GetDataDescMap()
 T CVGuiScreen::GetPanelName() const
 T CVGuiScreen::GetServerClass()
 T CVGuiScreen::InputSetActive(inputdata_t&)
 T CVGuiScreen::InputSetInactive(inputdata_t&)
 T CVGuiScreen::KeyValue(char const*, char const*)
 T CVGuiScreen::MakeVisibleOnlyToTeammates(bool)
 T CVGuiScreen::OnRestore()
 T CVGuiScreen::Precache()
 T CVGuiScreen::SetActive(bool)
 T CVGuiScreen::SetActualSize(float, float)
 T CVGuiScreen::SetAttachedToViewModel(bool)
 T CVGuiScreen::SetAttachmentIndex(int)
 T CVGuiScreen::SetOverlayMaterial(char const*)
 T CVGuiScreen::SetPanelName(char const*)
 T CVGuiScreen::SetTransparency(bool)
 T CVGuiScreen::ShouldTransmit(CCheckTransmitInfo const*)
 T CVGuiScreen::Spawn()
 T CVGuiScreen::UpdateTransmitState()
 T CVGuiScreen::YouForgotToImplementOrDeclareServerClass()
 T CVGuiScreen::~CVGuiScreen()
 T CVScriptGameSystem::FrameUpdatePostEntityThink()
 T CVScriptGameSystem::LevelInitPostEntity()
 T CVScriptGameSystem::LevelInitPreEntity()
 T CVScriptGameSystem::LevelShutdownPostEntity()
 T CVScriptGameSystem::~CVScriptGameSystem()
 T CVScriptSaveRestoreBlockHandler::GetBlockName()
 T CVScriptSaveRestoreBlockHandler::PostRestore()
 T CVScriptSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CVScriptSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CVScriptSaveRestoreBlockHandler::Save(ISave*)
 T CVScriptSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CVScriptSaveRestoreBlockHandler::~CVScriptSaveRestoreBlockHandler()
 T CV_GlobalChange_Commentary(IConVar*, char const*, float)
 T CVarBitVecBase<int>::ReallocInts(int)
 T CVarBitVecBase<int>::Resize(int, bool)
 T CVarBitVecBase<unsigned short>::ReallocInts(int)
 T CVarBitVecBase<unsigned short>::Resize(int, bool)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CVariantSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CVariantSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CVariantSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CVariantSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CVehicleSoundsParser::CVehicleSoundsParser()
 T CVehicleSoundsParser::ParseKeyValue(void*, char const*, char const*)
 T CVehicleSoundsParser::SetDefaults(void*)
 T CVehicleWaypoint::RecalculateSpline()
 T CVisibilityMonitor::AddEntity(CBaseEntity*, float, bool (*)(CBaseEntity*, CBasePlayer*), bool (*)(CBaseEntity*, CBasePlayer*), bool)
 T CVisibilityMonitor::EntityIsVisibleToPlayer(visibility_target_t const&, CBasePlayer*, int*)
 T CVisibilityMonitor::FrameUpdatePostEntityThink()
 T CVisibilityMonitor::Init()
 T CVisibilityMonitor::LevelInitPostEntity()
 T CVisibilityMonitor::LevelInitPreEntity()
 T CVisibilityMonitor::LevelShutdownPreEntity()
 T CVisibilityMonitor::Name()
 T CVisibilityMonitor::Shutdown()
 T CVisibilityMonitor::~CVisibilityMonitor()
 T CVoiceGameMgr::ClientCommand(CBasePlayer*, CCommand const&)
 T CVoiceGameMgr::ClientConnected(edict_t*)
 T CVoiceGameMgr::Init(IVoiceGameMgrHelper*, int)
 T CVoiceGameMgr::IsPlayerIgnoringPlayer(int, int)
 T CVoiceGameMgr::Update(double)
 T CVoiceGameMgr::UpdateMasks()
 T CVoiceGameMgr::~CVoiceGameMgr()
 T CVoiceGameMgrHelper::CanPlayerHearPlayer(CBasePlayer*, CBasePlayer*, bool&)
 T CVoiceGameMgrHelper::~CVoiceGameMgrHelper()
 T CVoteController* _CreateEntityTemplate<CVoteController>(CVoteController*, char const*)
 T CVoteController::CreateVote(int, char const*, char const*)
 T CVoteController::GetDataDescMap()
 T CVoteController::GetServerClass()
 T CVoteController::GetWinningVoteOption()
 T CVoteController::ListIssues(CBasePlayer*)
 T CVoteController::ResetData()
 T CVoteController::SendVoteFailedMessage(vote_create_failed_t, CBasePlayer*, int)
 T CVoteController::SetupVote(int)
 T CVoteController::Spawn()
 T CVoteController::TryCastVote(int, char const*)
 T CVoteController::UpdateTransmitState()
 T CVoteController::VoteChoice_Increment(int)
 T CVoteController::VoteControllerThink()
 T CVoteController::YouForgotToImplementOrDeclareServerClass()
 T CVoteController::~CVoteController()
 T CWC_UpdateIgnoreList::GetDataDescMap()
 T CWC_UpdateIgnoreList::~CWC_UpdateIgnoreList()
 T CWatcherList::AddToList(CBaseEntity*)
 T CWatcherList::NotifyPositionChanged(CBaseEntity*)
 T CWatcherList::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CWatcherList::~CWatcherList()
 T CWaterBullet::BulletThink()
 T CWaterBullet::GetDataDescMap()
 T CWaterBullet::GetServerClass()
 T CWaterBullet::Precache()
 T CWaterBullet::Touch(CBaseEntity*)
 T CWaterBullet::YouForgotToImplementOrDeclareServerClass()
 T CWaterBullet::~CWaterBullet()
 T CWaterLODControl::CWaterLODControl()
 T CWaterLODControl::GetDataDescMap()
 T CWaterLODControl::GetServerClass()
 T CWaterLODControl::KeyValue(char const*, char const*)
 T CWaterLODControl::ObjectCaps()
 T CWaterLODControl::Spawn()
 T CWaterLODControl::UpdateTransmitState()
 T CWaterLODControl::YouForgotToImplementOrDeclareServerClass()
 T CWaterLODControl::~CWaterLODControl()
 T CWeaponAWP::GetServerClass()
 T CWeaponAWP::YouForgotToImplementOrDeclareServerClass()
 T CWeaponAWP::~CWeaponAWP()
 T CWeaponAug::GetServerClass()
 T CWeaponAug::YouForgotToImplementOrDeclareServerClass()
 T CWeaponAug::~CWeaponAug()
 T CWeaponBizon::GetServerClass()
 T CWeaponBizon::YouForgotToImplementOrDeclareServerClass()
 T CWeaponBizon::~CWeaponBizon()
 T CWeaponCSBase::AddPriorOwner(CCSPlayer*)
 T CWeaponCSBase::AddToPriorOwnerList(CCSPlayer*)
 T CWeaponCSBase::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
 T CWeaponCSBase::AllowTaunts()
 T CWeaponCSBase::AttemptToMaterialize()
 T CWeaponCSBase::BulletWasFired(Vector const&, Vector const&)
 T CWeaponCSBase::CWeaponCSBase()
 T CWeaponCSBase::CalcViewmodelBob()
 T CWeaponCSBase::CalculateNextAttackTime(float)
 T CWeaponCSBase::CallSecondaryAttack()
 T CWeaponCSBase::CanBeSelected()
 T CWeaponCSBase::CanBeUsedWithShield() const
 T CWeaponCSBase::CanDeploy()
 T CWeaponCSBase::CannotShootUnderwater() const
 T CWeaponCSBase::CheckRespawn()
 T CWeaponCSBase::DefaultDeploy(char*, char*, int, char*)
 T CWeaponCSBase::DefaultPistolReload()
 T CWeaponCSBase::DefaultReload(int, int, int)
 T CWeaponCSBase::DefaultTouch(CBaseEntity*)
 T CWeaponCSBase::Deploy()
 T CWeaponCSBase::Drop(Vector const&)
 T CWeaponCSBase::GetAddonModel() const
 T CWeaponCSBase::GetAddonScale() const
 T CWeaponCSBase::GetAnimExtension() const
 T CWeaponCSBase::GetArmorRatio() const
 T CWeaponCSBase::GetBotAudibleRange() const
 T CWeaponCSBase::GetBulletSpread()
 T CWeaponCSBase::GetCSWeaponID() const
 T CWeaponCSBase::GetCSWpnData() const
 T CWeaponCSBase::GetCSZoomLevel()
 T CWeaponCSBase::GetCycleTime(int) const
 T CWeaponCSBase::GetDamage() const
 T CWeaponCSBase::GetDataDescMap()
 T CWeaponCSBase::GetDefaultAnimSpeed()
 T CWeaponCSBase::GetDefinitionName() const
 T CWeaponCSBase::GetDeployActivity()
 T CWeaponCSBase::GetInaccuracy() const
 T CWeaponCSBase::GetInaccuracyCrouch(int) const
 T CWeaponCSBase::GetInaccuracyStand(int) const
 T CWeaponCSBase::GetIronSightController()
 T CWeaponCSBase::GetKillAward() const
 T CWeaponCSBase::GetMaxSpeed() const
 T CWeaponCSBase::GetPlayerAnimationExtension() const
 T CWeaponCSBase::GetPlayerOwner() const
 T CWeaponCSBase::GetRecoilAngle(int) const
 T CWeaponCSBase::GetRecoilAngleVariance(int) const
 T CWeaponCSBase::GetRecoilMagnitude(int) const
 T CWeaponCSBase::GetRecoilMagnitudeVariance(int) const
 T CWeaponCSBase::GetRecoilSeed() const
 T CWeaponCSBase::GetServerClass()
 T CWeaponCSBase::GetShieldViewModel() const
 T CWeaponCSBase::GetShootSound(int) const
 T CWeaponCSBase::GetShotgunReloadState()
 T CWeaponCSBase::GetSilencerModel() const
 T CWeaponCSBase::GetSpread() const
 T CWeaponCSBase::GetThrowVelocity() const
 T CWeaponCSBase::GetTracerType()
 T CWeaponCSBase::GetViewModel(int) const
 T CWeaponCSBase::GetWeaponID() const
 T CWeaponCSBase::GetWeaponPrice() const
 T CWeaponCSBase::GetWeaponType() const
 T CWeaponCSBase::GetWrongTeamMsg() const
 T CWeaponCSBase::GetZoomFOV(int) const
 T CWeaponCSBase::GetZoomInSound() const
 T CWeaponCSBase::GetZoomLevels() const
 T CWeaponCSBase::GetZoomOutSound() const
 T CWeaponCSBase::GetZoomTime(int) const
 T CWeaponCSBase::HasSilencer() const
 T CWeaponCSBase::HasTraditionalScope() const
 T CWeaponCSBase::HasZoom()
 T CWeaponCSBase::Holster(CBaseCombatWeapon*)
 T CWeaponCSBase::IsAPriorOwner(CCSPlayer*) const
 T CWeaponCSBase::IsFullAuto() const
 T CWeaponCSBase::IsInBurstMode()
 T CWeaponCSBase::IsPistol() const
 T CWeaponCSBase::IsPredicted() const
 T CWeaponCSBase::IsReloadVisuallyComplete()
 T CWeaponCSBase::IsRemoveable()
 T CWeaponCSBase::IsSilenced() const
 T CWeaponCSBase::ItemBusyFrame()
 T CWeaponCSBase::ItemPostFrame()
 T CWeaponCSBase::KeyValue(char const*, char const*)
 T CWeaponCSBase::Materialize()
 T CWeaponCSBase::OnJump(float)
 T CWeaponCSBase::OnLand(float)
 T CWeaponCSBase::OnPickedUp(CBaseCombatCharacter*)
 T CWeaponCSBase::OnRoundRestart()
 T CWeaponCSBase::Operator_HandleAnimEvent(animevent_t*, CBaseCombatCharacter*)
 T CWeaponCSBase::PhysicsSplash(Vector const&, Vector const&, float, float)
 T CWeaponCSBase::PlayEmptySound()
 T CWeaponCSBase::Precache()
 T CWeaponCSBase::Recoil(CSWeaponMode)
 T CWeaponCSBase::Reload()
 T CWeaponCSBase::RemoveUnownedWeaponThink()
 T CWeaponCSBase::Respawn()
 T CWeaponCSBase::SecondaryAttack()
 T CWeaponCSBase::SendActivityEvents(int)
 T CWeaponCSBase::SendViewModelAnim(int)
 T CWeaponCSBase::SendWeaponAnim(int)
 T CWeaponCSBase::SetWeaponModelIndex(char const*)
 T CWeaponCSBase::ShouldRemoveOnRoundRestart()
 T CWeaponCSBase::Spawn()
 T CWeaponCSBase::UpdateAccuracyPenalty()
 T CWeaponCSBase::UpdateIronSightController()
 T CWeaponCSBase::UpdateShieldState()
 T CWeaponCSBase::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CWeaponCSBase::WasOwnedByTeam(int)
 T CWeaponCSBase::WeaponHasBulletAltfire() const
 T CWeaponCSBase::WeaponHasBurst() const
 T CWeaponCSBase::WeaponHasPrefireAnim() const
 T CWeaponCSBase::WeaponReset()
 T CWeaponCSBase::YouForgotToImplementOrDeclareServerClass()
 T CWeaponCSBase::~CWeaponCSBase()
 T CWeaponCSBaseGun::BurstFireRemaining()
 T CWeaponCSBaseGun::CSBaseGunFire(float, CSWeaponMode)
 T CWeaponCSBaseGun::CWeaponCSBaseGun()
 T CWeaponCSBaseGun::Deploy()
 T CWeaponCSBaseGun::DoFireEffects()
 T CWeaponCSBaseGun::DoesUnzoomAfterShot() const
 T CWeaponCSBaseGun::Drop(Vector const&)
 T CWeaponCSBaseGun::FireDelayedPrimary()
 T CWeaponCSBaseGun::GetCSWpnData() const
 T CWeaponCSBaseGun::GetCSZoomLevel()
 T CWeaponCSBaseGun::GetDeployActivity()
 T CWeaponCSBaseGun::GetServerClass()
 T CWeaponCSBaseGun::GetWorldModel() const
 T CWeaponCSBaseGun::HasZoom()
 T CWeaponCSBaseGun::Holster(CBaseCombatWeapon*)
 T CWeaponCSBaseGun::IsFullAuto() const
 T CWeaponCSBaseGun::IsInBurstMode() const
 T CWeaponCSBaseGun::IsZoomed() const
 T CWeaponCSBaseGun::ItemPostFrame()
 T CWeaponCSBaseGun::Precache()
 T CWeaponCSBaseGun::PrimaryAttack()
 T CWeaponCSBaseGun::Reload()
 T CWeaponCSBaseGun::SecondaryAttack()
 T CWeaponCSBaseGun::SendWeaponAnim(int)
 T CWeaponCSBaseGun::Spawn()
 T CWeaponCSBaseGun::WeaponHasBulletAltfire() const
 T CWeaponCSBaseGun::WeaponHasBurst() const
 T CWeaponCSBaseGun::WeaponHasPrefireAnim() const
 T CWeaponCSBaseGun::WeaponIdle()
 T CWeaponCSBaseGun::YouForgotToImplementOrDeclareServerClass()
 T CWeaponCSBaseGun::~CWeaponCSBaseGun()
 T CWeaponCycler::Deploy()
 T CWeaponCycler::GetDataDescMap()
 T CWeaponCycler::GetServerClass()
 T CWeaponCycler::Holster(CBaseCombatWeapon*)
 T CWeaponCycler::PrimaryAttack()
 T CWeaponCycler::SecondaryAttack()
 T CWeaponCycler::Spawn()
 T CWeaponCycler::YouForgotToImplementOrDeclareServerClass()
 T CWeaponCycler::~CWeaponCycler()
 T CWeaponDatabase::FindOrCreateWeaponInfo(char const*)
 T CWeaponDatabase::FindWeaponInfo(char const*)
 T CWeaponDatabase::FireGameEvent(IGameEvent*)
 T CWeaponDatabase::GetFileWeaponInfoFromHandle(unsigned short)
 T CWeaponDatabase::Init()
 T CWeaponDatabase::LoadManifest()
 T CWeaponDatabase::LoadWeaponDataFromFile(IFileSystem*, char const*, unsigned char const*)
 T CWeaponDatabase::PrecacheAllWeapons()
 T CWeaponDatabase::RefreshAllWeapons()
 T CWeaponDatabase::~CWeaponDatabase()
 T CWeaponElite::Deploy()
 T CWeaponElite::GetCSWeaponID() const
 T CWeaponElite::GetServerClass()
 T CWeaponElite::Precache()
 T CWeaponElite::PrimaryAttack()
 T CWeaponElite::SendWeaponAnim(int)
 T CWeaponElite::Spawn()
 T CWeaponElite::WeaponIdle()
 T CWeaponElite::YouForgotToImplementOrDeclareServerClass()
 T CWeaponElite::~CWeaponElite()
 T CWeaponFamas::GetServerClass()
 T CWeaponFamas::YouForgotToImplementOrDeclareServerClass()
 T CWeaponFamas::~CWeaponFamas()
 T CWeaponFiveSeven::GetServerClass()
 T CWeaponFiveSeven::YouForgotToImplementOrDeclareServerClass()
 T CWeaponFiveSeven::~CWeaponFiveSeven()
 T CWeaponG3SG1::GetServerClass()
 T CWeaponG3SG1::YouForgotToImplementOrDeclareServerClass()
 T CWeaponG3SG1::~CWeaponG3SG1()
 T CWeaponGalil::GetServerClass()
 T CWeaponGalil::YouForgotToImplementOrDeclareServerClass()
 T CWeaponGalil::~CWeaponGalil()
 T CWeaponGalilAR::GetServerClass()
 T CWeaponGalilAR::YouForgotToImplementOrDeclareServerClass()
 T CWeaponGalilAR::~CWeaponGalilAR()
 T CWeaponGlock::GetServerClass()
 T CWeaponGlock::YouForgotToImplementOrDeclareServerClass()
 T CWeaponGlock::~CWeaponGlock()
 T CWeaponHKP2000::GetServerClass()
 T CWeaponHKP2000::YouForgotToImplementOrDeclareServerClass()
 T CWeaponHKP2000::~CWeaponHKP2000()
 T CWeaponLOSFilter::ShouldHitEntity(IHandleEntity*, int)
 T CWeaponList::LevelShutdownPostEntity()
 T CWeaponList::~CWeaponList()
 T CWeaponM249::GetServerClass()
 T CWeaponM249::YouForgotToImplementOrDeclareServerClass()
 T CWeaponM249::~CWeaponM249()
 T CWeaponM3::GetCSWeaponID() const
 T CWeaponM3::GetServerClass()
 T CWeaponM3::GetShotgunReloadState()
 T CWeaponM3::PrimaryAttack()
 T CWeaponM3::Reload()
 T CWeaponM3::WeaponIdle()
 T CWeaponM3::YouForgotToImplementOrDeclareServerClass()
 T CWeaponM3::~CWeaponM3()
 T CWeaponM4A1::GetServerClass()
 T CWeaponM4A1::YouForgotToImplementOrDeclareServerClass()
 T CWeaponM4A1::~CWeaponM4A1()
 T CWeaponMAC10::GetServerClass()
 T CWeaponMAC10::YouForgotToImplementOrDeclareServerClass()
 T CWeaponMAC10::~CWeaponMAC10()
 T CWeaponMP5Navy::GetServerClass()
 T CWeaponMP5Navy::YouForgotToImplementOrDeclareServerClass()
 T CWeaponMP5Navy::~CWeaponMP5Navy()
 T CWeaponMP7::GetServerClass()
 T CWeaponMP7::YouForgotToImplementOrDeclareServerClass()
 T CWeaponMP7::~CWeaponMP7()
 T CWeaponMP9::GetServerClass()
 T CWeaponMP9::YouForgotToImplementOrDeclareServerClass()
 T CWeaponMP9::~CWeaponMP9()
 T CWeaponMag7::GetServerClass()
 T CWeaponMag7::YouForgotToImplementOrDeclareServerClass()
 T CWeaponMag7::~CWeaponMag7()
 T CWeaponNOVA::GetCSWeaponID() const
 T CWeaponNOVA::GetServerClass()
 T CWeaponNOVA::GetShotgunReloadState()
 T CWeaponNOVA::PrimaryAttack()
 T CWeaponNOVA::Reload()
 T CWeaponNOVA::WeaponIdle()
 T CWeaponNOVA::YouForgotToImplementOrDeclareServerClass()
 T CWeaponNOVA::~CWeaponNOVA()
 T CWeaponNegev::GetServerClass()
 T CWeaponNegev::YouForgotToImplementOrDeclareServerClass()
 T CWeaponNegev::~CWeaponNegev()
 T CWeaponP228::GetServerClass()
 T CWeaponP228::YouForgotToImplementOrDeclareServerClass()
 T CWeaponP228::~CWeaponP228()
 T CWeaponP250::GetServerClass()
 T CWeaponP250::YouForgotToImplementOrDeclareServerClass()
 T CWeaponP250::~CWeaponP250()
 T CWeaponP90::GetServerClass()
 T CWeaponP90::YouForgotToImplementOrDeclareServerClass()
 T CWeaponP90::~CWeaponP90()
 T CWeaponSCAR20::GetServerClass()
 T CWeaponSCAR20::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSCAR20::~CWeaponSCAR20()
 T CWeaponSG550::GetServerClass()
 T CWeaponSG550::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSG550::~CWeaponSG550()
 T CWeaponSG552::GetCSWeaponID() const
 T CWeaponSG552::GetServerClass()
 T CWeaponSG552::PrimaryAttack()
 T CWeaponSG552::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSG552::~CWeaponSG552()
 T CWeaponSG556::GetServerClass()
 T CWeaponSG556::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSG556::~CWeaponSG556()
 T CWeaponSSG08::GetServerClass()
 T CWeaponSSG08::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSSG08::~CWeaponSSG08()
 T CWeaponSawedoff::GetCSWeaponID() const
 T CWeaponSawedoff::GetServerClass()
 T CWeaponSawedoff::GetShotgunReloadState()
 T CWeaponSawedoff::PrimaryAttack()
 T CWeaponSawedoff::Reload()
 T CWeaponSawedoff::WeaponIdle()
 T CWeaponSawedoff::YouForgotToImplementOrDeclareServerClass()
 T CWeaponSawedoff::~CWeaponSawedoff()
 T CWeaponScout::GetServerClass()
 T CWeaponScout::YouForgotToImplementOrDeclareServerClass()
 T CWeaponScout::~CWeaponScout()
 T CWeaponTMP::GetServerClass()
 T CWeaponTMP::YouForgotToImplementOrDeclareServerClass()
 T CWeaponTMP::~CWeaponTMP()
 T CWeaponTaser::GetCSWeaponID() const
 T CWeaponTaser::GetMuzzleFlashEffectName_1stPerson()
 T CWeaponTaser::GetMuzzleFlashEffectName_3rdPerson()
 T CWeaponTaser::GetServerClass()
 T CWeaponTaser::Holster(CBaseCombatWeapon*)
 T CWeaponTaser::ItemPostFrame()
 T CWeaponTaser::Precache()
 T CWeaponTaser::PrimaryAttack()
 T CWeaponTaser::YouForgotToImplementOrDeclareServerClass()
 T CWeaponTaser::~CWeaponTaser()
 T CWeaponTec9::GetServerClass()
 T CWeaponTec9::YouForgotToImplementOrDeclareServerClass()
 T CWeaponTec9::~CWeaponTec9()
 T CWeaponUMP45::GetServerClass()
 T CWeaponUMP45::YouForgotToImplementOrDeclareServerClass()
 T CWeaponUMP45::~CWeaponUMP45()
 T CWeaponUSP::GetServerClass()
 T CWeaponUSP::YouForgotToImplementOrDeclareServerClass()
 T CWeaponUSP::~CWeaponUSP()
 T CWeaponXM1014::GetCSWeaponID() const
 T CWeaponXM1014::GetServerClass()
 T CWeaponXM1014::GetShotgunReloadState()
 T CWeaponXM1014::PrimaryAttack()
 T CWeaponXM1014::Reload()
 T CWeaponXM1014::WeaponIdle()
 T CWeaponXM1014::YouForgotToImplementOrDeclareServerClass()
 T CWeaponXM1014::~CWeaponXM1014()
 T CWeightButton::CreateVPhysics()
 T CWeightButton::GetDataDescMap()
 T CWeightButton::Spawn()
 T CWeightButton::TriggerThink()
 T CWeightButton::~CWeightButton()
 T CWindowPane::CreateWindowPane(Vector const&, QAngle const&)
 T CWindowPane::Die()
 T CWindowPane::GetDataDescMap()
 T CWindowPane::PaneTouch(CBaseEntity*)
 T CWindowPane::Precache()
 T CWindowPane::Spawn()
 T CWindowPane::~CWindowPane()
 T CWorkshopMapGroupBuilder::CWorkshopMapGroupBuilder(unsigned long long, CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> > const&)
 T CWorkshopMapGroupBuilder::MapOnDisk(unsigned long long, char const*)
 T CWorkshop_GetContributors_Request::ByteSize() const
 T CWorkshop_GetContributors_Request::Clear()
 T CWorkshop_GetContributors_Request::GetCachedSize() const
 T CWorkshop_GetContributors_Request::GetMetadata() const
 T CWorkshop_GetContributors_Request::IsInitialized() const
 T CWorkshop_GetContributors_Request::MergeFrom(CWorkshop_GetContributors_Request const&)
 T CWorkshop_GetContributors_Request::New() const
 T CWorkshop_GetContributors_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_GetContributors_Request::SetCachedSize(int) const
 T CWorkshop_GetContributors_Request::~CWorkshop_GetContributors_Request()
 T CWorkshop_GetContributors_Response::ByteSize() const
 T CWorkshop_GetContributors_Response::Clear()
 T CWorkshop_GetContributors_Response::GetCachedSize() const
 T CWorkshop_GetContributors_Response::GetMetadata() const
 T CWorkshop_GetContributors_Response::IsInitialized() const
 T CWorkshop_GetContributors_Response::MergeFrom(CWorkshop_GetContributors_Response const&)
 T CWorkshop_GetContributors_Response::New() const
 T CWorkshop_GetContributors_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_GetContributors_Response::SetCachedSize(int) const
 T CWorkshop_GetContributors_Response::~CWorkshop_GetContributors_Response()
 T CWorkshop_PopulateItemDescriptions_Request::ByteSize() const
 T CWorkshop_PopulateItemDescriptions_Request::Clear()
 T CWorkshop_PopulateItemDescriptions_Request::GetCachedSize() const
 T CWorkshop_PopulateItemDescriptions_Request::GetMetadata() const
 T CWorkshop_PopulateItemDescriptions_Request::IsInitialized() const
 T CWorkshop_PopulateItemDescriptions_Request::MergeFrom(CWorkshop_PopulateItemDescriptions_Request const&)
 T CWorkshop_PopulateItemDescriptions_Request::New() const
 T CWorkshop_PopulateItemDescriptions_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_PopulateItemDescriptions_Request::SetCachedSize(int) const
 T CWorkshop_PopulateItemDescriptions_Request::~CWorkshop_PopulateItemDescriptions_Request()
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::ByteSize() const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::Clear()
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::GetCachedSize() const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::GetMetadata() const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::IsInitialized() const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergeFrom(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock const&)
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::New() const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SetCachedSize(int) const
 T CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock()
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::ByteSize() const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::Clear()
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::GetCachedSize() const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::GetMetadata() const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::IsInitialized() const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergeFrom(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription const&)
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::New() const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SetCachedSize(int) const
 T CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription()
 T CWorkshop_SetItemPaymentRules_Request::ByteSize() const
 T CWorkshop_SetItemPaymentRules_Request::Clear()
 T CWorkshop_SetItemPaymentRules_Request::GetCachedSize() const
 T CWorkshop_SetItemPaymentRules_Request::GetMetadata() const
 T CWorkshop_SetItemPaymentRules_Request::IsInitialized() const
 T CWorkshop_SetItemPaymentRules_Request::MergeFrom(CWorkshop_SetItemPaymentRules_Request const&)
 T CWorkshop_SetItemPaymentRules_Request::New() const
 T CWorkshop_SetItemPaymentRules_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_SetItemPaymentRules_Request::SetCachedSize(int) const
 T CWorkshop_SetItemPaymentRules_Request::~CWorkshop_SetItemPaymentRules_Request()
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::ByteSize() const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::Clear()
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::GetCachedSize() const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::GetMetadata() const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::IsInitialized() const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergeFrom(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule const&)
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::New() const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SetCachedSize(int) const
 T CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule()
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::ByteSize() const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::Clear()
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::GetCachedSize() const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::GetMetadata() const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::IsInitialized() const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergeFrom(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule const&)
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::New() const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SetCachedSize(int) const
 T CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule()
 T CWorkshop_SetItemPaymentRules_Response::ByteSize() const
 T CWorkshop_SetItemPaymentRules_Response::Clear()
 T CWorkshop_SetItemPaymentRules_Response::GetCachedSize() const
 T CWorkshop_SetItemPaymentRules_Response::GetMetadata() const
 T CWorkshop_SetItemPaymentRules_Response::IsInitialized() const
 T CWorkshop_SetItemPaymentRules_Response::MergeFrom(CWorkshop_SetItemPaymentRules_Response const&)
 T CWorkshop_SetItemPaymentRules_Response::New() const
 T CWorkshop_SetItemPaymentRules_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CWorkshop_SetItemPaymentRules_Response::SetCachedSize(int) const
 T CWorkshop_SetItemPaymentRules_Response::~CWorkshop_SetItemPaymentRules_Response()
 T CWorld::CWorld()
 T CWorld::DecalTrace(CGameTrace*, char const*)
 T CWorld::GetDataDescMap()
 T CWorld::GetDisplayTitle() const
 T CWorld::GetServerClass()
 T CWorld::KeyValue(char const*, char const*)
 T CWorld::Precache()
 T CWorld::RequiredEdictIndex()
 T CWorld::SetDisplayTitle(bool)
 T CWorld::SetTimeOfDay(int)
 T CWorld::Spawn()
 T CWorld::UpdateOnRemove()
 T CWorld::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CWorld::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CWorld::YouForgotToImplementOrDeclareServerClass()
 T CWorld::~CWorld()
 T CWorldItem::GetDataDescMap()
 T CWorldItem::KeyValue(char const*, char const*)
 T CWorldItem::Spawn()
 T CWorldItem::~CWorldItem()
 T CWreckage::GetDataDescMap()
 T CWreckage::Precache()
 T CWreckage::Spawn()
 T CWreckage::Think()
 T CWreckage::~CWreckage()
 T C_CSM_Server_Status(CCommand const&)
 T Calc3WayBlendIndices(int, int, float, float, mstudioseqdesc_t const&, int*, float*)
 T CalcAnimation(CStudioHdr const*, Vector*, Quaternion*, mstudioseqdesc_t&, int, int, float, int)
 T CalcBoneAdj(CStudioHdr const*, Vector*, Quaternion*, float const*, int)
 T CalcBoneDerivatives(Vector&, Vector&, matrix3x4_t const&, matrix3x4_t const&, float)
 T CalcBonePosition(int, float, Vector const&, Vector const&, mstudio_rle_anim_t const*, Vector&)
 T CalcBoneQuaternion(int, float, Quaternion const&, RadianEuler const&, Vector const&, int, Quaternion const&, mstudio_rle_anim_t const*, Quaternion&)
 T CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
 T CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
 T CalcDecompressedAnimation(mstudiocompressedikerror_t const*, int, float, Vector&, Quaternion&)
 T CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 T CalcPoseSingle(CStudioHdr const*, Vector*, QuaternionAligned*, mstudioseqdesc_t&, int, float, float const*, int, float)
 T CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
 T CalculateBulletDamageForce(CTakeDamageInfo*, int, Vector const&, Vector const&, float)
 T CalculateDefaultPhysicsDamage(int, gamevcollisionevent_t*, float, bool, int&, string_t, bool)
 T CalculateExplosiveDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T CalculateMeleeDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T CalculateObjectStress(IPhysicsObject*, CBaseEntity*, vphysics_objectstress_t*)
 T CalculatePhysicsImpactDamage(int, gamevcollisionevent_t*, impactdamagetable_t const&, float, bool, int&, bool)
 T CanEmitCaption(unsigned int)
 T CanOverrideEnvZoomOwner(CBaseEntity*)
 T CanPlayerHear(CBasePlayer*, CBasePlayer*, bool, bool)
 T CanPlayerSeeTargetEntityFunctor::operator()(CBasePlayer*)
 T CaptionLookup_t::SetHash(char const*)
 T CaselessStringLessThan(char const* const&, char const* const&)
 T Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T CharacterSetBuild(characterset_t*, char const*)
 T CheckForClimbableSurface(Vector const&, Vector const&)
 T CheckImage::Paint()
 T CheckImage::~CheckImage()
 T CheckLookAt::operator()(CBasePlayer*)
 T ClassifyCorners(Vector*, Vector&, Vector&, Vector&, Vector&)
 T ClassifySniperSpot(HidingSpot*)
 T CleanupDMX(CDmxElement*)
 T ClearBounds(Vector&, Vector&)
 T ClearDebugHistory()
 T ClearModelSoundsCache()
 T ClearMultiDamage()
 T ClientActive(edict_t*, bool)
 T ClientCommand(CBasePlayer*, CCommand const&)
 T ClientData_Update(CBasePlayer*)
 T ClientFullyConnect(edict_t*)
 T ClientGamePrecache()
 T ClientGamePrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate::~ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate()
 T ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse::~ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse()
 T ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification::~ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification()
 T ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty::~ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty()
 T ClientJob_EMsgGCGiftedItems::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T ClientJob_EMsgGCGiftedItems::~ClientJob_EMsgGCGiftedItems()
 T ClientPrecache()
 T ClientPrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T ClientPrint(CBasePlayer*, int, char const*, char const*, char const*, char const*, char const*)
 T ClientPutInServer(edict_t*, char const*)
 T ClientPutInServerOverride(CBasePlayer* (*)(edict_t*, char const*))
 T ClientPutInServerOverride_Bot(edict_t*, char const*)
 T CloseZipU(HZIP__*)
 T Cmd_ShowtriggersToggle_f(CCommand const&)
 T CollectArriveFirstSpotsFunctor::operator()(CNavArea*)
 T CollectBots::operator()(CBasePlayer*)
 T CollectHidingSpotsFunctor::operator()(CNavArea*)
 T CollectRetreatSpotsFunctor::operator()(CNavArea*)
 T ColorCorrectionSystem()
 T ColumnButton::ApplySchemeSettings(vgui::IScheme*)
 T ColumnButton::OnMousePressed(ButtonCode_t)
 T ColumnButton::~ColumnButton()
 T ComboBox_Factory()
 T CommandListIssues()
 T CommandNavAddToSelectedSet()
 T CommandNavAnalyze()
 T CommandNavAnalyzeScripted(CCommand const&)
 T CommandNavAvoid()
 T CommandNavBeginArea()
 T CommandNavBeginDeselecting()
 T CommandNavBeginDragDeselecting()
 T CommandNavBeginDragSelecting()
 T CommandNavBeginSelecting()
 T CommandNavBeginShiftXY()
 T CommandNavBuildLadder()
 T CommandNavCenterInWorld()
 T CommandNavCheckFileConsistency()
 T CommandNavClearSelectedSet()
 T CommandNavClearWalkableMarks()
 T CommandNavCompressID()
 T CommandNavConnect()
 T CommandNavCornerSelect()
 T CommandNavCrouch()
 T CommandNavDelete()
 T CommandNavDeleteMarked()
 T CommandNavDisconnect()
 T CommandNavDontHide()
 T CommandNavEndArea()
 T CommandNavEndDeselecting()
 T CommandNavEndDragDeselecting()
 T CommandNavEndDragSelecting()
 T CommandNavEndSelecting()
 T CommandNavEndShiftXY()
 T CommandNavGenerate()
 T CommandNavGenerateIncremental()
 T CommandNavJump()
 T CommandNavLadderFlip()
 T CommandNavLoad()
 T CommandNavLowerDragVolumeMax()
 T CommandNavLowerDragVolumeMin()
 T CommandNavMakeSniperSpots()
 T CommandNavMark(CCommand const&)
 T CommandNavMarkUnnamed()
 T CommandNavMarkWalkable()
 T CommandNavMerge()
 T CommandNavNoHostages()
 T CommandNavNoJump()
 T CommandNavPlaceFloodFill()
 T CommandNavPlaceList()
 T CommandNavPlacePick()
 T CommandNavPlaceReplace(CCommand const&)
 T CommandNavPlaceSet()
 T CommandNavPrecise()
 T CommandNavRaiseDragVolumeMax()
 T CommandNavRaiseDragVolumeMin()
 T CommandNavRecallSelectedSet()
 T CommandNavRemoveFromSelectedSet()
 T CommandNavRemoveJumpAreas()
 T CommandNavRun()
 T CommandNavSave()
 T CommandNavSelectInvalidAreas()
 T CommandNavSetPlaceMode(CCommand const&)
 T CommandNavSplice()
 T CommandNavSplit()
 T CommandNavStand()
 T CommandNavStop()
 T CommandNavStoreSelectedSet()
 T CommandNavStrip()
 T CommandNavToggleDeselecting()
 T CommandNavToggleInSelectedSet()
 T CommandNavTogglePlaceMode()
 T CommandNavTogglePlacePainting()
 T CommandNavToggleSelectedSet()
 T CommandNavToggleSelecting()
 T CommandNavTransient()
 T CommandNavUnmark()
 T CommandNavUsePlace(CCommand const&)
 T CommandNavWalk()
 T CommandNavWarpToMark()
 T CommentarySystem_PePlayerRunCommand(CBasePlayer*, CUserCmd*)
 T Commentary_IsCommentaryEntity(CBaseEntity*)
 T ComputeRotSpeedToAlignAxes(Vector const&, Vector const&, Vector const&, float, float, float)
 T ComputeSeparatingPlane(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, cplane_t*)
 T ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T ConCommand::CanAutoComplete()
 T ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 T ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::Dispatch(CCommand const&)
 T ConCommand::IsCommand() const
 T ConCommand::~ConCommand()
 T ConCommandBase::AddFlags(int)
 T ConCommandBase::Create(char const*, char const*, int)
 T ConCommandBase::GetDLLIdentifier() const
 T ConCommandBase::GetFlags() const
 T ConCommandBase::GetHelpText() const
 T ConCommandBase::GetName() const
 T ConCommandBase::Init()
 T ConCommandBase::IsFlagSet(int) const
 T ConCommandBase::IsRegistered() const
 T ConCommandBase::RemoveFlags(int)
 T ConVar::AddFlags(int)
 T ConVar::ChangeStringValue(char const*, float)
 T ConVar::ClampValue(float&)
 T ConVar::ConVar(char const*, char const*, int)
 T ConVar::ConVar(char const*, char const*, int, char const*)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 T ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::GetBaseName() const
 T ConVar::GetDefault() const
 T ConVar::GetFlags() const
 T ConVar::GetFloat() const
 T ConVar::GetHelpText() const
 T ConVar::GetInt() const
 T ConVar::GetName() const
 T ConVar::GetSplitScreenPlayerSlot() const
 T ConVar::Init()
 T ConVar::InternalSetColorValue(Color)
 T ConVar::InternalSetFloatValue(float)
 T ConVar::InternalSetIntValue(int)
 T ConVar::InternalSetValue(char const*)
 T ConVar::IsCommand() const
 T ConVar::IsFlagSet(int) const
 T ConVar::IsRegistered() const
 T ConVar::Revert()
 T ConVar::SetValue(Color)
 T ConVar::SetValue(char const*)
 T ConVar::SetValue(float)
 T ConVar::SetValue(int)
 T ConVar::~ConVar()
 T ConVarRef::ConVarRef(IConVar*)
 T ConVarRef::ConVarRef(char const*)
 T ConVarRef::ConVarRef(char const*, bool)
 T ConVarRef::Init(char const*, bool)
 T ConVarRef::IsValid() const
 T ConVar_Register(int, IConCommandBaseAccessor*)
 T ConVar_Unregister()
 T ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
 T ConcatTransforms_Aligned(matrix3x4a_t const&, matrix3x4a_t const&, matrix3x4a_t&)
 T ConceptIDLessFunc(CUtlSymbol const&, CUtlSymbol const&)
 T ConceptStringLessFunc(string_t const&, string_t const&)
 T ConnectInterfaces(void* (**)(char const*, int*), int)
 T ConnectTier1Libraries(void* (**)(char const*, int*), int)
 T ConnectTier2Libraries(void* (**)(char const*, int*), int)
 T ConnectTier3Libraries(void* (**)(char const*, int*), int)
 T ConsoleFireTargets(CBasePlayer*, char const*)
 T ConsoleKillTarget(CBasePlayer*, char const*)
 T CopyStringAttributeValueToCharPointerOutput(CAttribute_String const*, char const**)
 T CopyUniqueId(UniqueId_t const&, UniqueId_t*)
 T CountdownTimer::NetworkStateChanged()
 T CountdownTimer::NetworkStateChanged(void*)
 T CountdownTimer::Now() const
 T CreateBoneFollowersFromRagdoll(CBaseAnimating*, CBoneFollowerManager*, vcollide_t*)
 T CreateEntitiesInTransitionList(CSaveRestoreData*, int)
 T CreateEntityByName(char const*, int, bool)
 T CreateEntityTransitionList(CSaveRestoreData*, int)
 T CreateGameRulesObject(char const*)
 T CreateHostageAnimState(CBaseAnimatingOverlay*, ICSPlayerAnimStateHelpers*, LegAnimType_t, bool)
 T CreateInfoCameraLink(CBaseEntity*, CPointCamera*)
 T CreateInterface
 T CreateJob_CGCClientJobServerUpdateVersion(GCSDK::CGCClient*, void*)
 T CreateJob_CGCClientJobServerWelcome(GCSDK::CGCClient*, void*)
 T CreateJob_CGCDev_NewItemRequestResponse(GCSDK::CGCClient*, void*)
 T CreateJob_CGCItemAcknowledged(GCSDK::CGCClient*, void*)
 T CreateJob_ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate(GCSDK::CGCClient*, void*)
 T CreateJob_ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse(GCSDK::CGCClient*, void*)
 T CreateJob_ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification(GCSDK::CGCClient*, void*)
 T CreateJob_ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty(GCSDK::CGCClient*, void*)
 T CreateJob_ClientJob_EMsgGCGiftedItems(GCSDK::CGCClient*, void*)
 T CreateKeepUpright(Vector const&, QAngle const&, CBaseEntity*, float, bool)
 T CreateNetworkStringTables_GameRules()
 T CreatePhysicsProp(char const*, Vector const&, Vector const&, IHandleEntity const*, bool, char const*)
 T CreatePlayerAnimState(CBaseAnimatingOverlay*, ICSPlayerAnimStateHelpers*, LegAnimType_t, bool)
 T CreateProp(char const*, Vector const&, char const*, int)
 T CreateRagGib(char const*, Vector const&, QAngle const&, Vector const&, float, bool)
 T CreateServerRagdoll(CBaseAnimating*, int, CTakeDamageInfo const&, int, bool)
 T CreateServerRagdollAttached(CBaseAnimating*, Vector const&, int, int, IPhysicsObject*, CBaseAnimating*, int, Vector const&, int, Vector const&)
 T CreateServerRagdollSubmodel(CBaseAnimating*, char const*, Vector const&, QAngle const&, int)
 T CreateServerStatue(CBaseAnimating*, int)
 T CreateStuckTable()
 T CreateUniqueId(UniqueId_t*)
 T CreateVGuiScreen(char const*, char const*, CBaseEntity*, CBaseEntity*, int)
 T CreateWeaponInfo()
 T Create_CvarToggleCheckButton()
 T CrossProduct(float const*, float const*, float*)
 T Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T DLCHelper::AppendDLCKeyValues(KeyValues*, char const*, char const*)
 T DMXAlloc(unsigned long)
 T DebugConnectMsg(int, int, char const*, ...)
 T DebugConstraint(CBaseEntity*)
 T DebugDrawContactPoints(IPhysicsObject*)
 T DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T DecommitDMXMemory()
 T DedicatedServerUGCFileInfo_t::BuildFromKV(KeyValues*)
 T DedicatedServerWorkshop()
 T DefaultCompletionFunc(char const*, char (*) [64])
 T DefaultConditionalErrorProc(char const*)
 T DefaultConditionalSymbolProc(char const*)
 T DefuseBombState::GetName() const
 T DefuseBombState::OnEnter(CCSBot*)
 T DefuseBombState::OnExit(CCSBot*)
 T DefuseBombState::OnUpdate(CCSBot*)
 T DeleteAll(AI_Waypoint_t*)
 T DeltaV(float, float, float)
 T DestroyVGuiScreen(CVGuiScreen*)
 T DetachAttachedRagdollsForEntity(CBaseEntity*)
 T DetailedSearchStatistic::ByteSize() const
 T DetailedSearchStatistic::Clear()
 T DetailedSearchStatistic::GetCachedSize() const
 T DetailedSearchStatistic::GetMetadata() const
 T DetailedSearchStatistic::IsInitialized() const
 T DetailedSearchStatistic::MergeFrom(DetailedSearchStatistic const&)
 T DetailedSearchStatistic::New() const
 T DetailedSearchStatistic::SerializeWithCachedSizesToArray(unsigned char*) const
 T DetailedSearchStatistic::SetCachedSize(int) const
 T DetailedSearchStatistic::~DetailedSearchStatistic()
 T DevMsg(CAI_BaseNPC*, char const*, ...)
 T DevMsg(CAI_BaseNPC*, unsigned int, char const*, ...)
 T DisableNoClip(CBasePlayer*)
 T DisconnectInterfaces()
 T DisconnectTier1Libraries()
 T DisconnectTier2Libraries()
 T DisconnectTier3Libraries()
 T DispatchEffect(IRecipientFilter&, float, char const*, CEffectData const&)
 T DispatchEffect(char const*, CEffectData const&)
 T DispatchParticleEffect(char const*, ParticleAttachment_t, CBaseEntity*, int, bool, int, IRecipientFilter*, bool)
 T DispatchParticleEffect(char const*, Vector, QAngle, CBaseEntity*, int, IRecipientFilter*)
 T DispatchParticleEffect(char const*, Vector, Vector, QAngle, CBaseEntity*, int, IRecipientFilter*)
 T DispatchSpawn(CBaseEntity*, bool)
 T DisplayGameModeConvars()
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)
 T DoIncludeScript(char const*, HSCRIPT__*)
 T DoSpark(CBaseEntity*, Vector const&, int, int, bool, Vector const&)
 T DoorUnlockedFilter(CBaseEntity*, CBasePlayer*)
 T Dragger::Dragger(int)
 T Dragger::OnCursorMoved(int, int)
 T Dragger::OnMouseDoublePressed(ButtonCode_t)
 T Dragger::OnMousePressed(ButtonCode_t)
 T Dragger::OnMouseReleased(ButtonCode_t)
 T Dragger::SetMovable(bool)
 T Dragger::~Dragger()
 T DrawAllDebugOverlays()
 T DrawBattlefront()
 T DrawMessageEntities()
 T DrawOccupyTime()
 T DrawSphere(Vector const&, float, int, int, int, float)
 T DrawTravelTime::operator()(CBasePlayer*)
 T DropToGround(CBaseEntity*, Vector const&, Vector const&, Vector const&)
 T DumpEntity(CBaseEntity*)
 T DumpEntityFactories_f()
 T DumpScriptScope(CBasePlayer*, char const*)
 T DustTrail::DustTrail()
 T DustTrail::GetDataDescMap()
 T DustTrail::GetServerClass()
 T DustTrail::KeyValue(char const*, char const*)
 T DustTrail::YouForgotToImplementOrDeclareServerClass()
 T DustTrail::~DustTrail()
 T EGCSystemMsg_descriptor()
 T EconEntity_OnOwnerKillEaterEvent(CEconEntity*, CCSPlayer*, CCSPlayer*, kill_eater_event_t, int)
 T EconRarity_CombinedItemAndPaintRarity(int, int)
 T EditNav_PrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T Editor_BeginSession(char const*, int, bool)
 T Editor_CheckVersion(char const*, int, bool)
 T Editor_CreateNode(char const*, int, float, float, float, bool)
 T Editor_CreateNodeLink(int, int, bool)
 T Editor_DeleteNode(int, bool)
 T Editor_DeleteNodeLink(int, int, bool)
 T Editor_RotateEntity(char const*, float, float, float, QAngle const&, bool)
 T Editor_SetKeyValue(char const*, float, float, float, char const*, char const*, bool)
 T EffectsPrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T EmitSound_t::EmitSound_t(CSoundParameters const&)
 T EnableNoClip(CBasePlayer*)
 T EndDMXContext(bool)
 T EndRestoreEntities()
 T EnsureDirectory(char const*, char const*)
 T EntityFactoryDictionary()
 T EntityMatrix::InitFromEntity(CBaseEntity*, int)
 T EntityMatrix::InitFromEntityLocal(CBaseEntity*)
 T EntityMessageBegin(CBaseEntity*, bool)
 T EntityNamesMatchCStrings(char const*, char const*)
 T EntityParticleTrailInfo_t::EntityParticleTrailInfo_t()
 T EntityParticleTrailInfo_t::NetworkStateChanged()
 T EntityParticleTrailInfo_t::NetworkStateChanged(void*)
 T EntityPhysics_CreateSolver(CBaseEntity*, CBaseEntity*, bool, float)
 T EntityTouch_Add(CBaseEntity*)
 T EntityTouch_Remove(CBaseEntity*)
 T EscapeFromBombState::GetName() const
 T EscapeFromBombState::OnEnter(CCSBot*)
 T EscapeFromBombState::OnExit(CCSBot*)
 T EscapeFromBombState::OnUpdate(CCSBot*)
 T EscapeFromFlamesState::FindNearestNonDamagingArea(CCSBot*) const
 T EscapeFromFlamesState::GetName() const
 T EscapeFromFlamesState::OnEnter(CCSBot*)
 T EscapeFromFlamesState::OnExit(CCSBot*)
 T EscapeFromFlamesState::OnUpdate(CCSBot*)
 T EventGroup::EventGroup(EventGroup const&)
 T EventGroup::operator=(EventGroup const&)
 T EventList_AddEventEntry(char const*, int, bool, int)
 T EventList_Free()
 T EventList_GetEventType(int)
 T EventList_IndexForName(char const*)
 T EventList_Init()
 T EventList_NameForIndex(int)
 T EventList_RegisterPrivateEvent(char const*)
 T EventList_RegisterSharedEvents()
 T ExplosionCreate(Vector const&, QAngle const&, CBaseEntity*, int, int, bool, float, bool, bool, int)
 T ExplosionCreate(Vector const&, QAngle const&, CBaseEntity*, int, int, int, float, CBaseEntity*, int, CHandle<CBaseEntity> const*, Class_T)
 T ExtractAnimValue(int, mstudioanimvalue_t*, float, float&, float&)
 T ExtractBbox(CStudioHdr*, int, Vector&, Vector&)
 T ExtractKeyvalue(void*, typedescription_t*, int, char const*, char*, int)
 T ExtractSingleFrame(unsigned char, unsigned char*, unsigned char*&, Quaternion&, Vector&, bool, mstudiolinearbone_t const*, int)
 T ExtractTwoFrames(unsigned char, float, unsigned char*, unsigned char*&, int, Quaternion&, Vector&, bool, mstudiolinearbone_t const*, int)
 T FBoxVisible(CBaseEntity*, CBaseEntity*, Vector&, float)
 T FFEVAL_ACCURACY(CCSPlayer*)
 T FFEVAL_ALWAYS_TRUE(int&, int&, int&, int&)
 T FFEVAL_BEST_COUNTERTERRORIST_ACCURACY(int&, int&, int&, int&)
 T FFEVAL_BEST_TERRORIST_ACCURACY(int&, int&, int&, int&)
 T FFEVAL_BOMB_CARRIERS(CCSPlayer*)
 T FFEVAL_BOMB_PLANTED_BEFORE_KILL(int&, int&, int&, int&)
 T FFEVAL_CT_ACCURACY(int&, int&, int&, int&)
 T FFEVAL_CT_WIN_NO_CASUALTIES(int&, int&, int&, int&)
 T FFEVAL_CT_WIN_NO_KILLS(int&, int&, int&, int&)
 T FFEVAL_CT_WIN_TIME(int&, int&, int&, int&)
 T FFEVAL_DAMAGE_MULTIPLE_ENEMIES(CCSPlayer*)
 T FFEVAL_DAMAGE_NO_KILLS(CCSPlayer*)
 T FFEVAL_DEFAULT_WEAPON(CCSPlayer*)
 T FFEVAL_DEFUSED_WITH_DROPPED_KIT(CCSPlayer*)
 T FFEVAL_DEFUSE_WAS_CLOSE_CALL_HUNDREDTHS(int&, int&, int&, int&)
 T FFEVAL_DEFUSE_WAS_CLOSE_CALL_TENTHS(int&, int&, int&, int&)
 T FFEVAL_DEFUSE_WAS_CLOSE_CALL_THOUSANDTHS(int&, int&, int&, int&)
 T FFEVAL_EMPTY_GUNS(CCSPlayer*)
 T FFEVAL_FAILED_BOMB_PLANTS(int&, int&, int&, int&)
 T FFEVAL_FIRST_BLOOD(int&, int&, int&, int&)
 T FFEVAL_FIRST_KILL(int&, int&, int&, int&)
 T FFEVAL_KILLED_DEFUSER(CCSPlayer*)
 T FFEVAL_KILLED_PERCENT_OF_ENEMIES(CCSPlayer*)
 T FFEVAL_KILLED_RESCUER(CCSPlayer*)
 T FFEVAL_KILLS_SINGLE_GRENADE(CCSPlayer*)
 T FFEVAL_KILL_STREAK_BEFORE_DYING(CCSPlayer*)
 T FFEVAL_KNIFE_BOMB_PLANTER(CCSPlayer*)
 T FFEVAL_KNIFE_IN_GUNFIGHT(CCSPlayer*)
 T FFEVAL_KNIFE_LEVEL_REACHED(int&, int&, int&, int&)
 T FFEVAL_KNIFE_WITHOUT_AMMO(CCSPlayer*)
 T FFEVAL_MAX_NUM_RESPAWNS(CCSPlayer*)
 T FFEVAL_MOLOTOV_BURNS(CCSPlayer*)
 T FFEVAL_MOST_BOTS_ASSUMED(CCSPlayer*)
 T FFEVAL_MOST_CONCURRENT_DOMINATIONS(CCSPlayer*)
 T FFEVAL_MULTIPLE_ATTACKER_COUNT(CCSPlayer*)
 T FFEVAL_PICKUP_BOMB(int&, int&, int&, int&)
 T FFEVAL_PULLED_TRIGGER(CCSPlayer*)
 T FFEVAL_QUARTER_HEALTH(CCSPlayer*)
 T FFEVAL_ROUNDS_WITHOUT_DYING(CCSPlayer*)
 T FFEVAL_SHORT_ROUND(int&, int&, int&, int&)
 T FFEVAL_STEPS_TAKEN(CCSPlayer*)
 T FFEVAL_SURVIVAL_TIME(CCSPlayer*)
 T FFEVAL_TER_WIN_TIME(int&, int&, int&, int&)
 T FFEVAL_TICKING_TIME(int&, int&, int&, int&)
 T FFEVAL_T_ACCURACY(int&, int&, int&, int&)
 T FFEVAL_T_WIN_NO_CASUALTIES(int&, int&, int&, int&)
 T FFEVAL_T_WIN_NO_KILLS(int&, int&, int&, int&)
 T FFEVAL_USED_ALL_AMMO(CCSPlayer*)
 T FFEVAL_USED_MULTIPLE_WEAPONS(CCSPlayer*)
 T FFEVAL_WON_AS_LAST_MEMBER(int&, int&, int&, int&)
 T FOVClearOfFriends::operator()(CBasePlayer*)
 T FX_FireBullets(int, unsigned short, Vector const&, QAngle const&, CSWeaponID, int, int, float, float, float, float, WeaponSound_t)
 T FX_PlantBomb(int, Vector const&, PlantBombOption_t)
 T FactoryList_Retrieve(factorylist_t&)
 T FactoryList_Store(factorylist_t const&)
 T FarthestHostage::operator()(CHostage*)
 T FetchBombState::GetName() const
 T FetchBombState::OnEnter(CCSBot*)
 T FetchBombState::OnUpdate(CCSBot*)
 T FileWeaponInfo_t::FileWeaponInfo_t()
 T FileWeaponInfo_t::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const
 T FileWeaponInfo_t::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const
 T FileWeaponInfo_t::GetIndexofAttribute(string_t) const
 T FileWeaponInfo_t::GetPrimaryAmmo(CEconItemView const*) const
 T FileWeaponInfo_t::GetPrimaryAmmoType(CEconItemView const*) const
 T FileWeaponInfo_t::GetPrimaryClipSize(CEconItemView const*, int, float) const
 T FileWeaponInfo_t::GetSecondaryClipSize(CEconItemView const*, int, float) const
 T FileWeaponInfo_t::GetViewModel(CEconItemView const*, int) const
 T FileWeaponInfo_t::GetWorldModel(CEconItemView const*, int) const
 T FileWeaponInfo_t::Parse(KeyValues*, char const*)
 T FileWeaponInfo_t::RefreshDynamicParameters()
 T FileWeaponInfo_t::~FileWeaponInfo_t()
 T FilterDamageType::GetDataDescMap()
 T FilterDamageType::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T FilterDamageType::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T FilterDamageType::~FilterDamageType()
 T FilterTeam::GetDataDescMap()
 T FilterTeam::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T FilterTeam::~FilterTeam()
 T FindBodygroupByName(CStudioHdr*, char const*)
 T FindEmptySpace(CBaseEntity*, unsigned int, Vector const&, Vector const&, Vector const&, Vector*)
 T FindGroundZFromPoint(Vector const&, Vector const&)
 T FindHitboxSetByName(CStudioHdr*, char const*)
 T FindHullIntersection(Vector const&, CGameTrace&, Vector const&, Vector const&, CBaseEntity*)
 T FindInList(char const**, char const*)
 T FindInitialEncounterSpot(CBaseEntity*, Vector const&, float, float, bool)
 T FindMaxContact(IPhysicsObject*, float, IPhysicsObject**, Vector*, Vector*)
 T FindNearbyHidingSpot(CBaseEntity*, Vector const&, float, bool, bool)
 T FindNearbyRetreatSpot(CCSBot*, float)
 T FindOrAddPanelAnimationMap(char const*)
 T FindPhysicsAnchor(string_t, hl_constraint_info_t&, int, CBaseEntity*)
 T FindPhysicsObjectByName(char const*, CBaseEntity*)
 T FindPlayerFromAccountID(unsigned int)
 T FindPooledString(char const*)
 T FindRandomHidingSpot(CBaseEntity*, unsigned int, bool)
 T FindTransitionSequence(CStudioHdr*, int, int, int*)
 T FinishClientPutInServer(CCSPlayer*)
 T FirePerfStatsEvent(PerfStatsEventEnum_t, int, int)
 T FireSystem_AddHeatInRadius(Vector const&, float, float)
 T FireTargets(char const*, CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T FixPlayerCrouchStuck(CBasePlayer*)
 T FixupAngles(QAngle&)
 T FogSystem()
 T FollowState::ComputeLeaderMotionState(float)
 T FollowState::GetName() const
 T FollowState::OnEnter(CCSBot*)
 T FollowState::OnExit(CCSBot*)
 T FollowState::OnUpdate(CCSBot*)
 T FollowTargetCollector::FollowTargetCollector(CBasePlayer*)
 T FormatZipMessageU(unsigned int, char*, unsigned int)
 T FoundryHelpers_ClearEntityHighlightEffects()
 T FreeContainingEntity(edict_t*)
 T GCCStrikeWelcomeMessageReceived(CMsgCStrike15Welcome const&)
 T GCClientSystem()
 T GCSDK::CGCClient::AddSOCacheListener(GCSDK::ISharedObjectListener*)
 T GCSDK::CGCClient::BInit(unsigned int, ISteamClient*, int, int)
 T GCSDK::CGCClient::BMainLoop(unsigned long long, unsigned long long)
 T GCSDK::CGCClient::BSendMessage(GCSDK::CProtoBufMsgBase const&)
 T GCSDK::CGCClient::CGCClient(bool)
 T GCSDK::CGCClient::DispatchPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCClient::DispatchSOCacheSubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T GCSDK::CGCClient::DispatchSOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T GCSDK::CGCClient::DispatchSODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T GCSDK::CGCClient::DispatchSOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T GCSDK::CGCClient::FindSOCache(GCSDK::SOID_t, bool)
 T GCSDK::CGCClient::NotifyResubscribedUpToDate(GCSDK::SOID_t)
 T GCSDK::CGCClient::NotifySOCacheUnsubscribed(GCSDK::SOID_t)
 T GCSDK::CGCClient::OnGCMessageAvailable(GCMessageAvailable_t*)
 T GCSDK::CGCClient::OnSteamServerConnectFailure(SteamServerConnectFailure_t*)
 T GCSDK::CGCClient::OnSteamServersConnected(SteamServersConnected_t*)
 T GCSDK::CGCClient::OnSteamServersDisconnected(SteamServersDisconnected_t*)
 T GCSDK::CGCClient::ProcessCacheSubscriptionCheckMsg(CMsgSOCacheSubscriptionCheck const&)
 T GCSDK::CGCClient::ProcessSOCacheSubscribedMsg(CMsgSOCacheSubscribed const&)
 T GCSDK::CGCClient::ProcessWelcomeMsg(CMsgClientWelcome const&)
 T GCSDK::CGCClient::RemoveSOCacheListener(GCSDK::ISharedObjectListener*)
 T GCSDK::CGCClient::SendHello()
 T GCSDK::CGCClient::SetSimulateGCConnectionFailure(bool)
 T GCSDK::CGCClient::Test_AddEvent(CTestEvent*)
 T GCSDK::CGCClient::Test_CacheSubscribed(GCSDK::SOID_t)
 T GCSDK::CGCClient::Uninit()
 T GCSDK::CGCClient::~CGCClient()
 T GCSDK::CGCClientJob::BYieldingRunGCJob()
 T GCSDK::CGCClientJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCClientJob::BYieldingRunJob(void*)
 T GCSDK::CGCClientJob::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCClientJob::CHeartbeatsBeforeTimeout()
 T GCSDK::CGCClientSharedObjectCache::AllocateTypeCache(int) const
 T GCSDK::CGCClientSharedObjectCache::BCreateFromMsg(GCSDK::CGCClient&, int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::BDestroyFromMsg(GCSDK::CGCClient&, int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::BParseCacheSubscribedMsg(GCSDK::CGCClient&, CMsgSOCacheSubscribed const&)
 T GCSDK::CGCClientSharedObjectCache::BUpdateFromMsg(GCSDK::CGCClient&, int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::CGCClientSharedObjectCache(GCSDK::SOID_t)
 T GCSDK::CGCClientSharedObjectCache::GetOwner() const
 T GCSDK::CGCClientSharedObjectCache::NotifyCreated(GCSDK::ISharedObjectListener&)
 T GCSDK::CGCClientSharedObjectCache::~CGCClientSharedObjectCache()
 T GCSDK::CGCClientSharedObjectTypeCache::BCreateFromMsg(void const*, unsigned int, bool*)
 T GCSDK::CGCClientSharedObjectTypeCache::BCreateOrUpdateFromMsg(GCSDK::SOID_t, GCSDK::CGCClient&, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectTypeCache::BDestroyFromMsg(GCSDK::SOID_t, GCSDK::CGCClient&, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectTypeCache::BParseCacheSubscribedMsg(CMsgSOCacheSubscribed_SubscribedType const&, CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >&, CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >&, CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >&)
 T GCSDK::CGCClientSharedObjectTypeCache::RemoveAllObjects(CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >&)
 T GCSDK::CGCClientSharedObjectTypeCache::~CGCClientSharedObjectTypeCache()
 T GCSDK::CGCEmitGroup::Internal_Msg(char const*, ...) const
 T GCSDK::CGCEmitGroup::Internal_Warning(char const*, ...) const
 T GCSDK::CGCSOCacheSubscribedJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheSubscribedJob::~CGCSOCacheSubscribedJob()
 T GCSDK::CGCSOCacheSubscriptionCheck::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheSubscriptionCheck::~CGCSOCacheSubscriptionCheck()
 T GCSDK::CGCSOCacheUnsubscribedJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheUnsubscribedJob::~CGCSOCacheUnsubscribedJob()
 T GCSDK::CGCSOCreateJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCreateJob::~CGCSOCreateJob()
 T GCSDK::CGCSODestroyJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSODestroyJob::~CGCSODestroyJob()
 T GCSDK::CGCSOUpdateJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOUpdateJob::~CGCSOUpdateJob()
 T GCSDK::CGCSOUpdateMultipleJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOUpdateMultipleJob::~CGCSOUpdateMultipleJob()
 T GCSDK::CJob::AddPacketToList(GCSDK::IMsgNetPacket*, unsigned long long)
 T GCSDK::CJob::BRunProxy(void*)
 T GCSDK::CJob::BYieldingRunJob(void*)
 T GCSDK::CJob::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T GCSDK::CJob::BYieldingWaitOneFrame()
 T GCSDK::CJob::CHeartbeatsBeforeTimeout()
 T GCSDK::CJob::CJob(GCSDK::CJobMgr&, char const*)
 T GCSDK::CJob::Continue()
 T GCSDK::CJob::EndPause(GCSDK::EJobPauseReason)
 T GCSDK::CJob::GetName() const
 T GCSDK::CJob::GetPauseReasonDescription() const
 T GCSDK::CJob::Heartbeat()
 T GCSDK::CJob::InitCoroutine()
 T GCSDK::CJob::PassLockToJob(GCSDK::CJob*, GCSDK::CLock*)
 T GCSDK::CJob::Pause(GCSDK::EJobPauseReason, char const*)
 T GCSDK::CJob::StartJobFromNetworkMsg(GCSDK::IMsgNetPacket*, unsigned long long const&, unsigned int)
 T GCSDK::CJob::UnsetLock(GCSDK::CLock*)
 T GCSDK::CJob::_ReleaseLock(GCSDK::CLock*, bool, char const*, int)
 T GCSDK::CJob::~CJob()
 T GCSDK::CJobMgr::AccumulateStatsofJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::BFrameFuncRunSleepingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BFrameFuncRunYieldingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BLaunchJobFromNetworkMsg(void*, GCSDK::JobMsgInfo_t const&, GCSDK::IMsgNetPacket*, GCSDK::EGCMsgContext)
 T GCSDK::CJobMgr::BResumeSleepingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BResumeYieldingJobsFromList(CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >&, unsigned int, CLimitTimer&)
 T GCSDK::CJobMgr::BRouteMsgToJob(void*, GCSDK::IMsgNetPacket*, GCSDK::JobMsgInfo_t const&, GCSDK::EGCMsgContext)
 T GCSDK::CJobMgr::BYieldingWaitTime(GCSDK::CJob&, unsigned int)
 T GCSDK::CJobMgr::CJobMgr()
 T GCSDK::CJobMgr::CheckForJobTimeouts(CLimitTimer&)
 T GCSDK::CJobMgr::GetJobInfoForMsg(GCSDK::IMsgNetPacket*) const
 T GCSDK::CJobMgr::GetNewJobID()
 T GCSDK::CJobMgr::InsertJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::JobSleepingLessFunc(GCSDK::CJobMgr::JobSleeping_t const&, GCSDK::CJobMgr::JobSleeping_t const&)
 T GCSDK::CJobMgr::PassMsgToJob(GCSDK::CJob&, GCSDK::IMsgNetPacket*, GCSDK::JobMsgInfo_t const&)
 T GCSDK::CJobMgr::PauseJob(GCSDK::CJob&, GCSDK::EJobPauseReason, char const*)
 T GCSDK::CJobMgr::RecordOrphanedMessage(unsigned int, unsigned long long)
 T GCSDK::CJobMgr::RegisterJobType(GCSDK::JobType_t const*)
 T GCSDK::CJobMgr::RemoveJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::SetThreadPoolSize(unsigned int)
 T GCSDK::CJobMgr::TimeoutJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::WakeupLockedJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::~CJobMgr()
 T GCSDK::CJobTime::CJobTime()
 T GCSDK::CJobTime::CServerMicroSecsPassed() const
 T GCSDK::CJobTime::SetFromJobTime(long long)
 T GCSDK::CJobTime::SetToJobTime()
 T GCSDK::CJobTime::UpdateJobTime(int)
 T GCSDK::CMessageList::GetMessage(unsigned int, char const**, int)
 T GCSDK::CMessageList::TallyReceiveMessage(unsigned int, unsigned int, unsigned int)
 T GCSDK::CMessageList::TallySendMessage(unsigned int, unsigned int, unsigned int)
 T GCSDK::CMessageList::~CMessageList()
 T GCSDK::CNetPacket::AddRef()
 T GCSDK::CNetPacket::CNetPacket()
 T GCSDK::CNetPacket::Init(unsigned int, void const*)
 T GCSDK::CNetPacket::Release()
 T GCSDK::CProtoBufGCClientSendHandler::BAsyncSend(unsigned int, unsigned char const*, unsigned int)
 T GCSDK::CProtoBufMsg<CMsgClientHello>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgClientHello>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgClientHello>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgClientHello>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgClientWelcome>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgClientWelcome>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgClientWelcome>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgConnectionStatus>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgConnectionStatus>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgConnectionStatus>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_Server2GCClientValidate>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCGiftedItems>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCGiftedItems>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCGiftedItems>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgGCServerVersionUpdated>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgIncrementKillCountAttribute>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgItemAcknowledged>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgItemAcknowledged>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgItemAcknowledged>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::AllocProto()
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetGenericBody() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsgBase::BAsyncSend(GCSDK::CProtoBufMsgBase::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsgBase::CProtoBufMsgBase()
 T GCSDK::CProtoBufMsgBase::CProtoBufMsgBase(unsigned int)
 T GCSDK::CProtoBufMsgBase::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsgBase::~CProtoBufMsgBase()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientHello>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgClientWelcome>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConnectionStatus>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_Server2GCClientValidate>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCGiftedItems>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgGCServerVersionUpdated>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgIncrementKillCountAttribute>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgItemAcknowledged>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::InternalAlloc()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPoolBase::Alloc()
 T GCSDK::CProtoBufMsgMemoryPoolBase::CProtoBufMsgMemoryPoolBase(unsigned int, unsigned int)
 T GCSDK::CProtoBufMsgMemoryPoolBase::~CProtoBufMsgMemoryPoolBase()
 T GCSDK::CProtoBufMsgMemoryPoolMgr::CProtoBufMsgMemoryPoolMgr()
 T GCSDK::CProtoBufMsgMemoryPoolMgr::RegisterPool(GCSDK::CProtoBufMsgMemoryPoolBase*)
 T GCSDK::CProtoBufMsgMemoryPoolMgr::~CProtoBufMsgMemoryPoolMgr()
 T GCSDK::CProtoBufNetPacket::BHasTargetJobName() const
 T GCSDK::CProtoBufNetPacket::CProtoBufNetPacket(GCSDK::CNetPacket*, GCProtoBufMsgSrc, CSteamID, unsigned int, unsigned int)
 T GCSDK::CProtoBufNetPacket::CubData() const
 T GCSDK::CProtoBufNetPacket::GetCNetPacket() const
 T GCSDK::CProtoBufNetPacket::GetEMsg() const
 T GCSDK::CProtoBufNetPacket::GetEMsgFormatType() const
 T GCSDK::CProtoBufNetPacket::GetSourceAppID() const
 T GCSDK::CProtoBufNetPacket::GetSourceJobID() const
 T GCSDK::CProtoBufNetPacket::GetSteamID() const
 T GCSDK::CProtoBufNetPacket::GetTargetJobID() const
 T GCSDK::CProtoBufNetPacket::GetTargetJobName() const
 T GCSDK::CProtoBufNetPacket::PubData() const
 T GCSDK::CProtoBufNetPacket::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufNetPacket::SetSteamID(CSteamID)
 T GCSDK::CProtoBufNetPacket::SetTargetJobID(unsigned long long)
 T GCSDK::CProtoBufNetPacket::~CProtoBufNetPacket()
 T GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>::GetPObject()
 T GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>::GetTypeID() const
 T GCSDK::CProtoBufSharedObject<CSOEconDefaultEquippedDefinitionInstanceClient, 43>::~CProtoBufSharedObject()
 T GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>::GetPObject()
 T GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>::GetTypeID() const
 T GCSDK::CProtoBufSharedObject<CSOEconItemDropRateBonus, 38>::~CProtoBufSharedObject()
 T GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>::GetPObject()
 T GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>::GetTypeID() const
 T GCSDK::CProtoBufSharedObject<CSOEconItemEventTicket, 40>::~CProtoBufSharedObject()
 T GCSDK::CProtoBufSharedObjectBase::BAddDestroyToMessage(std::string*) const
 T GCSDK::CProtoBufSharedObjectBase::BAddToMessage(std::string*) const
 T GCSDK::CProtoBufSharedObjectBase::BIsKeyLess(GCSDK::CSharedObject const&) const
 T GCSDK::CProtoBufSharedObjectBase::BParseFromMessage(CUtlBuffer const&)
 T GCSDK::CProtoBufSharedObjectBase::BParseFromMessage(std::string const&)
 T GCSDK::CProtoBufSharedObjectBase::BUpdateFromNetwork(GCSDK::CSharedObject const&)
 T GCSDK::CProtoBufSharedObjectBase::Copy(GCSDK::CSharedObject const&)
 T GCSDK::CProtoBufSharedObjectBase::Dump() const
 T GCSDK::CRefCount::DestroyThis()
 T GCSDK::CRefCount::~CRefCount()
 T GCSDK::CSharedObject* GCSDK::CreateSharedObjectSubclass<CEconDefaultEquippedDefinitionInstanceClient>()
 T GCSDK::CSharedObject* GCSDK::CreateSharedObjectSubclass<CEconItem>()
 T GCSDK::CSharedObject* GCSDK::CreateSharedObjectSubclass<CEconItemDropRateBonus>()
 T GCSDK::CSharedObject* GCSDK::CreateSharedObjectSubclass<CEconItemEventTicket>()
 T GCSDK::CSharedObject::BIsKeyEqual(GCSDK::CSharedObject const&) const
 T GCSDK::CSharedObject::Create(int)
 T GCSDK::CSharedObject::RegisterFactory(int, GCSDK::CSharedObject* (*)(), unsigned int, char const*, char const*, char const*, char const*)
 T GCSDK::CSharedObjectCache::AddObject(GCSDK::CSharedObject*)
 T GCSDK::CSharedObjectCache::AddObjectClean(GCSDK::CSharedObject*)
 T GCSDK::CSharedObjectCache::CSharedObjectCache()
 T GCSDK::CSharedObjectCache::CreateBaseTypeCache(int)
 T GCSDK::CSharedObjectCache::Dump() const
 T GCSDK::CSharedObjectCache::FindBaseTypeCache(int)
 T GCSDK::CSharedObjectCache::FindSharedObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectCache::MarkDirty()
 T GCSDK::CSharedObjectCache::RemoveAllObjectsWithoutDeleting()
 T GCSDK::CSharedObjectCache::RemoveObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectCache::~CSharedObjectCache()
 T GCSDK::CSharedObjectTypeCache::AddObject(GCSDK::CSharedObject*)
 T GCSDK::CSharedObjectTypeCache::AddObjectClean(GCSDK::CSharedObject*)
 T GCSDK::CSharedObjectTypeCache::CSharedObjectTypeCache(int)
 T GCSDK::CSharedObjectTypeCache::Dump() const
 T GCSDK::CSharedObjectTypeCache::EnsureCapacity(unsigned int)
 T GCSDK::CSharedObjectTypeCache::FindSharedObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectTypeCache::RemoveAllObjectsWithoutDeleting()
 T GCSDK::CSharedObjectTypeCache::RemoveObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectTypeCache::RemoveObjectByIndex(unsigned int)
 T GCSDK::CSharedObjectTypeCache::~CSharedObjectTypeCache()
 T GCSDK::CStructNetPacket::BHasTargetJobName() const
 T GCSDK::CStructNetPacket::CubData() const
 T GCSDK::CStructNetPacket::GetCNetPacket() const
 T GCSDK::CStructNetPacket::GetEMsg() const
 T GCSDK::CStructNetPacket::GetEMsgFormatType() const
 T GCSDK::CStructNetPacket::GetSourceAppID() const
 T GCSDK::CStructNetPacket::GetSourceJobID() const
 T GCSDK::CStructNetPacket::GetSteamID() const
 T GCSDK::CStructNetPacket::GetTargetJobID() const
 T GCSDK::CStructNetPacket::GetTargetJobName() const
 T GCSDK::CStructNetPacket::PubData() const
 T GCSDK::CStructNetPacket::SetSourceAppID(unsigned int)
 T GCSDK::CStructNetPacket::SetSteamID(CSteamID)
 T GCSDK::CStructNetPacket::SetTargetJobID(unsigned long long)
 T GCSDK::CStructNetPacket::~CStructNetPacket()
 T GCSDK::CWorkThreadPool::BDispatchCompletedWorkItems(CLimitTimer&, GCSDK::CJobMgr*)
 T GCSDK::CWorkThreadPool::BTryDeleteExitedWorkerThreads()
 T GCSDK::CWorkThreadPool::CWorkThreadPool(char const*)
 T GCSDK::CWorkThreadPool::OnWorkItemCompleted(GCSDK::CWorkItem*)
 T GCSDK::CWorkThreadPool::SetWorkThreadAutoConstruct(int, GCSDK::IWorkThreadFactory*)
 T GCSDK::CWorkThreadPool::StopWorkThreads()
 T GCSDK::CWorkThreadPool::~CWorkThreadPool()
 T GCSDK::CreateJob_CGCSOCacheSubscribedJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCacheSubscriptionCheck(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCacheUnsubscribedJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCreateJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSODestroyJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOUpdateJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOUpdateMultipleJob(GCSDK::CGCClient*, void*)
 T GCSDK::EGInternal_EmitInfo(GCSDK::CGCEmitGroup const&, int, int, char const*, ...)
 T GCSDK::EmitBaseMessageV(char const*, SpewType_t, int, int, char const*, char*)
 T GCSDK::EmitError(GCSDK::CGCEmitGroup const&, char const*, ...)
 T GCSDK::EmitWarning(GCSDK::CGCEmitGroup const&, int, char const*, ...)
 T GCSDK::GProtoBufMsgMemoryPoolMgr()
 T GCSDK::GetCchTempTextBuffer()
 T GCSDK::GetPchTempTextBuffer()
 T GCSDK::IMsgNetPacketFromCNetPacket(GCSDK::CNetPacket*)
 T GCSDK::PchMsgNameFromEMsg(unsigned int)
 T GCSDK::SOIDRender_t::CAutoRegisterName::CAutoRegisterName(unsigned short, char const*, bool)
 T GCSDK::SOIDRender_t::SOIDRender_t(GCSDK::SOID_t)
 T GCSDK::SOID_t::SOID_t(CMsgSOIDOwner const&)
 T GCSDK::SOID_t::ToMsgSOIDOwner(CMsgSOIDOwner*) const
 T GCSGCServerSystem()
 T GEconItemSchema()
 T Gain(float, float)
 T GameLogSystem()
 T GameServerPing::ByteSize() const
 T GameServerPing::Clear()
 T GameServerPing::GetCachedSize() const
 T GameServerPing::GetMetadata() const
 T GameServerPing::IsInitialized() const
 T GameServerPing::MergeFrom(GameServerPing const&)
 T GameServerPing::New() const
 T GameServerPing::SerializeWithCachedSizesToArray(unsigned char*) const
 T GameServerPing::SetCachedSize(int) const
 T GameServerPing::~GameServerPing()
 T GameStartFrame()
 T GameStringSystem()
 T GameTypes::AddMapKVs(KeyValues*, char const*)
 T GameTypes::ApplyConvarsForCurrentMode(bool)
 T GameTypes::ApplyConvarsForMap(char const*, bool)
 T GameTypes::CheckShouldSetDefaultGameModeAndType(char const*)
 T GameTypes::ClearServerMapGroupInfo()
 T GameTypes::CreateOrUpdateWorkshopMapGroup(char const*, CUtlStringList const&)
 T GameTypes::CreateWorkshopMapGroupInternal(char const*, CUtlStringList const&)
 T GameTypes::DisplayConvarsForCurrentMode()
 T GameTypes::GameMode::~GameMode()
 T GameTypes::GameType::~GameType()
 T GameTypes::GameTypes()
 T GameTypes::GetCTModelsForMap(char const*)
 T GameTypes::GetCTViewModelArmsForMap(char const*)
 T GameTypes::GetCurrentGameMode() const
 T GameTypes::GetCurrentGameModeNameID()
 T GameTypes::GetCurrentGameType() const
 T GameTypes::GetCurrentGameTypeNameID()
 T GameTypes::GetCurrentMapName()
 T GameTypes::GetCurrentServerNumSlots()
 T GameTypes::GetCurrentServerSettingInt(char const*, int)
 T GameTypes::GetCustomBotDifficulty()
 T GameTypes::GetDefaultGameModeForMap(char const*)
 T GameTypes::GetDefaultGameTypeForMap(char const*)
 T GameTypes::GetFirstMap(char const*)
 T GameTypes::GetGameModeAndTypeFromStrings(char const*, char const*, GameTypes::GameType*&, GameTypes::GameMode*&)
 T GameTypes::GetGameModeAndTypeIntsFromStrings(char const*, char const*, int&, int&)
 T GameTypes::GetGameModeAndTypeNameIdsFromStrings(char const*, char const*, char const*&, char const*&)
 T GameTypes::GetGameModeFromInt(int, int)
 T GameTypes::GetGameTypeAndModeFromAlias(char const*, int&, int&)
 T GameTypes::GetGameTypeFromInt(int)
 T GameTypes::GetGameTypeFromMode(char const*, char const*&)
 T GameTypes::GetHostageModelsForMap(char const*)
 T GameTypes::GetLoadingScreenDataIsCorrect()
 T GameTypes::GetMapGroupMapList(char const*)
 T GameTypes::GetMapGroup_Internal(char const*)
 T GameTypes::GetMapInfo(char const*, unsigned int&)
 T GameTypes::GetMap_Internal(char const*)
 T GameTypes::GetMaxPlayersForTypeAndMode(int, int)
 T GameTypes::GetNextMap(char const*, char const*)
 T GameTypes::GetNoResetVoteThresholdForCurrentModeCT()
 T GameTypes::GetNoResetVoteThresholdForCurrentModeT()
 T GameTypes::GetRandomMap(char const*)
 T GameTypes::GetRandomMapGroup(char const*, char const*)
 T GameTypes::GetRequiredAttrForMap(char const*)
 T GameTypes::GetRequiredAttrRewardForMap(char const*)
 T GameTypes::GetRequiredAttrValueForMap(char const*)
 T GameTypes::GetRewardDropListForMap(char const*)
 T GameTypes::GetRunMapWithDefaultGametype()
 T GameTypes::GetTModelsForMap(char const*)
 T GameTypes::GetTViewModelArmsForMap(char const*)
 T GameTypes::GetWeaponProgressionForCurrentModeCT()
 T GameTypes::GetWeaponProgressionForCurrentModeT()
 T GameTypes::InitMapSidecars(KeyValues*)
 T GameTypes::Initialize(bool)
 T GameTypes::IsInitialized() const
 T GameTypes::IsValidMapGroupForTypeAndMode(char const*, char const*, char const*)
 T GameTypes::IsValidMapGroupName(char const*)
 T GameTypes::IsValidMapInMapGroup(char const*, char const*)
 T GameTypes::IsWorkshopMapGroup(char const*)
 T GameTypes::LoadCustomBotDifficulties(KeyValues*)
 T GameTypes::LoadGameTypes(KeyValues*)
 T GameTypes::LoadMapEntry(KeyValues*)
 T GameTypes::LoadMapGroups(KeyValues*)
 T GameTypes::LoadMaps(KeyValues*)
 T GameTypes::LoadWeaponProgression(KeyValues*, CUtlVector<IGameTypes::WeaponProgression, CUtlMemory<IGameTypes::WeaponProgression, int> >&, char const*, char const*)
 T GameTypes::Map::Map()
 T GameTypes::Map::~Map()
 T GameTypes::SetAndParseExtendedServerInfo(KeyValues*)
 T GameTypes::SetCustomBotDifficulty(int)
 T GameTypes::SetGameTypeAndMode(char const*, char const*)
 T GameTypes::SetGameTypeAndMode(int, int)
 T GameTypes::SetLoadingScreenDataIsCorrect(bool)
 T GameTypes::SetRunMapWithDefaultGametype(bool)
 T GameTypes::~GameTypes()
 T Game_SetOneWayTransition()
 T GatherNonPVSSpottedEntitiesFunctor::GatherNonPVSSpottedEntitiesFunctor(CCSPlayer*)
 T GatherNonPVSSpottedEntitiesFunctor::operator()(CBaseEntity*)
 T GenerateWeaponRecoilPatternForItemDefinition(unsigned short)
 T GenericThreadLocals::CThreadLocal<int>::~CThreadLocal()
 T GenericThreadLocals::CThreadLocalInt<unsigned int>::~CThreadLocalInt()
 T GetAISaveRestoreBlockHandler()
 T GetAllChildren(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetAllInHierarchy(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetAmmoDef()
 T GetAnimationEvent(CStudioHdr*, int, animevent_t*, float, float, int)
 T GetAttachmentLocalSpace(CStudioHdr*, int, matrix3x4_t&)
 T GetAttribColorIndexForName(char const*)
 T GetAutoMultiplayerPhysicsMode(Vector, float)
 T GetBodygroupCount(CStudioHdr*, int)
 T GetBodygroupName(CStudioHdr*, int)
 T GetBotFollowCount(CCSPlayer*)
 T GetBreakableDamage(CTakeDamageInfo const&, IBreakableWithPropData*)
 T GetCSAmmoDef()
 T GetCSLevelIndex(char const*)
 T GetCStringCharConversion()
 T GetCaptionHash(char const*, bool, unsigned int&)
 T GetCommentarySaveRestoreBlockHandler()
 T GetConstraintAttachments(CBaseEntity*, CBaseEntity**, IPhysicsObject**)
 T GetCrosshairOrNamedEntities(CCommand const&, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetCurrentSkyCamera()
 T GetDeathPoseActivity(CBaseAnimating*, CTakeDamageInfo const&)
 T GetDefaultLightstyleString(int)
 T GetDefaultResponseSystemSaveRestoreBlockHandler()
 T GetDeveloperLevel()
 T GetEconItemFromStringTable(unsigned long long)
 T GetEffectIndex(char const*)
 T GetEntitySaveRestoreBlockHandler()
 T GetEventQueueSaveRestoreBlockHandler()
 T GetEyePosition(CStudioHdr*, Vector&)
 T GetFileWeaponInfoFromHandle(unsigned short)
 T GetFloorZ(Vector const&)
 T GetFloorZ(Vector const&, float)
 T GetGameDescription()
 T GetGlobalTeam(int)
 T GetHexColorForAttribColor(attrib_colors_t)
 T GetHidingSpotByID(unsigned int)
 T GetHintTypeDescription(CAI_Hint*)
 T GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
 T GetInvalidWeaponInfoHandle()
 T GetItemSchema()
 T GetKillEaterAttrPairCount()
 T GetKillEaterAttrPair_Score(int)
 T GetKillEaterAttrPair_Type(int)
 T GetLongFloorZ(Vector const&)
 T GetMPConceptIndexFromString(char const*)
 T GetMapIDFromMapPath(char const*)
 T GetMassEquivalent(float)
 T GetMaterialIndex(char const*)
 T GetMaterialNameFromIndex(int)
 T GetNextCommandEntity(CBasePlayer*, char const*, CBaseEntity*)
 T GetNoEscCharConversion()
 T GetNumBodyGroups(CStudioHdr*)
 T GetNumberOfTeams()
 T GetPanelAnimationDictionary()
 T GetParticleManifest(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T GetParticleManifest(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*)
 T GetParticleSystemIndex(char const*)
 T GetPhysObjSaveRestoreOps(PhysInterfaceId_t)
 T GetPhysSaveRestoreBlockHandler()
 T GetPlayerID(CCSPlayer*)
 T GetPointCameraList()
 T GetPushawayEnts(CBaseCombatCharacter*, CBaseEntity**, int, float, int, CPushAwayEnumerator*)
 T GetRandomSpotAtPlace(unsigned int, Vector*)
 T GetRecentNPCSpeech(recentNPCSpeech_t*)
 T GetSceneDuration(char const*)
 T GetSceneManager()
 T GetScriptInstanceHelper_CBaseAnimating()
 T GetScriptInstanceHelper_CBaseEntity()
 T GetScriptInstanceHelper_CBasePlayer()
 T GetSequenceActivity(CStudioHdr*, int, int*)
 T GetSequenceActivityName(CStudioHdr*, int)
 T GetSequenceFlags(CStudioHdr*, int)
 T GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)
 T GetSequenceName(CStudioHdr*, int)
 T GetSkyCameraList()
 T GetSoundSaveRestoreOps()
 T GetSpringAttachments(CBaseEntity*, CBaseEntity**, IPhysicsObject**)
 T GetSteamWorksGameStatsServer()
 T GetStickerAttributeDefHandle(int, EStickerAttributeType)
 T GetTeamAccuracy(int)
 T GetTeamName(int)
 T GetTemplateSaveRestoreBlockHandler()
 T GetTranslatedWeaponAlias(char const*)
 T GetVScriptSaveRestoreBlockHandler()
 T GetVoiceGameMgr()
 T GetWeaponInfo(CSWeaponID)
 T GetWeaponProficiencyName(WeaponProficiency_t)
 T GetWeaponSoundFromString(char const*)
 T GetWorldEntity()
 T GetWorldFogParams(CBaseCombatCharacter*, fogparams_t&)
 T GetZipItemA(HZIP__*, int, ZIPENTRY*)
 T GlobalEntity_Add(char const*, char const*, GLOBALESTATE)
 T GlobalEntity_AddToCounter(int, int)
 T GlobalEntity_EnableStateUpdates(bool)
 T GlobalEntity_GetCounter(int)
 T GlobalEntity_GetIndex(char const*)
 T GlobalEntity_GetMap(int)
 T GlobalEntity_GetName(int)
 T GlobalEntity_GetNumGlobals()
 T GlobalEntity_GetState(int)
 T GlobalEntity_SetCounter(int, int)
 T GlobalEntity_SetMap(int, string_t)
 T GlobalEntity_SetState(int, GLOBALESTATE)
 T GlobalStatistics::ByteSize() const
 T GlobalStatistics::Clear()
 T GlobalStatistics::GetCachedSize() const
 T GlobalStatistics::GetMetadata() const
 T GlobalStatistics::IsInitialized() const
 T GlobalStatistics::MergeFrom(GlobalStatistics const&)
 T GlobalStatistics::New() const
 T GlobalStatistics::SerializeWithCachedSizesToArray(unsigned char*) const
 T GlobalStatistics::SetCachedSize(int) const
 T GlobalStatistics::~GlobalStatistics()
 T GotoSequence(CStudioHdr*, int, float, float, int, int&, float&, int&)
 T GrenadeResponse::operator()(ActiveGrenade*) const
 T GuessDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T HLTVDirector()
 T HLTVDirectorSystem()
 T Hack_FixEscapeChars(char*)
 T HandleFoundryEntitySpawnRecords()
 T HandleRadioAliasCommands(CCSPlayer*, char const*)
 T Hash4(void const*)
 T Hash8(void const*)
 T HashInt(int)
 T HashString(char const*)
 T HashStringCaseless(char const*)
 T HashStringCaselessConventional(char const*)
 T Helper_FillServerReservationStateAndPlayers(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse&)
 T Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
 T Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
 T HideState::GetName() const
 T HideState::OnEnter(CCSBot*)
 T HideState::OnExit(CCSBot*)
 T HideState::OnUpdate(CCSBot*)
 T HidingSpot::HidingSpot()
 T HidingSpot::Load(CUtlBuffer&, unsigned int)
 T HidingSpot::PostLoad()
 T HidingSpot::Save(CUtlBuffer&, unsigned int) const
 T HidingSpot::~HidingSpot()
 T HintClear()
 T Host_Say(edict_t*, CCommand const&, bool)
 T HostagePathCost::operator()(CNavArea*, CNavArea*, CNavLadder const*, CFuncElevator const*, float)
 T HuntState::GetName() const
 T HuntState::OnEnter(CCSBot*)
 T HuntState::OnExit(CCSBot*)
 T HuntState::OnUpdate(CCSBot*)
 T IAI_BehaviorBridge::BehaviorBridge_AimGun()
 T IAI_BehaviorBridge::BehaviorBridge_BestEnemy()
 T IAI_BehaviorBridge::BehaviorBridge_CanFlinch()
 T IAI_BehaviorBridge::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T IAI_BehaviorBridge::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T IAI_BehaviorBridge::BehaviorBridge_GatherConditions()
 T IAI_BehaviorBridge::BehaviorBridge_GetDefaultNavGoalTolerance()
 T IAI_BehaviorBridge::BehaviorBridge_GetFlinchActivity(bool, bool)
 T IAI_BehaviorBridge::BehaviorBridge_GetJumpGravity() const
 T IAI_BehaviorBridge::BehaviorBridge_GetMaxTacticalLateralMovement()
 T IAI_BehaviorBridge::BehaviorBridge_GetReasonableFacingDist()
 T IAI_BehaviorBridge::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T IAI_BehaviorBridge::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T IAI_BehaviorBridge::BehaviorBridge_IsCrouchedActivity(Activity)
 T IAI_BehaviorBridge::BehaviorBridge_IsCrouching()
 T IAI_BehaviorBridge::BehaviorBridge_IsCurTaskContinuousMove()
 T IAI_BehaviorBridge::BehaviorBridge_IsInterruptable()
 T IAI_BehaviorBridge::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T IAI_BehaviorBridge::BehaviorBridge_IsNavigationUrgent()
 T IAI_BehaviorBridge::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T IAI_BehaviorBridge::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T IAI_BehaviorBridge::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T IAI_BehaviorBridge::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T IAI_BehaviorBridge::BehaviorBridge_NPC_TranslateActivity(Activity)
 T IAI_BehaviorBridge::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T IAI_BehaviorBridge::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_OnMovementComplete()
 T IAI_BehaviorBridge::BehaviorBridge_OnMovementFailed()
 T IAI_BehaviorBridge::BehaviorBridge_OnScheduleChange()
 T IAI_BehaviorBridge::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T IAI_BehaviorBridge::BehaviorBridge_PrescheduleThink()
 T IAI_BehaviorBridge::BehaviorBridge_QueryHearSound(CSound*)
 T IAI_BehaviorBridge::BehaviorBridge_SelectSchedule()
 T IAI_BehaviorBridge::BehaviorBridge_ShouldAlwaysThink()
 T IAI_BehaviorBridge::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T IAI_BehaviorBridge::BehaviorBridge_ShouldPlayerAvoid()
 T IAI_BehaviorBridge::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T IAI_BehaviorBridge::BehaviorBridge_TranslateSchedule(int)
 T IAI_BehaviorBridge::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T IBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T IBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T IBoneSetup::CalcBoneAdj(Vector*, Quaternion*, float const*)
 T IBoneSetup::IBoneSetup(CStudioHdr const*, int, float const*, IPoseDebugger*)
 T IBoneSetup::InitPose(Vector*, QuaternionAligned*)
 T IBoneSetup::~IBoneSetup()
 T IEconItemInterface::GetCustomPaintKitIndex() const
 T IEconItemInterface::GetCustomPaintKitSeed() const
 T IEconItemInterface::GetCustomPaintKitWear(float) const
 T IEconItemInterface::GetExpirationDate() const
 T IEconItemInterface::GetStickerAttributeBySlotIndexFloat(int, EStickerAttributeType, float) const
 T IEconItemInterface::GetStickerAttributeBySlotIndexInt(int, EStickerAttributeType, unsigned int) const
 T IEconItemInterface::GetTradableAfterDateTime() const
 T IEconItemInterface::GetUseAfterDateTime() const
 T IEconItemInterface::IsCommodity() const
 T IEconItemInterface::IsHiddenFromDropList() const
 T IEconItemInterface::IsMarketable() const
 T IEconItemInterface::IsPotentiallyTradable() const
 T IEconItemInterface::IsTradable() const
 T IEconItemInterface::IsUsableInCrafting() const
 T IEconItemUntypedAttributeIterator::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T IEconItemUntypedAttributeIterator::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 T IEconItemUntypedAttributeIterator::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 T IEconItemUntypedAttributeIterator::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 T IEconTool::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T IEconTool::CreateEconConsumable() const
 T IEconTool::IEconTool(char const*, char const*, char const*, item_capabilities_t, KeyValues*)
 T IEconTool::IsValid() const
 T IEconTool::RequiresToolEscrowPeriod() const
 T IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const
 T IEconTool::~IEconTool()
 T IEntityListener::OnEntityCreated(CBaseEntity*)
 T IEntityListener::OnEntityDeleted(CBaseEntity*)
 T IEntityListener::OnEntitySpawned(CBaseEntity*)
 T IGameStatTracker::CGameStatList<SMarketPurchases>::Clear()
 T IGameStatTracker::CGameStatList<SMarketPurchases>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SMarketPurchases>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SWeaponHitData>::Clear()
 T IGameStatTracker::CGameStatList<SWeaponHitData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SWeaponHitData>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SWeaponMissData>::Clear()
 T IGameStatTracker::CGameStatList<SWeaponMissData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SWeaponMissData>::SendData(KeyValues*)
 T IGameSystem::Add(IGameSystem*)
 T IGameSystem::FrameUpdatePostEntityThinkAllSystems()
 T IGameSystem::FrameUpdatePreEntityThinkAllSystems()
 T IGameSystem::InitAllSystems()
 T IGameSystem::LevelInitPostEntityAllSystems()
 T IGameSystem::LevelInitPreEntityAllSystems(char const*)
 T IGameSystem::LevelShutdownPostEntityAllSystems()
 T IGameSystem::LevelShutdownPreEntityAllSystems()
 T IGameSystem::MapName()
 T IGameSystem::OnRestoreAllSystems()
 T IGameSystem::OnSaveAllSystems()
 T IGameSystem::PostInitAllSystems()
 T IGameSystem::PreClientUpdateAllSystems()
 T IGameSystem::Remove(IGameSystem*)
 T IGameSystem::ShutdownAllSystems()
 T IGameSystem::~IGameSystem()
 T IGameSystemPerFrame::~IGameSystemPerFrame()
 T IInventoryUpdateListener::SOCacheSubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T IInventoryUpdateListener::SOCacheUnsubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T IInventoryUpdateListener::SOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T IInventoryUpdateListener::SODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T IInventoryUpdateListener::SOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T IKeyValuesDumpContextAsText::KvEndKey(KeyValues*, int)
 T IKeyValuesDumpContextAsText::KvWriteIndent(int)
 T IKeyValuesDumpContextAsText::KvWriteValue(KeyValues*, int)
 T IParticleSystemQuery::BeginDrawModels(int, Vector const&, CParticleCollection*)
 T IParticleSystemQuery::FinishDrawModels(CParticleCollection*)
 T IParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T IParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*, char const*)
 T IParticleSystemQuery::GetControllingObjectOBBox(CParticleCollection*, int, Vector, Vector)
 T IParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T IParticleSystemQuery::GetLocalPlayerPos()
 T IParticleSystemQuery::GetModel(char const*)
 T IParticleSystemQuery::GetRayTraceEnvironmentFromName(char const*)
 T IParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool)
 T IParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T IParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T IPlayerAnimState::ModifyTauntDuration(float)
 T IPredictionSystem::~IPredictionSystem()
 T ISchemaAttributeType::BSupportsGameplayModificationAndNetworking() const
 T ISchemaAttributeTypeBase<CAttribute_String>::ConvertEconAttributeValueToByteStream(attribute_data_union_t const&, std::string*) const
 T ISchemaAttributeTypeBase<CAttribute_String>::GetTypeUniqueIdentifier() const
 T ISchemaAttributeTypeBase<CAttribute_String>::InitializeNewEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<CAttribute_String>::LoadByteStreamToEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, std::string const&) const
 T ISchemaAttributeTypeBase<CAttribute_String>::LoadEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<CAttribute_String>::OnIterateAttributeValue(IEconItemAttributeIterator*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<CAttribute_String>::UnloadEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<Vector>::ConvertEconAttributeValueToByteStream(attribute_data_union_t const&, std::string*) const
 T ISchemaAttributeTypeBase<Vector>::GetTypeUniqueIdentifier() const
 T ISchemaAttributeTypeBase<Vector>::InitializeNewEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<Vector>::LoadByteStreamToEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, std::string const&) const
 T ISchemaAttributeTypeBase<Vector>::LoadEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<Vector>::OnIterateAttributeValue(IEconItemAttributeIterator*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<Vector>::UnloadEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<float>::ConvertEconAttributeValueToByteStream(attribute_data_union_t const&, std::string*) const
 T ISchemaAttributeTypeBase<float>::GetTypeUniqueIdentifier() const
 T ISchemaAttributeTypeBase<float>::InitializeNewEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<float>::LoadByteStreamToEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, std::string const&) const
 T ISchemaAttributeTypeBase<float>::LoadEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<float>::UnloadEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<unsigned int>::ConvertEconAttributeValueToByteStream(attribute_data_union_t const&, std::string*) const
 T ISchemaAttributeTypeBase<unsigned int>::GetTypeUniqueIdentifier() const
 T ISchemaAttributeTypeBase<unsigned int>::InitializeNewEconAttributeValue(attribute_data_union_t*) const
 T ISchemaAttributeTypeBase<unsigned int>::LoadByteStreamToEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, std::string const&) const
 T ISchemaAttributeTypeBase<unsigned int>::LoadEconAttributeValue(CEconItem*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<unsigned int>::OnIterateAttributeValue(IEconItemAttributeIterator*, CEconItemAttributeDefinition const*, attribute_data_union_t const&) const
 T ISchemaAttributeTypeBase<unsigned int>::UnloadEconAttributeValue(attribute_data_union_t*) const
 T IScriptInstanceHelper::GetProxied(void*)
 T ISearchSurroundingAreasFunctor::IncludeInSearch(CNavArea*, CNavArea*)
 T ISearchSurroundingAreasFunctor::IterateAdjacentAreas(CNavArea*, CNavArea*, float)
 T ISearchSurroundingAreasFunctor::PostSearch()
 T ISearchSurroundingAreasFunctor::ShouldSearch(CNavArea*, CNavArea*, float)
 T IceKey::IceKey(int)
 T IceKey::blockSize() const
 T IceKey::decrypt(unsigned char const*, unsigned char*) const
 T IceKey::scheduleBuild(unsigned short*, int, int const*)
 T IceKey::set(unsigned char const*)
 T IceKey::~IceKey()
 T IdleState::GetName() const
 T IdleState::OnEnter(CCSBot*)
 T IdleState::OnUpdate(CCSBot*)
 T IndexModelSequences(CStudioHdr*)
 T InitBodyQue()
 T InitBotTrig()
 T InitCBaseAnimatingScriptDesc()
 T InitCBaseEntityScriptDesc()
 T InitCBaseFlexScriptDesc()
 T InitCBasePlayerScriptDesc()
 T InitCEnvEntityMakerScriptDesc()
 T InitCPlayerVoiceListenerScriptDesc()
 T InitCSceneEntityScriptDesc()
 T InitCScriptEntityIteratorScriptDesc()
 T InitCScriptKeyValuesScriptDesc()
 T InitCTriggerCameraScriptDesc()
 T InitPose(CStudioHdr const*, Vector*, QuaternionAligned*, int)
 T Init_GCVs()
 T InitializeCvars()
 T InstallBotControl()
 T InstallGameRules()
 T InstanceRegistry(char const*)
 T InstancedAutoGeneratedSoundScene(CBaseFlex*, char const*, CHandle<CBaseEntity>*)
 T InstancedScriptedScene(CBaseFlex*, char const*, CHandle<CBaseEntity>*, float, bool, ResponseRules::CRR_Response*, bool, IRecipientFilter*)
 T InterfaceReg::InterfaceReg(void* (*)(), char const*)
 T InternalSendPropArray(int, int, char*, int (*)(void const*, int), unsigned char)
 T Interpolator_CurveInterpolate(int, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Interpolator_CurveInterpolatorsForType(int, int&, int&)
 T Interpolator_CurveTypeForName(char const*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithTriangle(Ray_t const&, Vector const&, Vector const&, Vector const&, bool)
 T IntervalTimer::GetDataDescMap()
 T IntervalTimer::NetworkStateChanged()
 T IntervalTimer::NetworkStateChanged(void*)
 T IntervalTimer::Now() const
 T InvalidateQueryCache()
 T InvalidateUniqueId(UniqueId_t*)
 T InventoryManager()
 T InvestigateNoiseState::AttendCurrentNoise(CCSBot*)
 T InvestigateNoiseState::GetName() const
 T InvestigateNoiseState::OnEnter(CCSBot*)
 T InvestigateNoiseState::OnExit(CCSBot*)
 T InvestigateNoiseState::OnUpdate(CCSBot*)
 T IpAddressMask::ByteSize() const
 T IpAddressMask::Clear()
 T IpAddressMask::GetCachedSize() const
 T IpAddressMask::GetMetadata() const
 T IpAddressMask::IsInitialized() const
 T IpAddressMask::MergeFrom(IpAddressMask const&)
 T IpAddressMask::New() const
 T IpAddressMask::SerializeWithCachedSizesToArray(unsigned char*) const
 T IpAddressMask::SetCachedSize(int) const
 T IpAddressMask::~IpAddressMask()
 T IsAmmoType(int, char const*)
 T IsBoxIntersectingBox(Vector const&, Vector const&, Vector const&, Vector const&)
 T IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
 T IsBreakableEntity(CBaseEntity*)
 T IsEngineThreaded()
 T IsEntityCreationAllowedInScripts()
 T IsEntityWalkable(CBaseEntity*, unsigned int)
 T IsExplosionTraceBlocked(CGameTrace*)
 T IsGrenadeWeapon(CSWeaponID)
 T IsGunWeapon(CSWeaponType)
 T IsHeadTrackingEnabled()
 T IsHeightDifferenceValid(float, float, float, float)
 T IsHidingSpotInCover(Vector const&)
 T IsInCommentaryMode()
 T IsListeningToCommentary()
 T IsOBBIntersectingOBB(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float)
 T IsPointInBox(Vector const&, Vector const&, Vector const&)
 T IsPrimaryWeapon(CSWeaponID)
 T IsPushAwayEntity(CBaseEntity*)
 T IsPushableEntity(CBaseEntity*)
 T IsRayIntersectingSphere(Vector const&, Vector const&, Vector const&, float, float)
 T IsRunningScriptedScene(CBaseFlex*, bool)
 T IsRunningScriptedSceneAndNotPaused(CBaseFlex*, bool)
 T IsRunningScriptedSceneWithSpeechAndNotPaused(CBaseFlex*, bool)
 T IsSecondaryWeapon(CSWeaponID)
 T IsSphereIntersectingCone(Vector const&, float, Vector const&, Vector const&, float, float)
 T IsSpotOccupied(CBaseEntity*, Vector const&)
 T IsStairs(Vector const&, Vector const&, StairTestType)
 T IsStaticPointEntity(CBaseEntity*)
 T IsUniqueIdEqual(UniqueId_t const&, UniqueId_t const&)
 T IsWalkableTraceHullClear(Vector const&, Vector const&, Vector const&, Vector const&, unsigned int)
 T IsWalkableTraceLineClear(Vector const&, Vector const&, unsigned int)
 T IsWeaponClassname(char const*)
 T ItemGeneration()
 T ItemSystem()
 T IterateActivePhysicsEntities(void (*)(CBaseEntity*))
 T JumpConnector::TryToConnect(CNavArea*, CNavArea*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, NavDirType)
 T JumpConnector::TryToConnect(CNavArea*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, NavDirType)
 T JumpConnector::operator()(CNavArea*)
 T KeyValues::AddSubKey(KeyValues*)
 T KeyValues::Clear()
 T KeyValues::CopySubkeys(KeyValues*) const
 T KeyValues::CreateKey(char const*)
 T KeyValues::CreateNewKey()
 T KeyValues::Dump(IKeyValuesDumpContext*, int)
 T KeyValues::FindKey(char const*, bool)
 T KeyValues::FindKey(int) const
 T KeyValues::GetColor(char const*, Color const&)
 T KeyValues::GetDataType(char const*)
 T KeyValues::GetFirstSubKey() const
 T KeyValues::GetFirstTrueSubKey()
 T KeyValues::GetFirstValue()
 T KeyValues::GetFloat(char const*, float)
 T KeyValues::GetInt(char const*, int)
 T KeyValues::GetName() const
 T KeyValues::GetNameSymbol() const
 T KeyValues::GetNextKey() const
 T KeyValues::GetNextTrueSubKey()
 T KeyValues::GetNextValue()
 T KeyValues::GetPtr(char const*, void*)
 T KeyValues::GetString(char const*, char const*)
 T KeyValues::GetUint64(char const*, unsigned long long)
 T KeyValues::GetWString(char const*, wchar_t const*)
 T KeyValues::IsEmpty(char const*)
 T KeyValues::KeyValues(char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, int, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, wchar_t const*)
 T KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool (*)(char const*))
 T KeyValues::MakeCopy() const
 T KeyValues::MergeFrom(KeyValues*, KeyValues::MergeKeyValuesOp_t)
 T KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, bool (*)(char const*))
 T KeyValues::ProcessResolutionKeys(char const*)
 T KeyValues::RecursiveLoadFromBuffer(char const*, CKeyValuesTokenReader&, bool (*)(char const*))
 T KeyValues::RecursiveMergeKeyValues(KeyValues*)
 T KeyValues::RecursiveSaveToFile(CUtlBuffer&, int)
 T KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)
 T KeyValues::RemoveEverything()
 T KeyValues::RemoveSubKey(KeyValues*)
 T KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool)
 T KeyValues::SetColor(char const*, Color)
 T KeyValues::SetFloat(char const*, float)
 T KeyValues::SetInt(char const*, int)
 T KeyValues::SetName(char const*)
 T KeyValues::SetPtr(char const*, void*)
 T KeyValues::SetString(char const*, char const*)
 T KeyValues::SetStringValue(char const*)
 T KeyValues::SetUint64(char const*, unsigned long long)
 T KeyValues::SetWString(char const*, wchar_t const*)
 T KeyValues::UsesEscapeSequences(bool)
 T KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
 T KeyValues::deleteThis()
 T KeyValues::operator delete(void*)
 T KeyValues::operator new(unsigned long)
 T KeyValues::~KeyValues()
 T KillTargets(char const*)
 T Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T LadderEndSearch(Vector const*, NavDirType)
 T LightDesc_t::RecalculateDerivedValues()
 T LinkChild(CBaseEntity*, CBaseEntity*)
 T LoadEquipmentData()
 T LoadMOTDFile(char const*, ConVar*)
 T LoadServerImageFile(char const*)
 T LookupActivity(CStudioHdr*, char const*)
 T LookupSequence(CStudioHdr*, char const*)
 T LookupWeaponInfoSlot(char const*)
 T MD5Update(MD5Context_t*, unsigned char const*, unsigned int)
 T MD5_PseudoRandom(unsigned int)
 T MPForceCameraCallback(IConVar*, char const*, float)
 T MPTimeLimitCallback(IConVar*, char const*, float)
 T MakeSniperSpots(CNavArea*)
 T MapCycleFileChangedCallback(IConVar*, char const*, float)
 T MapEntity_GetNumKeysInEntity(char const*)
 T MapEntity_ParseAllEntites_SpawnTemplates(CPointTemplate**, int, CBaseEntity**, HierarchicalSpawnMapData_t*, int)
 T MapEntity_ParseAllEntities(char const*, IMapEntityFilter*, bool)
 T MapEntity_ParseEntity(CBaseEntity*&, char const*, IMapEntityFilter*)
 T MapEntity_ParseToken(char const*, char*)
 T MapEntity_PrecacheEntity(char const*, int&)
 T MapEntity_SkipToNextEntity(char const*, char*)
 T MathLib_Init(float, float, float, int, bool, bool, bool, bool)
 T MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
 T MatrixAngles(matrix3x4_t const&, float*)
 T MatrixBuildRotateZ(VMatrix&, float)
 T MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
 T MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
 T MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
 T MatrixFromAngles(QAngle const&, VMatrix&)
 T MatrixGetColumn(matrix3x4_t const&, int, Vector&)
 T MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
 T MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
 T MatrixSetColumn(Vector const&, int, matrix3x4_t&)
 T MatrixSetIdentity(VMatrix&)
 T MatrixToAngles(VMatrix const&, QAngle&)
 T MaxAllowedNetGraphCallback(IConVar*, char const*, float)
 T MenuItemCheckImage::Paint()
 T MenuItemCheckImage::~MenuItemCheckImage()
 T MessageBox_Factory()
 T MessageEnd()
 T MessageWriteByte(int)
 T MessageWriteChar(int)
 T MessageWriteFloat(float)
 T MessageWriteShort(int)
 T MessageWriteVec3Coord(Vector const&)
 T MissingSceneWarning(char const*)
 T ModelSoundsCacheInit()
 T ModelSoundsCacheShutdown()
 T ModelSoundsCache_FinishModel(CStudioHdr*)
 T ModelSoundsCache_LoadModel(char const*)
 T ModelSoundsCache_PrecacheScriptSound(char const*)
 T MoveHelperServer()
 T MoveToState::GetName() const
 T MoveToState::OnEnter(CCSBot*)
 T MoveToState::OnExit(CCSBot*)
 T MoveToState::OnUpdate(CCSBot*)
 T MovieExplosion::GetServerClass()
 T MovieExplosion::YouForgotToImplementOrDeclareServerClass()
 T MovieExplosion::~MovieExplosion()
 T MurmurHash3_32(void const*, unsigned long, unsigned int, bool)
 T NAI_Hull::Height(int)
 T NAI_Hull::Length(int)
 T NAI_Hull::LookupId(char const*)
 T NAI_Hull::Maxs(int)
 T NAI_Hull::Mins(int)
 T NAI_Hull::Name(int)
 T NAI_Hull::SmallMaxs(int)
 T NAI_Hull::SmallMins(int)
 T NAI_Hull::TraceMask(int)
 T NAI_Hull::Width(int)
 T NDebugOverlay::Axis(Vector const&, QAngle const&, float, bool, float)
 T NDebugOverlay::Box(Vector const&, Vector const&, Vector const&, int, int, int, int, float)
 T NDebugOverlay::BoxAngles(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T NDebugOverlay::BoxDirection(Vector const&, Vector const&, Vector const&, Vector const&, int, int, int, int, float)
 T NDebugOverlay::Circle(Vector const&, Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Cross3D(Vector const&, Vector const&, Vector const&, int, int, int, bool, float)
 T NDebugOverlay::Cross3D(Vector const&, float, int, int, int, bool, float)
 T NDebugOverlay::Cross3DOriented(Vector const&, QAngle const&, float, int, int, int, bool, float)
 T NDebugOverlay::DrawGroundCrossHairOverlay()
 T NDebugOverlay::DrawTickMarkedLine(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::EntityBounds(CBaseEntity const*, int, int, int, int, float)
 T NDebugOverlay::EntityTextAtPosition(Vector const&, int, char const*, float, int, int, int, int)
 T NDebugOverlay::Grid(Vector const&)
 T NDebugOverlay::HorzArrow(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Line(Vector const&, Vector const&, int, int, int, bool, float)
 T NDebugOverlay::PurgeTextOverlays()
 T NDebugOverlay::ScreenText(float, float, char const*, int, int, int, int, float)
 T NDebugOverlay::Sphere(Vector const&, QAngle const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Sphere(Vector const&, float, int, int, int, bool, float)
 T NDebugOverlay::SweptBox(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T NDebugOverlay::Text(Vector const&, char const*, bool, float)
 T NDebugOverlay::Triangle(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
 T NDebugOverlay::VertArrow(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::YawArrow(Vector const&, float, float, float, int, int, int, int, bool, float)
 T NPCPhysics_CreateSolver(CAI_BaseNPC*, CBaseEntity*, bool, float)
 T NPC_CheckBrushExclude(CBaseEntity*, CBaseEntity*)
 T NWCEdit::AirNodePlacementPosition()
 T NWCEdit::CreateAILink(CBasePlayer*)
 T NWCEdit::CreateAINode(CBasePlayer*)
 T NWCEdit::DestroyAILink(CBasePlayer*)
 T NWCEdit::DestroyAINode(CBasePlayer*)
 T NWCEdit::IsWCVersionValid()
 T NWCEdit::RememberEntityPosition(CBaseEntity*)
 T NWCEdit::UndoDestroyAINode()
 T NWCEdit::UpdateEntityPosition(CBaseEntity*)
 T NameToRadioEvent(char const*)
 T NavAreaCollector::operator()(CNavArea*)
 T NavDrawDashedLine(Vector const&, Vector const&, NavEditColor)
 T NavDrawHorizontalArrow(Vector const&, Vector const&, float, NavEditColor)
 T NavDrawLine(Vector const&, Vector const&, NavEditColor)
 T NavDrawTriangle(Vector const&, Vector const&, Vector const&, NavEditColor)
 T NavDrawVolume(Vector const&, Vector const&, int, NavEditColor)
 T NavEditClearAllAttributes()
 T NavEditClearAttribute(CCommand const&)
 T NavEditMarkAttribute(CCommand const&)
 T NavMeshFactory()
 T NavMeshMergeAutocomplete(char const*, char (*) [64])
 T OnBaseCombatWeaponDestroyed(CBaseCombatWeapon*)
 T OnInventoryUpdatedForSteamID(CSteamID)
 T OneWayLink_t::Compare(OneWayLink_t const*, OneWayLink_t const*)
 T OpenDoorState::GetName() const
 T OpenDoorState::OnEnter(CCSBot*)
 T OpenDoorState::OnExit(CCSBot*)
 T OpenDoorState::OnUpdate(CCSBot*)
 T OpenDoorState::SetDoor(CBaseEntity*)
 T OpenZipU(void*, unsigned int, unsigned int)
 T OperationalStatisticDescription::ByteSize() const
 T OperationalStatisticDescription::Clear()
 T OperationalStatisticDescription::GetCachedSize() const
 T OperationalStatisticDescription::GetMetadata() const
 T OperationalStatisticDescription::IsInitialized() const
 T OperationalStatisticDescription::MergeFrom(OperationalStatisticDescription const&)
 T OperationalStatisticDescription::New() const
 T OperationalStatisticDescription::SerializeWithCachedSizesToArray(unsigned char*) const
 T OperationalStatisticDescription::SetCachedSize(int) const
 T OperationalStatisticDescription::~OperationalStatisticDescription()
 T OperationalStatisticElement::ByteSize() const
 T OperationalStatisticElement::Clear()
 T OperationalStatisticElement::GetCachedSize() const
 T OperationalStatisticElement::GetMetadata() const
 T OperationalStatisticElement::IsInitialized() const
 T OperationalStatisticElement::MergeFrom(OperationalStatisticElement const&)
 T OperationalStatisticElement::New() const
 T OperationalStatisticElement::SerializeWithCachedSizesToArray(unsigned char*) const
 T OperationalStatisticElement::SetCachedSize(int) const
 T OperationalStatisticElement::~OperationalStatisticElement()
 T OperationalStatisticsPacket::ByteSize() const
 T OperationalStatisticsPacket::Clear()
 T OperationalStatisticsPacket::GetCachedSize() const
 T OperationalStatisticsPacket::GetMetadata() const
 T OperationalStatisticsPacket::IsInitialized() const
 T OperationalStatisticsPacket::MergeFrom(OperationalStatisticsPacket const&)
 T OperationalStatisticsPacket::New() const
 T OperationalStatisticsPacket::SerializeWithCachedSizesToArray(unsigned char*) const
 T OperationalStatisticsPacket::SetCachedSize(int) const
 T OperationalStatisticsPacket::~OperationalStatisticsPacket()
 T ParseFileIds(char const*, CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >&)
 T ParseKeyvalue(void*, typedescription_t*, int, char const*, char const*)
 T ParseParticleEffects(bool)
 T ParseTokenFromString(char const**)
 T ParticleSmokeGrenade::GetDataDescMap()
 T ParticleSmokeGrenade::GetServerClass()
 T ParticleSmokeGrenade::ParticleSmokeGrenade()
 T ParticleSmokeGrenade::Spawn()
 T ParticleSmokeGrenade::Think()
 T ParticleSmokeGrenade::UpdateTransmitState()
 T ParticleSmokeGrenade::YouForgotToImplementOrDeclareServerClass()
 T ParticleSmokeGrenade::~ParticleSmokeGrenade()
 T Particle_Test_Start(CBasePlayer*, char const*, bool)
 T PassServerEntityFilter(IHandleEntity const*, IHandleEntity const*)
 T PathCost::operator()(CNavArea*, CNavArea*, CNavLadder const*, CFuncElevator const*, float)
 T PathFindDirection(CPathTrack*, Vector const&, Vector const&)
 T PercentageOfFlashForPlayer(CBaseEntity*, Vector, CBaseEntity*)
 T PerformObstaclePushaway(CBaseCombatCharacter*)
 T PhysAddShadow(CBaseEntity*)
 T PhysBreakSound(CBaseEntity*, IPhysicsObject*, Vector)
 T PhysCallbackDamage(CBaseEntity*, CTakeDamageInfo const&)
 T PhysCallbackDamage(CBaseEntity*, CTakeDamageInfo const&, gamevcollisionevent_t&, int)
 T PhysCallbackImpulse(IPhysicsObject*, Vector const&, Vector const&)
 T PhysCallbackRemove(IServerNetworkable*)
 T PhysCleanupFrictionSounds(CBaseEntity*)
 T PhysCollisionDust(gamevcollisionevent_t*, surfacedata_t*)
 T PhysCollisionScreenShake(gamevcollisionevent_t*, int)
 T PhysCollisionSound(CBaseEntity*, IPhysicsObject*, int, int, int, float, float)
 T PhysComputeSlideDirection(IPhysicsObject*, Vector const&, Vector const&, Vector*, Vector*, float)
 T PhysCreateBbox(Vector const&, Vector const&)
 T PhysCreateVirtualTerrain(CBaseEntity*, objectparams_t const&)
 T PhysCreateWorld_Shared(CBaseEntity*, vcollide_t*, objectparams_t const&)
 T PhysDestroyObject(IPhysicsObject*, CBaseEntity*)
 T PhysDisableEntityCollisions(CBaseEntity*, CBaseEntity*)
 T PhysDisableEntityCollisions(IPhysicsObject*, IPhysicsObject*)
 T PhysEnableEntityCollisions(CBaseEntity*, CBaseEntity*)
 T PhysEnableEntityCollisions(IPhysicsObject*, IPhysicsObject*)
 T PhysEnableFloating(IPhysicsObject*, bool)
 T PhysEntityCollisionsAreDisabled(CBaseEntity*, CBaseEntity*)
 T PhysFindOrAddVehicleScript(char const*, vehicleparams_t*, vehiclesounds_t*)
 T PhysFlushVehicleScripts()
 T PhysForceClearVelocity(IPhysicsObject*)
 T PhysFrictionEffect(Vector&, Vector, float, int, int)
 T PhysFrictionEffectPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T PhysFrictionSound(CBaseEntity*, IPhysicsObject*, char const*, unsigned int&, float)
 T PhysFrictionSound(CBaseEntity*, IPhysicsObject*, float, int, int)
 T PhysGetEntityMass(CBaseEntity*)
 T PhysGetListOfPenetratingEntities(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T PhysGetMassCenterOverride(CBaseEntity*, vcollide_t*, solid_t&)
 T PhysGetTriggerEvent(triggerevent_t*, CBaseEntity*)
 T PhysHasContactWithOtherInDirection(IPhysicsObject*, Vector const&)
 T PhysIsFinalTick()
 T PhysIsInCallback()
 T PhysModelCreate(CBaseEntity*, int, Vector const&, QAngle const&, solid_t*)
 T PhysModelCreateBox(CBaseEntity*, Vector const&, Vector const&, Vector const&, bool)
 T PhysModelCreateCustom(CBaseEntity*, CPhysCollide const*, Vector const&, QAngle const&, char const*, bool, solid_t*)
 T PhysModelCreateOBB(CBaseEntity*, Vector const&, Vector const&, Vector const&, QAngle const&, bool)
 T PhysModelCreateUnmoveable(CBaseEntity*, int, Vector const&, QAngle const&)
 T PhysModelParseSolid(solid_t&, CBaseEntity*, int)
 T PhysModelParseSolidByIndex(solid_t&, CBaseEntity*, int, int)
 T PhysModelParseSolidByIndex(solid_t&, CBaseEntity*, vcollide_t*, int)
 T PhysOnCleanupDeleteList()
 T PhysParseSurfaceData(IPhysicsSurfaceProps*, IFileSystem*)
 T PhysRemoveShadow(CBaseEntity*)
 T PhysSetMassCenterOverride(masscenteroverride_t&)
 T PhysSolidOverride(solid_t&, string_t)
 T PhysTeleportConstrainedEntity(CBaseEntity*, IPhysicsObject*, IPhysicsObject*, Vector const&, QAngle const&, bool)
 T PhysicsCommand(CCommand const&, void (*)(CBaseEntity*))
 T PhysicsGameSystem()
 T PhysicsSplash(IPhysicsFluidController*, IPhysicsObject*, CBaseEntity*)
 T Physics_RunThinkFunctions(bool)
 T Physics_SimulateEntity(CBaseEntity*)
 T PickupHostageState::GetName() const
 T PickupHostageState::OnEnter(CCSBot*)
 T PickupHostageState::OnExit(CCSBot*)
 T PickupHostageState::OnUpdate(CCSBot*)
 T Pickup_DefaultPhysGunLaunchVelocity(Vector const&, float)
 T Pickup_ForcePlayerToDropThisObject(CBaseEntity*)
 T PlaceDirectory::AddPlace(unsigned int)
 T PlaceDirectory::IndexToPlace(unsigned short) const
 T PlaceDirectory::Load(CUtlBuffer&, int)
 T PlaceDirectory::Save(CUtlBuffer&)
 T PlaceDirectory::~PlaceDirectory()
 T PlantBombState::GetName() const
 T PlantBombState::OnEnter(CCSBot*)
 T PlantBombState::OnExit(CCSBot*)
 T PlantBombState::OnUpdate(CCSBot*)
 T PlatformInputDevice::IsInputDeviceAPointer(InputDevice_t)
 T PlayLockSounds(CBaseEntity*, locksound_t*, int, int)
 T PlayerCommendationInfo::ByteSize() const
 T PlayerCommendationInfo::Clear()
 T PlayerCommendationInfo::GetCachedSize() const
 T PlayerCommendationInfo::GetMetadata() const
 T PlayerCommendationInfo::IsInitialized() const
 T PlayerCommendationInfo::MergeFrom(PlayerCommendationInfo const&)
 T PlayerCommendationInfo::New() const
 T PlayerCommendationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T PlayerCommendationInfo::SetCachedSize(int) const
 T PlayerCommendationInfo::~PlayerCommendationInfo()
 T PlayerMedalsInfo::ByteSize() const
 T PlayerMedalsInfo::Clear()
 T PlayerMedalsInfo::GetCachedSize() const
 T PlayerMedalsInfo::GetMetadata() const
 T PlayerMedalsInfo::IsInitialized() const
 T PlayerMedalsInfo::MergeFrom(PlayerMedalsInfo const&)
 T PlayerMedalsInfo::New() const
 T PlayerMedalsInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T PlayerMedalsInfo::SetCachedSize(int) const
 T PlayerMedalsInfo::~PlayerMedalsInfo()
 T PlayerModelInfo::GetCTViewModelArmsPath()
 T PlayerModelInfo::GetClassModelPath(int)
 T PlayerModelInfo::GetNextClassForTeam(int)
 T PlayerModelInfo::GetTViewModelArmsPath()
 T PlayerModelInfo::InitializeForCurrentMap()
 T PlayerModelInfo::IsCTClass(int)
 T PlayerModelInfo::IsTClass(int)
 T PlayerMove()
 T PlayerQualifies(CBasePlayer*, int)
 T PlayerRankingInfo::ByteSize() const
 T PlayerRankingInfo::Clear()
 T PlayerRankingInfo::GetCachedSize() const
 T PlayerRankingInfo::GetMetadata() const
 T PlayerRankingInfo::IsInitialized() const
 T PlayerRankingInfo::MergeFrom(PlayerRankingInfo const&)
 T PlayerRankingInfo::New() const
 T PlayerRankingInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T PlayerRankingInfo::SetCachedSize(int) const
 T PlayerRankingInfo::~PlayerRankingInfo()
 T PlayerVoiceListener()
 T PointCameraSetupVisibility(CBaseEntity*, int, unsigned char*, int)
 T PointOnLineNearestPoint(Vector const&, Vector const&, Vector const&)
 T PostFrameNavigationSystem()
 T PostProcessSystem()
 T PrecacheEffect(char const*)
 T PrecacheFileWeaponInfoDatabase()
 T PrecacheGibsForModel(int)
 T PrecacheInstancedScene(char const*)
 T PrecacheMaterial(char const*)
 T PrecacheMovie(char const*)
 T PrecacheParticleFileAndSystems(char const*)
 T PrecacheParticleSystem(char const*)
 T PrecachePhysicsSounds()
 T PrecachePointCommentaryNodePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T PrecachePointTemplates()
 T PrecacheStandardParticleSystems()
 T PrecacheVGuiScreen(char const*)
 T PreparePanelMessageMap(vgui::PanelMessageMap*)
 T ProcessQueryCacheUpdate(QueryCacheUpdateRecord_t&)
 T PropBreakableCapEdictsOnCreateAll(CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >&, IPhysicsObject*, breakablepropparams_t const&, CBaseEntity*, int)
 T PropBreakableCreateAll(int, IPhysicsObject*, Vector const&, QAngle const&, Vector const&, Vector const&, float, float, int, CBaseEntity*, bool)
 T PropBreakableCreateAll(int, IPhysicsObject*, breakablepropparams_t const&, CBaseEntity*, int, bool, bool)
 T PropBreakablePrecacheAll(string_t)
 T PropIsGib(CBaseEntity*)
 T Q_log2(unsigned int)
 T QuaternionAccumulate(Quaternion const&, float, Quaternion const&, Quaternion&)
 T QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionAngleDiff(Quaternion const&, Quaternion const&)
 T QuaternionAngles(Quaternion const&, QAngle&)
 T QuaternionAngles(Quaternion const&, RadianEuler&)
 T QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
 T QuaternionMA(Quaternion const&, float, Quaternion const&, Quaternion&)
 T QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
 T QuaternionMatrix(Quaternion const&, matrix3x4_t&)
 T QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionNormalize(Quaternion&)
 T QuaternionSM(float, Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionScale(Quaternion const&, float, Quaternion&)
 T QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QueryCacheEntry_t::IssueQuery()
 T RR::CApplyContextOperator::Apply(char const*, char const*, char*, int)
 T RR::CApplyContextOperator::FindOperator(char const*)
 T RR::CDecrementOperator::Apply(char const*, char const*, char*, int)
 T RR::CIncrementOperator::Apply(char const*, char const*, char*, int)
 T RR::CToggleOperator::Apply(char const*, char const*, char*, int)
 T RadioImage::ApplySchemeSettings(vgui::IScheme*, bool)
 T RadioImage::Paint()
 T RadioImage::~RadioImage()
 T RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
 T RadiusFlash(Vector, CBaseEntity*, CBaseEntity*, float, int, int, unsigned char*, unsigned char*)
 T RadiusSelect::operator()(CNavArea*)
 T RagdollActivate(ragdoll_t&, vcollide_t*, int, bool)
 T RagdollApplyAnimationAsVelocity(ragdoll_t&, matrix3x4_t const*, matrix3x4_t const*, float)
 T RagdollCreate(ragdoll_t&, ragdollparams_t const&, IPhysicsEnvironment*)
 T RagdollDestroy(ragdoll_t&)
 T RagdollGetBoneMatrix(ragdoll_t const&, CBoneAccessor&, int)
 T RagdollIsAsleep(ragdoll_t const&)
 T RagdollManager_SaveImportant(CAI_BaseNPC*)
 T RagdollSetupCollisions(ragdoll_t&, vcollide_t*, int)
 T RagdollSolveSeparation(ragdoll_t&, CBaseEntity*)
 T Ragdoll_GetAngleOverrideString(char*, int, CBaseEntity*)
 T Ragdoll_GetRagdoll(CBaseEntity*)
 T Ragdoll_IsPropRagdoll(CBaseEntity*)
 T RandomInterval(interval_t const&)
 T RangeCompressor(float, float, float, float)
 T Ray_t::Init(Vector const&, Vector const&, Vector const&, Vector const&)
 T ReadDMXHeader(CUtlBuffer&, char*, int, int&, char*, int, int&)
 T ReadEncryptedKVFile(IFileSystem*, char const*, unsigned char const*, bool)
 T ReadInterval(char const*)
 T ReadUsercmd(bf_read*, CUserCmd*, CUserCmd*)
 T ReconnectInterface(void* (*)(char const*, int*), char const*)
 T ReconnectMergedArea(CUtlDict<CNavArea*, int>&, KeyValues*, NavDirType, char const*)
 T RecursiveFindFilesMatchingName(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*, char const*, char const*, char const*)
 T RegenerationForceOnChangeCallback(IConVar*, char const*, float)
 T ReleaseInstancedRegistry(IRegistry*)
 T ReloadMasterItemSchema()
 T RemapViewAngles(ViewSmoothingData_t*, QAngle&)
 T RemoveActorFromScriptedScenes(CBaseFlex*, bool, bool, char const*)
 T RemoveBotControl()
 T RemovePooledString(char const*)
 T ReportPositionChanged(CBaseEntity*)
 T ReportVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T ResetActivityIndexes(CStudioHdr*)
 T ResetConVarsFromFile(char const*)
 T ResetEventIndexes(CStudioHdr*)
 T ResetGlobalState()
 T ResetWindspeed()
 T RespawnEntities()
 T ResponseRules::CRR_Concept::CRR_Concept(char const*)
 T ResponseRules::CRR_Concept::GetStringConcept() const
 T ResponseRules::CRR_Concept::GetStringForGenericId(CUtlSymbol)
 T ResponseRules::CRR_Response::CRR_Response()
 T ResponseRules::CRR_Response::CRR_Response(ResponseRules::CRR_Response const&)
 T ResponseRules::CRR_Response::Describe(ResponseRules::CriteriaSet const*)
 T ResponseRules::CRR_Response::DescribeResponse(ResponseRules::ResponseType_t)
 T ResponseRules::CRR_Response::GetDelay() const
 T ResponseRules::CRR_Response::GetPreDelay() const
 T ResponseRules::CRR_Response::GetRespeakDelay() const
 T ResponseRules::CRR_Response::GetResponse(char*, unsigned long) const
 T ResponseRules::CRR_Response::GetSoundLevel() const
 T ResponseRules::CRR_Response::GetSpeakOnce() const
 T ResponseRules::CRR_Response::Init(ResponseRules::ResponseType_t, char const*, ResponseRules::ResponseParams const&, char const*, char const*, bool)
 T ResponseRules::CRR_Response::Invalidate()
 T ResponseRules::CRR_Response::ShouldBreakOnNonIdle() const
 T ResponseRules::CRR_Response::ShouldntUseScene() const
 T ResponseRules::CRR_Response::operator=(ResponseRules::CRR_Response const&)
 T ResponseRules::CRR_Response::~CRR_Response()
 T ResponseRules::CResponseSystem::BuildDispatchTables()
 T ResponseRules::CResponseSystem::CResponseSystem()
 T ResponseRules::CResponseSystem::Clear()
 T ResponseRules::CResponseSystem::CompareUsingMatcher(char const*, ResponseRules::Matcher&, bool)
 T ResponseRules::CResponseSystem::ComputeMatcher(ResponseRules::Criteria*, ResponseRules::Matcher&)
 T ResponseRules::CResponseSystem::DebugPrint(int, char const*, ...)
 T ResponseRules::CResponseSystem::DescribeResponseGroup(ResponseRules::ResponseGroup*, int, int)
 T ResponseRules::CResponseSystem::DumpRules()
 T ResponseRules::CResponseSystem::FakeDepletes(ResponseRules::ResponseGroup*, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::FindBestMatchingRule(ResponseRules::CriteriaSet const&, bool, float&)
 T ResponseRules::CResponseSystem::FindBestResponse(ResponseRules::CriteriaSet const&, ResponseRules::CRR_Response&, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::GetAllResponses(CUtlVector<ResponseRules::CRR_Response, CUtlMemory<ResponseRules::CRR_Response, int> >*)
 T ResponseRules::CResponseSystem::GetBestResponse(ResponseRules::CResponseSystem::ResponseSearchResult&, ResponseRules::Rule*, bool, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::LoadFromBuffer(char const*, char const*)
 T ResponseRules::CResponseSystem::LoadRuleSet(char const*)
 T ResponseRules::CResponseSystem::ParseCriterion()
 T ResponseRules::CResponseSystem::ParseEnumeration()
 T ResponseRules::CResponseSystem::ParseInclude()
 T ResponseRules::CResponseSystem::ParseOneCriterion(char const*)
 T ResponseRules::CResponseSystem::ParseOneResponse(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse()
 T ResponseRules::CResponseSystem::ParseResponseGroup_DefaultDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Delay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_NoDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_NoScene(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Odds(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_PreDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_RespeakDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Soundlevel(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_SpeakOnce(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Start(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_StopOnNonIdle(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_WeaponDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponse_DefaultDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Delay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_DisplayFirst(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_DisplayLast(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Fire(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_NoDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_NoScene(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Odds(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_PreDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_RespeakDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Soundlevel(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_SpeakOnce(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_StopOnNonIdle(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Then(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_WeaponDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Weight(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseRule()
 T ResponseRules::CResponseSystem::ParseRule_ApplyContext(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_ApplyContextToWorld(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_Criteria(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_MatchOnce(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_Response(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::PushScript(char const*, unsigned char*)
 T ResponseRules::CResponseSystem::RecursiveScoreSubcriteriaAgainstRule(ResponseRules::CriteriaSet const&, ResponseRules::Criteria*, bool&, bool)
 T ResponseRules::CResponseSystem::ResetResponseGroups()
 T ResponseRules::CResponseSystem::ResolveResponse(ResponseRules::CResponseSystem::ResponseSearchResult&, int, char const*, bool, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::ResolveToken(ResponseRules::Matcher&, char*, unsigned long, char const*)
 T ResponseRules::CResponseSystem::ResponseWarning(char const*, ...)
 T ResponseRules::CResponseSystem::ScoreCriteriaAgainstRule(ResponseRules::CriteriaSet const&, ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>&, int, bool)
 T ResponseRules::CResponseSystem::ScoreCriteriaAgainstRuleCriteria(ResponseRules::CriteriaSet const&, int, bool&, bool)
 T ResponseRules::CResponseSystem::SelectWeightedResponseFromResponseGroup(ResponseRules::ResponseGroup*, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::~CResponseSystem()
 T ResponseRules::Criteria::Criteria()
 T ResponseRules::Criteria::Criteria(ResponseRules::Criteria const&)
 T ResponseRules::Criteria::operator=(ResponseRules::Criteria const&)
 T ResponseRules::Criteria::~Criteria()
 T ResponseRules::CriteriaSet::AppendCriteria(CUtlSymbol, char const*, float)
 T ResponseRules::CriteriaSet::AppendCriteria(char const*, char const*, float)
 T ResponseRules::CriteriaSet::AppendCriteria(char const*, float, float)
 T ResponseRules::CriteriaSet::ComputeCriteriaSymbol(char const*)
 T ResponseRules::CriteriaSet::CritEntry_t::LessFunc(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&)
 T ResponseRules::CriteriaSet::CriteriaSet()
 T ResponseRules::CriteriaSet::Describe() const
 T ResponseRules::CriteriaSet::FindCriterionIndex(CUtlSymbol) const
 T ResponseRules::CriteriaSet::FindCriterionIndex(char const*) const
 T ResponseRules::CriteriaSet::GetCount() const
 T ResponseRules::CriteriaSet::GetValue(int) const
 T ResponseRules::CriteriaSet::GetWeight(int) const
 T ResponseRules::CriteriaSet::InterceptWorldSetContexts(ResponseRules::CriteriaSet*, ResponseRules::CriteriaSet*)
 T ResponseRules::CriteriaSet::Merge(ResponseRules::CriteriaSet const*)
 T ResponseRules::CriteriaSet::Merge(char const*)
 T ResponseRules::CriteriaSet::RemoveCriteria(char const*)
 T ResponseRules::CriteriaSet::Reset()
 T ResponseRules::CriteriaSet::WriteToEntity(CBaseEntity*)
 T ResponseRules::IEngineEmulator::Get()
 T ResponseRules::Matcher::GetToken()
 T ResponseRules::Matcher::SetRaw(char const*)
 T ResponseRules::Matcher::SetToken(char const*)
 T ResponseRules::ParserResponse::ParserResponse()
 T ResponseRules::ParserResponse::ParserResponse(ResponseRules::ParserResponse const&)
 T ResponseRules::ParserResponse::operator=(ResponseRules::ParserResponse const&)
 T ResponseRules::ParserResponse::~ParserResponse()
 T ResponseRules::ResponseCopyString(char const*)
 T ResponseRules::ResponseGroup::ResponseGroup(ResponseRules::ResponseGroup const&)
 T ResponseRules::ResponseRulePartition::Count()
 T ResponseRules::ResponseRulePartition::GetBucketForSpeakerAndConcept(char const*, char const*, char const*)
 T ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)
 T ResponseRules::ResponseRulePartition::GetDictsForCriteria(CUtlVectorFixed<ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>*, 2ul>*, ResponseRules::CriteriaSet const&)
 T ResponseRules::ResponseRulePartition::GetElementName(unsigned int const&) const
 T ResponseRules::ResponseRulePartition::IndexFromDictElem(ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>*, int)
 T ResponseRules::ResponseRulePartition::RemoveAll()
 T ResponseRules::ResponseRulePartition::ResponseRulePartition()
 T ResponseRules::ResponseRulePartition::~ResponseRulePartition()
 T ResponseRules::Rule::GetPointerForRuleCriterionByName(ResponseRules::CResponseSystem*, CUtlSymbol const&)
 T ResponseRules::Rule::GetValueForRuleCriterionByName(ResponseRules::CResponseSystem*, CUtlSymbol const&)
 T ResponseRules::Rule::RecursiveGetPointerForRuleCriterionByName(ResponseRules::CResponseSystem*, ResponseRules::Criteria const*, CUtlSymbol const&)
 T ResponseRules::Rule::RecursiveGetValueForRuleCriterionByName(ResponseRules::CResponseSystem*, ResponseRules::Criteria const*, CUtlSymbol const&)
 T ResponseRules::Rule::Rule()
 T ResponseRules::Rule::SetContext(char const*)
 T ResponseRules::Rule::~Rule()
 T ResponseRules::response_interval_t<float16_with_assign>::FromInterval(interval_t const&)
 T ResponseRules::response_interval_t<float16_with_assign>::ToInterval(interval_t&) const
 T RestoreGlobalState(CSaveRestoreData*)
 T RocketTrail::GetDataDescMap()
 T RocketTrail::GetServerClass()
 T RocketTrail::RocketTrail()
 T RocketTrail::YouForgotToImplementOrDeclareServerClass()
 T RocketTrail::~RocketTrail()
 T RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T RotationDelta(QAngle const&, QAngle const&, QAngle*)
 T RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
 T SENTENCEG_GetIndex(char const*)
 T SENTENCEG_Init()
 T SENTENCEG_Lookup(char const*)
 T SENTENCEG_PlayRndI(edict_t*, int, float, soundlevel_t, int, int)
 T SENTENCEG_PlayRndSz(edict_t*, char const*, float, soundlevel_t, int, int)
 T SENTENCEG_PlaySequentialSz(edict_t*, char const*, float, soundlevel_t, int, int, int, int)
 T SMarketPurchases::BuildGamestatDataTable(KeyValues*)
 T SMarketPurchases::SMarketPurchases(unsigned long long, int, char const*, int)
 T SWeaponHitData::BuildGamestatDataTable(KeyValues*)
 T SWeaponHitData::InitAsBombEvent(CCSPlayer*, CPlantedC4*, unsigned int, unsigned char, CSBombEventName)
 T SWeaponHitData::InitAsGrenadeDetonation(CBaseCSGrenadeProjectile*, unsigned int)
 T SWeaponHitData::SWeaponHitData(CCSPlayer*, CTakeDamageInfo const&, unsigned char, unsigned char, unsigned char)
 T SWeaponMissData::BuildGamestatDataTable(KeyValues*)
 T SWeaponShotData::SWeaponShotData(CCSPlayer*, CWeaponCSBase*, unsigned char, unsigned char, unsigned char)
 T SaveGlobalState(CSaveRestoreData*)
 T SaveInit(int)
 T ScaleBones(CStudioHdr const*, Quaternion*, Vector*, int, float, int)
 T SceneManager_ClientActive(CBasePlayer*)
 T SceneNameAutocomplete(char const*, char (*) [64])
 T Scene_Printf(char const*, ...)
 T ScramblePlayersSort(CCSPlayer* const*, CCSPlayer* const*)
 T ScriptClassDesc_t* GetScriptDesc<CBaseAnimating>(CBaseAnimating*)
 T ScriptClassDesc_t* GetScriptDesc<CBaseEntity>(CBaseEntity*)
 T ScriptClassDesc_t* GetScriptDesc<CBasePlayer>(CBasePlayer*)
 T ScriptClassDesc_t* GetScriptDesc<CScriptKeyValues>(CScriptKeyValues*)
 T ScriptClassDesc_t::~ScriptClassDesc_t()
 T ScriptCreateSceneEntity(char const*)
 T ScriptFunctionBinding_t::~ScriptFunctionBinding_t()
 T ScriptGetBestTrainingCourseTime()
 T ScriptGetGameMode()
 T ScriptGetGameType()
 T ScriptGetPlayerCompletedTraining()
 T ScriptGetValveTrainingCourseTime()
 T ScriptHighlightAmmoCounter()
 T ScriptIsLocalPlayerUsingController()
 T ScriptPostSpawn(CScriptScopeT<CDefScriptScopeBase>*, CBaseEntity**, int)
 T ScriptPreInstanceSpawn(CScriptScopeT<CDefScriptScopeBase>*, CBaseEntity*, string_t)
 T ScriptPrintMessageCenterAll(char const*)
 T ScriptPrintMessageCenterTeam(int, char const*)
 T ScriptPrintMessageChatAll(char const*)
 T ScriptPrintMessageChatTeam(int, char const*)
 T ScriptSetBestTrainingCourseTime(int)
 T ScriptSetMiniScoreHidden(bool)
 T ScriptSetPlayerCompletedTraining(bool)
 T ScriptSetRadarHidden(bool)
 T ScriptShowExitDoorMsg()
 T ScriptShowFinishMsgBox()
 T ScriptTrainingGivePlayerAmmo()
 T ScrollBar_Horizontal_Factory()
 T ScrollBar_Vertical_Factory()
 T SeatPrioritySort(CPassengerSeatTransition const*, CPassengerSeatTransition const*)
 T SeedRandSIMD(unsigned int)
 T SelectDeathPoseActivityAndFrame(CBaseAnimating*, CTakeDamageInfo const&, int, Activity&, int&)
 T SelectHeaviestSequence(CStudioHdr*, int)
 T SelectOverlappingAreas::operator()(CNavArea*)
 T SelectWeightedSequence(CStudioHdr*, int, int)
 T SendProp::SendProp()
 T SendProp::~SendProp()
 T SendPropAngle(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropArray3(char*, int, int, int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int), unsigned char)
 T SendPropBool(char*, int, int)
 T SendPropDataTable(char*, int, SendTable*, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int), unsigned char)
 T SendPropEHandle(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
 T SendPropExclude(char*, char*)
 T SendPropFloat(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropInt(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropIntWithMinusOneFlag(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
 T SendPropQAngles(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropString(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropStringT(char*, int, int)
 T SendPropTime(char*, int, int)
 T SendPropUtlVector(char*, int, int, void (*)(void*, int, int), int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
 T SendPropVector(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropVectorXY(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendProxyArrayLength_PlayerArray(void const*, int)
 T SendProxy_AngleToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Angles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_AnimTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_CSGameRules(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_ClientSideAnimation(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_Color32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_CropFlagsToPlayerFlagBitsLength(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_DataTablePtrToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_DataTableToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_EHandleToInt(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FishAngle(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FlexWeights(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_FloatToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingAngle(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingOrigin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingSimulationTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int64ToInt64(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_IntAddOne(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_LengthTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_OnlyToTeam(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_Origin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_OriginXY(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_OriginZ(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_PlayerList(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_QAngles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_SendActiveLocalKnifeDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendActiveLocalKnifeGGDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendActiveLocalWeaponDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendBaseCombatCharacterLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendBaseCombatCharacterNonLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendLocalWeaponDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendNonLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendNonLocalWeaponDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_ShortAddOne(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_SimulationTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_StringT_To_String(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_StringToString(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_String_tToString(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_TeamplayRoundBasedRules(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_TestProxyToggle(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_UInt16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt64ToInt64(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UnmodifiedQAngles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UtlVectorElement(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UtlVectorElement_DataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_UtlVectorLength(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_VectorToVector(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendTable::Construct(SendProp*, int, char*)
 T SendTable::SendTable()
 T SendTable::SendTable(SendProp*, int, char*)
 T SendTable::~SendTable()
 T ServerHltvInfo::ByteSize() const
 T ServerHltvInfo::Clear()
 T ServerHltvInfo::GetCachedSize() const
 T ServerHltvInfo::GetMetadata() const
 T ServerHltvInfo::IsInitialized() const
 T ServerHltvInfo::MergeFrom(ServerHltvInfo const&)
 T ServerHltvInfo::New() const
 T ServerHltvInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T ServerHltvInfo::SetCachedSize(int) const
 T ServerHltvInfo::SharedDtor()
 T ServerHltvInfo::~ServerHltvInfo()
 T ServiceEventQueue()
 T SetActivityForSequence(CStudioHdr*, int)
 T SetBodygroup(CStudioHdr*, int&, int, int)
 T SetDebugBits(CBasePlayer*, char const*, int)
 T SetEventIndexForSequence(mstudioseqdesc_t&)
 T SetGCClientSystem(CGCClientSystem*)
 T SetHumanTeamFunctor::SetHumanTeamFunctor(int)
 T SetHumanTeamFunctor::operator()(CBasePlayer*)
 T SetIdentityMatrix(matrix3x4_t&)
 T SetSerializationDelimiter(CUtlCharConversion*)
 T SetupLightNormalFromProps(QAngle const&, float, float, Vector&)
 T SetupMatrixAngles(QAngle const&)
 T SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T SetupParentsForSpawnList(int, HierarchicalSpawn_t*)
 T SharedGetToken()
 T SharedParse(char const*)
 T SharedRandomFloat(char const*, float, float, int)
 T SharedRandomInt(char const*, int, int, int)
 T SharedVehicleViewSmoothing(CBasePlayer*, Vector*, QAngle*, bool, bool, Vector const&, ViewSmoothingData_t*, float*, bool)
 T ShiftSet::operator()(CNavArea*)
 T ShortestPathCost::operator()(CNavArea*, CNavArea*, CNavLadder const*, CFuncElevator const*, float)
 T ShouldRemoveThisRagdoll(CBaseAnimating*)
 T ShowViewPortPanelToAll(char const*, bool, KeyValues*)
 T SignbitsForPlane(cplane_t*)
 T SimThink_EntityChanged(CBaseEntity*)
 T SimThink_ListCopy(CBaseEntity**, int)
 T SimThink_ListCount()
 T SlerpBones(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T SlerpBonesSpeedy(CStudioHdr const*, QuaternionAligned*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T SmokeTrail::GetDataDescMap()
 T SmokeTrail::GetServerClass()
 T SmokeTrail::KeyValue(char const*, char const*)
 T SmokeTrail::SmokeTrail()
 T SmokeTrail::YouForgotToImplementOrDeclareServerClass()
 T SmokeTrail::~SmokeTrail()
 T SmoothCurve(float)
 T SolveQuadratic(float, float, float, float&, float&)
 T SoundCommandLessFunc(SoundCommand_t* const&, SoundCommand_t* const&)
 T SoundEmitterSystem()
 T SpawnAllEntities(int, HierarchicalSpawn_t*, bool)
 T SpawnBlood(Vector, Vector const&, int, float)
 T SpawnHierarchicalList(int, HierarchicalSpawn_t*, bool)
 T SpawnPoint::GetDataDescMap()
 T SpawnPoint::InputSetDisabled(inputdata_t&)
 T SpawnPoint::InputSetEnabled(inputdata_t&)
 T SpawnPoint::InputToggleEnabled(inputdata_t&)
 T SpawnPoint::~SpawnPoint()
 T Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
 T SplitContext(char const*, char*, int, char*, int, float*, char const*)
 T SporeExplosion::GetDataDescMap()
 T SporeExplosion::GetServerClass()
 T SporeExplosion::InputDisable(inputdata_t&)
 T SporeExplosion::InputEnable(inputdata_t&)
 T SporeExplosion::Spawn()
 T SporeExplosion::SporeExplosion()
 T SporeExplosion::YouForgotToImplementOrDeclareServerClass()
 T SporeExplosion::~SporeExplosion()
 T SporeTrail::GetDataDescMap()
 T SporeTrail::GetServerClass()
 T SporeTrail::SporeTrail()
 T SporeTrail::YouForgotToImplementOrDeclareServerClass()
 T SporeTrail::~SporeTrail()
 T StandardFilterRules(IHandleEntity*, int)
 T StayOnFloor(CGameTrace*, float)
 T StopScriptedScene(CBaseFlex*, CHandle<CBaseEntity>)
 T StrLessInsensitive(char const* const&, char const* const&)
 T StrLessSensitive(char const* const&, char const* const&)
 T StringAfterPrefix(char const*, char const*)
 T StringAfterPrefixCaseSensitive(char const*, char const*)
 T StringFieldToInt(char const*, CUtlVector<char const*, CUtlMemory<char const*, int> > const&, bool)
 T StringFieldToInt(char const*, char const**, int, bool)
 T StringLessThan(char const* const&, char const* const&)
 T StringSort(char const* const*, char const* const*)
 T Studio_AlignIKMatrix(matrix3x4a_t&, Vector const&)
 T Studio_AnimMovement(mstudioanimdesc_t*, float, float, Vector&, QAngle&)
 T Studio_AnimPosition(mstudioanimdesc_t*, float, Vector&, QAngle&)
 T Studio_BoneIndexByName(CStudioHdr const*, char const*)
 T Studio_BuildMatrices(CStudioHdr const*, QAngle const&, Vector const&, Vector const*, Quaternion const*, int, float, matrix3x4a_t*, int)
 T Studio_CPS(CStudioHdr const*, mstudioseqdesc_t&, int, float const*)
 T Studio_CalcBoneToBoneTransform(CStudioHdr const*, int, int, matrix3x4_t&)
 T Studio_CreateBoneCache(bonecacheparams_t&)
 T Studio_DestroyBoneCache(memhandle_t__*)
 T Studio_Duration(CStudioHdr const*, int, float const*)
 T Studio_FindAnimDistance(mstudioanimdesc_t*, float)
 T Studio_FindAttachment(CStudioHdr const*, char const*)
 T Studio_FindSeqDistance(CStudioHdr const*, int, float const*, float)
 T Studio_GetBoneCache(memhandle_t__*, bool)
 T Studio_GetDefaultSurfaceProps(CStudioHdr*)
 T Studio_GetKeyValueText(CStudioHdr const*, int)
 T Studio_GetMass(CStudioHdr*)
 T Studio_GetPoseParameter(CStudioHdr const*, int, float)
 T Studio_IKAnimationError(CStudioHdr const*, mstudioikrule_t*, mstudioanimdesc_t const*, float, Vector&, Quaternion&, float&)
 T Studio_IKRuleWeight(mstudioikrule_t&, mstudioanimdesc_t const*, float, int&, float&)
 T Studio_IKSequenceError(CStudioHdr const*, mstudioseqdesc_t&, int, float, int, float const*, mstudioanimdesc_t**, float*, ikcontextikrule_t&)
 T Studio_InvalidateBoneCacheIfNotMatching(memhandle_t__*, float)
 T Studio_LocalPoseParameter(CStudioHdr const*, float const*, mstudioseqdesc_t&, int, int, float&)
 T Studio_SeqAnims(CStudioHdr const*, mstudioseqdesc_t&, int, float const*, mstudioanimdesc_t**, float*)
 T Studio_SeqMovement(CStudioHdr const*, int, float, float, float const*, Vector&, QAngle&)
 T Studio_SeqVelocity(CStudioHdr const*, int, float, float const*, Vector&)
 T Studio_SetController(CStudioHdr const*, int, float, float&)
 T Studio_SetPoseParameter(CStudioHdr const*, int, float, float&)
 T Studio_SolveIK(int, int, int, Vector&, Vector&, Vector&, matrix3x4a_t*)
 T Studio_SolveIK(int, int, int, Vector&, matrix3x4a_t*)
 T Subdivider::SubdivideX(CNavArea*, bool, bool, int)
 T Subdivider::SubdivideY(CNavArea*, bool, bool, int)
 T SweepBoxToStudio(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, CGameTrace&)
 T Sys_LoadModule(char const*)
 T TE_ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T TE_BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamSpline(IRecipientFilter&, float, int, Vector*)
 T TE_BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T TE_BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, CBaseEntity*)
 T TE_Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T TE_Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T TE_DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float)
 T TE_EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T TE_Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char)
 T TE_FireBullets(int, unsigned short, Vector const&, QAngle const&, int, int, int, float, float, float, int)
 T TE_Fizz(IRecipientFilter&, float, CBaseEntity const*, int, int, int)
 T TE_FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T TE_GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T TE_KillPlayerAttachments(IRecipientFilter&, float, int)
 T TE_LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T TE_MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T TE_PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, int, int, color24)
 T TE_PlantBomb(int, Vector const&, PlantBombOption_t)
 T TE_PlayerAnimEvent(CBasePlayer*, PlayerAnimEvent_t, int)
 T TE_PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T TE_RadioIcon(IRecipientFilter&, float, CBaseEntity*)
 T TE_ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T TE_ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T TE_Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T TE_WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T TUnzip::Close()
 T TUnzip::Get(int, ZIPENTRY*)
 T TUnzip::Unzip(int, void*, unsigned int, unsigned int)
 T TaskFailureToString(int)
 T Templates_Add(CBaseEntity*, char const*, int, int)
 T Templates_FindByIndex(int)
 T Templates_GetEntityIOFixedMapData(int)
 T Templates_GetStringSize(int)
 T Templates_IndexRequiresEntityIOFixup(int)
 T Templates_ReconnectIOForGroup(CPointTemplate*)
 T Templates_RemoveByHammerID(int)
 T Templates_StartUniqueInstance()
 T TestEntityPosition(CBaseEntity*, unsigned int)
 T TestForValidCrouchArea(CNavNode*)
 T TestOverlapping::OverlapsExistingArea()
 T Test_InitRandomEntitySpawner(CCommand const&)
 T Test_ProxyToggle_EnableProxy(CCommand const&)
 T Test_ProxyToggle_SetValue(CCommand const&)
 T Test_RandomizeInPVS(CCommand const&)
 T Test_RemoveAllRandomEntities()
 T Test_SpawnRandomEntities(CCommand const&)
 T TheTonemapSystem()
 T ThinkRebalanceCompare(AIRebalanceInfo_t const*, AIRebalanceInfo_t const*)
 T TimedEventMgr_LessFunc(CEventRegister* const&, CEventRegister* const&)
 T TimescaleChanged(IConVar*, char const*, float)
 T TournamentEvent::ByteSize() const
 T TournamentEvent::Clear()
 T TournamentEvent::GetCachedSize() const
 T TournamentEvent::GetMetadata() const
 T TournamentEvent::IsInitialized() const
 T TournamentEvent::MergeFrom(TournamentEvent const&)
 T TournamentEvent::New() const
 T TournamentEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T TournamentEvent::SetCachedSize(int) const
 T TournamentEvent::SharedDtor()
 T TournamentEvent::~TournamentEvent()
 T TournamentMatchSetup::ByteSize() const
 T TournamentMatchSetup::Clear()
 T TournamentMatchSetup::GetCachedSize() const
 T TournamentMatchSetup::GetMetadata() const
 T TournamentMatchSetup::IsInitialized() const
 T TournamentMatchSetup::MergeFrom(TournamentMatchSetup const&)
 T TournamentMatchSetup::New() const
 T TournamentMatchSetup::SerializeWithCachedSizesToArray(unsigned char*) const
 T TournamentMatchSetup::SetCachedSize(int) const
 T TournamentMatchSetup::~TournamentMatchSetup()
 T TournamentPlayer::ByteSize() const
 T TournamentPlayer::Clear()
 T TournamentPlayer::GetCachedSize() const
 T TournamentPlayer::GetMetadata() const
 T TournamentPlayer::IsInitialized() const
 T TournamentPlayer::MergeFrom(TournamentPlayer const&)
 T TournamentPlayer::New() const
 T TournamentPlayer::SerializeWithCachedSizesToArray(unsigned char*) const
 T TournamentPlayer::SetCachedSize(int) const
 T TournamentPlayer::SharedDtor()
 T TournamentPlayer::~TournamentPlayer()
 T TournamentTeam::ByteSize() const
 T TournamentTeam::Clear()
 T TournamentTeam::GetCachedSize() const
 T TournamentTeam::GetMetadata() const
 T TournamentTeam::IsInitialized() const
 T TournamentTeam::MergeFrom(TournamentTeam const&)
 T TournamentTeam::New() const
 T TournamentTeam::SerializeWithCachedSizesToArray(unsigned char*) const
 T TournamentTeam::SetCachedSize(int) const
 T TournamentTeam::SharedDtor()
 T TournamentTeam::~TournamentTeam()
 T TraceAdjacentNode(int, Vector const&, Vector const&, CGameTrace*, float)
 T TracePlayerBBoxForGround(ITraceListData*, Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace&, float, bool, int*)
 T TraceToStudioCsgoHitgroupsPriority(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, Vector const&, float, CGameTrace&)
 T TrainSpeed(int, int)
 T TransferChildren(CBaseEntity*, CBaseEntity*)
 T TransferPhysicsObject(CBaseEntity*, CBaseEntity*, bool)
 T TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
 T UGCUtil_IsOfficialMap(unsigned long long)
 T UGCUtil_TimestampFile(char const*, unsigned int)
 T URLLabel_Factory()
 T UTIL_AddDebugLine(Vector const&, Vector const&, bool, bool)
 T UTIL_BloodDecalTrace(CGameTrace*, int)
 T UTIL_BloodDrips(Vector const&, Vector const&, int, int)
 T UTIL_BloodStream(Vector const&, Vector const&, int, int)
 T UTIL_BotsInGame()
 T UTIL_Bubbles(Vector const&, Vector const&, int)
 T UTIL_CSRadioMessage(IRecipientFilter&, int, int, char const*, char const*, char const*, char const*, char const*)
 T UTIL_CSSKickBotFromTeam(int)
 T UTIL_CheckBottom(CBaseEntity*, ITraceFilter*, float)
 T UTIL_ClearTrace(CGameTrace&)
 T UTIL_ClientPVSIsExpanded()
 T UTIL_ClientPrintAll(int, char const*, char const*, char const*, char const*, char const*)
 T UTIL_ClientPrintFilter(IRecipientFilter&, int, char const*, char const*, char const*, char const*, char const*)
 T UTIL_ClientsInGame()
 T UTIL_ClipTraceToPlayers(Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace*)
 T UTIL_ConstructBotNetName(char*, int, BotProfile const*)
 T UTIL_DecalTrace(CGameTrace*, char const*)
 T UTIL_DecodeICE(unsigned char*, int, unsigned char const*)
 T UTIL_DisableRemoveImmediate()
 T UTIL_DrawBeamPoints(Vector, Vector, int, unsigned char, unsigned char, unsigned char)
 T UTIL_DrawBox(Extent*, int, int, int, int)
 T UTIL_DrawOverlayLines()
 T UTIL_DrawPositioningOverlay(float)
 T UTIL_DropToFloor(CBaseEntity*, unsigned int, CBaseEntity*)
 T UTIL_EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float, float*)
 T UTIL_EmitGroupIDSuit(edict_t*, int)
 T UTIL_EmitGroupnameSuit(edict_t*, char const*)
 T UTIL_EmitSoundSuit(edict_t*, char const*)
 T UTIL_EnableRemoveImmediate()
 T UTIL_EnsureInstanceBaseline(char const*)
 T UTIL_EntitiesInBox(Vector const&, Vector const&, CFlaggedEntitiesEnum*)
 T UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)
 T UTIL_EntitiesInSphere(Vector const&, float, CFlaggedEntitiesEnum*)
 T UTIL_EntityByIndex(int)
 T UTIL_EntityHasMatchingRootParent(CBaseEntity*, CBaseEntity*)
 T UTIL_EntityInSolid(CBaseEntity*)
 T UTIL_FindClientInPVS(Vector const&, Vector const&)
 T UTIL_FindClientInPVS(edict_t*)
 T UTIL_FindClientInPVSGuts(edict_t*, unsigned char*, unsigned int)
 T UTIL_FindClientInVisibilityPVS(edict_t*)
 T UTIL_FreeFile(unsigned char*)
 T UTIL_FunctionFromName(datamap_t*, char const*, void (CBaseEntity::**)(inputdata_t&))
 T UTIL_GetAchievementEventMask()
 T UTIL_GetClosestPlayer(Vector const&, float*)
 T UTIL_GetCommandClient()
 T UTIL_GetCommandClientIndex()
 T UTIL_GetDebugColorForRelationship(int, int&, int&, int&)
 T UTIL_GetEffectiveRange(CCSPlayer*)
 T UTIL_GetListenServerHost()
 T UTIL_GetLocalPlayer()
 T UTIL_GetModDir(char*, unsigned int)
 T UTIL_GetNextCommandLength(char const*, int, int*, int*)
 T UTIL_GetPlayerConnectionInfo(int, int&, int&)
 T UTIL_HudHintText(CBaseEntity*, char const*)
 T UTIL_HudMessage(CBasePlayer*, hudtextparms_s const&, char const*)
 T UTIL_HudMessageAll(hudtextparms_s const&, char const*)
 T UTIL_HumansInGame(bool, bool)
 T UTIL_HumansOnTeam(int, bool)
 T UTIL_ImpactTrace(CGameTrace*, int, char*)
 T UTIL_IsCommandIssuedByServerAdmin()
 T UTIL_IsDedicatedServer()
 T UTIL_IsLowViolence()
 T UTIL_IsMasterTriggered(string_t, CBaseEntity*)
 T UTIL_IsNameTaken(char const*, bool)
 T UTIL_IsSpaceEmpty(CBaseEntity*, Vector const&, Vector const&, unsigned int, ITraceFilter*)
 T UTIL_IsTeamAllBots(int)
 T UTIL_IsVisibleToTeam(Vector const&, int)
 T UTIL_ItemCanBeTouchedByPlayer(CBaseEntity*, CBasePlayer*)
 T UTIL_KickBotFromTeam(int, bool)
 T UTIL_LoadFileForMe(char const*, int*)
 T UTIL_LogPrintf(char const*, ...)
 T UTIL_ParentToWorldSpace(CBaseEntity*, Vector&, QAngle&)
 T UTIL_ParentToWorldSpace(CBaseEntity*, Vector&, Quaternion&)
 T UTIL_ParticleTracer(char const*, Vector const&, Vector const&, int, int, bool)
 T UTIL_PlayerByIndex(int)
 T UTIL_PlayerByName(char const*)
 T UTIL_PlayerByUserId(int)
 T UTIL_PlayerDecalTrace(CGameTrace*, int)
 T UTIL_PointAtEntity(CBaseEntity*, CBaseEntity*)
 T UTIL_PointAtNamedEntity(CBaseEntity*, string_t)
 T UTIL_PrecacheDecal(char const*, bool)
 T UTIL_PrecacheOther(char const*, char const*)
 T UTIL_RandomBloodVector()
 T UTIL_RecordAchievementEvent(char const*, CBasePlayer*)
 T UTIL_Remove(CBaseEntity*)
 T UTIL_Remove(IServerNetworkable*)
 T UTIL_RemoveHierarchy(CBaseEntity*)
 T UTIL_RemoveImmediate(CBaseEntity*)
 T UTIL_RestartAmbientSounds()
 T UTIL_SayText2Filter(IRecipientFilter&, CBasePlayer*, EUtilSayTextMessageType_t, char const*, char const*, char const*, char const*, char const*)
 T UTIL_SayTextFilter(IRecipientFilter&, char const*, CBasePlayer*, EUtilSayTextMessageType_t)
 T UTIL_ScaleForGravity(float)
 T UTIL_ScreenFade(CBaseEntity*, color32_s const&, float, float, int)
 T UTIL_ScreenFadeAll(color32_s const&, float, float, int)
 T UTIL_ScreenFadeWrite(ScreenFade_t const&, CBaseEntity*)
 T UTIL_ScreenShake(Vector const&, float, float, float, float, ShakeCommand_t, bool, CUtlVector<CBasePlayer*, CUtlMemory<CBasePlayer*, int> >*)
 T UTIL_ScreenTilt(Vector const&, QAngle const&, float, float, float, ShakeCommand_t, bool)
 T UTIL_SendClientCommandKVToPlayer(KeyValues*, CBasePlayer*)
 T UTIL_SetClientVisibilityPVS(edict_t*, unsigned char const*, int)
 T UTIL_SetModel(CBaseEntity*, char const*)
 T UTIL_SetOrigin(CBaseEntity*, Vector const&, bool)
 T UTIL_SetSize(CBaseEntity*, Vector const&, Vector const&)
 T UTIL_ShouldShowBlood(int)
 T UTIL_ShowMessage(char const*, CBasePlayer*)
 T UTIL_ShowMessageAll(char const*)
 T UTIL_Smoke(Vector const&, float, float)
 T UTIL_SnapDirectionToAxis(Vector&, float)
 T UTIL_SpectatorsInGame()
 T UTIL_StringToFloatArray(float*, int, char const*)
 T UTIL_StringToVector(float*, char const*)
 T UTIL_StripToken(char const*, char*)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CGameTrace*)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace*)
 T UTIL_TraceLineFilterEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, int, CGameTrace*)
 T UTIL_TraceModel(Vector const&, Vector const&, Vector const&, Vector const&, CBaseEntity*, int, CGameTrace*)
 T UTIL_Tracer(Vector const&, Vector const&, int, int, float, bool, char const*, int)
 T UTIL_TransferPoseParameters(CBaseEntity*, CBaseEntity*)
 T UTIL_ValidateSoundName(string_t&, char const*)
 T UTIL_VarArgs(char const*, ...)
 T UTIL_VecToYaw(Vector const&)
 T UTIL_ViewPunch(Vector const&, QAngle, float, bool)
 T UTIL_WaterLevel(Vector const&, float, float)
 T UTIL_WorldToParentSpace(CBaseEntity*, Vector&, QAngle&)
 T UTIL_WorldToParentSpace(CBaseEntity*, Vector&, Quaternion&)
 T UTIL_YawToVector(float)
 T UniqueIdFromString(UniqueId_t*, char const*, int)
 T UnlinkChild(CBaseEntity*, CBaseEntity*)
 T UnlinkFromParent(CBaseEntity*)
 T Unserialize(CUtlBuffer&, CUtlBinaryBlock&)
 T Unserialize(CUtlBuffer&, CUtlString&)
 T Unserialize(CUtlBuffer&, Color&)
 T Unserialize(CUtlBuffer&, DmeTime_t&)
 T Unserialize(CUtlBuffer&, QAngle&)
 T Unserialize(CUtlBuffer&, Quaternion&)
 T Unserialize(CUtlBuffer&, VMatrix&)
 T Unserialize(CUtlBuffer&, Vector&)
 T Unserialize(CUtlBuffer&, Vector2D&)
 T Unserialize(CUtlBuffer&, Vector4D&)
 T Unserialize(CUtlBuffer&, bool&)
 T Unserialize(CUtlBuffer&, float&)
 T Unserialize(CUtlBuffer&, int&)
 T UnserializeDMX(CUtlBuffer&, CDmxElement**, char const*)
 T UnserializeTextDMX(char const*, CUtlBuffer&, CDmxElement**)
 T UnzipFile(char const*, char const*)
 T UnzipItem(HZIP__*, int, void*, unsigned int, unsigned int)
 T UpdateAllClientData()
 T UpdateQueryCache()
 T UseEntityState::GetName() const
 T UseEntityState::OnEnter(CCSBot*)
 T UseEntityState::OnExit(CCSBot*)
 T UseEntityState::OnUpdate(CCSBot*)
 T UtlVectorTemplate<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::EnsureCapacity(void*, int, int)
 T VMatrix::InverseTR(VMatrix&) const
 T VMatrix::MatrixMul(VMatrix const&, VMatrix&) const
 T VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T VMatrix::Transpose() const
 T VMatrix::operator=(VMatrix const&)
 T VScriptCompileScript(char const*, bool)
 T VScriptRunScript(char const*, HSCRIPT__*, bool)
 T VScriptServerInit()
 T VScriptServerReplaceClosures(char const*, HSCRIPT__*, bool)
 T V_AppendSlash(char*, int, char)
 T V_ComposeFileName(char const*, char const*, char*, int)
 T V_DefaultExtension(char*, char const*, int)
 T V_ExtractFileExtension(char const*, char*, int)
 T V_ExtractFilePath(char const*, char*, int)
 T V_FileBase(char const*, char*, int)
 T V_FixSlashes(char*, char)
 T V_FixupPathName(char*, int, char const*)
 T V_GetFileExtension(char const*)
 T V_IsAbsolutePath(char const*)
 T V_RemoveDotSlashes(char*, char)
 T V_SetExtension(char*, char const*, int)
 T V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_StrSubst(char const*, char const*, char const*, char*, int, bool)
 T V_StringMatchesPattern(char const*, char const*, int)
 T V_StringToColor32(color32_s*, char const*)
 T V_StringToIntArray(int*, int, char const*)
 T V_StringToVector(float*, char const*)
 T V_StripExtension(char const*, char*, int)
 T V_StripFilename(char*)
 T V_StripLastDir(char*, int)
 T V_StripTrailingSlash(char*)
 T V_UnqualifiedFileName(char const*)
 T V_atod(char const*)
 T V_atof(char const*)
 T V_atoi(char const*)
 T V_atoui64(char const*)
 T V_snprintf(char*, int, char const*, ...)
 T V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 T V_strcasecmp(char const*, char const*)
 T V_stristr(char const*, char const*)
 T V_stristr(char*, char const*)
 T V_strncasecmp(char const*, char const*, int)
 T V_strncat(char*, char const*, unsigned long, int)
 T V_strnchr(char const*, char, int)
 T V_strncmp(char const*, char const*, int)
 T V_strncpy(char*, char const*, int)
 T V_strnicmp(char const*, char const*, int)
 T V_strnistr(char const*, char const*, int)
 T V_vsnprintf(char*, int, char const*, char*)
 T V_vsnprintfRet(char*, int, char const*, char*, bool*)
 T V_wcsncpy(wchar_t*, wchar_t const*, int)
 T VecCheckToss(CBaseEntity*, ITraceFilter*, Vector, Vector, float, float, bool, Vector*, Vector*)
 T VecCheckToss(CBaseEntity*, Vector, Vector, float, float, bool, Vector*, Vector*)
 T VectorAngles(Vector const&, QAngle&)
 T VectorAngles(Vector const&, Vector const&, QAngle&)
 T VectorIRotate(float const*, matrix3x4_t const&, float*)
 T VectorITransform(float const*, matrix3x4_t const&, float*)
 T VectorNormalize(Vector&)
 T VectorRotate(Vector const&, QAngle const&, Vector&)
 T VectorRotate(float const*, matrix3x4_t const&, float*)
 T VectorTransform(float const*, matrix3x4_t const&, float*)
 T VectorVectors(Vector const&, Vector&, Vector&)
 T VectorYawRotate(Vector const&, float, Vector&)
 T VerifySequenceIndex(CStudioHdr*)
 T VisibilityMonitor_AddEntity(CBaseEntity*, float, bool (*)(CBaseEntity*, CBasePlayer*), bool (*)(CBaseEntity*, CBasePlayer*))
 T W_Precache()
 T WatchPositionChanges(CBaseEntity*, CBaseEntity*)
 T WatchableMatchInfo::ByteSize() const
 T WatchableMatchInfo::Clear()
 T WatchableMatchInfo::GetCachedSize() const
 T WatchableMatchInfo::GetMetadata() const
 T WatchableMatchInfo::IsInitialized() const
 T WatchableMatchInfo::MergeFrom(WatchableMatchInfo const&)
 T WatchableMatchInfo::New() const
 T WatchableMatchInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T WatchableMatchInfo::SetCachedSize(int) const
 T WatchableMatchInfo::SharedDtor()
 T WatchableMatchInfo::~WatchableMatchInfo()
 T WaveTrace(char const*, char const*)
 T WeaponClassAsString(CSWeaponType)
 T WeaponClassFromString(char const*)
 T WeaponClassFromWeaponID(CSWeaponID)
 T WeaponIDToAlias(int)
 T WeaponIdAsString(CSWeaponID)
 T WeaponIdFromString(char const*)
 T WeaponInfoLookup::WeaponInfoLookup(unsigned long, _fieldtypes, char const*)
 T WeaponManager_AmmoMod(CBaseCombatWeapon*)
 T WeaponRecoilData::GenerateRecoilPatternForItemDefinition(unsigned short)
 T WeaponRecoilData::GenerateRecoilTable(WeaponRecoilData::RecoilData*)
 T WeaponRecoilData::GetRecoilOffsets(CWeaponCSBase*, int, int, float&, float&)
 T WeaponRecoilData::~WeaponRecoilData()
 T WeaponResourcesPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T WildcardMatch(char const*, char const*)
 T WorldSpaceSlerp(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, Quaternion const*, Vector const*, float, int)
 T _V_UTF8ToUnicode(char const*, wchar_t*, int)
 T _V_UnicodeToUTF8(wchar_t const*, char*, int)
 T _V_memcpy(void*, void const*, int)
 T _V_memmove(void*, void const*, int)
 T _V_memset(void*, int, int)
 T _V_strcmp(char const*, char const*)
 T _V_strcpy(char*, char const*)
 T _V_stricmp(char const*, char const*)
 T _V_strlen(char const*)
 T _V_strlower(char*)
 T _V_strrchr(char const*, char)
 T _V_strstr(char const*, char const*)
 T _V_wcscmp(wchar_t const*, wchar_t const*)
 T _V_wcslen(wchar_t const*)
 T __CreateGameRules_CCSGameRules()
 T __CreateGameRules_CMultiplayRules()
 T __CreateGameRules_CTeamplayRules()
 T __clang_call_terminate
 T __cxa_pure_virtual
 T __gnu_cxx::new_allocator<std::pair<int const, std::string> >::construct(std::pair<int const, std::string>*, std::pair<int const, std::string> const&)
 T __gnu_cxx::new_allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::construct(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T __gnu_cxx::new_allocator<std::pair<std::string const, std::pair<void const*, int> > >::construct(std::pair<std::string const, std::pair<void const*, int> >*, std::pair<std::string const, std::pair<void const*, int> > const&)
 T __gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&)
 T adler32(unsigned long, unsigned char const*, unsigned int)
 T bf_write::WriteBitCoord(float)
 T bf_write::WriteBitVec3Coord(Vector const&)
 T bf_write::WriteBits(void const*, int)
 T bf_write::WriteByte(unsigned int)
 T bf_write::WriteChar(int)
 T bf_write::WriteFloat(float)
 T bf_write::WriteSBitLong(int, int)
 T bf_write::WriteShort(int)
 T bool CBotManager::ForEachGrenade<GrenadeResponse>(GrenadeResponse&)
 T bool CCSNavPath::Compute<HostagePathCost>(Vector const&, Vector const&, HostagePathCost&)
 T bool CCSNavPath::Compute<PathCost>(Vector const&, Vector const&, PathCost&)
 T bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)
 T bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)
 T bool CNavMesh::StitchMesh<AreaSet>(AreaSet&)
 T bool CNavMesh::StitchMesh<IncrementallyGeneratedAreas>(IncrementallyGeneratedAreas&)
 T bool ForEachPlayer<CanPlayerSeeTargetEntityFunctor>(CanPlayerSeeTargetEntityFunctor&)
 T bool ForEachPlayer<CheckLookAt>(CheckLookAt&)
 T bool ForEachPlayer<CollectBots>(CollectBots&)
 T bool ForEachPlayer<DisableAutokick>(DisableAutokick&)
 T bool ForEachPlayer<DrawTravelTime>(DrawTravelTime&)
 T bool ForEachPlayer<FOVClearOfFriends>(FOVClearOfFriends&)
 T bool ForEachPlayer<IsLadderFreeFunctor>(IsLadderFreeFunctor&)
 T bool ForEachPlayer<NotVIP>(NotVIP&)
 T bool ForEachPlayer<RevertBotsFunctor>(RevertBotsFunctor&)
 T bool ForEachPlayer<SetHumanTeamFunctor>(SetHumanTeamFunctor&)
 T bool NavAreaBuildPath<ApproachAreaCost>(CNavArea*, CNavArea*, Vector const*, ApproachAreaCost&, CNavArea**, float, int, bool)
 T bool NavAreaBuildPath<HostagePathCost>(CNavArea*, CNavArea*, Vector const*, HostagePathCost&, CNavArea**, float, int, bool)
 T bool NavAreaBuildPath<PathCost>(CNavArea*, CNavArea*, Vector const*, PathCost&, CNavArea**, float, int, bool)
 T bool NavAreaBuildPath<ShortestPathCost>(CNavArea*, CNavArea*, Vector const*, ShortestPathCost&, CNavArea**, float, int, bool)
 T bool Unserialize<CUtlBinaryBlock>(CUtlBuffer&, CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >&)
 T bool Unserialize<CUtlString>(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T bool Unserialize<Color>(CUtlBuffer&, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T bool Unserialize<DmeTime_t>(CUtlBuffer&, CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> >&)
 T bool Unserialize<QAngle>(CUtlBuffer&, CUtlVector<QAngle, CUtlMemory<QAngle, int> >&)
 T bool Unserialize<Quaternion>(CUtlBuffer&, CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >&)
 T bool Unserialize<VMatrix>(CUtlBuffer&, CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >&)
 T bool Unserialize<Vector2D>(CUtlBuffer&, CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >&)
 T bool Unserialize<Vector4D>(CUtlBuffer&, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >&)
 T bool Unserialize<Vector>(CUtlBuffer&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T bool Unserialize<bool>(CUtlBuffer&, CUtlVector<bool, CUtlMemory<bool, int> >&)
 T bool Unserialize<float>(CUtlBuffer&, CUtlVector<float, CUtlMemory<float, int> >&)
 T bool Unserialize<int>(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> >&)
 T cc_CreatePredictionError_f(CCommand const&)
 T cc_PauseMatch(CCommand const&)
 T cc_ResumeMatch(CCommand const&)
 T cc_ScrambleTeams(CCommand const&)
 T cc_SkipNextMapInCycle()
 T cc_SwapTeams(CCommand const&)
 T cc_SwitchTeams(CCommand const&)
 T char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 T chickenPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)
 T datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)
 T datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)
 T datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)
 T datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)
 T datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)
 T datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)
 T datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)
 T datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)
 T datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)
 T datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)
 T datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)
 T datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)
 T datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)
 T datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)
 T datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)
 T datamap_t* DataMapInit<CAI_Path>(CAI_Path*)
 T datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)
 T datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)
 T datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)
 T datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)
 T datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)
 T datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)
 T datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)
 T datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)
 T datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)
 T datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)
 T datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)
 T datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)
 T datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)
 T datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)
 T datamap_t* DataMapInit<CBaseButton>(CBaseButton*)
 T datamap_t* DataMapInit<CBaseCSGrenadeProjectile>(CBaseCSGrenadeProjectile*)
 T datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)
 T datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)
 T datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)
 T datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)
 T datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)
 T datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)
 T datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)
 T datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)
 T datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)
 T datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)
 T datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)
 T datamap_t* DataMapInit<CBaseTeamObjectiveResource>(CBaseTeamObjectiveResource*)
 T datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)
 T datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)
 T datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)
 T datamap_t* DataMapInit<CBombTarget>(CBombTarget*)
 T datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)
 T datamap_t* DataMapInit<CBreakable>(CBreakable*)
 T datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)
 T datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)
 T datamap_t* DataMapInit<CBubbling>(CBubbling*)
 T datamap_t* DataMapInit<CBuyZone>(CBuyZone*)
 T datamap_t* DataMapInit<CCSPlayer>(CCSPlayer*)
 T datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)
 T datamap_t* DataMapInit<CChicken>(CChicken*)
 T datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)
 T datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)
 T datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)
 T datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)
 T datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)
 T datamap_t* DataMapInit<CCredits>(CCredits*)
 T datamap_t* DataMapInit<CDecal>(CDecal*)
 T datamap_t* DataMapInit<CDecoyProjectile>(CDecoyProjectile*)
 T datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)
 T datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)
 T datamap_t* DataMapInit<CEmbers>(CEmbers*)
 T datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)
 T datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)
 T datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)
 T datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)
 T datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)
 T datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)
 T datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)
 T datamap_t* DataMapInit<CEnvFade>(CEnvFade*)
 T datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)
 T datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)
 T datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)
 T datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)
 T datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)
 T datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)
 T datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)
 T datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)
 T datamap_t* DataMapInit<CEnvShake>(CEnvShake*)
 T datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)
 T datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)
 T datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)
 T datamap_t* DataMapInit<CEnvWind>(CEnvWind*)
 T datamap_t* DataMapInit<CFire>(CFire*)
 T datamap_t* DataMapInit<CFishPool>(CFishPool*)
 T datamap_t* DataMapInit<CFogController>(CFogController*)
 T datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)
 T datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)
 T datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)
 T datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)
 T datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)
 T datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)
 T datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)
 T datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)
 T datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)
 T datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)
 T datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)
 T datamap_t* DataMapInit<CGameRoundEnd>(CGameRoundEnd*)
 T datamap_t* DataMapInit<CGameUI>(CGameUI*)
 T datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)
 T datamap_t* DataMapInit<CGib>(CGib*)
 T datamap_t* DataMapInit<CGibShooter>(CGibShooter*)
 T datamap_t* DataMapInit<CGlobalState>(CGlobalState*)
 T datamap_t* DataMapInit<CGunTarget>(CGunTarget*)
 T datamap_t* DataMapInit<CHostage>(CHostage*)
 T datamap_t* DataMapInit<CHostageRescueZone>(CHostageRescueZone*)
 T datamap_t* DataMapInit<CInferno>(CInferno*)
 T datamap_t* DataMapInit<CItem>(CItem*)
 T datamap_t* DataMapInit<CItemDefuser>(CItemDefuser*)
 T datamap_t* DataMapInit<CItemSoda>(CItemSoda*)
 T datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)
 T datamap_t* DataMapInit<CLight>(CLight*)
 T datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)
 T datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)
 T datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)
 T datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)
 T datamap_t* DataMapInit<CLogicCase>(CLogicCase*)
 T datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)
 T datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)
 T datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)
 T datamap_t* DataMapInit<CLogicEventListenerItemEquip>(CLogicEventListenerItemEquip*)
 T datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)
 T datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)
 T datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)
 T datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)
 T datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)
 T datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)
 T datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)
 T datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)
 T datamap_t* DataMapInit<CMathCounter>(CMathCounter*)
 T datamap_t* DataMapInit<CMathRemap>(CMathRemap*)
 T datamap_t* DataMapInit<CMessage>(CMessage*)
 T datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)
 T datamap_t* DataMapInit<CMultiSource>(CMultiSource*)
 T datamap_t* DataMapInit<CNoDefuseArea>(CNoDefuseArea*)
 T datamap_t* DataMapInit<COuttroStats>(COuttroStats*)
 T datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)
 T datamap_t* DataMapInit<CPathCorner>(CPathCorner*)
 T datamap_t* DataMapInit<CPathTrack>(CPathTrack*)
 T datamap_t* DataMapInit<CPhysBox>(CPhysBox*)
 T datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)
 T datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)
 T datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)
 T datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)
 T datamap_t* DataMapInit<CPhysForce>(CPhysForce*)
 T datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)
 T datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)
 T datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)
 T datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)
 T datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)
 T datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)
 T datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)
 T datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)
 T datamap_t* DataMapInit<CPlantedC4>(CPlantedC4*)
 T datamap_t* DataMapInit<CPlantedC4Training>(CPlantedC4Training*)
 T datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)
 T datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)
 T datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)
 T datamap_t* DataMapInit<CPointCamera>(CPointCamera*)
 T datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)
 T datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)
 T datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)
 T datamap_t* DataMapInit<CPointHurt>(CPointHurt*)
 T datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)
 T datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)
 T datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)
 T datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)
 T datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)
 T datamap_t* DataMapInit<CPoseController>(CPoseController*)
 T datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)
 T datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)
 T datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)
 T datamap_t* DataMapInit<CPropJeep>(CPropJeep*)
 T datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)
 T datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)
 T datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)
 T datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)
 T datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)
 T datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)
 T datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)
 T datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)
 T datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)
 T datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)
 T datamap_t* DataMapInit<CSceneManager>(CSceneManager*)
 T datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)
 T datamap_t* DataMapInit<CSmokeGrenadeProjectile>(CSmokeGrenadeProjectile*)
 T datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)
 T datamap_t* DataMapInit<CSprite>(CSprite*)
 T datamap_t* DataMapInit<CStatueProp>(CStatueProp*)
 T datamap_t* DataMapInit<CSurroundTest>(CSurroundTest*)
 T datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)
 T datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)
 T datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)
 T datamap_t* DataMapInit<CTesla>(CTesla*)
 T datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)
 T datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)
 T datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)
 T datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)
 T datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)
 T datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)
 T datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)
 T datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)
 T datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)
 T datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)
 T datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)
 T datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)
 T datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)
 T datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)
 T datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)
 T datamap_t* DataMapInit<CVoteController>(CVoteController*)
 T datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)
 T datamap_t* DataMapInit<CWeaponCSBase>(CWeaponCSBase*)
 T datamap_t* DataMapInit<CWeightButton>(CWeightButton*)
 T datamap_t* DataMapInit<CWindowPane>(CWindowPane*)
 T datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)
 T datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)
 T datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)
 T decoy_projectilePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T dyld_stub_binding_helper
 T entityflamePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T env_entity_freezingPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T findJumpDownArea(Vector const*, NavDirType)
 T fire_cracker_blastPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T flashbang_projectilePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T float AttributeConvertFromFloat<float>(float)
 T float CAttributeManager::AttribHookValue<float>(float, char const*, CBaseEntity const*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*, bool)
 T float NavAreaTravelDistance<PathCost>(CNavArea*, CNavArea*, PathCost&, float)
 T float NavAreaTravelDistance<ShortestPathCost>(CNavArea*, CNavArea*, ShortestPathCost&, float)
 T float NavAreaTravelDistance<ShortestPathCost>(Vector const&, Vector const&, ShortestPathCost&)
 T fogparams_t::NetworkStateChanged()
 T fogparams_t::NetworkStateChanged(void*)
 T fogparams_t::operator!=(fogparams_t const&) const
 T fogplayerparams_t::NetworkStateChanged()
 T fogplayerparams_t::NetworkStateChanged(void*)
 T hegrenade_projectilePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T hostage_carriable_propPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T huft_build(unsigned int*, unsigned int, unsigned int, unsigned int const*, unsigned int const*, inflate_huft_s**, unsigned int*, inflate_huft_s*, unsigned int*, unsigned int*)
 T infernoPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T inflate(z_stream_s*, int)
 T inflateInit2(z_stream_s*)
 T inflateReset(z_stream_s*)
 T inflate_blocks(inflate_blocks_state*, z_stream_s*, int)
 T inflate_blocks_free(inflate_blocks_state*, z_stream_s*)
 T inflate_blocks_new(z_stream_s*, unsigned long (*)(unsigned long, unsigned char const*, unsigned int), unsigned int)
 T inflate_codes(inflate_blocks_state*, z_stream_s*, int)
 T inflate_fast(unsigned int, unsigned int, inflate_huft_s const*, inflate_huft_s const*, inflate_blocks_state*, z_stream_s*)
 T inflate_flush(inflate_blocks_state*, z_stream_s*, int)
 T inflate_trees_dynamic(unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, inflate_huft_s**, inflate_huft_s**, inflate_huft_s*, z_stream_s*)
 T int AttributeConvertFromFloat<int>(float)
 T int CAttributeManager::AttribHookValue<int>(int, char const*, CBaseEntity const*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*, bool)
 T int CRestore::ReadSimple<Quaternion>(Quaternion*, int, int)
 T int CRestore::ReadSimple<VMatrix>(VMatrix*, int, int)
 T int CRestore::ReadSimple<Vector>(Vector*, int, int)
 T int CRestore::ReadSimple<bool>(bool*, int, int)
 T int CRestore::ReadSimple<char>(char*, int, int)
 T int CRestore::ReadSimple<float>(float*, int, int)
 T int CRestore::ReadSimple<int>(int*, int, int)
 T int CRestore::ReadSimple<interval_t>(interval_t*, int, int)
 T int CRestore::ReadSimple<short>(short*, int, int)
 T int CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoRemove<unsigned int>(unsigned int, unsigned int)
 T int CollectPlayers<CBasePlayer>(CUtlVector<CBasePlayer*, CUtlMemory<CBasePlayer*, int> >*, int, bool, bool)
 T int CollectPlayers<CCSPlayer>(CUtlVector<CCSPlayer*, CUtlMemory<CCSPlayer*, int> >*, int, bool, bool)
 T int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)
 T int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)
 T int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)
 T int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)
 T int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)
 T int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)
 T int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)
 T int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_BCCNonLocalPlayerExclusive::ignored>(DT_BCCNonLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)
 T int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)
 T int ServerClassInit<DT_BaseAttributableItem::ignored>(DT_BaseAttributableItem::ignored*)
 T int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)
 T int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)
 T int ServerClassInit<DT_BaseCSGrenade::ignored>(DT_BaseCSGrenade::ignored*)
 T int ServerClassInit<DT_BaseCSGrenadeProjectile::ignored>(DT_BaseCSGrenadeProjectile::ignored*)
 T int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)
 T int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)
 T int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)
 T int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)
 T int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)
 T int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)
 T int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)
 T int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)
 T int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)
 T int ServerClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)
 T int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)
 T int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)
 T int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)
 T int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)
 T int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)
 T int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)
 T int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)
 T int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)
 T int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)
 T int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)
 T int ServerClassInit<DT_CChicken::ignored>(DT_CChicken::ignored*)
 T int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)
 T int ServerClassInit<DT_CHostage::ignored>(DT_CHostage::ignored*)
 T int ServerClassInit<DT_CSGameRules::ignored>(DT_CSGameRules::ignored*)
 T int ServerClassInit<DT_CSGameRulesProxy::ignored>(DT_CSGameRulesProxy::ignored*)
 T int ServerClassInit<DT_CSLocalPlayerExclusive::ignored>(DT_CSLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_CSNonLocalPlayerExclusive::ignored>(DT_CSNonLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_CSPlayer::ignored>(DT_CSPlayer::ignored*)
 T int ServerClassInit<DT_CSPlayerResource::ignored>(DT_CSPlayerResource::ignored*)
 T int ServerClassInit<DT_CSRagdoll::ignored>(DT_CSRagdoll::ignored*)
 T int ServerClassInit<DT_CSTeam::ignored>(DT_CSTeam::ignored*)
 T int ServerClassInit<DT_CascadeLight::ignored>(DT_CascadeLight::ignored*)
 T int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)
 T int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)
 T int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)
 T int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)
 T int ServerClassInit<DT_DecoyGrenade::ignored>(DT_DecoyGrenade::ignored*)
 T int ServerClassInit<DT_DecoyProjectile::ignored>(DT_DecoyProjectile::ignored*)
 T int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)
 T int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)
 T int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)
 T int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)
 T int ServerClassInit<DT_EconEntity::ignored>(DT_EconEntity::ignored*)
 T int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)
 T int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)
 T int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)
 T int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)
 T int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)
 T int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)
 T int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)
 T int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)
 T int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)
 T int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)
 T int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)
 T int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)
 T int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)
 T int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)
 T int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)
 T int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)
 T int ServerClassInit<DT_FireCrackerBlast::ignored>(DT_FireCrackerBlast::ignored*)
 T int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)
 T int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)
 T int ServerClassInit<DT_Flashbang::ignored>(DT_Flashbang::ignored*)
 T int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)
 T int ServerClassInit<DT_FootstepControl::ignored>(DT_FootstepControl::ignored*)
 T int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)
 T int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)
 T int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)
 T int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)
 T int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)
 T int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)
 T int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)
 T int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)
 T int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)
 T int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)
 T int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)
 T int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)
 T int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)
 T int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)
 T int ServerClassInit<DT_HEGrenade::ignored>(DT_HEGrenade::ignored*)
 T int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)
 T int ServerClassInit<DT_HostageCarriableProp::ignored>(DT_HostageCarriableProp::ignored*)
 T int ServerClassInit<DT_IncendiaryGrenade::ignored>(DT_IncendiaryGrenade::ignored*)
 T int ServerClassInit<DT_Inferno::ignored>(DT_Inferno::ignored*)
 T int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)
 T int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)
 T int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)
 T int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)
 T int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)
 T int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)
 T int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)
 T int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)
 T int ServerClassInit<DT_MolotovGrenade::ignored>(DT_MolotovGrenade::ignored*)
 T int ServerClassInit<DT_MolotovProjectile::ignored>(DT_MolotovProjectile::ignored*)
 T int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)
 T int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)
 T int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)
 T int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)
 T int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)
 T int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)
 T int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)
 T int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)
 T int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)
 T int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)
 T int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)
 T int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)
 T int ServerClassInit<DT_PlantedC4::ignored>(DT_PlantedC4::ignored*)
 T int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)
 T int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)
 T int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)
 T int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)
 T int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)
 T int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)
 T int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)
 T int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)
 T int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)
 T int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)
 T int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)
 T int ServerClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)
 T int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)
 T int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)
 T int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)
 T int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)
 T int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)
 T int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)
 T int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)
 T int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)
 T int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)
 T int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)
 T int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)
 T int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)
 T int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)
 T int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)
 T int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)
 T int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)
 T int ServerClassInit<DT_SmokeGrenade::ignored>(DT_SmokeGrenade::ignored*)
 T int ServerClassInit<DT_SmokeGrenadeProjectile::ignored>(DT_SmokeGrenadeProjectile::ignored*)
 T int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)
 T int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)
 T int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)
 T int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)
 T int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)
 T int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)
 T int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)
 T int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)
 T int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)
 T int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)
 T int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)
 T int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)
 T int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)
 T int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)
 T int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)
 T int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)
 T int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)
 T int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)
 T int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)
 T int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)
 T int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)
 T int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)
 T int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)
 T int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)
 T int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)
 T int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)
 T int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)
 T int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)
 T int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)
 T int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)
 T int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)
 T int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)
 T int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)
 T int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)
 T int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)
 T int ServerClassInit<DT_TEFireBullets::ignored>(DT_TEFireBullets::ignored*)
 T int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)
 T int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)
 T int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)
 T int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)
 T int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)
 T int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)
 T int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)
 T int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)
 T int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)
 T int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)
 T int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)
 T int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)
 T int ServerClassInit<DT_TEPlantBomb::ignored>(DT_TEPlantBomb::ignored*)
 T int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)
 T int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)
 T int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)
 T int ServerClassInit<DT_TERadioIcon::ignored>(DT_TERadioIcon::ignored*)
 T int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)
 T int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)
 T int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)
 T int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)
 T int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)
 T int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)
 T int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)
 T int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)
 T int ServerClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)
 T int ServerClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)
 T int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)
 T int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)
 T int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)
 T int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)
 T int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)
 T int ServerClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)
 T int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)
 T int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)
 T int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)
 T int ServerClassInit<DT_WeaponAK47::ignored>(DT_WeaponAK47::ignored*)
 T int ServerClassInit<DT_WeaponAWP::ignored>(DT_WeaponAWP::ignored*)
 T int ServerClassInit<DT_WeaponAug::ignored>(DT_WeaponAug::ignored*)
 T int ServerClassInit<DT_WeaponBizon::ignored>(DT_WeaponBizon::ignored*)
 T int ServerClassInit<DT_WeaponC4::ignored>(DT_WeaponC4::ignored*)
 T int ServerClassInit<DT_WeaponCSBase::ignored>(DT_WeaponCSBase::ignored*)
 T int ServerClassInit<DT_WeaponCSBaseGun::ignored>(DT_WeaponCSBaseGun::ignored*)
 T int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)
 T int ServerClassInit<DT_WeaponDEagle::ignored>(DT_WeaponDEagle::ignored*)
 T int ServerClassInit<DT_WeaponElite::ignored>(DT_WeaponElite::ignored*)
 T int ServerClassInit<DT_WeaponFamas::ignored>(DT_WeaponFamas::ignored*)
 T int ServerClassInit<DT_WeaponFiveSeven::ignored>(DT_WeaponFiveSeven::ignored*)
 T int ServerClassInit<DT_WeaponG3SG1::ignored>(DT_WeaponG3SG1::ignored*)
 T int ServerClassInit<DT_WeaponGalil::ignored>(DT_WeaponGalil::ignored*)
 T int ServerClassInit<DT_WeaponGalilAR::ignored>(DT_WeaponGalilAR::ignored*)
 T int ServerClassInit<DT_WeaponGlock::ignored>(DT_WeaponGlock::ignored*)
 T int ServerClassInit<DT_WeaponHKP2000::ignored>(DT_WeaponHKP2000::ignored*)
 T int ServerClassInit<DT_WeaponKnife::ignored>(DT_WeaponKnife::ignored*)
 T int ServerClassInit<DT_WeaponKnifeGG::ignored>(DT_WeaponKnifeGG::ignored*)
 T int ServerClassInit<DT_WeaponM249::ignored>(DT_WeaponM249::ignored*)
 T int ServerClassInit<DT_WeaponM3::ignored>(DT_WeaponM3::ignored*)
 T int ServerClassInit<DT_WeaponM4A1::ignored>(DT_WeaponM4A1::ignored*)
 T int ServerClassInit<DT_WeaponMAC10::ignored>(DT_WeaponMAC10::ignored*)
 T int ServerClassInit<DT_WeaponMP5Navy::ignored>(DT_WeaponMP5Navy::ignored*)
 T int ServerClassInit<DT_WeaponMP7::ignored>(DT_WeaponMP7::ignored*)
 T int ServerClassInit<DT_WeaponMP9::ignored>(DT_WeaponMP9::ignored*)
 T int ServerClassInit<DT_WeaponMag7::ignored>(DT_WeaponMag7::ignored*)
 T int ServerClassInit<DT_WeaponNOVA::ignored>(DT_WeaponNOVA::ignored*)
 T int ServerClassInit<DT_WeaponNegev::ignored>(DT_WeaponNegev::ignored*)
 T int ServerClassInit<DT_WeaponP228::ignored>(DT_WeaponP228::ignored*)
 T int ServerClassInit<DT_WeaponP250::ignored>(DT_WeaponP250::ignored*)
 T int ServerClassInit<DT_WeaponP90::ignored>(DT_WeaponP90::ignored*)
 T int ServerClassInit<DT_WeaponSCAR17::ignored>(DT_WeaponSCAR17::ignored*)
 T int ServerClassInit<DT_WeaponSCAR20::ignored>(DT_WeaponSCAR20::ignored*)
 T int ServerClassInit<DT_WeaponSG550::ignored>(DT_WeaponSG550::ignored*)
 T int ServerClassInit<DT_WeaponSG552::ignored>(DT_WeaponSG552::ignored*)
 T int ServerClassInit<DT_WeaponSG556::ignored>(DT_WeaponSG556::ignored*)
 T int ServerClassInit<DT_WeaponSSG08::ignored>(DT_WeaponSSG08::ignored*)
 T int ServerClassInit<DT_WeaponSawedoff::ignored>(DT_WeaponSawedoff::ignored*)
 T int ServerClassInit<DT_WeaponScout::ignored>(DT_WeaponScout::ignored*)
 T int ServerClassInit<DT_WeaponTMP::ignored>(DT_WeaponTMP::ignored*)
 T int ServerClassInit<DT_WeaponTaser::ignored>(DT_WeaponTaser::ignored*)
 T int ServerClassInit<DT_WeaponTec9::ignored>(DT_WeaponTec9::ignored*)
 T int ServerClassInit<DT_WeaponUMP45::ignored>(DT_WeaponUMP45::ignored*)
 T int ServerClassInit<DT_WeaponUSP::ignored>(DT_WeaponUSP::ignored*)
 T int ServerClassInit<DT_WeaponXM1014::ignored>(DT_WeaponXM1014::ignored*)
 T int V_sprintf_safe<16ul>(char (&) [16ul], char const*, ...)
 T int V_sprintf_safe<255ul>(char (&) [255ul], char const*, ...)
 T int V_sprintf_safe<256ul>(char (&) [256ul], char const*, ...)
 T int V_sprintf_safe<260ul>(char (&) [260ul], char const*, ...)
 T int V_sprintf_safe<30ul>(char (&) [30ul], char const*, ...)
 T int V_sprintf_safe<64ul>(char (&) [64ul], char const*, ...)
 T int V_sprintf_safe<80ul>(char (&) [80ul], char const*, ...)
 T isbreakablewspace(wchar_t)
 T item_defuserPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T item_list_entry_t::InitFromName(char const*)
 T kill_helper(CCommand const&, bool, bool)
 T locksound_t::GetDataDescMap()
 T lufopen(void*, unsigned int, unsigned int, unsigned int*)
 T molotov_projectilePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T mstudioanimdesc_t::pAnim(int*) const
 T mstudioanimdesc_t::pAnim(int*, float&) const
 T mstudioanimdesc_t::pHierarchy(int) const
 T mstudioanimdesc_t::pIKRule(int) const
 T nexttoken(char*, char const*, char)
 T non-virtual thunk to CAI_BaseActor::UseSemaphore()
 T non-virtual thunk to CAI_BaseHumanoid::OnMoveBlocked(AIMoveResult_t*)
 T non-virtual thunk to CAI_BaseNPC::CalcYawSpeed()
 T non-virtual thunk to CAI_BaseNPC::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_AimGun()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_BestEnemy()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanFlinch()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GatherConditions()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetDefaultNavGoalTolerance()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetFlinchActivity(bool, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetJumpGravity() const
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetMaxTacticalLateralMovement()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetReasonableFacingDist()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouchedActivity(Activity)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouching()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCurTaskContinuousMove()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsInterruptable()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsNavigationUrgent()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_NPC_TranslateActivity(Activity)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementComplete()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementFailed()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnScheduleChange()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_PrescheduleThink()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_QueryHearSound(CSound*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_SelectSchedule()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldAlwaysThink()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldPlayerAvoid()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_TranslateSchedule(int)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_GoalEntity::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CAI_GoalEntity::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CAI_LeadGoal::GetConceptModifiers(char const*)
 T non-virtual thunk to CAI_LeadGoal::OnEvent(int)
 T non-virtual thunk to CAI_LeadGoal_Weapon::GetConceptModifiers(char const*)
 T non-virtual thunk to CAI_Navigator::CalcYawSpeed()
 T non-virtual thunk to CAI_Navigator::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveBlocked(AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveStalled(AILocalMoveGoal_t const&)
 T non-virtual thunk to CAI_Navigator::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_ScriptConditions::OnEntitySpawned(CBaseEntity*)
 T non-virtual thunk to CAI_SpeechFilter::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CAI_SpeechFilter::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CBasePropDoor::~CBasePropDoor()
 T non-virtual thunk to CBaseViewModel::GetOwnerViaInterface()
 T non-virtual thunk to CBreakable::GetBasePropData()
 T non-virtual thunk to CBreakable::GetBreakableCount()
 T non-virtual thunk to CBreakable::GetBreakableModel()
 T non-virtual thunk to CBreakable::GetBreakableSkin()
 T non-virtual thunk to CBreakable::GetDmgModBullet()
 T non-virtual thunk to CBreakable::GetDmgModClub()
 T non-virtual thunk to CBreakable::GetDmgModExplosive()
 T non-virtual thunk to CBreakable::GetDmgModFire()
 T non-virtual thunk to CBreakable::GetExplosiveDamage()
 T non-virtual thunk to CBreakable::GetExplosiveRadius()
 T non-virtual thunk to CBreakable::GetMaxBreakableSize()
 T non-virtual thunk to CBreakable::GetMultiplayerBreakMode() const
 T non-virtual thunk to CBreakable::GetPhysicsDamageTable()
 T non-virtual thunk to CBreakable::GetPhysicsMode()
 T non-virtual thunk to CBreakable::HasInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakable::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CBreakable::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakable::SetBasePropData(string_t)
 T non-virtual thunk to CBreakable::SetBreakableCount(int)
 T non-virtual thunk to CBreakable::SetBreakableModel(string_t)
 T non-virtual thunk to CBreakable::SetBreakableSkin(int)
 T non-virtual thunk to CBreakable::SetDmgModBullet(float)
 T non-virtual thunk to CBreakable::SetDmgModClub(float)
 T non-virtual thunk to CBreakable::SetDmgModExplosive(float)
 T non-virtual thunk to CBreakable::SetExplosiveDamage(float)
 T non-virtual thunk to CBreakable::SetExplosiveRadius(float)
 T non-virtual thunk to CBreakable::SetInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakable::SetMaxBreakableSize(int)
 T non-virtual thunk to CBreakable::SetMultiplayerBreakMode(mp_break_t)
 T non-virtual thunk to CBreakable::SetPhysicsDamageTable(string_t)
 T non-virtual thunk to CBreakable::SetPhysicsMode(int)
 T non-virtual thunk to CBreakable::SetPropDataBlocksLOS(bool)
 T non-virtual thunk to CBreakable::SetPropDataIsAIWalkable(bool)
 T non-virtual thunk to CBreakableProp::GetBasePropData()
 T non-virtual thunk to CBreakableProp::GetBreakableCount()
 T non-virtual thunk to CBreakableProp::GetBreakableModel()
 T non-virtual thunk to CBreakableProp::GetBreakableSkin()
 T non-virtual thunk to CBreakableProp::GetDmgModBullet()
 T non-virtual thunk to CBreakableProp::GetDmgModClub()
 T non-virtual thunk to CBreakableProp::GetDmgModExplosive()
 T non-virtual thunk to CBreakableProp::GetDmgModFire()
 T non-virtual thunk to CBreakableProp::GetExplosiveDamage()
 T non-virtual thunk to CBreakableProp::GetExplosiveRadius()
 T non-virtual thunk to CBreakableProp::GetMaxBreakableSize()
 T non-virtual thunk to CBreakableProp::GetMultiplayerBreakMode() const
 T non-virtual thunk to CBreakableProp::GetPhysicsDamageTable()
 T non-virtual thunk to CBreakableProp::GetPhysicsMode()
 T non-virtual thunk to CBreakableProp::HasInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakableProp::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CBreakableProp::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakableProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CBreakableProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakableProp::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CBreakableProp::PreferredCarryAngles()
 T non-virtual thunk to CBreakableProp::SetBasePropData(string_t)
 T non-virtual thunk to CBreakableProp::SetBreakableCount(int)
 T non-virtual thunk to CBreakableProp::SetBreakableModel(string_t)
 T non-virtual thunk to CBreakableProp::SetBreakableSkin(int)
 T non-virtual thunk to CBreakableProp::SetDmgModBullet(float)
 T non-virtual thunk to CBreakableProp::SetDmgModClub(float)
 T non-virtual thunk to CBreakableProp::SetDmgModExplosive(float)
 T non-virtual thunk to CBreakableProp::SetExplosiveDamage(float)
 T non-virtual thunk to CBreakableProp::SetExplosiveRadius(float)
 T non-virtual thunk to CBreakableProp::SetInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakableProp::SetMaxBreakableSize(int)
 T non-virtual thunk to CBreakableProp::SetMultiplayerBreakMode(mp_break_t)
 T non-virtual thunk to CBreakableProp::SetPhysicsDamageTable(string_t)
 T non-virtual thunk to CBreakableProp::SetPhysicsMode(int)
 T non-virtual thunk to CBreakableProp::SetPropDataBlocksLOS(bool)
 T non-virtual thunk to CBreakableProp::SetPropDataIsAIWalkable(bool)
 T non-virtual thunk to CCSEventLog::Init()
 T non-virtual thunk to CCSEventLog::~CCSEventLog()
 T non-virtual thunk to CCSFunFactMgr::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CCSFunFactMgr::~CCSFunFactMgr()
 T non-virtual thunk to CCSGCServerSystem::SOCacheSubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T non-virtual thunk to CCSGCServerSystem::SOCacheUnsubscribed(GCSDK::SOID_t, GCSDK::ESOCacheEvent)
 T non-virtual thunk to CCSGCServerSystem::SOCreated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T non-virtual thunk to CCSGCServerSystem::SODestroyed(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T non-virtual thunk to CCSGCServerSystem::SOUpdated(GCSDK::SOID_t, GCSDK::CSharedObject const*, GCSDK::ESOCacheEvent)
 T non-virtual thunk to CCSGameStats::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CCSGameStats::GetStatContainerList()
 T non-virtual thunk to CCSGameStats::Init()
 T non-virtual thunk to CCSGameStats::PreClientUpdate()
 T non-virtual thunk to CCSGameStats::SubmitGameStats(KeyValues*)
 T non-virtual thunk to CCSGameStats::~CCSGameStats()
 T non-virtual thunk to CCSHLTVDirector::GetModEvents()
 T non-virtual thunk to CCSHLTVDirector::SetHLTVServer(IHLTVServer*)
 T non-virtual thunk to CCSHLTVDirector::~CCSHLTVDirector()
 T non-virtual thunk to CCSPlayer::CSAnim_CanMove()
 T non-virtual thunk to CCSPlayer::CSAnim_GetActiveWeapon()
 T non-virtual thunk to CCSPlayer::GetAttributeContainer()
 T non-virtual thunk to CCSPlayer::GetAttributeList()
 T non-virtual thunk to CCSPlayer::GetAttributeManager()
 T non-virtual thunk to CCSPlayer::GetAttributeOwner()
 T non-virtual thunk to CCSPlayer::InventoryUpdated(CPlayerInventory*)
 T non-virtual thunk to CCSPlayer::ReapplyProvision()
 T non-virtual thunk to CChicken::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CChicken::~CChicken()
 T non-virtual thunk to CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T non-virtual thunk to CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ObjectWake(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T non-virtual thunk to CColorCorrectionSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CColorCorrectionSystem::~CColorCorrectionSystem()
 T non-virtual thunk to CDecalEmitterSystem::Init()
 T non-virtual thunk to CDecalEmitterSystem::LevelInitPreEntity()
 T non-virtual thunk to CDecalEmitterSystem::Shutdown()
 T non-virtual thunk to CDecalEmitterSystem::~CDecalEmitterSystem()
 T non-virtual thunk to CDefaultResponseSystem::Init()
 T non-virtual thunk to CDefaultResponseSystem::LevelInitPostEntity()
 T non-virtual thunk to CDefaultResponseSystem::LevelInitPreEntity()
 T non-virtual thunk to CDefaultResponseSystem::Shutdown()
 T non-virtual thunk to CDefaultResponseSystem::~CDefaultResponseSystem()
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T non-virtual thunk to CDynamicProp::NotifyPositionChanged(CBaseEntity*)
 T non-virtual thunk to CDynamicProp::~CDynamicProp()
 T non-virtual thunk to CEconEntity::GetAttributeContainer()
 T non-virtual thunk to CEconEntity::GetAttributeList()
 T non-virtual thunk to CEconEntity::GetAttributeManager()
 T non-virtual thunk to CEconEntity::GetAttributeOwner()
 T non-virtual thunk to CEconEntity::ReapplyProvision()
 T non-virtual thunk to CEconItem::GetAccountID() const
 T non-virtual thunk to CEconItem::GetCustomDesc() const
 T non-virtual thunk to CEconItem::GetCustomName() const
 T non-virtual thunk to CEconItem::GetFlags() const
 T non-virtual thunk to CEconItem::GetInUse() const
 T non-virtual thunk to CEconItem::GetItemDefinition() const
 T non-virtual thunk to CEconItem::GetItemID() const
 T non-virtual thunk to CEconItem::GetItemLevel() const
 T non-virtual thunk to CEconItem::GetItemSetIndex() const
 T non-virtual thunk to CEconItem::GetOrigin() const
 T non-virtual thunk to CEconItem::GetQuality() const
 T non-virtual thunk to CEconItem::GetQuantity() const
 T non-virtual thunk to CEconItem::GetRarity() const
 T non-virtual thunk to CEconItem::IsMarketable() const
 T non-virtual thunk to CEconItem::IsTradable() const
 T non-virtual thunk to CEconItem::IsUsableInCrafting() const
 T non-virtual thunk to CEconItem::IterateAttributes(IEconItemAttributeIterator*) const
 T non-virtual thunk to CEconItem::~CEconItem()
 T non-virtual thunk to CEmptyConVar::GetName() const
 T non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 T non-virtual thunk to CEmptyConVar::SetValue(char const*)
 T non-virtual thunk to CEmptyConVar::SetValue(float)
 T non-virtual thunk to CEmptyConVar::SetValue(int)
 T non-virtual thunk to CEntFireAutoCompletionFunctor::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T non-virtual thunk to CEventLog::Init()
 T non-virtual thunk to CEventLog::~CEventLog()
 T non-virtual thunk to CFireCrackerBlast::~CFireCrackerBlast()
 T non-virtual thunk to CFishPool::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CFishPool::~CFishPool()
 T non-virtual thunk to CFogSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CFogSystem::~CFogSystem()
 T non-virtual thunk to CFuncNavObstruction::CanObstructNavAreas() const
 T non-virtual thunk to CFuncNavObstruction::GetNavObstructionHeight() const
 T non-virtual thunk to CFuncNavObstruction::GetObstructingEntity()
 T non-virtual thunk to CFuncNavObstruction::IsPotentiallyAbleToObstructNavAreas() const
 T non-virtual thunk to CFuncNavObstruction::OnNavMeshLoaded()
 T non-virtual thunk to CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T non-virtual thunk to CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T non-virtual thunk to CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor3()
 T non-virtual thunk to CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T non-virtual thunk to CFunctorJob::~CFunctorJob()
 T non-virtual thunk to CGameRoundEnd::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CGameRoundEnd::~CGameRoundEnd()
 T non-virtual thunk to CGib::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CGib::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CHLTVDirector::FrameUpdatePostEntityThink()
 T non-virtual thunk to CHLTVDirector::GetDelay()
 T non-virtual thunk to CHLTVDirector::GetDirectorTick()
 T non-virtual thunk to CHLTVDirector::GetHLTVServer()
 T non-virtual thunk to CHLTVDirector::GetModEvents()
 T non-virtual thunk to CHLTVDirector::GetPVSEntity()
 T non-virtual thunk to CHLTVDirector::GetPVSOrigin()
 T non-virtual thunk to CHLTVDirector::Init()
 T non-virtual thunk to CHLTVDirector::IsActive()
 T non-virtual thunk to CHLTVDirector::LevelInitPostEntity()
 T non-virtual thunk to CHLTVDirector::Name()
 T non-virtual thunk to CHLTVDirector::SetHLTVServer(IHLTVServer*)
 T non-virtual thunk to CHLTVDirector::Shutdown()
 T non-virtual thunk to CHLTVDirector::~CHLTVDirector()
 T non-virtual thunk to CHostage::CSAnim_CanMove()
 T non-virtual thunk to CHostage::CSAnim_GetActiveWeapon()
 T non-virtual thunk to CHostage::Crouch()
 T non-virtual thunk to CHostage::GetCentroid() const
 T non-virtual thunk to CHostage::GetEyes() const
 T non-virtual thunk to CHostage::GetFeet() const
 T non-virtual thunk to CHostage::GetLastKnownArea() const
 T non-virtual thunk to CHostage::GetMoveAngle() const
 T non-virtual thunk to CHostage::GetSimpleGroundHeightWithFloor(Vector const&, float*, Vector*)
 T non-virtual thunk to CHostage::IsCrouching() const
 T non-virtual thunk to CHostage::IsJumping() const
 T non-virtual thunk to CHostage::IsRunning() const
 T non-virtual thunk to CHostage::IsUsingLadder() const
 T non-virtual thunk to CHostage::Jump()
 T non-virtual thunk to CHostage::OnMoveToFailure(Vector const&, CImprovLocomotor::MoveToFailureType)
 T non-virtual thunk to CHostage::OnMoveToSuccess(Vector const&)
 T non-virtual thunk to CHostage::Run()
 T non-virtual thunk to CHostage::StandUp()
 T non-virtual thunk to CHostage::StartLadder(CNavLadder const*, NavTraverseType, Vector const&, Vector const&)
 T non-virtual thunk to CHostage::TrackPath(Vector const&, float)
 T non-virtual thunk to CHostage::TraverseLadder(CNavLadder const*, NavTraverseType, Vector const&, Vector const&, float)
 T non-virtual thunk to CHostage::Walk()
 T non-virtual thunk to CInferno::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CInferno::~CInferno()
 T non-virtual thunk to CItem::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CItem::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CJob::~CJob()
 T non-virtual thunk to CKeepUpright::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CLagCompensationManager::AddAdditionalEntity(CBaseEntity*)
 T non-virtual thunk to CLagCompensationManager::FinishLagCompensation(CBasePlayer*)
 T non-virtual thunk to CLagCompensationManager::RemoveAdditionalEntity(CBaseEntity*)
 T non-virtual thunk to CLagCompensationManager::StartLagCompensation(CBasePlayer*, LagCompensationType, Vector const&, QAngle const&, float)
 T non-virtual thunk to CLogicAuto::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CLogicAuto::~CLogicAuto()
 T non-virtual thunk to CLogicEventListener::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CLogicEventListener::~CLogicEventListener()
 T non-virtual thunk to CLogicEventListenerItemEquip::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CLogicEventListenerItemEquip::~CLogicEventListenerItemEquip()
 T non-virtual thunk to CLogicNavigation::OnEntitySpawned(CBaseEntity*)
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T non-virtual thunk to CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T non-virtual thunk to CNotifyList::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CNotifyList::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to COrnamentProp::~COrnamentProp()
 T non-virtual thunk to CPhysBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPhysBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysBox::PreferredCarryAngles()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMass()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysBoxMultiplayer::IsAsleep()
 T non-virtual thunk to CPhysHinge::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T non-virtual thunk to CPhysHinge::~CPhysHinge()
 T non-virtual thunk to CPhysMagnet::ConstraintBroken(IPhysicsConstraint*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CPhysSlideConstraint::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T non-virtual thunk to CPhysSlideConstraint::~CPhysSlideConstraint()
 T non-virtual thunk to CPhysicsCannister::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPhysicsCannister::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsCannister::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysicsCannister::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsCannister::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CPhysicsCannister::PhysGunLaunchVelocity(Vector const&, float)
 T non-virtual thunk to CPhysicsCannister::PreferredCarryAngles()
 T non-virtual thunk to CPhysicsCannister::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T non-virtual thunk to CPhysicsNPCSolver::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CPhysicsProp::CanObstructNavAreas() const
 T non-virtual thunk to CPhysicsProp::GetNavObstructionHeight() const
 T non-virtual thunk to CPhysicsProp::GetObstructingEntity()
 T non-virtual thunk to CPhysicsProp::IsPotentiallyAbleToObstructNavAreas() const
 T non-virtual thunk to CPhysicsProp::OnNavMeshLoaded()
 T non-virtual thunk to CPhysicsProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysicsProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMass()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetPhysicsMode()
 T non-virtual thunk to CPhysicsPropMultiplayer::IsAsleep()
 T non-virtual thunk to CPhysicsPropMultiplayer::SetPhysicsMode(int)
 T non-virtual thunk to CPlayerInfo::ChangeTeam(int)
 T non-virtual thunk to CPlayerInfo::GetAbsAngles()
 T non-virtual thunk to CPlayerInfo::GetAbsOrigin()
 T non-virtual thunk to CPlayerInfo::GetArmorValue()
 T non-virtual thunk to CPlayerInfo::GetDeathCount()
 T non-virtual thunk to CPlayerInfo::GetFragCount()
 T non-virtual thunk to CPlayerInfo::GetHealth()
 T non-virtual thunk to CPlayerInfo::GetLastUserCommand()
 T non-virtual thunk to CPlayerInfo::GetMaxHealth()
 T non-virtual thunk to CPlayerInfo::GetModelName()
 T non-virtual thunk to CPlayerInfo::GetName()
 T non-virtual thunk to CPlayerInfo::GetNetworkIDString()
 T non-virtual thunk to CPlayerInfo::GetPlayerMaxs()
 T non-virtual thunk to CPlayerInfo::GetPlayerMins()
 T non-virtual thunk to CPlayerInfo::GetTeamIndex()
 T non-virtual thunk to CPlayerInfo::GetUserID()
 T non-virtual thunk to CPlayerInfo::GetWeaponName()
 T non-virtual thunk to CPlayerInfo::IsConnected()
 T non-virtual thunk to CPlayerInfo::IsDead()
 T non-virtual thunk to CPlayerInfo::IsFakeClient()
 T non-virtual thunk to CPlayerInfo::IsHLTV()
 T non-virtual thunk to CPlayerInfo::IsInAVehicle()
 T non-virtual thunk to CPlayerInfo::IsObserver()
 T non-virtual thunk to CPlayerInfo::IsPlayer()
 T non-virtual thunk to CPostProcessSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPostProcessSystem::~CPostProcessSystem()
 T non-virtual thunk to CPropDoorRotating::~CPropDoorRotating()
 T non-virtual thunk to CPropDoorRotatingBreakable::~CPropDoorRotatingBreakable()
 T non-virtual thunk to CPropVehicle::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropVehicleDriveable::AllowBlockedExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::AllowMidairExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::CanEnterVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleDriveable::CanExitVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleDriveable::EnterVehicle(CBaseCombatCharacter*)
 T non-virtual thunk to CPropVehicleDriveable::ExitVehicle(int)
 T non-virtual thunk to CPropVehicleDriveable::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to CPropVehicleDriveable::GetDriver()
 T non-virtual thunk to CPropVehicleDriveable::GetVehicleScriptName()
 T non-virtual thunk to CPropVehicleDriveable::ItemPostFrame(CBasePlayer*)
 T non-virtual thunk to CPropVehicleDriveable::NPC_AddPassenger(CAI_BaseNPC*, string_t, int)
 T non-virtual thunk to CPropVehicleDriveable::NPC_CanEnterVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_CanExitVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_FinishedEnterVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_FinishedExitVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_RemovePassenger(CAI_BaseNPC*)
 T non-virtual thunk to CPropVehicleDriveable::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T non-virtual thunk to CPropVehicleDriveable::PreExitVehicle(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::ProcessMovement(CBasePlayer*, CMoveData*)
 T non-virtual thunk to CPropVehicleDriveable::SetVehicleEntryAnim(bool)
 T non-virtual thunk to CPropVehicleDriveable::SetVehicleExitAnim(bool, Vector)
 T non-virtual thunk to CPropVehicleDriveable::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to CRagdollProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CRagdollProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CRagdollProp::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CRopeKeyframe::NotifyPositionChanged(CBaseEntity*)
 T non-virtual thunk to CRopeKeyframe::~CRopeKeyframe()
 T non-virtual thunk to CRotorWashShooter::DoWashPush(float, Vector const&)
 T non-virtual thunk to CSceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CServerNetworkProperty::FireEvent()
 T non-virtual thunk to CSoundControllerImp::LevelShutdownPreEntity()
 T non-virtual thunk to CSoundControllerImp::OnRestore()
 T non-virtual thunk to CSoundControllerImp::PreClientUpdate()
 T non-virtual thunk to CSoundControllerImp::~CSoundControllerImp()
 T non-virtual thunk to CSteamWorksGameStatsServer::~CSteamWorksGameStatsServer()
 T non-virtual thunk to CSteamWorksGameStatsUploader::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CSteamWorksGameStatsUploader::~CSteamWorksGameStatsUploader()
 T non-virtual thunk to CToolFrameworkServer::PreSetupVisibility()
 T non-virtual thunk to CTriggerVPhysicsMotion::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CWeaponDatabase::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CWeaponDatabase::~CWeaponDatabase()
 T non-virtual thunk to ConVar::GetBaseName() const
 T non-virtual thunk to ConVar::GetName() const
 T non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
 T non-virtual thunk to ConVar::IsFlagSet(int) const
 T non-virtual thunk to ConVar::SetValue(Color)
 T non-virtual thunk to ConVar::SetValue(char const*)
 T non-virtual thunk to ConVar::SetValue(float)
 T non-virtual thunk to ConVar::SetValue(int)
 T operator delete(void*)
 T operator delete[](void*)
 T operator new(unsigned long)
 T operator new[](unsigned long)
 T physicssound::AddBreakSound(CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >&, Vector const&, unsigned short)
 T physicssound::AddImpactSound(physicssound::soundlist_t&, void*, int, int, IPhysicsObject*, int, int, float, float)
 T physicssound::PlayBreakSounds(CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >&)
 T physicssound::PlayImpactSounds(physicssound::soundlist_t&)
 T planted_c4Precache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T planted_c4_trainingPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T playerPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T protobuf_AddDesc_base_5fgcmessages_2eproto()
 T protobuf_AddDesc_cstrike15_5fgcmessages_2eproto()
 T protobuf_AddDesc_cstrike15_5fusermessages_2eproto()
 T protobuf_AddDesc_econ_5fgcmessages_2eproto()
 T protobuf_AddDesc_gcsdk_5fgcmessages_2eproto()
 T protobuf_AddDesc_netmessages_2eproto()
 T protobuf_AddDesc_steammessages_2eproto()
 T protobuf_AssignDesc_base_5fgcmessages_2eproto()
 T protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()
 T protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()
 T protobuf_AssignDesc_econ_5fgcmessages_2eproto()
 T protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()
 T protobuf_AssignDesc_gcsystemmsgs_2eproto()
 T protobuf_AssignDesc_netmessages_2eproto()
 T protobuf_AssignDesc_steammessages_2eproto()
 T protobuf_ShutdownFile_base_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_cstrike15_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto()
 T protobuf_ShutdownFile_econ_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_gcsystemmsgs_2eproto()
 T protobuf_ShutdownFile_netmessages_2eproto()
 T protobuf_ShutdownFile_steammessages_2eproto()
 T rand
 T respawn(CBaseEntity*, bool)
 T sky3dparams_t::NetworkStateChanged()
 T sky3dparams_t::NetworkStateChanged(void*)
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged()
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged(void*)
 T smokegrenade_projectilePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T spraycanPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T static_attrib_t::BInitFromKV_MultiLine(char const*, KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T static_attrib_t::BInitFromKV_SingleLine(char const*, KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_create_node(std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique(std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::find(int const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::~_Rb_tree()
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_destroy_node(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::find(std::pair<std::string, int> const&) const
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::lower_bound(std::pair<std::string, int> const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::~_Rb_tree()
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_destroy_node(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::find(std::string const&) const
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::upper_bound(std::string const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::~_Rb_tree()
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_create_node(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_destroy_node(std::_Rb_tree_node<std::string>*)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::~_Rb_tree()
 T std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long)
 T std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
 T std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_allocate(unsigned long)
 T std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long)
 T std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_allocate(unsigned long)
 T std::_Vector_base<void*, std::allocator<void*> >::_M_allocate(unsigned long)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::less<std::pair<std::string, int> >::operator()(std::pair<std::string, int> const&, std::pair<std::string, int> const&) const
 T std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&)
 T std::string* std::__copy_backward<false, std::random_access_iterator_tag>::__copy_b<std::string*, std::string*>(std::string*, std::string*, std::string*)
 T std::string* std::__uninitialized_copy_aux<std::string*, std::string*>(std::string*, std::string*, std::string*, std::__false_type)
 T std::vector<char const*, std::allocator<char const*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, unsigned long, char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::push_back(char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::resize(unsigned long, char const*)
 T std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 T std::vector<int, std::allocator<int> >::push_back(int const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::push_back(std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::resize(unsigned long, std::string*)
 T std::vector<std::string, std::allocator<std::string> >::_M_erase_at_end(std::string*)
 T std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 T std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&)
 T std::vector<std::string, std::allocator<std::string> >::~vector()
 T std::vector<void (*)(), std::allocator<void (*)()> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
 T std::vector<void (*)(), std::allocator<void (*)()> >::push_back(void (* const&)())
 T std::vector<void*, std::allocator<void*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 T std::vector<void*, std::allocator<void*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
 T std::vector<void*, std::allocator<void*> >::push_back(void* const&)
 T std::vector<void*, std::allocator<void*> >::resize(unsigned long, void*)
 T strnlen
 T studiohdr_t::GetAnimBlock(int, bool) const
 T studiohdr_t::GetAutoplayList(unsigned short**) const
 T studiohdr_t::GetVirtualModel() const
 T studiohdr_t::SetActivityListVersion(int) const
 T studiohdr_t::hasAnimBlockBeenPreloaded(int) const
 T testJumpDown(Vector const*, Vector const*)
 T ucrc32(unsigned long, unsigned char const*, unsigned int)
 T unsigned int CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoInsert<unsigned int>(unsigned int, int, unsigned int, bool*)
 T unzCloseCurrentFile(unz_s*)
 T unzOpenCurrentFile(unz_s*)
 T unzOpenInternal(LUFILE*)
 T unzReadCurrentFile(unz_s*, void*, unsigned int)
 T unzlocal_CheckCurrentFileCoherencyHeader(unz_s*, unsigned int*, unsigned long*, unsigned int*)
 T unzlocal_GetCurrentFileInfoInternal(unz_s*, unz_file_info_s*, unz_file_info_internal_s*, char*, unsigned long, void*, unsigned long, char*, unsigned long)
 T unzlocal_SearchCentralDir(LUFILE*)
 T unzlocal_getLong(LUFILE*, unsigned long*)
 T unzlocal_getShort(LUFILE*, unsigned long*)
 T variant_t::Convert(_fieldtypes)
 T variant_t::Set(_fieldtypes, void*)
 T variant_t::SetEntity(CBaseEntity*)
 T variant_t::SetOther(void*)
 T variant_t::ToString() const
 T vehicle_crashsound_t::GetDataDescMap()
 T vehicle_gear_t::GetDataDescMap()
 T vehiclesounds_t::GetDataDescMap()
 T vgui::AnimatingImagePanel::AddImage(vgui::IImage*)
 T vgui::AnimatingImagePanel::AnimatingImagePanel(vgui::Panel*, char const*)
 T vgui::AnimatingImagePanel::ApplySettings(KeyValues*)
 T vgui::AnimatingImagePanel::GetAnimMap()
 T vgui::AnimatingImagePanel::GetDescription()
 T vgui::AnimatingImagePanel::GetKBMap()
 T vgui::AnimatingImagePanel::GetMessageMap()
 T vgui::AnimatingImagePanel::GetPanelClassName()
 T vgui::AnimatingImagePanel::GetSettings(KeyValues*)
 T vgui::AnimatingImagePanel::LoadAnimation(char const*, int)
 T vgui::AnimatingImagePanel::OnTick()
 T vgui::AnimatingImagePanel::PaintBackground()
 T vgui::AnimatingImagePanel::PerformLayout()
 T vgui::AnimatingImagePanel::ResetAnimation(int)
 T vgui::AnimatingImagePanel::StartAnimation()
 T vgui::AnimatingImagePanel::StopAnimation()
 T vgui::AnimatingImagePanel::~AnimatingImagePanel()
 T vgui::AnimationController::AnimationController(vgui::Panel*)
 T vgui::AnimationController::GetAnimMap()
 T vgui::AnimationController::GetKBMap()
 T vgui::AnimationController::GetMessageMap()
 T vgui::AnimationController::GetPanelClassName()
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, Color, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, float, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::StartCmd_Animate(vgui::Panel*, unsigned short, vgui::AnimationController::AnimCmdAnimate_t&)
 T vgui::AnimationController::~AnimationController()
 T vgui::BaseTooltip::GetText()
 T vgui::BaseTooltip::HideTooltip()
 T vgui::BaseTooltip::PerformLayout()
 T vgui::BaseTooltip::PositionWindow(vgui::Panel*)
 T vgui::BaseTooltip::ResetDelay()
 T vgui::BaseTooltip::SetEnabled(bool)
 T vgui::BaseTooltip::SetText(char const*)
 T vgui::BaseTooltip::SetTooltipDelay(int)
 T vgui::BaseTooltip::SetTooltipFormatToSingleLine()
 T vgui::BaseTooltip::ShowTooltip(vgui::Panel*)
 T vgui::BuildGroup::ActivateBuildDialog()
 T vgui::BuildGroup::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildGroup::ApplySettings(KeyValues*)
 T vgui::BuildGroup::BuildGroup(vgui::Panel*, vgui::Panel*)
 T vgui::BuildGroup::ChangeControlSettingsFile(char const*)
 T vgui::BuildGroup::CreateBuildDialog()
 T vgui::BuildGroup::CursorMoved(int, int, vgui::Panel*)
 T vgui::BuildGroup::DeleteAllControlsCreatedByControlSettingsFile()
 T vgui::BuildGroup::DrawRulers()
 T vgui::BuildGroup::FieldNameTaken(char const*)
 T vgui::BuildGroup::GetContextPanel()
 T vgui::BuildGroup::GetControlGroup()
 T vgui::BuildGroup::GetCurrentPanel()
 T vgui::BuildGroup::GetCursor(vgui::Panel*)
 T vgui::BuildGroup::GetDialogVariables()
 T vgui::BuildGroup::GetNewFieldName(char*, int, vgui::Panel*)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileByIndex(int)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileCount()
 T vgui::BuildGroup::GetResourceName()
 T vgui::BuildGroup::GetSettings(KeyValues*)
 T vgui::BuildGroup::HasRulersOn()
 T vgui::BuildGroup::IsEnabled()
 T vgui::BuildGroup::KeyCodeReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyCodeTyped(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyTyped(wchar_t, vgui::Panel*)
 T vgui::BuildGroup::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::BuildGroup::MouseDoublePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MousePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MouseReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::NewControl(KeyValues*, int, int)
 T vgui::BuildGroup::NewControl(char const*, int, int)
 T vgui::BuildGroup::PanelAdded(vgui::Panel*)
 T vgui::BuildGroup::PanelRemoved(vgui::Panel*)
 T vgui::BuildGroup::ProcessConditionalKeys(KeyValues*, KeyValues*)
 T vgui::BuildGroup::RegisterControlSettingsFile(char const*, char const*)
 T vgui::BuildGroup::ReloadControlSettings()
 T vgui::BuildGroup::RemoveSettings()
 T vgui::BuildGroup::SaveControlSettings()
 T vgui::BuildGroup::SetContextPanel(vgui::Panel*)
 T vgui::BuildGroup::SetEnabled(bool)
 T vgui::BuildGroup::SetRulerLabelsVisible(bool)
 T vgui::BuildGroup::ToggleRulerDisplay()
 T vgui::BuildGroup::~BuildGroup()
 T vgui::BuildModeDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::BuildModeDialog::ApplyDataToControls()
 T vgui::BuildModeDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildModeDialog::BuildModeDialog(vgui::BuildGroup*)
 T vgui::BuildModeDialog::CreateControls()
 T vgui::BuildModeDialog::DoCopy()
 T vgui::BuildModeDialog::DoPaste()
 T vgui::BuildModeDialog::DoUndo()
 T vgui::BuildModeDialog::EnableSaveButton()
 T vgui::BuildModeDialog::GetAnimMap()
 T vgui::BuildModeDialog::GetKBMap()
 T vgui::BuildModeDialog::GetMessageMap()
 T vgui::BuildModeDialog::GetPanelClassName()
 T vgui::BuildModeDialog::IsBuildGroupEnabled()
 T vgui::BuildModeDialog::OnChangeChild(int)
 T vgui::BuildModeDialog::OnClose()
 T vgui::BuildModeDialog::OnCommand(char const*)
 T vgui::BuildModeDialog::OnCreateNewControl(char const*)
 T vgui::BuildModeDialog::OnDeletePanel()
 T vgui::BuildModeDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::BuildModeDialog::OnPanelMoved()
 T vgui::BuildModeDialog::OnReloadLocalization()
 T vgui::BuildModeDialog::OnSetClipboardText(char const*)
 T vgui::BuildModeDialog::OnShowNewControlMenu()
 T vgui::BuildModeDialog::OnTextChanged(vgui::Panel*)
 T vgui::BuildModeDialog::OnTextKillFocus()
 T vgui::BuildModeDialog::PanelList::AddItem(vgui::Panel*, vgui::TextEntry*, vgui::ComboBox*, vgui::Button*, char const*, int)
 T vgui::BuildModeDialog::PerformLayout()
 T vgui::BuildModeDialog::SetActiveControl(vgui::Panel*)
 T vgui::BuildModeDialog::ShutdownBuildMode()
 T vgui::BuildModeDialog::StoreSettings()
 T vgui::BuildModeDialog::StoreUndoSettings()
 T vgui::BuildModeDialog::UpdateControlData(vgui::Panel*)
 T vgui::BuildModeDialog::~BuildModeDialog()
 T vgui::Button::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Button::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Button::ApplySettings(KeyValues*)
 T vgui::Button::Button(vgui::Panel*, char const*, char const*, vgui::Panel*, char const*)
 T vgui::Button::Button(vgui::Panel*, char const*, wchar_t const*, vgui::Panel*, char const*)
 T vgui::Button::CanBeDefaultButton()
 T vgui::Button::DoClick()
 T vgui::Button::DrawFocusBorder(int, int, int, int)
 T vgui::Button::FireActionSignal()
 T vgui::Button::ForceDepressed(bool)
 T vgui::Button::GetAnimMap()
 T vgui::Button::GetBorder(bool, bool, bool, bool)
 T vgui::Button::GetButtonBgColor()
 T vgui::Button::GetButtonFgColor()
 T vgui::Button::GetCommand()
 T vgui::Button::GetDescription()
 T vgui::Button::GetKBMap()
 T vgui::Button::GetMessageMap()
 T vgui::Button::GetPanelClassName()
 T vgui::Button::GetSettings(KeyValues*)
 T vgui::Button::GetSizerMinimumSize(int&, int&)
 T vgui::Button::GetUnpackStructure() const
 T vgui::Button::Init()
 T vgui::Button::IsArmed()
 T vgui::Button::IsBlinking()
 T vgui::Button::IsDepressed()
 T vgui::Button::IsMouseClickEnabled(ButtonCode_t)
 T vgui::Button::IsSelected()
 T vgui::Button::IsUseCaptureMouseEnabled()
 T vgui::Button::NavigateFrom()
 T vgui::Button::NavigateTo()
 T vgui::Button::OnCursorEntered()
 T vgui::Button::OnCursorExited()
 T vgui::Button::OnHotkey()
 T vgui::Button::OnKeyCodePressed(ButtonCode_t)
 T vgui::Button::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Button::OnKillFocus()
 T vgui::Button::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Button::OnMousePressed(ButtonCode_t)
 T vgui::Button::OnMouseReleased(ButtonCode_t)
 T vgui::Button::OnSetFocus()
 T vgui::Button::OnSetState(int)
 T vgui::Button::Paint()
 T vgui::Button::PerformLayout()
 T vgui::Button::RecalculateDepressedState()
 T vgui::Button::RequestInfo(KeyValues*)
 T vgui::Button::SetArmed(bool)
 T vgui::Button::SetArmedColor(Color, Color)
 T vgui::Button::SetAsCurrentDefaultButton(int)
 T vgui::Button::SetAsDefaultButton(int)
 T vgui::Button::SetBlink(bool)
 T vgui::Button::SetBlinkColor(Color)
 T vgui::Button::SetButtonActivationType(vgui::Button::ActivationType_t)
 T vgui::Button::SetButtonBorderEnabled(bool)
 T vgui::Button::SetCommand(KeyValues*)
 T vgui::Button::SetCommand(char const*)
 T vgui::Button::SetDefaultBorder(vgui::IBorder*)
 T vgui::Button::SetDefaultColor(Color, Color)
 T vgui::Button::SetDepressedBorder(vgui::IBorder*)
 T vgui::Button::SetDepressedColor(Color, Color)
 T vgui::Button::SetKeyFocusBorder(vgui::IBorder*)
 T vgui::Button::SetMouseClickEnabled(ButtonCode_t, bool)
 T vgui::Button::SetSelected(bool)
 T vgui::Button::SetUseCaptureMouse(bool)
 T vgui::Button::SizeToContents()
 T vgui::Button::~Button()
 T vgui::CBitmapImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CBitmapImagePanel::ApplySettings(KeyValues*)
 T vgui::CBitmapImagePanel::CBitmapImagePanel(vgui::Panel*, char const*, char const*)
 T vgui::CBitmapImagePanel::ComputeImagePosition(int&, int&, int&, int&)
 T vgui::CBitmapImagePanel::GetDescription()
 T vgui::CBitmapImagePanel::GetSettings(KeyValues*)
 T vgui::CBitmapImagePanel::PaintBackground()
 T vgui::CBitmapImagePanel::PaintBorder()
 T vgui::CBitmapImagePanel::SetContentAlignment(vgui::Label::Alignment)
 T vgui::CBitmapImagePanel::setTexture(char const*, bool)
 T vgui::CBitmapImagePanel::~CBitmapImagePanel()
 T vgui::CBuildFactoryHelper::CBuildFactoryHelper(char const*, vgui::Panel* (*)())
 T vgui::CBuildFactoryHelper::GetFactoryNames(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T vgui::CBuildFactoryHelper::InstancePanel(char const*)
 T vgui::CMenuManager::AddMenu(vgui::Menu*)
 T vgui::CMenuManager::IsWithinMenuOrRelative(vgui::Panel*, int, int)
 T vgui::CMenuManager::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::CMenuManager::~CMenuManager()
 T vgui::CSizerBase::CSizerMember::RecursiveInvalidateCachedSize()
 T vgui::CTreeViewListControl::CTreeViewListControl(vgui::Panel*, char const*)
 T vgui::CTreeViewListControl::DrawTitleBars()
 T vgui::CTreeViewListControl::GetAnimMap()
 T vgui::CTreeViewListControl::GetGridElementBounds(int, int, int&, int&, int&, int&)
 T vgui::CTreeViewListControl::GetKBMap()
 T vgui::CTreeViewListControl::GetMessageMap()
 T vgui::CTreeViewListControl::GetNumColumns() const
 T vgui::CTreeViewListControl::GetNumRows()
 T vgui::CTreeViewListControl::GetPanelClassName()
 T vgui::CTreeViewListControl::GetScrollBarSize()
 T vgui::CTreeViewListControl::GetTitleBarHeight()
 T vgui::CTreeViewListControl::GetTree()
 T vgui::CTreeViewListControl::GetTreeItemAtRow(int)
 T vgui::CTreeViewListControl::Paint()
 T vgui::CTreeViewListControl::PerformLayout()
 T vgui::CTreeViewListControl::PostChildPaint()
 T vgui::CTreeViewListControl::RecalculateRows_R(int)
 T vgui::CTreeViewListControl::SetBorderColor(Color)
 T vgui::CTreeViewListControl::SetColumnInfo(int, char const*, int, int)
 T vgui::CTreeViewListControl::SetNumColumns(int)
 T vgui::CTreeViewListControl::SetTitleBarInfo(unsigned long, int)
 T vgui::CTreeViewListControl::SetTreeView(vgui::TreeView*)
 T vgui::CTreeViewListControl::~CTreeViewListControl()
 T vgui::CheckButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CheckButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CheckButton::CheckButton(vgui::Panel*, char const*, char const*)
 T vgui::CheckButton::GetAnimMap()
 T vgui::CheckButton::GetBorder(bool, bool, bool, bool)
 T vgui::CheckButton::GetButtonFgColor()
 T vgui::CheckButton::GetKBMap()
 T vgui::CheckButton::GetMessageMap()
 T vgui::CheckButton::GetPanelClassName()
 T vgui::CheckButton::IsCheckButtonCheckable() const
 T vgui::CheckButton::OnCheckButtonChecked(vgui::Panel*)
 T vgui::CheckButton::SetCheckButtonCheckable(bool)
 T vgui::CheckButton::SetSelected(bool)
 T vgui::CheckButton::~CheckButton()
 T vgui::CircularProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CircularProgressBar::ApplySettings(KeyValues*)
 T vgui::CircularProgressBar::CircularProgressBar(vgui::Panel*, char const*)
 T vgui::CircularProgressBar::DrawCircleSegment(Color, float, bool)
 T vgui::CircularProgressBar::GetAnimMap()
 T vgui::CircularProgressBar::GetKBMap()
 T vgui::CircularProgressBar::GetMessageMap()
 T vgui::CircularProgressBar::GetPanelClassName()
 T vgui::CircularProgressBar::Paint()
 T vgui::CircularProgressBar::PaintBackground()
 T vgui::CircularProgressBar::SetImage(char const*, progress_textures_t)
 T vgui::CircularProgressBar::~CircularProgressBar()
 T vgui::ClickPanel::ClickPanel(vgui::Panel*)
 T vgui::ClickPanel::GetAnimMap()
 T vgui::ClickPanel::GetKBMap()
 T vgui::ClickPanel::GetMessageMap()
 T vgui::ClickPanel::GetPanelClassName()
 T vgui::ClickPanel::OnMousePressed(ButtonCode_t)
 T vgui::ClickPanel::~ClickPanel()
 T vgui::ComboBox::ActivateItem(int)
 T vgui::ComboBox::ActivateItemByRow(int)
 T vgui::ComboBox::AddItem(char const*, KeyValues const*)
 T vgui::ComboBox::AddItem(wchar_t const*, KeyValues const*)
 T vgui::ComboBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ComboBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBox::ComboBox(vgui::Panel*, char const*, int, bool)
 T vgui::ComboBox::DoClick()
 T vgui::ComboBox::GetActiveItemUserData()
 T vgui::ComboBox::GetAnimMap()
 T vgui::ComboBox::GetItemCount()
 T vgui::ComboBox::GetKBMap()
 T vgui::ComboBox::GetMenu()
 T vgui::ComboBox::GetMessageMap()
 T vgui::ComboBox::GetPanelClassName()
 T vgui::ComboBox::HideMenu()
 T vgui::ComboBox::IsDropdownVisible()
 T vgui::ComboBox::IsItemIDValid(int)
 T vgui::ComboBox::OnCommand(char const*)
 T vgui::ComboBox::OnCursorEntered()
 T vgui::ComboBox::OnCursorExited()
 T vgui::ComboBox::OnHideMenu(vgui::Menu*)
 T vgui::ComboBox::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ComboBox::OnKeyTyped(wchar_t)
 T vgui::ComboBox::OnKillFocus()
 T vgui::ComboBox::OnMenuClose()
 T vgui::ComboBox::OnMenuItemSelected()
 T vgui::ComboBox::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ComboBox::OnMousePressed(ButtonCode_t)
 T vgui::ComboBox::OnSetFocus()
 T vgui::ComboBox::OnSetText(wchar_t const*)
 T vgui::ComboBox::OnShowMenu(vgui::Menu*)
 T vgui::ComboBox::OnSizeChanged(int, int)
 T vgui::ComboBox::PerformLayout()
 T vgui::ComboBox::SetDropdownButtonVisible(bool)
 T vgui::ComboBox::SetFont(unsigned long)
 T vgui::ComboBox::SetItemEnabled(char const*, bool)
 T vgui::ComboBox::SetItemEnabled(int, bool)
 T vgui::ComboBox::SetMenu(vgui::Menu*)
 T vgui::ComboBox::SetNumberOfEditLines(int)
 T vgui::ComboBox::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::ComboBox::SetUseFallbackFont(bool, unsigned long)
 T vgui::ComboBox::ShowMenu()
 T vgui::ComboBox::SortItems()
 T vgui::ComboBox::UpdateItem(int, char const*, KeyValues const*)
 T vgui::ComboBox::UpdateItem(int, wchar_t const*, KeyValues const*)
 T vgui::ComboBox::~ComboBox()
 T vgui::ComboBoxButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBoxButton::GetBorder(bool, bool, bool, bool)
 T vgui::ComboBoxButton::GetButtonBgColor()
 T vgui::ComboBoxButton::OnCursorExited()
 T vgui::ComboBoxButton::~ComboBoxButton()
 T vgui::ContinuousProgressBar::ContinuousProgressBar(vgui::Panel*, char const*)
 T vgui::ContinuousProgressBar::GetAnimMap()
 T vgui::ContinuousProgressBar::GetKBMap()
 T vgui::ContinuousProgressBar::GetMessageMap()
 T vgui::ContinuousProgressBar::GetPanelClassName()
 T vgui::ContinuousProgressBar::Paint()
 T vgui::ContinuousProgressBar::~ContinuousProgressBar()
 T vgui::CvarToggleCheckButton<ConVarRef>::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CvarToggleCheckButton<ConVarRef>::ApplySettings(KeyValues*)
 T vgui::CvarToggleCheckButton<ConVarRef>::CvarToggleCheckButton(vgui::Panel*, char const*, char const*, char const*, bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::GetAnimMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetPanelClassName()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnApplyChanges()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnButtonChecked()
 T vgui::CvarToggleCheckButton<ConVarRef>::Paint()
 T vgui::CvarToggleCheckButton<ConVarRef>::SetSelected(bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::~CvarToggleCheckButton()
 T vgui::Divider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Divider::Divider(vgui::Panel*, char const*)
 T vgui::Divider::GetAnimMap()
 T vgui::Divider::GetKBMap()
 T vgui::Divider::GetMessageMap()
 T vgui::Divider::GetPanelClassName()
 T vgui::Divider::~Divider()
 T vgui::EditablePanel::ActivateBuildMode()
 T vgui::EditablePanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::EditablePanel::ApplySettings(KeyValues*)
 T vgui::EditablePanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::CreateControlByName(char const*)
 T vgui::EditablePanel::EditablePanel(vgui::Panel*, char const*)
 T vgui::EditablePanel::ForceSubPanelsToUpdateWithNewDialogVariables()
 T vgui::EditablePanel::GetAnimMap()
 T vgui::EditablePanel::GetBuildGroup()
 T vgui::EditablePanel::GetControlInt(char const*, int)
 T vgui::EditablePanel::GetControlString(char const*, char const*)
 T vgui::EditablePanel::GetControlString(char const*, char*, int, char const*)
 T vgui::EditablePanel::GetCurrentKeyFocus()
 T vgui::EditablePanel::GetDialogVariables()
 T vgui::EditablePanel::GetFocusNavGroup()
 T vgui::EditablePanel::GetKBMap()
 T vgui::EditablePanel::GetMessageMap()
 T vgui::EditablePanel::GetPanelClassName()
 T vgui::EditablePanel::GetUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::HasHotkey(wchar_t)
 T vgui::EditablePanel::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::EditablePanel::LoadControlSettingsAndUserConfig(char const*, int)
 T vgui::EditablePanel::LoadUserConfig(char const*, int)
 T vgui::EditablePanel::OnChildAdded(unsigned int)
 T vgui::EditablePanel::OnClose()
 T vgui::EditablePanel::OnCurrentDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnFindDefaultButton()
 T vgui::EditablePanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::EditablePanel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::EditablePanel::OnSetFocus()
 T vgui::EditablePanel::OnSizeChanged(int, int)
 T vgui::EditablePanel::PaintBackground()
 T vgui::EditablePanel::PerformLayout()
 T vgui::EditablePanel::RegisterControlSettingsFile(char const*, char const*)
 T vgui::EditablePanel::RequestFocus(int)
 T vgui::EditablePanel::RequestFocusNext(unsigned int)
 T vgui::EditablePanel::RequestFocusPrev(unsigned int)
 T vgui::EditablePanel::RequestInfo(KeyValues*)
 T vgui::EditablePanel::SaveUserConfig()
 T vgui::EditablePanel::SetControlEnabled(char const*, bool)
 T vgui::EditablePanel::SetControlInt(char const*, int)
 T vgui::EditablePanel::SetControlString(char const*, char const*)
 T vgui::EditablePanel::SetControlString(char const*, wchar_t const*)
 T vgui::EditablePanel::SetControlVisible(char const*, bool)
 T vgui::EditablePanel::SetDialogVariable(char const*, char const*)
 T vgui::EditablePanel::SetDialogVariable(char const*, float)
 T vgui::EditablePanel::SetDialogVariable(char const*, int)
 T vgui::EditablePanel::SetDialogVariable(char const*, wchar_t const*)
 T vgui::EditablePanel::~EditablePanel()
 T vgui::ExpandButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ExpandButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ExpandButton::ExpandButton(vgui::Panel*, char const*)
 T vgui::ExpandButton::GetAnimMap()
 T vgui::ExpandButton::GetBorder(bool, bool, bool, bool)
 T vgui::ExpandButton::GetKBMap()
 T vgui::ExpandButton::GetMessageMap()
 T vgui::ExpandButton::GetPanelClassName()
 T vgui::ExpandButton::OnExpanded(vgui::Panel*)
 T vgui::ExpandButton::Paint()
 T vgui::ExpandButton::SetSelected(bool)
 T vgui::ExpandButton::~ExpandButton()
 T vgui::FindOrAddPanelKeyBindingMap(char const*)
 T vgui::FindOrAddPanelMessageMap(char const*)
 T vgui::FocusNavGroup::CanButtonBeDefault(unsigned int)
 T vgui::FocusNavGroup::FindPanelByHotkey(wchar_t)
 T vgui::FocusNavGroup::FocusNavGroup(vgui::Panel*)
 T vgui::FocusNavGroup::GetCurrentDefaultButton()
 T vgui::FocusNavGroup::GetCurrentFocus()
 T vgui::FocusNavGroup::GetDefaultButton()
 T vgui::FocusNavGroup::GetDefaultPanel()
 T vgui::FocusNavGroup::RequestFocusNext(unsigned int)
 T vgui::FocusNavGroup::RequestFocusPrev(unsigned int)
 T vgui::FocusNavGroup::SetCurrentDefaultButton(unsigned int, bool)
 T vgui::FocusNavGroup::SetCurrentFocus(unsigned int, unsigned int)
 T vgui::FocusNavGroup::SetDefaultButton(vgui::Panel*)
 T vgui::FocusNavGroup::SetFocusTopLevel(bool)
 T vgui::FocusNavGroup::~FocusNavGroup()
 T vgui::Frame::Activate()
 T vgui::Frame::ActivateMinimized()
 T vgui::Frame::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Frame::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Frame::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Frame::ApplySettings(KeyValues*)
 T vgui::Frame::ApplyUserConfigSettings(KeyValues*)
 T vgui::Frame::Close()
 T vgui::Frame::CloseModal()
 T vgui::Frame::DoModal()
 T vgui::Frame::FlashWindow()
 T vgui::Frame::FlashWindowStop()
 T vgui::Frame::Frame(vgui::Panel*, char const*, bool, bool)
 T vgui::Frame::GetAnimMap()
 T vgui::Frame::GetBottomRightSize()
 T vgui::Frame::GetCaptionHeight()
 T vgui::Frame::GetClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetClipToParent() const
 T vgui::Frame::GetCornerSize()
 T vgui::Frame::GetDefaultScreenPosition(int&, int&, int&, int&)
 T vgui::Frame::GetDescription()
 T vgui::Frame::GetDraggerSize()
 T vgui::Frame::GetKBMap()
 T vgui::Frame::GetMessageMap()
 T vgui::Frame::GetPanelClassName()
 T vgui::Frame::GetSettings(KeyValues*)
 T vgui::Frame::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetSysMenu()
 T vgui::Frame::GetUserConfigSettings(KeyValues*)
 T vgui::Frame::GetVar_m_iTitleTextInsetXOverride(vgui::Panel*)
 T vgui::Frame::GetVar_m_iTitleTextInsetYOverride(vgui::Panel*)
 T vgui::Frame::HasUserConfigSettings()
 T vgui::Frame::InternalFlashWindow()
 T vgui::Frame::InternalSetTitle(char const*)
 T vgui::Frame::IsMinimized()
 T vgui::Frame::IsMoveable()
 T vgui::Frame::IsSizeable()
 T vgui::Frame::IsSmallCaption() const
 T vgui::Frame::LayoutProportional(vgui::FrameButton*)
 T vgui::Frame::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::Frame::MoveToCenterOfScreen()
 T vgui::Frame::OnChildAdded(unsigned int)
 T vgui::Frame::OnClose()
 T vgui::Frame::OnCloseFrameButtonPressed()
 T vgui::Frame::OnCommand(char const*)
 T vgui::Frame::OnDialogVariablesChanged(KeyValues*)
 T vgui::Frame::OnFinishedClose()
 T vgui::Frame::OnFrameFocusChanged(bool)
 T vgui::Frame::OnGripPanelMoveFinished()
 T vgui::Frame::OnGripPanelMoved(int, int, int, int)
 T vgui::Frame::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Frame::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Frame::OnKeyFocusTicked()
 T vgui::Frame::OnKeyTyped(wchar_t)
 T vgui::Frame::OnMinimize()
 T vgui::Frame::OnMinimizeToSysTray()
 T vgui::Frame::OnMousePressed(ButtonCode_t)
 T vgui::Frame::OnScreenSizeChanged(int, int)
 T vgui::Frame::OnThink()
 T vgui::Frame::PaintBackground()
 T vgui::Frame::PerformLayout()
 T vgui::Frame::PlaceUnderCursor()
 T vgui::Frame::SetClipToParent(bool)
 T vgui::Frame::SetCloseButtonVisible(bool)
 T vgui::Frame::SetDeleteSelfOnClose(bool)
 T vgui::Frame::SetMaximizeButtonVisible(bool)
 T vgui::Frame::SetMenuButtonResponsive(bool)
 T vgui::Frame::SetMenuButtonVisible(bool)
 T vgui::Frame::SetMinimizeButtonVisible(bool)
 T vgui::Frame::SetMinimizeToSysTrayButtonVisible(bool)
 T vgui::Frame::SetMoveable(bool)
 T vgui::Frame::SetSizeable(bool)
 T vgui::Frame::SetSmallCaption(bool)
 T vgui::Frame::SetSysMenu(vgui::Menu*)
 T vgui::Frame::SetTitle(char const*, bool)
 T vgui::Frame::SetTitle(wchar_t const*, bool)
 T vgui::Frame::SetTitleBarVisible(bool)
 T vgui::Frame::SetupResizeCursors()
 T vgui::Frame::~Frame()
 T vgui::FrameButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameButton::FrameButton(vgui::Panel*, char const*, char const*)
 T vgui::FrameButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameButton::PerformLayout()
 T vgui::FrameButton::SetDisabledLook(bool)
 T vgui::FrameButton::~FrameButton()
 T vgui::FrameSystemButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameSystemButton::FrameSystemButton(vgui::Panel*, char const*)
 T vgui::FrameSystemButton::GetAnimMap()
 T vgui::FrameSystemButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameSystemButton::GetKBMap()
 T vgui::FrameSystemButton::GetMessageMap()
 T vgui::FrameSystemButton::GetPanelClassName()
 T vgui::FrameSystemButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::FrameSystemButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameSystemButton::SetEnabled(bool)
 T vgui::FrameSystemButton::~FrameSystemButton()
 T vgui::GetAnimationController()
 T vgui::GetControlsModuleName()
 T vgui::GraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::GraphPanel::GetAnimMap()
 T vgui::GraphPanel::GetKBMap()
 T vgui::GraphPanel::GetMessageMap()
 T vgui::GraphPanel::GetPanelClassName()
 T vgui::GraphPanel::GraphPanel(vgui::Panel*, char const*)
 T vgui::GraphPanel::Paint()
 T vgui::GraphPanel::PerformLayout()
 T vgui::GraphPanel::~GraphPanel()
 T vgui::Image::DrawFilledRect(int, int, int, int)
 T vgui::Image::DrawLine(int, int, int, int)
 T vgui::Image::DrawOutlinedRect(int, int, int, int)
 T vgui::Image::DrawPolyLine(int*, int*, int)
 T vgui::Image::DrawPrintChar(int, int, wchar_t)
 T vgui::Image::DrawPrintChar(wchar_t)
 T vgui::Image::DrawPrintText(int, int, wchar_t const*, int)
 T vgui::Image::DrawPrintText(wchar_t const*, int)
 T vgui::Image::DrawSetColor(Color)
 T vgui::Image::DrawSetColor(int, int, int, int)
 T vgui::Image::DrawSetTextColor(Color)
 T vgui::Image::DrawSetTextColor(int, int, int, int)
 T vgui::Image::DrawSetTextFont(unsigned long)
 T vgui::Image::DrawSetTextPos(int, int)
 T vgui::Image::DrawSetTexture(int)
 T vgui::Image::DrawTexturedRect(int, int, int, int)
 T vgui::Image::Evict()
 T vgui::Image::GetColor()
 T vgui::Image::GetContentSize(int&, int&)
 T vgui::Image::GetID()
 T vgui::Image::GetNumFrames()
 T vgui::Image::GetPos(int&, int&)
 T vgui::Image::GetSize(int&, int&)
 T vgui::Image::GetTall()
 T vgui::Image::GetWide()
 T vgui::Image::Image()
 T vgui::Image::SetBkColor(Color)
 T vgui::Image::SetColor(Color)
 T vgui::Image::SetFrame(int)
 T vgui::Image::SetPos(int, int)
 T vgui::Image::SetRotation(int)
 T vgui::Image::SetSize(int, int)
 T vgui::Image::~Image()
 T vgui::ImageList::GetImage(int)
 T vgui::ImageList::IsValidIndex(int)
 T vgui::ImageList::~ImageList()
 T vgui::ImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ImagePanel::ApplySettings(KeyValues*)
 T vgui::ImagePanel::GetAnimMap()
 T vgui::ImagePanel::GetDescription()
 T vgui::ImagePanel::GetDrawColor()
 T vgui::ImagePanel::GetImage()
 T vgui::ImagePanel::GetKBMap()
 T vgui::ImagePanel::GetMessageMap()
 T vgui::ImagePanel::GetPanelClassName()
 T vgui::ImagePanel::GetSettings(KeyValues*)
 T vgui::ImagePanel::ImagePanel(vgui::Panel*, char const*)
 T vgui::ImagePanel::OnSizeChanged(int, int)
 T vgui::ImagePanel::PaintBackground()
 T vgui::ImagePanel::SetDrawColor(Color)
 T vgui::ImagePanel::SetImage(char const*)
 T vgui::ImagePanel::SetImage(vgui::IImage*)
 T vgui::ImagePanel::~ImagePanel()
 T vgui::Label::AddImage(vgui::IImage*, int)
 T vgui::Label::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Label::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Label::ApplySettings(KeyValues*)
 T vgui::Label::CalculateHotkey(char const*)
 T vgui::Label::CalculateHotkey(wchar_t const*)
 T vgui::Label::ClearImages()
 T vgui::Label::ComputeAlignment(int&, int&, int&, int&)
 T vgui::Label::DrawDashedLine(int, int, int, int, int, int)
 T vgui::Label::EnsureImageCapacity(int)
 T vgui::Label::GetAnimMap()
 T vgui::Label::GetContentSize(int&, int&)
 T vgui::Label::GetDescription()
 T vgui::Label::GetDisabledFgColor1()
 T vgui::Label::GetDisabledFgColor2()
 T vgui::Label::GetFgColor()
 T vgui::Label::GetFont()
 T vgui::Label::GetHotKey()
 T vgui::Label::GetImageAtIndex(int)
 T vgui::Label::GetImageCount()
 T vgui::Label::GetKBMap()
 T vgui::Label::GetMessageMap()
 T vgui::Label::GetPanelClassName()
 T vgui::Label::GetSettings(KeyValues*)
 T vgui::Label::GetSizerMinimumSize(int&, int&)
 T vgui::Label::GetText(char*, int)
 T vgui::Label::GetText(wchar_t*, int)
 T vgui::Label::GetTextImage()
 T vgui::Label::GetTextInset(int*, int*)
 T vgui::Label::GetUnpackStructure() const
 T vgui::Label::HandleAutoSizing()
 T vgui::Label::HasHotkey(wchar_t)
 T vgui::Label::Label(vgui::Panel*, char const*, char const*)
 T vgui::Label::Label(vgui::Panel*, char const*, wchar_t const*)
 T vgui::Label::OnDialogVariablesChanged(KeyValues*)
 T vgui::Label::OnHotkeyPressed()
 T vgui::Label::OnMousePressed(ButtonCode_t)
 T vgui::Label::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Label::OnSetText(KeyValues*)
 T vgui::Label::OnSizeChanged(int, int)
 T vgui::Label::Paint()
 T vgui::Label::PerformLayout()
 T vgui::Label::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::Label::RequestInfo(KeyValues*)
 T vgui::Label::ResetToSimpleTextImage()
 T vgui::Label::SetAssociatedControl(vgui::Panel*)
 T vgui::Label::SetContentAlignment(vgui::Label::Alignment)
 T vgui::Label::SetDisabledFgColor1(Color)
 T vgui::Label::SetDisabledFgColor2(Color)
 T vgui::Label::SetEnabled(bool)
 T vgui::Label::SetFgColor(Color)
 T vgui::Label::SetFont(unsigned long)
 T vgui::Label::SetHotkey(wchar_t)
 T vgui::Label::SetImage(vgui::IImage*, int)
 T vgui::Label::SetImageAtIndex(int, vgui::IImage*, int)
 T vgui::Label::SetImageBounds(int, int, int)
 T vgui::Label::SetImagePreOffset(int, int)
 T vgui::Label::SetText(char const*)
 T vgui::Label::SetText(wchar_t const*, bool)
 T vgui::Label::SetTextColorState(vgui::Label::EColorState)
 T vgui::Label::SetTextImageIndex(int)
 T vgui::Label::SetTextInset(int, int)
 T vgui::Label::SizeToContents()
 T vgui::Label::~Label()
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int)
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int, int, int)
 T vgui::ListPanel::AddItem(KeyValues const*, unsigned int, bool, bool)
 T vgui::ListPanel::AddSelectedItem(int)
 T vgui::ListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListPanel::ApplyItemChanges(int)
 T vgui::ListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListPanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::ListPanel::ClearSelectedItems()
 T vgui::ListPanel::DeleteAllItems()
 T vgui::ListPanel::EnterEditMode(int, int, vgui::Panel*)
 T vgui::ListPanel::FindColumn(char const*)
 T vgui::ListPanel::FirstItem() const
 T vgui::ListPanel::GetAnimMap()
 T vgui::ListPanel::GetCellAtPos(int, int, int&, int&)
 T vgui::ListPanel::GetCellBounds(int, int, int&, int&, int&, int&)
 T vgui::ListPanel::GetCellImage(int, int)
 T vgui::ListPanel::GetCellRenderer(int, int)
 T vgui::ListPanel::GetCellText(int, int, wchar_t*, int)
 T vgui::ListPanel::GetColumnHeaderText(int, char*, int)
 T vgui::ListPanel::GetItem(char const*)
 T vgui::ListPanel::GetItem(int)
 T vgui::ListPanel::GetItemCount()
 T vgui::ListPanel::GetItemCurrentRow(int)
 T vgui::ListPanel::GetItemData(int)
 T vgui::ListPanel::GetItemIDFromRow(int)
 T vgui::ListPanel::GetItemIDFromUserData(unsigned int)
 T vgui::ListPanel::GetItemUserData(int)
 T vgui::ListPanel::GetKBMap()
 T vgui::ListPanel::GetMessageMap()
 T vgui::ListPanel::GetNumColumnHeaders() const
 T vgui::ListPanel::GetPanelClassName()
 T vgui::ListPanel::GetRowsPerPage()
 T vgui::ListPanel::GetSelectedColumn()
 T vgui::ListPanel::GetSelectedItem(int)
 T vgui::ListPanel::GetSelectedItemsCount()
 T vgui::ListPanel::GetStartItem()
 T vgui::ListPanel::GetUserConfigSettings(KeyValues*)
 T vgui::ListPanel::HandleAddSelection(int, int, int)
 T vgui::ListPanel::HandleMultiSelection(int, int, int)
 T vgui::ListPanel::HasUserConfigSettings()
 T vgui::ListPanel::IndexItem(int)
 T vgui::ListPanel::InvalidItemID() const
 T vgui::ListPanel::IsInEditMode()
 T vgui::ListPanel::IsItemSelected(int)
 T vgui::ListPanel::IsValidItemID(int)
 T vgui::ListPanel::LeaveEditMode()
 T vgui::ListPanel::ListPanel(vgui::Panel*, char const*)
 T vgui::ListPanel::NextItem(int) const
 T vgui::ListPanel::OnColumnResized(int, int)
 T vgui::ListPanel::OnCreateDragData(KeyValues*)
 T vgui::ListPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListPanel::OnMouseWheeled(int)
 T vgui::ListPanel::OnSetSortColumn(int)
 T vgui::ListPanel::OnSizeChanged(int, int)
 T vgui::ListPanel::OnSliderMoved()
 T vgui::ListPanel::OnToggleColumnVisible(int)
 T vgui::ListPanel::OpenColumnChoiceMenu()
 T vgui::ListPanel::Paint()
 T vgui::ListPanel::PaintBackground()
 T vgui::ListPanel::PerformLayout()
 T vgui::ListPanel::RBTreeLessFunc(vgui::ListPanel::IndexItem_t&, vgui::ListPanel::IndexItem_t&)
 T vgui::ListPanel::RemoveAll()
 T vgui::ListPanel::RemoveColumn(int)
 T vgui::ListPanel::RemoveItem(int)
 T vgui::ListPanel::RereadAllItems()
 T vgui::ListPanel::ResizeColumnToContents(int)
 T vgui::ListPanel::ResortColumnRBTree(int)
 T vgui::ListPanel::SetAllowUserModificationOfColumns(bool)
 T vgui::ListPanel::SetColumnHeaderHeight(int)
 T vgui::ListPanel::SetColumnHeaderImage(int, int)
 T vgui::ListPanel::SetColumnHeaderText(int, char const*)
 T vgui::ListPanel::SetColumnHeaderText(int, wchar_t*)
 T vgui::ListPanel::SetColumnHeaderTooltip(int, char const*)
 T vgui::ListPanel::SetColumnSortable(int, bool)
 T vgui::ListPanel::SetColumnTextAlignment(int, int)
 T vgui::ListPanel::SetColumnVisible(int, bool)
 T vgui::ListPanel::SetEmptyListText(char const*)
 T vgui::ListPanel::SetEmptyListText(wchar_t const*)
 T vgui::ListPanel::SetFont(unsigned long)
 T vgui::ListPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListPanel::SetItemDisabled(int, bool)
 T vgui::ListPanel::SetItemVisible(int, bool)
 T vgui::ListPanel::SetSelectIndividualCells(bool)
 T vgui::ListPanel::SetSelectedCell(int, int)
 T vgui::ListPanel::SetSingleSelectedItem(int)
 T vgui::ListPanel::SetSortColumn(int)
 T vgui::ListPanel::SetSortColumnEx(int, int, bool)
 T vgui::ListPanel::SetSortFunc(int, int (*)(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&))
 T vgui::ListPanel::SetUserData(int, unsigned int)
 T vgui::ListPanel::SortList()
 T vgui::ListPanel::UpdateSelection(ButtonCode_t, int, int, int, int)
 T vgui::ListPanel::~ListPanel()
 T vgui::ListViewItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewItem::GetAnimMap()
 T vgui::ListViewItem::GetKBMap()
 T vgui::ListViewItem::GetMessageMap()
 T vgui::ListViewItem::GetPanelClassName()
 T vgui::ListViewItem::ListViewItem(vgui::Panel*)
 T vgui::ListViewItem::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewItem::OnMousePressed(ButtonCode_t)
 T vgui::ListViewItem::PaintBackground()
 T vgui::ListViewItem::PerformLayout()
 T vgui::ListViewItem::UpdateImage()
 T vgui::ListViewItem::~ListViewItem()
 T vgui::ListViewPanel::AddItem(KeyValues const*, bool, bool)
 T vgui::ListViewPanel::AddSelectedItem(int)
 T vgui::ListViewPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListViewPanel::ApplyItemChanges(int)
 T vgui::ListViewPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewPanel::ClearSelectedItems()
 T vgui::ListViewPanel::DeleteAllItems()
 T vgui::ListViewPanel::FinishKeyPress(int)
 T vgui::ListViewPanel::GetAnimMap()
 T vgui::ListViewPanel::GetItem(int)
 T vgui::ListViewPanel::GetItemCount()
 T vgui::ListViewPanel::GetItemIDFromPos(int)
 T vgui::ListViewPanel::GetItemsPerColumn()
 T vgui::ListViewPanel::GetKBMap()
 T vgui::ListViewPanel::GetMessageMap()
 T vgui::ListViewPanel::GetPanelClassName()
 T vgui::ListViewPanel::GetSelectedItem(int)
 T vgui::ListViewPanel::GetSelectedItemsCount()
 T vgui::ListViewPanel::InvalidItemID()
 T vgui::ListViewPanel::IsValidItemID(int)
 T vgui::ListViewPanel::ListViewPanel(vgui::Panel*, char const*)
 T vgui::ListViewPanel::OnItemMousePressed(vgui::ListViewItem*, ButtonCode_t)
 T vgui::ListViewPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListViewPanel::OnKeyTyped(wchar_t)
 T vgui::ListViewPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMouseWheeled(int)
 T vgui::ListViewPanel::OnShiftSelect(int)
 T vgui::ListViewPanel::OnSizeChanged(int, int)
 T vgui::ListViewPanel::OnSliderMoved()
 T vgui::ListViewPanel::Paint()
 T vgui::ListViewPanel::PerformLayout()
 T vgui::ListViewPanel::RemoveItem(int)
 T vgui::ListViewPanel::ScrollToItem(int)
 T vgui::ListViewPanel::SetFont(unsigned long)
 T vgui::ListViewPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListViewPanel::SetSingleSelectedItem(int)
 T vgui::ListViewPanel::SetSortFunc(bool (*)(KeyValues*, KeyValues*))
 T vgui::ListViewPanel::SortList()
 T vgui::ListViewPanel::~ListViewPanel()
 T vgui::Menu::ActivateItem(int)
 T vgui::Menu::ActivateItemByRow(int)
 T vgui::Menu::AddCascadingMenuItem(char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(vgui::MenuItem*)
 T vgui::Menu::AddScrollBar()
 T vgui::Menu::AddSeparator()
 T vgui::Menu::AddSeparatorAfterItem(int)
 T vgui::Menu::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Menu::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Menu::ClearCurrentlyHighlightedItem()
 T vgui::Menu::CloseOtherMenus(vgui::MenuItem*)
 T vgui::Menu::ComputeFullMenuHeightWithInsets()
 T vgui::Menu::DeleteAllItems()
 T vgui::Menu::ForceCalculateWidth()
 T vgui::Menu::GetActiveItem()
 T vgui::Menu::GetAnimMap()
 T vgui::Menu::GetCurrentlyHighlightedItem()
 T vgui::Menu::GetInvalidMenuID()
 T vgui::Menu::GetItemCount()
 T vgui::Menu::GetItemText(int, wchar_t*, int)
 T vgui::Menu::GetItemUserData(int)
 T vgui::Menu::GetKBMap()
 T vgui::Menu::GetMenuID(int)
 T vgui::Menu::GetMenuItem(int)
 T vgui::Menu::GetMenuItemHeight() const
 T vgui::Menu::GetMenuMode()
 T vgui::Menu::GetMessageMap()
 T vgui::Menu::GetPanelClassName()
 T vgui::Menu::GetTypeAheadMode()
 T vgui::Menu::IsValidMenuID(int)
 T vgui::Menu::LayoutMenuBorder()
 T vgui::Menu::LayoutScrollBar()
 T vgui::Menu::MakeItemsVisibleInScrollRange(int, int)
 T vgui::Menu::Menu(vgui::Panel*, char const*)
 T vgui::Menu::MoveAlongMenuItemList(int, int)
 T vgui::Menu::MoveMenuItem(int, int)
 T vgui::Menu::OnCommand(char const*)
 T vgui::Menu::OnCursorEnteredMenuItem(int)
 T vgui::Menu::OnCursorExitedMenuItem(int)
 T vgui::Menu::OnCursorMoved(int, int)
 T vgui::Menu::OnHotKey(wchar_t)
 T vgui::Menu::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::Menu::OnKeyCodePressed(ButtonCode_t)
 T vgui::Menu::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Menu::OnKeyModeSet()
 T vgui::Menu::OnKeyTyped(wchar_t)
 T vgui::Menu::OnKillFocus()
 T vgui::Menu::OnMenuItemSelected(vgui::Panel*)
 T vgui::Menu::OnMouseWheeled(int)
 T vgui::Menu::OnSliderMoved()
 T vgui::Menu::OnTypeAhead(wchar_t)
 T vgui::Menu::Paint()
 T vgui::Menu::PerformLayout()
 T vgui::Menu::PlaceContextMenu(vgui::Panel*, vgui::Menu*)
 T vgui::Menu::PositionCascadingMenu()
 T vgui::Menu::PositionRelativeToPanel(vgui::Panel*, vgui::Menu::MenuDirection_e, int, bool)
 T vgui::Menu::RemoveScrollBar()
 T vgui::Menu::SetBgColor(Color)
 T vgui::Menu::SetBorder(vgui::IBorder*)
 T vgui::Menu::SetCurrentlyHighlightedItem(int)
 T vgui::Menu::SetCurrentlySelectedItem(int)
 T vgui::Menu::SetFgColor(Color)
 T vgui::Menu::SetFixedWidth(int)
 T vgui::Menu::SetFont(unsigned long)
 T vgui::Menu::SetItemEnabled(char const*, bool)
 T vgui::Menu::SetItemEnabled(int, bool)
 T vgui::Menu::SetItemVisible(char const*, bool)
 T vgui::Menu::SetItemVisible(int, bool)
 T vgui::Menu::SetMenuItemChecked(int, bool)
 T vgui::Menu::SetMenuItemHeight(int)
 T vgui::Menu::SetNumberOfVisibleItems(int)
 T vgui::Menu::SetTypeAheadMode(vgui::Menu::MenuTypeAheadMode)
 T vgui::Menu::SetUseFallbackFont(bool, unsigned long)
 T vgui::Menu::SetVisible(bool)
 T vgui::Menu::UpdateMenuItem(int, char const*, KeyValues*, KeyValues const*)
 T vgui::Menu::UpdateMenuItem(int, wchar_t const*, KeyValues*, KeyValues const*)
 T vgui::Menu::~Menu()
 T vgui::MenuBar::AddButton(vgui::MenuButton*)
 T vgui::MenuBar::AddMenu(char const*, vgui::Menu*)
 T vgui::MenuBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuBar::GetAnimMap()
 T vgui::MenuBar::GetContentSize(int&, int&)
 T vgui::MenuBar::GetKBMap()
 T vgui::MenuBar::GetMessageMap()
 T vgui::MenuBar::GetPanelClassName()
 T vgui::MenuBar::MenuBar(vgui::Panel*, char const*)
 T vgui::MenuBar::OnCursorEnteredMenuButton(int)
 T vgui::MenuBar::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuBar::OnKeyTyped(wchar_t)
 T vgui::MenuBar::OnMenuClose()
 T vgui::MenuBar::Paint()
 T vgui::MenuBar::PerformLayout()
 T vgui::MenuBar::~MenuBar()
 T vgui::MenuButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuButton::CanBeDefaultButton()
 T vgui::MenuButton::DoClick()
 T vgui::MenuButton::DrawFocusBorder(int, int, int, int)
 T vgui::MenuButton::GetAnimMap()
 T vgui::MenuButton::GetKBMap()
 T vgui::MenuButton::GetMenu()
 T vgui::MenuButton::GetMessageMap()
 T vgui::MenuButton::GetPanelClassName()
 T vgui::MenuButton::HideMenu()
 T vgui::MenuButton::MenuButton(vgui::Panel*, char const*, char const*)
 T vgui::MenuButton::OnCheckMenuItemCount()
 T vgui::MenuButton::OnCursorEntered()
 T vgui::MenuButton::OnCursorMoved(int, int)
 T vgui::MenuButton::OnHideMenu(vgui::Menu*)
 T vgui::MenuButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuButton::OnKillFocus(KeyValues*)
 T vgui::MenuButton::OnMenuClose()
 T vgui::MenuButton::OnShowMenu(vgui::Menu*)
 T vgui::MenuButton::Paint()
 T vgui::MenuButton::PerformLayout()
 T vgui::MenuButton::SetMenu(vgui::Menu*)
 T vgui::MenuButton::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::MenuButton::SetOpenOffsetY(int)
 T vgui::MenuButton::~MenuButton()
 T vgui::MenuItem::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuItem::ArmItem()
 T vgui::MenuItem::CanBeDefaultButton()
 T vgui::MenuItem::CloseCascadeMenu()
 T vgui::MenuItem::DisarmItem()
 T vgui::MenuItem::FireActionSignal()
 T vgui::MenuItem::GetAnimMap()
 T vgui::MenuItem::GetBorder(bool, bool, bool, bool)
 T vgui::MenuItem::GetCheckImageSize(int&, int&)
 T vgui::MenuItem::GetContentSize(int&, int&)
 T vgui::MenuItem::GetKBMap()
 T vgui::MenuItem::GetMenu()
 T vgui::MenuItem::GetMessageMap()
 T vgui::MenuItem::GetPanelClassName()
 T vgui::MenuItem::GetParentMenu()
 T vgui::MenuItem::GetUserData()
 T vgui::MenuItem::HasMenu()
 T vgui::MenuItem::Init()
 T vgui::MenuItem::IsCheckable()
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, char const*, vgui::Menu*, bool)
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, wchar_t const*, vgui::Menu*, bool)
 T vgui::MenuItem::OnCursorEntered()
 T vgui::MenuItem::OnCursorExited()
 T vgui::MenuItem::OnCursorMoved(int, int)
 T vgui::MenuItem::OnKeyCodeReleased(ButtonCode_t)
 T vgui::MenuItem::OnKeyModeSet()
 T vgui::MenuItem::OnKillFocus()
 T vgui::MenuItem::OpenCascadeMenu()
 T vgui::MenuItem::Paint()
 T vgui::MenuItem::PerformLayout()
 T vgui::MenuItem::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::MenuItem::SetChecked(bool)
 T vgui::MenuItem::SetUserData(KeyValues const*)
 T vgui::MenuItem::~MenuItem()
 T vgui::MenuSeparator::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuSeparator::GetAnimMap()
 T vgui::MenuSeparator::GetKBMap()
 T vgui::MenuSeparator::GetMessageMap()
 T vgui::MenuSeparator::GetPanelClassName()
 T vgui::MenuSeparator::MenuSeparator(vgui::Panel*, char const*)
 T vgui::MenuSeparator::Paint()
 T vgui::MenuSeparator::~MenuSeparator()
 T vgui::MessageBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MessageBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MessageBox::DisableCloseButton(bool)
 T vgui::MessageBox::DoModal(vgui::Frame*)
 T vgui::MessageBox::GetAnimMap()
 T vgui::MessageBox::GetKBMap()
 T vgui::MessageBox::GetMessageMap()
 T vgui::MessageBox::GetPanelClassName()
 T vgui::MessageBox::Init()
 T vgui::MessageBox::MessageBox(char const*, char const*, vgui::Panel*)
 T vgui::MessageBox::OnCommand(char const*)
 T vgui::MessageBox::OnShutdownRequest()
 T vgui::MessageBox::PerformLayout()
 T vgui::MessageBox::SetCommand(KeyValues*)
 T vgui::MessageBox::SetCommand(char const*)
 T vgui::MessageBox::SetOKButtonText(char const*)
 T vgui::MessageBox::SetOKButtonText(wchar_t const*)
 T vgui::MessageBox::SetOKButtonVisible(bool)
 T vgui::MessageBox::ShowWindow(vgui::Frame*)
 T vgui::MessageBox::~MessageBox()
 T vgui::PHandle::Get()
 T vgui::PHandle::Set(vgui::Panel*)
 T vgui::Panel::AddActionSignalTarget(unsigned int)
 T vgui::Panel::AddActionSignalTarget(vgui::Panel*)
 T vgui::Panel::AddKeyBinding(char const*, int, int)
 T vgui::Panel::AddPropertyConverter(char const*, vgui::IPanelAnimationPropertyConverter*)
 T vgui::Panel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Panel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Panel::AddToOverridableColors(Color*, char const*)
 T vgui::Panel::ApplyAutoResizeSettings(KeyValues*)
 T vgui::Panel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Panel::ApplySettings(KeyValues*)
 T vgui::Panel::ApplyUserConfigSettings(KeyValues*)
 T vgui::Panel::CallParentFunction(KeyValues*)
 T vgui::Panel::CanStartDragging(int, int, int, int)
 T vgui::Panel::CreateDragData()
 T vgui::Panel::DeletePanel()
 T vgui::Panel::DragDropStartDragging()
 T vgui::Panel::DrawBox(int, int, int, int, Color, float, bool)
 T vgui::Panel::DrawBoxFade(int, int, int, int, Color, float, unsigned int, unsigned int, bool, bool)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float, int, int)
 T vgui::Panel::DrawTexturedBox(int, int, int, int, Color, float)
 T vgui::Panel::EditKeyBindings()
 T vgui::Panel::FillRectSkippingPanel(Color, int, int, int, int, vgui::Panel*)
 T vgui::Panel::FindChildByName(char const*, bool)
 T vgui::Panel::FindDropTargetPanel()
 T vgui::Panel::FindDropTargetPanel_R(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, int, int, unsigned int)
 T vgui::Panel::FindSiblingByName(char const*)
 T vgui::Panel::GetAlpha()
 T vgui::Panel::GetAnimMap()
 T vgui::Panel::GetAutoResize()
 T vgui::Panel::GetBgColor()
 T vgui::Panel::GetBorder()
 T vgui::Panel::GetBounds(int&, int&, int&, int&)
 T vgui::Panel::GetChild(int)
 T vgui::Panel::GetChildCount()
 T vgui::Panel::GetClassName()
 T vgui::Panel::GetClipRect(int&, int&, int&, int&)
 T vgui::Panel::GetCornerTextureSize(int&, int&)
 T vgui::Panel::GetCurrentKeyFocus()
 T vgui::Panel::GetCursor()
 T vgui::Panel::GetDescription()
 T vgui::Panel::GetDragData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragDropInfo()
 T vgui::Panel::GetDragFailCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragPanel()
 T vgui::Panel::GetDragStartTolerance() const
 T vgui::Panel::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropTarget(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetFgColor()
 T vgui::Panel::GetInset(int&, int&, int&, int&)
 T vgui::Panel::GetKBMap()
 T vgui::Panel::GetKeyBindingsContext() const
 T vgui::Panel::GetKeyBindingsFile() const
 T vgui::Panel::GetKeyBindingsFilePathID() const
 T vgui::Panel::GetMessageMap()
 T vgui::Panel::GetMinimumSize(int&, int&)
 T vgui::Panel::GetModuleName()
 T vgui::Panel::GetName()
 T vgui::Panel::GetNavDown(vgui::Panel*)
 T vgui::Panel::GetNavLeft(vgui::Panel*)
 T vgui::Panel::GetNavRight(vgui::Panel*)
 T vgui::Panel::GetNavUp(vgui::Panel*)
 T vgui::Panel::GetPaintBackgroundType()
 T vgui::Panel::GetPaintSize(int&, int&)
 T vgui::Panel::GetPanel()
 T vgui::Panel::GetPanelClassName()
 T vgui::Panel::GetPanelMap()
 T vgui::Panel::GetParent()
 T vgui::Panel::GetPinCorner()
 T vgui::Panel::GetPinOffset(int&, int&)
 T vgui::Panel::GetPos(int&, int&)
 T vgui::Panel::GetResizeOffset(int&, int&)
 T vgui::Panel::GetScheme()
 T vgui::Panel::GetSchemeColor(char const*, Color, vgui::IScheme*)
 T vgui::Panel::GetSchemeColor(char const*, vgui::IScheme*)
 T vgui::Panel::GetSettings(KeyValues*)
 T vgui::Panel::GetSize(int&, int&)
 T vgui::Panel::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Panel::GetSizerMinimumSize(int&, int&)
 T vgui::Panel::GetTabPosition()
 T vgui::Panel::GetTall()
 T vgui::Panel::GetTooltip()
 T vgui::Panel::GetUnpackStructure() const
 T vgui::Panel::GetUserConfigSettings(KeyValues*)
 T vgui::Panel::GetVPanel()
 T vgui::Panel::GetVParent()
 T vgui::Panel::GetVar_m_flAlpha(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId1(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId2(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId3(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId4(vgui::Panel*)
 T vgui::Panel::GetVar_m_nPaintBackgroundType(vgui::Panel*)
 T vgui::Panel::GetWide()
 T vgui::Panel::HasFocus()
 T vgui::Panel::HasHotkey(wchar_t)
 T vgui::Panel::HasParent(unsigned int)
 T vgui::Panel::HasUserConfigSettings()
 T vgui::Panel::Init(int, int, int, int)
 T vgui::Panel::InitPropertyConverters()
 T vgui::Panel::InstallMouseHandler(vgui::Panel*)
 T vgui::Panel::InternalApplySettings(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalCursorEntered()
 T vgui::Panel::InternalCursorExited()
 T vgui::Panel::InternalCursorMoved(int, int)
 T vgui::Panel::InternalFocusChanged(bool)
 T vgui::Panel::InternalInitDefaultValues(PanelAnimationMap*)
 T vgui::Panel::InternalInvalidateLayout()
 T vgui::Panel::InternalKeyCodePressed(int)
 T vgui::Panel::InternalKeyCodeReleased(int)
 T vgui::Panel::InternalKeyCodeTyped(int)
 T vgui::Panel::InternalKeyFocusTicked()
 T vgui::Panel::InternalKeyTyped(int)
 T vgui::Panel::InternalMouseDoublePressed(int)
 T vgui::Panel::InternalMouseFocusTicked()
 T vgui::Panel::InternalMousePressed(int)
 T vgui::Panel::InternalMouseReleased(int)
 T vgui::Panel::InternalMouseTriplePressed(int)
 T vgui::Panel::InternalMouseWheeled(int)
 T vgui::Panel::InternalMove()
 T vgui::Panel::InternalRequestInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalSetCursor()
 T vgui::Panel::InternalSetInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InvalidateLayout(bool, bool)
 T vgui::Panel::IsAutoDeleteSet()
 T vgui::Panel::IsBeingDragged()
 T vgui::Panel::IsBlockingDragChaining() const
 T vgui::Panel::IsBuildGroupEnabled()
 T vgui::Panel::IsBuildModeActive()
 T vgui::Panel::IsBuildModeDeletable()
 T vgui::Panel::IsBuildModeEditable()
 T vgui::Panel::IsConsoleStylePanel() const
 T vgui::Panel::IsCursorNone()
 T vgui::Panel::IsCursorOver()
 T vgui::Panel::IsDragEnabled() const
 T vgui::Panel::IsDropEnabled() const
 T vgui::Panel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::IsEnabled()
 T vgui::Panel::IsFullyVisible()
 T vgui::Panel::IsKeyBoardInputEnabled()
 T vgui::Panel::IsKeyOverridden(ButtonCode_t, int)
 T vgui::Panel::IsKeyRebound(ButtonCode_t, int)
 T vgui::Panel::IsLayoutInvalid()
 T vgui::Panel::IsMouseInputEnabled()
 T vgui::Panel::IsOpaque()
 T vgui::Panel::IsPopup()
 T vgui::Panel::IsProportional()
 T vgui::Panel::IsTriplePressAllowed() const
 T vgui::Panel::IsValidKeyBindingsContext() const
 T vgui::Panel::IsVisible()
 T vgui::Panel::IsWithin(int, int)
 T vgui::Panel::IsWithinTraverse(int, int, bool)
 T vgui::Panel::LocalToScreen(int&, int&)
 T vgui::Panel::LookupBindingByKeyCode(ButtonCode_t, int)
 T vgui::Panel::LookupElementBounds(char const*, int&, int&, int&, int&)
 T vgui::Panel::MakePopup(bool, bool)
 T vgui::Panel::MakeReadyForUse()
 T vgui::Panel::MarkForDeletion()
 T vgui::Panel::MoveToFront()
 T vgui::Panel::NavigateDown()
 T vgui::Panel::NavigateFrom()
 T vgui::Panel::NavigateLeft()
 T vgui::Panel::NavigateRight()
 T vgui::Panel::NavigateTo()
 T vgui::Panel::NavigateToChild(vgui::Panel*)
 T vgui::Panel::NavigateUp()
 T vgui::Panel::OnChildAdded(unsigned int)
 T vgui::Panel::OnCommand(char const*)
 T vgui::Panel::OnContinueDragging()
 T vgui::Panel::OnCreateDragData(KeyValues*)
 T vgui::Panel::OnCursorEntered()
 T vgui::Panel::OnCursorExited()
 T vgui::Panel::OnCursorMoved(int, int)
 T vgui::Panel::OnDelete()
 T vgui::Panel::OnDragFailed(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDraggablePanelPaint()
 T vgui::Panel::OnDropContextHoverHide(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDropContextHoverShow(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDroppablePanelPaint(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnFinishDragging(bool, ButtonCode_t, bool)
 T vgui::Panel::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnKeyCodePressed(ButtonCode_t)
 T vgui::Panel::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Panel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Panel::OnKeyFocusTicked()
 T vgui::Panel::OnKeyTyped(wchar_t)
 T vgui::Panel::OnKillFocus()
 T vgui::Panel::OnMessage(KeyValues const*, unsigned int)
 T vgui::Panel::OnMouseCaptureLost()
 T vgui::Panel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Panel::OnMouseFocusTicked()
 T vgui::Panel::OnMousePressed(ButtonCode_t)
 T vgui::Panel::OnMouseReleased(ButtonCode_t)
 T vgui::Panel::OnMouseTriplePressed(ButtonCode_t)
 T vgui::Panel::OnMouseWheeled(int)
 T vgui::Panel::OnMove()
 T vgui::Panel::OnNavigateFrom(char const*)
 T vgui::Panel::OnNavigateTo(char const*)
 T vgui::Panel::OnOldMessage(KeyValues*, unsigned int)
 T vgui::Panel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelEnteredDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelExitedDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Panel::OnScreenSizeChanged(int, int)
 T vgui::Panel::OnSetFocus()
 T vgui::Panel::OnSizeChanged(int, int)
 T vgui::Panel::OnStartDragging()
 T vgui::Panel::OnThink()
 T vgui::Panel::OnTick()
 T vgui::Panel::OnUnserialized(CDmxElement*)
 T vgui::Panel::Paint()
 T vgui::Panel::PaintBackground()
 T vgui::Panel::PaintBorder()
 T vgui::Panel::PaintBuildOverlay()
 T vgui::Panel::PaintTraverse(bool, bool)
 T vgui::Panel::Panel()
 T vgui::Panel::Panel(vgui::Panel*)
 T vgui::Panel::Panel(vgui::Panel*, char const*)
 T vgui::Panel::ParentLocalToScreen(int&, int&)
 T vgui::Panel::PerformApplySchemeSettings()
 T vgui::Panel::PerformLayout()
 T vgui::Panel::PinToSibling(char const*, vgui::Panel::PinCorner_e, vgui::Panel::PinCorner_e)
 T vgui::Panel::PostActionSignal(KeyValues*)
 T vgui::Panel::PostChildPaint()
 T vgui::Panel::PostMessage(unsigned int, KeyValues*, float)
 T vgui::Panel::PostMessage(vgui::Panel*, KeyValues*, float)
 T vgui::Panel::PostMessageToChild(char const*, KeyValues*)
 T vgui::Panel::PreparePanelMap(vgui::PanelMap_t*)
 T vgui::Panel::QueryInterface(vgui::EInterfaceID)
 T vgui::Panel::RemoveActionSignalTarget(vgui::Panel*)
 T vgui::Panel::Repaint()
 T vgui::Panel::RequestFocus(int)
 T vgui::Panel::RequestFocusNext(unsigned int)
 T vgui::Panel::RequestFocusPrev(unsigned int)
 T vgui::Panel::RequestInfo(KeyValues*)
 T vgui::Panel::RequestInfoFromChild(char const*, KeyValues*)
 T vgui::Panel::ScreenToLocal(int&, int&)
 T vgui::Panel::SetAllowKeyBindingChainToParent(bool)
 T vgui::Panel::SetAlpha(int)
 T vgui::Panel::SetAutoDelete(bool)
 T vgui::Panel::SetBgColor(Color)
 T vgui::Panel::SetBlockDragChaining(bool)
 T vgui::Panel::SetBorder(vgui::IBorder*)
 T vgui::Panel::SetBounds(int, int, int, int)
 T vgui::Panel::SetBuildGroup(vgui::BuildGroup*)
 T vgui::Panel::SetBuildModeDeletable(bool)
 T vgui::Panel::SetBuildModeEditable(bool)
 T vgui::Panel::SetCursor(unsigned long)
 T vgui::Panel::SetDragEnabled(bool)
 T vgui::Panel::SetDragSTartTolerance(int)
 T vgui::Panel::SetDropEnabled(bool, float)
 T vgui::Panel::SetEnabled(bool)
 T vgui::Panel::SetFgColor(Color)
 T vgui::Panel::SetInfo(KeyValues*)
 T vgui::Panel::SetKeyBindingsContext(vgui::KeyBindingContextHandle_t)
 T vgui::Panel::SetKeyBoardInputEnabled(bool)
 T vgui::Panel::SetMessageContextId_R(int)
 T vgui::Panel::SetMinimumSize(int, int)
 T vgui::Panel::SetMouseInputEnabled(bool)
 T vgui::Panel::SetName(char const*)
 T vgui::Panel::SetOverridableColor(Color*, Color const&)
 T vgui::Panel::SetPaintBackgroundEnabled(bool)
 T vgui::Panel::SetPaintBackgroundType(int)
 T vgui::Panel::SetPaintBorderEnabled(bool)
 T vgui::Panel::SetPaintEnabled(bool)
 T vgui::Panel::SetParent(unsigned int)
 T vgui::Panel::SetParent(vgui::Panel*)
 T vgui::Panel::SetPos(int, int)
 T vgui::Panel::SetPostChildPaintEnabled(bool)
 T vgui::Panel::SetProportional(bool)
 T vgui::Panel::SetScheme(char const*)
 T vgui::Panel::SetScheme(unsigned long)
 T vgui::Panel::SetShowDragHelper(bool)
 T vgui::Panel::SetSilentMode(bool)
 T vgui::Panel::SetSize(int, int)
 T vgui::Panel::SetSkipChildDuringPainting(vgui::Panel*)
 T vgui::Panel::SetTabPosition(int)
 T vgui::Panel::SetTall(int)
 T vgui::Panel::SetTriplePressAllowed(bool)
 T vgui::Panel::SetVisible(bool)
 T vgui::Panel::SetWide(int)
 T vgui::Panel::SetZPos(int)
 T vgui::Panel::Think()
 T vgui::Panel::ToHandle() const
 T vgui::Panel::UpdateSiblingPin()
 T vgui::Panel::~Panel()
 T vgui::PanelListPanel::AddItem(vgui::Panel*, vgui::Panel*)
 T vgui::PanelListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PanelListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PanelListPanel::ApplySettings(KeyValues*)
 T vgui::PanelListPanel::ComputeVPixelsNeeded()
 T vgui::PanelListPanel::DeleteAllItems()
 T vgui::PanelListPanel::GetAnimMap()
 T vgui::PanelListPanel::GetCellRenderer(int)
 T vgui::PanelListPanel::GetDescription()
 T vgui::PanelListPanel::GetItemLabel(int)
 T vgui::PanelListPanel::GetItemPanel(int)
 T vgui::PanelListPanel::GetKBMap()
 T vgui::PanelListPanel::GetMessageMap()
 T vgui::PanelListPanel::GetPanelClassName()
 T vgui::PanelListPanel::GetSettings(KeyValues*)
 T vgui::PanelListPanel::MoveScrollBarToTop()
 T vgui::PanelListPanel::OnMouseWheeled(int)
 T vgui::PanelListPanel::OnSizeChanged(int, int)
 T vgui::PanelListPanel::OnSliderMoved(int)
 T vgui::PanelListPanel::PanelListPanel(vgui::Panel*, char const*)
 T vgui::PanelListPanel::PerformLayout()
 T vgui::PanelListPanel::RemoveAll()
 T vgui::PanelListPanel::RemoveItem(int)
 T vgui::PanelListPanel::~PanelListPanel()
 T vgui::ProgressBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ProgressBar::ApplySettings(KeyValues*)
 T vgui::ProgressBar::GetAnimMap()
 T vgui::ProgressBar::GetDescription()
 T vgui::ProgressBar::GetKBMap()
 T vgui::ProgressBar::GetMessageMap()
 T vgui::ProgressBar::GetPanelClassName()
 T vgui::ProgressBar::GetProgress()
 T vgui::ProgressBar::GetSettings(KeyValues*)
 T vgui::ProgressBar::OnDialogVariablesChanged(KeyValues*)
 T vgui::ProgressBar::Paint()
 T vgui::ProgressBar::PaintBackground()
 T vgui::ProgressBar::PaintSegment(int&, int&, int, int)
 T vgui::ProgressBar::ProgressBar(vgui::Panel*, char const*)
 T vgui::ProgressBar::SetProgress(float)
 T vgui::ProgressBar::SetSegmentInfo(int, int)
 T vgui::ProgressBar::~ProgressBar()
 T vgui::RadioButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RadioButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RadioButton::ApplySettings(KeyValues*)
 T vgui::RadioButton::DoClick()
 T vgui::RadioButton::FindBestRadioButton(int)
 T vgui::RadioButton::GetAnimMap()
 T vgui::RadioButton::GetBorder(bool, bool, bool, bool)
 T vgui::RadioButton::GetDescription()
 T vgui::RadioButton::GetKBMap()
 T vgui::RadioButton::GetMessageMap()
 T vgui::RadioButton::GetPanelClassName()
 T vgui::RadioButton::GetRadioTabPosition()
 T vgui::RadioButton::GetSettings(KeyValues*)
 T vgui::RadioButton::GetSubTabPosition()
 T vgui::RadioButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RadioButton::OnRadioButtonChecked(int)
 T vgui::RadioButton::Paint()
 T vgui::RadioButton::PerformLayout()
 T vgui::RadioButton::RadioButton(vgui::Panel*, char const*, char const*)
 T vgui::RadioButton::SetSelected(bool)
 T vgui::RadioButton::SetSubTabPosition(int)
 T vgui::RadioButton::~RadioButton()
 T vgui::RichText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RichText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichText::ApplySettings(KeyValues*)
 T vgui::RichText::CopySelected()
 T vgui::RichText::CreateEditMenu()
 T vgui::RichText::CursorToPixelSpace(int, int&, int&)
 T vgui::RichText::CutSelected()
 T vgui::RichText::DrawString(int, int, vgui::RichText::TRenderState&, unsigned long)
 T vgui::RichText::FinishingURL(int, int)
 T vgui::RichText::GetAnimMap()
 T vgui::RichText::GetDescription()
 T vgui::RichText::GetKBMap()
 T vgui::RichText::GetMessageMap()
 T vgui::RichText::GetPanelClassName()
 T vgui::RichText::GetSettings(KeyValues*)
 T vgui::RichText::GotoWordLeft()
 T vgui::RichText::GotoWordRight()
 T vgui::RichText::LayoutVerticalScrollBarSlider()
 T vgui::RichText::MoveScrollBar(int)
 T vgui::RichText::MoveScrollBarDirect(int)
 T vgui::RichText::OnClickPanel(int)
 T vgui::RichText::OnCursorEntered()
 T vgui::RichText::OnCursorExited()
 T vgui::RichText::OnCursorMoved(int, int)
 T vgui::RichText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RichText::OnKillFocus()
 T vgui::RichText::OnMouseCaptureLost()
 T vgui::RichText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::RichText::OnMouseFocusTicked()
 T vgui::RichText::OnMousePressed(ButtonCode_t)
 T vgui::RichText::OnMouseReleased(ButtonCode_t)
 T vgui::RichText::OnMouseWheeled(int)
 T vgui::RichText::OnSetFocus()
 T vgui::RichText::OnSetText(wchar_t const*)
 T vgui::RichText::OnSizeChanged(int, int)
 T vgui::RichText::OnSliderMoved()
 T vgui::RichText::OnTextClicked(wchar_t const*)
 T vgui::RichText::OnThink()
 T vgui::RichText::OpenEditMenu()
 T vgui::RichText::Paint()
 T vgui::RichText::PerformLayout()
 T vgui::RichText::PixelToCursorSpace(int, int)
 T vgui::RichText::RecalculateDefaultState(int)
 T vgui::RichText::RecalculateLineBreaks()
 T vgui::RichText::RequestInfo(KeyValues*)
 T vgui::RichText::RichText(vgui::Panel*, char const*)
 T vgui::RichText::SetDrawOffsets(int, int)
 T vgui::RichText::SetFgColor(Color)
 T vgui::RichText::SetText(char const*)
 T vgui::RichText::SetText(wchar_t const*)
 T vgui::RichText::SetVerticalScrollbar(bool)
 T vgui::RichText::UpdateRenderState(int, vgui::RichText::TRenderState&)
 T vgui::RichText::~RichText()
 T vgui::RichTextInterior::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichTextInterior::GetAnimMap()
 T vgui::RichTextInterior::GetKBMap()
 T vgui::RichTextInterior::GetMessageMap()
 T vgui::RichTextInterior::GetPanelClassName()
 T vgui::RichTextInterior::RichTextInterior(vgui::RichText*, char const*)
 T vgui::RichTextInterior::~RichTextInterior()
 T vgui::ScalableImagePanel::ApplySettings(KeyValues*)
 T vgui::ScalableImagePanel::GetAnimMap()
 T vgui::ScalableImagePanel::GetDescription()
 T vgui::ScalableImagePanel::GetKBMap()
 T vgui::ScalableImagePanel::GetMessageMap()
 T vgui::ScalableImagePanel::GetPanelClassName()
 T vgui::ScalableImagePanel::GetSettings(KeyValues*)
 T vgui::ScalableImagePanel::PaintBackground()
 T vgui::ScalableImagePanel::PerformLayout()
 T vgui::ScalableImagePanel::ScalableImagePanel(vgui::Panel*, char const*)
 T vgui::ScalableImagePanel::SetImage(char const*)
 T vgui::ScalableImagePanel::~ScalableImagePanel()
 T vgui::ScrollBar::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::ScrollBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ScrollBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBar::GetAnimMap()
 T vgui::ScrollBar::GetButton(int)
 T vgui::ScrollBar::GetKBMap()
 T vgui::ScrollBar::GetMessageMap()
 T vgui::ScrollBar::GetPanelClassName()
 T vgui::ScrollBar::GetRange(int&, int&)
 T vgui::ScrollBar::GetRangeWindow()
 T vgui::ScrollBar::GetSlider()
 T vgui::ScrollBar::GetValue()
 T vgui::ScrollBar::GetVar_m_bAutoHideButtons(vgui::Panel*)
 T vgui::ScrollBar::GetVar_m_bAutoHideSelf(vgui::Panel*)
 T vgui::ScrollBar::HasFullRange()
 T vgui::ScrollBar::IsVertical()
 T vgui::ScrollBar::OnMouseFocusTicked()
 T vgui::ScrollBar::OnSizeChanged(int, int)
 T vgui::ScrollBar::OnSliderMoved(int)
 T vgui::ScrollBar::OnSliderReleased(int)
 T vgui::ScrollBar::PerformLayout()
 T vgui::ScrollBar::RespondToScrollArrow(int)
 T vgui::ScrollBar::ScrollBar(vgui::Panel*, char const*, bool)
 T vgui::ScrollBar::SendScrollBarSliderReleasedMessage(int)
 T vgui::ScrollBar::SendSliderMoveMessage(int)
 T vgui::ScrollBar::SetButton(vgui::Button*, int)
 T vgui::ScrollBar::SetButtonPressedScrollValue(int)
 T vgui::ScrollBar::SetPaintBackgroundEnabled(bool)
 T vgui::ScrollBar::SetPaintBorderEnabled(bool)
 T vgui::ScrollBar::SetPaintEnabled(bool)
 T vgui::ScrollBar::SetRange(int, int)
 T vgui::ScrollBar::SetRangeWindow(int)
 T vgui::ScrollBar::SetScrollbarButtonsVisible(bool)
 T vgui::ScrollBar::SetSlider(vgui::ScrollBarSlider*)
 T vgui::ScrollBar::SetValue(int)
 T vgui::ScrollBar::UpdateButtonsForImages()
 T vgui::ScrollBar::UpdateSliderImages()
 T vgui::ScrollBar::Validate()
 T vgui::ScrollBar::~ScrollBar()
 T vgui::ScrollBarSlider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBarSlider::GetAnimMap()
 T vgui::ScrollBarSlider::GetKBMap()
 T vgui::ScrollBarSlider::GetMessageMap()
 T vgui::ScrollBarSlider::GetNobPos(int&, int&)
 T vgui::ScrollBarSlider::GetPanelClassName()
 T vgui::ScrollBarSlider::GetRange(int&, int&)
 T vgui::ScrollBarSlider::GetRangeWindow()
 T vgui::ScrollBarSlider::GetValue()
 T vgui::ScrollBarSlider::HasFullRange()
 T vgui::ScrollBarSlider::IsMouseOverNob()
 T vgui::ScrollBarSlider::IsSliderVisible()
 T vgui::ScrollBarSlider::IsVertical()
 T vgui::ScrollBarSlider::OnCursorEntered()
 T vgui::ScrollBarSlider::OnCursorExited()
 T vgui::ScrollBarSlider::OnCursorMoved(int, int)
 T vgui::ScrollBarSlider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMousePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMouseReleased(ButtonCode_t)
 T vgui::ScrollBarSlider::Paint()
 T vgui::ScrollBarSlider::PaintBackground()
 T vgui::ScrollBarSlider::PerformLayout()
 T vgui::ScrollBarSlider::RecomputeNobPosFromValue()
 T vgui::ScrollBarSlider::RecomputeValueFromNobPos()
 T vgui::ScrollBarSlider::ScrollBarSlider(vgui::Panel*, char const*, bool)
 T vgui::ScrollBarSlider::SendScrollBarSliderMovedMessage()
 T vgui::ScrollBarSlider::SendScrollBarSliderReleasedMessage()
 T vgui::ScrollBarSlider::SetButtonOffset(int)
 T vgui::ScrollBarSlider::SetRange(int, int)
 T vgui::ScrollBarSlider::SetRangeWindow(int)
 T vgui::ScrollBarSlider::SetSize(int, int)
 T vgui::ScrollBarSlider::SetValue(int)
 T vgui::ScrollBarSlider::~ScrollBarSlider()
 T vgui::TextEntry::AddAnotherLine(int&, int&)
 T vgui::TextEntry::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TextEntry::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextEntry::ApplySettings(KeyValues*)
 T vgui::TextEntry::Backspace()
 T vgui::TextEntry::CompositionString(wchar_t const*)
 T vgui::TextEntry::ConversionModeChanged(int)
 T vgui::TextEntry::CopySelected()
 T vgui::TextEntry::CreateEditMenu()
 T vgui::TextEntry::CursorToPixelSpace(int, int&, int&)
 T vgui::TextEntry::CutSelected()
 T vgui::TextEntry::Delete()
 T vgui::TextEntry::DeleteSelected()
 T vgui::TextEntry::DrawChar(wchar_t, unsigned long, int, int, int)
 T vgui::TextEntry::DrawCursor(int, int)
 T vgui::TextEntry::FireActionSignal()
 T vgui::TextEntry::GetAnimMap()
 T vgui::TextEntry::GetDescription()
 T vgui::TextEntry::GetDragPanel()
 T vgui::TextEntry::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::GetKBMap()
 T vgui::TextEntry::GetMaximumCharCount()
 T vgui::TextEntry::GetMessageMap()
 T vgui::TextEntry::GetNumLines()
 T vgui::TextEntry::GetPanelClassName()
 T vgui::TextEntry::GetSelectedRange(int&, int&)
 T vgui::TextEntry::GetSettings(KeyValues*)
 T vgui::TextEntry::GetSizerMinimumSize(int&, int&)
 T vgui::TextEntry::GetStartDrawIndex(int&)
 T vgui::TextEntry::GetText(char*, int)
 T vgui::TextEntry::GetText(wchar_t*, int)
 T vgui::TextEntry::GetTextCursorPos()
 T vgui::TextEntry::GetTextLength() const
 T vgui::TextEntry::GetTextRange(char*, int, int)
 T vgui::TextEntry::GetTextRange(wchar_t*, int, int)
 T vgui::TextEntry::GetValueAsFloat()
 T vgui::TextEntry::GetValueAsInt()
 T vgui::TextEntry::GetYStart()
 T vgui::TextEntry::GotoDown()
 T vgui::TextEntry::GotoEndOfLine()
 T vgui::TextEntry::GotoFirstOfLine()
 T vgui::TextEntry::GotoLeft()
 T vgui::TextEntry::GotoRight()
 T vgui::TextEntry::GotoTextEnd()
 T vgui::TextEntry::GotoTextStart()
 T vgui::TextEntry::GotoUp()
 T vgui::TextEntry::GotoWordLeft()
 T vgui::TextEntry::GotoWordRight()
 T vgui::TextEntry::HideIMECandidates()
 T vgui::TextEntry::InsertChar(wchar_t)
 T vgui::TextEntry::InsertString(char const*)
 T vgui::TextEntry::InsertString(wchar_t*)
 T vgui::TextEntry::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::IsEditable()
 T vgui::TextEntry::IsMultiline()
 T vgui::TextEntry::IsTextFullySelected() const
 T vgui::TextEntry::LanguageChanged(int)
 T vgui::TextEntry::LayoutVerticalScrollBarSlider()
 T vgui::TextEntry::MoveCursor(int, int)
 T vgui::TextEntry::NeedsEllipses(unsigned long, int*)
 T vgui::TextEntry::OnCreateDragData(KeyValues*)
 T vgui::TextEntry::OnCursorEntered()
 T vgui::TextEntry::OnCursorExited()
 T vgui::TextEntry::OnCursorMoved(int, int)
 T vgui::TextEntry::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TextEntry::OnKeyFocusTicked()
 T vgui::TextEntry::OnKeyTyped(wchar_t)
 T vgui::TextEntry::OnKillFocus()
 T vgui::TextEntry::OnMouseCaptureLost()
 T vgui::TextEntry::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseFocusTicked()
 T vgui::TextEntry::OnMousePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseReleased(ButtonCode_t)
 T vgui::TextEntry::OnMouseTriplePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseWheeled(int)
 T vgui::TextEntry::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::OnSetFocus()
 T vgui::TextEntry::OnSetState(int)
 T vgui::TextEntry::OnSetText(wchar_t const*)
 T vgui::TextEntry::OnSizeChanged(int, int)
 T vgui::TextEntry::OnSliderMoved()
 T vgui::TextEntry::OpenEditMenu()
 T vgui::TextEntry::PaintBackground()
 T vgui::TextEntry::Paste()
 T vgui::TextEntry::PerformLayout()
 T vgui::TextEntry::PixelToCursorSpace(int, int)
 T vgui::TextEntry::RecalculateLineBreaks()
 T vgui::TextEntry::RequestInfo(KeyValues*)
 T vgui::TextEntry::ResetCursorBlink()
 T vgui::TextEntry::SaveUndoState()
 T vgui::TextEntry::ScrollRight()
 T vgui::TextEntry::SelectAllText(bool)
 T vgui::TextEntry::SelectCheck(bool)
 T vgui::TextEntry::SelectNoText()
 T vgui::TextEntry::SelectNone()
 T vgui::TextEntry::SendNewLine(bool)
 T vgui::TextEntry::SentenceModeChanged(int)
 T vgui::TextEntry::SetAutoLocalize(bool)
 T vgui::TextEntry::SetAutoProgressOnHittingCharLimit(bool)
 T vgui::TextEntry::SetCatchEnterKey(bool)
 T vgui::TextEntry::SetCatchTabKey(bool)
 T vgui::TextEntry::SetCharAt(wchar_t, int)
 T vgui::TextEntry::SetDisabledBgColor(Color)
 T vgui::TextEntry::SetDrawWidth(int)
 T vgui::TextEntry::SetEditable(bool)
 T vgui::TextEntry::SetEnabled(bool)
 T vgui::TextEntry::SetFont(unsigned long)
 T vgui::TextEntry::SetHorizontalScrolling(bool)
 T vgui::TextEntry::SetMaximumCharCount(int)
 T vgui::TextEntry::SetMultiline(bool)
 T vgui::TextEntry::SetSelectionBgColor(Color const&)
 T vgui::TextEntry::SetSelectionTextColor(Color const&)
 T vgui::TextEntry::SetSelectionUnfocusedBgColor(Color const&)
 T vgui::TextEntry::SetTabSpaces(int)
 T vgui::TextEntry::SetText(char const*)
 T vgui::TextEntry::SetText(wchar_t const*)
 T vgui::TextEntry::SetTextHidden(bool)
 T vgui::TextEntry::SetToFullHeight()
 T vgui::TextEntry::SetToFullWidth()
 T vgui::TextEntry::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextEntry::SetVerticalScrollbar(bool)
 T vgui::TextEntry::SetWrap(bool)
 T vgui::TextEntry::ShowIMECandidates()
 T vgui::TextEntry::TextEntry(vgui::Panel*, char const*)
 T vgui::TextEntry::Undo()
 T vgui::TextEntry::UpdateIMECandidates()
 T vgui::TextEntry::~TextEntry()
 T vgui::TextImage::GetContentSize(int&, int&)
 T vgui::TextImage::GetFont()
 T vgui::TextImage::GetText(char*, int)
 T vgui::TextImage::GetText(wchar_t*, int)
 T vgui::TextImage::GetTextSize(int&, int&)
 T vgui::TextImage::GetUnlocalizedText(char*, int)
 T vgui::TextImage::GetUnlocalizedTextSymbol()
 T vgui::TextImage::Paint()
 T vgui::TextImage::RecalculateCenterWrapIndents()
 T vgui::TextImage::RecalculateEllipsesPosition()
 T vgui::TextImage::RecalculateNewLinePositions()
 T vgui::TextImage::ResizeImageToContent()
 T vgui::TextImage::SetAllCaps(bool)
 T vgui::TextImage::SetCenterWrap(bool)
 T vgui::TextImage::SetDrawWidth(int)
 T vgui::TextImage::SetFont(unsigned long)
 T vgui::TextImage::SetNoShortcutSyntax(bool)
 T vgui::TextImage::SetSize(int, int)
 T vgui::TextImage::SetText(char const*)
 T vgui::TextImage::SetText(wchar_t const*, bool)
 T vgui::TextImage::SetUseAsianWordWrapping()
 T vgui::TextImage::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextImage::SetWrap(bool)
 T vgui::TextImage::TextImage(char const*)
 T vgui::TextImage::TextImage(wchar_t const*)
 T vgui::TextImage::~TextImage()
 T vgui::TextTooltip::HideTooltip()
 T vgui::TextTooltip::PerformLayout()
 T vgui::TextTooltip::SetText(char const*)
 T vgui::TextTooltip::ShowTooltip(vgui::Panel*)
 T vgui::TextTooltip::SizeTextWindow()
 T vgui::TextTooltip::TextTooltip(vgui::Panel*, char const*)
 T vgui::ToggleButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ToggleButton::CanBeDefaultButton()
 T vgui::ToggleButton::DoClick()
 T vgui::ToggleButton::GetAnimMap()
 T vgui::ToggleButton::GetButtonFgColor()
 T vgui::ToggleButton::GetKBMap()
 T vgui::ToggleButton::GetMessageMap()
 T vgui::ToggleButton::GetPanelClassName()
 T vgui::ToggleButton::OnKeyCodePressed(ButtonCode_t)
 T vgui::ToggleButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ToggleButton::ToggleButton(vgui::Panel*, char const*, char const*)
 T vgui::ToggleButton::~ToggleButton()
 T vgui::TreeNode::AddChild(vgui::TreeNode*)
 T vgui::TreeNode::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNode::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNode::CalculateVisibleMaxWidth()
 T vgui::TreeNode::ClosePreviousParents(vgui::TreeNode*)
 T vgui::TreeNode::CountVisibleIndex()
 T vgui::TreeNode::CountVisibleNodes()
 T vgui::TreeNode::FindChild(vgui::TreeNode*)
 T vgui::TreeNode::FindItemUnderMouse(int&, int&, int, int&, int, int)
 T vgui::TreeNode::FindNodesInRange_R(CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >&, bool&, bool&, int, int)
 T vgui::TreeNode::GetAnimMap()
 T vgui::TreeNode::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetKBMap()
 T vgui::TreeNode::GetMessageMap()
 T vgui::TreeNode::GetPanelClassName()
 T vgui::TreeNode::HasParent(vgui::TreeNode*)
 T vgui::TreeNode::IsDragEnabled() const
 T vgui::TreeNode::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnCreateDragData(KeyValues*)
 T vgui::TreeNode::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::TreeNode::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNode::OnLabelChanged(KeyValues*)
 T vgui::TreeNode::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNode::OnMousePressed(ButtonCode_t)
 T vgui::TreeNode::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNode::OnMouseWheeled(int)
 T vgui::TreeNode::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnSetFocus()
 T vgui::TreeNode::Paint()
 T vgui::TreeNode::PaintBackground()
 T vgui::TreeNode::PerformLayout()
 T vgui::TreeNode::PositionAndSetVisibleNodes(int&, int&, int, int&)
 T vgui::TreeNode::RequestFocus(int)
 T vgui::TreeNode::SelectNextChild(vgui::TreeNode*)
 T vgui::TreeNode::SelectPrevChild(vgui::TreeNode*)
 T vgui::TreeNode::SetBgColor(Color)
 T vgui::TreeNode::SetFgColor(Color)
 T vgui::TreeNode::SetFont(unsigned long)
 T vgui::TreeNode::SetKeyValues(KeyValues*)
 T vgui::TreeNode::SetNodeExpanded(bool)
 T vgui::TreeNode::SetVisible(bool)
 T vgui::TreeNode::StepInto(bool)
 T vgui::TreeNode::StepOut(bool)
 T vgui::TreeNode::StepOver(bool)
 T vgui::TreeNode::TreeNode(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNode::~TreeNode()
 T vgui::TreeNodeDropPanel::GetAnimMap()
 T vgui::TreeNodeDropPanel::GetKBMap()
 T vgui::TreeNodeDropPanel::GetMessageMap()
 T vgui::TreeNodeDropPanel::GetPanelClassName()
 T vgui::TreeNodeDropPanel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::TreeNodeDropPanel(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNodeDropPanel::~TreeNodeDropPanel()
 T vgui::TreeNodeImage::OnCursorMoved(int, int)
 T vgui::TreeNodeImage::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMouseWheeled(int)
 T vgui::TreeNodeImage::~TreeNodeImage()
 T vgui::TreeNodeText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNodeText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNodeText::EnterEditingInPlace()
 T vgui::TreeNodeText::FinishEditingInPlace(bool)
 T vgui::TreeNodeText::GetAnimMap()
 T vgui::TreeNodeText::GetKBMap()
 T vgui::TreeNodeText::GetMessageMap()
 T vgui::TreeNodeText::GetPanelClassName()
 T vgui::TreeNodeText::IsKeyRebound(ButtonCode_t, int)
 T vgui::TreeNodeText::OnCursorMoved(int, int)
 T vgui::TreeNodeText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNodeText::OnKillFocus()
 T vgui::TreeNodeText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseWheeled(int)
 T vgui::TreeNodeText::OnTextChanged()
 T vgui::TreeNodeText::OnTick()
 T vgui::TreeNodeText::PaintBackground()
 T vgui::TreeNodeText::TreeNodeText(vgui::Panel*, char const*, int, vgui::TreeView*)
 T vgui::TreeNodeText::~TreeNodeText()
 T vgui::TreeView::AddItem(KeyValues*, int)
 T vgui::TreeView::AddSelectedItem(int, bool, bool, bool)
 T vgui::TreeView::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeView::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeView::CanCurrentlyEditLabel(int) const
 T vgui::TreeView::ClearSelection()
 T vgui::TreeView::ExpandItem(int, bool)
 T vgui::TreeView::FindNodesInRange(int, int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::FirstItem() const
 T vgui::TreeView::GenerateChildrenOfNode(int)
 T vgui::TreeView::GenerateContextMenu(int, int, int)
 T vgui::TreeView::GenerateDragDataForItem(int, KeyValues*)
 T vgui::TreeView::GetAnimMap()
 T vgui::TreeView::GetChild(int, int)
 T vgui::TreeView::GetFirstSelectedItem() const
 T vgui::TreeView::GetFont()
 T vgui::TreeView::GetHighestItemID()
 T vgui::TreeView::GetItemCount()
 T vgui::TreeView::GetItemData(int) const
 T vgui::TreeView::GetItemDropContextMenu(int, vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemDropCursor(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemParent(int) const
 T vgui::TreeView::GetKBMap()
 T vgui::TreeView::GetMessageMap()
 T vgui::TreeView::GetNextChildItemIndex(int)
 T vgui::TreeView::GetNumChildren(int)
 T vgui::TreeView::GetPanelClassName()
 T vgui::TreeView::GetPrevChildItemIndex(int)
 T vgui::TreeView::GetRootItemIndex()
 T vgui::TreeView::GetRowHeight()
 T vgui::TreeView::GetSelectedItem(int) const
 T vgui::TreeView::GetSelectedItemCount() const
 T vgui::TreeView::GetSelectedItemData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetSelectedItems(CUtlVector<int, CUtlMemory<int, int> >&) const
 T vgui::TreeView::GetSelectedItemsForDrag(int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::GetVBarInfo(int&, int&, bool&)
 T vgui::TreeView::InvalidItemID() const
 T vgui::TreeView::IsItemDroppable(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::IsItemExpanded(int)
 T vgui::TreeView::IsItemIDValid(int)
 T vgui::TreeView::IsItemSelected(int) const
 T vgui::TreeView::IsLabelBeingEdited() const
 T vgui::TreeView::IsLabelEditingAllowed() const
 T vgui::TreeView::MakeItemVisible(int)
 T vgui::TreeView::ModifyItem(int, KeyValues*)
 T vgui::TreeView::NextItem(int) const
 T vgui::TreeView::OnContextMenuSelection(int)
 T vgui::TreeView::OnItemDropped(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::OnLabelChanged(int, char const*, char const*)
 T vgui::TreeView::OnMousePressed(ButtonCode_t)
 T vgui::TreeView::OnMouseWheeled(int)
 T vgui::TreeView::OnSizeChanged(int, int)
 T vgui::TreeView::OnSliderMoved(int)
 T vgui::TreeView::PerformLayout()
 T vgui::TreeView::RangeSelectItems(int)
 T vgui::TreeView::RemoveAll()
 T vgui::TreeView::RemoveChildrenOfNode(int)
 T vgui::TreeView::RemoveItem(int, bool, bool)
 T vgui::TreeView::RemoveSelectedItem(int)
 T vgui::TreeView::SelectAll()
 T vgui::TreeView::SetAllowLabelEditing(bool)
 T vgui::TreeView::SetBgColor(Color)
 T vgui::TreeView::SetDragEnabledItems(bool)
 T vgui::TreeView::SetFont(unsigned long)
 T vgui::TreeView::SetImageList(vgui::ImageList*, bool)
 T vgui::TreeView::SetItemBgColor(int, Color const&)
 T vgui::TreeView::SetItemFgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionBgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionTextColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionUnfocusedBgColor(int, Color const&)
 T vgui::TreeView::SetLabelEditingAllowed(int, bool)
 T vgui::TreeView::StartEditingLabel(int)
 T vgui::TreeView::TreeView(vgui::Panel*, char const*)
 T vgui::TreeView::~TreeView()
 T vgui::TreeViewSubPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeViewSubPanel::OnCursorMoved(int, int)
 T vgui::TreeViewSubPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMousePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMouseWheeled(int)
 T vgui::TreeViewSubPanel::~TreeViewSubPanel()
 T vgui::URLLabel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::URLLabel::ApplySettings(KeyValues*)
 T vgui::URLLabel::GetAnimMap()
 T vgui::URLLabel::GetDescription()
 T vgui::URLLabel::GetKBMap()
 T vgui::URLLabel::GetMessageMap()
 T vgui::URLLabel::GetPanelClassName()
 T vgui::URLLabel::GetSettings(KeyValues*)
 T vgui::URLLabel::OnMousePressed(ButtonCode_t)
 T vgui::URLLabel::URLLabel(vgui::Panel*, char const*, char const*, char const*)
 T vgui::URLLabel::~URLLabel()
 T vgui::VPanelHandle::Get()
 T vgui::VPanelHandle::Set(unsigned int)
 T vgui_screenPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T virtualgroup_t::GetStudioHdr() const
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >, CUtlBinaryBlock>(bool&, CUtlBuffer&)
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlString>(bool&, CUtlBuffer&)
 T void CDmxElement::UnpackBitfield<char>(char*, DmxElementUnpackStructure_t const*, CDmxAttribute const*) const
 T void CDmxElement::UnpackBitfield<short>(short*, DmxElementUnpackStructure_t const*, CDmxAttribute const*) const
 T void CEconItem::SetDynamicAttributeValue<CAttribute_String>(CEconItemAttributeDefinition const*, CAttribute_String const&)
 T void CEconItem::SetDynamicAttributeValue<Vector>(CEconItemAttributeDefinition const*, Vector const&)
 T void CEconItem::SetDynamicAttributeValue<float>(CEconItemAttributeDefinition const*, float const&)
 T void CEconItem::SetDynamicAttributeValue<unsigned int>(CEconItemAttributeDefinition const*, unsigned int const&)
 T void CNavMesh::StitchAreaIntoMesh<AreaSet>(CNavArea*, NavDirType, AreaSet&)
 T void CNavMesh::StitchAreaIntoMesh<IncrementallyGeneratedAreas>(CNavArea*, NavDirType, IncrementallyGeneratedAreas&)
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, void, float, float, float>(ScriptFuncDescriptor_t*, CBaseEntity*, void (CBaseEntity::*)(float, float, float))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, HSCRIPT__*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, HSCRIPT__*, char const*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, char const*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<HSCRIPT__*, char const*, Vector const&, char const*, int>(ScriptFuncDescriptor_t*, HSCRIPT__* (*)(char const*, Vector const&, char const*, int))
 T void ScriptDeduceFunctionSignature<float, Vector const&, Vector const&, HSCRIPT__*>(ScriptFuncDescriptor_t*, float (*)(Vector const&, Vector const&, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<void, HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>(ScriptFuncDescriptor_t*, void (*)(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<void, Vector const&, Vector const&, Vector const&, int, int, int, int, float>(ScriptFuncDescriptor_t*, void (*)(Vector const&, Vector const&, Vector const&, int, int, int, int, float))
 T void ScriptDeduceFunctionSignature<void, Vector const&, Vector const&, int, int, int, bool, float>(ScriptFuncDescriptor_t*, void (*)(Vector const&, Vector const&, int, int, int, bool, float))
 T void ScriptDeduceFunctionSignature<void, char const*, Vector const&, Vector const&>(ScriptFuncDescriptor_t*, void (*)(char const*, Vector const&, Vector const&))
 T void ScriptDeduceFunctionSignature<void, char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>(ScriptFuncDescriptor_t*, void (*)(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*))
 T void SearchSurroundingAreas<CollectArriveFirstSpotsFunctor>(CNavArea*, Vector const&, CollectArriveFirstSpotsFunctor&, float, unsigned int, int)
 T void SearchSurroundingAreas<CollectHidingSpotsFunctor>(CNavArea*, Vector const&, CollectHidingSpotsFunctor&, float, unsigned int, int)
 T void SearchSurroundingAreas<CollectRetreatSpotsFunctor>(CNavArea*, Vector const&, CollectRetreatSpotsFunctor&, float, unsigned int, int)
 T void SearchSurroundingAreas<DrawSelectedSet>(CNavArea*, Vector const&, DrawSelectedSet&, float, unsigned int, int)
 T void SearchSurroundingAreas<FollowTargetCollector>(CNavArea*, Vector const&, FollowTargetCollector&, float, unsigned int, int)
 T void SearchSurroundingAreas<PlaceFloodFillFunctor>(CNavArea*, Vector const&, PlaceFloodFillFunctor&, float, unsigned int, int)
 T void SearchSurroundingAreas<SelectCollector>(CNavArea*, Vector const&, SelectCollector&, float, unsigned int, int)
 T void std::__introsort_loop<GCSDK::CSharedObjectTypeCache**, int, bool (*)(GCSDK::CSharedObjectTypeCache const*, GCSDK::CSharedObjectTypeCache const*)>(GCSDK::CSharedObjectTypeCache**, GCSDK::CSharedObjectTypeCache**, int, bool (*)(GCSDK::CSharedObjectTypeCache const*, GCSDK::CSharedObjectTypeCache const*))
 T weapon_c4Precache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_decoyPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_flashbangPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_hegrenadePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_incgrenadePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_knifePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_knifeggPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_molotovPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_smokegrenadePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T zcalloc(void*, unsigned int, unsigned int)
 T zcfree(void*, void*)
 ThreadGetCurrentId
 ThreadInterlockedAssignIf64
 ThreadSleep
 V_UTF8_strncpy
 Warning
 WriteMiniDump
 _DefaultRuneLocale
 _ExitOnFatalAssert
 _Unwind_Resume
 _Unwind_Resume_or_Rethrow
 __assert_rtn
 __bzero
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_bad_typeid
 __cxa_begin_catch
 __cxa_call_unexpected
 __cxa_end_catch
 __cxa_free_exception
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_rethrow
 __cxa_throw
 __divdi3
 __dynamic_cast
 __error
 __fixunssfdi
 __gxx_personality_v0
 __maskrune
 __moddi3
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __tolower
 __toupper
 __udivdi3
 acos
 acosf
 asctime
 asin
 asinf
 atan
 atan2
 atan2f
 atof
 atoi
 b (anonymous namespace)::AccountActivity_descriptor_
 b (anonymous namespace)::AccountActivity_reflection_
 b (anonymous namespace)::CAttribute_String_descriptor_
 b (anonymous namespace)::CAttribute_String_reflection_
 b (anonymous namespace)::CCLCMsg_BaselineAck_descriptor_
 b (anonymous namespace)::CCLCMsg_BaselineAck_reflection_
 b (anonymous namespace)::CCLCMsg_ClientInfo_descriptor_
 b (anonymous namespace)::CCLCMsg_ClientInfo_reflection_
 b (anonymous namespace)::CCLCMsg_CmdKeyValues_descriptor_
 b (anonymous namespace)::CCLCMsg_CmdKeyValues_reflection_
 b (anonymous namespace)::CCLCMsg_FileCRCCheck_descriptor_
 b (anonymous namespace)::CCLCMsg_FileCRCCheck_reflection_
 b (anonymous namespace)::CCLCMsg_ListenEvents_descriptor_
 b (anonymous namespace)::CCLCMsg_ListenEvents_reflection_
 b (anonymous namespace)::CCLCMsg_LoadingProgress_descriptor_
 b (anonymous namespace)::CCLCMsg_LoadingProgress_reflection_
 b (anonymous namespace)::CCLCMsg_Move_descriptor_
 b (anonymous namespace)::CCLCMsg_Move_reflection_
 b (anonymous namespace)::CCLCMsg_RespondCvarValue_descriptor_
 b (anonymous namespace)::CCLCMsg_RespondCvarValue_reflection_
 b (anonymous namespace)::CCLCMsg_SplitPlayerConnect_descriptor_
 b (anonymous namespace)::CCLCMsg_SplitPlayerConnect_reflection_
 b (anonymous namespace)::CCLCMsg_VoiceData_descriptor_
 b (anonymous namespace)::CCLCMsg_VoiceData_reflection_
 b (anonymous namespace)::CCSUsrMsg_AchievementEvent_descriptor_
 b (anonymous namespace)::CCSUsrMsg_AchievementEvent_reflection_
 b (anonymous namespace)::CCSUsrMsg_AdjustMoney_descriptor_
 b (anonymous namespace)::CCSUsrMsg_AdjustMoney_reflection_
 b (anonymous namespace)::CCSUsrMsg_AmmoDenied_descriptor_
 b (anonymous namespace)::CCSUsrMsg_AmmoDenied_reflection_
 b (anonymous namespace)::CCSUsrMsg_BarTime_descriptor_
 b (anonymous namespace)::CCSUsrMsg_BarTime_reflection_
 b (anonymous namespace)::CCSUsrMsg_CallVoteFailed_descriptor_
 b (anonymous namespace)::CCSUsrMsg_CallVoteFailed_reflection_
 b (anonymous namespace)::CCSUsrMsg_ClientInfo_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ClientInfo_reflection_
 b (anonymous namespace)::CCSUsrMsg_CloseCaptionDirect_descriptor_
 b (anonymous namespace)::CCSUsrMsg_CloseCaptionDirect_reflection_
 b (anonymous namespace)::CCSUsrMsg_CloseCaption_descriptor_
 b (anonymous namespace)::CCSUsrMsg_CloseCaption_reflection_
 b (anonymous namespace)::CCSUsrMsg_CurrentTimescale_descriptor_
 b (anonymous namespace)::CCSUsrMsg_CurrentTimescale_reflection_
 b (anonymous namespace)::CCSUsrMsg_Damage_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Damage_reflection_
 b (anonymous namespace)::CCSUsrMsg_DesiredTimescale_descriptor_
 b (anonymous namespace)::CCSUsrMsg_DesiredTimescale_reflection_
 b (anonymous namespace)::CCSUsrMsg_DisconnectToLobby_descriptor_
 b (anonymous namespace)::CCSUsrMsg_DisconnectToLobby_reflection_
 b (anonymous namespace)::CCSUsrMsg_DisplayInventory_descriptor_
 b (anonymous namespace)::CCSUsrMsg_DisplayInventory_reflection_
 b (anonymous namespace)::CCSUsrMsg_Fade_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Fade_reflection_
 b (anonymous namespace)::CCSUsrMsg_GameTitle_descriptor_
 b (anonymous namespace)::CCSUsrMsg_GameTitle_reflection_
 b (anonymous namespace)::CCSUsrMsg_Geiger_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Geiger_reflection_
 b (anonymous namespace)::CCSUsrMsg_GlowPropTurnOff_descriptor_
 b (anonymous namespace)::CCSUsrMsg_GlowPropTurnOff_reflection_
 b (anonymous namespace)::CCSUsrMsg_HintText_descriptor_
 b (anonymous namespace)::CCSUsrMsg_HintText_reflection_
 b (anonymous namespace)::CCSUsrMsg_HudMsg_descriptor_
 b (anonymous namespace)::CCSUsrMsg_HudMsg_reflection_
 b (anonymous namespace)::CCSUsrMsg_HudText_descriptor_
 b (anonymous namespace)::CCSUsrMsg_HudText_reflection_
 b (anonymous namespace)::CCSUsrMsg_ItemDrop_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ItemDrop_reflection_
 b (anonymous namespace)::CCSUsrMsg_ItemPickup_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ItemPickup_reflection_
 b (anonymous namespace)::CCSUsrMsg_KeyHintText_descriptor_
 b (anonymous namespace)::CCSUsrMsg_KeyHintText_reflection_
 b (anonymous namespace)::CCSUsrMsg_KillCam_descriptor_
 b (anonymous namespace)::CCSUsrMsg_KillCam_reflection_
 b (anonymous namespace)::CCSUsrMsg_MarkAchievement_descriptor_
 b (anonymous namespace)::CCSUsrMsg_MarkAchievement_reflection_
 b (anonymous namespace)::CCSUsrMsg_MatchEndConditions_descriptor_
 b (anonymous namespace)::CCSUsrMsg_MatchEndConditions_reflection_
 b (anonymous namespace)::CCSUsrMsg_MatchStatsUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_MatchStatsUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_PlayerStatsUpdate_Stat_descriptor_
 b (anonymous namespace)::CCSUsrMsg_PlayerStatsUpdate_Stat_reflection_
 b (anonymous namespace)::CCSUsrMsg_PlayerStatsUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_PlayerStatsUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_ProcessSpottedEntityUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ProcessSpottedEntityUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_RadioText_descriptor_
 b (anonymous namespace)::CCSUsrMsg_RadioText_reflection_
 b (anonymous namespace)::CCSUsrMsg_RawAudio_descriptor_
 b (anonymous namespace)::CCSUsrMsg_RawAudio_reflection_
 b (anonymous namespace)::CCSUsrMsg_ReloadEffect_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ReloadEffect_reflection_
 b (anonymous namespace)::CCSUsrMsg_ReportHit_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ReportHit_reflection_
 b (anonymous namespace)::CCSUsrMsg_RequestState_descriptor_
 b (anonymous namespace)::CCSUsrMsg_RequestState_reflection_
 b (anonymous namespace)::CCSUsrMsg_ResetHud_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ResetHud_reflection_
 b (anonymous namespace)::CCSUsrMsg_RoundBackupFilenames_descriptor_
 b (anonymous namespace)::CCSUsrMsg_RoundBackupFilenames_reflection_
 b (anonymous namespace)::CCSUsrMsg_Rumble_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Rumble_reflection_
 b (anonymous namespace)::CCSUsrMsg_SayText2_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SayText2_reflection_
 b (anonymous namespace)::CCSUsrMsg_SayText_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SayText_reflection_
 b (anonymous namespace)::CCSUsrMsg_SendAudio_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SendAudio_reflection_
 b (anonymous namespace)::CCSUsrMsg_SendLastKillerDamageToClient_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SendLastKillerDamageToClient_reflection_
 b (anonymous namespace)::CCSUsrMsg_SendPlayerItemDrops_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SendPlayerItemDrops_reflection_
 b (anonymous namespace)::CCSUsrMsg_SendPlayerItemFound_descriptor_
 b (anonymous namespace)::CCSUsrMsg_SendPlayerItemFound_reflection_
 b (anonymous namespace)::CCSUsrMsg_ServerRankRevealAll_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ServerRankRevealAll_reflection_
 b (anonymous namespace)::CCSUsrMsg_ServerRankUpdate_RankUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ServerRankUpdate_RankUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_ServerRankUpdate_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ServerRankUpdate_reflection_
 b (anonymous namespace)::CCSUsrMsg_Shake_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Shake_reflection_
 b (anonymous namespace)::CCSUsrMsg_ShowMenu_descriptor_
 b (anonymous namespace)::CCSUsrMsg_ShowMenu_reflection_
 b (anonymous namespace)::CCSUsrMsg_StopSpectatorMode_descriptor_
 b (anonymous namespace)::CCSUsrMsg_StopSpectatorMode_reflection_
 b (anonymous namespace)::CCSUsrMsg_TextMsg_descriptor_
 b (anonymous namespace)::CCSUsrMsg_TextMsg_reflection_
 b (anonymous namespace)::CCSUsrMsg_Train_descriptor_
 b (anonymous namespace)::CCSUsrMsg_Train_reflection_
 b (anonymous namespace)::CCSUsrMsg_VGUIMenu_Subkey_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VGUIMenu_Subkey_reflection_
 b (anonymous namespace)::CCSUsrMsg_VGUIMenu_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VGUIMenu_reflection_
 b (anonymous namespace)::CCSUsrMsg_VoiceMask_PlayerMask_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VoiceMask_PlayerMask_reflection_
 b (anonymous namespace)::CCSUsrMsg_VoiceMask_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VoiceMask_reflection_
 b (anonymous namespace)::CCSUsrMsg_VoteFailed_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VoteFailed_reflection_
 b (anonymous namespace)::CCSUsrMsg_VotePass_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VotePass_reflection_
 b (anonymous namespace)::CCSUsrMsg_VoteSetup_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VoteSetup_reflection_
 b (anonymous namespace)::CCSUsrMsg_VoteStart_descriptor_
 b (anonymous namespace)::CCSUsrMsg_VoteStart_reflection_
 b (anonymous namespace)::CCSUsrMsg_WarmupHasEnded_descriptor_
 b (anonymous namespace)::CCSUsrMsg_WarmupHasEnded_reflection_
 b (anonymous namespace)::CCSUsrMsg_XRankGet_descriptor_
 b (anonymous namespace)::CCSUsrMsg_XRankGet_reflection_
 b (anonymous namespace)::CCSUsrMsg_XRankUpd_descriptor_
 b (anonymous namespace)::CCSUsrMsg_XRankUpd_reflection_
 b (anonymous namespace)::CClientHeaderOverwatchEvidence_descriptor_
 b (anonymous namespace)::CClientHeaderOverwatchEvidence_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_MatchInfo_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_MatchInfo_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_MatchmakingLockedInMatch_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_MatchmakingLockedInMatch_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentGroupTeam_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentGroupTeam_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentGroup_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentGroup_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentInfo_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentInfo_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentMatchDraft_Entry_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentMatchDraft_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentMatchDraft_reflection_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentSection_descriptor_
 b (anonymous namespace)::CDataGCCStrike15_v2_TournamentSection_reflection_
 b (anonymous namespace)::CEconItemPreviewDataBlock_Sticker_descriptor_
 b (anonymous namespace)::CEconItemPreviewDataBlock_Sticker_reflection_
 b (anonymous namespace)::CEconItemPreviewDataBlock_descriptor_
 b (anonymous namespace)::CEconItemPreviewDataBlock_reflection_
 b (anonymous namespace)::CGCMsgGetIPLocationResponse_descriptor_
 b (anonymous namespace)::CGCMsgGetIPLocationResponse_reflection_
 b (anonymous namespace)::CGCMsgGetIPLocation_descriptor_
 b (anonymous namespace)::CGCMsgGetIPLocation_reflection_
 b (anonymous namespace)::CGCMsgGetSystemStatsResponse_descriptor_
 b (anonymous namespace)::CGCMsgGetSystemStatsResponse_reflection_
 b (anonymous namespace)::CGCMsgGetSystemStats_descriptor_
 b (anonymous namespace)::CGCMsgGetSystemStats_reflection_
 b (anonymous namespace)::CGCMsgMemCachedDelete_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedDelete_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_ValueTag_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_ValueTag_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGet_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGet_reflection_
 b (anonymous namespace)::CGCMsgMemCachedSet_KeyPair_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedSet_KeyPair_reflection_
 b (anonymous namespace)::CGCMsgMemCachedSet_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedSet_reflection_
 b (anonymous namespace)::CGCMsgMemCachedStatsResponse_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedStatsResponse_reflection_
 b (anonymous namespace)::CGCMsgMemCachedStats_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedStats_reflection_
 b (anonymous namespace)::CGCMsgSQLStatsResponse_descriptor_
 b (anonymous namespace)::CGCMsgSQLStatsResponse_reflection_
 b (anonymous namespace)::CGCMsgSQLStats_descriptor_
 b (anonymous namespace)::CGCMsgSQLStats_reflection_
 b (anonymous namespace)::CGCMsgSystemStatsSchema_descriptor_
 b (anonymous namespace)::CGCMsgSystemStatsSchema_reflection_
 b (anonymous namespace)::CGCStorePurchaseInit_LineItem_descriptor_
 b (anonymous namespace)::CGCStorePurchaseInit_LineItem_reflection_
 b (anonymous namespace)::CGCSystemMsg_GetAccountDetails_Response_descriptor_
 b (anonymous namespace)::CGCSystemMsg_GetAccountDetails_Response_reflection_
 b (anonymous namespace)::CGCSystemMsg_GetAccountDetails_descriptor_
 b (anonymous namespace)::CGCSystemMsg_GetAccountDetails_reflection_
 b (anonymous namespace)::CGCSystemMsg_GetPurchaseTrust_Request_descriptor_
 b (anonymous namespace)::CGCSystemMsg_GetPurchaseTrust_Request_reflection_
 b (anonymous namespace)::CGCSystemMsg_GetPurchaseTrust_Response_descriptor_
 b (anonymous namespace)::CGCSystemMsg_GetPurchaseTrust_Response_reflection_
 b (anonymous namespace)::CGCToGCMsgMasterAck_Response_descriptor_
 b (anonymous namespace)::CGCToGCMsgMasterAck_Response_reflection_
 b (anonymous namespace)::CGCToGCMsgMasterAck_descriptor_
 b (anonymous namespace)::CGCToGCMsgMasterAck_reflection_
 b (anonymous namespace)::CGCToGCMsgMasterStartupComplete_descriptor_
 b (anonymous namespace)::CGCToGCMsgMasterStartupComplete_reflection_
 b (anonymous namespace)::CGCToGCMsgRoutedReply_descriptor_
 b (anonymous namespace)::CGCToGCMsgRoutedReply_reflection_
 b (anonymous namespace)::CGCToGCMsgRouted_descriptor_
 b (anonymous namespace)::CGCToGCMsgRouted_reflection_
 b (anonymous namespace)::CIPLocationInfo_descriptor_
 b (anonymous namespace)::CIPLocationInfo_reflection_
 b (anonymous namespace)::CLC_Messages_descriptor_
 b (anonymous namespace)::CMsgAMAddFreeLicenseResponse_descriptor_
 b (anonymous namespace)::CMsgAMAddFreeLicenseResponse_reflection_
 b (anonymous namespace)::CMsgAMAddFreeLicense_descriptor_
 b (anonymous namespace)::CMsgAMAddFreeLicense_reflection_
 b (anonymous namespace)::CMsgAMFindAccountsResponse_descriptor_
 b (anonymous namespace)::CMsgAMFindAccountsResponse_reflection_
 b (anonymous namespace)::CMsgAMFindAccounts_descriptor_
 b (anonymous namespace)::CMsgAMFindAccounts_reflection_
 b (anonymous namespace)::CMsgAMGetLicensesResponse_descriptor_
 b (anonymous namespace)::CMsgAMGetLicensesResponse_reflection_
 b (anonymous namespace)::CMsgAMGetLicenses_descriptor_
 b (anonymous namespace)::CMsgAMGetLicenses_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Stats_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Stats_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStats_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStats_reflection_
 b (anonymous namespace)::CMsgAMGrantGuestPasses2Response_descriptor_
 b (anonymous namespace)::CMsgAMGrantGuestPasses2Response_reflection_
 b (anonymous namespace)::CMsgAMGrantGuestPasses2_descriptor_
 b (anonymous namespace)::CMsgAMGrantGuestPasses2_reflection_
 b (anonymous namespace)::CMsgAMSendEmailResponse_descriptor_
 b (anonymous namespace)::CMsgAMSendEmailResponse_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_PersonaNameReplacementToken_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_ReplacementToken_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_ReplacementToken_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_reflection_
 b (anonymous namespace)::CMsgAccountDetails_descriptor_
 b (anonymous namespace)::CMsgAccountDetails_reflection_
 b (anonymous namespace)::CMsgAdjustItemEquippedState_descriptor_
 b (anonymous namespace)::CMsgAdjustItemEquippedState_reflection_
 b (anonymous namespace)::CMsgApplyAutograph_descriptor_
 b (anonymous namespace)::CMsgApplyAutograph_reflection_
 b (anonymous namespace)::CMsgApplyEggEssence_descriptor_
 b (anonymous namespace)::CMsgApplyEggEssence_reflection_
 b (anonymous namespace)::CMsgApplyPennantUpgrade_descriptor_
 b (anonymous namespace)::CMsgApplyPennantUpgrade_reflection_
 b (anonymous namespace)::CMsgApplyStatTrakSwap_descriptor_
 b (anonymous namespace)::CMsgApplyStatTrakSwap_reflection_
 b (anonymous namespace)::CMsgApplySticker_descriptor_
 b (anonymous namespace)::CMsgApplySticker_reflection_
 b (anonymous namespace)::CMsgApplyStrangePart_descriptor_
 b (anonymous namespace)::CMsgApplyStrangePart_reflection_
 b (anonymous namespace)::CMsgCStrike15Welcome_descriptor_
 b (anonymous namespace)::CMsgCStrike15Welcome_reflection_
 b (anonymous namespace)::CMsgClientHello_descriptor_
 b (anonymous namespace)::CMsgClientHello_reflection_
 b (anonymous namespace)::CMsgClientWelcome_Location_descriptor_
 b (anonymous namespace)::CMsgClientWelcome_Location_reflection_
 b (anonymous namespace)::CMsgClientWelcome_descriptor_
 b (anonymous namespace)::CMsgClientWelcome_reflection_
 b (anonymous namespace)::CMsgConVarValue_descriptor_
 b (anonymous namespace)::CMsgConVarValue_reflection_
 b (anonymous namespace)::CMsgConnectionStatus_descriptor_
 b (anonymous namespace)::CMsgConnectionStatus_reflection_
 b (anonymous namespace)::CMsgConsumableExhausted_descriptor_
 b (anonymous namespace)::CMsgConsumableExhausted_reflection_
 b (anonymous namespace)::CMsgDevNewItemRequest_descriptor_
 b (anonymous namespace)::CMsgDevNewItemRequest_reflection_
 b (anonymous namespace)::CMsgGCBannedWordListRequest_descriptor_
 b (anonymous namespace)::CMsgGCBannedWordListRequest_reflection_
 b (anonymous namespace)::CMsgGCBannedWordListResponse_descriptor_
 b (anonymous namespace)::CMsgGCBannedWordListResponse_reflection_
 b (anonymous namespace)::CMsgGCBannedWord_descriptor_
 b (anonymous namespace)::CMsgGCBannedWord_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_AccountPrivacySettings_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_AccountPrivacySettings_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCTextMsg_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Client2GCTextMsg_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientCommendPlayer_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientCommendPlayer_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportPlayer_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportPlayer_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportResponse_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportResponse_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportServer_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientReportServer_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestJoinFriendData_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestJoinFriendData_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestJoinServerData_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestJoinServerData_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestPlayersProfile_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestPlayersProfile_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientSubmitSurveyVote_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientSubmitSurveyVote_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ClientTextMsg_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ClientTextMsg_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ClientTournamentInfo_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ClientTournamentInfo_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ServerReservationUpdate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GC2ServerReservationUpdate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardRequest_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardRequest_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchEndRunRewardDrops_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchEndRunRewardDrops_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestTournamentGames_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchListRequestTournamentGames_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchList_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchList_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingClient2GCHello_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingClient2GCHello_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGCOperationalStats_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingGCOperationalStats_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServer2GCKick_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServer2GCKick_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerMatchEnd_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerMatchEnd_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingStart_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingStart_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingStop_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_MatchmakingStop_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerEarnedRewardNotification_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerEarnedRewardNotification_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayersProfile_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_PlayersProfile_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Predictions_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Predictions_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Server2GCClientValidate_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Server2GCClientValidate_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification_reflection_
 b (anonymous namespace)::CMsgGCCStrike15_v2_WatchInfoUsers_descriptor_
 b (anonymous namespace)::CMsgGCCStrike15_v2_WatchInfoUsers_reflection_
 b (anonymous namespace)::CMsgGCCheckFriendship_Response_descriptor_
 b (anonymous namespace)::CMsgGCCheckFriendship_Response_reflection_
 b (anonymous namespace)::CMsgGCCheckFriendship_descriptor_
 b (anonymous namespace)::CMsgGCCheckFriendship_reflection_
 b (anonymous namespace)::CMsgGCClientDisplayNotification_descriptor_
 b (anonymous namespace)::CMsgGCClientDisplayNotification_reflection_
 b (anonymous namespace)::CMsgGCClientVersionUpdated_descriptor_
 b (anonymous namespace)::CMsgGCClientVersionUpdated_reflection_
 b (anonymous namespace)::CMsgGCCollectItem_descriptor_
 b (anonymous namespace)::CMsgGCCollectItem_reflection_
 b (anonymous namespace)::CMsgGCCstrike15_v2_ClientRequestNewMission_descriptor_
 b (anonymous namespace)::CMsgGCCstrike15_v2_ClientRequestNewMission_reflection_
 b (anonymous namespace)::CMsgGCError_descriptor_
 b (anonymous namespace)::CMsgGCError_reflection_
 b (anonymous namespace)::CMsgGCGetCommandListResponse_descriptor_
 b (anonymous namespace)::CMsgGCGetCommandListResponse_reflection_
 b (anonymous namespace)::CMsgGCGetCommandList_descriptor_
 b (anonymous namespace)::CMsgGCGetCommandList_reflection_
 b (anonymous namespace)::CMsgGCGetEmailTemplateResponse_descriptor_
 b (anonymous namespace)::CMsgGCGetEmailTemplateResponse_reflection_
 b (anonymous namespace)::CMsgGCGetEmailTemplate_descriptor_
 b (anonymous namespace)::CMsgGCGetEmailTemplate_reflection_
 b (anonymous namespace)::CMsgGCGetPartnerAccountLink_Response_descriptor_
 b (anonymous namespace)::CMsgGCGetPartnerAccountLink_Response_reflection_
 b (anonymous namespace)::CMsgGCGetPartnerAccountLink_descriptor_
 b (anonymous namespace)::CMsgGCGetPartnerAccountLink_reflection_
 b (anonymous namespace)::CMsgGCGetPersonaNames_Response_PersonaName_descriptor_
 b (anonymous namespace)::CMsgGCGetPersonaNames_Response_PersonaName_reflection_
 b (anonymous namespace)::CMsgGCGetPersonaNames_Response_descriptor_
 b (anonymous namespace)::CMsgGCGetPersonaNames_Response_reflection_
 b (anonymous namespace)::CMsgGCGetPersonaNames_descriptor_
 b (anonymous namespace)::CMsgGCGetPersonaNames_reflection_
 b (anonymous namespace)::CMsgGCGiftedItems_descriptor_
 b (anonymous namespace)::CMsgGCGiftedItems_reflection_
 b (anonymous namespace)::CMsgGCHAccountVacStatusChange_descriptor_
 b (anonymous namespace)::CMsgGCHAccountVacStatusChange_reflection_
 b (anonymous namespace)::CMsgGCHUpdateSession_ExtraField_descriptor_
 b (anonymous namespace)::CMsgGCHUpdateSession_ExtraField_reflection_
 b (anonymous namespace)::CMsgGCHUpdateSession_descriptor_
 b (anonymous namespace)::CMsgGCHUpdateSession_reflection_
 b (anonymous namespace)::CMsgGCIncrementKillCountResponse_descriptor_
 b (anonymous namespace)::CMsgGCIncrementKillCountResponse_reflection_
 b (anonymous namespace)::CMsgGCItemPreviewItemBoughtNotification_descriptor_
 b (anonymous namespace)::CMsgGCItemPreviewItemBoughtNotification_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_Entry_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_Entry_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_Response_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_Response_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetClientMsgRouting_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_Response_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_Response_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_SubGC_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_SubGC_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetDirectory_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_Entry_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_Entry_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_Response_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_Response_reflection_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_descriptor_
 b (anonymous namespace)::CMsgGCMsgMasterSetWebAPIRouting_reflection_
 b (anonymous namespace)::CMsgGCMsgSetOptions_MessageRange_descriptor_
 b (anonymous namespace)::CMsgGCMsgSetOptions_MessageRange_reflection_
 b (anonymous namespace)::CMsgGCMsgSetOptions_Option_descriptor_
 b (anonymous namespace)::CMsgGCMsgSetOptions_descriptor_
 b (anonymous namespace)::CMsgGCMsgSetOptions_reflection_
 b (anonymous namespace)::CMsgGCMsgWebAPIJobRequestForwardResponse_descriptor_
 b (anonymous namespace)::CMsgGCMsgWebAPIJobRequestForwardResponse_reflection_
 b (anonymous namespace)::CMsgGCMultiplexMessage_descriptor_
 b (anonymous namespace)::CMsgGCMultiplexMessage_reflection_
 b (anonymous namespace)::CMsgGCNameItemNotification_descriptor_
 b (anonymous namespace)::CMsgGCNameItemNotification_reflection_
 b (anonymous namespace)::CMsgGCReportAbuseResponse_descriptor_
 b (anonymous namespace)::CMsgGCReportAbuseResponse_reflection_
 b (anonymous namespace)::CMsgGCReportAbuse_descriptor_
 b (anonymous namespace)::CMsgGCReportAbuse_reflection_
 b (anonymous namespace)::CMsgGCRequestAnnouncementsResponse_descriptor_
 b (anonymous namespace)::CMsgGCRequestAnnouncementsResponse_reflection_
 b (anonymous namespace)::CMsgGCRequestAnnouncements_descriptor_
 b (anonymous namespace)::CMsgGCRequestAnnouncements_reflection_
 b (anonymous namespace)::CMsgGCRequestSessionIPResponse_descriptor_
 b (anonymous namespace)::CMsgGCRequestSessionIPResponse_reflection_
 b (anonymous namespace)::CMsgGCRequestSessionIP_descriptor_
 b (anonymous namespace)::CMsgGCRequestSessionIP_reflection_
 b (anonymous namespace)::CMsgGCRoutingInfo_RoutingMethod_descriptor_
 b (anonymous namespace)::CMsgGCRoutingInfo_descriptor_
 b (anonymous namespace)::CMsgGCRoutingInfo_reflection_
 b (anonymous namespace)::CMsgGCServerVersionUpdated_descriptor_
 b (anonymous namespace)::CMsgGCServerVersionUpdated_reflection_
 b (anonymous namespace)::CMsgGCShowItemsPickedUp_descriptor_
 b (anonymous namespace)::CMsgGCShowItemsPickedUp_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseCancelResponse_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseCancelResponse_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseCancel_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseCancel_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseFinalizeResponse_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseFinalizeResponse_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseFinalize_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseFinalize_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseInitResponse_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseInitResponse_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseInit_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseInit_reflection_
 b (anonymous namespace)::CMsgGCToGCBannedWordListBroadcast_descriptor_
 b (anonymous namespace)::CMsgGCToGCBannedWordListBroadcast_reflection_
 b (anonymous namespace)::CMsgGCToGCBannedWordListUpdated_descriptor_
 b (anonymous namespace)::CMsgGCToGCBannedWordListUpdated_reflection_
 b (anonymous namespace)::CMsgGCToGCBroadcastConsoleCommand_descriptor_
 b (anonymous namespace)::CMsgGCToGCBroadcastConsoleCommand_reflection_
 b (anonymous namespace)::CMsgGCToGCDirtyMultipleSDOCache_descriptor_
 b (anonymous namespace)::CMsgGCToGCDirtyMultipleSDOCache_reflection_
 b (anonymous namespace)::CMsgGCToGCDirtySDOCache_descriptor_
 b (anonymous namespace)::CMsgGCToGCDirtySDOCache_reflection_
 b (anonymous namespace)::CMsgGCToGCIsTrustedServerResponse_descriptor_
 b (anonymous namespace)::CMsgGCToGCIsTrustedServerResponse_reflection_
 b (anonymous namespace)::CMsgGCToGCIsTrustedServer_descriptor_
 b (anonymous namespace)::CMsgGCToGCIsTrustedServer_reflection_
 b (anonymous namespace)::CMsgGCToGCReloadVersions_descriptor_
 b (anonymous namespace)::CMsgGCToGCReloadVersions_reflection_
 b (anonymous namespace)::CMsgGCToGCRequestPassportItemGrant_descriptor_
 b (anonymous namespace)::CMsgGCToGCRequestPassportItemGrant_reflection_
 b (anonymous namespace)::CMsgGCToGCUpdateSQLKeyValue_descriptor_
 b (anonymous namespace)::CMsgGCToGCUpdateSQLKeyValue_reflection_
 b (anonymous namespace)::CMsgGCToGCWebAPIAccountChanged_descriptor_
 b (anonymous namespace)::CMsgGCToGCWebAPIAccountChanged_reflection_
 b (anonymous namespace)::CMsgGCUpdateSessionIP_descriptor_
 b (anonymous namespace)::CMsgGCUpdateSessionIP_reflection_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData_descriptor_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData_reflection_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData_descriptor_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData_reflection_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_descriptor_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_PlayerQuestData_reflection_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_descriptor_
 b (anonymous namespace)::CMsgGC_ServerQuestUpdateData_reflection_
 b (anonymous namespace)::CMsgGameServerInfo_ServerType_descriptor_
 b (anonymous namespace)::CMsgGameServerInfo_descriptor_
 b (anonymous namespace)::CMsgGameServerInfo_reflection_
 b (anonymous namespace)::CMsgHttpRequest_QueryParam_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_QueryParam_reflection_
 b (anonymous namespace)::CMsgHttpRequest_RequestHeader_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_RequestHeader_reflection_
 b (anonymous namespace)::CMsgHttpRequest_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_reflection_
 b (anonymous namespace)::CMsgHttpResponse_ResponseHeader_descriptor_
 b (anonymous namespace)::CMsgHttpResponse_ResponseHeader_reflection_
 b (anonymous namespace)::CMsgHttpResponse_descriptor_
 b (anonymous namespace)::CMsgHttpResponse_reflection_
 b (anonymous namespace)::CMsgIncrementKillCountAttribute_descriptor_
 b (anonymous namespace)::CMsgIncrementKillCountAttribute_reflection_
 b (anonymous namespace)::CMsgInvitationCreated_descriptor_
 b (anonymous namespace)::CMsgInvitationCreated_reflection_
 b (anonymous namespace)::CMsgInviteToParty_descriptor_
 b (anonymous namespace)::CMsgInviteToParty_reflection_
 b (anonymous namespace)::CMsgItemAcknowledged__DEPRECATED_descriptor_
 b (anonymous namespace)::CMsgItemAcknowledged__DEPRECATED_reflection_
 b (anonymous namespace)::CMsgItemAcknowledged_descriptor_
 b (anonymous namespace)::CMsgItemAcknowledged_reflection_
 b (anonymous namespace)::CMsgKickFromParty_descriptor_
 b (anonymous namespace)::CMsgKickFromParty_reflection_
 b (anonymous namespace)::CMsgLANServerAvailable_descriptor_
 b (anonymous namespace)::CMsgLANServerAvailable_reflection_
 b (anonymous namespace)::CMsgLeaveParty_descriptor_
 b (anonymous namespace)::CMsgLeaveParty_reflection_
 b (anonymous namespace)::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_descriptor_
 b (anonymous namespace)::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_reflection_
 b (anonymous namespace)::CMsgNotificationOfSuspiciousActivity_descriptor_
 b (anonymous namespace)::CMsgNotificationOfSuspiciousActivity_reflection_
 b (anonymous namespace)::CMsgNotifyWatchdog_descriptor_
 b (anonymous namespace)::CMsgNotifyWatchdog_reflection_
 b (anonymous namespace)::CMsgPackageLicense_descriptor_
 b (anonymous namespace)::CMsgPackageLicense_reflection_
 b (anonymous namespace)::CMsgPartyInviteResponse_descriptor_
 b (anonymous namespace)::CMsgPartyInviteResponse_reflection_
 b (anonymous namespace)::CMsgProtoBufHeader_descriptor_
 b (anonymous namespace)::CMsgProtoBufHeader_reflection_
 b (anonymous namespace)::CMsgQAngle_descriptor_
 b (anonymous namespace)::CMsgQAngle_reflection_
 b (anonymous namespace)::CMsgRGBA_descriptor_
 b (anonymous namespace)::CMsgRGBA_reflection_
 b (anonymous namespace)::CMsgReplayUploadedToYouTube_descriptor_
 b (anonymous namespace)::CMsgReplayUploadedToYouTube_reflection_
 b (anonymous namespace)::CMsgReplicateConVars_descriptor_
 b (anonymous namespace)::CMsgReplicateConVars_reflection_
 b (anonymous namespace)::CMsgRequestInventoryRefresh_descriptor_
 b (anonymous namespace)::CMsgRequestInventoryRefresh_reflection_
 b (anonymous namespace)::CMsgSDONoMemcached_descriptor_
 b (anonymous namespace)::CMsgSDONoMemcached_reflection_
 b (anonymous namespace)::CMsgSOCacheHaveVersion_descriptor_
 b (anonymous namespace)::CMsgSOCacheHaveVersion_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscribed_SubscribedType_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscribed_SubscribedType_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscribed_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscribed_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscriptionCheck_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscriptionCheck_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscriptionRefresh_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscriptionRefresh_reflection_
 b (anonymous namespace)::CMsgSOCacheUnsubscribed_descriptor_
 b (anonymous namespace)::CMsgSOCacheUnsubscribed_reflection_
 b (anonymous namespace)::CMsgSOCacheVersion_descriptor_
 b (anonymous namespace)::CMsgSOCacheVersion_reflection_
 b (anonymous namespace)::CMsgSOIDOwner_descriptor_
 b (anonymous namespace)::CMsgSOIDOwner_reflection_
 b (anonymous namespace)::CMsgSOMultipleObjects_SingleObject_descriptor_
 b (anonymous namespace)::CMsgSOMultipleObjects_SingleObject_reflection_
 b (anonymous namespace)::CMsgSOMultipleObjects_descriptor_
 b (anonymous namespace)::CMsgSOMultipleObjects_reflection_
 b (anonymous namespace)::CMsgSOSingleObject_descriptor_
 b (anonymous namespace)::CMsgSOSingleObject_reflection_
 b (anonymous namespace)::CMsgSelectItemPresetForClassReply_descriptor_
 b (anonymous namespace)::CMsgSelectItemPresetForClassReply_reflection_
 b (anonymous namespace)::CMsgSelectItemPresetForClass_descriptor_
 b (anonymous namespace)::CMsgSelectItemPresetForClass_reflection_
 b (anonymous namespace)::CMsgServerAvailable_descriptor_
 b (anonymous namespace)::CMsgServerAvailable_reflection_
 b (anonymous namespace)::CMsgSetItemPositions_ItemPosition_descriptor_
 b (anonymous namespace)::CMsgSetItemPositions_ItemPosition_reflection_
 b (anonymous namespace)::CMsgSetItemPositions_descriptor_
 b (anonymous namespace)::CMsgSetItemPositions_reflection_
 b (anonymous namespace)::CMsgSetPresetItemPosition_descriptor_
 b (anonymous namespace)::CMsgSetPresetItemPosition_reflection_
 b (anonymous namespace)::CMsgSortItems_descriptor_
 b (anonymous namespace)::CMsgSortItems_reflection_
 b (anonymous namespace)::CMsgStoreGetUserDataResponse_descriptor_
 b (anonymous namespace)::CMsgStoreGetUserDataResponse_reflection_
 b (anonymous namespace)::CMsgStoreGetUserData_descriptor_
 b (anonymous namespace)::CMsgStoreGetUserData_reflection_
 b (anonymous namespace)::CMsgSystemBroadcast_descriptor_
 b (anonymous namespace)::CMsgSystemBroadcast_reflection_
 b (anonymous namespace)::CMsgUpdateItemSchema_descriptor_
 b (anonymous namespace)::CMsgUpdateItemSchema_reflection_
 b (anonymous namespace)::CMsgUseItem_descriptor_
 b (anonymous namespace)::CMsgUseItem_reflection_
 b (anonymous namespace)::CMsgVector2D_descriptor_
 b (anonymous namespace)::CMsgVector2D_reflection_
 b (anonymous namespace)::CMsgVector_descriptor_
 b (anonymous namespace)::CMsgVector_reflection_
 b (anonymous namespace)::CMsgWebAPIKey_descriptor_
 b (anonymous namespace)::CMsgWebAPIKey_reflection_
 b (anonymous namespace)::CMsgWebAPIRequest_descriptor_
 b (anonymous namespace)::CMsgWebAPIRequest_reflection_
 b (anonymous namespace)::CMsg_CVars_CVar_descriptor_
 b (anonymous namespace)::CMsg_CVars_CVar_reflection_
 b (anonymous namespace)::CMsg_CVars_descriptor_
 b (anonymous namespace)::CMsg_CVars_reflection_
 b (anonymous namespace)::CNETMsg_Disconnect_descriptor_
 b (anonymous namespace)::CNETMsg_Disconnect_reflection_
 b (anonymous namespace)::CNETMsg_File_descriptor_
 b (anonymous namespace)::CNETMsg_File_reflection_
 b (anonymous namespace)::CNETMsg_NOP_descriptor_
 b (anonymous namespace)::CNETMsg_NOP_reflection_
 b (anonymous namespace)::CNETMsg_PlayerAvatarData_descriptor_
 b (anonymous namespace)::CNETMsg_PlayerAvatarData_reflection_
 b (anonymous namespace)::CNETMsg_SetConVar_descriptor_
 b (anonymous namespace)::CNETMsg_SetConVar_reflection_
 b (anonymous namespace)::CNETMsg_SignonState_descriptor_
 b (anonymous namespace)::CNETMsg_SignonState_reflection_
 b (anonymous namespace)::CNETMsg_SplitScreenUser_descriptor_
 b (anonymous namespace)::CNETMsg_SplitScreenUser_reflection_
 b (anonymous namespace)::CNETMsg_StringCmd_descriptor_
 b (anonymous namespace)::CNETMsg_StringCmd_reflection_
 b (anonymous namespace)::CNETMsg_Tick_descriptor_
 b (anonymous namespace)::CNETMsg_Tick_reflection_
 b (anonymous namespace)::CPreMatchInfoData_TeamStats_descriptor_
 b (anonymous namespace)::CPreMatchInfoData_TeamStats_reflection_
 b (anonymous namespace)::CPreMatchInfoData_descriptor_
 b (anonymous namespace)::CPreMatchInfoData_reflection_
 b (anonymous namespace)::CSOEconClaimCode_descriptor_
 b (anonymous namespace)::CSOEconClaimCode_reflection_
 b (anonymous namespace)::CSOEconDefaultEquippedDefinitionInstanceClient_descriptor_
 b (anonymous namespace)::CSOEconDefaultEquippedDefinitionInstanceClient_reflection_
 b (anonymous namespace)::CSOEconGameAccountClient_descriptor_
 b (anonymous namespace)::CSOEconGameAccountClient_reflection_
 b (anonymous namespace)::CSOEconItemAttribute_descriptor_
 b (anonymous namespace)::CSOEconItemAttribute_reflection_
 b (anonymous namespace)::CSOEconItemDropRateBonus_descriptor_
 b (anonymous namespace)::CSOEconItemDropRateBonus_reflection_
 b (anonymous namespace)::CSOEconItemEquipped_descriptor_
 b (anonymous namespace)::CSOEconItemEquipped_reflection_
 b (anonymous namespace)::CSOEconItemEventTicket_descriptor_
 b (anonymous namespace)::CSOEconItemEventTicket_reflection_
 b (anonymous namespace)::CSOEconItemLeagueViewPass_descriptor_
 b (anonymous namespace)::CSOEconItemLeagueViewPass_reflection_
 b (anonymous namespace)::CSOEconItemPresetInstance_descriptor_
 b (anonymous namespace)::CSOEconItemPresetInstance_reflection_
 b (anonymous namespace)::CSOEconItem_descriptor_
 b (anonymous namespace)::CSOEconItem_reflection_
 b (anonymous namespace)::CSOItemCriteriaCondition_descriptor_
 b (anonymous namespace)::CSOItemCriteriaCondition_reflection_
 b (anonymous namespace)::CSOItemCriteria_descriptor_
 b (anonymous namespace)::CSOItemCriteria_reflection_
 b (anonymous namespace)::CSOItemRecipe_descriptor_
 b (anonymous namespace)::CSOItemRecipe_reflection_
 b (anonymous namespace)::CSOLobbyInvite_descriptor_
 b (anonymous namespace)::CSOLobbyInvite_reflection_
 b (anonymous namespace)::CSOPartyInvite_descriptor_
 b (anonymous namespace)::CSOPartyInvite_reflection_
 b (anonymous namespace)::CSOSelectedItemPreset_descriptor_
 b (anonymous namespace)::CSOSelectedItemPreset_reflection_
 b (anonymous namespace)::CSVCMsg_BSPDecal_descriptor_
 b (anonymous namespace)::CSVCMsg_BSPDecal_reflection_
 b (anonymous namespace)::CSVCMsg_ClassInfo_class_t_descriptor_
 b (anonymous namespace)::CSVCMsg_ClassInfo_class_t_reflection_
 b (anonymous namespace)::CSVCMsg_ClassInfo_descriptor_
 b (anonymous namespace)::CSVCMsg_ClassInfo_reflection_
 b (anonymous namespace)::CSVCMsg_CmdKeyValues_descriptor_
 b (anonymous namespace)::CSVCMsg_CmdKeyValues_reflection_
 b (anonymous namespace)::CSVCMsg_CreateStringTable_descriptor_
 b (anonymous namespace)::CSVCMsg_CreateStringTable_reflection_
 b (anonymous namespace)::CSVCMsg_CrosshairAngle_descriptor_
 b (anonymous namespace)::CSVCMsg_CrosshairAngle_reflection_
 b (anonymous namespace)::CSVCMsg_EncryptedData_descriptor_
 b (anonymous namespace)::CSVCMsg_EncryptedData_reflection_
 b (anonymous namespace)::CSVCMsg_EntityMsg_descriptor_
 b (anonymous namespace)::CSVCMsg_EntityMsg_reflection_
 b (anonymous namespace)::CSVCMsg_FixAngle_descriptor_
 b (anonymous namespace)::CSVCMsg_FixAngle_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_key_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_key_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_reflection_
 b (anonymous namespace)::CSVCMsg_GameEvent_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEvent_key_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEvent_key_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEvent_reflection_
 b (anonymous namespace)::CSVCMsg_GetCvarValue_descriptor_
 b (anonymous namespace)::CSVCMsg_GetCvarValue_reflection_
 b (anonymous namespace)::CSVCMsg_Menu_descriptor_
 b (anonymous namespace)::CSVCMsg_Menu_reflection_
 b (anonymous namespace)::CSVCMsg_PacketEntities_descriptor_
 b (anonymous namespace)::CSVCMsg_PacketEntities_reflection_
 b (anonymous namespace)::CSVCMsg_PaintmapData_descriptor_
 b (anonymous namespace)::CSVCMsg_PaintmapData_reflection_
 b (anonymous namespace)::CSVCMsg_Prefetch_descriptor_
 b (anonymous namespace)::CSVCMsg_Prefetch_reflection_
 b (anonymous namespace)::CSVCMsg_Print_descriptor_
 b (anonymous namespace)::CSVCMsg_Print_reflection_
 b (anonymous namespace)::CSVCMsg_SendTable_descriptor_
 b (anonymous namespace)::CSVCMsg_SendTable_reflection_
 b (anonymous namespace)::CSVCMsg_SendTable_sendprop_t_descriptor_
 b (anonymous namespace)::CSVCMsg_SendTable_sendprop_t_reflection_
 b (anonymous namespace)::CSVCMsg_ServerInfo_descriptor_
 b (anonymous namespace)::CSVCMsg_ServerInfo_reflection_
 b (anonymous namespace)::CSVCMsg_SetPause_descriptor_
 b (anonymous namespace)::CSVCMsg_SetPause_reflection_
 b (anonymous namespace)::CSVCMsg_SetView_descriptor_
 b (anonymous namespace)::CSVCMsg_SetView_reflection_
 b (anonymous namespace)::CSVCMsg_Sounds_descriptor_
 b (anonymous namespace)::CSVCMsg_Sounds_reflection_
 b (anonymous namespace)::CSVCMsg_Sounds_sounddata_t_descriptor_
 b (anonymous namespace)::CSVCMsg_Sounds_sounddata_t_reflection_
 b (anonymous namespace)::CSVCMsg_SplitScreen_descriptor_
 b (anonymous namespace)::CSVCMsg_SplitScreen_reflection_
 b (anonymous namespace)::CSVCMsg_TempEntities_descriptor_
 b (anonymous namespace)::CSVCMsg_TempEntities_reflection_
 b (anonymous namespace)::CSVCMsg_UpdateStringTable_descriptor_
 b (anonymous namespace)::CSVCMsg_UpdateStringTable_reflection_
 b (anonymous namespace)::CSVCMsg_UserMessage_descriptor_
 b (anonymous namespace)::CSVCMsg_UserMessage_reflection_
 b (anonymous namespace)::CSVCMsg_VoiceData_descriptor_
 b (anonymous namespace)::CSVCMsg_VoiceData_reflection_
 b (anonymous namespace)::CSVCMsg_VoiceInit_descriptor_
 b (anonymous namespace)::CSVCMsg_VoiceInit_reflection_
 b (anonymous namespace)::CWorkshop_GetContributors_Request_descriptor_
 b (anonymous namespace)::CWorkshop_GetContributors_Request_reflection_
 b (anonymous namespace)::CWorkshop_GetContributors_Response_descriptor_
 b (anonymous namespace)::CWorkshop_GetContributors_Response_reflection_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_descriptor_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_reflection_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_descriptor_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_reflection_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_descriptor_
 b (anonymous namespace)::CWorkshop_PopulateItemDescriptions_Request_reflection_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_descriptor_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_reflection_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_descriptor_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_reflection_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_descriptor_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Request_reflection_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Response_descriptor_
 b (anonymous namespace)::CWorkshop_SetItemPaymentRules_Response_reflection_
 b (anonymous namespace)::DetailedSearchStatistic_descriptor_
 b (anonymous namespace)::DetailedSearchStatistic_reflection_
 b (anonymous namespace)::ECsgoGCMsg_descriptor_
 b (anonymous namespace)::ECstrike15UserMessages_descriptor_
 b (anonymous namespace)::EGCBaseClientMsg_descriptor_
 b (anonymous namespace)::EGCBaseMsg_descriptor_
 b (anonymous namespace)::EGCBaseProtoObjectTypes_descriptor_
 b (anonymous namespace)::EGCItemMsg_descriptor_
 b (anonymous namespace)::EGCMsgResponse_descriptor_
 b (anonymous namespace)::EGCSystemMsg_descriptor_
 b (anonymous namespace)::EGCToGCMsg_descriptor_
 b (anonymous namespace)::ESOMsg_descriptor_
 b (anonymous namespace)::ESplitScreenMessageType_descriptor_
 b (anonymous namespace)::EUnlockStyle_descriptor_
 b (anonymous namespace)::GCConnectionStatus_descriptor_
 b (anonymous namespace)::GCProtoBufMsgSrc_descriptor_
 b (anonymous namespace)::GC_BannedWordType_descriptor_
 b (anonymous namespace)::GameServerPing_descriptor_
 b (anonymous namespace)::GameServerPing_reflection_
 b (anonymous namespace)::GlobalStatistics_descriptor_
 b (anonymous namespace)::GlobalStatistics_reflection_
 b (anonymous namespace)::IpAddressMask_descriptor_
 b (anonymous namespace)::IpAddressMask_reflection_
 b (anonymous namespace)::NET_Messages_descriptor_
 b (anonymous namespace)::OperationalStatisticDescription_descriptor_
 b (anonymous namespace)::OperationalStatisticDescription_reflection_
 b (anonymous namespace)::OperationalStatisticElement_descriptor_
 b (anonymous namespace)::OperationalStatisticElement_reflection_
 b (anonymous namespace)::OperationalStatisticsPacket_descriptor_
 b (anonymous namespace)::OperationalStatisticsPacket_reflection_
 b (anonymous namespace)::PlayerCommendationInfo_descriptor_
 b (anonymous namespace)::PlayerCommendationInfo_reflection_
 b (anonymous namespace)::PlayerMedalsInfo_descriptor_
 b (anonymous namespace)::PlayerMedalsInfo_reflection_
 b (anonymous namespace)::PlayerRankingInfo_descriptor_
 b (anonymous namespace)::PlayerRankingInfo_reflection_
 b (anonymous namespace)::SVC_Messages_descriptor_
 b (anonymous namespace)::ServerHltvInfo_descriptor_
 b (anonymous namespace)::ServerHltvInfo_reflection_
 b (anonymous namespace)::TournamentEvent_descriptor_
 b (anonymous namespace)::TournamentEvent_reflection_
 b (anonymous namespace)::TournamentMatchSetup_descriptor_
 b (anonymous namespace)::TournamentMatchSetup_reflection_
 b (anonymous namespace)::TournamentPlayer_descriptor_
 b (anonymous namespace)::TournamentPlayer_reflection_
 b (anonymous namespace)::TournamentTeam_descriptor_
 b (anonymous namespace)::TournamentTeam_reflection_
 b (anonymous namespace)::WatchableMatchInfo_descriptor_
 b (anonymous namespace)::WatchableMatchInfo_reflection_
 b (anonymous namespace)::__g_CreateCPlayerInfoManager_V1IPlayerInfoManager_V1_reg
 b (anonymous namespace)::protobuf_AssignDescriptors_once_
 b ACT_DOOR_LOCKED
 b ACT_DOOR_OPEN
 b AIN_DEF_TARGET
 b AddMultiDamage(CTakeDamageInfo const&, CBaseEntity*)::warningCount
 b Bias(float, float)::lastExponent
 b BotArgumentsFromArgv(CCommand const&, char const**, CSWeaponType*, BotDifficultyType*, int*, bool*)::s_name
 b CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)::playerwarningcount
 b CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)::selfwarningcount
 b CAI_BaseNPC::NPCThink()::timer
 b CAI_BaseNPC::RebalanceThinks()::iPrevTick
 b CAI_BaseNPC::RebalanceThinks()::nRebalanceableThinksInTick
 b CAI_BaseNPC::RebalanceThinks()::nThinksInTick
 b CAI_BaseNPC::RebalanceThinks()::rebalanceCandidates
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::lastWarnActivity
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::pLastWarn
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::timeLastWarn
 b CAI_BaseNPC::TranslateActivity(Activity, Activity*)::sUniqueActivities
 b CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerEyePosition
 b CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerForward
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::endDrawNode
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::flDrawDuration
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::startDrawNode
 b CAI_Path::BaseGoalPosition() const::vecResult
 b CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLine(Vector const&, Vector const&, int, int, int, bool)::overCounter
 b CAI_TacticalServices::FindCoverNode(Vector const&, Vector const&, Vector const&, float, float)::nSearchRandomizer
 b CAI_TacticalServices::FindLosNode(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float)::nSearchRandomizer
 b CBGSDriver
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::absAngles
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::absOrigin
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::qa
 b CBaseAnimating::ScriptGetAttachmentOrigin(int)::absOrigin
 b CBaseAnimating::ScriptGetAttachmentOrigin(int)::qa
 b CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)::dummy
 b CBaseCombatWeapon::GetBulletSpread()::cone
 b CBaseEntity::FireBullets(FireBulletsInfo_t const&)::tracerCount
 b CBaseEntity::IsSimulatingOnAlternateTicks()::sv_alternateticks
 b CBaseEntity::KeyValue(char const*, char const*)::szBuf
 b CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())::think_trace_limit
 b CBaseEntity::PrecacheModelComponents(int)::keyName
 b CBaseEntity::PrecacheModelComponents(int)::keyParticles
 b CBaseEntity::ScriptGetLocalAngularVelocity()::v
 b CBaseEntity::TakeDamage(CTakeDamageInfo const&)::warningCount
 b CBaseEntity::ValidateScriptScope()::__executeCount
 b CBaseFlex::FindSceneFile(char const*)::szExtendedName
 b CBaseFlex::FindSceneFile(char const*)::szExtendedPath
 b CBasePlayer::EyeAngles()::angEyeWorld
 b CBasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)::iSkipStep
 b CBasePlayerAnimState::AnimStateLog(char const*, ...)::hFile
 b CBasePlayerAnimState::CalcSequenceIndex(char const*, ...)::dict
 b CBaseProp::ParsePropData()::keyPropData
 b CBeam::GetAbsEndPos() const::vecAbsPos
 b CCSBot::FindMostDangerousThreat()::placeRank
 b CCSBotManager::GetRandomPositionInZone(CCSBotManager::Zone const*) const::pos
 b CCSGameRules::CCSGameRules()::sv_mmqueue_reservation
 b CCSGameRules::CheckForGiftsLeaderboardUpdate()::sv_mmqueue_reservation
 b CCSGameRules::CheckGameOver()::s_pchTournamentServer
 b CCSGameRules::CreateStandardEntities()::s_pchTournamentServer
 b CCSGameRules::IsQueuedMatchmaking() const::sv_mmqueue_reservation
 b CCSGameRules::PickRandomWeaponForDMBonus()::vecPossibleWeaponLoadoutPositions
 b CCSGameRules::RegisterScriptFunctions()::binding
 b CCSGameStats::UploadRoundStats()::s_bSubmittingStats
 b CCSGameStats::UploadRoundStats()::s_pchTournamentServer
 b CCSMatch::EnableFullAlltalk(bool)::sv_full_alltalk
 b CCSPlayer::ClientCommand(CCommand const&)::sv_mmqueue_reservation
 b CCSPlayer::HandleCommand_JoinTeam(int, bool, int)::sv_mmqueue_reservation
 b CCSPlayer::ImpactTrace(CGameTrace*, int, char*)::violence_hblood
 b CCSPlayer::PostThink()::pAttr_MusicID
 b CCSPlayer::UpdateAppearanceIndex()::pRandomAppearanceDef
 b CCSPlayerAnimState::CalcSequenceIndex(char const*, ...)::dict
 b CCSWeaponInfo::CannotShootUnderwater(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::CannotShootUnderwater(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::DoesUnzoomAfterShot(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::DoesUnzoomAfterShot(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetArmorRatio(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetArmorRatio(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetBucketSlot(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetBucketSlot(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetBullets(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetBullets(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetCycleTime(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetCycleTime(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetDamage(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetDamage(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetFlinchVelocityModifierLarge(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetFlinchVelocityModifierLarge(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetFlinchVelocityModifierSmall(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetFlinchVelocityModifierSmall(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetIdleInterval(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetIdleInterval(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyCrouch(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyCrouch(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyFire(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyFire(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyJump(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyJump(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyLadder(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyLadder(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyLand(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyLand(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyMove(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyMove(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyReload(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyReload(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetInaccuracyStand(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetInaccuracyStand(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetKillAward(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetKillAward(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetMaxSpeed(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetMaxSpeed(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetPenetration(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetPenetration(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetPrimaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetPrimaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRange(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRange(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRangeModifier(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRangeModifier(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoilAngle(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoilAngle(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoilAngleVariance(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoilAngleVariance(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoilMagnitude(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoilMagnitude(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoilMagnitudeVariance(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoilMagnitudeVariance(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoilSeed(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoilSeed(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoveryTimeCrouch(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoveryTimeCrouch(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetRecoveryTimeStand(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetRecoveryTimeStand(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetSecondaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetSecondaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetSpread(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetSpread(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetTimeToIdleAfterFire(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetTimeToIdleAfterFire(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetTracerFrequency(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetTracerFrequency(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetWeaponPrice(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetWeaponPrice(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomFOV1(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomFOV1(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomFOV2(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomFOV2(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomLevels(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomLevels(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomTime0(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomTime0(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomTime1(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomTime1(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::GetZoomTime2(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::GetZoomTime2(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::HasBulletAltfire(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::HasBulletAltfire(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::HasBurstMode(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::HasBurstMode(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::HasPostponeFire(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::HasPostponeFire(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::HasSilencer(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::HasSilencer(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::HasTraditionalScope(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::HasTraditionalScope(CEconItemView const*, int, float) const::hAttribAlt
 b CCSWeaponInfo::IsFullAuto(CEconItemView const*, int, float) const::hAttrib
 b CCSWeaponInfo::IsFullAuto(CEconItemView const*, int, float) const::hAttribAlt
 b CC_CollisionTest(CCommand const&)::first
 b CC_CollisionTest(CCommand const&)::targets
 b CC_KDTreeTest(CCommand const&)::bFirst
 b CC_KDTreeTest(CCommand const&)::vecTargets
 b CC_Player_SetModel(CCommand const&)::szName
 b CChoreoEvent::GetDescription()::description
 b CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b CCollisionProperty::CollisionToWorldTransform() const::s_nIndex
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
 b CEconItem::GetCustomDesc() const::pAttrDef_CustomDesc
 b CEconItem::GetCustomName() const::pAttrDef_CustomName
 b CEconItem::SetCustomDesc(char const*)::pAttrDef_CustomDesc
 b CEconItem::SetCustomName(char const*)::pAttrDef_CustomName
 b CEconItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)::pAttrDef_PaintRGB
 b CEconItemDefinition::GetBuyMenuDisplayModel() const::pAttribString
 b CEconItemDefinition::GetIconDisplayModel() const::pAttribString
 b CEconItemDefinition::GetMagazineModel() const::pAttribString
 b CEconItemDefinition::GetPedestalDisplayModel() const::pAttribString
 b CEconItemDefinition::GetScopeLensMaskModel() const::pAttribString
 b CEconItemDefinition::GetUidModel() const::pAttribString
 b CEconItemView::GetCustomPaintKitIndex() const::pAttr_PaintKit
 b CEconItemView::IsStyleUnlocked(int) const::pAttr_UnlockedStyles
 b CEconSharedToolSupport::CanCollect(IEconItemInterface const*, IEconItemInterface const*, unsigned int*)::pAttrDef_CollectionBits
 b CEnvInstructorHint::InputEndHint(inputdata_t&)::s_InstructorServerHintEventStop
 b CEnvInstructorHint::InputShowHint(inputdata_t&)::s_InstructorServerHintEventCreate
 b CEventLog::FormatPlayer(CBaseEntity*) const::s_buffer
 b CEventLog::FormatPlayer(CBaseEntity*) const::s_index
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)::_counter
 b CGib::~CGib()::__executeCount
 b CHostage::GetCentroid() const::centroid
 b CHostage::GetEyes() const::eyes
 b CHostage::GetFeet() const::feet
 b CHostage::Spawn()::hostageModelIndex
 b CIronSightController::Init(CWeaponCSBase*)::pAttrDef_IronSightEyePos
 b CIronSightController::Init(CWeaponCSBase*)::pAttrDef_IronSightPivotAngle
 b CIronSightController::Init(CWeaponCSBase*)::pAttrbIronSightCapable
 b CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightFOV
 b CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightLooseness
 b CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPivotForward
 b CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPullUpSpeed
 b CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPutDownSpeed
 b CItemSelectionCriteria::BEvaluate(CEconItem const*, CEconItemSchema const&) const::pAttr_KillEaterScoreType
 b CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b CNavArea::ComputeVisibilityDelta(CNavArea const*) const::delta
 b CNavArea::Draw() const::blink
 b CNavArea::Draw() const::blinkOn
 b CNavMesh::DrawEditMode()::host_thread_mode
 b CNavMesh::DrawEditMode()::sb_perf_collect
 b CNavMesh::GetFilename() const::filename
 b CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const::searchMarker
 b CNavMesh::UpdateGeneration(float)::host_thread_mode
 b CNavMesh::UpdateGeneration(float)::s_playerSettleTimer
 b CNavMesh::UpdateGeneration(float)::s_unlitAreas
 b CNavMesh::UpdateGeneration(float)::s_unlitSeedAreas
 b CNavNode::GetNode(Vector const&)::lookup
 b CONSOLE_ECHO(char*, ...)::szStr
 b CParticleSystemDefinition_UnpackInit::s_pUnpack
 b CPhysicsProp::GetPropDataAngles(char const*, QAngle&)::keyPhysgunInteractions
 b CPlayerMove::RunCommand(CBasePlayer*, CUserCmd*, IMoveHelper*)::s_dblLastWarningTime
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAIWalkable
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAllowStatic
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBase
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBlockLOS
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableCount
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableModel
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableSkin
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDamageTable
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgBullets
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgClub
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgExplosive
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveDamage
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveRadius
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyHealth
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyMultiplayerBreak
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyPhysicsMode
 b CSGameState::GetRandomFreeHostagePosition() const::freePos
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMax
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMaxUpdateRate
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMin
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMinUpdateRate
 b CServerGameDLL::GetExtendedServerInfoForNewClient()::s_pExtendedServerInfo
 b CServerGameDLL::GetExtendedServerInfoForNewClient()::s_szExtendedHashKey
 b CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)::map_wants_save_disable
 b CServerGameDLL::UpdateGCInformation()::s_chMapName
 b CServerGameDLL::UpdateGCInformation()::s_nGcSessionInstanceIdx
 b CServerGameDLL::UpdateGCInformation()::s_uiLastTime
 b CSkyboxSwapper::InputTrigger(inputdata_t&)::skyname
 b CStatueProp::CStatueProp()::vcollide_wireframe
 b CSteamID::Render() const::nBuf
 b CSteamID::Render() const::rgchBuf
 b CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)::__executeCount
 b CStudioHdr::GroupStudioHdr(int)::__executeCount
 b CTestTraceline::Spin()::traceline_spin
 b CTextStat::GetTextStatsList()::theList
 b CUtlSymbol::Initialize()::symbolsInitialized
 b CWeaponCSBase::GetBulletSpread()::cone
 b CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b ClearAllNavAttributes
 b ConVarRef::Init(char const*, bool)::bFirst
 b CreateStuckTable()::firsttime
 b DEBUG_THINK_TRACE_COUNTER_ALLOWED()::bIsPublic
 b DescribeAxis(int)::sz
 b DoUniqueString(char const*)::szBuf
 b EconEntity_OnOwnerKillEaterEvent(CEconEntity*, CCSPlayer*, CCSPlayer*, kill_eater_event_t, int)::pAttr_KillEater
 b EntityFactoryDictionary()::s_EntityFactory
 b EventSymbols
 b GCSDK::CJob::GetPauseReasonDescription() const::srgchPauseReason
 b GCSDK::GMapJobTypesByMsg()::s_MapJobTypesByMsg
 b GCSDK::GMapJobTypesByName()::s_MapJobTypesByName
 b GCSDK::GProtoBufMsgMemoryPoolMgr()::s_ProtoBufMsgMemoryPoolMgr
 b GCSDK::GSOIDNameMap()::s_SOIDNameMap
 b GCSDK::GetPchTempTextBuffer()::s_irgchBuffer
 b GCSDK::GetPchTempTextBuffer()::s_rgtlsBuffers
 b GetAmmoDef()::bInitted
 b GetBspFilename(char const*)::bspFilename
 b GetDecoratedSkinName(char const*, char const*)::buf
 b GetPanelAnimationDictionary()::dictionary
 b GetPanelMessageMapDictionary()::dictionary
 b GetPhysObjSaveRestoreOps(PhysInterfaceId_t)::inited
 b GetPropertyConverters()::g_AnimationPropertyConverters
 b GetSceneManager()::s_SceneManager
 b GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)::msgCount
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::pAttrStickerSlotID
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::pAttrStickerSlotRotation
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::pAttrStickerSlotScale
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::pAttrStickerSlotWear
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::s_DummyAttr
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::s_bStickerAttrsSetup
 b GetStickerAttributeDefHandle(int, EStickerAttributeType)::s_bStickerAttrsValid
 b Helper_GetNullWeaponInfo()::gNullWeaponInfo
 b Host_Say(edict_t*, CCommand const&, bool)::tv_encryptdata_key
 b Host_Say(edict_t*, CCommand const&, bool)::tv_encryptdata_key_pub
 b IEconItemInterface::GetCustomPaintKitIndex() const::pAttrDef_PaintKit
 b IEconItemInterface::GetCustomPaintKitSeed() const::pAttrDef_PaintKitSeed
 b IEconItemInterface::GetCustomPaintKitWear(float) const::pAttrDef_PaintKitWear
 b IEconItemInterface::GetExpirationDate() const::pAttrib_ExpirationDate
 b IEconItemInterface::GetTradableAfterDateTime() const::pAttrib
 b IEconItemInterface::GetUseAfterDateTime() const::pAttrib
 b IEconItemInterface::IsCommodity() const::pAttrib_IsCommodity
 b IEconItemInterface::IsHiddenFromDropList() const::pAttrib_HideFromDropList
 b IEconItemInterface::IsPotentiallyTradable() const::pAttrDef_AlwaysTradableAndUsableInCrafting
 b IEconItemInterface::IsPotentiallyTradable() const::pAttrib_CannotTrade
 b IEconItemInterface::IsUsableInCrafting() const::pAttrDef_AlwaysTradableAndUsableInCrafting
 b IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const::pAttrDef_UnlimitedQuantity
 b InitCBaseAnimatingScriptDesc()::bInitialized
 b InitCBaseEntityScriptDesc()::bInitialized
 b InitCBaseFlexScriptDesc()::bInitialized
 b InitCBaseMultiplayerPlayerScriptDesc()::bInitialized
 b InitCBasePlayerScriptDesc()::bInitialized
 b InitCEnvEntityMakerScriptDesc()::bInitialized
 b InitCPlayerVoiceListenerScriptDesc()::bInitialized
 b InitCSceneEntityScriptDesc()::bInitialized
 b InitCScriptEntityIteratorScriptDesc()::bInitialized
 b InitCScriptKeyValuesScriptDesc()::bInitialized
 b InitCTriggerCameraScriptDesc()::bInitialized
 b Internal_GetAttributeTypeUniqueIdentifierNextValue()::s_unUniqueCounter
 b ItemSystem()::pSystem
 b KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)::buf
 b ListRecentNPCSpeechCmd
 b MissingSceneWarning(char const*)::missing
 b NavClearAttribute
 b NavMarkAttribute
 b ParseTokenFromString(char const**)::buf
 b ParticleChildrenInfo_t_UnpackInit::s_pUnpack
 b PhysFrame(float)::lastObjectCount
 b ResponseRules::CResponseSystem::ParseOneCriterion(char const*)::dummy
 b ResponseRules::CResponseSystem::ParseRule()::instancedCriteria
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kCONCEPT
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kSUBJECT
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kWHO
 b SelectWeightedSequence(CStudioHdr*, int, int)::_counter
 b UNSPECIFIED_LOGGING_COLOR
 b UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::lastOrg
 b UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::pvs
 b UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMaxCmdRate
 b UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMaxUpdateRate
 b UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMinCmdRate
 b UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMinUpdateRate
 b UTIL_GetPlayerConnectionInfo(int, int&, int&)::pSvClientCmdrateDifference
 b UTIL_VarArgs(char const*, ...)::string
 b VScriptServerInit()::binding
 b WaveTrace(char const*, char const*)::s_WaveTrace
 b _ZGVZ17VScriptServerInitvE7binding__10_
 b _ZGVZ17VScriptServerInitvE7binding__11_
 b _ZGVZ17VScriptServerInitvE7binding__12_
 b _ZGVZ17VScriptServerInitvE7binding__13_
 b _ZGVZ17VScriptServerInitvE7binding__14_
 b _ZGVZ17VScriptServerInitvE7binding__15_
 b _ZGVZ17VScriptServerInitvE7binding__16_
 b _ZGVZ17VScriptServerInitvE7binding__17_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZGVZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZL8ice_sbox.0
 b _ZL8ice_sbox.1
 b _ZL8ice_sbox.2
 b _ZL8ice_sbox.3
 b _ZZ17VScriptServerInitvE7binding__10_
 b _ZZ17VScriptServerInitvE7binding__11_
 b _ZZ17VScriptServerInitvE7binding__12_
 b _ZZ17VScriptServerInitvE7binding__13_
 b _ZZ17VScriptServerInitvE7binding__14_
 b _ZZ17VScriptServerInitvE7binding__15_
 b _ZZ17VScriptServerInitvE7binding__16_
 b _ZZ17VScriptServerInitvE7binding__17_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZZN12CCSGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZZN6google8protobuf55protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eprotoEvE12already_here.b
 b __g_CServerDLLSharedAppSystems_singleton
 b __g_CServerGameEnts_singleton
 b __g_CreateCEffectsServerIEffects_reg
 b __g_CreateCGameMovementIGameMovement_reg
 b __g_CreateCHLTVDirectorIHLTVDirector_reg
 b __g_CreateCPlayerInfoManagerIPlayerInfoManager_reg
 b __g_CreateCPluginBotManagerIBotManager_reg
 b __g_CreateCPluginHelpersCheckIPluginHelpersCheck_reg
 b __g_CreateCServerDLLSharedAppSystemsIServerDLLSharedAppSystems_reg
 b __g_CreateCServerGameClientsIServerGameClients_reg
 b __g_CreateCServerGameDLLIServerGameDLL_reg
 b __g_CreateCServerGameEntsIServerGameEnts_reg
 b __g_CreateCServerGameTagsIServerGameTags_reg
 b __g_CreateCServerToolsIServerTools_reg
 b __g_CreateGameTypesIGameTypes_reg
 b __g_GameRulesRegister_CCSGameRules
 b __g_GameRulesRegister_CMultiplayRules
 b __g_GameRulesRegister_CTeamplayRules
 b __proxy_SendProxy_ClientSideAnimation
 b __proxy_SendProxy_FlexWeights
 b __proxy_SendProxy_OnlyToTeam
 b __proxy_SendProxy_SendActiveLocalKnifeDataTable
 b __proxy_SendProxy_SendActiveLocalKnifeGGDataTable
 b __proxy_SendProxy_SendActiveLocalWeaponDataTable
 b __proxy_SendProxy_SendBaseCombatCharacterLocalDataTable
 b __proxy_SendProxy_SendBaseCombatCharacterNonLocalDataTable
 b __proxy_SendProxy_SendLocalDataTable
 b __proxy_SendProxy_SendLocalWeaponDataTable
 b __proxy_SendProxy_SendNonLocalDataTable
 b __proxy_SendProxy_SendNonLocalWeaponDataTable
 b __proxy_SendProxy_TestProxyToggle
 b _firesmoke
 b _plasma
 b ai_ally_speech_manager
 b ai_battle_line
 b ai_changehintgroup
 b ai_changetarget
 b ai_clear_bad_links_command
 b ai_debug_node_connect_command
 b ai_disable
 b ai_dump_hints_command
 b ai_goal_assault
 b ai_goal_fightfromcover
 b ai_goal_follow
 b ai_goal_lead
 b ai_goal_lead_weapon
 b ai_goal_standoff
 b ai_hint
 b ai_hull
 b ai_network
 b ai_next_hull
 b ai_nodes
 b ai_resume
 b ai_script_conditions
 b ai_set_move_height_epsilon_command
 b ai_setenabled_command
 b ai_show_connect
 b ai_show_connect_crawl
 b ai_show_connect_fly
 b ai_show_connect_jump
 b ai_show_graph_connect
 b ai_show_grid
 b ai_show_hints
 b ai_show_hull
 b ai_show_node_command
 b ai_show_visibility
 b ai_sound
 b ai_speechfilter
 b ai_step
 b ai_test_los_command
 b ainet_generate_report_command
 b ainet_generate_report_only_command
 b air_density
 b aiscripted_schedule
 b aitesthull
 b ambient_generic
 b ammoDef
 b ammo_338mag
 b ammo_357sig
 b ammo_357sig_np_reserve
 b ammo_357sig_p250
 b ammo_357sig_small
 b ammo_45acp
 b ammo_50ae
 b ammo_556mm
 b ammo_556mm_box
 b ammo_556mm_small
 b ammo_57mm
 b ammo_762mm
 b ammo_9mm
 b ammo_buckshot
 b anim_3wayblend
 b announceTimer
 b assault_assaultpoint
 b assault_rallypoint
 b baseprojectile
 b beam
 b beam_spotlight
 b blockedID
 b blockedIDCount
 b bot_add_command
 b bot_add_ct_command
 b bot_add_t_command
 b bot_all_weapons_command
 b bot_control_next_all_teams_command
 b bot_goto_mark_command
 b bot_goto_selected_command
 b bot_kick_command
 b bot_kill_command
 b bot_knives_only_command
 b bot_pistols_only_command
 b bot_place_command
 b bot_snipers_only_command
 b buddha_command
 b bugswap
 b buyrandom
 b callvote_command
 b cast_hull_command
 b cast_ray_command
 b cc_norepeat
 b ch_createairboat
 b ch_createjeep
 b chicken
 b cl_csm_server_status
 b cl_simdbones
 b clear_debug_overlays_command
 b collision_test
 b color_correction
 b color_correction_volume
 b commentary_auto
 b commentary_cvarsnotchanging
 b commentary_finishnode
 b computer_name_command
 b cosTable
 b create_flashlight
 b creditsdone
 b cs_bot
 b cs_gamerules
 b cs_make_vip_command
 b cs_player_manager
 b cs_ragdoll
 b cs_team_manager
 b cycler
 b cycler_actor
 b cycler_blender
 b cycler_flex
 b cycler_weapon
 b cycler_wreckage
 b dbghist_addline
 b dbghist_dump
 b debug_overlay_fullposition
 b decoy_projectile
 b defaultresponsesytem
 b dispcoll_drawplane
 b dm_reset_spawns_command
 b drawcross
 b drawline
 b ds_get_newest_subscribed_files_command
 b dump_entity_sizes_command
 b dump_globals_command
 b dumpentityfactories
 b dumpeventqueue
 b dumpgamestringtable
 b dynamic_prop
 b emptyMapping
 b ent_absbox
 b ent_attachments
 b ent_autoaim
 b ent_bbox
 b ent_cancelpendingentfires
 b ent_create
 b ent_dump
 b ent_fire
 b ent_info
 b ent_keyvalue
 b ent_messages
 b ent_name
 b ent_orient
 b ent_pause
 b ent_pivot
 b ent_rbox
 b ent_remove
 b ent_remove_all
 b ent_rotate
 b ent_script_dump
 b ent_setang_command
 b ent_setname
 b ent_setpos_command
 b ent_show_response_criteria
 b ent_step
 b ent_teleport
 b ent_text
 b ent_viewoffset
 b entity_blocker
 b entityflame
 b env_ambient_light
 b env_beam
 b env_beverage
 b env_blood
 b env_bubbles
 b env_cascade_light
 b env_credits
 b env_debughistory
 b env_detail_controller
 b env_dof_controller
 b env_dustpuff
 b env_dusttrail
 b env_effectscript
 b env_embers
 b env_entity_dissolver
 b env_entity_freezing
 b env_entity_igniter
 b env_entity_maker
 b env_explosion
 b env_fade
 b env_fire
 b env_fire_trail
 b env_firesensor
 b env_firesource
 b env_fog_controller
 b env_funnel
 b env_global
 b env_glow
 b env_gunfire
 b env_hudhint
 b env_instructor_hint
 b env_laser
 b env_lightglow
 b env_message
 b env_microphone
 b env_movieexplosion
 b env_muzzleflash
 b env_outtro_stats
 b env_particle_performance_monitor
 b env_particle_trail
 b env_particlefire
 b env_particlelight
 b env_particlescript
 b env_particlesmokegrenade
 b env_physexplosion
 b env_physimpact
 b env_physwire
 b env_player_surface_trigger
 b env_projectedtexture
 b env_quadraticbeam
 b env_ragdoll_boogie
 b env_rockettrail
 b env_rotorshooter
 b env_screeneffect
 b env_screenoverlay
 b env_shake
 b env_shooter
 b env_smokestack
 b env_smoketrail
 b env_soundscape
 b env_soundscape_proxy
 b env_soundscape_triggerable
 b env_spark
 b env_splash
 b env_sporeexplosion
 b env_sporetrail
 b env_sprite
 b env_sprite_clientside
 b env_sprite_oriented
 b env_spritetrail
 b env_steam
 b env_steamjet
 b env_sun
 b env_texturetoggle
 b env_tilt
 b env_tonemap_controller
 b env_tracer
 b env_viewpunch
 b env_wind
 b env_zoom
 b event_queue_saveload_proxy
 b explode_command
 b explodevector_command
 b fadein
 b fadeout
 b filter_activator_class
 b filter_activator_context
 b filter_activator_mass_greater
 b filter_activator_model
 b filter_activator_name
 b filter_activator_team
 b filter_base
 b filter_damage_type
 b filter_enemy
 b filter_multi
 b find_ent
 b find_ent_index
 b fire_cracker_blast
 b firetarget
 b fish
 b flashbang_projectile
 b fog_volume
 b foundry_engine_get_mouse_control_command
 b foundry_engine_release_mouse_control_command
 b foundry_select_entity_command
 b foundry_sync_hammer_view_command
 b foundry_update_entity_command
 b funCBaseFlex
 b func_areaportal
 b func_areaportalwindow
 b func_block_dm_spawns
 b func_bomb_target
 b func_breakable
 b func_breakable_surf
 b func_brush
 b func_button
 b func_buyzone
 b func_clip_vphysics
 b func_conveyor
 b func_detail_blocker
 b func_door
 b func_door_rotating
 b func_dustcloud
 b func_dustmotes
 b func_fish_pool
 b func_footstep_control
 b func_guntarget
 b func_hostage_rescue
 b func_illusionary
 b func_instance_io_proxy
 b func_ladderendpoint
 b func_lod
 b func_monitor
 b func_movelinear
 b func_nav_avoidance_obstacle
 b func_nav_blocker
 b func_no_defuse
 b func_occluder
 b func_physbox
 b func_physbox_multiplayer
 b func_plat
 b func_platrot
 b func_precipitation
 b func_precipitation_blocker
 b func_proprrespawnzone
 b func_pushable
 b func_reflective_glass
 b func_rot_button
 b func_rotating
 b func_smokevolume
 b func_tanktrain
 b func_trackautochange
 b func_trackchange
 b func_tracktrain
 b func_train
 b func_traincontrols
 b func_useableladder
 b func_vehicleclip
 b func_wall
 b func_wall_toggle
 b func_water
 b func_water_analog
 b func_weight_button
 b gGlobalState
 b g_AISystemHook
 b g_AimManager
 b g_AnchorList
 b g_AnimatingImagePanel_Helper
 b g_BreakModelsPrecached
 b g_BreakPropEvent
 b g_BreakSetIncludingColons
 b g_BuildModeDialogMgr
 b g_Button_Helper
 b g_CAI_BaseNPC_ClassReg
 b g_CAK47_ClassReg
 b g_CBaseAnimatingOverlay_ClassReg
 b g_CBaseAnimating_ClassReg
 b g_CBaseAttributableItem_ClassReg
 b g_CBaseButton_ClassReg
 b g_CBaseCSGrenadeProjectile_ClassReg
 b g_CBaseCSGrenade_ClassReg
 b g_CBaseCombatCharacter_ClassReg
 b g_CBaseCombatWeapon_ClassReg
 b g_CBaseDoor_ClassReg
 b g_CBaseEntity_ClassReg
 b g_CBaseFlex_ClassReg
 b g_CBaseGrenade_ClassReg
 b g_CBaseParticleEntity_ClassReg
 b g_CBasePlayer_ClassReg
 b g_CBasePropDoor_ClassReg
 b g_CBaseTeamObjectiveResource_ClassReg
 b g_CBaseTempEntity_ClassReg
 b g_CBaseToggle_ClassReg
 b g_CBaseTrigger_ClassReg
 b g_CBaseVPhysicsTrigger_ClassReg
 b g_CBaseViewModel_ClassReg
 b g_CBeamSpotlight_ClassReg
 b g_CBeam_ClassReg
 b g_CBitmapImagePanel_Helper
 b g_CBoneFollower_ClassReg
 b g_CBreakableProp_ClassReg
 b g_CBreakableSurface_ClassReg
 b g_CC4_ClassReg
 b g_CCSGameRulesProxy_ClassReg
 b g_CCSPlayerResource_ClassReg
 b g_CCSPlayer_ClassReg
 b g_CCSRagdoll_ClassReg
 b g_CCSTeam_ClassReg
 b g_CCascadeLight_ClassReg
 b g_CChicken_ClassReg
 b g_CColorCorrectionVolume_ClassReg
 b g_CColorCorrection_ClassReg
 b g_CDEagle_ClassReg
 b g_CDecoyGrenade_ClassReg
 b g_CDecoyProjectile_ClassReg
 b g_CDynamicLight_ClassReg
 b g_CDynamicProp_ClassReg
 b g_CEconEntity_ClassReg
 b g_CEmbers_ClassReg
 b g_CEntityDissolve_ClassReg
 b g_CEntityFlame_ClassReg
 b g_CEntityFreezing_ClassReg
 b g_CEntityParticleTrail_ClassReg
 b g_CEnvAmbientLight_ClassReg
 b g_CEnvDOFController_ClassReg
 b g_CEnvDetailController_ClassReg
 b g_CEnvParticleScript_ClassReg
 b g_CEnvProjectedTexture_ClassReg
 b g_CEnvQuadraticBeam_ClassReg
 b g_CEnvScreenEffect_ClassReg
 b g_CEnvScreenOverlay_ClassReg
 b g_CEnvTonemapController_ClassReg
 b g_CEnvWind_ClassReg
 b g_CFireCrackerBlast_ClassReg
 b g_CFireSmoke_ClassReg
 b g_CFireTrail_ClassReg
 b g_CFish_ClassReg
 b g_CFlashbang_ClassReg
 b g_CFogController_ClassReg
 b g_CFootstepControl_ClassReg
 b g_CFuncAreaPortalWindow_ClassReg
 b g_CFuncBrush_ClassReg
 b g_CFuncConveyor_ClassReg
 b g_CFuncLadder_ClassReg
 b g_CFuncMonitor_ClassReg
 b g_CFuncMoveLinear_ClassReg
 b g_CFuncOccluder_ClassReg
 b g_CFuncReflectiveGlass_ClassReg
 b g_CFuncRotating_ClassReg
 b g_CFuncSmokeVolume_ClassReg
 b g_CFuncTrackTrain_ClassReg
 b g_CFunc_Dust_ClassReg
 b g_CFunc_LOD_ClassReg
 b g_CGameRulesProxy_ClassReg
 b g_CHEGrenade_ClassReg
 b g_CHandleTest_ClassReg
 b g_CHostageCarriableProp_ClassReg
 b g_CHostage_ClassReg
 b g_CIncendiaryGrenade_ClassReg
 b g_CInferno_ClassReg
 b g_CInfoLadderDismount_ClassReg
 b g_CInfoOverlayAccessor_ClassReg
 b g_CKnifeGG_ClassReg
 b g_CKnife_ClassReg
 b g_CLightGlow_ClassReg
 b g_CMaterialModifyControl_ClassReg
 b g_CMolotovGrenade_ClassReg
 b g_CMolotovProjectile_ClassReg
 b g_CMovieDisplay_ClassReg
 b g_CParticleFire_ClassReg
 b g_CParticlePerformanceMonitor_ClassReg
 b g_CParticleSystem_ClassReg
 b g_CPhysBoxMultiplayer_ClassReg
 b g_CPhysBox_ClassReg
 b g_CPhysMagnet_ClassReg
 b g_CPhysicsPropMultiplayer_ClassReg
 b g_CPhysicsProp_ClassReg
 b g_CPlantedC4_ClassReg
 b g_CPlasma_ClassReg
 b g_CPlayerResource_ClassReg
 b g_CPointCamera_ClassReg
 b g_CPointCommentaryNode_ClassReg
 b g_CPoseController_ClassReg
 b g_CPostProcessController_ClassReg
 b g_CPrecipitationBlocker_ClassReg
 b g_CPrecipitation_ClassReg
 b g_CPredictedViewModel_ClassReg
 b g_CPropDoorRotating_ClassReg
 b g_CPropJeep_ClassReg
 b g_CPropVehicleDriveable_ClassReg
 b g_CProp_Hallucination_ClassReg
 b g_CRagdollManager_ClassReg
 b g_CRagdollPropAttached_ClassReg
 b g_CRagdollProp_ClassReg
 b g_CRopeKeyframe_ClassReg
 b g_CSCAR17_ClassReg
 b g_CSViewVectors
 b g_CSceneEntity_ClassReg
 b g_CShadowControl_ClassReg
 b g_CSlideshowDisplay_ClassReg
 b g_CSmokeGrenadeProjectile_ClassReg
 b g_CSmokeGrenade_ClassReg
 b g_CSmokeStack_ClassReg
 b g_CSpatialEntity_ClassReg
 b g_CSpotlightEnd_ClassReg
 b g_CSpriteOriented_ClassReg
 b g_CSpriteTrail_ClassReg
 b g_CSprite_ClassReg
 b g_CStatueProp_ClassReg
 b g_CSteamJet_ClassReg
 b g_CSun_ClassReg
 b g_CSunlightShadowControl_ClassReg
 b g_CTEArmorRicochet_ClassReg
 b g_CTEBSPDecal_ClassReg
 b g_CTEBaseBeam_ClassReg
 b g_CTEBeamEntPoint_ClassReg
 b g_CTEBeamEnts_ClassReg
 b g_CTEBeamFollow_ClassReg
 b g_CTEBeamLaser_ClassReg
 b g_CTEBeamPoints_ClassReg
 b g_CTEBeamRingPoint_ClassReg
 b g_CTEBeamRing_ClassReg
 b g_CTEBeamSpline_ClassReg
 b g_CTEBloodSprite_ClassReg
 b g_CTEBloodStream_ClassReg
 b g_CTEBreakModel_ClassReg
 b g_CTEBubbleTrail_ClassReg
 b g_CTEBubbles_ClassReg
 b g_CTEClientProjectile_ClassReg
 b g_CTEDecal_ClassReg
 b g_CTEDust_ClassReg
 b g_CTEDynamicLight_ClassReg
 b g_CTEEffectDispatch_ClassReg
 b g_CTEEnergySplash_ClassReg
 b g_CTEExplosion_ClassReg
 b g_CTEFireBullets_ClassReg
 b g_CTEFizz_ClassReg
 b g_CTEFootprintDecal_ClassReg
 b g_CTEFoundryHelpers_ClassReg
 b g_CTEGaussExplosion_ClassReg
 b g_CTEGlowSprite_ClassReg
 b g_CTEImpact_ClassReg
 b g_CTEKillPlayerAttachments_ClassReg
 b g_CTELargeFunnel_ClassReg
 b g_CTEMetalSparks_ClassReg
 b g_CTEMuzzleFlash_ClassReg
 b g_CTEParticleSystem_ClassReg
 b g_CTEPhysicsProp_ClassReg
 b g_CTEPlantBomb_ClassReg
 b g_CTEPlayerAnimEvent_ClassReg
 b g_CTEPlayerDecal_ClassReg
 b g_CTEProjectedDecal_ClassReg
 b g_CTERadioIcon_ClassReg
 b g_CTEShatterSurface_ClassReg
 b g_CTEShowLine_ClassReg
 b g_CTESmoke_ClassReg
 b g_CTESparks_ClassReg
 b g_CTESpriteSpray_ClassReg
 b g_CTESprite_ClassReg
 b g_CTEWorldDecal_ClassReg
 b g_CTeam_ClassReg
 b g_CTeamplayRoundBasedRulesProxy_ClassReg
 b g_CTesla_ClassReg
 b g_CTestTraceline_ClassReg
 b g_CTest_ProxyToggle_Networkable_ClassReg
 b g_CTreeViewListControl_Helper
 b g_CTriggerPlayerMovement_ClassReg
 b g_CVGuiScreen_ClassReg
 b g_CVoteController_ClassReg
 b g_CWaterBullet_ClassReg
 b g_CWaterLODControl_ClassReg
 b g_CWeaponAWP_ClassReg
 b g_CWeaponAug_ClassReg
 b g_CWeaponBizon_ClassReg
 b g_CWeaponCSBaseGun_ClassReg
 b g_CWeaponCSBase_ClassReg
 b g_CWeaponCycler_ClassReg
 b g_CWeaponElite_ClassReg
 b g_CWeaponFamas_ClassReg
 b g_CWeaponFiveSeven_ClassReg
 b g_CWeaponG3SG1_ClassReg
 b g_CWeaponGalilAR_ClassReg
 b g_CWeaponGalil_ClassReg
 b g_CWeaponGlock_ClassReg
 b g_CWeaponHKP2000_ClassReg
 b g_CWeaponM249_ClassReg
 b g_CWeaponM3_ClassReg
 b g_CWeaponM4A1_ClassReg
 b g_CWeaponMAC10_ClassReg
 b g_CWeaponMP5Navy_ClassReg
 b g_CWeaponMP7_ClassReg
 b g_CWeaponMP9_ClassReg
 b g_CWeaponMag7_ClassReg
 b g_CWeaponNOVA_ClassReg
 b g_CWeaponNegev_ClassReg
 b g_CWeaponP228_ClassReg
 b g_CWeaponP250_ClassReg
 b g_CWeaponP90_ClassReg
 b g_CWeaponSCAR20_ClassReg
 b g_CWeaponSG550_ClassReg
 b g_CWeaponSG552_ClassReg
 b g_CWeaponSG556_ClassReg
 b g_CWeaponSSG08_ClassReg
 b g_CWeaponSawedoff_ClassReg
 b g_CWeaponScout_ClassReg
 b g_CWeaponTMP_ClassReg
 b g_CWeaponTaser_ClassReg
 b g_CWeaponTec9_ClassReg
 b g_CWeaponUMP45_ClassReg
 b g_CWeaponUSP_ClassReg
 b g_CWeaponXM1014_ClassReg
 b g_CWorld_ClassReg
 b g_CaptionRepeats
 b g_CheckButton_Helper
 b g_CircularProgressBar_Helper
 b g_CleanupDefaultRelationships
 b g_CleanupSymbolTable
 b g_ComboBox_Helper
 b g_ConceptInfoMap
 b g_ContinuousProgressBar_Helper
 b g_Controller
 b g_CvarToggleCheckButton_Helper
 b g_DataObjectAccessSystem
 b g_DecalSystem
 b g_DefaultViewVectors
 b g_DeleteList
 b g_Divider_Helper
 b g_DragDropCapture
 b g_DustTrail_ClassReg
 b g_EdictTouchLinks
 b g_EditablePanel_Helper
 b g_EntityGroundLinks
 b g_EntityListSystem
 b g_ExpandButton_Helper
 b g_FoundryEntitySpawnRecords
 b g_GameMovement
 b g_GameStringPool
 b g_GameUI
 b g_GlobalSymbolDataOps
 b g_GraphPanel_Helper
 b g_HighestActivity
 b g_HighestEvent
 b g_ImagePanel_Helper
 b g_InRestore
 b g_KBMgr
 b g_KVMutex
 b g_KeyValues2ErrorStack
 b g_Label_Helper
 b g_LagCompensationManager
 b g_ListPanel_Helper
 b g_ListViewPanel_Helper
 b g_LogFileHandle
 b g_Managers
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_MenuBar_Helper
 b g_MenuButton_Helper
 b g_MenuItem_Helper
 b g_Menu_Helper
 b g_MessageBox_Helper
 b g_MessageEntities
 b g_ModelPrecacheSystem
 b g_ModelSoundsCache
 b g_ModelSoundsCacheSaver
 b g_ModelSoundsSymbolHelper
 b g_MoveData
 b g_MovieExplosion_ClassReg
 b g_NotifyList
 b g_NpcTimeThisFrame
 b g_OneWayTransition
 b g_OverridenColorSymbols
 b g_Panel_Helper
 b g_ParticleSmokeGrenade_ClassReg
 b g_PhysAverageSimTime
 b g_PlayerHurtEvent
 b g_PlayerMove
 b g_PostClientManager
 b g_ProgressBar_Helper
 b g_ProtobufLogHandler
 b g_RadioButton_Helper
 b g_RecipientFilterPredictionSystem
 b g_RestoredEntities
 b g_RichText_Helper
 b g_RocketTrail_ClassReg
 b g_ScalableImagePanel_Helper
 b g_ScenePrecacheSystem
 b g_ScriptServerRunScriptDepth
 b g_ScriptSymbols
 b g_ScrollBar_Helper
 b g_ScrollBar_Horizontal_Helper
 b g_ScrollBar_Vertical_Helper
 b g_ServerBenchmark
 b g_ServerTools
 b g_SmokeTrail_ClassReg
 b g_SoundEmitterSystem
 b g_SporeExplosion_ClassReg
 b g_SporeTrail_ClassReg
 b g_StartTimeCurThink
 b g_SteamWorksGameStatsServer
 b g_StudioBoneCache
 b g_TEArmorRicochet
 b g_TEBSPDecal
 b g_TEBeamEntPoint
 b g_TEBeamEnts
 b g_TEBeamFollow
 b g_TEBeamLaser
 b g_TEBeamPoints
 b g_TEBeamRing
 b g_TEBeamRingPoint
 b g_TEBeamSpline
 b g_TEBloodSprite
 b g_TEBloodStream
 b g_TEBreakModel
 b g_TEBubbleTrail
 b g_TEBubbles
 b g_TEClientProjectile
 b g_TEDecal
 b g_TEDust
 b g_TEDynamicLight
 b g_TEEffectDispatch
 b g_TEEnergySplash
 b g_TEExplosion
 b g_TEFireBullets
 b g_TEFizz
 b g_TEFootprintDecal
 b g_TEFoundryHelpers
 b g_TEGaussExplosion
 b g_TEGlowSprite
 b g_TEImpact
 b g_TEKillPlayerAttachments
 b g_TELargeFunnel
 b g_TEMetalSparks
 b g_TEMuzzleFlash
 b g_TEPlantBomb
 b g_TEPlayerAnimEvent
 b g_TEPlayerDecal
 b g_TEProjectedDecal
 b g_TERadioIcon
 b g_TEShatterSurface
 b g_TEShowLine
 b g_TESmoke
 b g_TESparks
 b g_TESprite
 b g_TESpriteSpray
 b g_TESystem
 b g_TEWorldDecal
 b g_TeleportStack
 b g_Templates
 b g_TextEntry_Helper
 b g_ThinkChecker
 b g_ThrottleMgr
 b g_ToggleButton_Helper
 b g_ToolFrameworkServer
 b g_TouchManager
 b g_TouchTrace
 b g_TreeView_Helper
 b g_URLLabel_Helper
 b g_VisibilityCache
 b g_WatcherList
 b g_bPermitDirectSoundPrecache
 b g_bTracingVsCommentaryNodes
 b g_dataGiftsLeaderboard
 b g_dblGiftsLeaderboardReceived
 b g_iDebuggingTransition
 b g_msgEconItem
 b g_pClassnameSpawnPriority
 b g_pClientPutInServerOverride
 b g_pClosecaption
 b g_pGibManager
 b g_pMsgBuffer
 b g_pNextLink
 b g_pSoundEnt
 b g_pTestObj
 b g_pcv_ThreadMode
 b g_pcv_commentary
 b game_end
 b game_gib_manager
 b game_money
 b game_player_equip
 b game_player_team
 b game_ragdoll_manager
 b game_round_end
 b game_score
 b game_text
 b game_ui
 b game_weapon_manager
 b game_zone_player
 b generic_actor
 b gib
 b gibshooter
 b give_command
 b givecurrentammo
 b global_event_log_enabled
 b global_set
 b god
 b gods
 b grenade
 b groundlist
 b guard variable for CAI_BaseNPC::NPCThink()::timer
 b guard variable for CAI_BaseNPC::RebalanceThinks()::rebalanceCandidates
 b guard variable for CAI_BaseNPC::TranslateActivity(Activity, Activity*)::sUniqueActivities
 b guard variable for CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerEyePosition
 b guard variable for CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerForward
 b guard variable for CAI_Path::BaseGoalPosition() const::vecResult
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::absAngles
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::absOrigin
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::qa
 b guard variable for CBaseAnimating::ScriptGetAttachmentOrigin(int)::absOrigin
 b guard variable for CBaseAnimating::ScriptGetAttachmentOrigin(int)::qa
 b guard variable for CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)::dummy
 b guard variable for CBaseCombatWeapon::GetBulletSpread()::cone
 b guard variable for CBaseEntity::IsSimulatingOnAlternateTicks()::sv_alternateticks
 b guard variable for CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())::think_trace_limit
 b guard variable for CBaseEntity::PrecacheModelComponents(int)::keyName
 b guard variable for CBaseEntity::PrecacheModelComponents(int)::keyParticles
 b guard variable for CBaseEntity::ScriptGetLocalAngularVelocity()::v
 b guard variable for CBasePlayer::EyeAngles()::angEyeWorld
 b guard variable for CBasePlayerAnimState::AnimStateLog(char const*, ...)::hFile
 b guard variable for CBasePlayerAnimState::CalcSequenceIndex(char const*, ...)::dict
 b guard variable for CBaseProp::ParsePropData()::keyPropData
 b guard variable for CBeam::GetAbsEndPos() const::vecAbsPos
 b guard variable for CCSBotManager::GetRandomPositionInZone(CCSBotManager::Zone const*) const::pos
 b guard variable for CCSGameRules::CCSGameRules()::sv_mmqueue_reservation
 b guard variable for CCSGameRules::CheckForGiftsLeaderboardUpdate()::sv_mmqueue_reservation
 b guard variable for CCSGameRules::CheckGameOver()::s_pchTournamentServer
 b guard variable for CCSGameRules::CreateStandardEntities()::s_pchTournamentServer
 b guard variable for CCSGameRules::IsQueuedMatchmaking() const::sv_mmqueue_reservation
 b guard variable for CCSGameRules::PickRandomWeaponForDMBonus()::vecPossibleWeaponLoadoutPositions
 b guard variable for CCSGameRules::RegisterScriptFunctions()::binding
 b guard variable for CCSGameStats::UploadRoundStats()::s_bSubmittingStats
 b guard variable for CCSGameStats::UploadRoundStats()::s_pchTournamentServer
 b guard variable for CCSMatch::EnableFullAlltalk(bool)::sv_full_alltalk
 b guard variable for CCSPlayer::ClientCommand(CCommand const&)::sv_mmqueue_reservation
 b guard variable for CCSPlayer::HandleCommand_JoinTeam(int, bool, int)::sv_mmqueue_reservation
 b guard variable for CCSPlayer::ImpactTrace(CGameTrace*, int, char*)::violence_hblood
 b guard variable for CCSPlayer::PostThink()::pAttr_MusicID
 b guard variable for CCSPlayer::UpdateAppearanceIndex()::pRandomAppearanceDef
 b guard variable for CCSPlayerAnimState::CalcSequenceIndex(char const*, ...)::dict
 b guard variable for CCSWeaponInfo::CannotShootUnderwater(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::CannotShootUnderwater(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::DoesUnzoomAfterShot(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::DoesUnzoomAfterShot(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetArmorRatio(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetArmorRatio(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetBucketSlot(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetBucketSlot(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetBullets(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetBullets(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetCycleTime(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetCycleTime(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetDamage(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetDamage(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetDefaultPrimaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetDefaultSecondaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetFlinchVelocityModifierLarge(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetFlinchVelocityModifierLarge(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetFlinchVelocityModifierSmall(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetFlinchVelocityModifierSmall(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetIdleInterval(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetIdleInterval(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyCrouch(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyCrouch(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyFire(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyFire(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyJump(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyJump(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyLadder(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyLadder(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyLand(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyLand(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyMove(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyMove(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyReload(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyReload(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetInaccuracyStand(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetInaccuracyStand(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetKillAward(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetKillAward(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetMaxSpeed(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetMaxSpeed(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetPenetration(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetPenetration(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetPrimaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetPrimaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRange(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRange(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRangeModifier(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRangeModifier(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoilAngle(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoilAngle(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoilAngleVariance(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoilAngleVariance(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoilMagnitude(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoilMagnitude(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoilMagnitudeVariance(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoilMagnitudeVariance(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoilSeed(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoilSeed(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoveryTimeCrouch(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoveryTimeCrouch(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetRecoveryTimeStand(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetRecoveryTimeStand(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetSecondaryClipSize(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetSecondaryClipSize(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetSpread(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetSpread(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetTimeToIdleAfterFire(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetTimeToIdleAfterFire(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetTracerFrequency(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetTracerFrequency(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetWeaponPrice(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetWeaponPrice(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomFOV1(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomFOV1(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomFOV2(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomFOV2(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomLevels(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomLevels(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomTime0(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomTime0(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomTime1(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomTime1(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::GetZoomTime2(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::GetZoomTime2(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::HasBulletAltfire(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::HasBulletAltfire(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::HasBurstMode(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::HasBurstMode(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::HasPostponeFire(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::HasPostponeFire(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::HasSilencer(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::HasSilencer(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::HasTraditionalScope(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::HasTraditionalScope(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCSWeaponInfo::IsFullAuto(CEconItemView const*, int, float) const::hAttrib
 b guard variable for CCSWeaponInfo::IsFullAuto(CEconItemView const*, int, float) const::hAttribAlt
 b guard variable for CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b guard variable for CEconItem::GetCustomDesc() const::pAttrDef_CustomDesc
 b guard variable for CEconItem::GetCustomName() const::pAttrDef_CustomName
 b guard variable for CEconItem::SetCustomDesc(char const*)::pAttrDef_CustomDesc
 b guard variable for CEconItem::SetCustomName(char const*)::pAttrDef_CustomName
 b guard variable for CEconItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)::pAttrDef_PaintRGB
 b guard variable for CEconItemDefinition::GetBuyMenuDisplayModel() const::pAttribString
 b guard variable for CEconItemDefinition::GetIconDisplayModel() const::pAttribString
 b guard variable for CEconItemDefinition::GetMagazineModel() const::pAttribString
 b guard variable for CEconItemDefinition::GetPedestalDisplayModel() const::pAttribString
 b guard variable for CEconItemDefinition::GetScopeLensMaskModel() const::pAttribString
 b guard variable for CEconItemDefinition::GetUidModel() const::pAttribString
 b guard variable for CEconItemView::GetCustomPaintKitIndex() const::pAttr_PaintKit
 b guard variable for CEconItemView::IsStyleUnlocked(int) const::pAttr_UnlockedStyles
 b guard variable for CEconSharedToolSupport::CanCollect(IEconItemInterface const*, IEconItemInterface const*, unsigned int*)::pAttrDef_CollectionBits
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b guard variable for CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)::_counter
 b guard variable for CHostage::GetCentroid() const::centroid
 b guard variable for CHostage::GetEyes() const::eyes
 b guard variable for CHostage::GetFeet() const::feet
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrDef_IronSightEyePos
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrDef_IronSightPivotAngle
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrbIronSightCapable
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightFOV
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightLooseness
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPivotForward
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPullUpSpeed
 b guard variable for CIronSightController::Init(CWeaponCSBase*)::pAttrflIronSightPutDownSpeed
 b guard variable for CItemSelectionCriteria::BEvaluate(CEconItem const*, CEconItemSchema const&) const::pAttr_KillEaterScoreType
 b guard variable for CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b guard variable for CNavArea::ComputeVisibilityDelta(CNavArea const*) const::delta
 b guard variable for CNavArea::Draw() const::blink
 b guard variable for CNavMesh::DrawEditMode()::host_thread_mode
 b guard variable for CNavMesh::DrawEditMode()::sb_perf_collect
 b guard variable for CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const::searchMarker
 b guard variable for CNavMesh::UpdateGeneration(float)::host_thread_mode
 b guard variable for CNavMesh::UpdateGeneration(float)::s_playerSettleTimer
 b guard variable for CNavMesh::UpdateGeneration(float)::s_unlitAreas
 b guard variable for CNavMesh::UpdateGeneration(float)::s_unlitSeedAreas
 b guard variable for CNavNode::GetNode(Vector const&)::lookup
 b guard variable for CPhysicsProp::GetPropDataAngles(char const*, QAngle&)::keyPhysgunInteractions
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAIWalkable
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAllowStatic
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBase
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBlockLOS
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableCount
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableModel
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableSkin
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDamageTable
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgBullets
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgClub
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgExplosive
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveDamage
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveRadius
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyHealth
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyMultiplayerBreak
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyPhysicsMode
 b guard variable for CSGameState::GetRandomFreeHostagePosition() const::freePos
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMax
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMaxUpdateRate
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMin
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMinUpdateRate
 b guard variable for CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)::map_wants_save_disable
 b guard variable for CSkyboxSwapper::InputTrigger(inputdata_t&)::skyname
 b guard variable for CStatueProp::CStatueProp()::vcollide_wireframe
 b guard variable for CTestTraceline::Spin()::traceline_spin
 b guard variable for CTextStat::GetTextStatsList()::theList
 b guard variable for CWeaponCSBase::GetBulletSpread()::cone
 b guard variable for CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b guard variable for DEBUG_THINK_TRACE_COUNTER_ALLOWED()::bIsPublic
 b guard variable for EconEntity_OnOwnerKillEaterEvent(CEconEntity*, CCSPlayer*, CCSPlayer*, kill_eater_event_t, int)::pAttr_KillEater
 b guard variable for EntityFactoryDictionary()::s_EntityFactory
 b guard variable for GCSDK::GMapJobTypesByMsg()::s_MapJobTypesByMsg
 b guard variable for GCSDK::GMapJobTypesByName()::s_MapJobTypesByName
 b guard variable for GCSDK::GProtoBufMsgMemoryPoolMgr()::s_ProtoBufMsgMemoryPoolMgr
 b guard variable for GCSDK::GSOIDNameMap()::s_SOIDNameMap
 b guard variable for GCSDK::GetPchTempTextBuffer()::s_irgchBuffer
 b guard variable for GCSDK::GetPchTempTextBuffer()::s_rgtlsBuffers
 b guard variable for GetPanelAnimationDictionary()::dictionary
 b guard variable for GetPanelMessageMapDictionary()::dictionary
 b guard variable for GetPropertyConverters()::g_AnimationPropertyConverters
 b guard variable for GetSceneManager()::s_SceneManager
 b guard variable for GetStickerAttributeDefHandle(int, EStickerAttributeType)::s_DummyAttr
 b guard variable for Helper_GetNullWeaponInfo()::gNullWeaponInfo
 b guard variable for Host_Say(edict_t*, CCommand const&, bool)::tv_encryptdata_key
 b guard variable for Host_Say(edict_t*, CCommand const&, bool)::tv_encryptdata_key_pub
 b guard variable for IEconItemInterface::GetCustomPaintKitIndex() const::pAttrDef_PaintKit
 b guard variable for IEconItemInterface::GetCustomPaintKitSeed() const::pAttrDef_PaintKitSeed
 b guard variable for IEconItemInterface::GetCustomPaintKitWear(float) const::pAttrDef_PaintKitWear
 b guard variable for IEconItemInterface::GetExpirationDate() const::pAttrib_ExpirationDate
 b guard variable for IEconItemInterface::GetTradableAfterDateTime() const::pAttrib
 b guard variable for IEconItemInterface::GetUseAfterDateTime() const::pAttrib
 b guard variable for IEconItemInterface::IsCommodity() const::pAttrib_IsCommodity
 b guard variable for IEconItemInterface::IsHiddenFromDropList() const::pAttrib_HideFromDropList
 b guard variable for IEconItemInterface::IsPotentiallyTradable() const::pAttrDef_AlwaysTradableAndUsableInCrafting
 b guard variable for IEconItemInterface::IsPotentiallyTradable() const::pAttrib_CannotTrade
 b guard variable for IEconItemInterface::IsUsableInCrafting() const::pAttrDef_AlwaysTradableAndUsableInCrafting
 b guard variable for IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const::pAttrDef_UnlimitedQuantity
 b guard variable for MissingSceneWarning(char const*)::missing
 b guard variable for ResponseRules::CResponseSystem::ParseOneCriterion(char const*)::dummy
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kCONCEPT
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kSUBJECT
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kWHO
 b guard variable for SelectWeightedSequence(CStudioHdr*, int, int)::_counter
 b guard variable for UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::lastOrg
 b guard variable for UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMaxCmdRate
 b guard variable for UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMaxUpdateRate
 b guard variable for UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMinCmdRate
 b guard variable for UTIL_GetPlayerConnectionInfo(int, int&, int&)::pMinUpdateRate
 b guard variable for UTIL_GetPlayerConnectionInfo(int, int&, int&)::pSvClientCmdrateDifference
 b guard variable for VScriptServerInit()::binding
 b guard variable for WaveTrace(char const*, char const*)::s_WaveTrace
 b guard variable for send_round_backup_file_list(CCommand const&)::s_mapLastRequestTime
 b guard variable for vgui::GetAnimationController()::s_pAnimationController
 b guard variable for vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b hammer_update_entity_command
 b hammer_update_safe_entities_command
 b hammer_updateignorelist
 b handle_dummy
 b handle_test
 b hegrenade_projectile
 b host_workshop_collection_command
 b host_workshop_map_command
 b hostage_carriable_prop
 b hostage_entity
 b hostfile
 b hullcolor
 b hurtme
 b ice_sboxes_initialised
 b inferno
 b info_armsrace_counterterrorist
 b info_armsrace_terrorist
 b info_bomb_target_hint_A
 b info_bomb_target_hint_B
 b info_camera_link
 b info_constraint_anchor
 b info_deathmatch_spawn
 b info_game_event_proxy
 b info_hint
 b info_hostage_rescue_zone_hint
 b info_hostage_spawn
 b info_intermission
 b info_ladder_dismount
 b info_landmark
 b info_map_parameters
 b info_mass_center
 b info_node
 b info_node_air
 b info_node_air_hint
 b info_node_climb
 b info_node_hint
 b info_node_link
 b info_node_link_controller
 b info_null
 b info_overlay_accessor
 b info_particle_system
 b info_player_counterterrorist
 b info_player_deathmatch
 b info_player_logo
 b info_player_start
 b info_player_teamspawn
 b info_player_terrorist
 b info_projecteddecal
 b info_radial_link_controller
 b info_remarkable
 b info_target
 b info_target_instructor_hint
 b info_teleport_destination
 b info_vehicle_groundspawn
 b info_view_parameters
 b infodecal
 b instanced_scripted_scene
 b item_assaultsuit
 b item_cutters
 b item_defuser
 b item_kevlar
 b item_nvgs
 b item_sodacan
 b kdtree_test
 b keyframe_rope
 b keyframe_track
 b kill_command
 b killvector_command
 b lastMsgTime
 b lasterrorZ
 b light
 b light_directional
 b light_dynamic
 b light_environment
 b light_glspot
 b light_spot
 b lineartoscreen
 b lineartotexture
 b load_master_item_schema_command
 b logic_active_autosave
 b logic_auto
 b logic_autosave
 b logic_branch
 b logic_branch_listener
 b logic_case
 b logic_choreographed_scene
 b logic_collision_pair
 b logic_compare
 b logic_eventlistener
 b logic_eventlistener_itemequip
 b logic_lineto
 b logic_measure_movement
 b logic_multicompare
 b logic_navigation
 b logic_playerproxy
 b logic_playmovie
 b logic_proximity
 b logic_random_outputs
 b logic_register_activator
 b logic_relay
 b logic_scene_list_manager
 b logic_script
 b logic_timer
 b m_ActivityRemapDatabase
 b m_PVS
 b m_nPVSSize
 b map_setbombradius_command
 b map_showbombradius_command
 b map_showspawnpoints_command
 b material_modify_control
 b math_colorblend
 b math_counter
 b math_remap
 b mod_load_showstall
 b model_studio
 b molotov_projectile
 b momentary_door
 b momentary_rot_button
 b monster_furniture
 b monster_generic
 b motdfile
 b move_keyframed
 b move_rope
 b mp_backup_restore_list_files_command
 b mp_backup_restore_load_file_command
 b mp_disable_autokick_command
 b mp_dump_timers_command
 b mp_forcerespawnplayers
 b mp_forcewin_command
 b mp_pause_match
 b mp_scrambleteams
 b mp_swapteams
 b mp_switchteams
 b mp_tournament_restart
 b mp_unpause_match
 b mp_warmup_end_command
 b mp_warmup_start_command
 b multisource
 b nFrameNumber
 b nPropBreakablesPerFrameCount
 b nav_add_to_selected_set
 b nav_add_to_selected_set_by_id_command
 b nav_analyze
 b nav_analyze_scripted
 b nav_avoid
 b nav_begin_area
 b nav_begin_deselecting
 b nav_begin_drag_deselecting
 b nav_begin_drag_selecting
 b nav_begin_selecting
 b nav_begin_shift_xy
 b nav_build_ladder
 b nav_check_connectivity_command
 b nav_check_file_consistency
 b nav_check_floor
 b nav_check_stairs
 b nav_chop_selected_command
 b nav_clear_selected_set
 b nav_clear_walkable_marks
 b nav_compress_id
 b nav_connect
 b nav_corner_lower_command
 b nav_corner_place_on_ground_command
 b nav_corner_raise_command
 b nav_corner_select
 b nav_crouch
 b nav_delete
 b nav_delete_marked
 b nav_disconnect
 b nav_dont_hide
 b nav_end_area
 b nav_end_deselecting
 b nav_end_drag_deselecting
 b nav_end_drag_selecting
 b nav_end_selecting
 b nav_end_shift_xy
 b nav_flood_select_command
 b nav_gen_cliffs_approx_command
 b nav_generate
 b nav_generate_incremental
 b nav_jump
 b nav_ladder_flip
 b nav_load
 b nav_lower_drag_volume_max
 b nav_lower_drag_volume_min
 b nav_make_sniper_spots
 b nav_mark
 b nav_mark_unnamed
 b nav_mark_walkable
 b nav_merge
 b nav_merge_mesh_command
 b nav_no_hostages
 b nav_no_jump
 b nav_place_floodfill
 b nav_place_list
 b nav_place_pick
 b nav_place_replace
 b nav_place_set
 b nav_precise
 b nav_raise_drag_volume_max
 b nav_raise_drag_volume_min
 b nav_recall_selected_set
 b nav_remove_from_selected_set
 b nav_remove_jump_areas
 b nav_run
 b nav_save
 b nav_save_selected_command
 b nav_select_blocked_areas_command
 b nav_select_damaging_areas_command
 b nav_select_half_space_command
 b nav_select_invalid_areas
 b nav_select_obstructed_areas_command
 b nav_select_overlapping
 b nav_select_radius_command
 b nav_select_stairs_command
 b nav_set_place_mode
 b nav_shift_command
 b nav_simplify_selected_command
 b nav_splice
 b nav_split
 b nav_stand
 b nav_stop
 b nav_store_selected_set
 b nav_strip
 b nav_subdivide_command
 b nav_test_stairs_command
 b nav_toggle_deselecting
 b nav_toggle_in_selected_set
 b nav_toggle_place_mode
 b nav_toggle_place_painting
 b nav_toggle_selected_set
 b nav_toggle_selecting
 b nav_transient
 b nav_unmark
 b nav_update_blocked
 b nav_update_lighting_command
 b nav_use_place
 b nav_walk
 b nav_warp_to_mark
 b nextPitch
 b noclip_command
 b npc_ammo_deplete_command
 b npc_bipass
 b npc_combat
 b npc_conditions
 b npc_create
 b npc_create_aimed
 b npc_destroy
 b npc_destroy_unselected
 b npc_enemies
 b npc_focus
 b npc_freeze
 b npc_freeze_unselected_command
 b npc_furniture
 b npc_go
 b npc_go_do_run
 b npc_go_random
 b npc_heal_command
 b npc_heardanger
 b npc_kill
 b npc_nearest
 b npc_relationships
 b npc_reset
 b npc_route
 b npc_select
 b npc_set_freeze
 b npc_set_freeze_unselected_command
 b npc_squads
 b npc_steering
 b npc_steering_all
 b npc_task_text
 b npc_tasks
 b npc_teleport
 b npc_thinknow_command
 b npc_vehicledriver
 b npc_viewcone
 b num_teams
 b observer_use_command
 b old_armor
 b particle_test_start
 b particle_test_stop
 b path_corner
 b path_corner_crash
 b path_track
 b phys_ballsocket
 b phys_bone_follower
 b phys_constraint
 b phys_constraintsystem
 b phys_convert
 b phys_hinge
 b phys_keepupright
 b phys_lengthconstraint
 b phys_magnet
 b phys_motor
 b phys_penetration_error_time
 b phys_pulleyconstraint
 b phys_ragdollconstraint
 b phys_ragdollmagnet
 b phys_slideconstraint
 b phys_spring
 b phys_thruster
 b phys_torque
 b physics_budget_command
 b physics_cannister
 b physics_constraints_command
 b physics_debug_entity_command
 b physics_entity_solver
 b physics_highlight_active_command
 b physics_npc_solver
 b physics_prop
 b physics_prop_ragdoll
 b physics_prop_statue
 b physics_report_active_command
 b physics_select_command
 b physicsshadowupdate_render
 b picker
 b planted_c4
 b planted_c4_training
 b player
 b player_loadsaved
 b player_manager
 b player_speedmod
 b player_weaponstrip
 b point_anglesensor
 b point_angularvelocitysensor
 b point_bonusmaps_accessor
 b point_broadcastclientcommand
 b point_camera
 b point_clientcommand
 b point_commentary_node
 b point_commentary_viewpoint
 b point_devshot_camera
 b point_enable_motion_fixup
 b point_entity_finder
 b point_gamestats_counter
 b point_hurt
 b point_message
 b point_playermoveconstraint
 b point_posecontroller
 b point_proximity_sensor
 b point_servercommand
 b point_spotlight
 b point_surroundtest
 b point_teleport
 b point_template
 b point_tesla
 b point_velocitysensor
 b point_viewcontrol
 b point_viewcontrol_multiplayer
 b point_viewproxy
 b postprocess_controller
 b predicted_viewmodel
 b print_mapgroup_sv_command
 b prop_debug
 b prop_door_rotating
 b prop_dynamic
 b prop_dynamic_create
 b prop_dynamic_glow
 b prop_dynamic_ornament
 b prop_dynamic_override
 b prop_hallucination
 b prop_physics
 b prop_physics_create
 b prop_physics_multiplayer
 b prop_physics_override
 b prop_physics_respawnable
 b prop_ragdoll
 b prop_ragdoll_attached
 b prop_sphere
 b prop_talker
 b prop_vehicle
 b prop_vehicle_driveable
 b protobuf_AddDesc_base_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_cstrike15_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_cstrike15_5fusermessages_2eproto()::already_here
 b protobuf_AddDesc_econ_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_gcsdk_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_gcsystemmsgs_2eproto()::already_here
 b protobuf_AddDesc_netmessages_2eproto()::already_here
 b protobuf_AddDesc_steammessages_2eproto()::already_here
 b raggib
 b report_entities_command
 b report_simthinklist_command
 b report_soundpatch_command
 b report_touchlinks_command
 b resetGameStats
 b reset_expo_command
 b restart_entities
 b rope_anchor
 b rr_forceconcept
 b rr_reloadresponsesystems_command
 b s_BoneMutex
 b s_BraceCharacters
 b s_BreakSet
 b s_BuildReverseMap
 b s_BulletGroupCounter
 b s_CSGCServerSystem
 b s_CombatCharVisCache
 b s_DebugHistory
 b s_DirtyKDTree
 b s_EffectServer
 b s_EmptyConVar
 b s_EntitySpotting
 b s_GameStats_Singleton
 b s_GameSystems
 b s_GameSystemsPerFrame
 b s_GameTypes
 b s_HLTVDirector
 b s_HashChains
 b s_LightMutex
 b s_Microphones
 b s_MoveHelperServer
 b s_ParticleSystemMgr
 b s_PrecacheRegister
 b s_QCache
 b s_RemoveImmediateSemaphore
 b s_RndOrder
 b s_SIMDRandContexts
 b s_SaveOverflow
 b s_Steam3Server
 b s_SteamAPIContext
 b s_SteamGameServerAPIContext
 b s_SuccessfulSpeculatives
 b s_TEPhysicsProp
 b s_TraceFilter
 b s_VictimList
 b s_WastedSpeculativeUpdates
 b s_bAllocatorInitialized
 b s_bBuiltBreakSet
 b s_bInDMXContext
 b s_bPrecachesRegistered
 b s_bRegistered
 b s_bResourceFCRegistered
 b s_bRunningWithDebugModules
 b s_bSuppressRebindChecks
 b s_bSystemsInitted
 b s_currentSortingColumnTypeIsText
 b s_detailController
 b s_factories
 b s_iTooltipWindowCount
 b s_nBaseTextureVarCache
 b s_nCVarFlag
 b s_nConnectionCount
 b s_nNumCacheMisses
 b s_nNumCacheQueries
 b s_nRegistrationCount
 b s_nTraceFilterCount
 b s_pCGCGameSpecificClientSystem
 b s_pClassLists
 b s_pConnectionRegistration
 b s_pCurrentSortingColumn
 b s_pCurrentSortingListPanel
 b s_pMapName
 b s_pNonModifiedPointerProxyHead
 b s_pPerFrameSystemList
 b s_pSortFunc
 b s_pSystemList
 b s_shared_token
 b s_szPseudoUniqueID
 b s_szSaveFileName
 b s_szStatUploadRegistryKeyName
 b s_windControllers
 b say_command
 b say_team_command
 b scene_async_prefetch_spew
 b scene_clamplookat
 b scene_flush_command
 b scene_forcecombined
 b scene_manager
 b scene_maxcaptionradius
 b scene_playvcd_command
 b scene_showfaceto
 b scene_showlook
 b scene_showmoveto
 b scene_showunlock
 b script_command
 b script_debug_command
 b script_dump_all_command
 b script_execute_command
 b script_help_command
 b script_reload_code_command
 b script_reload_entity_code_command
 b script_reload_think_command
 b scripted_scene
 b scripted_sentence
 b scripted_sequence
 b scripted_target
 b send_round_backup_file_list(CCommand const&)::s_mapLastRequestTime
 b send_round_backup_file_list_command
 b server_game_time_command
 b setang
 b setang_exact_command
 b setmodel
 b setpos_command
 b setpos_exact_command
 b setpos_player_command
 b shadow_control
 b shake
 b showtriggers_toggle
 b simple_physics_brush
 b simple_physics_prop
 b sky_camera
 b skybox_swapper
 b smokegrenade_projectile
 b smoothstairs
 b soundent
 b soundpatch_captionlength
 b soundscape_flush_command
 b spark_shower
 b speechListIndex
 b speechListSounds
 b spotlight_end
 b spraycan
 b st_szNextMap
 b st_szNextSpot
 b std::__ioinit
 b sunlight_shadow_control
 b surfaceprop_command
 b sv_benchmark_autovprofrecord
 b sv_benchmark_force_start_command
 b sv_benchmark_numticks
 b sv_clockcorrection_msecs
 b sv_competitive_minspec
 b sv_cs_dump_econ_item_stringtable_command
 b sv_findsoundname_command
 b sv_max_usercmd_move_magnitude
 b sv_maxusrcmdprocessticks
 b sv_optimizedmovement
 b sv_playerperfhistorycount
 b sv_querycache_stats_command
 b sv_soundemitter_filecheck_command
 b sv_soundemitter_flush_command
 b sv_soundemitter_reload_command
 b sv_soundemitter_spew_command
 b sv_soundscape_printdebuginfo_command
 b sv_thinktimecheck
 b sv_threaded_init
 b tanktrain_ai
 b tanktrain_aitarget
 b target_cdaudio
 b target_changegravity
 b te_tester
 b team_manager
 b team_names
 b team_scores
 b test_dispatcheffect
 b test_effect
 b test_entity_blocker
 b test_outtro_stats
 b test_proxytoggle
 b test_traceline
 b texturetolinear
 b timeleft_command
 b trigger
 b trigger_auto_crouch
 b trigger_autosave
 b trigger_bomb_reset
 b trigger_brush
 b trigger_cdaudio
 b trigger_changelevel
 b trigger_fog
 b trigger_gravity
 b trigger_hierarchy
 b trigger_hurt
 b trigger_impact
 b trigger_look
 b trigger_multiple
 b trigger_once
 b trigger_playermovement
 b trigger_proximity
 b trigger_push
 b trigger_remove
 b trigger_serverragdoll
 b trigger_soundscape
 b trigger_teleport
 b trigger_togglesave
 b trigger_tonemap
 b trigger_transition
 b trigger_vphysics_motion
 b trigger_wind
 b tv_allow_camera_man_steamid
 b tv_allow_static_shots
 b tv_delay
 b tv_relayradio
 b tv_relaytextchat
 b tv_time_remaining_command
 b tweak_ammo_impulses_command
 b use
 b variant_t::ToString() const::szBuf
 b vec2_invalid
 b vec2_origin
 b vec4_invalid
 b vec4_origin
 b vehicle_flushscript_command
 b vgui::AnimatingImagePanel::GetDescription()::buf
 b vgui::Button::GetDescription()::buf
 b vgui::CBitmapImagePanel::GetDescription()::buf
 b vgui::EditablePanel::GetControlString(char const*, char const*)::buf
 b vgui::FocusNavGroup::RequestFocusNext(unsigned int)::stack_depth
 b vgui::Frame::GetDescription()::buf
 b vgui::GetAnimationController()::s_pAnimationController
 b vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b vgui::ImagePanel::GetDescription()::buf
 b vgui::Label::GetDescription()::buf
 b vgui::Panel::InitPropertyConverters()::initialized
 b vgui::PanelListPanel::GetDescription()::buf
 b vgui::ProgressBar::GetDescription()::buf
 b vgui::RadioButton::GetDescription()::buf
 b vgui::RichText::GetDescription()::buf
 b vgui::ScalableImagePanel::GetDescription()::buf
 b vgui::TextEntry::GetDescription()::buf
 b vgui::TextImage::SetUseAsianWordWrapping()::bCheckForAsianLanguage
 b vgui::TextImage::SetUseAsianWordWrapping()::bIsAsianLanguage
 b vgui::URLLabel::GetDescription()::buf
 b vgui::g_MenuMgr
 b vgui::g_szControlsModuleName
 b vgui::vguiButton_UnpackInit::s_pUnpack
 b vgui::vguiLabel_UnpackInit::s_pUnpack
 b vgui::vguiPanel_UnpackInit::s_pUnpack
 b vgui_movie_display
 b vgui_screen
 b vgui_screen_team
 b vgui_slideshow_display
 b viewmodel
 b violence_ablood
 b violence_agibs
 b violence_hblood
 b violence_hgibs
 b vote_controller
 b voxeltree_box
 b voxeltree_playerview
 b voxeltree_sphere
 b voxeltree_view
 b water_lod_control
 b waterbullet
 b wc_air_edit_further
 b wc_air_edit_nearer
 b wc_air_node_edit
 b wc_create
 b wc_destroy
 b wc_destroy_undo
 b wc_link_edit
 b weapon_ak47
 b weapon_aug
 b weapon_awp
 b weapon_basecsgrenade
 b weapon_bizon
 b weapon_c4
 b weapon_cs_base
 b weapon_csbase_gun
 b weapon_deagle
 b weapon_decoy
 b weapon_elite
 b weapon_famas
 b weapon_fiveseven
 b weapon_flashbang
 b weapon_g3sg1
 b weapon_galil
 b weapon_galilar
 b weapon_glock
 b weapon_hegrenade
 b weapon_hkp2000
 b weapon_incgrenade
 b weapon_knife
 b weapon_knifegg
 b weapon_m249
 b weapon_m3
 b weapon_m4a1
 b weapon_mac10
 b weapon_mag7
 b weapon_molotov
 b weapon_mp5navy
 b weapon_mp7
 b weapon_mp9
 b weapon_negev
 b weapon_nova
 b weapon_p228
 b weapon_p250
 b weapon_p90
 b weapon_reload_database_command
 b weapon_sawedoff
 b weapon_scar17
 b weapon_scar20
 b weapon_scout
 b weapon_sg550
 b weapon_sg552
 b weapon_sg556
 b weapon_smokegrenade
 b weapon_ssg08
 b weapon_taser
 b weapon_tec9
 b weapon_tmp
 b weapon_ump45
 b weapon_usp
 b weapon_xm1014
 b window_pane
 b workshop_start_map_command
 b world_items
 b worldspawn
 calloc
 ceil
 ceilf
 close$UNIX2003
 cos
 cosf
 d (anonymous namespace)::s_PlayerInfoManager_V1
 d .memset_pattern
 d .memset_pattern125
 d AI_DEFAULT_STANDOFF_PARAMS
 d AI_SAVE_RESTORE_VERSION
 d BotStatement::Update()::speak
 d CAI_BaseNPC::ClearSenseConditions()::conditionsToClear
 d CAI_BaseNPC::DrawDebugTextOverlays()::pMoveNames
 d CAI_BaseNPC::NPCThink()::ppszEfficiencies
 d CAI_BaseNPC::NPCThink()::ppszMoveEfficiencies
 d CAI_BaseNPC::OnListened()::conditionsToClear
 d CAI_BaseNPC::OnLooked(int)::conditionsToClear
 d CAI_BaseNPC::PreNPCThink()::iPrevFrame
 d CAI_BaseNPC::ReportAIState()::pStateNames
 d CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)::g_DamageConditions
 d CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)::g_GeneralConditions
 d CAI_BaseNPC::UpdateEfficiency(bool)::iPrevFrame
 d CAI_ExpresserHost_NPC_DoModifyOrAppendCriteria(CAI_BaseNPC*, ResponseRules::CriteriaSet&)::pStateNames
 d CAI_Navigator::SimplifyPathForward(float)::fullScanParams
 d CAI_Navigator::SimplifyPathQuick()::quickScanParams
 d CBaseButton::DrawDebugTextOverlays()::pszStates
 d CBaseCombatWeapon::GetProficiencyValues()::defaultWeaponProficiencyTable
 d CBaseEntity::RunVScripts()::sCallChainFunctions
 d CCSBot::GetDispositionName() const::name
 d CCSBot::GetMoraleName() const::name
 d CCSBot::GetTaskName() const::name
 d CCSBotManager::BotPlaceCommand()::lastBotPlaced
 d CCSBotManager::OnServerShutdown(IGameEvent*)::botVars
 d CCSHLTVDirector::GetModEvents()::s_modevents
 d CCSPlayer::State_LookupInfo(CSPlayerState)::playerStateInfos
 d CGlobalState::DumpGlobals()::estates
 d CHLTVDirector::GetModEvents()::s_modevents
 d COMMENTARY_SAVE_RESTORE_VERSION
 d CRTime::RTime32FromFmtString(char const*, char const*)::rgszMonthNames
 d CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)::lastName
 d EVENTQUEUE_SAVE_RESTORE_VERSION
 d GCSDK::g_JobType_CGCSOCacheSubscribedJob
 d GCSDK::g_JobType_CGCSOCacheSubscriptionCheck
 d GCSDK::g_JobType_CGCSOCacheUnsubscribedJob
 d GCSDK::g_JobType_CGCSOCreateJob
 d GCSDK::g_JobType_CGCSODestroyJob
 d GCSDK::g_JobType_CGCSOUpdateJob
 d GCSDK::g_JobType_CGCSOUpdateMultipleJob
 d GCSDK::k_prgchJobPauseReason
 d GetAttachTypeFromString(char const*)::pAttachmentNames
 d GetMassEquivalent(float)::masstext
 d HostageModel
 d PHYS_SAVE_RESTORE_VERSION
 d PrecacheInstancedScene(char const*)::nMakingReslists
 d PropModelStatsTableInit
 d RESPONSESYSTEM_SAVE_RESTORE_VERSION
 d ServerStatBasedAchievements
 d TEMPLATE_SAVE_RESTORE_VERSION
 d VSCRIPT_SERVER_SAVE_RESTORE_VERSION
 d VScriptCompileScript(char const*, bool)::pszExtensions
 d __g_CServerGameTags_singleton
 d boolconverter
 d colorconverter
 d constraintevents
 d dyld__mach_header
 d floatconverter
 d fontconverter
 d gDamageTableRegistry
 d gTitleComments
 d g_ActivityDataOps
 d g_AntlionFollowFormation
 d g_AntlionFollowFormationSlots
 d g_CCNameMap
 d g_CommanderFollowFormation
 d g_CommanderFollowFormationSlots
 d g_ConVarAccessor
 d g_DefaultLightstyles
 d g_EntFireAutoComplete
 d g_FF_BEST_ACCURACY_Helper
 d g_FF_BEST_CT_ACCURACY_Helper
 d g_FF_BEST_T_ACCURACY_Helper
 d g_FF_BLIND_KILLS_Helper
 d g_FF_BOMB_CARRIERS_Helper
 d g_FF_BOMB_PLANTED_BEFORE_KILL_Helper
 d g_FF_BOTS_ASSUMED_Helper
 d g_FF_BROKE_WINDOWS_Helper
 d g_FF_CT_ACCURACY_Helper
 d g_FF_CT_WIN_NO_CASUALTIES_Helper
 d g_FF_CT_WIN_NO_KILLS_Helper
 d g_FF_CT_WIN_TIME_Helper
 d g_FF_DAMAGE_MULTIPLE_ENEMIES_Helper
 d g_FF_DAMAGE_NO_KILLS_Helper
 d g_FF_DAMAGE_WITH_GRENADES_Helper
 d g_FF_DEFAULT_WEAPON_Helper
 d g_FF_DEFENDED_BOMB_Helper
 d g_FF_DEFUSED_WITH_DROPPED_KIT_Helper
 d g_FF_DEFUSE_WAS_CLOSE_CALL_HUNDREDTHS_Helper
 d g_FF_DEFUSE_WAS_CLOSE_CALL_TENTHS_Helper
 d g_FF_DEFUSE_WAS_CLOSE_CALL_THOUSANDTHS_Helper
 d g_FF_DOMINATION_Helper
 d g_FF_DONATED_WEAPONS_Helper
 d g_FF_EMPTY_GUNS_Helper
 d g_FF_FAILED_BOMB_PLANTS_Helper
 d g_FF_FALLBACK_Helper
 d g_FF_FALL_DAMAGE_Helper
 d g_FF_FIRST_BLOOD_Helper
 d g_FF_FIRST_KILL_Helper
 d g_FF_GRENADES_THROWN_Helper
 d g_FF_ITEMS_DROPPED_VALUE_Helper
 d g_FF_ITEMS_PURCHASED_Helper
 d g_FF_KILLED_ALL_ENEMIES_Helper
 d g_FF_KILLED_ENEMIES_Helper
 d g_FF_KILLED_HALF_OF_ENEMIES_Helper
 d g_FF_KILLS_HEADSHOTS_Helper
 d g_FF_KILLS_WITH_GRENADES_Helper
 d g_FF_KILLS_WITH_LAST_ROUND_Helper
 d g_FF_KILLS_WITH_STATTRAK_WEAPON_Helper
 d g_FF_KILL_DEFUSER_Helper
 d g_FF_KILL_RESCUER_Helper
 d g_FF_KILL_WOUNDED_ENEMIES_Helper
 d g_FF_KNIFE_BOMB_PLANTER_Helper
 d g_FF_KNIFE_IN_GUNFIGHT_Helper
 d g_FF_KNIFE_KILLS_Helper
 d g_FF_KNIFE_LEVEL_REACHED_Helper
 d g_FF_KNIFE_WITHOUT_AMMO_Helper
 d g_FF_MAX_KILLED_BEFORE_DYING_Helper
 d g_FF_MAX_RESPAWNS_Helper
 d g_FF_MOLOTOV_BURNS_Helper
 d g_FF_MONEY_SPENT_Helper
 d g_FF_MULTIPLE_ATTACKS_DIED_Helper
 d g_FF_MULTIPLE_ATTACKS_LIVED_Helper
 d g_FF_NUMBER_OF_OVERKILLS_Helper
 d g_FF_NUM_TIMES_JUMPED_Helper
 d g_FF_PICKUP_BOMB_Helper
 d g_FF_POSTHUMOUS_GRENADE_KILLS_Helper
 d g_FF_PULLED_TRIGGER_Helper
 d g_FF_QUARTER_HEALTH_Helper
 d g_FF_REVENGE_Helper
 d g_FF_ROUNDS_WITHOUT_DYING_Helper
 d g_FF_SHORT_ROUND_Helper
 d g_FF_SHOTS_FIRED_GG_Helper
 d g_FF_SHOTS_FIRED_Helper
 d g_FF_SINGLE_GRENADE_KILLS_Helper
 d g_FF_STEPS_TAKEN_Helper
 d g_FF_SURVIVAL_TIME_Helper
 d g_FF_TASER_KILL_Helper
 d g_FF_TER_WIN_TIME_Helper
 d g_FF_TICKING_TIME_Helper
 d g_FF_T_ACCURACY_Helper
 d g_FF_T_WIN_NO_CASUALTIES_Helper
 d g_FF_T_WIN_NO_KILLS_Helper
 d g_FF_USED_ALL_AMMO_Helper
 d g_FF_USED_MULTIPLE_WEAPONS_Helper
 d g_FF_WON_AS_LAST_MEMBER_Helper
 d g_HunterFollowFormation
 d g_HunterFollowFormationSlots
 d g_InterpolatorNameMap
 d g_JobType_CGCClientJobServerUpdateVersion
 d g_JobType_CGCClientJobServerWelcome
 d g_JobType_CGCDev_NewItemRequestResponse
 d g_JobType_CGCItemAcknowledged
 d g_JobType_ClientJob_EMsgGCCStrike15_v2_GC2ServerReservationUpdate
 d g_JobType_ClientJob_EMsgGCCStrike15_v2_GiftsLeaderboardResponse
 d g_JobType_ClientJob_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 d g_JobType_ClientJob_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 d g_JobType_ClientJob_EMsgGCGiftedItems
 d g_MediumFollowFormation
 d g_MediumFollowFormationSlots
 d g_NameMap
 d g_NullSurface
 d g_ProficiencyNames
 d g_Script_spawn_helper
 d g_Script_vscript_server
 d g_ServerSideFlexControllers
 d g_SidekickFollowFormation
 d g_SidekickFollowFormationSlots
 d g_SimpleFollowFormation
 d g_SimpleFollowFormationSlots
 d g_TightFollowFormation
 d g_TightFollowFormationSlots
 d g_TopDownTightFollowFormation
 d g_VortigauntFollowFormation
 d g_VortigauntFollowFormationSlots
 d g_WideFollowFormation
 d g_WideFollowFormationSlots
 d g_bCleanupDatObject
 d g_bEnableProxy
 d g_nCommandClientIndex
 d g_pInterfaceGlobals
 d g_pSoundLevels
 d ggWeaponAliasNameList
 d glassAngularTable
 d glassLinearTable
 d intconverter
 d npcAngularTable
 d npcLinearTable
 d p_floatconverter
 d p_intconverter
 d playerAngularTable
 d playerCallback
 d playerLinearTable
 d playerVehicleAngularTable
 d playerVehicleLinearTable
 d primaryWeaponBuyInfoCT
 d primaryWeaponBuyInfoT
 d s_BotManager
 d s_ChildOperatorDefinition
 d s_DamageTypeToStrTable
 d s_DefaultAccessor
 d s_DefaultParticleSystemQuery
 d s_EItemCriteriaOperator
 d s_EItemType
 d s_HalloweenMaskModels
 d s_IKSaveRestoreOp
 d s_LastFileLoadingFrom
 d s_NameMap
 d s_ParticleSystemQuery
 d s_PlayerInfoManager
 d s_PrecacheHandler
 d s_PreserveEnts
 d s_RemapOperatorNameTable
 d s_RtEnvNameMap
 d s_SoundPatchSaveRestoreOps
 d s_TooltipWindow
 d s_WeaponAliasTranslationInfo
 d s_bSortAscending
 d s_bSortAscendingSecondary
 d s_iDuplicateIndex
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d s_pPrecacheResourceTypeName
 d s_shared_quote
 d secondaryWeaponBuyInfoCT
 d secondaryWeaponBuyInfoT
 d stringconverter
 d textureidconverter
 d typeinfo for (anonymous namespace)::CPlayerInfoManager_V1
 d typeinfo for (anonymous namespace)::CaptionGripPanel
 d typeinfo for (anonymous namespace)::GripPanel
 d typeinfo for (anonymous namespace)::IPlayerInfoManager_V1
 d typeinfo for (anonymous namespace)::ScrollBarButton
 d typeinfo for CCSGameRules::CleanUpMap()::CCSMapEntityFilter
 d typeinfo for CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper
 d typeinfo for CHostage::HostageRescueZoneTouch(inputdata_t&)::CSimpleHostageRescueMVP
 d typeinfo for CPlantedC4::C4Think()::CPlantedC4DefusedMVP
 d typeinfo for CPlantedC4::Explode(CGameTrace*, int)::CPlantedC4ExplodedMVP
 d vgui::Panel::OnOldMessage(KeyValues*, unsigned int)::s_bDebugMessages
 d vtable for (anonymous namespace)::CPlayerInfoManager_V1
 d vtable for (anonymous namespace)::CaptionGripPanel
 d vtable for (anonymous namespace)::GripPanel
 d vtable for (anonymous namespace)::ScrollBarButton
 d vtable for CCSGameRules::CleanUpMap()::CCSMapEntityFilter
 d vtable for CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper
 d vtable for CHostage::HostageRescueZoneTouch(inputdata_t&)::CSimpleHostageRescueMVP
 d vtable for CPlantedC4::C4Think()::CPlantedC4DefusedMVP
 d vtable for CPlantedC4::Explode(CGameTrace*, int)::CPlantedC4ExplodedMVP
 d xposconverter
 d yposconverter
 daylight
 dlerror
 dlopen
 dlsym
 dup
 exp
 expf
 fflush
 floor
 floorf
 fmod
 fmodf
 fprintf
 free
 fstat
 futimes
 g_ClockSpeed
 g_ClockSpeedMillisecondsMultiplier
 g_ClockSpeedSecondsMultiplier
 g_VProfCurrentProfile
 g_VProfSignalSpike
 g_dwClockSpeed
 g_nThreadID
 g_pMemAlloc
 g_pSteamClientGameServer
 g_pThreadPool
 getcwd
 localtime
 log
 log10
 logf
 lseek
 malloc
 malloc_size
 mbstowcs
 memchr
 memcmp
 memcpy
 memmove
 memset
 memset_pattern16
 mkdir
 mktime$UNIX2003
 open$UNIX2003
 pow
 powf
 printf
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 qsort
 r .memset_pattern
 r .memset_pattern129
 r AI_NAVIGATOR_SAVE_VERSION
 r CAI_BaseNPC::NPCThink()::g_DecisionIntervals
 r CAI_BaseNPC::StartNPC()::nextThinkTimes
 r CAI_BaseNPC::UpdateEfficiency(bool)::mappings
 r CAI_BaseNPC::UpdateEfficiency(bool)::stateBase
 r CAI_Motor::MoveNormalExecute(AILocalMoveGoal_t const&)::moveResults
 r CAI_Navigator::Move(float)::failures
 r CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLines(Vector const&, Vector const&, Vector const&, AIMoveTrace_t const&, AIMoveTrace_t const&, bool)::s_TriangulationColor
 r CAI_ScriptConditions::EvalState(CAI_ScriptConditions::EvalArgs_t const&)::stateVals
 r CAI_ScriptedSchedule::StartSchedule(CAI_BaseNPC*)::forcedStatesMap
 r CBaseGameStats_Driver::SendData()::szFileName
 r CWeaponDatabase::LoadManifest()::szEncryptionKey
 r GCSDK::k_rgchUnknown
 r GCSDK::s_MemPoolConfigAllocSize
 r GetPlayerID(CCSPlayer*)::s_botIDs
 r MAX_LOCAL_NAV_DIST_FLY
 r MAX_LOCAL_NAV_DIST_GROUND
 r MAX_PROBE_DIST
 r NO_PVS_ROUTE_SIMPLIFY_TIME_DELAY
 r PLANE_SOLVER_THINK_FREQUENCY
 r QUICK_SIMPLIFY_TIME_DELAY
 r ROUTE_SIMPLIFY_TIME_DELAY
 r TIME_DELAY_FULL_DIRECT_PROBE
 r UTIL_DrawBox(Extent*, int, int, int, int)::edge
 r border
 r cpdext
 r cpdist
 r cplens
 r cplext
 r crc_table
 r fixed_td
 r fixed_tl
 r gSizes
 r g_AI_MoveSuggWeights
 r g_nRandomValues
 r ice_keyrot
 r ice_pbox
 r ice_smod
 r ice_sxor
 r inflate_mask
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CGCStorePurchaseInit_LineItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgAdjustItemEquippedState_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgApplyEggEssence_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgApplyPennantUpgrade_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgApplyStatTrakSwap_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgApplySticker_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgApplyStrangePart_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgConVarValue_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgConsumableExhausted_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgDevNewItemRequest_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCBannedWordListRequest_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCBannedWordListResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCBannedWord_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCClientDisplayNotification_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCClientVersionUpdated_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCCollectItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCError_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCIncrementKillCountResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCItemPreviewItemBoughtNotification_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCNameItemNotification_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCReportAbuseResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCReportAbuse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCRequestAnnouncementsResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCRequestAnnouncements_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCServerVersionUpdated_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCShowItemsPickedUp_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseCancelResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseCancel_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseFinalizeResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseFinalize_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseInitResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseInit_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCBannedWordListBroadcast_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCBannedWordListUpdated_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCBroadcastConsoleCommand_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCDirtyMultipleSDOCache_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCDirtySDOCache_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCIsTrustedServerResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCIsTrustedServer_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCRequestPassportItemGrant_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCUpdateSQLKeyValue_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCToGCWebAPIAccountChanged_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGameServerInfo_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgIncrementKillCountAttribute_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgInvitationCreated_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgInviteToParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgItemAcknowledged__DEPRECATED_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgKickFromParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgLANServerAvailable_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgLeaveParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPartyInviteResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgReplayUploadedToYouTube_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgReplicateConVars_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgRequestInventoryRefresh_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSDONoMemcached_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSelectItemPresetForClassReply_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSelectItemPresetForClass_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgServerAvailable_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSetItemPositions_ItemPosition_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSetItemPositions_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSetPresetItemPosition_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSortItems_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgStoreGetUserDataResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgStoreGetUserData_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSystemBroadcast_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgUpdateItemSchema_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgUseItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconClaimCode_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconDefaultEquippedDefinitionInstanceClient_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconGameAccountClient_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemAttribute_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemDropRateBonus_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemEquipped_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemEventTicket_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemLeagueViewPass_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemPresetInstance_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemCriteriaCondition_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemCriteria_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemRecipe_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOLobbyInvite_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOPartyInvite_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOSelectedItemPreset_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::AccountActivity_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CAttribute_String_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CClientHeaderOverwatchEvidence_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_MatchInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_MatchmakingLockedInMatch_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentGroupTeam_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentGroup_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentMatchDraft_Entry_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentMatchDraft_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CDataGCCStrike15_v2_TournamentSection_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CEconItemPreviewDataBlock_Sticker_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CEconItemPreviewDataBlock_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgCStrike15Welcome_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_AccountPrivacySettings_Setting_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_AccountPrivacySettings_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Client2GCTextMsg_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientCommendPlayer_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientReportPlayer_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientReportResponse_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientReportServer_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientRequestJoinFriendData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientRequestJoinServerData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientRequestPlayersProfile_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientSubmitSurveyVote_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GC2ClientTextMsg_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GC2ClientTournamentInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GC2ServerReservationUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GiftsLeaderboardRequest_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_GiftsLeaderboardResponse_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchEndRunRewardDrops_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchListRequestTournamentGames_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchList_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingClient2GCHello_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingGCOperationalStats_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingServer2GCKick_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingServerMatchEnd_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingServerRoundStats_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingStart_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_MatchmakingStop_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_PlayerEarnedRewardNotification_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_PlayersProfile_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Predictions_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Server2GCClientValidate_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCStrike15_v2_WatchInfoUsers_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCCstrike15_v2_ClientRequestNewMission_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGCToGCReloadVersions_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGC_ServerQuestUpdateData_PlayerQuestData_LevelProgressData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGC_ServerQuestUpdateData_PlayerQuestData_QuestItemData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGC_ServerQuestUpdateData_PlayerQuestData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgGC_ServerQuestUpdateData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CMsgItemAcknowledged_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CPreMatchInfoData_TeamStats_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::CPreMatchInfoData_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::DetailedSearchStatistic_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::GameServerPing_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::GlobalStatistics_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::IpAddressMask_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::OperationalStatisticDescription_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::OperationalStatisticElement_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::OperationalStatisticsPacket_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::PlayerCommendationInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::PlayerMedalsInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::PlayerRankingInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::ServerHltvInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::TournamentEvent_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::TournamentMatchSetup_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::TournamentPlayer_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::TournamentTeam_offsets_
 r protobuf_AssignDesc_cstrike15_5fgcmessages_2eproto()::WatchableMatchInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_AchievementEvent_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_AdjustMoney_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_AmmoDenied_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_BarTime_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_CallVoteFailed_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ClientInfo_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_CloseCaptionDirect_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_CloseCaption_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_CurrentTimescale_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Damage_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_DesiredTimescale_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_DisconnectToLobby_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_DisplayInventory_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Fade_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_GameTitle_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Geiger_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_GlowPropTurnOff_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_HintText_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_HudMsg_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_HudText_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ItemDrop_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ItemPickup_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_KeyHintText_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_KillCam_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_MarkAchievement_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_MatchEndConditions_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_MatchStatsUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_PlayerStatsUpdate_Stat_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_PlayerStatsUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ProcessSpottedEntityUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_RadioText_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_RawAudio_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ReloadEffect_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ReportHit_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_RequestState_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ResetHud_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_RoundBackupFilenames_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Rumble_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SayText2_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SayText_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SendAudio_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SendLastKillerDamageToClient_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SendPlayerItemDrops_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_SendPlayerItemFound_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ServerRankRevealAll_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ServerRankUpdate_RankUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ServerRankUpdate_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Shake_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_ShowMenu_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_StopSpectatorMode_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_TextMsg_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_Train_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VGUIMenu_Subkey_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VGUIMenu_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VoiceMask_PlayerMask_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VoiceMask_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VoteFailed_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VotePass_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VoteSetup_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_VoteStart_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_WarmupHasEnded_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_XRankGet_offsets_
 r protobuf_AssignDesc_cstrike15_5fusermessages_2eproto()::CCSUsrMsg_XRankUpd_offsets_
 r protobuf_AssignDesc_econ_5fgcmessages_2eproto()::CMsgApplyAutograph_offsets_
 r protobuf_AssignDesc_econ_5fgcmessages_2eproto()::CMsgGCGiftedItems_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CGCToGCMsgMasterAck_Response_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CGCToGCMsgMasterAck_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CGCToGCMsgMasterStartupComplete_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CGCToGCMsgRoutedReply_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CGCToGCMsgRouted_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgAccountDetails_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgClientHello_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgClientWelcome_Location_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgClientWelcome_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgConnectionStatus_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgGCMultiplexMessage_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgGCRequestSessionIPResponse_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgGCRequestSessionIP_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgGCUpdateSessionIP_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheHaveVersion_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscribed_SubscribedType_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscribed_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscriptionCheck_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscriptionRefresh_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheUnsubscribed_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheVersion_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOIDOwner_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOMultipleObjects_SingleObject_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOMultipleObjects_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOSingleObject_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_GetContributors_Request_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_GetContributors_Response_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_PopulateItemDescriptions_Request_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_SetItemPaymentRules_Request_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CWorkshop_SetItemPaymentRules_Response_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_BaselineAck_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_ClientInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_CmdKeyValues_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_FileCRCCheck_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_ListenEvents_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_LoadingProgress_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_Move_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_RespondCvarValue_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_SplitPlayerConnect_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_VoiceData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsgQAngle_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsgRGBA_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsgVector2D_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsgVector_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsg_CVars_CVar_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CMsg_CVars_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_Disconnect_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_File_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_NOP_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_PlayerAvatarData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_SetConVar_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_SignonState_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_SplitScreenUser_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_StringCmd_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CNETMsg_Tick_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_BSPDecal_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ClassInfo_class_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ClassInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_CmdKeyValues_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_CreateStringTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_CrosshairAngle_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_EncryptedData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_EntityMsg_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_FixAngle_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_descriptor_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_key_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEvent_key_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEvent_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GetCvarValue_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Menu_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_PacketEntities_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_PaintmapData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Prefetch_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Print_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SendTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SendTable_sendprop_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ServerInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SetPause_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SetView_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Sounds_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Sounds_sounddata_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SplitScreen_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_TempEntities_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_UpdateStringTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_UserMessage_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_VoiceData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_VoiceInit_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetIPLocationResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetIPLocation_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetSystemStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetSystemStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedDelete_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGetResponse_ValueTag_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGetResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGet_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedSet_KeyPair_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedSet_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgSQLStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgSQLStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgSystemStatsSchema_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCSystemMsg_GetAccountDetails_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCSystemMsg_GetAccountDetails_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCSystemMsg_GetPurchaseTrust_Request_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCSystemMsg_GetPurchaseTrust_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CIPLocationInfo_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMAddFreeLicenseResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMAddFreeLicense_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMFindAccountsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMFindAccounts_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetLicensesResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetLicenses_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_Stats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGrantGuestPasses2Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGrantGuestPasses2_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmailResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_PersonaNameReplacementToken_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_ReplacementToken_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCCheckFriendship_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCCheckFriendship_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetCommandListResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetCommandList_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetEmailTemplateResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetEmailTemplate_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetPartnerAccountLink_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetPartnerAccountLink_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetPersonaNames_Response_PersonaName_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetPersonaNames_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetPersonaNames_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCHAccountVacStatusChange_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCHUpdateSession_ExtraField_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCHUpdateSession_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetClientMsgRouting_Entry_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetClientMsgRouting_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetClientMsgRouting_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetDirectory_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetDirectory_SubGC_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetDirectory_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetWebAPIRouting_Entry_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetWebAPIRouting_Response_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgMasterSetWebAPIRouting_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgSetOptions_MessageRange_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgSetOptions_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCMsgWebAPIJobRequestForwardResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCRoutingInfo_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_QueryParam_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_RequestHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpResponse_ResponseHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgNotificationOfSuspiciousActivity_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgNotifyWatchdog_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgPackageLicense_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgProtoBufHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgWebAPIKey_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgWebAPIRequest_offsets_
 r pulCRCTable
 r s_ExtIndices
 r s_MatIndices
 r s_pAttributeSize
 r s_pDangerDistFactor
 r typeinfo name for (anonymous namespace)::CPlayerInfoManager_V1
 r typeinfo name for (anonymous namespace)::CaptionGripPanel
 r typeinfo name for (anonymous namespace)::GripPanel
 r typeinfo name for (anonymous namespace)::IPlayerInfoManager_V1
 r typeinfo name for (anonymous namespace)::ScrollBarButton
 r typeinfo name for CCSGameRules::CleanUpMap()::CCSMapEntityFilter
 r typeinfo name for CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper
 r typeinfo name for CHostage::HostageRescueZoneTouch(inputdata_t&)::CSimpleHostageRescueMVP
 r typeinfo name for CPlantedC4::C4Think()::CPlantedC4DefusedMVP
 r typeinfo name for CPlantedC4::Explode(CGameTrace*, int)::CPlantedC4ExplodedMVP
 r wszCantBeginLine
 r wszCantBreakRepeated
 r wszCantEndLine
 raise
 read$UNIX2003
 realloc
 sched_yield
 sin
 sinf
 snprintf
 sprintf
 sscanf
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::__throw_bad_alloc()
 std::__throw_length_error(char const*)
 std::__throw_logic_error(char const*)
 std::__throw_out_of_range(char const*)
 std::allocator<char>::allocator()
 std::allocator<char>::~allocator()
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 std::exception::~exception()
 std::ios_base::Init::Init()
 std::ios_base::Init::~Init()
 std::string::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
 std::string::_M_iend() const
 std::string::_M_leak_hard()
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
 std::string::_Rep::_M_destroy(std::allocator<char> const&)
 std::string::_Rep::_M_refdata()
 std::string::_Rep::_M_set_length_and_sharable(unsigned long)
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
 std::string::_Rep::_S_empty_rep_storage
 std::string::_S_copy_chars(char*, char*, char*)
 std::string::_S_empty_rep()
 std::string::append(char const*)
 std::string::append(char const*, unsigned long)
 std::string::append(std::string const&)
 std::string::append(std::string const&, unsigned long, unsigned long)
 std::string::append(unsigned long, char)
 std::string::assign(char const*)
 std::string::assign(char const*, unsigned long)
 std::string::assign(std::string const&)
 std::string::begin()
 std::string::c_str() const
 std::string::capacity() const
 std::string::clear()
 std::string::compare(char const*) const
 std::string::compare(std::string const&) const
 std::string::compare(unsigned long, unsigned long, std::string const&) const
 std::string::data() const
 std::string::empty() const
 std::string::end()
 std::string::erase(unsigned long, unsigned long)
 std::string::find_first_of(char, unsigned long) const
 std::string::find_last_of(char, unsigned long) const
 std::string::length() const
 std::string::operator+=(char const*)
 std::string::operator+=(char)
 std::string::operator+=(std::string const&)
 std::string::operator=(char const*)
 std::string::operator=(std::string const&)
 std::string::operator[](unsigned long)
 std::string::operator[](unsigned long) const
 std::string::push_back(char)
 std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*, char const*)
 std::string::reserve(unsigned long)
 std::string::resize(unsigned long)
 std::string::resize(unsigned long, char)
 std::string::size() const
 std::string::substr(unsigned long, unsigned long) const
 std::terminate()
 strcasecmp
 strcat
 strchr
 strcmp
 strcpy
 strerror$UNIX2003
 strftime$UNIX2003
 strlen
 strncat
 strncmp
 strrchr
 strstr
 strtod$UNIX2003
 strtof$UNIX2003
 strtok
 strtok_r
 strtol
 strtoll
 strtoul
 strtoull
 swprintf
 swscanf
 t (anonymous namespace)::CPlayerInfoManager_V1::GetPlayerInfo(edict_t*)
 t (anonymous namespace)::CaptionGripPanel::moved(int, int)
 t (anonymous namespace)::CaptionGripPanel::tryToDock(unsigned int, int&, int&)
 t (anonymous namespace)::CaptionGripPanel::~CaptionGripPanel()
 t (anonymous namespace)::GripPanel::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::GripPanel::GripPanel(vgui::Frame*, char const*, int, int)
 t (anonymous namespace)::GripPanel::OnCursorMoved(int, int)
 t (anonymous namespace)::GripPanel::OnMouseCaptureLost()
 t (anonymous namespace)::GripPanel::OnMouseDoublePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::GripPanel::Paint()
 t (anonymous namespace)::GripPanel::PaintBackground()
 t (anonymous namespace)::GripPanel::moved(int, int)
 t (anonymous namespace)::GripPanel::~GripPanel()
 t (anonymous namespace)::ScrollBarButton::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::ScrollBarButton::OnMouseFocusTicked()
 t (anonymous namespace)::ScrollBarButton::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::~ScrollBarButton()
 t (anonymous namespace)::__CreateCPlayerInfoManager_V1IPlayerInfoManager_V1_interface()
 t (anonymous namespace)::protobuf_RegisterTypes(std::string const&)
 t AlignBoxes(matrix3x4_t*, Vector const&, Vector const&)
 t AnalysisProgress(char const*, int, int, bool)
 t ArmsRaceSpawnPointSortFunction(SpawnPoint* const*, SpawnPoint* const*)
 t AscendingSortFunc(void const*, void const*)
 t BombSortPredicate(CCSPlayer* const*, CCSPlayer* const*)
 t BotGotoArea(CNavArea*)
 t BuildTeleportList_r(CBaseEntity*, CUtlVector<TeleportListEntry_t, CUtlMemory<TeleportListEntry_t, int> >&)
 t BuyRandom()
 t CCSGameRules::CleanUpMap()::CCSMapEntityFilter::CreateNextEntity(char const*)
 t CCSGameRules::CleanUpMap()::CCSMapEntityFilter::ShouldCreateEntity(char const*)
 t CC_FadeIn(CCommand const&)
 t CC_FadeOut(CCommand const&)
 t CC_ResetGameStats(CCommand const&)
 t CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper::OnIterateAttributeValue(CEconItemAttributeDefinition const*, CAttribute_String const&)
 t CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper::OnIterateAttributeValue(CEconItemAttributeDefinition const*, Vector const&)
 t CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper::OnIterateAttributeValue(CEconItemAttributeDefinition const*, float)
 t CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper::OnIterateAttributeValue(CEconItemAttributeDefinition const*, unsigned int)
 t CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const::CEconItemAttributeIterator_EconItemViewWrapper::~CEconItemAttributeIterator_EconItemViewWrapper()
 t CHostage::HostageRescueZoneTouch(inputdata_t&)::CSimpleHostageRescueMVP::CalculateEndOfRoundMVP()
 t CPlantedC4::C4Think()::CPlantedC4DefusedMVP::CalculateEndOfRoundMVP()
 t CPlantedC4::Explode(CGameTrace*, int)::CPlantedC4ExplodedMVP::CalculateEndOfRoundMVP()
 t CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)
 t CalcZeroframeData(CStudioHdr const*, studiohdr_t const*, virtualgroup_t const*, mstudiobone_t const*, mstudioanimdesc_t&, float, Vector*, Quaternion*, int, float)
 t CalculateKeyValuesCRCRecursive(KeyValues*, unsigned long*, bool)
 t CallbackHighlight(CBaseEntity*)
 t CallbackReport(CBaseEntity*)
 t ChoreEventStartTimeLessFunc(CChoreoEvent* const&, CChoreoEvent* const&)
 t ClipRayToHitbox(Ray_t const&, mstudiobbox_t*, matrix3x4_t&, CGameTrace&)
 t CommandNavCheckFloor()
 t CommandNavCheckStairs()
 t CommandNavSelectOverlapping()
 t CommandNavUpdateBlocked()
 t CompareSpawnOrder(HierarchicalSpawn_t*, HierarchicalSpawn_t*)
 t ComputePushStartMatrix(matrix3x4_t&, CBaseEntity*, pushblock_t const&)
 t ComputeSeparatingPlane(matrix3x4_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, cplane_t*)
 t ComputeSpawnHierarchyDepth_r(CBaseEntity*)
 t CreateAirboat(CBasePlayer*)
 t CreateFunFact_FF_BEST_ACCURACY()
 t CreateFunFact_FF_BEST_CT_ACCURACY()
 t CreateFunFact_FF_BEST_T_ACCURACY()
 t CreateFunFact_FF_BLIND_KILLS()
 t CreateFunFact_FF_BOMB_CARRIERS()
 t CreateFunFact_FF_BOMB_PLANTED_BEFORE_KILL()
 t CreateFunFact_FF_BOTS_ASSUMED()
 t CreateFunFact_FF_BROKE_WINDOWS()
 t CreateFunFact_FF_CT_ACCURACY()
 t CreateFunFact_FF_CT_WIN_NO_CASUALTIES()
 t CreateFunFact_FF_CT_WIN_NO_KILLS()
 t CreateFunFact_FF_CT_WIN_TIME()
 t CreateFunFact_FF_DAMAGE_MULTIPLE_ENEMIES()
 t CreateFunFact_FF_DAMAGE_NO_KILLS()
 t CreateFunFact_FF_DAMAGE_WITH_GRENADES()
 t CreateFunFact_FF_DEFAULT_WEAPON()
 t CreateFunFact_FF_DEFENDED_BOMB()
 t CreateFunFact_FF_DEFUSED_WITH_DROPPED_KIT()
 t CreateFunFact_FF_DEFUSE_WAS_CLOSE_CALL_HUNDREDTHS()
 t CreateFunFact_FF_DEFUSE_WAS_CLOSE_CALL_TENTHS()
 t CreateFunFact_FF_DEFUSE_WAS_CLOSE_CALL_THOUSANDTHS()
 t CreateFunFact_FF_DOMINATION()
 t CreateFunFact_FF_DONATED_WEAPONS()
 t CreateFunFact_FF_EMPTY_GUNS()
 t CreateFunFact_FF_FAILED_BOMB_PLANTS()
 t CreateFunFact_FF_FALLBACK()
 t CreateFunFact_FF_FALL_DAMAGE()
 t CreateFunFact_FF_FIRST_BLOOD()
 t CreateFunFact_FF_FIRST_KILL()
 t CreateFunFact_FF_GRENADES_THROWN()
 t CreateFunFact_FF_ITEMS_DROPPED_VALUE()
 t CreateFunFact_FF_ITEMS_PURCHASED()
 t CreateFunFact_FF_KILLED_ALL_ENEMIES()
 t CreateFunFact_FF_KILLED_ENEMIES()
 t CreateFunFact_FF_KILLED_HALF_OF_ENEMIES()
 t CreateFunFact_FF_KILLS_HEADSHOTS()
 t CreateFunFact_FF_KILLS_WITH_GRENADES()
 t CreateFunFact_FF_KILLS_WITH_LAST_ROUND()
 t CreateFunFact_FF_KILLS_WITH_STATTRAK_WEAPON()
 t CreateFunFact_FF_KILL_DEFUSER()
 t CreateFunFact_FF_KILL_RESCUER()
 t CreateFunFact_FF_KILL_WOUNDED_ENEMIES()
 t CreateFunFact_FF_KNIFE_BOMB_PLANTER()
 t CreateFunFact_FF_KNIFE_IN_GUNFIGHT()
 t CreateFunFact_FF_KNIFE_KILLS()
 t CreateFunFact_FF_KNIFE_LEVEL_REACHED()
 t CreateFunFact_FF_KNIFE_WITHOUT_AMMO()
 t CreateFunFact_FF_MAX_KILLED_BEFORE_DYING()
 t CreateFunFact_FF_MAX_RESPAWNS()
 t CreateFunFact_FF_MOLOTOV_BURNS()
 t CreateFunFact_FF_MONEY_SPENT()
 t CreateFunFact_FF_MULTIPLE_ATTACKS_DIED()
 t CreateFunFact_FF_MULTIPLE_ATTACKS_LIVED()
 t CreateFunFact_FF_NUMBER_OF_OVERKILLS()
 t CreateFunFact_FF_NUM_TIMES_JUMPED()
 t CreateFunFact_FF_PICKUP_BOMB()
 t CreateFunFact_FF_POSTHUMOUS_GRENADE_KILLS()
 t CreateFunFact_FF_PULLED_TRIGGER()
 t CreateFunFact_FF_QUARTER_HEALTH()
 t CreateFunFact_FF_REVENGE()
 t CreateFunFact_FF_ROUNDS_WITHOUT_DYING()
 t CreateFunFact_FF_SHORT_ROUND()
 t CreateFunFact_FF_SHOTS_FIRED()
 t CreateFunFact_FF_SHOTS_FIRED_GG()
 t CreateFunFact_FF_SINGLE_GRENADE_KILLS()
 t CreateFunFact_FF_STEPS_TAKEN()
 t CreateFunFact_FF_SURVIVAL_TIME()
 t CreateFunFact_FF_TASER_KILL()
 t CreateFunFact_FF_TER_WIN_TIME()
 t CreateFunFact_FF_TICKING_TIME()
 t CreateFunFact_FF_T_ACCURACY()
 t CreateFunFact_FF_T_WIN_NO_CASUALTIES()
 t CreateFunFact_FF_T_WIN_NO_KILLS()
 t CreateFunFact_FF_USED_ALL_AMMO()
 t CreateFunFact_FF_USED_MULTIPLE_WEAPONS()
 t CreateFunFact_FF_WON_AS_LAST_MEMBER()
 t CreateJeep(CBasePlayer*)
 t Create_AnimatingImagePanel()
 t Create_Button()
 t Create_CBitmapImagePanel()
 t Create_CTreeViewListControl()
 t Create_CheckButton()
 t Create_CircularProgressBar()
 t Create_ContinuousProgressBar()
 t Create_Divider()
 t Create_EditablePanel()
 t Create_ExpandButton()
 t Create_GraphPanel()
 t Create_ImagePanel()
 t Create_Label()
 t Create_ListPanel()
 t Create_ListViewPanel()
 t Create_Menu()
 t Create_MenuBar()
 t Create_MenuButton()
 t Create_MenuItem()
 t Create_Panel()
 t Create_ProgressBar()
 t Create_RadioButton()
 t Create_RichText()
 t Create_ScalableImagePanel()
 t Create_TextEntry()
 t Create_ToggleButton()
 t Create_TreeView()
 t CreditsDone_f()
 t DebugConstraints(CBaseEntity*)
 t DefaultSortFunc(KeyValues*, KeyValues*)
 t DefaultSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t DefuserSortPredicate(CCSPlayer* const*, CCSPlayer* const*)
 t DescribeGroundList(CBaseEntity*)
 t DoEntFire(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*)
 t DoEntFireByInstanceHandle(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*)
 t DoRecordAchievementEvent(char const*, int)
 t DoUniqueString(char const*)
 t FastSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t FindDescendingLadderApproachPoint(CNavLadder const*, CNavArea const*, Vector*)
 t FindPassableSpace(CBaseEntity*, unsigned int, Vector const&, float, Vector&)
 t FindPositionInArea(CNavArea*, NavCornerType)
 t FrameTime()
 t GCSDK::SortCacheByTypeID(GCSDK::CSharedObjectTypeCache const*, GCSDK::CSharedObjectTypeCache const*)
 t GameEventLessFunc(CHLTVGameEvent const&, CHLTVGameEvent const&)
 t GetAllChildren_r(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 t GetAttribute_bool(CCSWeaponInfo const*, char const*, CSchemaFieldHandle<CEconItemAttributeDefinition>, CEconItemView const*, float)
 t GetAttribute_float(CCSWeaponInfo const*, char const*, CSchemaFieldHandle<CEconItemAttributeDefinition>, CEconItemView const*, float)
 t GetAttribute_int(CCSWeaponInfo const*, char const*, CSchemaFieldHandle<CEconItemAttributeDefinition>, CEconItemView const*, float)
 t GetFadeParms(CCommand const&, float&, color32_s&)
 t GetMapName()
 t Helper_CheckFieldAppliesToTeam(char const*, int)
 t Helper_ExtractIntegersFromValuesString(char const*, CCopyableUtlVector<unsigned int>&)
 t Helper_FilenameTokenReplace(char*, int, char const*, char const*)
 t Helper_SortWorkshopMapsMRU(DedicatedServerUGCFileInfo_t const* const*, DedicatedServerUGCFileInfo_t const* const*)
 t Helper_mp_backup_restore_from_file_sorter(char const* const*, char const* const*)
 t InferExpresserFromBaseEntity(CBaseEntity*)
 t InheritKeyValuesRTLMulti(KeyValues*, CEconItemSchema&)
 t InitGameSystems(void* (*)(char const*, int*))
 t InvokeMethod(void (IGameSystem::*)(), char const*)
 t InvokeMethodReverseOrder(void (IGameSystem::*)())
 t IsNodeOverlapped(Vector const&, Vector const&)
 t ListRecentNPCSpeech()
 t LoopSinglePlayerMaps()
 t MD5Transform(unsigned int*, unsigned int const*)
 t MarkVPhysicsDebug(CBaseEntity*)
 t NPCBuildFlags(CAI_BaseNPC*, Vector const&)
 t NavAttributeAutocomplete(char const*, char (*) [64])
 t OutputVPhysicsDebugInfo(CBaseEntity*)
 t PhysFrame(float)
 t PhysicsCheckSweep(CBaseEntity*, Vector const&, Vector const&, CGameTrace*)
 t Physics_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
 t PlaceNameAutocompleteCallback(char const*, char (*) [64])
 t PostSimulation_ImpulseEvent(IPhysicsObject*, Vector const&, Vector const&)
 t PostUpdateQueryCache()
 t PreUpdateQueryCache()
 t PrefixChanged(IConVar*, char const*, float)
 t ProcessNavigationQueries(CFunctor**, unsigned int)
 t RecursiveInheritKeyValues(KeyValues*, KeyValues*)
 t ReduceToComponentAreas(CNavArea*, bool)
 t Register_LOG_SND_EMITTERSYSTEM_Tags()
 t Register_LOG_WORKSHOP_Tags()
 t ResolveFollowupTargetToEntity(CAI_Concept&, ResponseRules::CriteriaSet&, char const*, ResponseRules::CRR_Response*)
 t ScriptDispatchParticleEffect(char const*, Vector const&, Vector const&)
 t ScriptTraceLine(Vector const&, Vector const&, HSCRIPT__*)
 t SelectSpawnSpot(char const*)
 t SelectedSetColorChaged(IConVar*, char const*, float)
 t SendProxy_Empty(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendProxy_Solid(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendProxy_SolidFlags(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendToConsole(char const*)
 t SendToConsoleServer(char const*)
 t SetCustomNameOrDescAttribute(CEconItem*, CEconItemAttributeDefinition const*, char const*)
 t SetMinMaxSize(CBaseEntity*, Vector const&, Vector const&)
 t ShouldStopProcessingTasks(CAI_BaseNPC*, int, int)
 t SpawnPointSortFunction(SpawnPoint* const*, SpawnPoint* const*)
 t SvNoMVPChangeCallback(IConVar*, char const*, float)
 t SvNoNemesisChangeCallback(IConVar*, char const*, float)
 t Sys_LoadLibrary(char const*)
 t Sys_LoadLibraryGuts(char const*)
 t TextToSoundLevel(char const*)
 t Time()
 t UTIL_GetCurrentCheckClient()
 t UtlStringLessFunc(CUtlString const&, CUtlString const&)
 t ValidateMOTDFilename(IConVar*, char const*, float)
 t VoiceServerDebug(char const*, ...)
 t WeaponInfoLookupCompare(WeaponInfoLookup* const*, WeaponInfoLookup* const*)
 t __CreateCEffectsServerIEffects_interface()
 t __CreateCGameMovementIGameMovement_interface()
 t __CreateCHLTVDirectorIHLTVDirector_interface()
 t __CreateCPlayerInfoManagerIPlayerInfoManager_interface()
 t __CreateCPluginBotManagerIBotManager_interface()
 t __CreateCPluginHelpersCheckIPluginHelpersCheck_interface()
 t __CreateCServerDLLSharedAppSystemsIServerDLLSharedAppSystems_interface()
 t __CreateCServerGameClientsIServerGameClients_interface()
 t __CreateCServerGameDLLIServerGameDLL_interface()
 t __CreateCServerGameEntsIServerGameEnts_interface()
 t __CreateCServerGameTagsIServerGameTags_interface()
 t __CreateCServerToolsIServerTools_interface()
 t __CreateGameTypesIGameTypes_interface()
 t __cxx_global_array_dtor
 t __cxx_global_array_dtor100
 t __cxx_global_array_dtor101
 t __cxx_global_array_dtor107
 t __cxx_global_array_dtor108
 t __cxx_global_array_dtor116
 t __cxx_global_array_dtor120
 t __cxx_global_array_dtor124
 t __cxx_global_array_dtor132
 t __cxx_global_array_dtor140
 t __cxx_global_array_dtor148
 t __cxx_global_array_dtor154
 t __cxx_global_array_dtor156
 t __cxx_global_array_dtor164
 t __cxx_global_array_dtor17
 t __cxx_global_array_dtor172
 t __cxx_global_array_dtor180
 t __cxx_global_array_dtor184
 t __cxx_global_array_dtor185
 t __cxx_global_array_dtor188
 t __cxx_global_array_dtor19
 t __cxx_global_array_dtor196
 t __cxx_global_array_dtor199
 t __cxx_global_array_dtor20
 t __cxx_global_array_dtor204
 t __cxx_global_array_dtor205
 t __cxx_global_array_dtor21
 t __cxx_global_array_dtor212
 t __cxx_global_array_dtor22
 t __cxx_global_array_dtor220
 t __cxx_global_array_dtor221
 t __cxx_global_array_dtor223
 t __cxx_global_array_dtor228
 t __cxx_global_array_dtor231
 t __cxx_global_array_dtor236
 t __cxx_global_array_dtor24
 t __cxx_global_array_dtor244
 t __cxx_global_array_dtor252
 t __cxx_global_array_dtor26
 t __cxx_global_array_dtor260
 t __cxx_global_array_dtor268
 t __cxx_global_array_dtor27
 t __cxx_global_array_dtor28
 t __cxx_global_array_dtor29
 t __cxx_global_array_dtor290
 t __cxx_global_array_dtor302
 t __cxx_global_array_dtor31
 t __cxx_global_array_dtor32
 t __cxx_global_array_dtor35
 t __cxx_global_array_dtor36
 t __cxx_global_array_dtor401
 t __cxx_global_array_dtor41
 t __cxx_global_array_dtor42
 t __cxx_global_array_dtor422
 t __cxx_global_array_dtor433
 t __cxx_global_array_dtor44
 t __cxx_global_array_dtor443
 t __cxx_global_array_dtor452
 t __cxx_global_array_dtor460
 t __cxx_global_array_dtor48
 t __cxx_global_array_dtor49
 t __cxx_global_array_dtor492
 t __cxx_global_array_dtor505
 t __cxx_global_array_dtor52
 t __cxx_global_array_dtor54
 t __cxx_global_array_dtor56
 t __cxx_global_array_dtor60
 t __cxx_global_array_dtor61
 t __cxx_global_array_dtor64
 t __cxx_global_array_dtor66
 t __cxx_global_array_dtor68
 t __cxx_global_array_dtor69
 t __cxx_global_array_dtor74
 t __cxx_global_array_dtor76
 t __cxx_global_array_dtor79
 t __cxx_global_array_dtor81
 t __cxx_global_array_dtor83
 t __cxx_global_array_dtor84
 t __cxx_global_array_dtor89
 t __cxx_global_array_dtor91
 t __cxx_global_array_dtor92
 t __cxx_global_array_dtor93
 t __cxx_global_array_dtor95
 t __cxx_global_array_dtor98
 t __cxx_global_var_init340
 t __cxx_global_var_init341
 t __cxx_global_var_init342
 t __cxx_global_var_init343
 t __cxx_global_var_init344
 t __cxx_global_var_init45
 t __cxx_global_var_init46
 t __cxx_global_var_init47
 t __cxx_global_var_init48
 t __cxx_global_var_init49
 t __tcf_0
 t __tcf_1
 t ai_clear_bad_links(CCommand const&)
 t ai_debug_node_connect(CCommand const&)
 t ai_dump_hints(CCommand const&)
 t ai_set_move_height_epsilon(CCommand const&)
 t ai_setenabled(CCommand const&)
 t ai_show_node(CCommand const&)
 t ai_test_los(CCommand const&)
 t ainet_generate_report(CCommand const&)
 t ainet_generate_report_only(CCommand const&)
 t bot_add(CCommand const&)
 t bot_add_ct(CCommand const&)
 t bot_add_t(CCommand const&)
 t bot_all_weapons(CCommand const&)
 t bot_control_next_all_teams(CCommand const&)
 t bot_goto_mark(CCommand const&)
 t bot_goto_selected(CCommand const&)
 t bot_kick(CCommand const&)
 t bot_kill(CCommand const&)
 t bot_knives_only(CCommand const&)
 t bot_pistols_only(CCommand const&)
 t bot_place(CCommand const&)
 t bot_snipers_only(CCommand const&)
 t buddha(CCommand const&)
 t callvote(CCommand const&)
 t cast_hull(CCommand const&)
 t cast_ray(CCommand const&)
 t clear_debug_overlays(CCommand const&)
 t computer_name(CCommand const&)
 t cs_make_vip(CCommand const&)
 t dm_reset_spawns(CCommand const&)
 t ds_get_newest_subscribed_files(CCommand const&)
 t dump_entity_sizes(CCommand const&)
 t dump_globals(CCommand const&)
 t ent_setang(CCommand const&)
 t ent_setpos(CCommand const&)
 t explode(CCommand const&)
 t explodevector(CCommand const&)
 t foundry_engine_get_mouse_control(CCommand const&)
 t foundry_engine_release_mouse_control(CCommand const&)
 t foundry_select_entity(CCommand const&)
 t foundry_sync_hammer_view(CCommand const&)
 t foundry_update_entity(CCommand const&)
 t give(CCommand const&)
 t global constructors keyed to a
 t hammer_update_entity(CCommand const&)
 t hammer_update_safe_entities(CCommand const&)
 t host_workshop_collection(CCommand const&)
 t host_workshop_map(CCommand const&)
 t kill(CCommand const&)
 t killvector(CCommand const&)
 t load_master_item_schema(CCommand const&)
 t map_setbombradius(CCommand const&)
 t map_showbombradius(CCommand const&)
 t map_showspawnpoints(CCommand const&)
 t mp_backup_restore_list_files(CCommand const&)
 t mp_backup_restore_load_file(CCommand const&)
 t mp_disable_autokick(CCommand const&)
 t mp_dump_timers(CCommand const&)
 t mp_forcewin(CCommand const&)
 t mp_warmup_end(CCommand const&)
 t mp_warmup_start(CCommand const&)
 t mpwarmuptime_f(IConVar*, char const*, float)
 t nav_add_to_selected_set_by_id(CCommand const&)
 t nav_check_connectivity(CCommand const&)
 t nav_chop_selected(CCommand const&)
 t nav_corner_lower(CCommand const&)
 t nav_corner_place_on_ground(CCommand const&)
 t nav_corner_raise(CCommand const&)
 t nav_flood_select(CCommand const&)
 t nav_gen_cliffs_approx(CCommand const&)
 t nav_merge_mesh(CCommand const&)
 t nav_save_selected(CCommand const&)
 t nav_select_blocked_areas(CCommand const&)
 t nav_select_damaging_areas(CCommand const&)
 t nav_select_half_space(CCommand const&)
 t nav_select_obstructed_areas(CCommand const&)
 t nav_select_radius(CCommand const&)
 t nav_select_stairs(CCommand const&)
 t nav_shift(CCommand const&)
 t nav_simplify_selected(CCommand const&)
 t nav_subdivide(CCommand const&)
 t nav_test_stairs(CCommand const&)
 t nav_update_lighting(CCommand const&)
 t noclip(CCommand const&)
 t npc_ammo_deplete(CCommand const&)
 t npc_freeze_unselected(CCommand const&)
 t npc_heal(CCommand const&)
 t npc_set_freeze_unselected(CCommand const&)
 t npc_thinknow(CCommand const&)
 t observer_use(CCommand const&)
 t physics_budget(CCommand const&)
 t physics_constraints(CCommand const&)
 t physics_debug_entity(CCommand const&)
 t physics_highlight_active(CCommand const&)
 t physics_report_active(CCommand const&)
 t physics_select(CCommand const&)
 t print_mapgroup_sv(CCommand const&)
 t report_entities(CCommand const&)
 t report_simthinklist(CCommand const&)
 t report_soundpatch(CCommand const&)
 t report_touchlinks(CCommand const&)
 t reset_expo(CCommand const&)
 t rr_reloadresponsesystems(CCommand const&)
 t say(CCommand const&)
 t say_team(CCommand const&)
 t scene_flush(CCommand const&)
 t scene_playvcd(CCommand const&)
 t script(CCommand const&)
 t script_debug(CCommand const&)
 t script_dump_all(CCommand const&)
 t script_execute(CCommand const&)
 t script_help(CCommand const&)
 t script_reload_code(CCommand const&)
 t script_reload_entity_code(CCommand const&)
 t script_reload_think(CCommand const&)
 t send_round_backup_file_list(CCommand const&)
 t server_game_time(CCommand const&)
 t setang_exact(CCommand const&)
 t setpos(CCommand const&)
 t setpos_exact(CCommand const&)
 t setpos_player(CCommand const&)
 t soundscape_flush(CCommand const&)
 t splitX(CNavArea*)
 t splitY(CNavArea*)
 t surfaceprop(CCommand const&)
 t sv_benchmark_force_start(CCommand const&)
 t sv_cs_dump_econ_item_stringtable(CCommand const&)
 t sv_findsoundname(CCommand const&)
 t sv_querycache_stats(CCommand const&)
 t sv_soundemitter_filecheck(CCommand const&)
 t sv_soundemitter_flush(CCommand const&)
 t sv_soundemitter_reload(CCommand const&)
 t sv_soundemitter_spew(CCommand const&)
 t sv_soundscape_printdebuginfo(CCommand const&)
 t testStitchConnection(CNavArea*, CNavArea*, Vector const&, Vector const&)
 t timeleft(CCommand const&)
 t tv_time_remaining(CCommand const&)
 t tweak_ammo_impulses(CCommand const&)
 t vehicle_flushscript(CCommand const&)
 t weapon_reload_database(CCommand const&)
 t workshop_start_map(CCommand const&)
 tan
 tanf
 time
 timezone$UNIX2003
 typeinfo for float
 typeinfo for std::bad_alloc
 typeinfo for std::exception
 typeinfo for unsigned int
 utime
 vsnprintf
 vsprintf
 vswprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 vtune
 wcschr
 wcscmp
 wcscpy
 wcslen
 wcsncat
 wcsncmp
 wcsncpy
 wcstof
 wcstol
 wcstombs
 write$UNIX2003
