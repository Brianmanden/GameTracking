 AssertMsg_ConditionFailed
 AudioConverterDispose
 AudioConverterFillComplexBuffer
 AudioConverterNew
 AudioConverterSetProperty
 AudioDeviceGetProperty
 AudioDeviceGetPropertyInfo
 AudioDeviceSetProperty
 AudioHardwareGetProperty
 AudioObjectGetPropertyData
 AudioOutputUnitStart
 AudioOutputUnitStop
 AudioQueueAddPropertyListener
 AudioQueueAllocateBuffer
 AudioQueueDispose
 AudioQueueEnqueueBuffer
 AudioQueueFreeBuffer
 AudioQueueGetProperty
 AudioQueueNewOutput
 AudioQueuePrime
 AudioQueueRemovePropertyListener
 AudioQueueSetParameter
 AudioQueueStart
 AudioQueueStop
 AudioUnitGetProperty
 AudioUnitInitialize
 AudioUnitRender
 AudioUnitSetProperty
 AudioUnitUninitialize
 B BSPHeader_t_DataDescInit::g_DataMapHolder
 B CAppSystemGroup::sm_pSortDependencies
 B CAskConnectPanel::s_pAskConnectPanel
 B CAudioSourceCachedInfo::s_bIsPrecacheSound
 B CAudioSourceCachedInfo::s_pSfx
 B CBudgetPanelShared::g_fFrameRate
 B CBudgetPanelShared::g_fFrameTimeLessBudget
 B CCLCMsg_BaselineAck::default_instance_
 B CCLCMsg_ClientInfo::default_instance_
 B CCLCMsg_ClientMessage::default_instance_
 B CCLCMsg_FileCRCCheck::default_instance_
 B CCLCMsg_ListenEvents::default_instance_
 B CCLCMsg_LoadingProgress::default_instance_
 B CCLCMsg_Move::default_instance_
 B CCLCMsg_RespondCvarValue::default_instance_
 B CCLCMsg_SplitPlayerConnect::default_instance_
 B CCLCMsg_VoiceData::default_instance_
 B CChangeFrameList::s_Allocator
 B CDebugOverlay::s_OverlayMutex
 B CDebugOverlay::s_bDrawGrid
 B CDebugOverlay::s_pOverlayText
 B CDebugOverlay::s_pOverlays
 B CDebugOverlay::s_vGridPosition
 B CDemoClassInfo::default_instance_
 B CDemoClassInfo_class_t::default_instance_
 B CDemoConsoleCmd::default_instance_
 B CDemoCustomData::default_instance_
 B CDemoCustomDataCallbacks::default_instance_
 B CDemoFileHeader::default_instance_
 B CDemoFileInfo::default_instance_
 B CDemoFullPacket::default_instance_
 B CDemoPacket::default_instance_
 B CDemoSaveGame::default_instance_
 B CDemoSendTables::default_instance_
 B CDemoStop::default_instance_
 B CDemoStringTables::default_instance_
 B CDemoStringTables_items_t::default_instance_
 B CDemoStringTables_table_t::default_instance_
 B CDemoSyncTick::default_instance_
 B CDemoUserCmd::default_instance_
 B CDmxAttribute::s_AttributeNameSymbols
 B CDmxAttribute::s_pAttributeTypeName
 B CDmxElement::s_TypeSymbols
 B CDmxKeyValues2ErrorStack::m_ErrorSymbolTable
 B CEdgeList::s_pSortSurfaces
 B CFrameSnapshot::s_Allocator
 B CGameInfo::default_instance_
 B CGameInfo_CDotaGameInfo::default_instance_
 B CGameInfo_CDotaGameInfo_CHeroSelectEvent::default_instance_
 B CGameInfo_CDotaGameInfo_CPlayerInfo::default_instance_
 B CHLTVServer::s_nTVSecretCode
 B CKeyValuesTokenReader::s_pTokenBuf
 B CMsgQAngle::default_instance_
 B CMsgVector2D::default_instance_
 B CMsgVector::default_instance_
 B CMsg_CVars::default_instance_
 B CMsg_CVars_CVar::default_instance_
 B CNETMsg_Disconnect::default_instance_
 B CNETMsg_File::default_instance_
 B CNETMsg_NOP::default_instance_
 B CNETMsg_SetConVar::default_instance_
 B CNETMsg_SignonState::default_instance_
 B CNETMsg_SplitScreenUser::default_instance_
 B CNETMsg_StringCmd::default_instance_
 B CNETMsg_Tick::default_instance_
 B CPostConnectCallback::s_nInstallOrder
 B CPostConnectCallback::s_pFirstCallback
 B CSVCMsgList_GameEvents::default_instance_
 B CSVCMsgList_GameEvents_event_t::default_instance_
 B CSVCMsgList_UserMessages::default_instance_
 B CSVCMsgList_UserMessages_usermsg_t::default_instance_
 B CSVCMsg_BSPDecal::default_instance_
 B CSVCMsg_ClassInfo::default_instance_
 B CSVCMsg_ClassInfo_class_t::default_instance_
 B CSVCMsg_CreateStringTable::default_instance_
 B CSVCMsg_CrosshairAngle::default_instance_
 B CSVCMsg_FixAngle::default_instance_
 B CSVCMsg_FullFrameSplit::default_instance_
 B CSVCMsg_GameEvent::default_instance_
 B CSVCMsg_GameEventList::default_instance_
 B CSVCMsg_GameEventList_descriptor_t::default_instance_
 B CSVCMsg_GameEventList_key_t::default_instance_
 B CSVCMsg_GameEvent_key_t::default_instance_
 B CSVCMsg_GetCvarValue::default_instance_
 B CSVCMsg_Menu::default_instance_
 B CSVCMsg_PacketEntities::default_instance_
 B CSVCMsg_PacketReliable::default_instance_
 B CSVCMsg_Prefetch::default_instance_
 B CSVCMsg_Print::default_instance_
 B CSVCMsg_SendTable::default_instance_
 B CSVCMsg_SendTable_sendprop_t::default_instance_
 B CSVCMsg_ServerInfo::default_instance_
 B CSVCMsg_SetPause::default_instance_
 B CSVCMsg_SetView::default_instance_
 B CSVCMsg_Sounds::default_instance_
 B CSVCMsg_Sounds_sounddata_t::default_instance_
 B CSVCMsg_SplitScreen::default_instance_
 B CSVCMsg_TempEntities::default_instance_
 B CSVCMsg_UpdateStringTable::default_instance_
 B CSVCMsg_UserMessage::default_instance_
 B CSVCMsg_VoiceData::default_instance_
 B CSVCMsg_VoiceInit::default_instance_
 B CSerializedEntity::s_Allocator
 B CUtlSymbol::s_pSymbolTable
 B CVProfGraphPanel::m_CurrentNode
 B CWorldRenderList::g_Pool
 B CollectionColor
 B ConCommandBase::s_pAccessor
 B ConCommandBase::s_pConCommandBases
 B ConnectColor
 B ConsoleLogger::m_index
 B DebugMXRParse
 B DownloadColor
 B DownloadCompleteColor
 B DownloadErrorColor
 B GAME_HEADER_DataDescInit::g_DataMapHolder
 B INT_VECTOR3_ORIGIN
 B LOG_CONSOLE
 B LOG_DownloadManager
 B LOG_SERVER_LOG
 B LOG_SND_OPERATORS
 B LOG_SOUND_OPERATOR_SYSTEM
 B LOG_StaticPropManager
 B MatViewOverride::s_viewParamsLast
 B MatViewOverride::s_viewParamsReq
 B NotExecuteColor
 B OpColor
 B OpNameColor
 B ResultColor
 B SAVELIGHTSTYLE_DataDescInit::g_DataMapHolder
 B SAVE_HEADER_DataDescInit::g_DataMapHolder
 B SinCosTable
 B StackColor
 B VTFFileBaseHeader_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_1_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_2_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_3_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderX360_t_DataDescInit::g_DataMapHolder
 B VTFFileHeader_t_DataDescInit::g_DataMapHolder
 B adsp_alley_min
 B adsp_courtyard_min
 B adsp_duct_min
 B adsp_hall_min
 B adsp_opencourtyard_min
 B adsp_openspace_min
 B adsp_openstreet_min
 B adsp_openwall_min
 B adsp_room_min
 B adsp_street_min
 B adsp_tunnel_min
 B amps
 B askconnect_accept
 B avi
 B bPrintSetMixerDebug
 B bik
 B blackbox
 B blocklights
 B budget_averages_window
 B budget_background_alpha
 B budget_bargraph_background_alpha
 B budget_bargraph_range_ms
 B budget_history_numsamplesvisible
 B budget_history_range_ms
 B budget_panel_bottom_of_history_fraction
 B budget_panel_height
 B budget_panel_width
 B budget_panel_x
 B budget_panel_y
 B budget_peaks_window
 B budget_show_averages
 B budget_show_history
 B budget_show_peaks
 B building_cubemaps
 B channels
 B circle_paintsplat_alpha_offset
 B circle_paintsplat_bias
 B circle_paintsplat_enabled
 B circle_paintsplat_max_alpha_noise
 B circle_paintsplat_noise_enabled
 B circle_paintsplat_radius
 B cl_cache_sendtable
 B cl_clock_correction
 B cl_clock_correction_adjustment_max_amount
 B cl_clock_correction_adjustment_max_offset
 B cl_clock_correction_adjustment_min_offset
 B cl_clock_correction_force_server_tick
 B cl_clock_showdebuginfo
 B cl_clockdrift_max_ms
 B cl_clockdrift_max_ms_threadmode
 B cl_cloud_settings
 B cl_disable_steam_p2p
 B cl_dlights
 B cl_elights
 B cl_entityreport
 B cl_force_steam_p2p
 B cl_interpolate
 B cl_language
 B cl_logofile
 B cl_movieinfo
 B cl_name
 B cl_resend
 B cl_screenshotname
 B cl_sendtable_cache_filename
 B cl_showpluginmessages
 B cl_skipslowpath
 B cl_snapshot_fullpathname
 B cl_takejpeg
 B cl_takesnapshot
 B cl_timeout
 B cl_voice_buffer_time
 B cl_voice_hltv_buffer_time
 B clientleafsystem
 B clientport
 B closecaption
 B cmd_source
 B colorcorrection
 B com_basedir
 B com_gamedir
 B com_ignorecolons
 B com_token
 B con_debuglog
 B con_debuglogmapprefixed
 B con_initialized
 B con_logfile
 B con_nprint_bgalpha
 B con_nprint_bgborder
 B coop
 B crss
 B cvar
 B d_lightstyleframe
 B d_lightstylenumframes
 B d_lightstylevalue
 B das_debug
 B das_door_height
 B das_low_ceiling
 B das_max_z_trace_length
 B das_process_overhang_spaces
 B das_wall_height
 B deathmatch
 B debug_circle_splat
 B debug_map_crc
 B debug_paint_seam
 B decallist_t_DataDescInit::g_DataMapHolder
 B dedicated
 B demo_debug
 B demoplayer
 B demorecorder
 B developer
 B dfrs
 B disableStaticPropLoading
 B disp_dynamic
 B display_game_events
 B dlys
 B dsp_automatic
 B dsp_db_min
 B dsp_db_mixdrop
 B dsp_dist_max
 B dsp_dist_min
 B dsp_enhance_stereo
 B dsp_facingaway
 B dsp_mix_max
 B dsp_mix_min
 B dsp_off
 B dsp_player
 B dsp_room
 B dsp_room_type
 B dsp_slow_cpu
 B dsp_spatial
 B dsp_speaker
 B dsp_vol_2ch
 B dsp_vol_4ch
 B dsp_vol_5ch
 B dsp_volume
 B dsp_water
 B dsps
 B dynamic_tonemap
 B efos
 B enable_debug_overlays
 B engine_generatedotamapheightfielddata
 B engine_no_focus_sleep
 B engine_usedotamap_heightfield_data
 B entitylist
 B envs
 B fast_fogvolume
 B flts
 B fps_max
 B gCBlackBox
 B gDemoMessageBuffer
 B gMessageParms
 B gMessageTable
 B gMessageTableCount
 B gNetworkTextMessageBuffer
 B g_ActiveChannels
 B g_ActiveDLightIndex
 B g_ActiveELightIndex
 B g_ActiveSoundListMutex
 B g_ActivityModifiersTable
 B g_AnimatingImagePanelLinkerHack
 B g_AnimatingImagePanelPullInModule
 B g_AppSystemFactory
 B g_AreasNetworked
 B g_AsyncSaveCallQueue
 B g_AudioDevice
 B g_AudioQueueVoiceRecord
 B g_BSPData
 B g_BenchmarkResults
 B g_BitWriteMasks
 B g_BrushBatchRenderer
 B g_BrushToWorldMatrix
 B g_ButtonLinkerHack
 B g_ButtonPullInModule
 B g_ButtonSoundNames
 B g_CBitmapImagePanelLinkerHack
 B g_CBitmapImagePanelPullInModule
 B g_CSosOperatorBlockEntry
 B g_CSosOperatorConvar
 B g_CSosOperatorCurve4
 B g_CSosOperatorDashboard
 B g_CSosOperatorDelta
 B g_CSosOperatorDistantDSP
 B g_CSosOperatorDotaIsInWater
 B g_CSosOperatorEntityInfo
 B g_CSosOperatorEntryTime
 B g_CSosOperatorFacing
 B g_CSosOperatorFalloff
 B g_CSosOperatorFloat
 B g_CSosOperatorFloatAccumulate12
 B g_CSosOperatorFloatFilter
 B g_CSosOperatorFunc1
 B g_CSosOperatorGetOpvarFloat
 B g_CSosOperatorGetTrackSyncPoint
 B g_CSosOperatorIncrementOpvarFloat
 B g_CSosOperatorIterateAndMergeSpeakers
 B g_CSosOperatorLogicSwitch
 B g_CSosOperatorMapName
 B g_CSosOperatorMixGroup
 B g_CSosOperatorMixLayer
 B g_CSosOperatorOcclusion
 B g_CSosOperatorOutput
 B g_CSosOperatorPlatform
 B g_CSosOperatorPlayOnTrack
 B g_CSosOperatorPosVec8
 B g_CSosOperatorPrintFloat
 B g_CSosOperatorQueueToTrack
 B g_CSosOperatorRandom
 B g_CSosOperatorRemapValue
 B g_CSosOperatorSetConvar
 B g_CSosOperatorSetOpvarFloat
 B g_CSosOperatorSourceDistance
 B g_CSosOperatorSourceInfo
 B g_CSosOperatorSpatializeSpeakers
 B g_CSosOperatorSpeakers
 B g_CSosOperatorStartEntry
 B g_CSosOperatorStartEntryDOTA
 B g_CSosOperatorStopEntry
 B g_CSosOperatorStopTrack
 B g_CSosOperatorSysTime
 B g_CSosOperatorTimer
 B g_CSosOperatorTimerRamp
 B g_CSosOperatorVec3
 B g_CSosOperatorViewInfo
 B g_CTreeViewListControlLinkerHack
 B g_CTreeViewListControlPullInModule
 B g_CV_DTWarning
 B g_CV_DTWatchClass
 B g_CV_DTWatchEnt
 B g_CV_DTWatchVar
 B g_CheckButtonLinkerHack
 B g_CheckButtonPullInModule
 B g_CircularProgressBarLinkerHack
 B g_CircularProgressBarPullInModule
 B g_ClientDLL
 B g_ClientDLLModule
 B g_ClientFactory
 B g_ClientGlobalVariables
 B g_ClientSendTables
 B g_ClipVis
 B g_ClockSyncArray
 B g_ComboBoxLinkerHack
 B g_ComboBoxPullInModule
 B g_ConstructorChecker
 B g_CurMicInputFileByte
 B g_CurrentViewForward
 B g_CurrentViewOrigin
 B g_CurrentViewRight
 B g_CurrentViewUp
 B g_CvarToggleCheckButtonLinkerHack
 B g_CvarToggleCheckButtonPullInModule
 B g_DLightLeafAccessors
 B g_DTIRecvTables
 B g_DecalClipVerts
 B g_DecalDictionary
 B g_DecalLookup
 B g_DemoOverlay
 B g_DevShotGenerator
 B g_DispCollPlaneIndexHash
 B g_DispCollTreeCount
 B g_DispCollTriCache
 B g_DispGroups
 B g_DispLMAlpha
 B g_DispLightmapSamplePositions
 B g_DividerLinkerHack
 B g_DividerPullInModule
 B g_DownloadListGenerator
 B g_DrawTreeSelectedPanel
 B g_ELightLeafAccessors
 B g_EditablePanelLinkerHack
 B g_EditablePanelPullInModule
 B g_EngineStats
 B g_ExpandButtonLinkerHack
 B g_ExpandButtonPullInModule
 B g_ExpressionEvaluator
 B g_ExtraClientCmdCanExecuteCvars
 B g_ExtraMasks
 B g_FocusPanelList
 B g_Frustum
 B g_FrustumVis
 B g_GameDLL
 B g_GraphPanelLinkerHack
 B g_GraphPanelPullInModule
 B g_HunkAllocationsByName
 B g_HunkMemoryStack
 B g_ImagePanelLinkerHack
 B g_ImagePanelPullInModule
 B g_KeyFocusPanel
 B g_KeyValuesErrorStack
 B g_LabelLinkerHack
 B g_LabelPullInModule
 B g_LeafVis
 B g_LightmapTransformList
 B g_LightmapUpdateList
 B g_ListPanelLinkerHack
 B g_ListPanelPullInModule
 B g_ListViewPanelLinkerHack
 B g_ListViewPanelPullInModule
 B g_LittleBits
 B g_Log
 B g_LostVideoMemory
 B g_MP3Durations
 B g_MainViewForward
 B g_MainViewOrigin
 B g_MainViewRight
 B g_MainViewUp
 B g_MapReslistGenerator
 B g_MatrixIdentity
 B g_MenuBarLinkerHack
 B g_MenuBarPullInModule
 B g_MenuButtonLinkerHack
 B g_MenuButtonPullInModule
 B g_MenuItemLinkerHack
 B g_MenuItemPullInModule
 B g_MenuLinkerHack
 B g_MenuPullInModule
 B g_MessageBoxLinkerHack
 B g_MessageBoxPullInModule
 B g_MicStartTime
 B g_NetworkChatChannelActive
 B g_NumReservedThreads
 B g_OverlayRenderFrameID
 B g_PaintManager
 B g_PanelLinkerHack
 B g_PanelPullInModule
 B g_PhonemeFileSentences
 B g_PluginManager
 B g_Points
 B g_PortalRects
 B g_ProgressBarLinkerHack
 B g_ProgressBarPullInModule
 B g_QueuedSounds
 B g_RadioButtonLinkerHack
 B g_RadioButtonPullInModule
 B g_RebuildLightmaps
 B g_RecvDecoders
 B g_RecvTables
 B g_RegisteredDemoCustomDataCallbacks
 B g_ReleaseThreadReservation
 B g_RenderAreaBits
 B g_RendererInLevel
 B g_RichTextLinkerHack
 B g_RichTextPullInModule
 B g_SaveRestore
 B g_ScalableImagePanelLinkerHack
 B g_ScalableImagePanelPullInModule
 B g_ScrollBarLinkerHack
 B g_ScrollBarPullInModule
 B g_ScrollBar_HorizontalLinkerHack
 B g_ScrollBar_HorizontalPullInModule
 B g_ScrollBar_VerticalLinkerHack
 B g_ScrollBar_VerticalPullInModule
 B g_SendTableCRC
 B g_SendTables
 B g_SentenceGroups
 B g_Sentences
 B g_ServerFactory
 B g_ServerGlobalVariables
 B g_ServerRemoteAccess
 B g_SharedEdictChangeInfo
 B g_SndMutex
 B g_SoundClockPaintTime
 B g_SoundMapMutex
 B g_SteamP2PAllowConnection
 B g_StoreFilePaths
 B g_StudioHdrToActivityMaps
 B g_StudioHdrToActivityMapsLock
 B g_TesselateVerts
 B g_TestScriptMgr
 B g_TextEntryLinkerHack
 B g_TextEntryPullInModule
 B g_TextModeLine
 B g_ToggleButtonLinkerHack
 B g_ToggleButtonPullInModule
 B g_TraceInfoPool
 B g_TreeViewLinkerHack
 B g_TreeViewPullInModule
 B g_URLLabelLinkerHack
 B g_URLLabelPullInModule
 B g_UploadQueue
 B g_VBAllocTracker
 B g_VProfExport
 B g_VProfTargetThread
 B g_VoiceChannels
 B g_VoiceTweakSpeakingVolume
 B g_WorldStaticMeshes
 B g_aDecalFormats
 B g_aDecalSortPool
 B g_aDecalSortTrees
 B g_aDispDecalSortPool
 B g_aDispDecalSortTrees
 B g_bASW_Waiting_For_Map_Build
 B g_bAbortServerSet
 B g_bActiveDlights
 B g_bActiveElights
 B g_bAllowThreadedSound
 B g_bBakedPropLightingNoSeparateHDR
 B g_bCanAccessCurrentView
 B g_bClearingClientState
 B g_bClientGameDLLGreaterThanV13
 B g_bDTIEnabled
 B g_bDedicatedServerBenchmarkMode
 B g_bDispOrthoRender
 B g_bDspOff
 B g_bFlushMemoryOnNextServer
 B g_bHunkAllocLightmaps
 B g_bInCommentaryMode
 B g_bInEditMode
 B g_bInErrorExit
 B g_bInSpew
 B g_bInTweakMode
 B g_bIsBlendingOrModulating
 B g_bIsVGuiBasedDedicatedServer
 B g_bKeepSteamActiveOnRestart
 B g_bLoadedMapHasBakedPropLighting
 B g_bLowViolence
 B g_bMixThreadExit
 B g_bPreventSound
 B g_bReplayLoadedTools
 B g_bServerDTIEnabled
 B g_bServerGameDLLGreaterThanV5
 B g_bTextMode
 B g_bThreadedEngine
 B g_bUpdateStringTokenDatabase
 B g_bUsingDota681
 B g_bUsingLegacyAppSystems
 B g_bVCRSingleStep
 B g_bViewerInSolidSpace
 B g_bVoiceAtLeastPartiallyInitted
 B g_bdas_create_new_node
 B g_bdas_init_nodes
 B g_bdas_room_init
 B g_bdirectionalfx
 B g_cgroupclass
 B g_cgrouprules
 B g_cmixlayers
 B g_cpsettemplates
 B g_csoundmixers
 B g_curcenterpaintbuffer
 B g_curpaintbuffer
 B g_currearpaintbuffer
 B g_current_das_room_changed
 B g_current_das_room_new
 B g_current_das_room_sky_above
 B g_current_das_room_sky_percent
 B g_cv_miniprofiler_dump
 B g_das_all_checked
 B g_das_check_next
 B g_das_checked_count
 B g_das_nodes
 B g_das_room
 B g_das_store_next
 B g_das_vec3
 B g_debug_mxr_displaycount
 B g_dsp_volume
 B g_eSteamLoginFailure
 B g_entnamelastsaved
 B g_entnames
 B g_fFramesPerSecond
 B g_flAccumulatedModelLoadTime
 B g_flAccumulatedModelLoadTimeBrush
 B g_flAccumulatedModelLoadTimeMaterialNamesOnly
 B g_flAccumulatedModelLoadTimeSprite
 B g_flAccumulatedModelLoadTimeStaticMesh
 B g_flAccumulatedModelLoadTimeStudio
 B g_flAccumulatedModelLoadTimeVCollideAsync
 B g_flAccumulatedModelLoadTimeVCollideSync
 B g_flAccumulatedModelLoadTimeVirtualModel
 B g_flAccumulatedSoundLoadTime
 B g_flLastUpdateTime
 B g_groupclasslist
 B g_grouprules
 B g_hMixThread
 B g_hVoiceCodecDLL
 B g_iFilterCommandsByClientCmdCanExecute
 B g_iFilterCommandsByServerCanExecute
 B g_iServerGameClientsVersion
 B g_iVCRPlaybackSleepInterval
 B g_layertriggers
 B g_mapMixgroupidToGrouprulesid
 B g_mastermixlayer
 B g_materialBrushWireframe
 B g_materialDebugLightmap
 B g_materialDebugLightmapZBuffer
 B g_materialDebugLuxels
 B g_materialDecalWireframe
 B g_materialEmpty
 B g_materialLeafVisWireframe
 B g_materialTranslucentSingleColor
 B g_materialTranslucentVertexColor
 B g_materialWireframe
 B g_materialWorldWireframe
 B g_materialWorldWireframeZBuffer
 B g_minidumpinfo
 B g_mixlayers
 B g_moviestart
 B g_mxr_ducktime
 B g_nBrushModelDecalSortCheckCount
 B g_nDecalSortCheckCount
 B g_nDecompressedDataBytes
 B g_nDispDecalSortCheckCount
 B g_nForkID
 B g_nMapLoadCount
 B g_nMaterialSystemThread
 B g_nMaxDecals
 B g_nMicInputFileBytes
 B g_nNumActiveDLights
 B g_nNumActiveELights
 B g_nUncompressedDataBytes
 B g_nYou_Must_Add_Public_Vgui_Controls_Vgui_ControlsCpp_To_Your_Project
 B g_pAVI
 B g_pAchievementMgr
 B g_pApplication
 B g_pAsyncFileSystem
 B g_pBIK
 B g_pCVar
 B g_pCircleAlphaBuffer
 B g_pCirclePaintBuffer
 B g_pClientAlphaPropertyMgr
 B g_pClientClassHead
 B g_pClientRenderTargets
 B g_pClientSidePrediction
 B g_pDTIFilename
 B g_pDataCache
 B g_pDecompressedDataFilename
 B g_pDecompressedFileData
 B g_pDeferredServerWork
 B g_pDispBounds
 B g_pDispCollTrees
 B g_pDmeMakefileUtils
 B g_pDrawTreeFrame
 B g_pEventSystem
 B g_pFileSystem
 B g_pFogUI
 B g_pFullFileSystem
 B g_pGameUISystemMgr
 B g_pGamestatsData
 B g_pHammer
 B g_pInputStackSystem
 B g_pInputSystem
 B g_pLaunchOptions
 B g_pLauncherMgr
 B g_pLocalNetworkBackdoor
 B g_pLocalize
 B g_pMDLCache
 B g_pMatSystemSurface
 B g_pMaterialAmbientCube
 B g_pMaterialDebugFlat
 B g_pMaterialDepthWrite
 B g_pMaterialLightSprite
 B g_pMaterialMRMWireframe
 B g_pMaterialRemapSortInfoArray
 B g_pMaterialSSAODepthWrite
 B g_pMaterialShadowBuild
 B g_pMaterialSilhouette
 B g_pMaterialSystem
 B g_pMaterialSystem2
 B g_pMaterialSystemConfig
 B g_pMaterialSystemDebugTextureInfo
 B g_pMaterialSystemHardwareConfig
 B g_pMaterialWireframeVertexColor
 B g_pMaterialWireframeVertexColorIgnoreZ
 B g_pMaterialWriteZ
 B g_pMeshSystem
 B g_pMicInputFileData
 B g_pMixerControls
 B g_pNetConsoleMgr
 B g_pNetworkSystem
 B g_pPhysics
 B g_pPhysics2
 B g_pPhysics2ActorManager
 B g_pPhysics2ResourceManager
 B g_pPhysicsCollision
 B g_pPrecacheSystem
 B g_pProcessUtils
 B g_pPropertyEditorSystem
 B g_pQueuedLoader
 B g_pRenderDevice
 B g_pRenderDeviceMgr
 B g_pRenderHardwareConfig
 B g_pResourceAccessControl
 B g_pResourceSystem
 B g_pSaveThread
 B g_pScaleformUI
 B g_pSceneSystem
 B g_pSndIOPathPrefix
 B g_pSoundEmitterSystem
 B g_pSoundJob
 B g_pSoundSystem
 B g_pStudioRender
 B g_pTestScriptMgr
 B g_pTxViewPanel
 B g_pUncompressedDataFilename
 B g_pUncompressedFileData
 B g_pUtlSortVectorQSortContext
 B g_pVAudioModule
 B g_pVGui
 B g_pVGuiInput
 B g_pVGuiLocalize
 B g_pVGuiPanel
 B g_pVGuiRenderSurface
 B g_pVGuiSchemeManager
 B g_pVGuiSurface
 B g_pVGuiSystem
 B g_pWorldRendererMgr
 B g_pacRequestCtx
 B g_pagedpoolinfo
 B g_paintBuffers
 B g_paintbuffer
 B g_paintedtime
 B g_pdas_last_node
 B g_pkvVideoConfig
 B g_psettemplates
 B g_scratchpad
 B g_snd_call_time_debug
 B g_snd_count_debug
 B g_snd_frametime
 B g_snd_frametime_total
 B g_snd_profile_type
 B g_snd_samplecount
 B g_snd_time_debug
 B g_snd_trace_count
 B g_soloActive
 B g_soundmixers
 B g_soundtime
 B g_soundtimeerror
 B g_ssp
 B g_ssp_init
 B g_svInstanceBaselineMutex
 B g_szsoundmixer_cur
 B g_temppaintbuffer
 B gameui_xbox
 B gfExtendedError
 B gmodinfo
 B gszDisconnectReason
 B gszExtendedDisconnectReason
 B hltv
 B hltv_client
 B host_abortserver
 B host_client
 B host_currentframetick
 B host_enddemo
 B host_flush_threshold
 B host_framecount
 B host_frameendtime_computationduration
 B host_framerate
 B host_framestarttime_stddeviation
 B host_frameticks
 B host_frametime
 B host_frametime_stddeviation
 B host_frametime_unbounded
 B host_frametime_unscaled
 B host_initialized
 B host_limitlocal
 B host_map
 B host_name
 B host_parms
 B host_showcachemiss
 B host_speeds
 B host_state
 B host_thread_mode
 B host_threaded_sound
 B host_tickcount
 B host_time
 B host_timescale
 B hunk_track_allocation_types
 B idsp_automatic
 B idsp_facingaway
 B idsp_player
 B idsp_room
 B idsp_spatial
 B idsp_speaker
 B idsp_water
 B in_forceuser
 B in_lock_mouse_to_window
 B instantreplay
 B ipset_automatic_prev
 B ipset_facingaway_prev
 B ipset_player_prev
 B ipset_room_prev
 B ipset_room_typeprev
 B ipset_spatial_prev
 B ipset_speaker_prev
 B ipset_water_prev
 B lasterrorU
 B levellist_t_DataDescInit::g_DataMapHolder
 B lfos
 B lfowavs
 B lightcache_maxmiss
 B lineartolightmap
 B lineartovertex
 B linefile
 B listener_origin
 B listener_right
 B loadbuf
 B loadsize
 B lump_t_DataDescInit::g_DataMapHolder
 B mat_ambient_light_b
 B mat_ambient_light_g
 B mat_ambient_light_r
 B mat_bumpbasis
 B mat_colcorrection_disableentities
 B mat_colcorrection_editor
 B mat_colorcorrection
 B mat_combined
 B mat_debugalttab
 B mat_defaultlightmap
 B mat_depthbias_normal
 B mat_envmapsize
 B mat_envmaptgasize
 B mat_excludetextures
 B mat_fastspecular
 B mat_freeze_leafvis
 B mat_fullbright
 B mat_hdr_level
 B mat_leafvis
 B mat_leafvis_draw_mask
 B mat_levelflush
 B mat_loadtextures
 B mat_luxels
 B mat_max_worldmesh_vertices
 B mat_motion_blur_enabled
 B mat_norendering
 B mat_normals
 B mat_show_texture_memory_usage
 B mat_surfaceid
 B mat_surfacemat
 B mat_texture_list_all
 B mat_texture_list_all_frames
 B mat_texture_list_exclude_editing
 B mat_texture_list_off
 B mat_texture_list_on
 B mat_texture_list_view
 B mat_wireframe
 B materialSortInfoArray
 B materials
 B mdlcache
 B mdllib
 B mdys
 B mem_incremental_compact_rate
 B mem_max_heapsize
 B mem_max_heapsize_dedicated
 B mem_min_heapsize
 B modelorg
 B musicsave_t_DataDescInit::g_DataMapHolder
 B network_connection_token
 B nuls
 B p4
 B pSortMapRenderContext
 B paint_sample_size
 B paintmap_scale
 B panel_test_title_safe
 B password
 B physcollision
 B physprops
 B pipeline_static_props
 B player_info_s_DataDescInit::g_DataMapHolder
 B pmainwindow
 B psets
 B ptcs
 B quat_identity
 B quit
 B r_ClipAreaPortals
 B r_DispBuildable
 B r_DispWalkable
 B r_DrawBeams
 B r_DrawDisp
 B r_DrawPortals
 B r_ForceRestore
 B r_ambientlightingonly
 B r_aspectratio
 B r_avglight
 B r_avglightmap
 B r_blend
 B r_debugrandomstaticlighting
 B r_decal_cover_count
 B r_decal_overlap_area
 B r_decal_overlap_count
 B r_decals
 B r_dlightactive
 B r_dlightchanged
 B r_drawbrushmodels
 B r_drawmodeldecals
 B r_drawmodellightorigin
 B r_drawmodelstatsoverlay
 B r_drawmodelstatsoverlaydistance
 B r_drawscaleform
 B r_drawvgui
 B r_dynamic
 B r_dynamiclighting
 B r_fastzreject
 B r_flashlightdepthtexture
 B r_hunkalloclightmaps
 B r_lightcache_radiusfactor
 B r_lightcache_zbuffercache
 B r_lightmap
 B r_lightstyle
 B r_lod
 B r_maxdlights
 B r_norefresh
 B r_occludeemaxarea
 B r_occluderminarea
 B r_occlusion
 B r_oldlightselection
 B r_proplightingfromdisk
 B r_radiosity
 B r_rootlod
 B r_shadow_deferred
 B r_shadowrendertotexture
 B r_shadows
 B r_shadows_gamecontrol
 B r_slowpathwireframe
 B r_snapportal
 B r_staticlight_streams
 B r_staticprop_lod
 B r_staticpropinfo
 B r_surfacevisframe
 B r_unloadlightmaps
 B r_visambient
 B r_visframecount
 B r_visocclusion
 B r_visualizelighttraces
 B r_visualizelighttracesshowfulltrace
 B r_visualizetraces
 B r_worldlightmin
 B r_worldlights
 B rcon_password
 B realtime
 B record_tga_interval
 B record_tga_usealpha
 B reload_materials
 B rvas
 B s_AudioState
 B s_DMXAllocator
 B s_DragDropHelper
 B s_NoEscConversion
 B s_ServerPlugin
 B s_SinglePlayerSharedMemoryManager
 B s_StringCharConversion
 B s_aDecalPool
 B s_bExitWhenEmpty
 B s_bMathlibInitialized
 B s_bOnLoadScreen
 B s_pConv
 B s_pCurrentAppSystem
 B s_pInterfaceRegs
 B s_pUtlBufferUtilArrayDelim
 B save_async
 B save_disable
 B save_history_count
 B save_in_memory
 B save_noxsave
 B save_screenshot
 B save_spew
 B scr_demo_override_fov
 B scr_disabled_for_loading
 B scr_drawloading
 B scr_initialized
 B scr_loadingStartTime
 B scr_nextdrawtick
 B sdebug_avg_in
 B sdebug_avg_out
 B sdebug_in_count
 B sdebug_out_count
 B sentencegroup_t::s_SymbolTable
 B serverGameClients
 B serverGameDLL
 B serverGameDirector
 B serverGameEnts
 B serverGameTags
 B serverReplayDirector
 B showbudget_texture
 B showbudget_texture_global_off
 B showbudget_texture_global_on
 B showbudget_texture_global_sum
 B showbudget_texture_off
 B showbudget_texture_on
 B snd_ShowThreadFrameTime
 B snd_async_fullyasync
 B snd_async_minsize
 B snd_async_spew_blocking
 B snd_async_stream_fail
 B snd_async_stream_spew
 B snd_cull_duplicates
 B snd_debug_gaincurve
 B snd_debug_gaincurvevol
 B snd_defer_trace
 B snd_delay_for_choreo_enabled
 B snd_delay_for_choreo_reset_after_N_milliseconds
 B snd_delay_sound_shift
 B snd_disable_mixer_duck
 B snd_duckerattacktime
 B snd_duckerreleasetime
 B snd_duckerthreshold
 B snd_ducking_off
 B snd_ducktovolume
 B snd_dvar_dist_max
 B snd_dvar_dist_min
 B snd_foliage_db_loss
 B snd_gain
 B snd_gain_max
 B snd_gain_min
 B snd_gamevolume
 B snd_initialized
 B snd_legacy_surround
 B snd_linear_count
 B snd_list
 B snd_max_same_sounds
 B snd_max_same_weapon_sounds
 B snd_mix_async
 B snd_mix_minframetime
 B snd_mixahead
 B snd_mixerMasterDSP
 B snd_mixerMasterLevel
 B snd_musicvolume
 B snd_mute_losefocus
 B snd_noextraupdate
 B snd_obscured_gain_db
 B snd_op_test_convar
 B snd_out
 B snd_p
 B snd_pause_all
 B snd_pitchquality
 B snd_preGainDistFalloff
 B snd_profile
 B snd_refdb
 B snd_refdb_dist_mult
 B snd_refdist
 B snd_scaletable
 B snd_show
 B snd_show_channel_count
 B snd_showclassname
 B snd_showmixer
 B snd_showstart
 B snd_sos_allow_dynamic_chantype
 B snd_sos_exec_when_paused
 B snd_sos_flush_operators
 B snd_sos_list_operator_updates
 B snd_sos_print_operators
 B snd_sos_show_block_debug
 B snd_sos_show_client_rcv
 B snd_sos_show_entry_match_free
 B snd_sos_show_operator_entry_filter
 B snd_sos_show_operator_init
 B snd_sos_show_operator_prestart
 B snd_sos_show_operator_shutdown
 B snd_sos_show_operator_start
 B snd_sos_show_operator_stop_entry
 B snd_sos_show_operator_updates
 B snd_sos_show_opvar_list
 B snd_sos_show_queuetotrack
 B snd_sos_show_source_info
 B snd_sos_show_startqueue
 B snd_sos_show_track_list
 B snd_soundmixer
 B snd_soundmixer_version
 B snd_spatialize_roundrobin
 B snd_store_filepaths
 B snd_surround
 B snd_visualize
 B snd_voip_center_speaker_vol
 B snd_voip_left_rear_speaker_vol
 B snd_voip_left_speaker_vol
 B snd_voip_right_rear_speaker_vol
 B snd_voip_right_speaker_vol
 B snd_voipvolume
 B snd_vol
 B snd_vox_captiontrace
 B snd_vox_globaltimeout
 B snd_vox_sectimeout
 B snd_vox_seqtimeout
 B staticGameConsole
 B staticGameUIFuncs
 B studiorender
 B sv
 B sv_allow_wait_command
 B sv_alternateticks
 B sv_always_full_flush
 B sv_autosave
 B sv_cheats
 B sv_client_cmdrate_difference
 B sv_client_max_interp_ratio
 B sv_client_min_interp_ratio
 B sv_client_predict
 B sv_cluster
 B sv_consistency
 B sv_debugmanualmode
 B sv_downloadurl
 B sv_dumpstringtables
 B sv_dumptables
 B sv_enable_delta_packing
 B sv_hibernate_when_empty
 B sv_lan
 B sv_logdownloadlist
 B sv_master_share_game_socket
 B sv_maxcmdrate
 B sv_maxreplay
 B sv_maxupdaterate
 B sv_mincmdrate
 B sv_minupdaterate
 B sv_multiplayer_maxsounds
 B sv_noclipduringpause
 B sv_pure_kick_clients
 B sv_pure_trace
 B sv_rcon_banpenalty
 B sv_rcon_log
 B sv_rcon_maxfailures
 B sv_rcon_minfailures
 B sv_rcon_minfailuretime
 B sv_region
 B sv_savedir
 B sv_savereaddir
 B sv_savewritedir
 B sv_search_key
 B sv_sendtables
 B sv_stressbots
 B sv_sync_client_updates
 B sv_syncupdaterate
 B sv_tags
 B sv_unlockedchapters
 B sv_update_master_server
 B sv_validate_edict_change_infos
 B sv_visiblemaxplayers
 B sv_voicecodec
 B telemetry_demoend
 B telemetry_demostart
 B telemetry_filtervalue
 B telemetry_framecount
 B telemetry_level
 B telemetry_pause
 B telemetry_resume
 B telemetry_server
 B testscript_debug
 B texture_budget_background_alpha
 B texture_budget_panel_bottom_of_history_fraction
 B texture_budget_panel_global
 B texture_budget_panel_height
 B texture_budget_panel_width
 B texture_budget_panel_x
 B texture_budget_panel_y
 B threadpool_affinity
 B threadpool_reserve
 B timerefresh
 B tv_autorecord
 B tv_debug
 B tv_enable
 B tv_instant_replay_full_frame
 B tv_instant_replay_full_frame_packet_size
 B tv_instant_replay_full_frame_time
 B tv_listen_voice_indices
 B tv_name
 B tv_relay_quit_after_game
 B tv_relay_quit_on_connection_failure
 B tv_relay_rate
 B tv_relay_secret_code
 B tv_relayvoice
 B tv_secret_code
 B tv_snapshotrate
 B tv_title
 B tv_transmitall
 B tv_voice_frame_adjust
 B vaudio
 B vec2_invalid
 B vec2_origin
 B vec3_angle
 B vec3_invalid
 B vec3_origin
 B vec4_invalid
 B vec4_origin
 B vgui::BuildGroup::m_HandleTable
 B vgui::Button::s_pUnpackParams
 B vgui::CBuildFactoryHelper::m_sHelpers
 B vgui::Label::s_pUnpackParams
 B vgui::Panel::s_NavLock
 B vgui::Panel::s_pUnpackParams
 B vgui::ToolWindow::s_ToolWindows
 B vgui::g_pMDLCache
 B vgui::g_pMatSystemSurface
 B vgui::g_pMaterialSystem
 B vgui::g_pMaterialSystemHardwareConfig
 B vgui::g_pStudioRender
 B vgui_draw_regions
 B vgui_drawfocus
 B vgui_drawkeyfocus
 B vgui_drawtree_clear
 B vgui_drawtree_off
 B vgui_drawtree_on
 B videomode
 B voice_avggain
 B voice_buffer_debug
 B voice_debugfeedbackfrom
 B voice_enable
 B voice_fadeouttime
 B voice_fakeloss
 B voice_forcemicrecord
 B voice_gain_downward_multiplier
 B voice_gain_max
 B voice_gain_rate
 B voice_gain_target
 B voice_inputfromfile
 B voice_loopback
 B voice_maxgain
 B voice_minimum_gain
 B voice_profile
 B voice_record_steam
 B voice_recordtofile
 B voice_scale
 B voice_showchannels
 B voice_showincoming
 B voice_steal
 B voice_threshold
 B voice_threshold_delay
 B voice_volume_duck
 B vprof_scope
 B vprof_server_spike_threshold
 B vprof_server_thread
 B wave
 CFArrayGetCount
 CFArrayGetValueAtIndex
 CFDictionaryGetValue
 CFEqual
 CFNetworkCopyProxiesForAutoConfigurationScript
 CFNetworkCopyProxiesForURL
 CFNumberGetValue
 CFStringCreateWithCString
 CFStringCreateWithFormat
 CFStringGetCString
 CFStringGetLength
 CFURLCreateWithBytes
 COM_TimestampedLog
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Reset()
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSpinRWLock::LockForRead()
 CThreadSpinRWLock::SpinLockForWrite(unsigned int)
 CThreadSpinRWLock::UnlockRead()
 CThreadSpinRWLock::UnlockWrite()
 CThreadSyncObject::Wait(unsigned int)
 CThreadSyncObject::~CThreadSyncObject()
 CUniformRandomStream::CUniformRandomStream()
 CUniformRandomStream::RandomFloat(float, float)
 CUniformRandomStream::SetSeed(int)
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CVProfNode::MarkFrame()
 CVProfNode::Pause()
 CVProfNode::Reset()
 CVProfNode::ResetPeak()
 CVProfNode::Resume()
 CVProfNode::s_iCurrentUniqueNodeID
 CVProfile::AddBudgetGroupName(char const*, int)
 CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
 CVProfile::CVProfile()
 CVProfile::ExecuteDeferredFunctions()
 CVProfile::FindBudgetGroupName(char const*)
 CVProfile::FindNode(CVProfNode*, char const*)
 CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 CVProfile::GetBudgetGroupColor(int, int&, int&, int&, int&)
 CVProfile::GetCounterGroup(int) const
 CVProfile::GetCounterName(int) const
 CVProfile::GetCounterNameAndValue(int, int&) const
 CVProfile::GetCounterValue(int) const
 CVProfile::GetNumBudgetGroups()
 CVProfile::GetNumCounters() const
 CVProfile::HideBudgetGroup(int, bool)
 CVProfile::OutputReport(int, char const*, int)
 CVProfile::ResetCounters(CounterGroup_t)
 CVProfile::Term()
 CVProfile::~CVProfile()
 CommandLine
 ConColorMsg(Color const&, char const*, ...)
 ConDMsg
 ConMsg(char const*, ...)
 CreateNewThreadPool
 CreateSimpleThread
 D AllocTempVector()::s_nIndex
 D AllocTempVector()::s_vecTemp
 D BSPHeader_t::m_DataMap
 D BZ2_crc32Table
 D BZ2_rNums
 D CAreaPortalsUIPanel::ChainToAnimationMap()::chained
 D CAreaPortalsUIPanel::ChainToMap()::chained
 D CAreaPortalsUIPanel::GetKBMap()::s_pMap
 D CAreaPortalsUIPanel::GetMessageMap()::s_pMap
 D CAreaPortalsUIPanel::KB_ChainToMap()::chained
 D CAskConnectPanel::ChainToAnimationMap()::chained
 D CAskConnectPanel::ChainToMap()::chained
 D CAskConnectPanel::GetKBMap()::s_pMap
 D CAskConnectPanel::GetMessageMap()::s_pMap
 D CAskConnectPanel::KB_ChainToMap()::chained
 D CAudioSourceCachedInfo::s_CurrentType
 D CAudioSourceCachedInfoHandle_t::FastGet()::tm_fmt
 D CAudioSourceCachedInfoHandle_t::Get(int, bool, CSfxTable*, int*)::tm_fmt
 D CAudioSourceCachedInfoHandle_t::s_nCurrentFlushCount
 D CAudioSourceMP3::GetCachedDataPointer()::tm_fmt
 D CAudioSourceWave::GetCachedDataPointer()::tm_fmt
 D CBaseActionEditDialog::ChainToAnimationMap()::chained
 D CBaseActionEditDialog::ChainToMap()::chained
 D CBaseActionEditDialog::GetKBMap()::s_pMap
 D CBaseActionEditDialog::GetMessageMap()::s_pMap
 D CBaseActionEditDialog::KB_ChainToMap()::chained
 D CBaseActionPlaySoundStartDialog::ChainToAnimationMap()::chained
 D CBaseActionPlaySoundStartDialog::ChainToMap()::chained
 D CBaseActionPlaySoundStartDialog::GetKBMap()::s_pMap
 D CBaseActionPlaySoundStartDialog::GetMessageMap()::s_pMap
 D CBaseActionPlaySoundStartDialog::KB_ChainToMap()::chained
 D CBaseActionPlaySoundStartDialog::PanelMessageFunc_OnFileSelected::InitVar()::bAdded
 D CBaseActionTextMessageStartDialog::s_EffectTypes
 D CBlackBoxRecord::operator char const*() const::buf
 D CBugUIPanel::ChainToAnimationMap()::chained
 D CBugUIPanel::ChainToMap()::chained
 D CBugUIPanel::GetKBMap()::s_pMap
 D CBugUIPanel::GetMessageMap()::s_pMap
 D CBugUIPanel::KB_ChainToMap()::chained
 D CBugUIPanel::PanelMessageFunc_OnChooseArea::InitVar()::bAdded
 D CBugUIPanel::PanelMessageFunc_OnChooseVMFFolder::InitVar()::bAdded
 D CBugUIPanel::PanelMessageFunc_OnDirectorySelected::InitVar()::bAdded
 D CBugUIPanel::PanelMessageFunc_OnFileSelected::InitVar()::bAdded
 D CBuildModeNavCombo::ChainToAnimationMap()::chained
 D CBuildModeNavCombo::ChainToMap()::chained
 D CBuildModeNavCombo::GetKBMap()::s_pMap
 D CBuildModeNavCombo::GetMessageMap()::s_pMap
 D CBuildModeNavCombo::KB_ChainToMap()::chained
 D CCollisionBSPData::nullsurface
 D CColorBalanceUIPanel::ChainToAnimationMap()::chained
 D CColorBalanceUIPanel::ChainToMap()::chained
 D CColorBalanceUIPanel::GetKBMap()::s_pMap
 D CColorBalanceUIPanel::GetMessageMap()::s_pMap
 D CColorBalanceUIPanel::KB_ChainToMap()::chained
 D CColorBalanceUIPanel::PanelMessageFunc_OnRadioButtonHit::InitVar()::bAdded
 D CColorCorrectionUIChildPanel::ChainToAnimationMap()::chained
 D CColorCorrectionUIChildPanel::ChainToMap()::chained
 D CColorCorrectionUIChildPanel::GetKBMap()::s_pMap
 D CColorCorrectionUIChildPanel::GetMessageMap()::s_pMap
 D CColorCorrectionUIChildPanel::KB_ChainToMap()::chained
 D CColorCorrectionUIPanel::ChainToAnimationMap()::chained
 D CColorCorrectionUIPanel::ChainToMap()::chained
 D CColorCorrectionUIPanel::GetKBMap()::s_pMap
 D CColorCorrectionUIPanel::GetMessageMap()::s_pMap
 D CColorCorrectionUIPanel::KB_ChainToMap()::chained
 D CColorCurvesEditPanel::ChainToAnimationMap()::chained
 D CColorCurvesEditPanel::ChainToMap()::chained
 D CColorCurvesEditPanel::GetKBMap()::s_pMap
 D CColorCurvesEditPanel::GetMessageMap()::s_pMap
 D CColorCurvesEditPanel::KB_ChainToMap()::chained
 D CColorCurvesUIPanel::ChainToAnimationMap()::chained
 D CColorCurvesUIPanel::ChainToMap()::chained
 D CColorCurvesUIPanel::GetKBMap()::s_pMap
 D CColorCurvesUIPanel::GetMessageMap()::s_pMap
 D CColorCurvesUIPanel::KB_ChainToMap()::chained
 D CColorCurvesUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CColorCurvesUIPanel::s_pColorMaskLabel
 D CColorHistogramPanel::ChainToAnimationMap()::chained
 D CColorHistogramPanel::ChainToMap()::chained
 D CColorHistogramPanel::GetKBMap()::s_pMap
 D CColorHistogramPanel::GetMessageMap()::s_pMap
 D CColorHistogramPanel::KB_ChainToMap()::chained
 D CColorLevelsUIPanel::ChainToAnimationMap()::chained
 D CColorLevelsUIPanel::ChainToMap()::chained
 D CColorLevelsUIPanel::GetKBMap()::s_pMap
 D CColorLevelsUIPanel::GetMessageMap()::s_pMap
 D CColorLevelsUIPanel::KB_ChainToMap()::chained
 D CColorLevelsUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CColorLevelsUIPanel::s_pColorMaskLabel
 D CColorLookupUIPanel::ChainToAnimationMap()::chained
 D CColorLookupUIPanel::ChainToMap()::chained
 D CColorLookupUIPanel::GetKBMap()::s_pMap
 D CColorLookupUIPanel::GetMessageMap()::s_pMap
 D CColorLookupUIPanel::KB_ChainToMap()::chained
 D CColorLookupUIPanel::PanelMessageFunc_OnFileSelected::InitVar()::bAdded
 D CColorOperationListPanel::ChainToAnimationMap()::chained
 D CColorOperationListPanel::ChainToMap()::chained
 D CColorOperationListPanel::GetKBMap()::s_pMap
 D CColorOperationListPanel::GetMessageMap()::s_pMap
 D CColorOperationListPanel::KB_ChainToMap()::chained
 D CColorOperationListPanel::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D CColorOperationListPanel::PanelMessageFunc_OnLaunchOperation::InitVar()::bAdded
 D CColorOperationListPanel::PanelMessageFunc_OnOpPanelClose::InitVar()::bAdded
 D CColorOperationListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D CColorSlider::ChainToAnimationMap()::chained
 D CColorSlider::ChainToMap()::chained
 D CColorSlider::GetKBMap()::s_pMap
 D CColorSlider::GetMessageMap()::s_pMap
 D CColorSlider::KB_ChainToMap()::chained
 D CCurveEditorPanel::ChainToAnimationMap()::chained
 D CCurveEditorPanel::ChainToMap()::chained
 D CCurveEditorPanel::GetKBMap()::s_pMap
 D CCurveEditorPanel::GetMessageMap()::s_pMap
 D CCurveEditorPanel::KB_ChainToMap()::chained
 D CDemoMessagePB<(EDemoCommands)0, CDemoStop>::s_typeName
 D CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::s_typeName
 D CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::s_typeName
 D CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::s_typeName
 D CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::s_typeName
 D CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::s_typeName
 D CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::s_typeName
 D CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::s_typeName
 D CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::s_typeName
 D CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::s_typeName
 D CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::s_typeName
 D CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::s_typeName
 D CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::s_typeName
 D CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::s_typeName
 D CDmxElement* const& CDmxAttribute::GetValue<CDmxElement*>() const::defaultValue
 D CDragDropHelperPanel::ChainToAnimationMap()::chained
 D CDragDropHelperPanel::ChainToMap()::chained
 D CDragDropHelperPanel::GetKBMap()::s_pMap
 D CDragDropHelperPanel::GetMessageMap()::s_pMap
 D CDragDropHelperPanel::KB_ChainToMap()::chained
 D CDrawTreeFrame::ChainToAnimationMap()::chained
 D CDrawTreeFrame::ChainToMap()::chained
 D CDrawTreeFrame::GetKBMap()::s_pMap
 D CDrawTreeFrame::GetMessageMap()::s_pMap
 D CDrawTreeFrame::KB_ChainToMap()::chained
 D CDrawTreeFrame::PanelMessageFunc_OnItemDoublePressed::InitVar()::bAdded
 D CDrawTreeFrame::PanelMessageFunc_OnItemSelected::InitVar()::bAdded
 D CEngineSoundServices::GetSoundSpatialization(int, SpatializationInfo_t&)::tm_fmt
 D CEngineSoundServices::OnSoundStarted(int, StartSoundParams_t&, char const*)::tm_fmt
 D CEngineSoundServices::OnSoundStopped(int, int, int, char const*)::tm_fmt
 D CFmtStrN<1024, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<1024, false>::sprintf(char const*, ...)::scAsserted
 D CFmtStrN<1024, true>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<1040, false>::sprintf(char const*, ...)::scAsserted
 D CFmtStrN<2048, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
 D CFogUIPanel::ChainToAnimationMap()::chained
 D CFogUIPanel::ChainToMap()::chained
 D CFogUIPanel::GetKBMap()::s_pMap
 D CFogUIPanel::GetMessageMap()::s_pMap
 D CFogUIPanel::KB_ChainToMap()::chained
 D CFogUIPanel::PanelMessageFunc_OnTextKillFocus::InitVar()::bAdded
 D CFogUIPanel::PanelMessageFunc_OnTextNewLine::InitVar()::bAdded
 D CFullScreenSelectionPanel::ChainToAnimationMap()::chained
 D CFullScreenSelectionPanel::ChainToMap()::chained
 D CFullScreenSelectionPanel::GetKBMap()::s_pMap
 D CFullScreenSelectionPanel::GetMessageMap()::s_pMap
 D CFullScreenSelectionPanel::KB_ChainToMap()::chained
 D CFunctorJob::DoExecute()::tm_fmt
 D CJob::Abort(bool)::tm_fmt
 D CJob::Execute()::tm_fmt
 D CLookupViewPanel::ChainToAnimationMap()::chained
 D CLookupViewPanel::ChainToMap()::chained
 D CLookupViewPanel::GetKBMap()::s_pMap
 D CLookupViewPanel::GetMessageMap()::s_pMap
 D CLookupViewPanel::KB_ChainToMap()::chained
 D CLookupViewWindow::ChainToAnimationMap()::chained
 D CLookupViewWindow::ChainToMap()::chained
 D CLookupViewWindow::GetKBMap()::s_pMap
 D CLookupViewWindow::GetMessageMap()::s_pMap
 D CLookupViewWindow::KB_ChainToMap()::chained
 D CMessage::ChainToAnimationMap()::chained
 D CMessage::ChainToMap()::chained
 D CMessage::GetKBMap()::s_pMap
 D CMessage::GetMessageMap()::s_pMap
 D CMessage::KB_ChainToMap()::chained
 D CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::s_typeName
 D CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::s_typeName
 D CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::s_typeName
 D CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::s_typeName
 D CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::s_typeName
 D CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::s_typeName
 D CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::s_typeName
 D CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::s_typeName
 D CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::s_typeName
 D CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::s_typeName
 D CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::s_typeName
 D CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::s_typeName
 D CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::s_typeName
 D CNetMessagePB<16, CSVCMsg_Print, 0, true>::s_typeName
 D CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::s_typeName
 D CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::s_typeName
 D CNetMessagePB<18, CSVCMsg_SetView, 0, true>::s_typeName
 D CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::s_typeName
 D CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::s_typeName
 D CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::s_typeName
 D CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::s_typeName
 D CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::s_typeName
 D CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::s_typeName
 D CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::s_typeName
 D CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::s_typeName
 D CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::s_typeName
 D CNetMessagePB<29, CSVCMsg_Menu, 0, true>::s_typeName
 D CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::s_typeName
 D CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::s_typeName
 D CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::s_typeName
 D CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::s_typeName
 D CNetMessagePB<4, CNETMsg_Tick, 0, true>::s_typeName
 D CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::s_typeName
 D CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::s_typeName
 D CNetMessagePB<7, CNETMsg_SignonState, 13, true>::s_typeName
 D CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::s_typeName
 D CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::s_typeName
 D CNetMessagePB<9, CCLCMsg_Move, 11, false>::s_typeName
 D CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::s_typeName
 D CNewOperationDialog::ChainToAnimationMap()::chained
 D CNewOperationDialog::ChainToMap()::chained
 D CNewOperationDialog::GetKBMap()::s_pMap
 D CNewOperationDialog::GetMessageMap()::s_pMap
 D CNewOperationDialog::KB_ChainToMap()::chained
 D COcclusionUIPanel::ChainToAnimationMap()::chained
 D COcclusionUIPanel::ChainToMap()::chained
 D COcclusionUIPanel::GetKBMap()::s_pMap
 D COcclusionUIPanel::GetMessageMap()::s_pMap
 D COcclusionUIPanel::KB_ChainToMap()::chained
 D COcclusionUIPanel::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D COcclusionUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D COcclusionUIPanel::s_pOccVisualizeLabel
 D COperationFileListFrame::ChainToAnimationMap()::chained
 D COperationFileListFrame::ChainToMap()::chained
 D COperationFileListFrame::GetKBMap()::s_pMap
 D COperationFileListFrame::GetMessageMap()::s_pMap
 D COperationFileListFrame::KB_ChainToMap()::chained
 D COperationListPanel::ChainToAnimationMap()::chained
 D COperationListPanel::ChainToMap()::chained
 D COperationListPanel::GetKBMap()::s_pMap
 D COperationListPanel::GetMessageMap()::s_pMap
 D COperationListPanel::KB_ChainToMap()::chained
 D COperationListPanel::PanelMessageFunc_OnTextNewLine::InitVar()::bAdded
 D CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::DoExecute()::tm_fmt
 D CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::Run(CGameClient**, unsigned int, int, int, IThreadPool*)::tm_fmt
 D CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::DoExecute()::tm_fmt
 D CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::Run(CShadowMgr::DispDecalWorkItem_t*, unsigned int, int, int, IThreadPool*)::tm_fmt
 D CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::DoExecute()::tm_fmt
 D CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::Run(CrashItem_t*, unsigned int, int, int, IThreadPool*)::tm_fmt
 D CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::DoExecute()::tm_fmt
 D CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::Run(PackWork_t*, unsigned int, int, int, IThreadPool*)::tm_fmt
 D CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::DoExecute()::tm_fmt
 D CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::Run(int*, unsigned int, int, int, IThreadPool*)::tm_fmt
 D CPerfUIChildPanel::ChainToAnimationMap()::chained
 D CPerfUIChildPanel::ChainToMap()::chained
 D CPerfUIChildPanel::GetKBMap()::s_pMap
 D CPerfUIChildPanel::GetMessageMap()::s_pMap
 D CPerfUIChildPanel::KB_ChainToMap()::chained
 D CPerfUIPanel::ChainToAnimationMap()::chained
 D CPerfUIPanel::ChainToMap()::chained
 D CPerfUIPanel::GetKBMap()::s_pMap
 D CPerfUIPanel::GetMessageMap()::s_pMap
 D CPerfUIPanel::KB_ChainToMap()::chained
 D CPerfUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CPerforceFileListFrame::ChainToAnimationMap()::chained
 D CPerforceFileListFrame::ChainToMap()::chained
 D CPerforceFileListFrame::GetKBMap()::s_pMap
 D CPerforceFileListFrame::GetMessageMap()::s_pMap
 D CPerforceFileListFrame::KB_ChainToMap()::chained
 D CPluginGameUIDialog::ChainToAnimationMap()::chained
 D CPluginGameUIDialog::ChainToMap()::chained
 D CPluginGameUIDialog::GetKBMap()::s_pMap
 D CPluginGameUIDialog::GetMessageMap()::s_pMap
 D CPluginGameUIDialog::KB_ChainToMap()::chained
 D CPluginHudMessage::ChainToAnimationMap()::chained
 D CPluginHudMessage::ChainToMap()::chained
 D CPluginHudMessage::GetKBMap()::s_pMap
 D CPluginHudMessage::GetMessageMap()::s_pMap
 D CPluginHudMessage::KB_ChainToMap()::chained
 D CPluginMenu::ChainToAnimationMap()::chained
 D CPluginMenu::ChainToMap()::chained
 D CPluginMenu::GetKBMap()::s_pMap
 D CPluginMenu::GetMessageMap()::s_pMap
 D CPluginMenu::KB_ChainToMap()::chained
 D CPluginUIManager::ChainToAnimationMap()::chained
 D CPluginUIManager::ChainToMap()::chained
 D CPluginUIManager::GetKBMap()::s_pMap
 D CPluginUIManager::GetMessageMap()::s_pMap
 D CPluginUIManager::KB_ChainToMap()::chained
 D CPrecisionSlider::ChainToAnimationMap()::chained
 D CPrecisionSlider::ChainToMap()::chained
 D CPrecisionSlider::GetKBMap()::s_pMap
 D CPrecisionSlider::GetMessageMap()::s_pMap
 D CPrecisionSlider::KB_ChainToMap()::chained
 D CPrecisionSlider::PanelMessageFunc_OnTextNewLine::InitVar()::bAdded
 D CProceduralTexturePanel::ChainToAnimationMap()::chained
 D CProceduralTexturePanel::ChainToMap()::chained
 D CProceduralTexturePanel::GetKBMap()::s_pMap
 D CProceduralTexturePanel::GetMessageMap()::s_pMap
 D CProceduralTexturePanel::KB_ChainToMap()::chained
 D CProfileHierarchyPanel::ChainToAnimationMap()::chained
 D CProfileHierarchyPanel::ChainToMap()::chained
 D CProfileHierarchyPanel::GetKBMap()::s_pMap
 D CProfileHierarchyPanel::GetMessageMap()::s_pMap
 D CProfileHierarchyPanel::KB_ChainToMap()::chained
 D CProfileTree::ChainToAnimationMap()::chained
 D CProfileTree::ChainToMap()::chained
 D CProfileTree::GetKBMap()::s_pMap
 D CProfileTree::GetMessageMap()::s_pMap
 D CProfileTree::KB_ChainToMap()::chained
 D CPropFadeUIPanel::ChainToAnimationMap()::chained
 D CPropFadeUIPanel::ChainToMap()::chained
 D CPropFadeUIPanel::GetKBMap()::s_pMap
 D CPropFadeUIPanel::GetMessageMap()::s_pMap
 D CPropFadeUIPanel::KB_ChainToMap()::chained
 D CPropFadeUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CPropFadeUIPanel::s_pFadeVisualizeLabel
 D CRenderTextureEditor::ChainToAnimationMap()::chained
 D CRenderTextureEditor::ChainToMap()::chained
 D CRenderTextureEditor::GetKBMap()::s_pMap
 D CRenderTextureEditor::GetMessageMap()::s_pMap
 D CRenderTextureEditor::KB_ChainToMap()::chained
 D CRenderTexturesListViewPanel::ChainToAnimationMap()::chained
 D CRenderTexturesListViewPanel::ChainToMap()::chained
 D CRenderTexturesListViewPanel::GetKBMap()::s_pMap
 D CRenderTexturesListViewPanel::GetMessageMap()::s_pMap
 D CRenderTexturesListViewPanel::KB_ChainToMap()::chained
 D CSaveDocumentQuery::ChainToAnimationMap()::chained
 D CSaveDocumentQuery::ChainToMap()::chained
 D CSaveDocumentQuery::GetKBMap()::s_pMap
 D CSaveDocumentQuery::GetMessageMap()::s_pMap
 D CSaveDocumentQuery::KB_ChainToMap()::chained
 D CSelectedHSVUIPanel::ChainToAnimationMap()::chained
 D CSelectedHSVUIPanel::ChainToMap()::chained
 D CSelectedHSVUIPanel::GetKBMap()::s_pMap
 D CSelectedHSVUIPanel::GetMessageMap()::s_pMap
 D CSelectedHSVUIPanel::KB_ChainToMap()::chained
 D CSelectedHSVUIPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CSelectedHSVUIPanel::s_pSelectionMethodNames
 D CShadowMgr::AddShadowDecalToSurface(msurface2_t*, unsigned short)::__executeCount
 D CSmallTextEntry::ChainToAnimationMap()::chained
 D CSmallTextEntry::ChainToMap()::chained
 D CSmallTextEntry::GetKBMap()::s_pMap
 D CSmallTextEntry::GetMessageMap()::s_pMap
 D CSmallTextEntry::KB_ChainToMap()::chained
 D CTelemetryLock::CTelemetryLock(void*, char const*)::s_bNameSet
 D CTelemetryLock::CTelemetryLock(void*, char const*)::tm_fmt
 D CTelemetryLock::Locked()::tm_fmt
 D CTelemetryLock::Unlocked()::tm_fmt
 D CTextureListPanel::ChainToAnimationMap()::chained
 D CTextureListPanel::ChainToMap()::chained
 D CTextureListPanel::GetKBMap()::s_pMap
 D CTextureListPanel::GetMessageMap()::s_pMap
 D CTextureListPanel::KB_ChainToMap()::chained
 D CTextureListPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CUncorrectedImagePanel::ChainToAnimationMap()::chained
 D CUncorrectedImagePanel::ChainToMap()::chained
 D CUncorrectedImagePanel::GetKBMap()::s_pMap
 D CUncorrectedImagePanel::GetMessageMap()::s_pMap
 D CUncorrectedImagePanel::KB_ChainToMap()::chained
 D CUtlMemory<AddAngle, int>::Grow(int)::tm_fmt
 D CUtlMemory<AppSystemInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<BrushSideInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<ButtonCode_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CAppSystemGroup::Module_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CAsyncWavDataCache::DeadBufferEntry_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CAudioSourceCachedInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBaseBudgetPanel::BudgetGroupTimeData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBaseClient*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBaseDemoAction*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBasePhonemeTag, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBaseServer::SplitDisconnect_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBlackBoxRecord*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBrushBatchRender::surfacelist_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBudgetGroupInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<CBugUIPanel::includedfile, int>::Grow(int)::tm_fmt
 D CUtlMemory<CClientSendProp, int>::Grow(int)::tm_fmt
 D CUtlMemory<CColorCorrectionUIChildPanel*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CConPanel::CNotifyText, int>::Grow(int)::tm_fmt
 D CUtlMemory<CCoreDispInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDTIProp, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDemoPlayer::fullpacketinfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDemoPlayer::savegameinfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDispCollTriCache, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDispGroup*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDispInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDmxAttribute*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDmxElement*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDmxElementDictionary::DictInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEdgeList::Edge_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEdgeList::Surface_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEmphasisSample, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEngineTool::QuitHandler_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEntityBits, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEntityIndex, int>::Grow(int)::tm_fmt
 D CUtlMemory<CEventInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CFastLocalTransferPropInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<CFrameCacheEntry_s, int>::Grow(int)::tm_fmt
 D CUtlMemory<CFrameSnapshot*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CGameEventCallback*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CGameEventDescriptor*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CGameSaveRestoreInfo::CHashElement, int>::Grow(int)::tm_fmt
 D CUtlMemory<CGridData, int>::Grow(int)::tm_fmt
 D CUtlMemory<CGroupMesh*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CHLTVClient::SFullFrameSplitMsg, int>::Grow(int)::tm_fmt
 D CUtlMemory<CHTMLSection*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CImagePacker, int>::Grow(int)::tm_fmt
 D CUtlMemory<CInitTracker::InitFunc*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CInstantReplay::SInstantReplayFrame, int>::Grow(int)::tm_fmt
 D CUtlMemory<CKeyValueCache::kvcache_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CMaterialsBuckets<msurface2_t*>::MaterialSortInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CNetworkStringTable*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CNetworkStringTableItem::itemchange_s, int>::Grow(int)::tm_fmt
 D CUtlMemory<COwner*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CPhonemeTag*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CPhysCollide*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CPortalRect, int>::Grow(int)::tm_fmt
 D CUtlMemory<CPrimList, int>::Grow(int)::tm_fmt
 D CUtlMemory<CProfileHierarchyPanel::PanelEntry_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CRConServer::FailedRCon_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CRender::ViewStack_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSPSharedMemory*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSPVert, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSVCMsg_FullFrameSplit*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSaveRestore::SaveRestoreTranslate, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSendNode*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSendProxyRecipients, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSendTablePrecalc::CProxyPath, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSendTablePrecalc::CProxyPathEntry, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSendTablePrecalc::PropOffset_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CShadowMgr::ShadowVertexCache_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSocketCreator::AcceptedSocket_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSortedCacheFile, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSosOperator*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSosOperator::InputData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CSosOperator::OutputData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CStaticProp, int>::Grow(int)::tm_fmt
 D CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlBinaryBlock, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlCachedFileData<CAudioSourceCachedInfo>*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlDelegate<void (CVProfile*)>, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlMap<char*, double, unsigned short>*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlString, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbol, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolLarge, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolTable, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlSymbolTableLargeBaseTreeEntry_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int>::Grow(int)::tm_fmt
 D CUtlMemory<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, int>::Grow(int)::tm_fmt
 D CUtlMemory<CVGuiPaintHelper::Entry_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CVProfNode*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CVProfRecorder::CNodeAverage, int>::Grow(int)::tm_fmt
 D CUtlMemory<CVTFTexture::ResourceMemorySection, int>::Grow(int)::tm_fmt
 D CUtlMemory<CWin32UploadGameStats::FSMState_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CWingedEdgeList::Surface_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CWingedEdgeList::WingedEdge_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<CWordTag*, int>::Grow(int)::tm_fmt
 D CUtlMemory<CheatCodeData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<Color, int>::Grow(int)::tm_fmt
 D CUtlMemory<DecalMaterialBucket_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<DecalSortTrees_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<DecalSortVertexFormat_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<DemoCustomDataCallbackMapping_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<DispCollPlaneIndex_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<DmeTime_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<EdgeVisualizationInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<Frustum_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<IAppSystem*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IClientEntity*, int>::Grow(int)::tm_fmt
 D CUtlMemory<ICollideable*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IColorOperation*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IDispInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IMaterial*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IMesh*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IModelLoadCallback*, int>::Grow(int)::tm_fmt
 D CUtlMemory<INetMessage*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IToolSystem*, int>::Grow(int)::tm_fmt
 D CUtlMemory<IVProfExport::CExportedBudgetGroupInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<KeyValues*, int>::Grow(int)::tm_fmt
 D CUtlMemory<LightingState_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<LightmapTransformInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<LightmapUpdateInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<ModelDebugOverlayData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<ModelInstanceHashPair_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<PanelAnimationMapEntry, int>::Grow(int)::tm_fmt
 D CUtlMemory<PanelItem_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<QAngle, int>::Grow(int)::tm_fmt
 D CUtlMemory<Quaternion, int>::Grow(int)::tm_fmt
 D CUtlMemory<RecvProp const*, int>::Grow(int)::tm_fmt
 D CUtlMemory<RegisteredDemoCustomDataCallbackPair_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<RequestContext*, int>::Grow(int)::tm_fmt
 D CUtlMemory<ResourceEntryInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<S3RGBA, int>::Grow(int)::tm_fmt
 D CUtlMemory<SendProp const*, int>::Grow(int)::tm_fmt
 D CUtlMemory<SendTable*, int>::Grow(int)::tm_fmt
 D CUtlMemory<SndInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<SosStartQueueData_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<SosStopQueueData_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<SoundInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<Spike_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<StaticPropLeafLump_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<StringHistoryEntry, int>::Grow(int)::tm_fmt
 D CUtlMemory<TAssetInfo*, int>::Grow(int)::tm_fmt
 D CUtlMemory<TDisplacementImage, int>::Grow(int)::tm_fmt
 D CUtlMemory<ToolModule_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CAsyncWavDataCache::StreamedEntry_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CBrushBatchRender::brushrender_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::FlashlightInfo_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexCache_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexLargeList_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexSmallList_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::Shadow_t, unsigned short>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CShadowMgr::SortOrderInfo_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<int, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<char const*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<UtlRBTreeNode_t<void*, int>, int>::Grow(int)::tm_fmt
 D CUtlMemory<VMatrix, int>::Grow(int)::tm_fmt
 D CUtlMemory<VProfListenInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<VacClient::VarEntry_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<Vector, int>::Grow(int)::tm_fmt
 D CUtlMemory<Vector2D, int>::Grow(int)::tm_fmt
 D CUtlMemory<Vector4D, int>::Grow(int)::tm_fmt
 D CUtlMemory<WordBuf, int>::Grow(int)::tm_fmt
 D CUtlMemory<WorldListLeafData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<activethreadsound_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<audio_device_description_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<batchlist_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<bool, int>::Grow(int)::tm_fmt
 D CUtlMemory<char const*, int>::Grow(int)::tm_fmt
 D CUtlMemory<char*, int>::Grow(int)::tm_fmt
 D CUtlMemory<char, int>::Grow(int)::tm_fmt
 D CUtlMemory<collideable_handleentity_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<cplane_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<cplane_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<decal_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<dgamelump_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<edict_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<filelistelem_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<float, int>::Grow(int)::tm_fmt
 D CUtlMemory<int, int>::Grow(int)::tm_fmt
 D CUtlMemory<ipfilter_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<leafvis_t::Polygon_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<maplist_map_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<materiallist_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<memhandle_t__*, int>::Grow(int)::tm_fmt
 D CUtlMemory<meshlist_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<mmodel_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<model_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<model_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<modelsize_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<mouthenvelope_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<mouthoutput_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<moverlay_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<moverlayfragment_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<msurface2_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<musicsave_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<netadr_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<ns_address, int>::Grow(int)::tm_fmt
 D CUtlMemory<overlayvert_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<rdecalmodel_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<rmodel_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<robject_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<sentence_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<sentencegroup_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<short, int>::Grow(int)::tm_fmt
 D CUtlMemory<surfacesortgroup_t const*, int>::Grow(int)::tm_fmt
 D CUtlMemory<surfacesortgroup_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<surfacesortgroup_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<transsurfacebatch_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<unsigned char, int>::Grow(int)::tm_fmt
 D CUtlMemory<unsigned int, int>::Grow(int)::tm_fmt
 D CUtlMemory<unsigned long long, int>::Grow(int)::tm_fmt
 D CUtlMemory<unsigned long, int>::Grow(int)::tm_fmt
 D CUtlMemory<unsigned short, int>::Grow(int)::tm_fmt
 D CUtlMemory<userfilter_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::AnimationController::AnimCommand_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::AnimationController::AnimSequence_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::AnimationController::PostedMessage_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::AnimationController::RanEvent_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::BoundKey_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::BuildModeDialog*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::ClickPanel*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::DHANDLE<vgui::Menu>, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::FileData_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::FileData_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::IImage*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::IntRect, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::Label*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::Label::TImageInfo, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::LayoutPanel_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::MenuButton*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::MenuSeparator*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::MessageMapItem_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::OverridableColorEntry, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::PHandle, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::PageTab*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::Panel*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::PropertySheet::Page_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::RichText::TFormatStream, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::Splitter::SplitterInfo_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::TreeNode*, int>::Grow(int)::tm_fmt
 D CUtlMemory<vgui::layoutcmd_t, int>::Grow(int)::tm_fmt
 D CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)::tm_fmt
 D CUtlMemory<void*, int>::Grow(int)::tm_fmt
 D CUtlMemory<wchar_t*, int>::Grow(int)::tm_fmt
 D CUtlMemory<wchar_t, int>::Grow(int)::tm_fmt
 D CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::Insert(TAssetInfo* const&)::_assertionConstants
 D CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::Insert(TAssetInfo* const&)::_assertionFailedParams
 D CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::Insert(TAssetInfo* const&)::_assertionStatics
 D CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Insert(Vector const&)::_assertionConstants
 D CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Insert(Vector const&)::_assertionFailedParams
 D CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Insert(Vector const&)::_assertionStatics
 D CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)::_assertionConstants
 D CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)::_assertionFailedParams
 D CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)::_assertionStatics
 D CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::Insert(modelsize_t const&)::_assertionConstants
 D CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::Insert(modelsize_t const&)::_assertionFailedParams
 D CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::Insert(modelsize_t const&)::_assertionStatics
 D CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::Insert(unsigned short const&)::_assertionConstants
 D CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::Insert(unsigned short const&)::_assertionFailedParams
 D CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::Insert(unsigned short const&)::_assertionStatics
 D CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Insert(vgui::LayoutPanel_t const&)::_assertionConstants
 D CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Insert(vgui::LayoutPanel_t const&)::_assertionFailedParams
 D CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Insert(vgui::LayoutPanel_t const&)::_assertionStatics
 D CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::AddString(char const*)::tm_fmt
 D CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::Find(char const*) const::tm_fmt
 D CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::AddString(char const*)::tm_fmt
 D CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::Find(char const*) const::tm_fmt
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D CUtlVector<Vector, CUtlMemory<Vector, int> > const& CDmxAttribute::GetArray<Vector>() const::defaultArray
 D CUtlVector<Vector, CUtlMemory<Vector, int> > const& CDmxElement::GetArray<Vector>(char const*) const::defaultValue
 D CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D CUtlVector<float, CUtlMemory<float, int> > const& CDmxElement::GetArray<float>(char const*) const::defaultValue
 D CVBRHeader::m_dwXINGOffsets
 D CVEngineServer::ChangeLevel(char const*, char const*)::last_spawncount
 D CVEngineServer::ClientCommand(CEntityIndex, char const*, ...)::szOut
 D CVProfLabel::ChainToAnimationMap()::chained
 D CVProfLabel::ChainToMap()::chained
 D CVProfLabel::GetKBMap()::s_pMap
 D CVProfLabel::GetMessageMap()::s_pMap
 D CVProfLabel::KB_ChainToMap()::chained
 D CVProfPanel::ChainToAnimationMap()::chained
 D CVProfPanel::ChainToMap()::chained
 D CVProfPanel::GetKBMap()::s_pMap
 D CVProfPanel::GetMessageMap()::s_pMap
 D CVProfPanel::KB_ChainToMap()::chained
 D CVProfPanel::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D CVProfPanel::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CVProfSpikeDetector::GetTimeLast()::timeLast
 D CVRenderView::ViewDrawFade(unsigned char*, IMaterial*)::tm_fmt
 D CVmtTextEntry::ChainToAnimationMap()::chained
 D CVmtTextEntry::ChainToMap()::chained
 D CVmtTextEntry::GetKBMap()::s_pMap
 D CVmtTextEntry::GetMessageMap()::s_pMap
 D CVmtTextEntry::KB_ChainToMap()::chained
 D CVmtTextEntry::PanelMessageFunc_OpenVmtSelected::InitVar()::bAdded
 D CreateDirectoryDialog::ChainToAnimationMap()::chained
 D CreateDirectoryDialog::ChainToMap()::chained
 D CreateDirectoryDialog::GetKBMap()::s_pMap
 D CreateDirectoryDialog::GetMessageMap()::s_pMap
 D CreateDirectoryDialog::KB_ChainToMap()::chained
 D DSP_NOROOM_MIX
 D DSP_ROOM_MIX
 D DVariant::ToString()::text
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D GAME_HEADER::m_DataMap
 D GetBitForBitnum(int)::bitsForBitnum
 D GetEndMask(int)::bitStringEndMasks
 D GetStartBitMask(int)::g_StartMask
 D MapPropOffsetsToIndices(CBaseEdict const*, CSendTablePrecalc*, unsigned short const*, unsigned short, unsigned short*)::testDict
 D NS_CLIENT
 D NS_HLTV
 D NS_SERVER
 D PropTypeFns::Decode
 D PropTypeFns::DecodeZero
 D PropTypeFns::Encode
 D PropTypeFns::FastCopy
 D PropTypeFns::GetTypeNameString
 D PropTypeFns::IsEncodedZero
 D PropTypeFns::SkipProp
 D SAVELIGHTSTYLE::m_DataMap
 D SAVE_HEADER::m_DataMap
 D TxViewPanel::ChainToAnimationMap()::chained
 D TxViewPanel::ChainToMap()::chained
 D TxViewPanel::GetKBMap()::s_pMap
 D TxViewPanel::GetMessageMap()::s_pMap
 D TxViewPanel::KB_ChainToMap()::chained
 D TxViewPanel::PanelMessageFunc_OnFileSelected::InitVar()::bAdded
 D VTFFileBaseHeader_t::m_DataMap
 D VTFFileHeaderV7_1_t::m_DataMap
 D VTFFileHeaderV7_2_t::m_DataMap
 D VTFFileHeaderV7_3_t::m_DataMap
 D VTFFileHeaderX360_t::m_DataMap
 D VTFFileHeader_t::m_DataMap
 D VTT for CAreaPortalsUIPanel
 D VTT for CAskConnectPanel
 D VTT for CBaseActionCDTrackStartDialog
 D VTT for CBaseActionChangePlaybackRateDialog
 D VTT for CBaseActionEditDialog
 D VTT for CBaseActionPauseDialog
 D VTT for CBaseActionPlayCommandsDialog
 D VTT for CBaseActionPlaySoundStartDialog
 D VTT for CBaseActionScreenFadeStartDialog
 D VTT for CBaseActionSkipAheadDialog
 D VTT for CBaseActionStopPlaybackDialog
 D VTT for CBaseActionTextMessageStartDialog
 D VTT for CBaseActionWithStopTimeDialog
 D VTT for CBaseActionZoomDialog
 D VTT for CBaseBudgetPanel
 D VTT for CBasePanel
 D VTT for CBudgetBarGraphPanel
 D VTT for CBudgetHistoryPanel
 D VTT for CBudgetPanelEngine
 D VTT for CBudgetPanelShared
 D VTT for CBugReportFinishedDialog
 D VTT for CBugReportUploadProgressDialog
 D VTT for CBugUIPanel
 D VTT for CBuildModeNavCombo
 D VTT for CColorBalanceUIPanel
 D VTT for CColorCorrectionUIChildPanel
 D VTT for CColorCorrectionUIPanel
 D VTT for CColorCurvesEditPanel
 D VTT for CColorCurvesUIPanel
 D VTT for CColorHistogramPanel
 D VTT for CColorLevelsUIPanel
 D VTT for CColorLookupUIPanel
 D VTT for CColorOperationListPanel
 D VTT for CColorSlider
 D VTT for CConPanel
 D VTT for CConVarCheckButton
 D VTT for CCurveEditorPanel
 D VTT for CDebugCommandButton
 D VTT for CDebugCommandCheckbox
 D VTT for CDebugIncrementCVarButton
 D VTT for CDebugMenuButton
 D VTT for CDebugOptionsPage
 D VTT for CDebugOptionsPanel
 D VTT for CDebugSystemPanel
 D VTT for CDragDropHelperPanel
 D VTT for CDrawTreeFrame
 D VTT for CEnginePanel
 D VTT for CEntityReportPanel
 D VTT for CFocusOverlayPanel
 D VTT for CFogUIPanel
 D VTT for CFullScreenSelectionPanel
 D VTT for CLookupViewPanel
 D VTT for CLookupViewWindow
 D VTT for CMessage
 D VTT for CNewOperationDialog
 D VTT for COcclusionUIPanel
 D VTT for COperationFileListFrame
 D VTT for COperationListPanel
 D VTT for CPerfUIChildPanel
 D VTT for CPerfUIPanel
 D VTT for CPerforceFileListFrame
 D VTT for CPluginGameUIDialog
 D VTT for CPluginHudMessage
 D VTT for CPluginMenu
 D VTT for CPluginUIManager
 D VTT for CPrecisionSlider
 D VTT for CProceduralTexturePanel
 D VTT for CProfileHierarchyPanel
 D VTT for CProfileTree
 D VTT for CPropFadeUIPanel
 D VTT for CRenderTextureEditor
 D VTT for CRenderTexturesListViewPanel
 D VTT for CSaveDocumentQuery
 D VTT for CSelectedHSVUIPanel
 D VTT for CSmallTextEntry
 D VTT for CStaticPanel
 D VTT for CTextureBudgetPanel
 D VTT for CTextureListPanel
 D VTT for CUncorrectedImagePanel
 D VTT for CVGuiTree
 D VTT for CVProfGraphPanel
 D VTT for CVProfLabel
 D VTT for CVProfPanel
 D VTT for CVmtTextEntry
 D VTT for ColumnButton
 D VTT for CreateDirectoryDialog
 D VTT for Dragger
 D VTT for TxViewPanel
 D VTT for vgui::AnimatingImagePanel
 D VTT for vgui::AnimationController
 D VTT for vgui::BaseInputDialog
 D VTT for vgui::BuildModeDialog
 D VTT for vgui::Button
 D VTT for vgui::CBitmapImagePanel
 D VTT for vgui::CTreeViewListControl
 D VTT for vgui::CheckButton
 D VTT for vgui::CircularProgressBar
 D VTT for vgui::ClickPanel
 D VTT for vgui::ComboBox
 D VTT for vgui::ComboBoxButton
 D VTT for vgui::ContextLabel
 D VTT for vgui::ContinuousProgressBar
 D VTT for vgui::CvarToggleCheckButton<ConVarRef>
 D VTT for vgui::DirectorySelectDialog
 D VTT for vgui::DirectoryTreeView
 D VTT for vgui::Divider
 D VTT for vgui::EditablePanel
 D VTT for vgui::ExpandButton
 D VTT for vgui::FileNameComboBox
 D VTT for vgui::FileOpenDialog
 D VTT for vgui::FileOpenStateMachine
 D VTT for vgui::Frame
 D VTT for vgui::FrameButton
 D VTT for vgui::FrameSystemButton
 D VTT for vgui::GraphPanel
 D VTT for vgui::ImagePanel
 D VTT for vgui::InputDialog
 D VTT for vgui::Label
 D VTT for vgui::ListPanel
 D VTT for vgui::ListViewItem
 D VTT for vgui::ListViewPanel
 D VTT for vgui::Menu
 D VTT for vgui::MenuBar
 D VTT for vgui::MenuButton
 D VTT for vgui::MenuItem
 D VTT for vgui::MenuSeparator
 D VTT for vgui::MessageBox
 D VTT for vgui::PageTab
 D VTT for vgui::Panel
 D VTT for vgui::PanelListPanel
 D VTT for vgui::ProgressBar
 D VTT for vgui::PropertyDialog
 D VTT for vgui::PropertyPage
 D VTT for vgui::PropertySheet
 D VTT for vgui::RadioButton
 D VTT for vgui::RichText
 D VTT for vgui::RichTextInterior
 D VTT for vgui::ScalableImagePanel
 D VTT for vgui::ScrollBar
 D VTT for vgui::ScrollBarSlider
 D VTT for vgui::Slider
 D VTT for vgui::Splitter
 D VTT for vgui::SplitterChildPanel
 D VTT for vgui::SplitterHandle
 D VTT for vgui::TextEntry
 D VTT for vgui::TileViewPanelEx
 D VTT for vgui::ToggleButton
 D VTT for vgui::TreeNode
 D VTT for vgui::TreeNodeDropPanel
 D VTT for vgui::TreeNodeImage
 D VTT for vgui::TreeNodeText
 D VTT for vgui::TreeView
 D VTT for vgui::TreeViewSubPanel
 D VTT for vgui::URLLabel
 D Vector const& CDmxAttribute::GetValue<Vector>() const::defaultValue
 D Vector const& CDmxElement::GetValue<Vector>(char const*) const::defaultValue
 D amp_rng
 D audiosourcecache
 D bool RecvTable_ReadFieldList_Guts<false>(RecvTable*, bf_read&, int, int)::tm_fmt
 D bool RecvTable_ReadFieldList_Guts<true>(RecvTable*, bf_read&, int, int)::tm_fmt
 D bool const& CDmxAttribute::GetValue<bool>() const::defaultValue
 D bool const& CDmxElement::GetValue<bool>(char const*) const::defaultValue
 D bugreporter
 D cl_cmdrate
 D cl_rate
 D cl_updaterate
 D cmd_clientslot
 D colorcorrectiontools
 D construction vtable for CBaseActionEditDialog-in-CBaseActionCDTrackStartDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionChangePlaybackRateDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionPauseDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionPlayCommandsDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionPlaySoundStartDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionScreenFadeStartDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionSkipAheadDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionStopPlaybackDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionTextMessageStartDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionWithStopTimeDialog
 D construction vtable for CBaseActionEditDialog-in-CBaseActionZoomDialog
 D construction vtable for CBaseActionWithStopTimeDialog-in-CBaseActionChangePlaybackRateDialog
 D construction vtable for CBaseBudgetPanel-in-CBudgetPanelEngine
 D construction vtable for CBaseBudgetPanel-in-CBudgetPanelShared
 D construction vtable for CBaseBudgetPanel-in-CTextureBudgetPanel
 D construction vtable for CBasePanel-in-CConPanel
 D construction vtable for CBasePanel-in-CEntityReportPanel
 D construction vtable for CBudgetPanelShared-in-CBudgetPanelEngine
 D construction vtable for CColorCorrectionUIChildPanel-in-CColorBalanceUIPanel
 D construction vtable for CColorCorrectionUIChildPanel-in-CColorCurvesUIPanel
 D construction vtable for CColorCorrectionUIChildPanel-in-CColorLevelsUIPanel
 D construction vtable for CColorCorrectionUIChildPanel-in-CColorLookupUIPanel
 D construction vtable for CColorCorrectionUIChildPanel-in-CSelectedHSVUIPanel
 D construction vtable for CCurveEditorPanel-in-CColorCurvesEditPanel
 D construction vtable for COperationFileListFrame-in-CPerforceFileListFrame
 D construction vtable for CPerfUIChildPanel-in-CAreaPortalsUIPanel
 D construction vtable for CPerfUIChildPanel-in-COcclusionUIPanel
 D construction vtable for CPerfUIChildPanel-in-CPropFadeUIPanel
 D construction vtable for CProceduralTexturePanel-in-CLookupViewPanel
 D construction vtable for CProceduralTexturePanel-in-CUncorrectedImagePanel
 D construction vtable for vgui::BaseInputDialog-in-vgui::InputDialog
 D construction vtable for vgui::Button-in-CConVarCheckButton
 D construction vtable for vgui::Button-in-CDebugCommandButton
 D construction vtable for vgui::Button-in-CDebugCommandCheckbox
 D construction vtable for vgui::Button-in-CDebugIncrementCVarButton
 D construction vtable for vgui::Button-in-CDebugMenuButton
 D construction vtable for vgui::Button-in-ColumnButton
 D construction vtable for vgui::Button-in-vgui::CheckButton
 D construction vtable for vgui::Button-in-vgui::ComboBoxButton
 D construction vtable for vgui::Button-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Button-in-vgui::ExpandButton
 D construction vtable for vgui::Button-in-vgui::FrameButton
 D construction vtable for vgui::Button-in-vgui::FrameSystemButton
 D construction vtable for vgui::Button-in-vgui::MenuButton
 D construction vtable for vgui::Button-in-vgui::MenuItem
 D construction vtable for vgui::Button-in-vgui::PageTab
 D construction vtable for vgui::Button-in-vgui::RadioButton
 D construction vtable for vgui::Button-in-vgui::ToggleButton
 D construction vtable for vgui::CTreeViewListControl-in-CProfileHierarchyPanel
 D construction vtable for vgui::CheckButton-in-CConVarCheckButton
 D construction vtable for vgui::CheckButton-in-CDebugCommandCheckbox
 D construction vtable for vgui::CheckButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ComboBox-in-CBuildModeNavCombo
 D construction vtable for vgui::ComboBox-in-vgui::FileNameComboBox
 D construction vtable for vgui::EditablePanel-in-CAreaPortalsUIPanel
 D construction vtable for vgui::EditablePanel-in-CAskConnectPanel
 D construction vtable for vgui::EditablePanel-in-CBaseActionCDTrackStartDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionChangePlaybackRateDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionEditDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionPauseDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionPlayCommandsDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionPlaySoundStartDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionScreenFadeStartDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionSkipAheadDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionStopPlaybackDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionTextMessageStartDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionWithStopTimeDialog
 D construction vtable for vgui::EditablePanel-in-CBaseActionZoomDialog
 D construction vtable for vgui::EditablePanel-in-CBugReportFinishedDialog
 D construction vtable for vgui::EditablePanel-in-CBugReportUploadProgressDialog
 D construction vtable for vgui::EditablePanel-in-CBugUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorBalanceUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorCorrectionUIChildPanel
 D construction vtable for vgui::EditablePanel-in-CColorCorrectionUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorCurvesUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorLevelsUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorLookupUIPanel
 D construction vtable for vgui::EditablePanel-in-CColorOperationListPanel
 D construction vtable for vgui::EditablePanel-in-CDebugOptionsPage
 D construction vtable for vgui::EditablePanel-in-CDebugOptionsPanel
 D construction vtable for vgui::EditablePanel-in-CDrawTreeFrame
 D construction vtable for vgui::EditablePanel-in-CEnginePanel
 D construction vtable for vgui::EditablePanel-in-CFogUIPanel
 D construction vtable for vgui::EditablePanel-in-CLookupViewPanel
 D construction vtable for vgui::EditablePanel-in-CLookupViewWindow
 D construction vtable for vgui::EditablePanel-in-CNewOperationDialog
 D construction vtable for vgui::EditablePanel-in-COcclusionUIPanel
 D construction vtable for vgui::EditablePanel-in-COperationFileListFrame
 D construction vtable for vgui::EditablePanel-in-CPerfUIChildPanel
 D construction vtable for vgui::EditablePanel-in-CPerfUIPanel
 D construction vtable for vgui::EditablePanel-in-CPerforceFileListFrame
 D construction vtable for vgui::EditablePanel-in-CPluginGameUIDialog
 D construction vtable for vgui::EditablePanel-in-CPluginHudMessage
 D construction vtable for vgui::EditablePanel-in-CPluginMenu
 D construction vtable for vgui::EditablePanel-in-CProceduralTexturePanel
 D construction vtable for vgui::EditablePanel-in-CPropFadeUIPanel
 D construction vtable for vgui::EditablePanel-in-CRenderTextureEditor
 D construction vtable for vgui::EditablePanel-in-CSaveDocumentQuery
 D construction vtable for vgui::EditablePanel-in-CSelectedHSVUIPanel
 D construction vtable for vgui::EditablePanel-in-CTextureListPanel
 D construction vtable for vgui::EditablePanel-in-CUncorrectedImagePanel
 D construction vtable for vgui::EditablePanel-in-CVProfPanel
 D construction vtable for vgui::EditablePanel-in-CreateDirectoryDialog
 D construction vtable for vgui::EditablePanel-in-TxViewPanel
 D construction vtable for vgui::EditablePanel-in-vgui::BaseInputDialog
 D construction vtable for vgui::EditablePanel-in-vgui::BuildModeDialog
 D construction vtable for vgui::EditablePanel-in-vgui::DirectorySelectDialog
 D construction vtable for vgui::EditablePanel-in-vgui::FileOpenDialog
 D construction vtable for vgui::EditablePanel-in-vgui::Frame
 D construction vtable for vgui::EditablePanel-in-vgui::InputDialog
 D construction vtable for vgui::EditablePanel-in-vgui::MessageBox
 D construction vtable for vgui::EditablePanel-in-vgui::PropertyDialog
 D construction vtable for vgui::EditablePanel-in-vgui::PropertyPage
 D construction vtable for vgui::EditablePanel-in-vgui::PropertySheet
 D construction vtable for vgui::EditablePanel-in-vgui::Splitter
 D construction vtable for vgui::EditablePanel-in-vgui::SplitterChildPanel
 D construction vtable for vgui::Frame-in-CBaseActionCDTrackStartDialog
 D construction vtable for vgui::Frame-in-CBaseActionChangePlaybackRateDialog
 D construction vtable for vgui::Frame-in-CBaseActionEditDialog
 D construction vtable for vgui::Frame-in-CBaseActionPauseDialog
 D construction vtable for vgui::Frame-in-CBaseActionPlayCommandsDialog
 D construction vtable for vgui::Frame-in-CBaseActionPlaySoundStartDialog
 D construction vtable for vgui::Frame-in-CBaseActionScreenFadeStartDialog
 D construction vtable for vgui::Frame-in-CBaseActionSkipAheadDialog
 D construction vtable for vgui::Frame-in-CBaseActionStopPlaybackDialog
 D construction vtable for vgui::Frame-in-CBaseActionTextMessageStartDialog
 D construction vtable for vgui::Frame-in-CBaseActionWithStopTimeDialog
 D construction vtable for vgui::Frame-in-CBaseActionZoomDialog
 D construction vtable for vgui::Frame-in-CBugReportFinishedDialog
 D construction vtable for vgui::Frame-in-CBugReportUploadProgressDialog
 D construction vtable for vgui::Frame-in-CBugUIPanel
 D construction vtable for vgui::Frame-in-CColorBalanceUIPanel
 D construction vtable for vgui::Frame-in-CColorCorrectionUIChildPanel
 D construction vtable for vgui::Frame-in-CColorCorrectionUIPanel
 D construction vtable for vgui::Frame-in-CColorCurvesUIPanel
 D construction vtable for vgui::Frame-in-CColorLevelsUIPanel
 D construction vtable for vgui::Frame-in-CColorLookupUIPanel
 D construction vtable for vgui::Frame-in-CDebugOptionsPanel
 D construction vtable for vgui::Frame-in-CDrawTreeFrame
 D construction vtable for vgui::Frame-in-CFogUIPanel
 D construction vtable for vgui::Frame-in-CLookupViewWindow
 D construction vtable for vgui::Frame-in-CNewOperationDialog
 D construction vtable for vgui::Frame-in-COperationFileListFrame
 D construction vtable for vgui::Frame-in-CPerfUIPanel
 D construction vtable for vgui::Frame-in-CPerforceFileListFrame
 D construction vtable for vgui::Frame-in-CPluginGameUIDialog
 D construction vtable for vgui::Frame-in-CPluginHudMessage
 D construction vtable for vgui::Frame-in-CRenderTextureEditor
 D construction vtable for vgui::Frame-in-CSaveDocumentQuery
 D construction vtable for vgui::Frame-in-CSelectedHSVUIPanel
 D construction vtable for vgui::Frame-in-CTextureListPanel
 D construction vtable for vgui::Frame-in-CVProfPanel
 D construction vtable for vgui::Frame-in-CreateDirectoryDialog
 D construction vtable for vgui::Frame-in-TxViewPanel
 D construction vtable for vgui::Frame-in-vgui::BaseInputDialog
 D construction vtable for vgui::Frame-in-vgui::BuildModeDialog
 D construction vtable for vgui::Frame-in-vgui::DirectorySelectDialog
 D construction vtable for vgui::Frame-in-vgui::FileOpenDialog
 D construction vtable for vgui::Frame-in-vgui::InputDialog
 D construction vtable for vgui::Frame-in-vgui::MessageBox
 D construction vtable for vgui::Frame-in-vgui::PropertyDialog
 D construction vtable for vgui::ImagePanel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Label-in-CConVarCheckButton
 D construction vtable for vgui::Label-in-CDebugCommandButton
 D construction vtable for vgui::Label-in-CDebugCommandCheckbox
 D construction vtable for vgui::Label-in-CDebugIncrementCVarButton
 D construction vtable for vgui::Label-in-CDebugMenuButton
 D construction vtable for vgui::Label-in-CMessage
 D construction vtable for vgui::Label-in-CVProfLabel
 D construction vtable for vgui::Label-in-ColumnButton
 D construction vtable for vgui::Label-in-vgui::Button
 D construction vtable for vgui::Label-in-vgui::CheckButton
 D construction vtable for vgui::Label-in-vgui::ComboBoxButton
 D construction vtable for vgui::Label-in-vgui::ContextLabel
 D construction vtable for vgui::Label-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Label-in-vgui::ExpandButton
 D construction vtable for vgui::Label-in-vgui::FrameButton
 D construction vtable for vgui::Label-in-vgui::FrameSystemButton
 D construction vtable for vgui::Label-in-vgui::ListViewItem
 D construction vtable for vgui::Label-in-vgui::MenuButton
 D construction vtable for vgui::Label-in-vgui::MenuItem
 D construction vtable for vgui::Label-in-vgui::PageTab
 D construction vtable for vgui::Label-in-vgui::RadioButton
 D construction vtable for vgui::Label-in-vgui::ToggleButton
 D construction vtable for vgui::Label-in-vgui::URLLabel
 D construction vtable for vgui::ListPanel-in-COperationListPanel
 D construction vtable for vgui::MenuButton-in-CDebugMenuButton
 D construction vtable for vgui::MenuButton-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-CAreaPortalsUIPanel
 D construction vtable for vgui::Panel-in-CAskConnectPanel
 D construction vtable for vgui::Panel-in-CBaseActionCDTrackStartDialog
 D construction vtable for vgui::Panel-in-CBaseActionChangePlaybackRateDialog
 D construction vtable for vgui::Panel-in-CBaseActionEditDialog
 D construction vtable for vgui::Panel-in-CBaseActionPauseDialog
 D construction vtable for vgui::Panel-in-CBaseActionPlayCommandsDialog
 D construction vtable for vgui::Panel-in-CBaseActionPlaySoundStartDialog
 D construction vtable for vgui::Panel-in-CBaseActionScreenFadeStartDialog
 D construction vtable for vgui::Panel-in-CBaseActionSkipAheadDialog
 D construction vtable for vgui::Panel-in-CBaseActionStopPlaybackDialog
 D construction vtable for vgui::Panel-in-CBaseActionTextMessageStartDialog
 D construction vtable for vgui::Panel-in-CBaseActionWithStopTimeDialog
 D construction vtable for vgui::Panel-in-CBaseActionZoomDialog
 D construction vtable for vgui::Panel-in-CBaseBudgetPanel
 D construction vtable for vgui::Panel-in-CBasePanel
 D construction vtable for vgui::Panel-in-CBudgetBarGraphPanel
 D construction vtable for vgui::Panel-in-CBudgetHistoryPanel
 D construction vtable for vgui::Panel-in-CBudgetPanelEngine
 D construction vtable for vgui::Panel-in-CBudgetPanelShared
 D construction vtable for vgui::Panel-in-CBugReportFinishedDialog
 D construction vtable for vgui::Panel-in-CBugReportUploadProgressDialog
 D construction vtable for vgui::Panel-in-CBugUIPanel
 D construction vtable for vgui::Panel-in-CBuildModeNavCombo
 D construction vtable for vgui::Panel-in-CColorBalanceUIPanel
 D construction vtable for vgui::Panel-in-CColorCorrectionUIChildPanel
 D construction vtable for vgui::Panel-in-CColorCorrectionUIPanel
 D construction vtable for vgui::Panel-in-CColorCurvesEditPanel
 D construction vtable for vgui::Panel-in-CColorCurvesUIPanel
 D construction vtable for vgui::Panel-in-CColorHistogramPanel
 D construction vtable for vgui::Panel-in-CColorLevelsUIPanel
 D construction vtable for vgui::Panel-in-CColorLookupUIPanel
 D construction vtable for vgui::Panel-in-CColorOperationListPanel
 D construction vtable for vgui::Panel-in-CColorSlider
 D construction vtable for vgui::Panel-in-CConPanel
 D construction vtable for vgui::Panel-in-CConVarCheckButton
 D construction vtable for vgui::Panel-in-CCurveEditorPanel
 D construction vtable for vgui::Panel-in-CDebugCommandButton
 D construction vtable for vgui::Panel-in-CDebugCommandCheckbox
 D construction vtable for vgui::Panel-in-CDebugIncrementCVarButton
 D construction vtable for vgui::Panel-in-CDebugMenuButton
 D construction vtable for vgui::Panel-in-CDebugOptionsPage
 D construction vtable for vgui::Panel-in-CDebugOptionsPanel
 D construction vtable for vgui::Panel-in-CDebugSystemPanel
 D construction vtable for vgui::Panel-in-CDragDropHelperPanel
 D construction vtable for vgui::Panel-in-CDrawTreeFrame
 D construction vtable for vgui::Panel-in-CEnginePanel
 D construction vtable for vgui::Panel-in-CEntityReportPanel
 D construction vtable for vgui::Panel-in-CFocusOverlayPanel
 D construction vtable for vgui::Panel-in-CFogUIPanel
 D construction vtable for vgui::Panel-in-CFullScreenSelectionPanel
 D construction vtable for vgui::Panel-in-CLookupViewPanel
 D construction vtable for vgui::Panel-in-CLookupViewWindow
 D construction vtable for vgui::Panel-in-CMessage
 D construction vtable for vgui::Panel-in-CNewOperationDialog
 D construction vtable for vgui::Panel-in-COcclusionUIPanel
 D construction vtable for vgui::Panel-in-COperationFileListFrame
 D construction vtable for vgui::Panel-in-COperationListPanel
 D construction vtable for vgui::Panel-in-CPerfUIChildPanel
 D construction vtable for vgui::Panel-in-CPerfUIPanel
 D construction vtable for vgui::Panel-in-CPerforceFileListFrame
 D construction vtable for vgui::Panel-in-CPluginGameUIDialog
 D construction vtable for vgui::Panel-in-CPluginHudMessage
 D construction vtable for vgui::Panel-in-CPluginMenu
 D construction vtable for vgui::Panel-in-CPluginUIManager
 D construction vtable for vgui::Panel-in-CPrecisionSlider
 D construction vtable for vgui::Panel-in-CProceduralTexturePanel
 D construction vtable for vgui::Panel-in-CProfileHierarchyPanel
 D construction vtable for vgui::Panel-in-CProfileTree
 D construction vtable for vgui::Panel-in-CPropFadeUIPanel
 D construction vtable for vgui::Panel-in-CRenderTextureEditor
 D construction vtable for vgui::Panel-in-CRenderTexturesListViewPanel
 D construction vtable for vgui::Panel-in-CSaveDocumentQuery
 D construction vtable for vgui::Panel-in-CSelectedHSVUIPanel
 D construction vtable for vgui::Panel-in-CSmallTextEntry
 D construction vtable for vgui::Panel-in-CStaticPanel
 D construction vtable for vgui::Panel-in-CTextureBudgetPanel
 D construction vtable for vgui::Panel-in-CTextureListPanel
 D construction vtable for vgui::Panel-in-CUncorrectedImagePanel
 D construction vtable for vgui::Panel-in-CVGuiTree
 D construction vtable for vgui::Panel-in-CVProfGraphPanel
 D construction vtable for vgui::Panel-in-CVProfLabel
 D construction vtable for vgui::Panel-in-CVProfPanel
 D construction vtable for vgui::Panel-in-CVmtTextEntry
 D construction vtable for vgui::Panel-in-ColumnButton
 D construction vtable for vgui::Panel-in-CreateDirectoryDialog
 D construction vtable for vgui::Panel-in-Dragger
 D construction vtable for vgui::Panel-in-TxViewPanel
 D construction vtable for vgui::Panel-in-vgui::AnimatingImagePanel
 D construction vtable for vgui::Panel-in-vgui::AnimationController
 D construction vtable for vgui::Panel-in-vgui::BaseInputDialog
 D construction vtable for vgui::Panel-in-vgui::BuildModeDialog
 D construction vtable for vgui::Panel-in-vgui::Button
 D construction vtable for vgui::Panel-in-vgui::CBitmapImagePanel
 D construction vtable for vgui::Panel-in-vgui::CTreeViewListControl
 D construction vtable for vgui::Panel-in-vgui::CheckButton
 D construction vtable for vgui::Panel-in-vgui::CircularProgressBar
 D construction vtable for vgui::Panel-in-vgui::ClickPanel
 D construction vtable for vgui::Panel-in-vgui::ComboBox
 D construction vtable for vgui::Panel-in-vgui::ComboBoxButton
 D construction vtable for vgui::Panel-in-vgui::ContextLabel
 D construction vtable for vgui::Panel-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::Panel-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Panel-in-vgui::DirectorySelectDialog
 D construction vtable for vgui::Panel-in-vgui::DirectoryTreeView
 D construction vtable for vgui::Panel-in-vgui::Divider
 D construction vtable for vgui::Panel-in-vgui::EditablePanel
 D construction vtable for vgui::Panel-in-vgui::ExpandButton
 D construction vtable for vgui::Panel-in-vgui::FileNameComboBox
 D construction vtable for vgui::Panel-in-vgui::FileOpenDialog
 D construction vtable for vgui::Panel-in-vgui::FileOpenStateMachine
 D construction vtable for vgui::Panel-in-vgui::Frame
 D construction vtable for vgui::Panel-in-vgui::FrameButton
 D construction vtable for vgui::Panel-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-vgui::GraphPanel
 D construction vtable for vgui::Panel-in-vgui::ImagePanel
 D construction vtable for vgui::Panel-in-vgui::InputDialog
 D construction vtable for vgui::Panel-in-vgui::Label
 D construction vtable for vgui::Panel-in-vgui::ListPanel
 D construction vtable for vgui::Panel-in-vgui::ListViewItem
 D construction vtable for vgui::Panel-in-vgui::ListViewPanel
 D construction vtable for vgui::Panel-in-vgui::Menu
 D construction vtable for vgui::Panel-in-vgui::MenuBar
 D construction vtable for vgui::Panel-in-vgui::MenuButton
 D construction vtable for vgui::Panel-in-vgui::MenuItem
 D construction vtable for vgui::Panel-in-vgui::MenuSeparator
 D construction vtable for vgui::Panel-in-vgui::MessageBox
 D construction vtable for vgui::Panel-in-vgui::PageTab
 D construction vtable for vgui::Panel-in-vgui::PanelListPanel
 D construction vtable for vgui::Panel-in-vgui::ProgressBar
 D construction vtable for vgui::Panel-in-vgui::PropertyDialog
 D construction vtable for vgui::Panel-in-vgui::PropertyPage
 D construction vtable for vgui::Panel-in-vgui::PropertySheet
 D construction vtable for vgui::Panel-in-vgui::RadioButton
 D construction vtable for vgui::Panel-in-vgui::RichText
 D construction vtable for vgui::Panel-in-vgui::RichTextInterior
 D construction vtable for vgui::Panel-in-vgui::ScalableImagePanel
 D construction vtable for vgui::Panel-in-vgui::ScrollBar
 D construction vtable for vgui::Panel-in-vgui::ScrollBarSlider
 D construction vtable for vgui::Panel-in-vgui::Slider
 D construction vtable for vgui::Panel-in-vgui::Splitter
 D construction vtable for vgui::Panel-in-vgui::SplitterChildPanel
 D construction vtable for vgui::Panel-in-vgui::SplitterHandle
 D construction vtable for vgui::Panel-in-vgui::TextEntry
 D construction vtable for vgui::Panel-in-vgui::TileViewPanelEx
 D construction vtable for vgui::Panel-in-vgui::ToggleButton
 D construction vtable for vgui::Panel-in-vgui::TreeNode
 D construction vtable for vgui::Panel-in-vgui::TreeNodeDropPanel
 D construction vtable for vgui::Panel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Panel-in-vgui::TreeNodeText
 D construction vtable for vgui::Panel-in-vgui::TreeView
 D construction vtable for vgui::Panel-in-vgui::TreeViewSubPanel
 D construction vtable for vgui::Panel-in-vgui::URLLabel
 D construction vtable for vgui::ProgressBar-in-vgui::CircularProgressBar
 D construction vtable for vgui::ProgressBar-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::PropertyDialog-in-CDebugOptionsPanel
 D construction vtable for vgui::PropertyPage-in-CDebugOptionsPage
 D construction vtable for vgui::Slider-in-CPrecisionSlider
 D construction vtable for vgui::TextEntry-in-CBuildModeNavCombo
 D construction vtable for vgui::TextEntry-in-CSmallTextEntry
 D construction vtable for vgui::TextEntry-in-CVmtTextEntry
 D construction vtable for vgui::TextEntry-in-vgui::ComboBox
 D construction vtable for vgui::TextEntry-in-vgui::FileNameComboBox
 D construction vtable for vgui::TextEntry-in-vgui::TreeNodeText
 D construction vtable for vgui::TileViewPanelEx-in-CRenderTexturesListViewPanel
 D construction vtable for vgui::ToggleButton-in-CConVarCheckButton
 D construction vtable for vgui::ToggleButton-in-CDebugCommandCheckbox
 D construction vtable for vgui::ToggleButton-in-vgui::CheckButton
 D construction vtable for vgui::ToggleButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ToggleButton-in-vgui::ExpandButton
 D construction vtable for vgui::ToggleButton-in-vgui::RadioButton
 D construction vtable for vgui::TreeView-in-CProfileTree
 D construction vtable for vgui::TreeView-in-CVGuiTree
 D construction vtable for vgui::TreeView-in-vgui::DirectoryTreeView
 D crs_rng
 D cv
 D datamap_t* DataMapInit<BSPHeader_t>(BSPHeader_t*)::dataDesc
 D datamap_t* DataMapInit<BSPHeader_t>(BSPHeader_t*)::nameHolder
 D datamap_t* DataMapInit<GAME_HEADER>(GAME_HEADER*)::dataDesc
 D datamap_t* DataMapInit<GAME_HEADER>(GAME_HEADER*)::nameHolder
 D datamap_t* DataMapInit<SAVELIGHTSTYLE>(SAVELIGHTSTYLE*)::dataDesc
 D datamap_t* DataMapInit<SAVELIGHTSTYLE>(SAVELIGHTSTYLE*)::nameHolder
 D datamap_t* DataMapInit<SAVE_HEADER>(SAVE_HEADER*)::dataDesc
 D datamap_t* DataMapInit<SAVE_HEADER>(SAVE_HEADER*)::nameHolder
 D datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::nameHolder
 D datamap_t* DataMapInit<decallist_t>(decallist_t*)::dataDesc
 D datamap_t* DataMapInit<decallist_t>(decallist_t*)::nameHolder
 D datamap_t* DataMapInit<levellist_t>(levellist_t*)::dataDesc
 D datamap_t* DataMapInit<levellist_t>(levellist_t*)::nameHolder
 D datamap_t* DataMapInit<lump_t>(lump_t*)::dataDesc
 D datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
 D datamap_t* DataMapInit<musicsave_t>(musicsave_t*)::dataDesc
 D datamap_t* DataMapInit<musicsave_t>(musicsave_t*)::nameHolder
 D datamap_t* DataMapInit<player_info_s>(player_info_s*)::dataDesc
 D datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
 D decallist_t::m_DataMap
 D demoaction
 D dfr_rng
 D dfrdlys
 D dfrfbs
 D dly_rng
 D efo_rng
 D eng
 D engineClient
 D env_rng
 D filter
 D float const& CDmxAttribute::GetValue<float>() const::defaultValue
 D float const& CDmxElement::GetValue<float>(char const*) const::defaultValue
 D flt_rng
 D framesnapshotmanager
 D gBlackBox
 D gHostSpawnCount
 D gNetworkTextMessage
 D g_DuckScale
 D g_EdgeDims
 D g_EdgeSideLenMul
 D g_EngineAPI
 D g_EngineRenderer
 D g_FaceVerts
 D g_GameEventManager
 D g_GameEventTransmitter
 D g_GameMessageHandlers
 D g_GameSystemFactory
 D g_ListenServerLoadingProgressDescriptions
 D g_MostCommonPathIDs
 D g_MostCommonPrefixes
 D g_PowerInfos
 D g_RatioToAspectModes
 D g_RemoteConnectLoadingProgressDescriptions
 D g_SND_VoiceOverdriveInt
 D g_ShiftInfos
 D g_TWinding
 D g_VoiceFadeMul
 D g_VoiceSampleFormat
 D g_VoiceTweakAPI
 D g_anorms
 D g_bForceRefresh
 D g_bUpdateMinidumpComment
 D g_backFaceVerts
 D g_downFaceVerts
 D g_flMinLightingValue
 D g_frontFaceVerts
 D g_hCurrentAVI
 D g_iRandomChapterIndex
 D g_isoundmixer
 D g_leftFaceVerts
 D g_nServerThread
 D g_nSocketToParentProcess
 D g_nVoiceFadeSamples
 D g_p4factory
 D g_pClientDemoPlayer
 D g_pClientDemoRecorder
 D g_pClientInstantReplay
 D g_pEfx
 D g_pEngineToolInternal
 D g_pEngineTraceClient
 D g_pEngineTraceServer
 D g_pSaveRestoreFileSystem
 D g_pSerializedEntities
 D g_pServerPluginHandler
 D g_pShadowMgr
 D g_pSharedChangeInfo
 D g_pSinglePlayerSharedMemoryManager
 D g_pSndIO
 D g_pSoundServices
 D g_pStringTableDictionary
 D g_pToolBSPTree
 D g_pVEngineServer
 D g_pVProfExport
 D g_pVProfileForDisplay
 D g_pXboxSystem
 D g_rightFaceVerts
 D g_skybox_FaceVerts
 D g_skybox_backFaceVerts
 D g_skybox_downFaceVerts
 D g_skybox_frontFaceVerts
 D g_skybox_leftFaceVerts
 D g_skybox_rightFaceVerts
 D g_skybox_upFaceVerts
 D g_upFaceVerts
 D game
 D gcdsp_stringmap
 D gdsp_stringmap
 D guard variable for AllocTempVector()::s_nIndex
 D guard variable for AllocTempVector()::s_vecTemp
 D guard variable for CAreaPortalsUIPanel::GetKBMap()::s_pMap
 D guard variable for CAreaPortalsUIPanel::GetMessageMap()::s_pMap
 D guard variable for CAskConnectPanel::GetKBMap()::s_pMap
 D guard variable for CAskConnectPanel::GetMessageMap()::s_pMap
 D guard variable for CBaseActionEditDialog::GetKBMap()::s_pMap
 D guard variable for CBaseActionEditDialog::GetMessageMap()::s_pMap
 D guard variable for CBaseActionPlaySoundStartDialog::GetKBMap()::s_pMap
 D guard variable for CBaseActionPlaySoundStartDialog::GetMessageMap()::s_pMap
 D guard variable for CBlackBoxRecord::operator char const*() const::buf
 D guard variable for CBugUIPanel::GetKBMap()::s_pMap
 D guard variable for CBugUIPanel::GetMessageMap()::s_pMap
 D guard variable for CBuildModeNavCombo::GetKBMap()::s_pMap
 D guard variable for CBuildModeNavCombo::GetMessageMap()::s_pMap
 D guard variable for CColorBalanceUIPanel::GetKBMap()::s_pMap
 D guard variable for CColorBalanceUIPanel::GetMessageMap()::s_pMap
 D guard variable for CColorCorrectionUIChildPanel::GetKBMap()::s_pMap
 D guard variable for CColorCorrectionUIChildPanel::GetMessageMap()::s_pMap
 D guard variable for CColorCorrectionUIPanel::GetKBMap()::s_pMap
 D guard variable for CColorCorrectionUIPanel::GetMessageMap()::s_pMap
 D guard variable for CColorCurvesEditPanel::GetKBMap()::s_pMap
 D guard variable for CColorCurvesEditPanel::GetMessageMap()::s_pMap
 D guard variable for CColorCurvesUIPanel::GetKBMap()::s_pMap
 D guard variable for CColorCurvesUIPanel::GetMessageMap()::s_pMap
 D guard variable for CColorHistogramPanel::GetKBMap()::s_pMap
 D guard variable for CColorHistogramPanel::GetMessageMap()::s_pMap
 D guard variable for CColorLevelsUIPanel::GetKBMap()::s_pMap
 D guard variable for CColorLevelsUIPanel::GetMessageMap()::s_pMap
 D guard variable for CColorLookupUIPanel::GetKBMap()::s_pMap
 D guard variable for CColorLookupUIPanel::GetMessageMap()::s_pMap
 D guard variable for CColorOperationListPanel::GetKBMap()::s_pMap
 D guard variable for CColorOperationListPanel::GetMessageMap()::s_pMap
 D guard variable for CColorSlider::GetKBMap()::s_pMap
 D guard variable for CColorSlider::GetMessageMap()::s_pMap
 D guard variable for CCurveEditorPanel::GetKBMap()::s_pMap
 D guard variable for CCurveEditorPanel::GetMessageMap()::s_pMap
 D guard variable for CDemoMessagePB<(EDemoCommands)0, CDemoStop>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::s_typeName
 D guard variable for CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::s_typeName
 D guard variable for CDragDropHelperPanel::GetKBMap()::s_pMap
 D guard variable for CDragDropHelperPanel::GetMessageMap()::s_pMap
 D guard variable for CDrawTreeFrame::GetKBMap()::s_pMap
 D guard variable for CDrawTreeFrame::GetMessageMap()::s_pMap
 D guard variable for CFogUIPanel::GetKBMap()::s_pMap
 D guard variable for CFogUIPanel::GetMessageMap()::s_pMap
 D guard variable for CFullScreenSelectionPanel::GetKBMap()::s_pMap
 D guard variable for CFullScreenSelectionPanel::GetMessageMap()::s_pMap
 D guard variable for CLookupViewPanel::GetKBMap()::s_pMap
 D guard variable for CLookupViewPanel::GetMessageMap()::s_pMap
 D guard variable for CLookupViewWindow::GetKBMap()::s_pMap
 D guard variable for CLookupViewWindow::GetMessageMap()::s_pMap
 D guard variable for CMessage::GetKBMap()::s_pMap
 D guard variable for CMessage::GetMessageMap()::s_pMap
 D guard variable for CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::s_typeName
 D guard variable for CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::s_typeName
 D guard variable for CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::s_typeName
 D guard variable for CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::s_typeName
 D guard variable for CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::s_typeName
 D guard variable for CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::s_typeName
 D guard variable for CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::s_typeName
 D guard variable for CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::s_typeName
 D guard variable for CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::s_typeName
 D guard variable for CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::s_typeName
 D guard variable for CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::s_typeName
 D guard variable for CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::s_typeName
 D guard variable for CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::s_typeName
 D guard variable for CNetMessagePB<16, CSVCMsg_Print, 0, true>::s_typeName
 D guard variable for CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::s_typeName
 D guard variable for CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::s_typeName
 D guard variable for CNetMessagePB<18, CSVCMsg_SetView, 0, true>::s_typeName
 D guard variable for CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::s_typeName
 D guard variable for CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::s_typeName
 D guard variable for CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::s_typeName
 D guard variable for CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::s_typeName
 D guard variable for CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::s_typeName
 D guard variable for CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::s_typeName
 D guard variable for CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::s_typeName
 D guard variable for CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::s_typeName
 D guard variable for CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::s_typeName
 D guard variable for CNetMessagePB<29, CSVCMsg_Menu, 0, true>::s_typeName
 D guard variable for CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::s_typeName
 D guard variable for CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::s_typeName
 D guard variable for CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::s_typeName
 D guard variable for CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::s_typeName
 D guard variable for CNetMessagePB<4, CNETMsg_Tick, 0, true>::s_typeName
 D guard variable for CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::s_typeName
 D guard variable for CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::s_typeName
 D guard variable for CNetMessagePB<7, CNETMsg_SignonState, 13, true>::s_typeName
 D guard variable for CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::s_typeName
 D guard variable for CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::s_typeName
 D guard variable for CNetMessagePB<9, CCLCMsg_Move, 11, false>::s_typeName
 D guard variable for CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::s_typeName
 D guard variable for CNewOperationDialog::GetKBMap()::s_pMap
 D guard variable for CNewOperationDialog::GetMessageMap()::s_pMap
 D guard variable for COcclusionUIPanel::GetKBMap()::s_pMap
 D guard variable for COcclusionUIPanel::GetMessageMap()::s_pMap
 D guard variable for COperationFileListFrame::GetKBMap()::s_pMap
 D guard variable for COperationFileListFrame::GetMessageMap()::s_pMap
 D guard variable for COperationListPanel::GetKBMap()::s_pMap
 D guard variable for COperationListPanel::GetMessageMap()::s_pMap
 D guard variable for CPerfUIChildPanel::GetKBMap()::s_pMap
 D guard variable for CPerfUIChildPanel::GetMessageMap()::s_pMap
 D guard variable for CPerfUIPanel::GetKBMap()::s_pMap
 D guard variable for CPerfUIPanel::GetMessageMap()::s_pMap
 D guard variable for CPerforceFileListFrame::GetKBMap()::s_pMap
 D guard variable for CPerforceFileListFrame::GetMessageMap()::s_pMap
 D guard variable for CPluginGameUIDialog::GetKBMap()::s_pMap
 D guard variable for CPluginGameUIDialog::GetMessageMap()::s_pMap
 D guard variable for CPluginHudMessage::GetKBMap()::s_pMap
 D guard variable for CPluginHudMessage::GetMessageMap()::s_pMap
 D guard variable for CPluginMenu::GetKBMap()::s_pMap
 D guard variable for CPluginMenu::GetMessageMap()::s_pMap
 D guard variable for CPluginUIManager::GetKBMap()::s_pMap
 D guard variable for CPluginUIManager::GetMessageMap()::s_pMap
 D guard variable for CPrecisionSlider::GetKBMap()::s_pMap
 D guard variable for CPrecisionSlider::GetMessageMap()::s_pMap
 D guard variable for CProceduralTexturePanel::GetKBMap()::s_pMap
 D guard variable for CProceduralTexturePanel::GetMessageMap()::s_pMap
 D guard variable for CProfileHierarchyPanel::GetKBMap()::s_pMap
 D guard variable for CProfileHierarchyPanel::GetMessageMap()::s_pMap
 D guard variable for CProfileTree::GetKBMap()::s_pMap
 D guard variable for CProfileTree::GetMessageMap()::s_pMap
 D guard variable for CPropFadeUIPanel::GetKBMap()::s_pMap
 D guard variable for CPropFadeUIPanel::GetMessageMap()::s_pMap
 D guard variable for CRenderTextureEditor::GetKBMap()::s_pMap
 D guard variable for CRenderTextureEditor::GetMessageMap()::s_pMap
 D guard variable for CRenderTexturesListViewPanel::GetKBMap()::s_pMap
 D guard variable for CRenderTexturesListViewPanel::GetMessageMap()::s_pMap
 D guard variable for CSaveDocumentQuery::GetKBMap()::s_pMap
 D guard variable for CSaveDocumentQuery::GetMessageMap()::s_pMap
 D guard variable for CSelectedHSVUIPanel::GetKBMap()::s_pMap
 D guard variable for CSelectedHSVUIPanel::GetMessageMap()::s_pMap
 D guard variable for CSmallTextEntry::GetKBMap()::s_pMap
 D guard variable for CSmallTextEntry::GetMessageMap()::s_pMap
 D guard variable for CTextureListPanel::GetKBMap()::s_pMap
 D guard variable for CTextureListPanel::GetMessageMap()::s_pMap
 D guard variable for CUncorrectedImagePanel::GetKBMap()::s_pMap
 D guard variable for CUncorrectedImagePanel::GetMessageMap()::s_pMap
 D guard variable for CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D guard variable for CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D guard variable for CUtlVector<Vector, CUtlMemory<Vector, int> > const& CDmxAttribute::GetArray<Vector>() const::defaultArray
 D guard variable for CUtlVector<Vector, CUtlMemory<Vector, int> > const& CDmxElement::GetArray<Vector>(char const*) const::defaultValue
 D guard variable for CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D guard variable for CUtlVector<float, CUtlMemory<float, int> > const& CDmxElement::GetArray<float>(char const*) const::defaultValue
 D guard variable for CVProfLabel::GetKBMap()::s_pMap
 D guard variable for CVProfLabel::GetMessageMap()::s_pMap
 D guard variable for CVProfPanel::GetKBMap()::s_pMap
 D guard variable for CVProfPanel::GetMessageMap()::s_pMap
 D guard variable for CVmtTextEntry::GetKBMap()::s_pMap
 D guard variable for CVmtTextEntry::GetMessageMap()::s_pMap
 D guard variable for CreateDirectoryDialog::GetKBMap()::s_pMap
 D guard variable for CreateDirectoryDialog::GetMessageMap()::s_pMap
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D guard variable for MapPropOffsetsToIndices(CBaseEdict const*, CSendTablePrecalc*, unsigned short const*, unsigned short, unsigned short*)::testDict
 D guard variable for TxViewPanel::GetKBMap()::s_pMap
 D guard variable for TxViewPanel::GetMessageMap()::s_pMap
 D guard variable for Vector const& CDmxAttribute::GetValue<Vector>() const::defaultValue
 D guard variable for Vector const& CDmxElement::GetValue<Vector>(char const*) const::defaultValue
 D guard variable for datamap_t* DataMapInit<BSPHeader_t>(BSPHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<GAME_HEADER>(GAME_HEADER*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SAVELIGHTSTYLE>(SAVELIGHTSTYLE*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SAVE_HEADER>(SAVE_HEADER*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<decallist_t>(decallist_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<levellist_t>(levellist_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<musicsave_t>(musicsave_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
 D guard variable for vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::AnimationController::GetKBMap()::s_pMap
 D guard variable for vgui::AnimationController::GetMessageMap()::s_pMap
 D guard variable for vgui::BaseInputDialog::GetKBMap()::s_pMap
 D guard variable for vgui::BaseInputDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetKBMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Button::GetKBMap()::s_pMap
 D guard variable for vgui::Button::GetMessageMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D guard variable for vgui::CheckButton::GetKBMap()::s_pMap
 D guard variable for vgui::CheckButton::GetMessageMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ComboBox::GetKBMap()::s_pMap
 D guard variable for vgui::ComboBox::GetMessageMap()::s_pMap
 D guard variable for vgui::ComboBoxButton::GetKBMap()::s_pMap
 D guard variable for vgui::ComboBoxButton::GetMessageMap()::s_pMap
 D guard variable for vgui::ContextLabel::GetKBMap()::s_pMap
 D guard variable for vgui::ContextLabel::GetMessageMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D guard variable for vgui::DirectorySelectDialog::GetKBMap()::s_pMap
 D guard variable for vgui::DirectorySelectDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Divider::GetKBMap()::s_pMap
 D guard variable for vgui::Divider::GetMessageMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetKBMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetKBMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetMessageMap()::s_pMap
 D guard variable for vgui::FileNameComboBox::GetKBMap()::s_pMap
 D guard variable for vgui::FileNameComboBox::GetMessageMap()::s_pMap
 D guard variable for vgui::FileOpenDialog::GetKBMap()::s_pMap
 D guard variable for vgui::FileOpenDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::FileOpenStateMachine::GetKBMap()::s_pMap
 D guard variable for vgui::FileOpenStateMachine::GetMessageMap()::s_pMap
 D guard variable for vgui::Frame::GetKBMap()::s_pMap
 D guard variable for vgui::Frame::GetMessageMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetKBMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetKBMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::InputDialog::GetKBMap()::s_pMap
 D guard variable for vgui::InputDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Label::GetKBMap()::s_pMap
 D guard variable for vgui::Label::GetMessageMap()::s_pMap
 D guard variable for vgui::ListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Menu::GetKBMap()::s_pMap
 D guard variable for vgui::Menu::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuBar::GetKBMap()::s_pMap
 D guard variable for vgui::MenuBar::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuButton::GetKBMap()::s_pMap
 D guard variable for vgui::MenuButton::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuItem::GetKBMap()::s_pMap
 D guard variable for vgui::MenuItem::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetKBMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetMessageMap()::s_pMap
 D guard variable for vgui::MessageBox::GetKBMap()::s_pMap
 D guard variable for vgui::MessageBox::GetMessageMap()::s_pMap
 D guard variable for vgui::PageTab::GetKBMap()::s_pMap
 D guard variable for vgui::PageTab::GetMessageMap()::s_pMap
 D guard variable for vgui::Panel::GetKBMap()::s_pMap
 D guard variable for vgui::Panel::GetMessageMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::PropertyDialog::GetKBMap()::s_pMap
 D guard variable for vgui::PropertyDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::PropertyPage::GetKBMap()::s_pMap
 D guard variable for vgui::PropertyPage::GetMessageMap()::s_pMap
 D guard variable for vgui::PropertySheet::GetKBMap()::s_pMap
 D guard variable for vgui::PropertySheet::GetMessageMap()::s_pMap
 D guard variable for vgui::RadioButton::GetKBMap()::s_pMap
 D guard variable for vgui::RadioButton::GetMessageMap()::s_pMap
 D guard variable for vgui::RichText::GetKBMap()::s_pMap
 D guard variable for vgui::RichText::GetMessageMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetKBMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetMessageMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D guard variable for vgui::Slider::GetKBMap()::s_pMap
 D guard variable for vgui::Slider::GetMessageMap()::s_pMap
 D guard variable for vgui::Splitter::GetKBMap()::s_pMap
 D guard variable for vgui::Splitter::GetMessageMap()::s_pMap
 D guard variable for vgui::SplitterChildPanel::GetKBMap()::s_pMap
 D guard variable for vgui::SplitterChildPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::SplitterHandle::GetKBMap()::s_pMap
 D guard variable for vgui::SplitterHandle::GetMessageMap()::s_pMap
 D guard variable for vgui::TextEntry::GetKBMap()::s_pMap
 D guard variable for vgui::TextEntry::GetMessageMap()::s_pMap
 D guard variable for vgui::TileViewPanelEx::GetKBMap()::s_pMap
 D guard variable for vgui::TileViewPanelEx::GetMessageMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetKBMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNode::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNode::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeView::GetKBMap()::s_pMap
 D guard variable for vgui::TreeView::GetMessageMap()::s_pMap
 D guard variable for vgui::URLLabel::GetKBMap()::s_pMap
 D guard variable for vgui::URLLabel::GetMessageMap()::s_pMap
 D int CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find<CDmxAttribute*>(CDmxAttribute* const&) const::_assertionConstants
 D int CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find<CDmxAttribute*>(CDmxAttribute* const&) const::_assertionFailedParams
 D int CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find<CDmxAttribute*>(CDmxAttribute* const&) const::_assertionStatics
 D int CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::FindLessOrEqual<TAssetInfo*>(TAssetInfo* const&, bool*) const::_assertionConstants
 D int CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::FindLessOrEqual<TAssetInfo*>(TAssetInfo* const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::FindLessOrEqual<TAssetInfo*>(TAssetInfo* const&, bool*) const::_assertionStatics
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Find<Vector>(Vector const&) const::_assertionConstants
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Find<Vector>(Vector const&) const::_assertionFailedParams
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Find<Vector>(Vector const&) const::_assertionStatics
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::FindLessOrEqual<Vector>(Vector const&, bool*) const::_assertionConstants
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::FindLessOrEqual<Vector>(Vector const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::FindLessOrEqual<Vector>(Vector const&, bool*) const::_assertionStatics
 D int CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual<int>(int const&, bool*) const::_assertionConstants
 D int CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual<int>(int const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual<int>(int const&, bool*) const::_assertionStatics
 D int CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::FindLessOrEqual<modelsize_t>(modelsize_t const&, bool*) const::_assertionConstants
 D int CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::FindLessOrEqual<modelsize_t>(modelsize_t const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::FindLessOrEqual<modelsize_t>(modelsize_t const&, bool*) const::_assertionStatics
 D int CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::FindLessOrEqual<unsigned short>(unsigned short const&, bool*) const::_assertionConstants
 D int CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::FindLessOrEqual<unsigned short>(unsigned short const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::FindLessOrEqual<unsigned short>(unsigned short const&, bool*) const::_assertionStatics
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Find<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&) const::_assertionConstants
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Find<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&) const::_assertionFailedParams
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Find<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&) const::_assertionStatics
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::FindLessOrEqual<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&, bool*) const::_assertionConstants
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::FindLessOrEqual<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&, bool*) const::_assertionFailedParams
 D int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::FindLessOrEqual<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&, bool*) const::_assertionStatics
 D int const& CDmxAttribute::GetValue<int>() const::defaultValue
 D int const& CDmxElement::GetValue<int>(char const*) const::defaultValue
 D levellist_t::m_DataMap
 D lfo_rng
 D lump_t::m_DataMap
 D m_szErrors
 D mdy_rng
 D modelinfo
 D modelinfoclient
 D modelloader
 D modelrender
 D musicsave_t::m_DataMap
 D networkStringTableContainerClient
 D networkStringTableContainerServer
 D perftools
 D player_info_s::m_DataMap
 D power2_n
 D ptc_rng
 D r_colormod
 D r_framecount
 D registry
 D rva_rng
 D saverestore
 D skytexorder
 D snd_firsttime
 D splitscreen
 D st_to_vec
 D tm_demomessage
 D tokenset_t<SendPropType>::GetNameByToken(SendPropType) const::unknown
 D tokenset_t<int>::GetNameByToken(int) const::unknown
 D toolframework
 D total_channels
 D typeinfo for BlankImage
 D typeinfo for CAppSystemGroup
 D typeinfo for CAreaPortalsUIPanel
 D typeinfo for CAskConnectPanel
 D typeinfo for CAsyncWavDataCache
 D typeinfo for CAudioDeviceAudioQueue
 D typeinfo for CAudioDeviceBase
 D typeinfo for CAudioDeviceNull
 D typeinfo for CAudioDeviceOpenAL
 D typeinfo for CAudioMixer
 D typeinfo for CAudioMixerWave
 D typeinfo for CAudioMixerWave16Mono
 D typeinfo for CAudioMixerWave16Stereo
 D typeinfo for CAudioMixerWave8Mono
 D typeinfo for CAudioMixerWave8Stereo
 D typeinfo for CAudioMixerWaveADPCM
 D typeinfo for CAudioMixerWaveMP3
 D typeinfo for CAudioSource
 D typeinfo for CAudioSourceCache
 D typeinfo for CAudioSourceCachedInfo
 D typeinfo for CAudioSourceMP3
 D typeinfo for CAudioSourceMP3Cache
 D typeinfo for CAudioSourceMemWave
 D typeinfo for CAudioSourceStreamMP3
 D typeinfo for CAudioSourceStreamWave
 D typeinfo for CAudioSourceVoice
 D typeinfo for CAudioSourceVoice::CWaveDataVoice
 D typeinfo for CAudioSourceWave
 D typeinfo for CBaseActionCDTrackStartDialog
 D typeinfo for CBaseActionChangePlaybackRateDialog
 D typeinfo for CBaseActionEditDialog
 D typeinfo for CBaseActionPauseDialog
 D typeinfo for CBaseActionPlayCommandsDialog
 D typeinfo for CBaseActionPlaySoundStartDialog
 D typeinfo for CBaseActionScreenFadeStartDialog
 D typeinfo for CBaseActionSkipAheadDialog
 D typeinfo for CBaseActionStopPlaybackDialog
 D typeinfo for CBaseActionTextMessageStartDialog
 D typeinfo for CBaseActionWithStopTimeDialog
 D typeinfo for CBaseActionZoomDialog
 D typeinfo for CBaseAppSystem<ICvarQuery>
 D typeinfo for CBaseAppSystem<IDedicatedServerAPI>
 D typeinfo for CBaseAppSystem<IEngineAPI>
 D typeinfo for CBaseAppSystem<INetSupport>
 D typeinfo for CBaseAppSystem<IToolFrameworkInternal>
 D typeinfo for CBaseBudgetPanel
 D typeinfo for CBaseClient
 D typeinfo for CBaseClientState
 D typeinfo for CBaseDemoAction
 D typeinfo for CBaseDemoActionWithStopTime
 D typeinfo for CBasePanel
 D typeinfo for CBaseServer
 D typeinfo for CBlackBox
 D typeinfo for CBlockingUDPSocket
 D typeinfo for CBoolProperty
 D typeinfo for CBoundedCvar_CmdRate
 D typeinfo for CBoundedCvar_Rate
 D typeinfo for CBoundedCvar_UpdateRate
 D typeinfo for CBreakpadPassiveAssertionFailureListener
 D typeinfo for CBrushBSPIterator
 D typeinfo for CBrushConvexInfo
 D typeinfo for CBrushSurface
 D typeinfo for CBudgetBarGraphPanel
 D typeinfo for CBudgetHistoryPanel
 D typeinfo for CBudgetPanelEngine
 D typeinfo for CBudgetPanelShared
 D typeinfo for CBugReportFinishedDialog
 D typeinfo for CBugReportUploadProgressDialog
 D typeinfo for CBugUIPanel
 D typeinfo for CBuildModeNavCombo
 D typeinfo for CCLCMsg_BaselineAck
 D typeinfo for CCLCMsg_ClientInfo
 D typeinfo for CCLCMsg_ClientMessage
 D typeinfo for CCLCMsg_FileCRCCheck
 D typeinfo for CCLCMsg_FileCRCCheck_t
 D typeinfo for CCLCMsg_ListenEvents
 D typeinfo for CCLCMsg_LoadingProgress
 D typeinfo for CCLCMsg_Move
 D typeinfo for CCLCMsg_RespondCvarValue
 D typeinfo for CCLCMsg_SplitPlayerConnect
 D typeinfo for CCLCMsg_VoiceData
 D typeinfo for CCallback<CSteam3Client, ClientGameServerDeny_t, false>
 D typeinfo for CCallback<CSteam3Client, GameOverlayActivated_t, false>
 D typeinfo for CCallback<CSteam3Client, GameServerChangeRequested_t, false>
 D typeinfo for CCallback<CSteam3Client, LowBatteryPower_t, false>
 D typeinfo for CCallback<CSteam3Client, PersonaStateChange_t, false>
 D typeinfo for CCallback<CSteam3Client, SocketStatusCallback_t, false>
 D typeinfo for CCallback<CSteam3Server, GSPolicyResponse_t, true>
 D typeinfo for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
 D typeinfo for CCallback<CSteam3Server, SteamServersConnected_t, true>
 D typeinfo for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
 D typeinfo for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
 D typeinfo for CCallbackBase
 D typeinfo for CClientDatatableStack
 D typeinfo for CClientEngineTools
 D typeinfo for CClientFrame
 D typeinfo for CClientFrameManager
 D typeinfo for CClientState
 D typeinfo for CColorBalanceOperation
 D typeinfo for CColorBalanceUIPanel
 D typeinfo for CColorCorrectionTools
 D typeinfo for CColorCorrectionUIChildPanel
 D typeinfo for CColorCorrectionUIPanel
 D typeinfo for CColorCurvesEditPanel
 D typeinfo for CColorCurvesUIPanel
 D typeinfo for CColorHistogramPanel
 D typeinfo for CColorLevelsUIPanel
 D typeinfo for CColorLookupOperation
 D typeinfo for CColorLookupUIPanel
 D typeinfo for CColorOperationListPanel
 D typeinfo for CColorProperty
 D typeinfo for CColorSlider
 D typeinfo for CConCommandMemberAccessor<CEngineVGui>
 D typeinfo for CConCommandMemberAccessor<CTextureBudgetPanel>
 D typeinfo for CConPanel
 D typeinfo for CConVarCheckButton
 D typeinfo for CCoreDispInfo
 D typeinfo for CCurveEditorPanel
 D typeinfo for CCurvesColorOperation
 D typeinfo for CCvarQuery
 D typeinfo for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
 D typeinfo for CDataManagerBase
 D typeinfo for CDatatableStack
 D typeinfo for CDebugCommandButton
 D typeinfo for CDebugCommandCheckbox
 D typeinfo for CDebugIncrementCVarButton
 D typeinfo for CDebugMenuButton
 D typeinfo for CDebugOptionsPage
 D typeinfo for CDebugOptionsPanel
 D typeinfo for CDebugSystemPanel
 D typeinfo for CDedicatedServerAPI
 D typeinfo for CDefaultAccessor
 D typeinfo for CDefaultDataCacheClient
 D typeinfo for CDemoActionCDTrackStart
 D typeinfo for CDemoActionCDTrackStop
 D typeinfo for CDemoActionChangePlaybackRate
 D typeinfo for CDemoActionManager
 D typeinfo for CDemoActionPausePlayback
 D typeinfo for CDemoActionPlayCommands
 D typeinfo for CDemoActionPlaySoundStart
 D typeinfo for CDemoActionScreenFadeStart
 D typeinfo for CDemoActionSkipAhead
 D typeinfo for CDemoActionStopPlayback
 D typeinfo for CDemoActionTextMessageStart
 D typeinfo for CDemoActionZoom
 D typeinfo for CDemoClassInfo
 D typeinfo for CDemoClassInfo_class_t
 D typeinfo for CDemoConsoleCmd
 D typeinfo for CDemoCustomData
 D typeinfo for CDemoCustomDataCallbacks
 D typeinfo for CDemoFileHeader
 D typeinfo for CDemoFileInfo
 D typeinfo for CDemoFullPacket
 D typeinfo for CDemoMessagePB<(EDemoCommands)0, CDemoStop>
 D typeinfo for CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>
 D typeinfo for CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>
 D typeinfo for CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>
 D typeinfo for CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>
 D typeinfo for CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>
 D typeinfo for CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>
 D typeinfo for CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>
 D typeinfo for CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>
 D typeinfo for CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>
 D typeinfo for CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>
 D typeinfo for CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>
 D typeinfo for CDemoMessagePB<(EDemoCommands)7, CDemoPacket>
 D typeinfo for CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>
 D typeinfo for CDemoPacket
 D typeinfo for CDemoPlayer
 D typeinfo for CDemoRecorder
 D typeinfo for CDemoSaveGame
 D typeinfo for CDemoSendTables
 D typeinfo for CDemoStop
 D typeinfo for CDemoStringTables
 D typeinfo for CDemoStringTables_items_t
 D typeinfo for CDemoStringTables_table_t
 D typeinfo for CDemoSyncTick
 D typeinfo for CDemoUserCmd
 D typeinfo for CDiskDemoBuffer
 D typeinfo for CDispCollTree
 D typeinfo for CDispInfo
 D typeinfo for CDispUtilsHelper
 D typeinfo for CDragDropHelperPanel
 D typeinfo for CDrawTreeFrame
 D typeinfo for CDummySfx
 D typeinfo for CEmptyConVar
 D typeinfo for CEncodeInfo
 D typeinfo for CEngine
 D typeinfo for CEngineAPI
 D typeinfo for CEngineBSPTree
 D typeinfo for CEngineBugReporter
 D typeinfo for CEngineClient
 D typeinfo for CEngineConsoleLoggingListener
 D typeinfo for CEnginePanel
 D typeinfo for CEnginePerfTools
 D typeinfo for CEngineRecipientFilter
 D typeinfo for CEngineSingleUserFilter
 D typeinfo for CEngineSoundClient
 D typeinfo for CEngineSoundServer
 D typeinfo for CEngineSoundServices
 D typeinfo for CEngineTool
 D typeinfo for CEngineTrace
 D typeinfo for CEngineTraceClient
 D typeinfo for CEngineTraceServer
 D typeinfo for CEngineUniformRandomStream
 D typeinfo for CEngineVGui
 D typeinfo for CEngineVoiceSteam
 D typeinfo for CEntityInfo
 D typeinfo for CEntityListAlongRay
 D typeinfo for CEntityReadInfo
 D typeinfo for CEntityReportPanel
 D typeinfo for CEntityWriteInfo
 D typeinfo for CEnumerationFilter
 D typeinfo for CFileDownloadFilter
 D typeinfo for CFileLoggingListener
 D typeinfo for CFilter
 D typeinfo for CFloatProperty
 D typeinfo for CFmtStrN<1024, false>
 D typeinfo for CFmtStrN<1024, true>
 D typeinfo for CFmtStrN<1040, false>
 D typeinfo for CFmtStrN<2048, false>
 D typeinfo for CFmtStrN<256, false>
 D typeinfo for CFocusOverlayPanel
 D typeinfo for CFogUIPanel
 D typeinfo for CFrameSnapshotManager
 D typeinfo for CFullScreenSelectionPanel
 D typeinfo for CFunctor
 D typeinfo for CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctorJob
 D typeinfo for CGame
 D typeinfo for CGameClient
 D typeinfo for CGameEvent
 D typeinfo for CGameEventManager
 D typeinfo for CGameEventManagerOld
 D typeinfo for CGameInfo
 D typeinfo for CGameInfo_CDotaGameInfo
 D typeinfo for CGameInfo_CDotaGameInfo_CHeroSelectEvent
 D typeinfo for CGameInfo_CDotaGameInfo_CPlayerInfo
 D typeinfo for CGameServer
 D typeinfo for CGameUIFuncs
 D typeinfo for CHFontProperty
 D typeinfo for CHLTVClient
 D typeinfo for CHLTVClientState
 D typeinfo for CHLTVDemoRecorder
 D typeinfo for CHLTVFrame
 D typeinfo for CHLTVServer
 D typeinfo for CIVDebugOverlay
 D typeinfo for CInstantReplay
 D typeinfo for CIntProperty
 D typeinfo for CJob
 D typeinfo for CKeyValueCache
 D typeinfo for CLevelsColorOperation
 D typeinfo for CLoaderProgress
 D typeinfo for CLog
 D typeinfo for CLookupViewPanel
 D typeinfo for CLookupViewWindow
 D typeinfo for CMDLCacheNotify
 D typeinfo for CMPAException
 D typeinfo for CManagedDataCacheClient<CAsyncWaveData, asyncwaveparams_t, CAsyncWaveData*>
 D typeinfo for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
 D typeinfo for CMaterialProxyFactory
 D typeinfo for CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemoryStack
 D typeinfo for CMessage
 D typeinfo for CMixerControls
 D typeinfo for CModAppSystemGroup
 D typeinfo for CModelInfo
 D typeinfo for CModelInfoClient
 D typeinfo for CModelInfoServer
 D typeinfo for CModelLoader
 D typeinfo for CModelRender
 D typeinfo for CMsgQAngle
 D typeinfo for CMsgVector
 D typeinfo for CMsgVector2D
 D typeinfo for CMsg_CVars
 D typeinfo for CMsg_CVars_CVar
 D typeinfo for CNETMsg_Disconnect
 D typeinfo for CNETMsg_File
 D typeinfo for CNETMsg_NOP
 D typeinfo for CNETMsg_SetConVar
 D typeinfo for CNETMsg_SetConVar_t
 D typeinfo for CNETMsg_SignonState
 D typeinfo for CNETMsg_SignonState_t
 D typeinfo for CNETMsg_SplitScreenUser
 D typeinfo for CNETMsg_StringCmd
 D typeinfo for CNETMsg_StringCmd_t
 D typeinfo for CNETMsg_Tick
 D typeinfo for CNETMsg_Tick_t
 D typeinfo for CNetConsoleMgr
 D typeinfo for CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>
 D typeinfo for CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>
 D typeinfo for CNetMessageBinder::BindParams<CNETMsg_SignonState_t>
 D typeinfo for CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>
 D typeinfo for CNetMessageBinder::BindParams<CNETMsg_Tick_t>
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >
 D typeinfo for CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >
 D typeinfo for CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>
 D typeinfo for CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>
 D typeinfo for CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>
 D typeinfo for CNetMessagePB<11, CSVCMsg_SetPause, 0, true>
 D typeinfo for CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>
 D typeinfo for CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>
 D typeinfo for CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>
 D typeinfo for CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>
 D typeinfo for CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>
 D typeinfo for CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>
 D typeinfo for CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>
 D typeinfo for CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>
 D typeinfo for CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>
 D typeinfo for CNetMessagePB<16, CSVCMsg_Print, 0, true>
 D typeinfo for CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>
 D typeinfo for CNetMessagePB<17, CSVCMsg_Sounds, 4, true>
 D typeinfo for CNetMessagePB<18, CSVCMsg_SetView, 0, true>
 D typeinfo for CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>
 D typeinfo for CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>
 D typeinfo for CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>
 D typeinfo for CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>
 D typeinfo for CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>
 D typeinfo for CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>
 D typeinfo for CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>
 D typeinfo for CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>
 D typeinfo for CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>
 D typeinfo for CNetMessagePB<29, CSVCMsg_Menu, 0, true>
 D typeinfo for CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>
 D typeinfo for CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>
 D typeinfo for CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>
 D typeinfo for CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>
 D typeinfo for CNetMessagePB<4, CNETMsg_Tick, 0, true>
 D typeinfo for CNetMessagePB<5, CNETMsg_StringCmd, 12, true>
 D typeinfo for CNetMessagePB<6, CNETMsg_SetConVar, 12, true>
 D typeinfo for CNetMessagePB<7, CNETMsg_SignonState, 13, true>
 D typeinfo for CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>
 D typeinfo for CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>
 D typeinfo for CNetMessagePB<9, CCLCMsg_Move, 11, false>
 D typeinfo for CNetMessagePB<9, CSVCMsg_SendTable, 13, true>
 D typeinfo for CNetSupportImpl
 D typeinfo for CNetworkStringTable
 D typeinfo for CNetworkStringTableContainer
 D typeinfo for CNetworkStringTableDictionaryManager
 D typeinfo for CNewOperationDialog
 D typeinfo for COM_IOReadBinary
 D typeinfo for COcclusionSystem
 D typeinfo for COcclusionUIPanel
 D typeinfo for COperationFileListFrame
 D typeinfo for COperationListPanel
 D typeinfo for COverlayMgr
 D typeinfo for CP4File
 D typeinfo for CP4File_Dummy
 D typeinfo for CPaintMapDataManager
 D typeinfo for CPerfUIChildPanel
 D typeinfo for CPerfUIPanel
 D typeinfo for CPerforceFileListFrame
 D typeinfo for CPluginGameUIDialog
 D typeinfo for CPluginHudMessage
 D typeinfo for CPluginMenu
 D typeinfo for CPluginUIManager
 D typeinfo for CPointContentsEnum
 D typeinfo for CPooledVBAllocator_ColorMesh
 D typeinfo for CPrecisionSlider
 D typeinfo for CProceduralTexturePanel
 D typeinfo for CProfileHierarchyPanel
 D typeinfo for CProfileTree
 D typeinfo for CPropCullStack
 D typeinfo for CPropFadeUIPanel
 D typeinfo for CPropMapStack
 D typeinfo for CPropOffsetStack
 D typeinfo for CProportionalFloatProperty
 D typeinfo for CProportionalIntProperty
 D typeinfo for CProportionalXPosProperty
 D typeinfo for CProportionalYPosProperty
 D typeinfo for CPureServerWhitelist::CAllowFromDiskList
 D typeinfo for CPureServerWhitelist::CForceMatchList
 D typeinfo for CRConClient
 D typeinfo for CRConServer
 D typeinfo for CRConVProfExport
 D typeinfo for CRealMemoryDemoBuffer
 D typeinfo for CRefCountServiceBase<true, CRefMT>
 D typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted1<IWorldRenderList, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRegistry
 D typeinfo for CRender
 D typeinfo for CRenderTextureEditor
 D typeinfo for CRenderTexturesListViewPanel
 D typeinfo for CResourcePreload
 D typeinfo for CResourcePreloadSound
 D typeinfo for CSPSharedMemory
 D typeinfo for CSVCMsgList_GameEvents
 D typeinfo for CSVCMsgList_GameEvents_event_t
 D typeinfo for CSVCMsgList_UserMessages
 D typeinfo for CSVCMsgList_UserMessages_usermsg_t
 D typeinfo for CSVCMsg_BSPDecal
 D typeinfo for CSVCMsg_ClassInfo
 D typeinfo for CSVCMsg_ClassInfo_class_t
 D typeinfo for CSVCMsg_CreateStringTable
 D typeinfo for CSVCMsg_CrosshairAngle
 D typeinfo for CSVCMsg_FixAngle
 D typeinfo for CSVCMsg_FullFrameSplit
 D typeinfo for CSVCMsg_GameEvent
 D typeinfo for CSVCMsg_GameEventList
 D typeinfo for CSVCMsg_GameEventList_descriptor_t
 D typeinfo for CSVCMsg_GameEventList_key_t
 D typeinfo for CSVCMsg_GameEvent_key_t
 D typeinfo for CSVCMsg_GetCvarValue
 D typeinfo for CSVCMsg_Menu
 D typeinfo for CSVCMsg_PacketEntities
 D typeinfo for CSVCMsg_PacketReliable
 D typeinfo for CSVCMsg_Prefetch
 D typeinfo for CSVCMsg_Print
 D typeinfo for CSVCMsg_SendTable
 D typeinfo for CSVCMsg_SendTable_sendprop_t
 D typeinfo for CSVCMsg_ServerInfo
 D typeinfo for CSVCMsg_SetPause
 D typeinfo for CSVCMsg_SetView
 D typeinfo for CSVCMsg_Sounds
 D typeinfo for CSVCMsg_Sounds_sounddata_t
 D typeinfo for CSVCMsg_SplitScreen
 D typeinfo for CSVCMsg_TempEntities
 D typeinfo for CSVCMsg_UpdateStringTable
 D typeinfo for CSVCMsg_UserMessage
 D typeinfo for CSVCMsg_VoiceData
 D typeinfo for CSVCMsg_VoiceInit
 D typeinfo for CSaveDocumentQuery
 D typeinfo for CSaveMemory
 D typeinfo for CSaveRestore
 D typeinfo for CSaveRestoreFileSystem
 D typeinfo for CSaveRestoreFileSystemPassthrough
 D typeinfo for CSelectedHSVOperation
 D typeinfo for CSelectedHSVUIPanel
 D typeinfo for CSendTablePrecalc
 D typeinfo for CSentenceMixer
 D typeinfo for CSerializedEntities
 D typeinfo for CServerDatatableStack
 D typeinfo for CServerEngineTools
 D typeinfo for CServerPlugin
 D typeinfo for CServerRemoteAccess
 D typeinfo for CSfxTable
 D typeinfo for CShadowMgr
 D typeinfo for CSmallTextEntry
 D typeinfo for CSosOperator
 D typeinfo for CSosOperatorBlockEntry
 D typeinfo for CSosOperatorConvar
 D typeinfo for CSosOperatorCurve4
 D typeinfo for CSosOperatorDashboard
 D typeinfo for CSosOperatorDelta
 D typeinfo for CSosOperatorDistantDSP
 D typeinfo for CSosOperatorDotaIsInWater
 D typeinfo for CSosOperatorEntityInfo
 D typeinfo for CSosOperatorEntryTime
 D typeinfo for CSosOperatorFacing
 D typeinfo for CSosOperatorFalloff
 D typeinfo for CSosOperatorFloat
 D typeinfo for CSosOperatorFloatAccumulate12
 D typeinfo for CSosOperatorFloatFilter
 D typeinfo for CSosOperatorFunc1
 D typeinfo for CSosOperatorGetOpvarFloat
 D typeinfo for CSosOperatorGetTrackSyncPoint
 D typeinfo for CSosOperatorIncrementOpvarFloat
 D typeinfo for CSosOperatorIterateAndMergeSpeakers
 D typeinfo for CSosOperatorLogicSwitch
 D typeinfo for CSosOperatorMapName
 D typeinfo for CSosOperatorMixGroup
 D typeinfo for CSosOperatorMixLayer
 D typeinfo for CSosOperatorOcclusion
 D typeinfo for CSosOperatorOutput
 D typeinfo for CSosOperatorPlatform
 D typeinfo for CSosOperatorPlayOnTrack
 D typeinfo for CSosOperatorPosVec8
 D typeinfo for CSosOperatorPrintFloat
 D typeinfo for CSosOperatorQueueToTrack
 D typeinfo for CSosOperatorRandom
 D typeinfo for CSosOperatorRemapValue
 D typeinfo for CSosOperatorSetConvar
 D typeinfo for CSosOperatorSetOpvarFloat
 D typeinfo for CSosOperatorSourceDistance
 D typeinfo for CSosOperatorSourceInfo
 D typeinfo for CSosOperatorSpatializeSpeakers
 D typeinfo for CSosOperatorSpeakers
 D typeinfo for CSosOperatorStartEntry
 D typeinfo for CSosOperatorStartEntryDOTA
 D typeinfo for CSosOperatorStopEntry
 D typeinfo for CSosOperatorStopTrack
 D typeinfo for CSosOperatorSysTime
 D typeinfo for CSosOperatorTimer
 D typeinfo for CSosOperatorTimerRamp
 D typeinfo for CSosOperatorVec3
 D typeinfo for CSosOperatorViewInfo
 D typeinfo for CSpatialPartition
 D typeinfo for CSplitScreen
 D typeinfo for CSplitScreenAddedConVar
 D typeinfo for CStaticPanel
 D typeinfo for CStaticProp
 D typeinfo for CStaticPropMgr
 D typeinfo for CSteamP2PAllowConnection
 D typeinfo for CStringProperty
 D typeinfo for CStudioConvexInfo
 D typeinfo for CTestScriptMgr
 D typeinfo for CTextureBudgetPanel
 D typeinfo for CTextureIdProperty
 D typeinfo for CTextureListPanel
 D typeinfo for CTier0AppSystem<IDedicatedServerAPI>
 D typeinfo for CTier0AppSystem<IEngineAPI>
 D typeinfo for CTier0AppSystem<INetSupport>
 D typeinfo for CTier1AppSystem<IDedicatedServerAPI, 0>
 D typeinfo for CTier1AppSystem<IEngineAPI, 0>
 D typeinfo for CTier1AppSystem<INetSupport, 0>
 D typeinfo for CTier2AppSystem<IDedicatedServerAPI, 0>
 D typeinfo for CTier2AppSystem<IEngineAPI, 0>
 D typeinfo for CTier2AppSystem<INetSupport, 0>
 D typeinfo for CTier3AppSystem<IDedicatedServerAPI, 0>
 D typeinfo for CTier3AppSystem<IEngineAPI, 0>
 D typeinfo for CToolFrameworkInternal
 D typeinfo for CTouchLinks
 D typeinfo for CTouchLinks_ClientSide
 D typeinfo for CTraceFilter
 D typeinfo for CTraceFilterDAS
 D typeinfo for CTraceFilterHitAll
 D typeinfo for CTraceFilterWorldAndProps
 D typeinfo for CTraceFilterWorldAndPropsOnly
 D typeinfo for CTraceFilterWorldAndStaticEntities
 D typeinfo for CTraceFilterWorldOnly
 D typeinfo for CTraceListData
 D typeinfo for CTriggerMoved
 D typeinfo for CTriggerMoved_ClientSide
 D typeinfo for CUncorrectedImagePanel
 D typeinfo for CUploadGameStats
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCachedFileData<CAudioSourceCachedInfo>
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlNoEscConversion
 D typeinfo for CVEfx
 D typeinfo for CVEngineServer
 D typeinfo for CVGuiTree
 D typeinfo for CVProfExport
 D typeinfo for CVProfGraphPanel
 D typeinfo for CVProfLabel
 D typeinfo for CVProfPanel
 D typeinfo for CVRenderView
 D typeinfo for CVTFTexture
 D typeinfo for CVideoMode_Common
 D typeinfo for CVideoMode_MaterialSystem
 D typeinfo for CVirtualTerrain
 D typeinfo for CVmtTextEntry
 D typeinfo for CVoiceServer
 D typeinfo for CVoiceSfx
 D typeinfo for CVoxelTree
 D typeinfo for CWaveDataMemoryAsync
 D typeinfo for CWaveDataStreamAsync
 D typeinfo for CWorldRenderList
 D typeinfo for CXboxSystem
 D typeinfo for CheckImage
 D typeinfo for ColumnButton
 D typeinfo for ConCommand
 D typeinfo for ConCommandBase
 D typeinfo for ConVar
 D typeinfo for ConVar_ServerBounded
 D typeinfo for CreateDirectoryDialog
 D typeinfo for Dragger
 D typeinfo for IAppSystem
 D typeinfo for IAppSystemGroup
 D typeinfo for IAssertionFailureListener
 D typeinfo for IAsyncWavDataCache
 D typeinfo for IAudioDevice
 D typeinfo for IAudioSourceCache
 D typeinfo for IAudioStreamEvent
 D typeinfo for IBaseCacheInfo
 D typeinfo for IBaseInterface
 D typeinfo for IBlackBox
 D typeinfo for IBrushSurface
 D typeinfo for IClient
 D typeinfo for IClientEngineTools
 D typeinfo for IClientModelRenderable
 D typeinfo for IClientRenderable
 D typeinfo for IClientUnknown
 D typeinfo for ICollideable
 D typeinfo for IColorCorrectionTools
 D typeinfo for IColorOperation
 D typeinfo for ICommandCallback
 D typeinfo for ICommandCompletionCallback
 D typeinfo for IConCommandBaseAccessor
 D typeinfo for IConVar
 D typeinfo for IConnectionlessPacketHandler
 D typeinfo for IConvexInfo
 D typeinfo for ICvarQuery
 D typeinfo for IDataCacheClient
 D typeinfo for IDedicatedServerAPI
 D typeinfo for IDemoActionManager
 D typeinfo for IDemoBuffer
 D typeinfo for IDemoMessage
 D typeinfo for IDemoPlayer
 D typeinfo for IDemoRecorder
 D typeinfo for IDemoRecorderBase
 D typeinfo for IDispInfo
 D typeinfo for IEngine
 D typeinfo for IEngineAPI
 D typeinfo for IEngineBugReporter
 D typeinfo for IEnginePerfTools
 D typeinfo for IEngineSound
 D typeinfo for IEngineSpatialQuery
 D typeinfo for IEngineTool
 D typeinfo for IEngineToolFramework
 D typeinfo for IEngineToolInternal
 D typeinfo for IEngineTrace
 D typeinfo for IEngineVGui
 D typeinfo for IEngineVGuiInternal
 D typeinfo for IEngineVoice
 D typeinfo for IFileList
 D typeinfo for IFileLoggingListener
 D typeinfo for IFileReadBinary
 D typeinfo for IFilter
 D typeinfo for IGame
 D typeinfo for IGameEvent
 D typeinfo for IGameEventListener2
 D typeinfo for IGameEventManager
 D typeinfo for IGameEventManager2
 D typeinfo for IGameServerData
 D typeinfo for IGameUIFuncs
 D typeinfo for IHLTVServer
 D typeinfo for IHandleEntity
 D typeinfo for IInstantReplayIntercept
 D typeinfo for IKeyValueCache
 D typeinfo for ILoaderProgress
 D typeinfo for ILoggingListener
 D typeinfo for IMDLCacheNotify
 D typeinfo for IMaterialProxyFactory
 D typeinfo for IMemoryInfo
 D typeinfo for IMixerControls
 D typeinfo for IModelLoader
 D typeinfo for INetChannelHandler
 D typeinfo for INetMessage
 D typeinfo for INetMessageBinder
 D typeinfo for INetSupport
 D typeinfo for INetworkFileDownloadFilter
 D typeinfo for INetworkPacketFilter
 D typeinfo for INetworkStringTable
 D typeinfo for INetworkStringTableContainer
 D typeinfo for INetworkStringTableDictionaryMananger
 D typeinfo for IOcclusionSystem
 D typeinfo for IOverlayMgr
 D typeinfo for IPaintMapDataManager
 D typeinfo for IPartitionEnumerator
 D typeinfo for IPooledVBAllocator
 D typeinfo for IRecipientFilter
 D typeinfo for IRefCounted
 D typeinfo for IRegistry
 D typeinfo for IRender
 D typeinfo for IResourcePreload
 D typeinfo for ISPSharedMemory
 D typeinfo for ISaveRestore
 D typeinfo for ISaveRestoreFileSystem
 D typeinfo for ISerializedEntities
 D typeinfo for IServer
 D typeinfo for IServerEngineTools
 D typeinfo for IServerPluginHelpers
 D typeinfo for IShadowMgr
 D typeinfo for IShadowMgrInternal
 D typeinfo for ISocketCreatorListener
 D typeinfo for ISoundServices
 D typeinfo for ISpatialLeafEnumerator
 D typeinfo for ISpatialPartition
 D typeinfo for ISpatialPartitionInternal
 D typeinfo for ISpatialQuery
 D typeinfo for ISplitScreen
 D typeinfo for IStaticPropMgr
 D typeinfo for IStaticPropMgrClient
 D typeinfo for IStaticPropMgrEngine
 D typeinfo for IStaticPropMgrServer
 D typeinfo for ISteamP2PAllowConnection
 D typeinfo for ITextureRegenerator
 D typeinfo for IToolFrameworkInternal
 D typeinfo for ITraceFilter
 D typeinfo for ITraceListData
 D typeinfo for IUniformRandomStream
 D typeinfo for IUploadGameStats
 D typeinfo for IVDebugOverlay
 D typeinfo for IVEfx
 D typeinfo for IVEngineClient
 D typeinfo for IVEngineServer
 D typeinfo for IVModelInfo
 D typeinfo for IVModelInfoClient
 D typeinfo for IVModelRender
 D typeinfo for IVPhysicsDebugOverlay
 D typeinfo for IVProfData
 D typeinfo for IVProfExport
 D typeinfo for IVRenderView
 D typeinfo for IVTFTexture
 D typeinfo for IVideoMode
 D typeinfo for IVirtualMeshEvent
 D typeinfo for IVoiceRecord
 D typeinfo for IVoiceServer
 D typeinfo for IWaveData
 D typeinfo for IWaveStreamSource
 D typeinfo for IWorldRenderList
 D typeinfo for IXboxSystem
 D typeinfo for MarkStaticPropLightsEmumerator
 D typeinfo for MenuItemCheckImage
 D typeinfo for PacketReliableHandler_t
 D typeinfo for TAssetInfo
 D typeinfo for TMaterialAssetInfo
 D typeinfo for TModelAssetInfo
 D typeinfo for TTextureAssetInfo
 D typeinfo for TxViewPanel
 D typeinfo for VoiceRecord_AudioQueue
 D typeinfo for VoiceRecord_OpenAL
 D typeinfo for snappy::ByteArraySource
 D typeinfo for snappy::Sink
 D typeinfo for snappy::Source
 D typeinfo for snappy::UncheckedByteArraySink
 D typeinfo for vgui::AnimatingImagePanel
 D typeinfo for vgui::AnimationController
 D typeinfo for vgui::BaseInputDialog
 D typeinfo for vgui::BaseTooltip
 D typeinfo for vgui::BuildGroup
 D typeinfo for vgui::BuildModeDialog
 D typeinfo for vgui::Button
 D typeinfo for vgui::CBitmapImagePanel
 D typeinfo for vgui::CTreeViewListControl
 D typeinfo for vgui::CheckButton
 D typeinfo for vgui::CircularProgressBar
 D typeinfo for vgui::ClickPanel
 D typeinfo for vgui::ComboBox
 D typeinfo for vgui::ComboBoxButton
 D typeinfo for vgui::ContextLabel
 D typeinfo for vgui::ContinuousProgressBar
 D typeinfo for vgui::CvarToggleCheckButton<ConVarRef>
 D typeinfo for vgui::DirectorySelectDialog
 D typeinfo for vgui::DirectoryTreeView
 D typeinfo for vgui::Divider
 D typeinfo for vgui::EditablePanel
 D typeinfo for vgui::ExpandButton
 D typeinfo for vgui::FileNameComboBox
 D typeinfo for vgui::FileOpenDialog
 D typeinfo for vgui::FileOpenStateMachine
 D typeinfo for vgui::FocusNavGroup
 D typeinfo for vgui::Frame
 D typeinfo for vgui::FrameButton
 D typeinfo for vgui::FrameSystemButton
 D typeinfo for vgui::GraphPanel
 D typeinfo for vgui::IClientPanel
 D typeinfo for vgui::IFileOpenStateMachineClient
 D typeinfo for vgui::IImage
 D typeinfo for vgui::IPanelAnimationPropertyConverter
 D typeinfo for vgui::Image
 D typeinfo for vgui::ImagePanel
 D typeinfo for vgui::InputDialog
 D typeinfo for vgui::Label
 D typeinfo for vgui::ListPanel
 D typeinfo for vgui::ListViewItem
 D typeinfo for vgui::ListViewPanel
 D typeinfo for vgui::Menu
 D typeinfo for vgui::MenuBar
 D typeinfo for vgui::MenuButton
 D typeinfo for vgui::MenuItem
 D typeinfo for vgui::MenuSeparator
 D typeinfo for vgui::MessageBox
 D typeinfo for vgui::PageTab
 D typeinfo for vgui::Panel
 D typeinfo for vgui::PanelListPanel
 D typeinfo for vgui::ProgressBar
 D typeinfo for vgui::PropertyDialog
 D typeinfo for vgui::PropertyPage
 D typeinfo for vgui::PropertySheet
 D typeinfo for vgui::RadioButton
 D typeinfo for vgui::RichText
 D typeinfo for vgui::RichTextInterior
 D typeinfo for vgui::ScalableImagePanel
 D typeinfo for vgui::ScrollBar
 D typeinfo for vgui::ScrollBarSlider
 D typeinfo for vgui::Slider
 D typeinfo for vgui::Splitter
 D typeinfo for vgui::SplitterChildPanel
 D typeinfo for vgui::SplitterHandle
 D typeinfo for vgui::TextEntry
 D typeinfo for vgui::TextImage
 D typeinfo for vgui::TextTooltip
 D typeinfo for vgui::TileViewPanelEx
 D typeinfo for vgui::ToggleButton
 D typeinfo for vgui::ToolWindow
 D typeinfo for vgui::TreeNode
 D typeinfo for vgui::TreeNodeDropPanel
 D typeinfo for vgui::TreeNodeImage
 D typeinfo for vgui::TreeNodeText
 D typeinfo for vgui::TreeView
 D typeinfo for vgui::TreeViewSubPanel
 D typeinfo for vgui::URLLabel
 D vgui::AnimatingImagePanel::ChainToAnimationMap()::chained
 D vgui::AnimatingImagePanel::ChainToMap()::chained
 D vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D vgui::AnimatingImagePanel::KB_ChainToMap()::chained
 D vgui::AnimationController::ChainToAnimationMap()::chained
 D vgui::AnimationController::ChainToMap()::chained
 D vgui::AnimationController::GetKBMap()::s_pMap
 D vgui::AnimationController::GetMessageMap()::s_pMap
 D vgui::AnimationController::KB_ChainToMap()::chained
 D vgui::AnimationController::g_AlignmentLookup
 D vgui::BaseInputDialog::ChainToAnimationMap()::chained
 D vgui::BaseInputDialog::ChainToMap()::chained
 D vgui::BaseInputDialog::GetKBMap()::s_pMap
 D vgui::BaseInputDialog::GetMessageMap()::s_pMap
 D vgui::BaseInputDialog::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::ChainToAnimationMap()::chained
 D vgui::BuildModeDialog::ChainToMap()::chained
 D vgui::BuildModeDialog::GetKBMap()::s_pMap
 D vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D vgui::BuildModeDialog::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::PanelMessageFunc_ApplyDataToControls::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoCopy::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoPaste::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoUndo::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_EnableSaveButton::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnChangeChild::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnCreateNewControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnDeletePanel::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnPanelMoved::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnReloadLocalization::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnSetClipboardText::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnShowNewControlMenu::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextKillFocus::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_SetActiveControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_ShutdownBuildMode::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_StoreUndoSettings::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_UpdateControlData::InitVar()::bAdded
 D vgui::Button::ChainToAnimationMap()::chained
 D vgui::Button::ChainToMap()::chained
 D vgui::Button::GetKBMap()::s_pMap
 D vgui::Button::GetMessageMap()::s_pMap
 D vgui::Button::KB_ChainToMap()::chained
 D vgui::Button::PanelMessageFunc_DoClick::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnHotkey::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsCurrentDefaultButton::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsDefaultButton::InitVar()::bAdded
 D vgui::CTreeViewListControl::ChainToAnimationMap()::chained
 D vgui::CTreeViewListControl::ChainToMap()::chained
 D vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D vgui::CTreeViewListControl::KB_ChainToMap()::chained
 D vgui::CheckButton::ChainToAnimationMap()::chained
 D vgui::CheckButton::ChainToMap()::chained
 D vgui::CheckButton::GetKBMap()::s_pMap
 D vgui::CheckButton::GetMessageMap()::s_pMap
 D vgui::CheckButton::KB_ChainToMap()::chained
 D vgui::CheckButton::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D vgui::CircularProgressBar::ChainToAnimationMap()::chained
 D vgui::CircularProgressBar::ChainToMap()::chained
 D vgui::CircularProgressBar::GetKBMap()::s_pMap
 D vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D vgui::CircularProgressBar::KB_ChainToMap()::chained
 D vgui::ClickPanel::ChainToAnimationMap()::chained
 D vgui::ClickPanel::ChainToMap()::chained
 D vgui::ClickPanel::GetKBMap()::s_pMap
 D vgui::ClickPanel::GetMessageMap()::s_pMap
 D vgui::ClickPanel::KB_ChainToMap()::chained
 D vgui::ComboBox::ChainToAnimationMap()::chained
 D vgui::ComboBox::ChainToMap()::chained
 D vgui::ComboBox::GetKBMap()::s_pMap
 D vgui::ComboBox::GetMessageMap()::s_pMap
 D vgui::ComboBox::KB_ChainToMap()::chained
 D vgui::ComboBox::PanelMessageFunc_ActivateItem::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ComboBoxButton::ChainToAnimationMap()::chained
 D vgui::ComboBoxButton::ChainToMap()::chained
 D vgui::ComboBoxButton::GetKBMap()::s_pMap
 D vgui::ComboBoxButton::GetMessageMap()::s_pMap
 D vgui::ComboBoxButton::KB_ChainToMap()::chained
 D vgui::ContextLabel::ChainToAnimationMap()::chained
 D vgui::ContextLabel::ChainToMap()::chained
 D vgui::ContextLabel::GetKBMap()::s_pMap
 D vgui::ContextLabel::GetMessageMap()::s_pMap
 D vgui::ContextLabel::KB_ChainToMap()::chained
 D vgui::ContinuousProgressBar::ChainToAnimationMap()::chained
 D vgui::ContinuousProgressBar::ChainToMap()::chained
 D vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D vgui::ContinuousProgressBar::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToAnimationMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnApplyChanges::InitVar()::bAdded
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnButtonChecked::InitVar()::bAdded
 D vgui::DirectorySelectDialog::ChainToAnimationMap()::chained
 D vgui::DirectorySelectDialog::ChainToMap()::chained
 D vgui::DirectorySelectDialog::GetKBMap()::s_pMap
 D vgui::DirectorySelectDialog::GetMessageMap()::s_pMap
 D vgui::DirectorySelectDialog::KB_ChainToMap()::chained
 D vgui::DirectorySelectDialog::PanelMessageFunc_OnCreateDirectory::InitVar()::bAdded
 D vgui::DirectorySelectDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::DirectorySelectDialog::PanelMessageFunc_OnTreeViewItemSelected::InitVar()::bAdded
 D vgui::Divider::ChainToAnimationMap()::chained
 D vgui::Divider::ChainToMap()::chained
 D vgui::Divider::GetKBMap()::s_pMap
 D vgui::Divider::GetMessageMap()::s_pMap
 D vgui::Divider::KB_ChainToMap()::chained
 D vgui::EditablePanel::ChainToAnimationMap()::chained
 D vgui::EditablePanel::ChainToMap()::chained
 D vgui::EditablePanel::GetKBMap()::s_pMap
 D vgui::EditablePanel::GetMessageMap()::s_pMap
 D vgui::EditablePanel::KB_ChainToMap()::chained
 D vgui::EditablePanel::PanelMessageFunc_OnCurrentDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnFindDefaultButton::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ExpandButton::ChainToAnimationMap()::chained
 D vgui::ExpandButton::ChainToMap()::chained
 D vgui::ExpandButton::GetKBMap()::s_pMap
 D vgui::ExpandButton::GetMessageMap()::s_pMap
 D vgui::ExpandButton::KB_ChainToMap()::chained
 D vgui::ExpandButton::PanelMessageFunc_OnExpanded::InitVar()::bAdded
 D vgui::FileNameComboBox::ChainToAnimationMap()::chained
 D vgui::FileNameComboBox::ChainToMap()::chained
 D vgui::FileNameComboBox::GetKBMap()::s_pMap
 D vgui::FileNameComboBox::GetMessageMap()::s_pMap
 D vgui::FileNameComboBox::KB_ChainToMap()::chained
 D vgui::FileOpenDialog::ChainToAnimationMap()::chained
 D vgui::FileOpenDialog::ChainToMap()::chained
 D vgui::FileOpenDialog::GetKBMap()::s_pMap
 D vgui::FileOpenDialog::GetMessageMap()::s_pMap
 D vgui::FileOpenDialog::KB_ChainToMap()::chained
 D vgui::FileOpenDialog::PanelMessageFunc_OnFolderUp::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnInputCanceled::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnInputCompleted::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnItemSelected::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnListItemSelected::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnMatchStringSelected::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnNewFolder::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnOpen::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnOpenInExplorer::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnSelectFolder::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_PopulateDriveList::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_PopulateFileList::InitVar()::bAdded
 D vgui::FileOpenDialog::PanelMessageFunc_PopulateFileNameSearchHistory::InitVar()::bAdded
 D vgui::FileOpenStateMachine::ChainToAnimationMap()::chained
 D vgui::FileOpenStateMachine::ChainToMap()::chained
 D vgui::FileOpenStateMachine::GetKBMap()::s_pMap
 D vgui::FileOpenStateMachine::GetMessageMap()::s_pMap
 D vgui::FileOpenStateMachine::KB_ChainToMap()::chained
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnCancelMakeFileWriteable::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnCancelOverwriteFile::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnCancelSaveDocument::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnFileSelected::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnFileSelectionCancelled::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnMakeFileWriteable::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnMarkNotDirty::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnOverwriteFile::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnPerforceQueryCompleted::InitVar()::bAdded
 D vgui::FileOpenStateMachine::PanelMessageFunc_OnSaveFile::InitVar()::bAdded
 D vgui::Frame::ChainToAnimationMap()::chained
 D vgui::Frame::ChainToMap()::chained
 D vgui::Frame::GetKBMap()::s_pMap
 D vgui::Frame::GetMessageMap()::s_pMap
 D vgui::Frame::KB_ChainToMap()::chained
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetXOverride::InitVar()::bAdded
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetYOverride::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_Close::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_CloseModal::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalFlashWindow::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalSetTitle::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnCloseFrameButtonPressed::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnMinimize::InitVar()::bAdded
 D vgui::FrameSystemButton::ChainToAnimationMap()::chained
 D vgui::FrameSystemButton::ChainToMap()::chained
 D vgui::FrameSystemButton::GetKBMap()::s_pMap
 D vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D vgui::FrameSystemButton::KB_ChainToMap()::chained
 D vgui::GraphPanel::ChainToAnimationMap()::chained
 D vgui::GraphPanel::ChainToMap()::chained
 D vgui::GraphPanel::GetKBMap()::s_pMap
 D vgui::GraphPanel::GetMessageMap()::s_pMap
 D vgui::GraphPanel::KB_ChainToMap()::chained
 D vgui::ImagePanel::ChainToAnimationMap()::chained
 D vgui::ImagePanel::ChainToMap()::chained
 D vgui::ImagePanel::GetKBMap()::s_pMap
 D vgui::ImagePanel::GetMessageMap()::s_pMap
 D vgui::ImagePanel::KB_ChainToMap()::chained
 D vgui::ImagePanel::PanelMessageFunc_SettingMessage_m_bScaleImage::InitVar()::bAdded
 D vgui::ImagePanel::PanelMessageFunc_SettingMessage_m_fScaleAmount::InitVar()::bAdded
 D vgui::InputDialog::ChainToAnimationMap()::chained
 D vgui::InputDialog::ChainToMap()::chained
 D vgui::InputDialog::GetKBMap()::s_pMap
 D vgui::InputDialog::GetMessageMap()::s_pMap
 D vgui::InputDialog::KB_ChainToMap()::chained
 D vgui::Label::ChainToAnimationMap()::chained
 D vgui::Label::ChainToMap()::chained
 D vgui::Label::GetKBMap()::s_pMap
 D vgui::Label::GetMessageMap()::s_pMap
 D vgui::Label::KB_ChainToMap()::chained
 D vgui::Label::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnHotkeyPressed::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_SettingMessage_m_bAllCaps::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_SettingMessage_m_bAutoTallToContents::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_SettingMessage_m_bAutoWideToContents::InitVar()::bAdded
 D vgui::ListPanel::ChainToAnimationMap()::chained
 D vgui::ListPanel::ChainToMap()::chained
 D vgui::ListPanel::GetKBMap()::s_pMap
 D vgui::ListPanel::GetMessageMap()::s_pMap
 D vgui::ListPanel::KB_ChainToMap()::chained
 D vgui::ListPanel::PanelMessageFunc_OnColumnResized::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSetSortColumn::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnToggleColumnVisible::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OpenColumnChoiceMenu::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_ResizeColumnToContents::InitVar()::bAdded
 D vgui::ListViewItem::ChainToAnimationMap()::chained
 D vgui::ListViewItem::ChainToMap()::chained
 D vgui::ListViewItem::GetKBMap()::s_pMap
 D vgui::ListViewItem::GetMessageMap()::s_pMap
 D vgui::ListViewItem::KB_ChainToMap()::chained
 D vgui::ListViewPanel::ChainToAnimationMap()::chained
 D vgui::ListViewPanel::ChainToMap()::chained
 D vgui::ListViewPanel::GetKBMap()::s_pMap
 D vgui::ListViewPanel::GetMessageMap()::s_pMap
 D vgui::ListViewPanel::KB_ChainToMap()::chained
 D vgui::ListViewPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::Menu::ChainToAnimationMap()::chained
 D vgui::Menu::ChainToMap()::chained
 D vgui::Menu::GetKBMap()::s_pMap
 D vgui::Menu::GetMessageMap()::s_pMap
 D vgui::Menu::KB_ChainToMap()::chained
 D vgui::Menu::PanelMessageFunc_OnCursorEnteredMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnCursorExitedMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::MenuBar::ChainToAnimationMap()::chained
 D vgui::MenuBar::ChainToMap()::chained
 D vgui::MenuBar::GetKBMap()::s_pMap
 D vgui::MenuBar::GetMessageMap()::s_pMap
 D vgui::MenuBar::KB_ChainToMap()::chained
 D vgui::MenuBar::PanelMessageFunc_OnCursorEnteredMenuButton::InitVar()::bAdded
 D vgui::MenuBar::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuButton::ChainToAnimationMap()::chained
 D vgui::MenuButton::ChainToMap()::chained
 D vgui::MenuButton::GetKBMap()::s_pMap
 D vgui::MenuButton::GetMessageMap()::s_pMap
 D vgui::MenuButton::KB_ChainToMap()::chained
 D vgui::MenuButton::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuButton::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuItem::ChainToAnimationMap()::chained
 D vgui::MenuItem::ChainToMap()::chained
 D vgui::MenuItem::GetKBMap()::s_pMap
 D vgui::MenuItem::GetMessageMap()::s_pMap
 D vgui::MenuItem::KB_ChainToMap()::chained
 D vgui::MenuItem::PanelMessageFunc_ArmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_DisarmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuSeparator::ChainToAnimationMap()::chained
 D vgui::MenuSeparator::ChainToMap()::chained
 D vgui::MenuSeparator::GetKBMap()::s_pMap
 D vgui::MenuSeparator::GetMessageMap()::s_pMap
 D vgui::MenuSeparator::KB_ChainToMap()::chained
 D vgui::MessageBox::ChainToAnimationMap()::chained
 D vgui::MessageBox::ChainToMap()::chained
 D vgui::MessageBox::GetKBMap()::s_pMap
 D vgui::MessageBox::GetMessageMap()::s_pMap
 D vgui::MessageBox::KB_ChainToMap()::chained
 D vgui::MessageBox::PanelMessageFunc_OnShutdownRequest::InitVar()::bAdded
 D vgui::PageTab::ChainToAnimationMap()::chained
 D vgui::PageTab::ChainToMap()::chained
 D vgui::PageTab::GetKBMap()::s_pMap
 D vgui::PageTab::GetMessageMap()::s_pMap
 D vgui::PageTab::KB_ChainToMap()::chained
 D vgui::Panel::ChainToAnimationMap()::chained
 D vgui::Panel::ChainToMap()::chained
 D vgui::Panel::GetKBMap()::s_pMap
 D vgui::Panel::GetMessageMap()::s_pMap
 D vgui::Panel::KB_ChainToMap()::chained
 D vgui::Panel::PanelAnimationVar_m_flAlpha::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId1::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId2::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId3::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId4::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nPaintBackgroundType::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorEntered::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorEnteredChild::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorExited::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorExitedChild::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalInvalidateLayout::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseDoublePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMousePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseTriplePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseWheeled::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMove::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCommand::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnDelete::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnLayoutFileChanged::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseCaptureLost::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateFrom::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateTo::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnRequestFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnSetFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_Repaint::InitVar()::bAdded
 D vgui::Panel::m_MessageMap
 D vgui::Panel::m_PanelMap
 D vgui::PanelListPanel::ChainToAnimationMap()::chained
 D vgui::PanelListPanel::ChainToMap()::chained
 D vgui::PanelListPanel::GetKBMap()::s_pMap
 D vgui::PanelListPanel::GetMessageMap()::s_pMap
 D vgui::PanelListPanel::KB_ChainToMap()::chained
 D vgui::PanelListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ProgressBar::ChainToAnimationMap()::chained
 D vgui::ProgressBar::ChainToMap()::chained
 D vgui::ProgressBar::GetKBMap()::s_pMap
 D vgui::ProgressBar::GetMessageMap()::s_pMap
 D vgui::ProgressBar::KB_ChainToMap()::chained
 D vgui::ProgressBar::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::ProgressBar::PanelMessageFunc_SetProgress::InitVar()::bAdded
 D vgui::PropertyDialog::ChainToAnimationMap()::chained
 D vgui::PropertyDialog::ChainToMap()::chained
 D vgui::PropertyDialog::GetKBMap()::s_pMap
 D vgui::PropertyDialog::GetMessageMap()::s_pMap
 D vgui::PropertyDialog::KB_ChainToMap()::chained
 D vgui::PropertyDialog::PanelAnimationVar_m_iSheetInsetBottom::InitVar()::bAdded
 D vgui::PropertyDialog::PanelMessageFunc_OnApplyButtonEnable::InitVar()::bAdded
 D vgui::PropertyPage::ChainToAnimationMap()::chained
 D vgui::PropertyPage::ChainToMap()::chained
 D vgui::PropertyPage::GetKBMap()::s_pMap
 D vgui::PropertyPage::GetMessageMap()::s_pMap
 D vgui::PropertyPage::KB_ChainToMap()::chained
 D vgui::PropertyPage::PanelMessageFunc_OnApplyChanges::InitVar()::bAdded
 D vgui::PropertyPage::PanelMessageFunc_OnPageHide::InitVar()::bAdded
 D vgui::PropertyPage::PanelMessageFunc_OnPageShow::InitVar()::bAdded
 D vgui::PropertyPage::PanelMessageFunc_OnPageTabActivated::InitVar()::bAdded
 D vgui::PropertyPage::PanelMessageFunc_OnResetData::InitVar()::bAdded
 D vgui::PropertySheet::ChainToAnimationMap()::chained
 D vgui::PropertySheet::ChainToMap()::chained
 D vgui::PropertySheet::GetKBMap()::s_pMap
 D vgui::PropertySheet::GetMessageMap()::s_pMap
 D vgui::PropertySheet::KB_ChainToMap()::chained
 D vgui::PropertySheet::PanelAnimationVar_m_bTabFitText::InitVar()::bAdded
 D vgui::PropertySheet::PanelAnimationVar_m_iSpecifiedTabHeight::InitVar()::bAdded
 D vgui::PropertySheet::PanelAnimationVar_m_iSpecifiedTabHeightSmall::InitVar()::bAdded
 D vgui::PropertySheet::PanelAnimationVar_m_iTabXDelta::InitVar()::bAdded
 D vgui::PropertySheet::PanelAnimationVar_m_iTabXIndent::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnApplyButtonEnable::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnCurrentDefaultButtonSet::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnDefaultButtonSet::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnFindDefaultButton::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnOpenContextMenu::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnTabPressed::InitVar()::bAdded
 D vgui::PropertySheet::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::RadioButton::ChainToAnimationMap()::chained
 D vgui::RadioButton::ChainToMap()::chained
 D vgui::RadioButton::GetKBMap()::s_pMap
 D vgui::RadioButton::GetMessageMap()::s_pMap
 D vgui::RadioButton::KB_ChainToMap()::chained
 D vgui::RadioButton::PanelMessageFunc_OnRadioButtonChecked::InitVar()::bAdded
 D vgui::RichText::ChainToAnimationMap()::chained
 D vgui::RichText::ChainToMap()::chained
 D vgui::RichText::GetKBMap()::s_pMap
 D vgui::RichText::GetMessageMap()::s_pMap
 D vgui::RichText::KB_ChainToMap()::chained
 D vgui::RichText::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBar::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBarDirect::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnClickPanel::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_SettingMessage__maxCharCount::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_SettingMessage_m_bAutoTallToContents::InitVar()::bAdded
 D vgui::RichTextInterior::ChainToAnimationMap()::chained
 D vgui::RichTextInterior::ChainToMap()::chained
 D vgui::RichTextInterior::GetKBMap()::s_pMap
 D vgui::RichTextInterior::GetMessageMap()::s_pMap
 D vgui::RichTextInterior::KB_ChainToMap()::chained
 D vgui::ScalableImagePanel::ChainToAnimationMap()::chained
 D vgui::ScalableImagePanel::ChainToMap()::chained
 D vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D vgui::ScalableImagePanel::KB_ChainToMap()::chained
 D vgui::ScrollBar::ChainToAnimationMap()::chained
 D vgui::ScrollBar::ChainToMap()::chained
 D vgui::ScrollBar::GetKBMap()::s_pMap
 D vgui::ScrollBar::GetMessageMap()::s_pMap
 D vgui::ScrollBar::KB_ChainToMap()::chained
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideButtons::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderReleased::InitVar()::bAdded
 D vgui::ScrollBarSlider::ChainToAnimationMap()::chained
 D vgui::ScrollBarSlider::ChainToMap()::chained
 D vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D vgui::ScrollBarSlider::KB_ChainToMap()::chained
 D vgui::Segments
 D vgui::Slider::ChainToAnimationMap()::chained
 D vgui::Slider::ChainToMap()::chained
 D vgui::Slider::GetKBMap()::s_pMap
 D vgui::Slider::GetMessageMap()::s_pMap
 D vgui::Slider::KB_ChainToMap()::chained
 D vgui::Splitter::ChainToAnimationMap()::chained
 D vgui::Splitter::ChainToMap()::chained
 D vgui::Splitter::GetKBMap()::s_pMap
 D vgui::Splitter::GetMessageMap()::s_pMap
 D vgui::Splitter::KB_ChainToMap()::chained
 D vgui::SplitterChildPanel::ChainToAnimationMap()::chained
 D vgui::SplitterChildPanel::ChainToMap()::chained
 D vgui::SplitterChildPanel::GetKBMap()::s_pMap
 D vgui::SplitterChildPanel::GetMessageMap()::s_pMap
 D vgui::SplitterChildPanel::KB_ChainToMap()::chained
 D vgui::SplitterHandle::ChainToAnimationMap()::chained
 D vgui::SplitterHandle::ChainToMap()::chained
 D vgui::SplitterHandle::GetKBMap()::s_pMap
 D vgui::SplitterHandle::GetMessageMap()::s_pMap
 D vgui::SplitterHandle::KB_ChainToMap()::chained
 D vgui::TextEntry::ChainToAnimationMap()::chained
 D vgui::TextEntry::ChainToMap()::chained
 D vgui::TextEntry::GetKBMap()::s_pMap
 D vgui::TextEntry::GetMessageMap()::s_pMap
 D vgui::TextEntry::KB_ChainToMap()::chained
 D vgui::TextEntry::PanelMessageFunc_CompositionString::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ConversionModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_HideIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_LanguageChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_Paste::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_SentenceModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ShowIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_UpdateIMECandidates::InitVar()::bAdded
 D vgui::TileViewPanelEx::ChainToAnimationMap()::chained
 D vgui::TileViewPanelEx::ChainToMap()::chained
 D vgui::TileViewPanelEx::GetKBMap()::s_pMap
 D vgui::TileViewPanelEx::GetMessageMap()::s_pMap
 D vgui::TileViewPanelEx::KB_ChainToMap()::chained
 D vgui::TileViewPanelEx::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ToggleButton::ChainToAnimationMap()::chained
 D vgui::ToggleButton::ChainToMap()::chained
 D vgui::ToggleButton::GetKBMap()::s_pMap
 D vgui::ToggleButton::GetMessageMap()::s_pMap
 D vgui::ToggleButton::KB_ChainToMap()::chained
 D vgui::TreeNode::ChainToAnimationMap()::chained
 D vgui::TreeNode::ChainToMap()::chained
 D vgui::TreeNode::GetKBMap()::s_pMap
 D vgui::TreeNode::GetMessageMap()::s_pMap
 D vgui::TreeNode::KB_ChainToMap()::chained
 D vgui::TreeNode::PanelMessageFunc_OnLabelChanged::InitVar()::bAdded
 D vgui::TreeNodeDropPanel::ChainToAnimationMap()::chained
 D vgui::TreeNodeDropPanel::ChainToMap()::chained
 D vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D vgui::TreeNodeDropPanel::KB_ChainToMap()::chained
 D vgui::TreeNodeText::ChainToAnimationMap()::chained
 D vgui::TreeNodeText::ChainToMap()::chained
 D vgui::TreeNodeText::GetKBMap()::s_pMap
 D vgui::TreeNodeText::GetMessageMap()::s_pMap
 D vgui::TreeNodeText::KB_ChainToMap()::chained
 D vgui::TreeNodeText::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::TreeView::ChainToAnimationMap()::chained
 D vgui::TreeView::ChainToMap()::chained
 D vgui::TreeView::GetKBMap()::s_pMap
 D vgui::TreeView::GetMessageMap()::s_pMap
 D vgui::TreeView::KB_ChainToMap()::chained
 D vgui::TreeView::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::URLLabel::ChainToAnimationMap()::chained
 D vgui::URLLabel::ChainToMap()::chained
 D vgui::URLLabel::GetKBMap()::s_pMap
 D vgui::URLLabel::GetMessageMap()::s_pMap
 D vgui::URLLabel::KB_ChainToMap()::chained
 D void CM_TraceToDispList<false, false>(TraceInfo_t*, unsigned short const*, int, float, float)::tm_fmt
 D void CM_TraceToDispList<false, true>(TraceInfo_t*, unsigned short const*, int, float, float)::tm_fmt
 D void CM_TraceToDispList<true, false>(TraceInfo_t*, unsigned short const*, int, float, float)::tm_fmt
 D void CM_TraceToDispList<true, true>(TraceInfo_t*, unsigned short const*, int, float, float)::tm_fmt
 D void CM_TraceToLeaf<false>(TraceInfo_t*, int, float, float)::tm_fmt
 D void CM_TraceToLeaf<true>(TraceInfo_t*, int, float, float)::tm_fmt
 D vtable for BlankImage
 D vtable for CAppSystemGroup
 D vtable for CAreaPortalsUIPanel
 D vtable for CAskConnectPanel
 D vtable for CAsyncWavDataCache
 D vtable for CAudioDeviceAudioQueue
 D vtable for CAudioDeviceNull
 D vtable for CAudioDeviceOpenAL
 D vtable for CAudioMixerWave
 D vtable for CAudioMixerWave16Mono
 D vtable for CAudioMixerWave16Stereo
 D vtable for CAudioMixerWave8Mono
 D vtable for CAudioMixerWave8Stereo
 D vtable for CAudioMixerWaveADPCM
 D vtable for CAudioMixerWaveMP3
 D vtable for CAudioSourceCache
 D vtable for CAudioSourceCachedInfo
 D vtable for CAudioSourceMP3
 D vtable for CAudioSourceMP3Cache
 D vtable for CAudioSourceMemWave
 D vtable for CAudioSourceStreamMP3
 D vtable for CAudioSourceStreamWave
 D vtable for CAudioSourceVoice
 D vtable for CAudioSourceVoice::CWaveDataVoice
 D vtable for CAudioSourceWave
 D vtable for CBaseActionCDTrackStartDialog
 D vtable for CBaseActionChangePlaybackRateDialog
 D vtable for CBaseActionEditDialog
 D vtable for CBaseActionPauseDialog
 D vtable for CBaseActionPlayCommandsDialog
 D vtable for CBaseActionPlaySoundStartDialog
 D vtable for CBaseActionScreenFadeStartDialog
 D vtable for CBaseActionSkipAheadDialog
 D vtable for CBaseActionStopPlaybackDialog
 D vtable for CBaseActionTextMessageStartDialog
 D vtable for CBaseActionWithStopTimeDialog
 D vtable for CBaseActionZoomDialog
 D vtable for CBaseBudgetPanel
 D vtable for CBaseClient
 D vtable for CBaseClientState
 D vtable for CBaseDemoAction
 D vtable for CBasePanel
 D vtable for CBaseServer
 D vtable for CBlackBox
 D vtable for CBlockingUDPSocket
 D vtable for CBoolProperty
 D vtable for CBoundedCvar_CmdRate
 D vtable for CBoundedCvar_Rate
 D vtable for CBoundedCvar_UpdateRate
 D vtable for CBreakpadPassiveAssertionFailureListener
 D vtable for CBrushBSPIterator
 D vtable for CBrushConvexInfo
 D vtable for CBrushSurface
 D vtable for CBudgetBarGraphPanel
 D vtable for CBudgetHistoryPanel
 D vtable for CBudgetPanelEngine
 D vtable for CBudgetPanelShared
 D vtable for CBugReportFinishedDialog
 D vtable for CBugReportUploadProgressDialog
 D vtable for CBugUIPanel
 D vtable for CBuildModeNavCombo
 D vtable for CCLCMsg_BaselineAck
 D vtable for CCLCMsg_ClientInfo
 D vtable for CCLCMsg_ClientMessage
 D vtable for CCLCMsg_FileCRCCheck
 D vtable for CCLCMsg_FileCRCCheck_t
 D vtable for CCLCMsg_ListenEvents
 D vtable for CCLCMsg_LoadingProgress
 D vtable for CCLCMsg_Move
 D vtable for CCLCMsg_RespondCvarValue
 D vtable for CCLCMsg_SplitPlayerConnect
 D vtable for CCLCMsg_VoiceData
 D vtable for CCallback<CSteam3Client, ClientGameServerDeny_t, false>
 D vtable for CCallback<CSteam3Client, GameOverlayActivated_t, false>
 D vtable for CCallback<CSteam3Client, GameServerChangeRequested_t, false>
 D vtable for CCallback<CSteam3Client, LowBatteryPower_t, false>
 D vtable for CCallback<CSteam3Client, PersonaStateChange_t, false>
 D vtable for CCallback<CSteam3Client, SocketStatusCallback_t, false>
 D vtable for CCallback<CSteam3Server, GSPolicyResponse_t, true>
 D vtable for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
 D vtable for CCallback<CSteam3Server, SteamServersConnected_t, true>
 D vtable for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
 D vtable for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
 D vtable for CClientDatatableStack
 D vtable for CClientEngineTools
 D vtable for CClientFrame
 D vtable for CClientFrameManager
 D vtable for CClientState
 D vtable for CColorBalanceOperation
 D vtable for CColorBalanceUIPanel
 D vtable for CColorCorrectionTools
 D vtable for CColorCorrectionUIChildPanel
 D vtable for CColorCorrectionUIPanel
 D vtable for CColorCurvesEditPanel
 D vtable for CColorCurvesUIPanel
 D vtable for CColorHistogramPanel
 D vtable for CColorLevelsUIPanel
 D vtable for CColorLookupOperation
 D vtable for CColorLookupUIPanel
 D vtable for CColorOperationListPanel
 D vtable for CColorProperty
 D vtable for CColorSlider
 D vtable for CConCommandMemberAccessor<CEngineVGui>
 D vtable for CConCommandMemberAccessor<CTextureBudgetPanel>
 D vtable for CConPanel
 D vtable for CConVarCheckButton
 D vtable for CCoreDispInfo
 D vtable for CCurveEditorPanel
 D vtable for CCurvesColorOperation
 D vtable for CCvarQuery
 D vtable for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
 D vtable for CDataManagerBase
 D vtable for CDatatableStack
 D vtable for CDebugCommandButton
 D vtable for CDebugCommandCheckbox
 D vtable for CDebugIncrementCVarButton
 D vtable for CDebugMenuButton
 D vtable for CDebugOptionsPage
 D vtable for CDebugOptionsPanel
 D vtable for CDebugSystemPanel
 D vtable for CDedicatedServerAPI
 D vtable for CDefaultAccessor
 D vtable for CDemoActionCDTrackStart
 D vtable for CDemoActionCDTrackStop
 D vtable for CDemoActionChangePlaybackRate
 D vtable for CDemoActionManager
 D vtable for CDemoActionPausePlayback
 D vtable for CDemoActionPlayCommands
 D vtable for CDemoActionPlaySoundStart
 D vtable for CDemoActionScreenFadeStart
 D vtable for CDemoActionSkipAhead
 D vtable for CDemoActionStopPlayback
 D vtable for CDemoActionTextMessageStart
 D vtable for CDemoActionZoom
 D vtable for CDemoClassInfo
 D vtable for CDemoClassInfo_class_t
 D vtable for CDemoConsoleCmd
 D vtable for CDemoCustomData
 D vtable for CDemoCustomDataCallbacks
 D vtable for CDemoFileHeader
 D vtable for CDemoFileInfo
 D vtable for CDemoFullPacket
 D vtable for CDemoMessagePB<(EDemoCommands)0, CDemoStop>
 D vtable for CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>
 D vtable for CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>
 D vtable for CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>
 D vtable for CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>
 D vtable for CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>
 D vtable for CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>
 D vtable for CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>
 D vtable for CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>
 D vtable for CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>
 D vtable for CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>
 D vtable for CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>
 D vtable for CDemoMessagePB<(EDemoCommands)7, CDemoPacket>
 D vtable for CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>
 D vtable for CDemoPacket
 D vtable for CDemoPlayer
 D vtable for CDemoRecorder
 D vtable for CDemoSaveGame
 D vtable for CDemoSendTables
 D vtable for CDemoStop
 D vtable for CDemoStringTables
 D vtable for CDemoStringTables_items_t
 D vtable for CDemoStringTables_table_t
 D vtable for CDemoSyncTick
 D vtable for CDemoUserCmd
 D vtable for CDiskDemoBuffer
 D vtable for CDispCollTree
 D vtable for CDispInfo
 D vtable for CDragDropHelperPanel
 D vtable for CDrawTreeFrame
 D vtable for CDummySfx
 D vtable for CEmptyConVar
 D vtable for CEncodeInfo
 D vtable for CEngine
 D vtable for CEngineAPI
 D vtable for CEngineBSPTree
 D vtable for CEngineBugReporter
 D vtable for CEngineClient
 D vtable for CEngineConsoleLoggingListener
 D vtable for CEnginePanel
 D vtable for CEnginePerfTools
 D vtable for CEngineRecipientFilter
 D vtable for CEngineSingleUserFilter
 D vtable for CEngineSoundClient
 D vtable for CEngineSoundServer
 D vtable for CEngineSoundServices
 D vtable for CEngineTool
 D vtable for CEngineTraceClient
 D vtable for CEngineTraceServer
 D vtable for CEngineUniformRandomStream
 D vtable for CEngineVGui
 D vtable for CEngineVoiceSteam
 D vtable for CEntityListAlongRay
 D vtable for CEntityReadInfo
 D vtable for CEntityReportPanel
 D vtable for CEntityWriteInfo
 D vtable for CEnumerationFilter
 D vtable for CFileDownloadFilter
 D vtable for CFileLoggingListener
 D vtable for CFilter
 D vtable for CFloatProperty
 D vtable for CFmtStrN<1024, false>
 D vtable for CFmtStrN<1024, true>
 D vtable for CFmtStrN<1040, false>
 D vtable for CFmtStrN<2048, false>
 D vtable for CFmtStrN<256, false>
 D vtable for CFocusOverlayPanel
 D vtable for CFogUIPanel
 D vtable for CFrameSnapshotManager
 D vtable for CFullScreenSelectionPanel
 D vtable for CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctorJob
 D vtable for CGame
 D vtable for CGameClient
 D vtable for CGameEvent
 D vtable for CGameEventManager
 D vtable for CGameEventManagerOld
 D vtable for CGameInfo
 D vtable for CGameInfo_CDotaGameInfo
 D vtable for CGameInfo_CDotaGameInfo_CHeroSelectEvent
 D vtable for CGameInfo_CDotaGameInfo_CPlayerInfo
 D vtable for CGameServer
 D vtable for CGameUIFuncs
 D vtable for CHFontProperty
 D vtable for CHLTVClient
 D vtable for CHLTVClientState
 D vtable for CHLTVDemoRecorder
 D vtable for CHLTVFrame
 D vtable for CHLTVServer
 D vtable for CIVDebugOverlay
 D vtable for CInstantReplay
 D vtable for CIntProperty
 D vtable for CJob
 D vtable for CKeyValueCache
 D vtable for CLevelsColorOperation
 D vtable for CLoaderProgress
 D vtable for CLog
 D vtable for CLookupViewPanel
 D vtable for CLookupViewWindow
 D vtable for CMDLCacheNotify
 D vtable for CManagedDataCacheClient<CAsyncWaveData, asyncwaveparams_t, CAsyncWaveData*>
 D vtable for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
 D vtable for CMaterialProxyFactory
 D vtable for CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemoryStack
 D vtable for CMessage
 D vtable for CMixerControls
 D vtable for CModAppSystemGroup
 D vtable for CModelInfo
 D vtable for CModelInfoClient
 D vtable for CModelInfoServer
 D vtable for CModelLoader
 D vtable for CModelRender
 D vtable for CMsgQAngle
 D vtable for CMsgVector
 D vtable for CMsgVector2D
 D vtable for CMsg_CVars
 D vtable for CMsg_CVars_CVar
 D vtable for CNETMsg_Disconnect
 D vtable for CNETMsg_File
 D vtable for CNETMsg_NOP
 D vtable for CNETMsg_SetConVar
 D vtable for CNETMsg_SetConVar_t
 D vtable for CNETMsg_SignonState
 D vtable for CNETMsg_SignonState_t
 D vtable for CNETMsg_SplitScreenUser
 D vtable for CNETMsg_StringCmd
 D vtable for CNETMsg_StringCmd_t
 D vtable for CNETMsg_Tick
 D vtable for CNETMsg_Tick_t
 D vtable for CNetConsoleMgr
 D vtable for CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>
 D vtable for CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>
 D vtable for CNetMessageBinder::BindParams<CNETMsg_SignonState_t>
 D vtable for CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>
 D vtable for CNetMessageBinder::BindParams<CNETMsg_Tick_t>
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >
 D vtable for CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >
 D vtable for CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>
 D vtable for CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>
 D vtable for CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>
 D vtable for CNetMessagePB<11, CSVCMsg_SetPause, 0, true>
 D vtable for CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>
 D vtable for CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>
 D vtable for CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>
 D vtable for CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>
 D vtable for CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>
 D vtable for CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>
 D vtable for CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>
 D vtable for CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>
 D vtable for CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>
 D vtable for CNetMessagePB<16, CSVCMsg_Print, 0, true>
 D vtable for CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>
 D vtable for CNetMessagePB<17, CSVCMsg_Sounds, 4, true>
 D vtable for CNetMessagePB<18, CSVCMsg_SetView, 0, true>
 D vtable for CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>
 D vtable for CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>
 D vtable for CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>
 D vtable for CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>
 D vtable for CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>
 D vtable for CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>
 D vtable for CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>
 D vtable for CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>
 D vtable for CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>
 D vtable for CNetMessagePB<29, CSVCMsg_Menu, 0, true>
 D vtable for CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>
 D vtable for CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>
 D vtable for CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>
 D vtable for CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>
 D vtable for CNetMessagePB<4, CNETMsg_Tick, 0, true>
 D vtable for CNetMessagePB<5, CNETMsg_StringCmd, 12, true>
 D vtable for CNetMessagePB<6, CNETMsg_SetConVar, 12, true>
 D vtable for CNetMessagePB<7, CNETMsg_SignonState, 13, true>
 D vtable for CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>
 D vtable for CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>
 D vtable for CNetMessagePB<9, CCLCMsg_Move, 11, false>
 D vtable for CNetMessagePB<9, CSVCMsg_SendTable, 13, true>
 D vtable for CNetSupportImpl
 D vtable for CNetworkStringTable
 D vtable for CNetworkStringTableContainer
 D vtable for CNetworkStringTableDictionaryManager
 D vtable for CNewOperationDialog
 D vtable for COM_IOReadBinary
 D vtable for COcclusionSystem
 D vtable for COcclusionUIPanel
 D vtable for COperationFileListFrame
 D vtable for COperationListPanel
 D vtable for COverlayMgr
 D vtable for CP4File
 D vtable for CP4File_Dummy
 D vtable for CPaintMapDataManager
 D vtable for CPerfUIChildPanel
 D vtable for CPerfUIPanel
 D vtable for CPerforceFileListFrame
 D vtable for CPluginGameUIDialog
 D vtable for CPluginHudMessage
 D vtable for CPluginMenu
 D vtable for CPluginUIManager
 D vtable for CPointContentsEnum
 D vtable for CPooledVBAllocator_ColorMesh
 D vtable for CPrecisionSlider
 D vtable for CProceduralTexturePanel
 D vtable for CProfileHierarchyPanel
 D vtable for CProfileTree
 D vtable for CPropCullStack
 D vtable for CPropFadeUIPanel
 D vtable for CPropMapStack
 D vtable for CPropOffsetStack
 D vtable for CProportionalFloatProperty
 D vtable for CProportionalIntProperty
 D vtable for CProportionalXPosProperty
 D vtable for CProportionalYPosProperty
 D vtable for CPureServerWhitelist::CAllowFromDiskList
 D vtable for CPureServerWhitelist::CForceMatchList
 D vtable for CRConClient
 D vtable for CRConServer
 D vtable for CRConVProfExport
 D vtable for CRealMemoryDemoBuffer
 D vtable for CRegistry
 D vtable for CRender
 D vtable for CRenderTextureEditor
 D vtable for CRenderTexturesListViewPanel
 D vtable for CResourcePreloadSound
 D vtable for CSPSharedMemory
 D vtable for CSVCMsgList_GameEvents
 D vtable for CSVCMsgList_GameEvents_event_t
 D vtable for CSVCMsgList_UserMessages
 D vtable for CSVCMsgList_UserMessages_usermsg_t
 D vtable for CSVCMsg_BSPDecal
 D vtable for CSVCMsg_ClassInfo
 D vtable for CSVCMsg_ClassInfo_class_t
 D vtable for CSVCMsg_CreateStringTable
 D vtable for CSVCMsg_CrosshairAngle
 D vtable for CSVCMsg_FixAngle
 D vtable for CSVCMsg_FullFrameSplit
 D vtable for CSVCMsg_GameEvent
 D vtable for CSVCMsg_GameEventList
 D vtable for CSVCMsg_GameEventList_descriptor_t
 D vtable for CSVCMsg_GameEventList_key_t
 D vtable for CSVCMsg_GameEvent_key_t
 D vtable for CSVCMsg_GetCvarValue
 D vtable for CSVCMsg_Menu
 D vtable for CSVCMsg_PacketEntities
 D vtable for CSVCMsg_PacketReliable
 D vtable for CSVCMsg_Prefetch
 D vtable for CSVCMsg_Print
 D vtable for CSVCMsg_SendTable
 D vtable for CSVCMsg_SendTable_sendprop_t
 D vtable for CSVCMsg_ServerInfo
 D vtable for CSVCMsg_SetPause
 D vtable for CSVCMsg_SetView
 D vtable for CSVCMsg_Sounds
 D vtable for CSVCMsg_Sounds_sounddata_t
 D vtable for CSVCMsg_SplitScreen
 D vtable for CSVCMsg_TempEntities
 D vtable for CSVCMsg_UpdateStringTable
 D vtable for CSVCMsg_UserMessage
 D vtable for CSVCMsg_VoiceData
 D vtable for CSVCMsg_VoiceInit
 D vtable for CSaveDocumentQuery
 D vtable for CSaveMemory
 D vtable for CSaveRestore
 D vtable for CSaveRestoreFileSystem
 D vtable for CSaveRestoreFileSystemPassthrough
 D vtable for CSelectedHSVOperation
 D vtable for CSelectedHSVUIPanel
 D vtable for CSendTablePrecalc
 D vtable for CSentenceMixer
 D vtable for CSerializedEntities
 D vtable for CServerDatatableStack
 D vtable for CServerEngineTools
 D vtable for CServerPlugin
 D vtable for CServerRemoteAccess
 D vtable for CSfxTable
 D vtable for CShadowMgr
 D vtable for CSmallTextEntry
 D vtable for CSosOperator
 D vtable for CSosOperatorBlockEntry
 D vtable for CSosOperatorConvar
 D vtable for CSosOperatorCurve4
 D vtable for CSosOperatorDashboard
 D vtable for CSosOperatorDelta
 D vtable for CSosOperatorDistantDSP
 D vtable for CSosOperatorDotaIsInWater
 D vtable for CSosOperatorEntityInfo
 D vtable for CSosOperatorEntryTime
 D vtable for CSosOperatorFacing
 D vtable for CSosOperatorFalloff
 D vtable for CSosOperatorFloat
 D vtable for CSosOperatorFloatAccumulate12
 D vtable for CSosOperatorFloatFilter
 D vtable for CSosOperatorFunc1
 D vtable for CSosOperatorGetOpvarFloat
 D vtable for CSosOperatorGetTrackSyncPoint
 D vtable for CSosOperatorIncrementOpvarFloat
 D vtable for CSosOperatorIterateAndMergeSpeakers
 D vtable for CSosOperatorLogicSwitch
 D vtable for CSosOperatorMapName
 D vtable for CSosOperatorMixGroup
 D vtable for CSosOperatorMixLayer
 D vtable for CSosOperatorOcclusion
 D vtable for CSosOperatorOutput
 D vtable for CSosOperatorPlatform
 D vtable for CSosOperatorPlayOnTrack
 D vtable for CSosOperatorPosVec8
 D vtable for CSosOperatorPrintFloat
 D vtable for CSosOperatorQueueToTrack
 D vtable for CSosOperatorRandom
 D vtable for CSosOperatorRemapValue
 D vtable for CSosOperatorSetConvar
 D vtable for CSosOperatorSetOpvarFloat
 D vtable for CSosOperatorSourceDistance
 D vtable for CSosOperatorSourceInfo
 D vtable for CSosOperatorSpatializeSpeakers
 D vtable for CSosOperatorSpeakers
 D vtable for CSosOperatorStartEntry
 D vtable for CSosOperatorStartEntryDOTA
 D vtable for CSosOperatorStopEntry
 D vtable for CSosOperatorStopTrack
 D vtable for CSosOperatorSysTime
 D vtable for CSosOperatorTimer
 D vtable for CSosOperatorTimerRamp
 D vtable for CSosOperatorVec3
 D vtable for CSosOperatorViewInfo
 D vtable for CSpatialPartition
 D vtable for CSplitScreen
 D vtable for CStaticPanel
 D vtable for CStaticProp
 D vtable for CStaticPropMgr
 D vtable for CSteamP2PAllowConnection
 D vtable for CStringProperty
 D vtable for CStudioConvexInfo
 D vtable for CTestScriptMgr
 D vtable for CTextureBudgetPanel
 D vtable for CTextureIdProperty
 D vtable for CTextureListPanel
 D vtable for CToolFrameworkInternal
 D vtable for CTouchLinks
 D vtable for CTouchLinks_ClientSide
 D vtable for CTraceFilterDAS
 D vtable for CTraceFilterHitAll
 D vtable for CTraceFilterWorldAndProps
 D vtable for CTraceFilterWorldAndPropsOnly
 D vtable for CTraceFilterWorldAndStaticEntities
 D vtable for CTraceFilterWorldOnly
 D vtable for CTraceListData
 D vtable for CTriggerMoved
 D vtable for CTriggerMoved_ClientSide
 D vtable for CUncorrectedImagePanel
 D vtable for CUploadGameStats
 D vtable for CUtlCStringConversion
 D vtable for CUtlCachedFileData<CAudioSourceCachedInfo>
 D vtable for CUtlCharConversion
 D vtable for CUtlNoEscConversion
 D vtable for CVEfx
 D vtable for CVEngineServer
 D vtable for CVGuiTree
 D vtable for CVProfExport
 D vtable for CVProfGraphPanel
 D vtable for CVProfLabel
 D vtable for CVProfPanel
 D vtable for CVRenderView
 D vtable for CVTFTexture
 D vtable for CVideoMode_MaterialSystem
 D vtable for CVirtualTerrain
 D vtable for CVmtTextEntry
 D vtable for CVoiceServer
 D vtable for CVoiceSfx
 D vtable for CVoxelTree
 D vtable for CWaveDataMemoryAsync
 D vtable for CWaveDataStreamAsync
 D vtable for CWorldRenderList
 D vtable for CXboxSystem
 D vtable for CheckImage
 D vtable for ColumnButton
 D vtable for ConCommand
 D vtable for ConVar
 D vtable for CreateDirectoryDialog
 D vtable for Dragger
 D vtable for IAssertionFailureListener
 D vtable for IDemoMessage
 D vtable for IGameEventListener2
 D vtable for INetMessage
 D vtable for ITextureRegenerator
 D vtable for MarkStaticPropLightsEmumerator
 D vtable for MenuItemCheckImage
 D vtable for PacketReliableHandler_t
 D vtable for TAssetInfo
 D vtable for TMaterialAssetInfo
 D vtable for TModelAssetInfo
 D vtable for TTextureAssetInfo
 D vtable for TxViewPanel
 D vtable for VoiceRecord_AudioQueue
 D vtable for VoiceRecord_OpenAL
 D vtable for snappy::ByteArraySource
 D vtable for snappy::UncheckedByteArraySink
 D vtable for vgui::AnimatingImagePanel
 D vtable for vgui::AnimationController
 D vtable for vgui::BaseInputDialog
 D vtable for vgui::BaseTooltip
 D vtable for vgui::BuildGroup
 D vtable for vgui::BuildModeDialog
 D vtable for vgui::Button
 D vtable for vgui::CBitmapImagePanel
 D vtable for vgui::CTreeViewListControl
 D vtable for vgui::CheckButton
 D vtable for vgui::CircularProgressBar
 D vtable for vgui::ClickPanel
 D vtable for vgui::ComboBox
 D vtable for vgui::ComboBoxButton
 D vtable for vgui::ContextLabel
 D vtable for vgui::ContinuousProgressBar
 D vtable for vgui::CvarToggleCheckButton<ConVarRef>
 D vtable for vgui::DirectorySelectDialog
 D vtable for vgui::DirectoryTreeView
 D vtable for vgui::Divider
 D vtable for vgui::EditablePanel
 D vtable for vgui::ExpandButton
 D vtable for vgui::FileNameComboBox
 D vtable for vgui::FileOpenDialog
 D vtable for vgui::FileOpenStateMachine
 D vtable for vgui::FocusNavGroup
 D vtable for vgui::Frame
 D vtable for vgui::FrameButton
 D vtable for vgui::FrameSystemButton
 D vtable for vgui::GraphPanel
 D vtable for vgui::IClientPanel
 D vtable for vgui::Image
 D vtable for vgui::ImagePanel
 D vtable for vgui::InputDialog
 D vtable for vgui::Label
 D vtable for vgui::ListPanel
 D vtable for vgui::ListViewItem
 D vtable for vgui::ListViewPanel
 D vtable for vgui::Menu
 D vtable for vgui::MenuBar
 D vtable for vgui::MenuButton
 D vtable for vgui::MenuItem
 D vtable for vgui::MenuSeparator
 D vtable for vgui::MessageBox
 D vtable for vgui::PageTab
 D vtable for vgui::Panel
 D vtable for vgui::PanelListPanel
 D vtable for vgui::ProgressBar
 D vtable for vgui::PropertyDialog
 D vtable for vgui::PropertyPage
 D vtable for vgui::PropertySheet
 D vtable for vgui::RadioButton
 D vtable for vgui::RichText
 D vtable for vgui::RichTextInterior
 D vtable for vgui::ScalableImagePanel
 D vtable for vgui::ScrollBar
 D vtable for vgui::ScrollBarSlider
 D vtable for vgui::Slider
 D vtable for vgui::Splitter
 D vtable for vgui::SplitterChildPanel
 D vtable for vgui::SplitterHandle
 D vtable for vgui::TextEntry
 D vtable for vgui::TextImage
 D vtable for vgui::TextTooltip
 D vtable for vgui::TileViewPanelEx
 D vtable for vgui::ToggleButton
 D vtable for vgui::TreeNode
 D vtable for vgui::TreeNodeDropPanel
 D vtable for vgui::TreeNodeImage
 D vtable for vgui::TreeNodeText
 D vtable for vgui::TreeView
 D vtable for vgui::TreeViewSubPanel
 D vtable for vgui::URLLabel
 D wavedatacache
 DevMsg
 DevMsg(char const*, ...)
 DevWarning
 DevWarning(char const*, ...)
 DisposePtr
 Error
 FindNextComponent
 GenericThreadLocals::CThreadLocalBase::CThreadLocalBase()
 GenericThreadLocals::CThreadLocalBase::Get() const
 GenericThreadLocals::CThreadLocalBase::Set(void*)
 GenericThreadLocals::CThreadLocalBase::~CThreadLocalBase()
 GetCPUFrequencyResults
 GetCPUInformation
 GetOSType
 KeyValuesSystem
 LOG_GENERAL
 LoggingSystem_AddTagToChannel
 LoggingSystem_GetChannel
 LoggingSystem_GetChannelCount
 LoggingSystem_GetChannelFlags
 LoggingSystem_GetFirstChannelID
 LoggingSystem_GetNextChannelID
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
 LoggingSystem_PopLoggingState
 LoggingSystem_PushLoggingState
 LoggingSystem_RegisterLoggingChannel
 LoggingSystem_RegisterLoggingListener
 LoggingSystem_ResetCurrentLoggingState
 LoggingSystem_SetChannelColor
 LoggingSystem_SetChannelFlags
 LoggingSystem_SetChannelVerbosity
 LoggingSystem_SetChannelVerbosityByTag
 MemAllocScratch
 MemFreeScratch
 MiniDumpStandardData_t::HandlerQueueHeartBeat() const
 MinidumpSetMiniDumpComment
 MinidumpUserStreamInfoAppend
 MinidumpUserStreamInfoGet
 MinidumpUserStreamInfoSetHeader
 Msg
 NMInstall
 NMRemove
 NewPtr
 OSAtomicCompareAndSwap32Barrier
 OSMemoryBarrier
 OpenAComponent
 Plat_ApproximateProcessMemoryUsage
 Plat_BeginWatchdogTimer
 Plat_CollectMiniDumpsForFatalErrors
 Plat_CreateWindow
 Plat_DebugString
 Plat_EnableHeadlessMode
 Plat_EndWatchdogTimer
 Plat_ExitProcess
 Plat_FloatTime
 Plat_GetDesktopResolution
 Plat_GetEnv
 Plat_GetLocalTime
 Plat_GetMemPageSize
 Plat_GetPagedPoolInfo
 Plat_GetTimeString
 Plat_IsHighDPI
 Plat_IsInBenchmarkMode
 Plat_IsInDebugSession
 Plat_MSTime
 Plat_NeedsLowFragmentation
 Plat_SetBenchmarkMode
 Plat_SetWatchdogHandlerFunction
 Plat_SetWindowPos
 Plat_SetupFPUControlWord
 Plat_ShouldCollectMiniDumpsForFatalErrors
 PublishAllMiniProfilers
 R CCompressedHeightfield<128u, 128u>::getSample(unsigned int, unsigned int) const::s_flLerpWeights
 R CDispCollTree::AxisPlanesXYZ(Ray_t const&, CDispCollTri*, CDispCollHelper*)::g_ImpactNormalVecs
 R CMPAHeader::m_dwBitrates
 R CMPAHeader::m_dwCoefficients
 R CMPAHeader::m_dwPaddingSizes
 R CMPAHeader::m_dwSamplesPerFrames
 R CMPAHeader::m_dwSamplingRates
 R Four_Epsilons
 R Four_FLT_MAX
 R Four_Negative_FLT_MAX
 R Four_Ones
 R Four_Zeros
 R g_SIMD_clear_signmask
 R g_SIMD_clear_wmask
 R jpeg_aritab
 R jpeg_natural_order
 R jpeg_natural_order2
 R jpeg_natural_order3
 R jpeg_natural_order4
 R jpeg_natural_order5
 R jpeg_natural_order6
 R jpeg_natural_order7
 R kLastSnapshotTag
 R std::tr1::__detail::_Primes<4>::__primes
 R typeinfo name for BlankImage
 R typeinfo name for CAppSystemGroup
 R typeinfo name for CAreaPortalsUIPanel
 R typeinfo name for CAskConnectPanel
 R typeinfo name for CAsyncWavDataCache
 R typeinfo name for CAudioDeviceAudioQueue
 R typeinfo name for CAudioDeviceBase
 R typeinfo name for CAudioDeviceNull
 R typeinfo name for CAudioDeviceOpenAL
 R typeinfo name for CAudioMixer
 R typeinfo name for CAudioMixerWave
 R typeinfo name for CAudioMixerWave16Mono
 R typeinfo name for CAudioMixerWave16Stereo
 R typeinfo name for CAudioMixerWave8Mono
 R typeinfo name for CAudioMixerWave8Stereo
 R typeinfo name for CAudioMixerWaveADPCM
 R typeinfo name for CAudioMixerWaveMP3
 R typeinfo name for CAudioSource
 R typeinfo name for CAudioSourceCache
 R typeinfo name for CAudioSourceCachedInfo
 R typeinfo name for CAudioSourceMP3
 R typeinfo name for CAudioSourceMP3Cache
 R typeinfo name for CAudioSourceMemWave
 R typeinfo name for CAudioSourceStreamMP3
 R typeinfo name for CAudioSourceStreamWave
 R typeinfo name for CAudioSourceVoice
 R typeinfo name for CAudioSourceVoice::CWaveDataVoice
 R typeinfo name for CAudioSourceWave
 R typeinfo name for CBaseActionCDTrackStartDialog
 R typeinfo name for CBaseActionChangePlaybackRateDialog
 R typeinfo name for CBaseActionEditDialog
 R typeinfo name for CBaseActionPauseDialog
 R typeinfo name for CBaseActionPlayCommandsDialog
 R typeinfo name for CBaseActionPlaySoundStartDialog
 R typeinfo name for CBaseActionScreenFadeStartDialog
 R typeinfo name for CBaseActionSkipAheadDialog
 R typeinfo name for CBaseActionStopPlaybackDialog
 R typeinfo name for CBaseActionTextMessageStartDialog
 R typeinfo name for CBaseActionWithStopTimeDialog
 R typeinfo name for CBaseActionZoomDialog
 R typeinfo name for CBaseAppSystem<ICvarQuery>
 R typeinfo name for CBaseAppSystem<IDedicatedServerAPI>
 R typeinfo name for CBaseAppSystem<IEngineAPI>
 R typeinfo name for CBaseAppSystem<INetSupport>
 R typeinfo name for CBaseAppSystem<IToolFrameworkInternal>
 R typeinfo name for CBaseBudgetPanel
 R typeinfo name for CBaseClient
 R typeinfo name for CBaseClientState
 R typeinfo name for CBaseDemoAction
 R typeinfo name for CBaseDemoActionWithStopTime
 R typeinfo name for CBasePanel
 R typeinfo name for CBaseServer
 R typeinfo name for CBlackBox
 R typeinfo name for CBlockingUDPSocket
 R typeinfo name for CBoolProperty
 R typeinfo name for CBoundedCvar_CmdRate
 R typeinfo name for CBoundedCvar_Rate
 R typeinfo name for CBoundedCvar_UpdateRate
 R typeinfo name for CBreakpadPassiveAssertionFailureListener
 R typeinfo name for CBrushBSPIterator
 R typeinfo name for CBrushConvexInfo
 R typeinfo name for CBrushSurface
 R typeinfo name for CBudgetBarGraphPanel
 R typeinfo name for CBudgetHistoryPanel
 R typeinfo name for CBudgetPanelEngine
 R typeinfo name for CBudgetPanelShared
 R typeinfo name for CBugReportFinishedDialog
 R typeinfo name for CBugReportUploadProgressDialog
 R typeinfo name for CBugUIPanel
 R typeinfo name for CBuildModeNavCombo
 R typeinfo name for CCLCMsg_BaselineAck
 R typeinfo name for CCLCMsg_ClientInfo
 R typeinfo name for CCLCMsg_ClientMessage
 R typeinfo name for CCLCMsg_FileCRCCheck
 R typeinfo name for CCLCMsg_FileCRCCheck_t
 R typeinfo name for CCLCMsg_ListenEvents
 R typeinfo name for CCLCMsg_LoadingProgress
 R typeinfo name for CCLCMsg_Move
 R typeinfo name for CCLCMsg_RespondCvarValue
 R typeinfo name for CCLCMsg_SplitPlayerConnect
 R typeinfo name for CCLCMsg_VoiceData
 R typeinfo name for CCallback<CSteam3Client, ClientGameServerDeny_t, false>
 R typeinfo name for CCallback<CSteam3Client, GameOverlayActivated_t, false>
 R typeinfo name for CCallback<CSteam3Client, GameServerChangeRequested_t, false>
 R typeinfo name for CCallback<CSteam3Client, LowBatteryPower_t, false>
 R typeinfo name for CCallback<CSteam3Client, PersonaStateChange_t, false>
 R typeinfo name for CCallback<CSteam3Client, SocketStatusCallback_t, false>
 R typeinfo name for CCallback<CSteam3Server, GSPolicyResponse_t, true>
 R typeinfo name for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
 R typeinfo name for CCallback<CSteam3Server, SteamServersConnected_t, true>
 R typeinfo name for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
 R typeinfo name for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
 R typeinfo name for CCallbackBase
 R typeinfo name for CClientDatatableStack
 R typeinfo name for CClientEngineTools
 R typeinfo name for CClientFrame
 R typeinfo name for CClientFrameManager
 R typeinfo name for CClientState
 R typeinfo name for CColorBalanceOperation
 R typeinfo name for CColorBalanceUIPanel
 R typeinfo name for CColorCorrectionTools
 R typeinfo name for CColorCorrectionUIChildPanel
 R typeinfo name for CColorCorrectionUIPanel
 R typeinfo name for CColorCurvesEditPanel
 R typeinfo name for CColorCurvesUIPanel
 R typeinfo name for CColorHistogramPanel
 R typeinfo name for CColorLevelsUIPanel
 R typeinfo name for CColorLookupOperation
 R typeinfo name for CColorLookupUIPanel
 R typeinfo name for CColorOperationListPanel
 R typeinfo name for CColorProperty
 R typeinfo name for CColorSlider
 R typeinfo name for CConCommandMemberAccessor<CEngineVGui>
 R typeinfo name for CConCommandMemberAccessor<CTextureBudgetPanel>
 R typeinfo name for CConPanel
 R typeinfo name for CConVarCheckButton
 R typeinfo name for CCoreDispInfo
 R typeinfo name for CCurveEditorPanel
 R typeinfo name for CCurvesColorOperation
 R typeinfo name for CCvarQuery
 R typeinfo name for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
 R typeinfo name for CDataManagerBase
 R typeinfo name for CDatatableStack
 R typeinfo name for CDebugCommandButton
 R typeinfo name for CDebugCommandCheckbox
 R typeinfo name for CDebugIncrementCVarButton
 R typeinfo name for CDebugMenuButton
 R typeinfo name for CDebugOptionsPage
 R typeinfo name for CDebugOptionsPanel
 R typeinfo name for CDebugSystemPanel
 R typeinfo name for CDedicatedServerAPI
 R typeinfo name for CDefaultAccessor
 R typeinfo name for CDefaultDataCacheClient
 R typeinfo name for CDemoActionCDTrackStart
 R typeinfo name for CDemoActionCDTrackStop
 R typeinfo name for CDemoActionChangePlaybackRate
 R typeinfo name for CDemoActionManager
 R typeinfo name for CDemoActionPausePlayback
 R typeinfo name for CDemoActionPlayCommands
 R typeinfo name for CDemoActionPlaySoundStart
 R typeinfo name for CDemoActionScreenFadeStart
 R typeinfo name for CDemoActionSkipAhead
 R typeinfo name for CDemoActionStopPlayback
 R typeinfo name for CDemoActionTextMessageStart
 R typeinfo name for CDemoActionZoom
 R typeinfo name for CDemoClassInfo
 R typeinfo name for CDemoClassInfo_class_t
 R typeinfo name for CDemoConsoleCmd
 R typeinfo name for CDemoCustomData
 R typeinfo name for CDemoCustomDataCallbacks
 R typeinfo name for CDemoFileHeader
 R typeinfo name for CDemoFileInfo
 R typeinfo name for CDemoFullPacket
 R typeinfo name for CDemoMessagePB<(EDemoCommands)0, CDemoStop>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)7, CDemoPacket>
 R typeinfo name for CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>
 R typeinfo name for CDemoPacket
 R typeinfo name for CDemoPlayer
 R typeinfo name for CDemoRecorder
 R typeinfo name for CDemoSaveGame
 R typeinfo name for CDemoSendTables
 R typeinfo name for CDemoStop
 R typeinfo name for CDemoStringTables
 R typeinfo name for CDemoStringTables_items_t
 R typeinfo name for CDemoStringTables_table_t
 R typeinfo name for CDemoSyncTick
 R typeinfo name for CDemoUserCmd
 R typeinfo name for CDiskDemoBuffer
 R typeinfo name for CDispCollTree
 R typeinfo name for CDispInfo
 R typeinfo name for CDispUtilsHelper
 R typeinfo name for CDragDropHelperPanel
 R typeinfo name for CDrawTreeFrame
 R typeinfo name for CDummySfx
 R typeinfo name for CEmptyConVar
 R typeinfo name for CEncodeInfo
 R typeinfo name for CEngine
 R typeinfo name for CEngineAPI
 R typeinfo name for CEngineBSPTree
 R typeinfo name for CEngineBugReporter
 R typeinfo name for CEngineClient
 R typeinfo name for CEngineConsoleLoggingListener
 R typeinfo name for CEnginePanel
 R typeinfo name for CEnginePerfTools
 R typeinfo name for CEngineRecipientFilter
 R typeinfo name for CEngineSingleUserFilter
 R typeinfo name for CEngineSoundClient
 R typeinfo name for CEngineSoundServer
 R typeinfo name for CEngineSoundServices
 R typeinfo name for CEngineTool
 R typeinfo name for CEngineTrace
 R typeinfo name for CEngineTraceClient
 R typeinfo name for CEngineTraceServer
 R typeinfo name for CEngineUniformRandomStream
 R typeinfo name for CEngineVGui
 R typeinfo name for CEngineVoiceSteam
 R typeinfo name for CEntityInfo
 R typeinfo name for CEntityListAlongRay
 R typeinfo name for CEntityReadInfo
 R typeinfo name for CEntityReportPanel
 R typeinfo name for CEntityWriteInfo
 R typeinfo name for CEnumerationFilter
 R typeinfo name for CFileDownloadFilter
 R typeinfo name for CFileLoggingListener
 R typeinfo name for CFilter
 R typeinfo name for CFloatProperty
 R typeinfo name for CFmtStrN<1024, false>
 R typeinfo name for CFmtStrN<1024, true>
 R typeinfo name for CFmtStrN<1040, false>
 R typeinfo name for CFmtStrN<2048, false>
 R typeinfo name for CFmtStrN<256, false>
 R typeinfo name for CFocusOverlayPanel
 R typeinfo name for CFogUIPanel
 R typeinfo name for CFrameSnapshotManager
 R typeinfo name for CFullScreenSelectionPanel
 R typeinfo name for CFunctor
 R typeinfo name for CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctorJob
 R typeinfo name for CGame
 R typeinfo name for CGameClient
 R typeinfo name for CGameEvent
 R typeinfo name for CGameEventManager
 R typeinfo name for CGameEventManagerOld
 R typeinfo name for CGameInfo
 R typeinfo name for CGameInfo_CDotaGameInfo
 R typeinfo name for CGameInfo_CDotaGameInfo_CHeroSelectEvent
 R typeinfo name for CGameInfo_CDotaGameInfo_CPlayerInfo
 R typeinfo name for CGameServer
 R typeinfo name for CGameUIFuncs
 R typeinfo name for CHFontProperty
 R typeinfo name for CHLTVClient
 R typeinfo name for CHLTVClientState
 R typeinfo name for CHLTVDemoRecorder
 R typeinfo name for CHLTVFrame
 R typeinfo name for CHLTVServer
 R typeinfo name for CIVDebugOverlay
 R typeinfo name for CInstantReplay
 R typeinfo name for CIntProperty
 R typeinfo name for CJob
 R typeinfo name for CKeyValueCache
 R typeinfo name for CLevelsColorOperation
 R typeinfo name for CLoaderProgress
 R typeinfo name for CLog
 R typeinfo name for CLookupViewPanel
 R typeinfo name for CLookupViewWindow
 R typeinfo name for CMDLCacheNotify
 R typeinfo name for CMPAException
 R typeinfo name for CManagedDataCacheClient<CAsyncWaveData, asyncwaveparams_t, CAsyncWaveData*>
 R typeinfo name for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
 R typeinfo name for CMaterialProxyFactory
 R typeinfo name for CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemoryStack
 R typeinfo name for CMessage
 R typeinfo name for CMixerControls
 R typeinfo name for CModAppSystemGroup
 R typeinfo name for CModelInfo
 R typeinfo name for CModelInfoClient
 R typeinfo name for CModelInfoServer
 R typeinfo name for CModelLoader
 R typeinfo name for CModelRender
 R typeinfo name for CMsgQAngle
 R typeinfo name for CMsgVector
 R typeinfo name for CMsgVector2D
 R typeinfo name for CMsg_CVars
 R typeinfo name for CMsg_CVars_CVar
 R typeinfo name for CNETMsg_Disconnect
 R typeinfo name for CNETMsg_File
 R typeinfo name for CNETMsg_NOP
 R typeinfo name for CNETMsg_SetConVar
 R typeinfo name for CNETMsg_SetConVar_t
 R typeinfo name for CNETMsg_SignonState
 R typeinfo name for CNETMsg_SignonState_t
 R typeinfo name for CNETMsg_SplitScreenUser
 R typeinfo name for CNETMsg_StringCmd
 R typeinfo name for CNETMsg_StringCmd_t
 R typeinfo name for CNETMsg_Tick
 R typeinfo name for CNETMsg_Tick_t
 R typeinfo name for CNetConsoleMgr
 R typeinfo name for CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>
 R typeinfo name for CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>
 R typeinfo name for CNetMessageBinder::BindParams<CNETMsg_SignonState_t>
 R typeinfo name for CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>
 R typeinfo name for CNetMessageBinder::BindParams<CNETMsg_Tick_t>
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >
 R typeinfo name for CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >
 R typeinfo name for CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>
 R typeinfo name for CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>
 R typeinfo name for CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>
 R typeinfo name for CNetMessagePB<11, CSVCMsg_SetPause, 0, true>
 R typeinfo name for CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>
 R typeinfo name for CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>
 R typeinfo name for CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>
 R typeinfo name for CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>
 R typeinfo name for CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>
 R typeinfo name for CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>
 R typeinfo name for CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>
 R typeinfo name for CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>
 R typeinfo name for CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>
 R typeinfo name for CNetMessagePB<16, CSVCMsg_Print, 0, true>
 R typeinfo name for CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>
 R typeinfo name for CNetMessagePB<17, CSVCMsg_Sounds, 4, true>
 R typeinfo name for CNetMessagePB<18, CSVCMsg_SetView, 0, true>
 R typeinfo name for CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>
 R typeinfo name for CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>
 R typeinfo name for CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>
 R typeinfo name for CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>
 R typeinfo name for CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>
 R typeinfo name for CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>
 R typeinfo name for CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>
 R typeinfo name for CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>
 R typeinfo name for CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>
 R typeinfo name for CNetMessagePB<29, CSVCMsg_Menu, 0, true>
 R typeinfo name for CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>
 R typeinfo name for CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>
 R typeinfo name for CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>
 R typeinfo name for CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>
 R typeinfo name for CNetMessagePB<4, CNETMsg_Tick, 0, true>
 R typeinfo name for CNetMessagePB<5, CNETMsg_StringCmd, 12, true>
 R typeinfo name for CNetMessagePB<6, CNETMsg_SetConVar, 12, true>
 R typeinfo name for CNetMessagePB<7, CNETMsg_SignonState, 13, true>
 R typeinfo name for CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>
 R typeinfo name for CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>
 R typeinfo name for CNetMessagePB<9, CCLCMsg_Move, 11, false>
 R typeinfo name for CNetMessagePB<9, CSVCMsg_SendTable, 13, true>
 R typeinfo name for CNetSupportImpl
 R typeinfo name for CNetworkStringTable
 R typeinfo name for CNetworkStringTableContainer
 R typeinfo name for CNetworkStringTableDictionaryManager
 R typeinfo name for CNewOperationDialog
 R typeinfo name for COM_IOReadBinary
 R typeinfo name for COcclusionSystem
 R typeinfo name for COcclusionUIPanel
 R typeinfo name for COperationFileListFrame
 R typeinfo name for COperationListPanel
 R typeinfo name for COverlayMgr
 R typeinfo name for CP4File
 R typeinfo name for CP4File_Dummy
 R typeinfo name for CPaintMapDataManager
 R typeinfo name for CPerfUIChildPanel
 R typeinfo name for CPerfUIPanel
 R typeinfo name for CPerforceFileListFrame
 R typeinfo name for CPluginGameUIDialog
 R typeinfo name for CPluginHudMessage
 R typeinfo name for CPluginMenu
 R typeinfo name for CPluginUIManager
 R typeinfo name for CPointContentsEnum
 R typeinfo name for CPooledVBAllocator_ColorMesh
 R typeinfo name for CPrecisionSlider
 R typeinfo name for CProceduralTexturePanel
 R typeinfo name for CProfileHierarchyPanel
 R typeinfo name for CProfileTree
 R typeinfo name for CPropCullStack
 R typeinfo name for CPropFadeUIPanel
 R typeinfo name for CPropMapStack
 R typeinfo name for CPropOffsetStack
 R typeinfo name for CProportionalFloatProperty
 R typeinfo name for CProportionalIntProperty
 R typeinfo name for CProportionalXPosProperty
 R typeinfo name for CProportionalYPosProperty
 R typeinfo name for CPureServerWhitelist::CAllowFromDiskList
 R typeinfo name for CPureServerWhitelist::CForceMatchList
 R typeinfo name for CRConClient
 R typeinfo name for CRConServer
 R typeinfo name for CRConVProfExport
 R typeinfo name for CRealMemoryDemoBuffer
 R typeinfo name for CRefCountServiceBase<true, CRefMT>
 R typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted1<IWorldRenderList, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRegistry
 R typeinfo name for CRender
 R typeinfo name for CRenderTextureEditor
 R typeinfo name for CRenderTexturesListViewPanel
 R typeinfo name for CResourcePreload
 R typeinfo name for CResourcePreloadSound
 R typeinfo name for CSPSharedMemory
 R typeinfo name for CSVCMsgList_GameEvents
 R typeinfo name for CSVCMsgList_GameEvents_event_t
 R typeinfo name for CSVCMsgList_UserMessages
 R typeinfo name for CSVCMsgList_UserMessages_usermsg_t
 R typeinfo name for CSVCMsg_BSPDecal
 R typeinfo name for CSVCMsg_ClassInfo
 R typeinfo name for CSVCMsg_ClassInfo_class_t
 R typeinfo name for CSVCMsg_CreateStringTable
 R typeinfo name for CSVCMsg_CrosshairAngle
 R typeinfo name for CSVCMsg_FixAngle
 R typeinfo name for CSVCMsg_FullFrameSplit
 R typeinfo name for CSVCMsg_GameEvent
 R typeinfo name for CSVCMsg_GameEventList
 R typeinfo name for CSVCMsg_GameEventList_descriptor_t
 R typeinfo name for CSVCMsg_GameEventList_key_t
 R typeinfo name for CSVCMsg_GameEvent_key_t
 R typeinfo name for CSVCMsg_GetCvarValue
 R typeinfo name for CSVCMsg_Menu
 R typeinfo name for CSVCMsg_PacketEntities
 R typeinfo name for CSVCMsg_PacketReliable
 R typeinfo name for CSVCMsg_Prefetch
 R typeinfo name for CSVCMsg_Print
 R typeinfo name for CSVCMsg_SendTable
 R typeinfo name for CSVCMsg_SendTable_sendprop_t
 R typeinfo name for CSVCMsg_ServerInfo
 R typeinfo name for CSVCMsg_SetPause
 R typeinfo name for CSVCMsg_SetView
 R typeinfo name for CSVCMsg_Sounds
 R typeinfo name for CSVCMsg_Sounds_sounddata_t
 R typeinfo name for CSVCMsg_SplitScreen
 R typeinfo name for CSVCMsg_TempEntities
 R typeinfo name for CSVCMsg_UpdateStringTable
 R typeinfo name for CSVCMsg_UserMessage
 R typeinfo name for CSVCMsg_VoiceData
 R typeinfo name for CSVCMsg_VoiceInit
 R typeinfo name for CSaveDocumentQuery
 R typeinfo name for CSaveMemory
 R typeinfo name for CSaveRestore
 R typeinfo name for CSaveRestoreFileSystem
 R typeinfo name for CSaveRestoreFileSystemPassthrough
 R typeinfo name for CSelectedHSVOperation
 R typeinfo name for CSelectedHSVUIPanel
 R typeinfo name for CSendTablePrecalc
 R typeinfo name for CSentenceMixer
 R typeinfo name for CSerializedEntities
 R typeinfo name for CServerDatatableStack
 R typeinfo name for CServerEngineTools
 R typeinfo name for CServerPlugin
 R typeinfo name for CServerRemoteAccess
 R typeinfo name for CSfxTable
 R typeinfo name for CShadowMgr
 R typeinfo name for CSmallTextEntry
 R typeinfo name for CSosOperator
 R typeinfo name for CSosOperatorBlockEntry
 R typeinfo name for CSosOperatorConvar
 R typeinfo name for CSosOperatorCurve4
 R typeinfo name for CSosOperatorDashboard
 R typeinfo name for CSosOperatorDelta
 R typeinfo name for CSosOperatorDistantDSP
 R typeinfo name for CSosOperatorDotaIsInWater
 R typeinfo name for CSosOperatorEntityInfo
 R typeinfo name for CSosOperatorEntryTime
 R typeinfo name for CSosOperatorFacing
 R typeinfo name for CSosOperatorFalloff
 R typeinfo name for CSosOperatorFloat
 R typeinfo name for CSosOperatorFloatAccumulate12
 R typeinfo name for CSosOperatorFloatFilter
 R typeinfo name for CSosOperatorFunc1
 R typeinfo name for CSosOperatorGetOpvarFloat
 R typeinfo name for CSosOperatorGetTrackSyncPoint
 R typeinfo name for CSosOperatorIncrementOpvarFloat
 R typeinfo name for CSosOperatorIterateAndMergeSpeakers
 R typeinfo name for CSosOperatorLogicSwitch
 R typeinfo name for CSosOperatorMapName
 R typeinfo name for CSosOperatorMixGroup
 R typeinfo name for CSosOperatorMixLayer
 R typeinfo name for CSosOperatorOcclusion
 R typeinfo name for CSosOperatorOutput
 R typeinfo name for CSosOperatorPlatform
 R typeinfo name for CSosOperatorPlayOnTrack
 R typeinfo name for CSosOperatorPosVec8
 R typeinfo name for CSosOperatorPrintFloat
 R typeinfo name for CSosOperatorQueueToTrack
 R typeinfo name for CSosOperatorRandom
 R typeinfo name for CSosOperatorRemapValue
 R typeinfo name for CSosOperatorSetConvar
 R typeinfo name for CSosOperatorSetOpvarFloat
 R typeinfo name for CSosOperatorSourceDistance
 R typeinfo name for CSosOperatorSourceInfo
 R typeinfo name for CSosOperatorSpatializeSpeakers
 R typeinfo name for CSosOperatorSpeakers
 R typeinfo name for CSosOperatorStartEntry
 R typeinfo name for CSosOperatorStartEntryDOTA
 R typeinfo name for CSosOperatorStopEntry
 R typeinfo name for CSosOperatorStopTrack
 R typeinfo name for CSosOperatorSysTime
 R typeinfo name for CSosOperatorTimer
 R typeinfo name for CSosOperatorTimerRamp
 R typeinfo name for CSosOperatorVec3
 R typeinfo name for CSosOperatorViewInfo
 R typeinfo name for CSpatialPartition
 R typeinfo name for CSplitScreen
 R typeinfo name for CSplitScreenAddedConVar
 R typeinfo name for CStaticPanel
 R typeinfo name for CStaticProp
 R typeinfo name for CStaticPropMgr
 R typeinfo name for CSteamP2PAllowConnection
 R typeinfo name for CStringProperty
 R typeinfo name for CStudioConvexInfo
 R typeinfo name for CTestScriptMgr
 R typeinfo name for CTextureBudgetPanel
 R typeinfo name for CTextureIdProperty
 R typeinfo name for CTextureListPanel
 R typeinfo name for CTier0AppSystem<IDedicatedServerAPI>
 R typeinfo name for CTier0AppSystem<IEngineAPI>
 R typeinfo name for CTier0AppSystem<INetSupport>
 R typeinfo name for CTier1AppSystem<IDedicatedServerAPI, 0>
 R typeinfo name for CTier1AppSystem<IEngineAPI, 0>
 R typeinfo name for CTier1AppSystem<INetSupport, 0>
 R typeinfo name for CTier2AppSystem<IDedicatedServerAPI, 0>
 R typeinfo name for CTier2AppSystem<IEngineAPI, 0>
 R typeinfo name for CTier2AppSystem<INetSupport, 0>
 R typeinfo name for CTier3AppSystem<IDedicatedServerAPI, 0>
 R typeinfo name for CTier3AppSystem<IEngineAPI, 0>
 R typeinfo name for CToolFrameworkInternal
 R typeinfo name for CTouchLinks
 R typeinfo name for CTouchLinks_ClientSide
 R typeinfo name for CTraceFilter
 R typeinfo name for CTraceFilterDAS
 R typeinfo name for CTraceFilterHitAll
 R typeinfo name for CTraceFilterWorldAndProps
 R typeinfo name for CTraceFilterWorldAndPropsOnly
 R typeinfo name for CTraceFilterWorldAndStaticEntities
 R typeinfo name for CTraceFilterWorldOnly
 R typeinfo name for CTraceListData
 R typeinfo name for CTriggerMoved
 R typeinfo name for CTriggerMoved_ClientSide
 R typeinfo name for CUncorrectedImagePanel
 R typeinfo name for CUploadGameStats
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCachedFileData<CAudioSourceCachedInfo>
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for CVEfx
 R typeinfo name for CVEngineServer
 R typeinfo name for CVGuiTree
 R typeinfo name for CVProfExport
 R typeinfo name for CVProfGraphPanel
 R typeinfo name for CVProfLabel
 R typeinfo name for CVProfPanel
 R typeinfo name for CVRenderView
 R typeinfo name for CVTFTexture
 R typeinfo name for CVideoMode_Common
 R typeinfo name for CVideoMode_MaterialSystem
 R typeinfo name for CVirtualTerrain
 R typeinfo name for CVmtTextEntry
 R typeinfo name for CVoiceServer
 R typeinfo name for CVoiceSfx
 R typeinfo name for CVoxelTree
 R typeinfo name for CWaveDataMemoryAsync
 R typeinfo name for CWaveDataStreamAsync
 R typeinfo name for CWorldRenderList
 R typeinfo name for CXboxSystem
 R typeinfo name for CheckImage
 R typeinfo name for ColumnButton
 R typeinfo name for ConCommand
 R typeinfo name for ConCommandBase
 R typeinfo name for ConVar
 R typeinfo name for ConVar_ServerBounded
 R typeinfo name for CreateDirectoryDialog
 R typeinfo name for Dragger
 R typeinfo name for IAppSystem
 R typeinfo name for IAppSystemGroup
 R typeinfo name for IAssertionFailureListener
 R typeinfo name for IAsyncWavDataCache
 R typeinfo name for IAudioDevice
 R typeinfo name for IAudioSourceCache
 R typeinfo name for IAudioStreamEvent
 R typeinfo name for IBaseCacheInfo
 R typeinfo name for IBaseInterface
 R typeinfo name for IBlackBox
 R typeinfo name for IBrushSurface
 R typeinfo name for IClient
 R typeinfo name for IClientEngineTools
 R typeinfo name for IClientModelRenderable
 R typeinfo name for IClientRenderable
 R typeinfo name for IClientUnknown
 R typeinfo name for ICollideable
 R typeinfo name for IColorCorrectionTools
 R typeinfo name for IColorOperation
 R typeinfo name for ICommandCallback
 R typeinfo name for ICommandCompletionCallback
 R typeinfo name for IConCommandBaseAccessor
 R typeinfo name for IConVar
 R typeinfo name for IConnectionlessPacketHandler
 R typeinfo name for IConvexInfo
 R typeinfo name for ICvarQuery
 R typeinfo name for IDataCacheClient
 R typeinfo name for IDedicatedServerAPI
 R typeinfo name for IDemoActionManager
 R typeinfo name for IDemoBuffer
 R typeinfo name for IDemoMessage
 R typeinfo name for IDemoPlayer
 R typeinfo name for IDemoRecorder
 R typeinfo name for IDemoRecorderBase
 R typeinfo name for IDispInfo
 R typeinfo name for IEngine
 R typeinfo name for IEngineAPI
 R typeinfo name for IEngineBugReporter
 R typeinfo name for IEnginePerfTools
 R typeinfo name for IEngineSound
 R typeinfo name for IEngineSpatialQuery
 R typeinfo name for IEngineTool
 R typeinfo name for IEngineToolFramework
 R typeinfo name for IEngineToolInternal
 R typeinfo name for IEngineTrace
 R typeinfo name for IEngineVGui
 R typeinfo name for IEngineVGuiInternal
 R typeinfo name for IEngineVoice
 R typeinfo name for IFileList
 R typeinfo name for IFileLoggingListener
 R typeinfo name for IFileReadBinary
 R typeinfo name for IFilter
 R typeinfo name for IGame
 R typeinfo name for IGameEvent
 R typeinfo name for IGameEventListener2
 R typeinfo name for IGameEventManager
 R typeinfo name for IGameEventManager2
 R typeinfo name for IGameServerData
 R typeinfo name for IGameUIFuncs
 R typeinfo name for IHLTVServer
 R typeinfo name for IHandleEntity
 R typeinfo name for IInstantReplayIntercept
 R typeinfo name for IKeyValueCache
 R typeinfo name for ILoaderProgress
 R typeinfo name for ILoggingListener
 R typeinfo name for IMDLCacheNotify
 R typeinfo name for IMaterialProxyFactory
 R typeinfo name for IMemoryInfo
 R typeinfo name for IMixerControls
 R typeinfo name for IModelLoader
 R typeinfo name for INetChannelHandler
 R typeinfo name for INetMessage
 R typeinfo name for INetMessageBinder
 R typeinfo name for INetSupport
 R typeinfo name for INetworkFileDownloadFilter
 R typeinfo name for INetworkPacketFilter
 R typeinfo name for INetworkStringTable
 R typeinfo name for INetworkStringTableContainer
 R typeinfo name for INetworkStringTableDictionaryMananger
 R typeinfo name for IOcclusionSystem
 R typeinfo name for IOverlayMgr
 R typeinfo name for IPaintMapDataManager
 R typeinfo name for IPartitionEnumerator
 R typeinfo name for IPooledVBAllocator
 R typeinfo name for IRecipientFilter
 R typeinfo name for IRefCounted
 R typeinfo name for IRegistry
 R typeinfo name for IRender
 R typeinfo name for IResourcePreload
 R typeinfo name for ISPSharedMemory
 R typeinfo name for ISaveRestore
 R typeinfo name for ISaveRestoreFileSystem
 R typeinfo name for ISerializedEntities
 R typeinfo name for IServer
 R typeinfo name for IServerEngineTools
 R typeinfo name for IServerPluginHelpers
 R typeinfo name for IShadowMgr
 R typeinfo name for IShadowMgrInternal
 R typeinfo name for ISocketCreatorListener
 R typeinfo name for ISoundServices
 R typeinfo name for ISpatialLeafEnumerator
 R typeinfo name for ISpatialPartition
 R typeinfo name for ISpatialPartitionInternal
 R typeinfo name for ISpatialQuery
 R typeinfo name for ISplitScreen
 R typeinfo name for IStaticPropMgr
 R typeinfo name for IStaticPropMgrClient
 R typeinfo name for IStaticPropMgrEngine
 R typeinfo name for IStaticPropMgrServer
 R typeinfo name for ISteamP2PAllowConnection
 R typeinfo name for ITextureRegenerator
 R typeinfo name for IToolFrameworkInternal
 R typeinfo name for ITraceFilter
 R typeinfo name for ITraceListData
 R typeinfo name for IUniformRandomStream
 R typeinfo name for IUploadGameStats
 R typeinfo name for IVDebugOverlay
 R typeinfo name for IVEfx
 R typeinfo name for IVEngineClient
 R typeinfo name for IVEngineServer
 R typeinfo name for IVModelInfo
 R typeinfo name for IVModelInfoClient
 R typeinfo name for IVModelRender
 R typeinfo name for IVPhysicsDebugOverlay
 R typeinfo name for IVProfData
 R typeinfo name for IVProfExport
 R typeinfo name for IVRenderView
 R typeinfo name for IVTFTexture
 R typeinfo name for IVideoMode
 R typeinfo name for IVirtualMeshEvent
 R typeinfo name for IVoiceRecord
 R typeinfo name for IVoiceServer
 R typeinfo name for IWaveData
 R typeinfo name for IWaveStreamSource
 R typeinfo name for IWorldRenderList
 R typeinfo name for IXboxSystem
 R typeinfo name for MarkStaticPropLightsEmumerator
 R typeinfo name for MenuItemCheckImage
 R typeinfo name for PacketReliableHandler_t
 R typeinfo name for TAssetInfo
 R typeinfo name for TMaterialAssetInfo
 R typeinfo name for TModelAssetInfo
 R typeinfo name for TTextureAssetInfo
 R typeinfo name for TxViewPanel
 R typeinfo name for VoiceRecord_AudioQueue
 R typeinfo name for VoiceRecord_OpenAL
 R typeinfo name for snappy::ByteArraySource
 R typeinfo name for snappy::Sink
 R typeinfo name for snappy::Source
 R typeinfo name for snappy::UncheckedByteArraySink
 R typeinfo name for vgui::AnimatingImagePanel
 R typeinfo name for vgui::AnimationController
 R typeinfo name for vgui::BaseInputDialog
 R typeinfo name for vgui::BaseTooltip
 R typeinfo name for vgui::BuildGroup
 R typeinfo name for vgui::BuildModeDialog
 R typeinfo name for vgui::Button
 R typeinfo name for vgui::CBitmapImagePanel
 R typeinfo name for vgui::CTreeViewListControl
 R typeinfo name for vgui::CheckButton
 R typeinfo name for vgui::CircularProgressBar
 R typeinfo name for vgui::ClickPanel
 R typeinfo name for vgui::ComboBox
 R typeinfo name for vgui::ComboBoxButton
 R typeinfo name for vgui::ContextLabel
 R typeinfo name for vgui::ContinuousProgressBar
 R typeinfo name for vgui::CvarToggleCheckButton<ConVarRef>
 R typeinfo name for vgui::DirectorySelectDialog
 R typeinfo name for vgui::DirectoryTreeView
 R typeinfo name for vgui::Divider
 R typeinfo name for vgui::EditablePanel
 R typeinfo name for vgui::ExpandButton
 R typeinfo name for vgui::FileNameComboBox
 R typeinfo name for vgui::FileOpenDialog
 R typeinfo name for vgui::FileOpenStateMachine
 R typeinfo name for vgui::FocusNavGroup
 R typeinfo name for vgui::Frame
 R typeinfo name for vgui::FrameButton
 R typeinfo name for vgui::FrameSystemButton
 R typeinfo name for vgui::GraphPanel
 R typeinfo name for vgui::IClientPanel
 R typeinfo name for vgui::IFileOpenStateMachineClient
 R typeinfo name for vgui::IImage
 R typeinfo name for vgui::IPanelAnimationPropertyConverter
 R typeinfo name for vgui::Image
 R typeinfo name for vgui::ImagePanel
 R typeinfo name for vgui::InputDialog
 R typeinfo name for vgui::Label
 R typeinfo name for vgui::ListPanel
 R typeinfo name for vgui::ListViewItem
 R typeinfo name for vgui::ListViewPanel
 R typeinfo name for vgui::Menu
 R typeinfo name for vgui::MenuBar
 R typeinfo name for vgui::MenuButton
 R typeinfo name for vgui::MenuItem
 R typeinfo name for vgui::MenuSeparator
 R typeinfo name for vgui::MessageBox
 R typeinfo name for vgui::PageTab
 R typeinfo name for vgui::Panel
 R typeinfo name for vgui::PanelListPanel
 R typeinfo name for vgui::ProgressBar
 R typeinfo name for vgui::PropertyDialog
 R typeinfo name for vgui::PropertyPage
 R typeinfo name for vgui::PropertySheet
 R typeinfo name for vgui::RadioButton
 R typeinfo name for vgui::RichText
 R typeinfo name for vgui::RichTextInterior
 R typeinfo name for vgui::ScalableImagePanel
 R typeinfo name for vgui::ScrollBar
 R typeinfo name for vgui::ScrollBarSlider
 R typeinfo name for vgui::Slider
 R typeinfo name for vgui::Splitter
 R typeinfo name for vgui::SplitterChildPanel
 R typeinfo name for vgui::SplitterHandle
 R typeinfo name for vgui::TextEntry
 R typeinfo name for vgui::TextImage
 R typeinfo name for vgui::TextTooltip
 R typeinfo name for vgui::TileViewPanelEx
 R typeinfo name for vgui::ToggleButton
 R typeinfo name for vgui::ToolWindow
 R typeinfo name for vgui::TreeNode
 R typeinfo name for vgui::TreeNodeDropPanel
 R typeinfo name for vgui::TreeNodeImage
 R typeinfo name for vgui::TreeNodeText
 R typeinfo name for vgui::TreeView
 R typeinfo name for vgui::TreeViewSubPanel
 R typeinfo name for vgui::URLLabel
 RandomFloat
 RandomFloatExp
 RandomInt
 RandomSeed
 RegisterAssertionFailureListener
 ReleaseThreadHandle
 RunTSListTests
 RunTSQueueTests
 RunThreadPoolTests
 SCDynamicStoreCopyProxies
 SDL_GetCurrentDisplayMode
 SDL_GetDesktopDisplayMode
 SDL_GetDisplayBounds
 SDL_GetNumVideoDisplays
 SDL_GetWindowID
 SDL_PushEvent
 SDL_RaiseWindow
 SDL_RestoreWindow
 SDL_SetWindowBordered
 SetDefaultMiniDumpHandler
 SteamAPI_GetHSteamPipe
 SteamAPI_GetHSteamUser
 SteamAPI_InitSafe
 SteamAPI_RegisterCallback
 SteamAPI_RestartAppIfNecessary
 SteamAPI_RunCallbacks
 SteamAPI_SetBreakpadAppID
 SteamAPI_SetMiniDumpComment
 SteamAPI_SetTryCatchCallbacks
 SteamAPI_Shutdown
 SteamAPI_UnregisterCallback
 SteamAPI_UseBreakpadCrashHandler
 SteamAPI_WriteMiniDump
 SteamClient
 SteamGameServer_GetHSteamPipe
 SteamGameServer_GetHSteamUser
 SteamGameServer_GetIPCCallCount
 SteamGameServer_InitSafe
 SteamGameServer_RunCallbacks
 SteamGameServer_Shutdown
 T ADSP_GetAutoShape(adsp_auto_params_t*)
 T ADSP_GetSize(adsp_auto_params_t*)
 T ADSP_InterpParam(pset_t*, pset_t*, pset_t*, int, int, int, int, int, bool)
 T ADSP_InterpolatePreset(pset_t*, pset_t*, pset_t*, adsp_auto_params_t*, int)
 T ADSP_SetParamIfNegative(pset_t*, pset_t*, pset_t*, int, int, int, int, int, bool, float)
 T AMP_Alloc(float, float, float, float, float, float, float, bool)
 T AMP_Free(amp_t*)
 T AMP_GetNext(amp_t*, int)
 T AMP_GetNextN(amp_t*, portable_samplepair_t*, int, int)
 T AMP_Mod(amp_t*, float)
 T AMP_VParams(void*)
 T ActivateLightSprites(bool)
 T AddDisplayText(char const*)
 T AddEmptyMesh(model_t*, CDispGroup*, ddispinfo_t const*, int*, int, int, int)
 T AddIntersectingLeafSurfaces(mleaf_t*, GetIntersectingSurfaces_Struct*)
 T AddLanguageGameDir(IFileSystem*, char const*, char const*)
 T AddLeafPortals(leafvis_t*, int, DrawGroup_t)
 T AddPhonemesFromFile(char const*)
 T AddPointToBounds(Vector const&, Vector&, Vector&)
 T AddWorldLightToAmbientCube(dworldlight_t*, Vector const&, Vector (&) [6], bool)
 T AdjustLightCacheOrigin(lightcache_t*, Vector const&, int)
 T AllocDsps
 T AllocWorldRenderList()
 T AlmostEqual(float, float, int)
 T AngleIMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, matrix3x4_t&)
 T AngleNormalize(float)
 T AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T AppSystemCreateInterfaceFn(char const*, int*)
 T Array_Decode(DecodeInfo*)
 T Array_DecodeZero(DecodeInfo*)
 T Array_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T Array_FastCopy(SendProp const*, RecvProp const*, unsigned char const*, unsigned char*, int)
 T Array_GetTypeNameString()
 T Array_IsEncodedZero(SendProp const*, bf_read*)
 T Array_SkipProp(SendProp const*, bf_read*)
 T AsyncUpload_QueueData(char const*, unsigned int, unsigned int, void const*)
 T AudioQueueIsRunningCallback(void*, OpaqueAudioQueue*, unsigned long)
 T AudioSource_GetSoundDuration(CSfxTable*)
 T AudioSource_GetSoundDuration(char const*)
 T Audio_CreateMacAudioQueueDevice()
 T Audio_CreateMemoryMP3(CSfxTable*)
 T Audio_CreateMemoryWave(CSfxTable*)
 T Audio_CreateOpenALDevice()
 T Audio_CreateStreamedMP3(CSfxTable*)
 T Audio_CreateStreamedWave(CSfxTable*)
 T Audio_GetEngineVoiceSteam()
 T Audio_GetNullDevice()
 T Audio_IsMP3(char const*)
 T BChannelLowVolume(channel_t*, int)
 T BZ2_blockSort(EState*)
 T BZ2_bzCompressInit
 T BZ2_bzDecompress
 T BZ2_bzRead
 T BZ2_bzReadClose
 T BZ2_bzReadOpen
 T BZ2_bzWriteClose64
 T BZ2_bzWriteOpen
 T BZ2_bz__AssertH__fail(int)
 T BZ2_bzclose
 T BZ2_bzopen
 T BZ2_bzread
 T BZ2_compressBlock(EState*, unsigned char)
 T BZ2_decompress(DState*)
 T BZ2_hbAssignCodes(int*, unsigned char*, int, int, int)
 T BZ2_hbCreateDecodeTables(int*, int*, int*, unsigned char*, int, int, int)
 T BZ2_hbMakeCodeLengths(unsigned char*, int*, int, int)
 T BaseUI_ProgressEnabled_f()
 T BeginDMXContext()
 T BeginLoadingUpdates(MaterialNonInteractiveMode_t)
 T BeginTrace()
 T Bias(float, float)
 T BlackBox_Record(char const*, char const*, ...)
 T BlankImage::Evict()
 T BlankImage::GetContentSize(int&, int&)
 T BlankImage::GetID()
 T BlankImage::GetNumFrames()
 T BlankImage::GetSize(int&, int&, bool)
 T BlankImage::Paint(IVGuiPaintSurface*)
 T BlankImage::SetColor(Color, IVGuiPaintSurface*)
 T BlankImage::SetFrame(int)
 T BlankImage::SetPos(int, int)
 T BlankImage::SetRotation(int)
 T BlankImage::SetSize(int, int)
 T BlankImage::~BlankImage()
 T BlendColor(Color const&, Color const&, float, bool)
 T BoxOnPlaneSide(float const*, float const*, cplane_t const*)
 T BrushModel_GetLightingAndMaterial(Vector const&, Vector const&, Vector&, Vector&)
 T BuildBrushModelVertexArray(worldbrushdata_t*, msurface2_t*, BrushVertex_t*)
 T BuildGammaTable(float, float, float, int)
 T BuildGeneralMapList(CUtlVector<maplist_map_t, CUtlMemory<maplist_map_t, int> >*, bool, char const*, char*, int*)
 T BuildMSurfacePrimIndices(worldbrushdata_t*, mprimitive_t*, CMeshBuilder&)
 T BuildMSurfacePrimVerts(worldbrushdata_t*, mprimitive_t*, CMeshBuilder&, msurface2_t*)
 T BuildMSurfaceVertexArrays(worldbrushdata_t*, msurface2_t*, CMeshBuilder&)
 T BuildMSurfaceVertexArraysTextureOnly(worldbrushdata_t*, msurface2_t*, CMeshBuilder&)
 T BuildMSurfaceVerts(worldbrushdata_t const*, msurface2_t*, Vector*, Vector2D*, Vector2D (*) [4])
 T BuildMinidumpComment(char const*, bool, MiniDumpHandlerData_t const*)
 T BuildPropOffsetToIndexMap(CSendTablePrecalc*, CStandardSendProxies const*)
 T BuildRecipientList(CUtlVector<CEntityIndex, CUtlMemory<CEntityIndex, int> >&, IRecipientFilter const&)
 T BuildTagData(CCoreDispInfo*, CDispInfo*)
 T ByteCodeToCode(unsigned char)
 T CActiveChannels::CopyActiveSounds(CUtlVector<activethreadsound_t, CUtlMemory<activethreadsound_t, int> >&) const
 T CActiveChannels::GetActiveChannels(CChannelList&) const
 T CActiveChannels::Remove(channel_t*)
 T CAppSystemGroup::AddSystem(int, char const*)
 T CAppSystemGroup::AddSystems(AppSystemInfo_t*)
 T CAppSystemGroup::CAppSystemGroup(CAppSystemGroup*)
 T CAppSystemGroup::ComputeDependencies(CUtlStringMap<CUtlSymbolTable>&)
 T CAppSystemGroup::ConnectSystems()
 T CAppSystemGroup::CreateAppWindow(void*, char const*, bool, int, int, bool)
 T CAppSystemGroup::FindSystem(char const*)
 T CAppSystemGroup::GetFactory()
 T CAppSystemGroup::InitSystems()
 T CAppSystemGroup::LoadDependentSystems()
 T CAppSystemGroup::LoadModule(char const*)
 T CAppSystemGroup::LoadModuleDLL(char const*)
 T CAppSystemGroup::OnShutdown()
 T CAppSystemGroup::OnStartup()
 T CAppSystemGroup::PostInit()
 T CAppSystemGroup::PreShutdown()
 T CAppSystemGroup::Run()
 T CAppSystemGroup::Shutdown()
 T CAppSystemGroup::SortDependentLibraries(CUtlStringMap<CUtlSymbolTable>&)
 T CAppSystemGroup::SortLessFunc(int const&, int const&)
 T CAppSystemGroup::Startup()
 T CAreaPortalsUIPanel::Activate()
 T CAreaPortalsUIPanel::CAreaPortalsUIPanel(vgui::Panel*)
 T CAreaPortalsUIPanel::Deactivate()
 T CAreaPortalsUIPanel::GetAnimMap()
 T CAreaPortalsUIPanel::GetKBMap()
 T CAreaPortalsUIPanel::GetMessageMap()
 T CAreaPortalsUIPanel::GetPanelClassName()
 T CAreaPortalsUIPanel::~CAreaPortalsUIPanel()
 T CAskConnectPanel::ApplySchemeSettings(vgui::IScheme*)
 T CAskConnectPanel::ApplySettings(KeyValues*)
 T CAskConnectPanel::CAskConnectPanel(unsigned int)
 T CAskConnectPanel::GetAnimMap()
 T CAskConnectPanel::GetKBMap()
 T CAskConnectPanel::GetMessageMap()
 T CAskConnectPanel::GetPanelClassName()
 T CAskConnectPanel::OnTick()
 T CAskConnectPanel::SetHostName(char const*)
 T CAskConnectPanel::StartSlideAnimation(float)
 T CAskConnectPanel::~CAskConnectPanel()
 T CAsyncWavDataCache::AsyncLoadCache(char const*, int, int, bool)
 T CAsyncWavDataCache::BufferHandleLessFunc(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&)
 T CAsyncWavDataCache::CacheHandleLessFunc(CAsyncWavDataCache::CacheEntry_t const&, CAsyncWavDataCache::CacheEntry_t const&)
 T CAsyncWavDataCache::Clear()
 T CAsyncWavDataCache::CloseStreamedLoad(int)
 T CAsyncWavDataCache::CopyDataIntoMemory(char const*, int, int, void*, int, int, int, bool*)
 T CAsyncWavDataCache::CopyDataIntoMemory(memhandle_t__*&, char const*, int, int, void*, int, int, int, bool*)
 T CAsyncWavDataCache::CopyStreamedDataIntoMemory(int, void*, int, int, int)
 T CAsyncWavDataCache::FindOrCreateBuffer(asyncwaveparams_t&, bool)
 T CAsyncWavDataCache::Flush(bool)
 T CAsyncWavDataCache::GetDataPointer(memhandle_t__*&, char const*, int, int, void**, int, bool*)
 T CAsyncWavDataCache::GetItemName(unsigned int, void const*, char*, unsigned int)
 T CAsyncWavDataCache::GetStreamedDataPointer(int, bool)
 T CAsyncWavDataCache::Init(unsigned int)
 T CAsyncWavDataCache::IsDataLoadCompleted(memhandle_t__*, bool*, bool*)
 T CAsyncWavDataCache::IsDataLoadInProgress(memhandle_t__*)
 T CAsyncWavDataCache::IsStreamedDataReady(int)
 T CAsyncWavDataCache::MarkBufferDiscarded(int)
 T CAsyncWavDataCache::OnMixBegin()
 T CAsyncWavDataCache::OnMixEnd()
 T CAsyncWavDataCache::OpenStreamedLoad(char const*, int, int, int, int, int, int, unsigned int)
 T CAsyncWavDataCache::PrefetchCache(char const*, int, int)
 T CAsyncWavDataCache::QueueUnlock(memhandle_t__* const&)
 T CAsyncWavDataCache::RestartDataLoad(memhandle_t__**, char const*, int, int)
 T CAsyncWavDataCache::SetPostProcessed(memhandle_t__*, bool)
 T CAsyncWavDataCache::Shutdown()
 T CAsyncWavDataCache::SpewMemoryUsage(CAsyncWavDataCache::MemoryUsageType)
 T CAsyncWavDataCache::Unload(memhandle_t__*)
 T CAsyncWavDataCache::~CAsyncWavDataCache()
 T CAsyncWaveData::AsyncCallback(FileAsyncRequest_t const&, int, FSAsyncStatus_t)
 T CAsyncWaveData::BlockingCopyData(void*, int, int, int)
 T CAsyncWaveData::BlockingGetDataPointer(void**)
 T CAsyncWaveData::SetAsyncPriority(int)
 T CAsyncWaveData::StartAsyncLoading(asyncwaveparams_t const&)
 T CAudioDeviceAudioQueue::ClearBuffer()
 T CAudioDeviceAudioQueue::CloseWaveOut()
 T CAudioDeviceAudioQueue::DeviceSampleCount()
 T CAudioDeviceAudioQueue::GetOutputPosition()
 T CAudioDeviceAudioQueue::Init()
 T CAudioDeviceAudioQueue::IsActive()
 T CAudioDeviceAudioQueue::OpenWaveOut()
 T CAudioDeviceAudioQueue::PaintBegin(float, int, int)
 T CAudioDeviceAudioQueue::PaintEnd()
 T CAudioDeviceAudioQueue::Pause()
 T CAudioDeviceAudioQueue::Shutdown()
 T CAudioDeviceAudioQueue::TransferSamples(int)
 T CAudioDeviceAudioQueue::UnPause()
 T CAudioDeviceAudioQueue::~CAudioDeviceAudioQueue()
 T CAudioDeviceNull::ClearBuffer()
 T CAudioDeviceNull::DeviceSampleCount()
 T CAudioDeviceNull::GetOutputPosition()
 T CAudioDeviceNull::Init()
 T CAudioDeviceNull::IsActive()
 T CAudioDeviceNull::PaintBegin(float, int, int)
 T CAudioDeviceNull::Pause()
 T CAudioDeviceNull::Shutdown()
 T CAudioDeviceNull::TransferSamples(int)
 T CAudioDeviceNull::UnPause()
 T CAudioDeviceNull::~CAudioDeviceNull()
 T CAudioDeviceOpenAL::ClearBuffer()
 T CAudioDeviceOpenAL::CloseWaveOut()
 T CAudioDeviceOpenAL::DeviceSampleCount()
 T CAudioDeviceOpenAL::GetOutputPosition()
 T CAudioDeviceOpenAL::Init()
 T CAudioDeviceOpenAL::IsActive()
 T CAudioDeviceOpenAL::OpenWaveOut()
 T CAudioDeviceOpenAL::PaintBegin(float, int, int)
 T CAudioDeviceOpenAL::PaintEnd()
 T CAudioDeviceOpenAL::Pause()
 T CAudioDeviceOpenAL::Shutdown()
 T CAudioDeviceOpenAL::TransferSamples(int)
 T CAudioDeviceOpenAL::UnPause()
 T CAudioDeviceOpenAL::~CAudioDeviceOpenAL()
 T CAudioMixerWave16Mono::GetMixSampleSize()
 T CAudioMixerWave16Mono::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWave16Mono::~CAudioMixerWave16Mono()
 T CAudioMixerWave16Stereo::GetMixSampleSize()
 T CAudioMixerWave16Stereo::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWave16Stereo::~CAudioMixerWave16Stereo()
 T CAudioMixerWave8Mono::GetMixSampleSize()
 T CAudioMixerWave8Mono::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWave8Mono::~CAudioMixerWave8Mono()
 T CAudioMixerWave8Stereo::GetMixSampleSize()
 T CAudioMixerWave8Stereo::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWave8Stereo::~CAudioMixerWave8Stereo()
 T CAudioMixerWave::CAudioMixerWave(IWaveData*)
 T CAudioMixerWave::GetOutputData(void**, int, char*)
 T CAudioMixerWave::GetPositionForSave()
 T CAudioMixerWave::GetSamplePosition()
 T CAudioMixerWave::GetSource()
 T CAudioMixerWave::GetVolumeScale()
 T CAudioMixerWave::IsReadyToMix()
 T CAudioMixerWave::LoadMixBuffer(channel_t*, int, int*, char*)
 T CAudioMixerWave::MixDataToDevice(channel_t*, int, int, int)
 T CAudioMixerWave::MixDataToDevice_(channel_t*, int, int, int, bool)
 T CAudioMixerWave::ModifyPitch(float)
 T CAudioMixerWave::SetPositionFromSaved(int)
 T CAudioMixerWave::SetSampleEnd(int)
 T CAudioMixerWave::SetSampleStart(int)
 T CAudioMixerWave::SetStartupDelaySamples(int)
 T CAudioMixerWave::ShouldContinueMixing()
 T CAudioMixerWave::SkipSamples(channel_t*, int, int, int)
 T CAudioMixerWave::~CAudioMixerWave()
 T CAudioMixerWaveADPCM::CAudioMixerWaveADPCM(IWaveData*)
 T CAudioMixerWaveADPCM::DecodeBlock()
 T CAudioMixerWaveADPCM::DecompressBlockStereo(short*, char const*, int)
 T CAudioMixerWaveADPCM::GetMixSampleSize()
 T CAudioMixerWaveADPCM::GetOutputData(void**, int, char*)
 T CAudioMixerWaveADPCM::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWaveADPCM::SetSampleStart(int)
 T CAudioMixerWaveADPCM::~CAudioMixerWaveADPCM()
 T CAudioMixerWaveMP3::CAudioMixerWaveMP3(IWaveData*, MP3FrameHeader*)
 T CAudioMixerWaveMP3::GetMixSampleSize()
 T CAudioMixerWaveMP3::GetOutputData(void**, int, char*)
 T CAudioMixerWaveMP3::GetPositionForSave()
 T CAudioMixerWaveMP3::GetStreamOutputRate()
 T CAudioMixerWaveMP3::Mix(channel_t*, void*, int, int, unsigned int, int, int)
 T CAudioMixerWaveMP3::SetPositionFromSaved(int)
 T CAudioMixerWaveMP3::SetSampleStart(int)
 T CAudioMixerWaveMP3::SetStartupDelaySamples(int)
 T CAudioMixerWaveMP3::StreamRequestData(void*, int, int)
 T CAudioMixerWaveMP3::~CAudioMixerWaveMP3()
 T CAudioSourceCache::BuildCacheFromList(char const*, CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&, bool, float, float)
 T CAudioSourceCache::BuildSoundCacheForDirectory(char const*)
 T CAudioSourceCache::BuildSoundCacheForOneSoundDirectory(char const*, float, float)
 T CAudioSourceCache::BuildSoundCachesForCurrentAndLocalizedSearchPaths()
 T CAudioSourceCache::BuildSoundCachesForCurrentSearchPaths()
 T CAudioSourceCache::GetAudioCacheLanguageSuffix(CUtlString&)
 T CAudioSourceCache::GetInfo(int, bool, CSfxTable*)
 T CAudioSourceCache::GetInfoByName(char const*)
 T CAudioSourceCache::Init(unsigned int)
 T CAudioSourceCache::LevelInit(char const*)
 T CAudioSourceCache::LevelShutdown()
 T CAudioSourceCache::LoadSoundCaches()
 T CAudioSourceCache::LookUpCacheEntry(char const*, int, bool, CSfxTable*)
 T CAudioSourceCache::PrefetchCommandSounds()
 T CAudioSourceCache::RebuildCacheEntry(int, bool, CSfxTable*)
 T CAudioSourceCache::RecursiveBuildSoundList(CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&, char const*)
 T CAudioSourceCache::ReloadSoundCaches()
 T CAudioSourceCache::Shutdown()
 T CAudioSourceCache::ShutdownSoundCaches()
 T CAudioSourceCache::UpdateCurrentSoundCaches()
 T CAudioSourceCache::ValidateSoundCache(char const*)
 T CAudioSourceCache::WriteManifest()
 T CAudioSourceCache::~CAudioSourceCache()
 T CAudioSourceCachedInfo::Rebuild(char const*)
 T CAudioSourceCachedInfo::Restore(CUtlBuffer&)
 T CAudioSourceCachedInfo::Save(CUtlBuffer&)
 T CAudioSourceCachedInfo::~CAudioSourceCachedInfo()
 T CAudioSourceCachedInfoHandle_t::FastGet()
 T CAudioSourceCachedInfoHandle_t::Get(int, bool, CSfxTable*, int*)
 T CAudioSourceMP3::CAudioSourceMP3(CSfxTable*)
 T CAudioSourceMP3::CAudioSourceMP3(CSfxTable*, CAudioSourceCachedInfo*)
 T CAudioSourceMP3::CacheLoad()
 T CAudioSourceMP3::CacheUnload()
 T CAudioSourceMP3::CanDelete()
 T CAudioSourceMP3::CheckAudioSourceCache()
 T CAudioSourceMP3::DataSize()
 T CAudioSourceMP3::Format()
 T CAudioSourceMP3::GetCacheData(CAudioSourceCachedInfo*)
 T CAudioSourceMP3::GetCacheStatus()
 T CAudioSourceMP3::GetCachedDataPointer()
 T CAudioSourceMP3::GetFileName(char*, unsigned long)
 T CAudioSourceMP3::GetQuality()
 T CAudioSourceMP3::GetSentence()
 T CAudioSourceMP3::GetType()
 T CAudioSourceMP3::IsAsyncLoad()
 T CAudioSourceMP3::IsLooped()
 T CAudioSourceMP3::IsPlayOnce()
 T CAudioSourceMP3::IsPlayerVoice()
 T CAudioSourceMP3::IsSentenceWord()
 T CAudioSourceMP3::IsStereoWav()
 T CAudioSourceMP3::IsStreaming()
 T CAudioSourceMP3::IsVoiceSource()
 T CAudioSourceMP3::ReferenceAdd(CAudioMixer*)
 T CAudioSourceMP3::ReferenceRemove(CAudioMixer*)
 T CAudioSourceMP3::SampleCount()
 T CAudioSourceMP3::SampleRate()
 T CAudioSourceMP3::SampleSize()
 T CAudioSourceMP3::SampleToStreamPosition(int)
 T CAudioSourceMP3::SetPlayOnce(bool)
 T CAudioSourceMP3::SetSentence(CSentence*)
 T CAudioSourceMP3::SetSentenceWord(bool)
 T CAudioSourceMP3::StreamToSamplePosition(int)
 T CAudioSourceMP3::ZeroCrossingAfter(int)
 T CAudioSourceMP3::ZeroCrossingBefore(int)
 T CAudioSourceMP3::~CAudioSourceMP3()
 T CAudioSourceMP3Cache::CAudioSourceMP3Cache(CSfxTable*)
 T CAudioSourceMP3Cache::CacheLoad()
 T CAudioSourceMP3Cache::CacheUnload()
 T CAudioSourceMP3Cache::CreateMixer(int)
 T CAudioSourceMP3Cache::GetCacheStatus()
 T CAudioSourceMP3Cache::GetDataPointer()
 T CAudioSourceMP3Cache::GetOutputData(void**, int, int, char*)
 T CAudioSourceMP3Cache::Prefetch()
 T CAudioSourceMP3Cache::~CAudioSourceMP3Cache()
 T CAudioSourceMemWave::CacheLoad()
 T CAudioSourceMemWave::CacheUnload()
 T CAudioSourceMemWave::CreateMixer(int)
 T CAudioSourceMemWave::GetCacheStatus()
 T CAudioSourceMemWave::GetDataPointer()
 T CAudioSourceMemWave::GetOutputData(void**, int, int, char*)
 T CAudioSourceMemWave::ParseChunk(IterateRIFF&, int)
 T CAudioSourceMemWave::ParseDataChunk(IterateRIFF&)
 T CAudioSourceMemWave::Prefetch()
 T CAudioSourceMemWave::ZeroCrossingAfter(int)
 T CAudioSourceMemWave::ZeroCrossingBefore(int)
 T CAudioSourceMemWave::~CAudioSourceMemWave()
 T CAudioSourceStreamMP3::CreateMixer(int)
 T CAudioSourceStreamMP3::GetLoopingInfo(int*, int*, int*)
 T CAudioSourceStreamMP3::GetOutputData(void**, int, int, char*)
 T CAudioSourceStreamMP3::GetSentence()
 T CAudioSourceStreamMP3::IsStereoWav()
 T CAudioSourceStreamMP3::IsStreaming()
 T CAudioSourceStreamMP3::Prefetch()
 T CAudioSourceStreamMP3::UpdateLoopingSamplePosition(int)
 T CAudioSourceStreamMP3::UpdateSamples(char*, int)
 T CAudioSourceStreamMP3::~CAudioSourceStreamMP3()
 T CAudioSourceStreamWave::CreateMixer(int)
 T CAudioSourceStreamWave::GetCacheStatus()
 T CAudioSourceStreamWave::GetLoopingInfo(int*, int*, int*)
 T CAudioSourceStreamWave::GetOutputData(void**, int, int, char*)
 T CAudioSourceStreamWave::IsStreaming()
 T CAudioSourceStreamWave::ParseChunk(IterateRIFF&, int)
 T CAudioSourceStreamWave::Prefetch()
 T CAudioSourceStreamWave::SampleToStreamPosition(int)
 T CAudioSourceStreamWave::StreamToSamplePosition(int)
 T CAudioSourceStreamWave::UpdateLoopingSamplePosition(int)
 T CAudioSourceStreamWave::UpdateSamples(char*, int)
 T CAudioSourceStreamWave::~CAudioSourceStreamWave()
 T CAudioSourceVoice::CWaveDataVoice::IsReadyToMix()
 T CAudioSourceVoice::CWaveDataVoice::ReadSourceData(void**, int, int, char*)
 T CAudioSourceVoice::CWaveDataVoice::Source()
 T CAudioSourceVoice::CWaveDataVoice::~CWaveDataVoice()
 T CAudioSourceVoice::CacheLoad()
 T CAudioSourceVoice::CacheUnload()
 T CAudioSourceVoice::CanDelete()
 T CAudioSourceVoice::CheckAudioSourceCache()
 T CAudioSourceVoice::CreateMixer(int)
 T CAudioSourceVoice::GetCacheData(CAudioSourceCachedInfo*)
 T CAudioSourceVoice::GetCacheStatus()
 T CAudioSourceVoice::GetOutputData(void**, int, int, char*)
 T CAudioSourceVoice::GetQuality()
 T CAudioSourceVoice::GetSentence()
 T CAudioSourceVoice::GetType()
 T CAudioSourceVoice::IsLooped()
 T CAudioSourceVoice::IsPlayerVoice()
 T CAudioSourceVoice::IsStereoWav()
 T CAudioSourceVoice::IsStreaming()
 T CAudioSourceVoice::IsVoiceSource()
 T CAudioSourceVoice::Prefetch()
 T CAudioSourceVoice::ReferenceAdd(CAudioMixer*)
 T CAudioSourceVoice::ReferenceRemove(CAudioMixer*)
 T CAudioSourceVoice::SampleCount()
 T CAudioSourceVoice::SampleRate()
 T CAudioSourceVoice::SampleSize()
 T CAudioSourceVoice::ZeroCrossingAfter(int)
 T CAudioSourceVoice::ZeroCrossingBefore(int)
 T CAudioSourceVoice::~CAudioSourceVoice()
 T CAudioSourceWave::CAudioSourceWave(CSfxTable*)
 T CAudioSourceWave::CAudioSourceWave(CSfxTable*, CAudioSourceCachedInfo*)
 T CAudioSourceWave::CacheLoad()
 T CAudioSourceWave::CacheUnload()
 T CAudioSourceWave::CanDelete()
 T CAudioSourceWave::CheckAudioSourceCache()
 T CAudioSourceWave::ConvertLoopedPosition(int)
 T CAudioSourceWave::DataSize()
 T CAudioSourceWave::Format()
 T CAudioSourceWave::GetCacheData(CAudioSourceCachedInfo*)
 T CAudioSourceWave::GetCacheStatus()
 T CAudioSourceWave::GetCachedDataPointer()
 T CAudioSourceWave::GetFileName(char*, unsigned long)
 T CAudioSourceWave::GetHeader()
 T CAudioSourceWave::GetQuality()
 T CAudioSourceWave::GetSentence()
 T CAudioSourceWave::GetStartupData()
 T CAudioSourceWave::GetType()
 T CAudioSourceWave::Init(char const*, int)
 T CAudioSourceWave::IsAsyncLoad()
 T CAudioSourceWave::IsLooped()
 T CAudioSourceWave::IsPlayOnce()
 T CAudioSourceWave::IsPlayerVoice()
 T CAudioSourceWave::IsSentenceWord()
 T CAudioSourceWave::IsStereoWav()
 T CAudioSourceWave::IsStreaming()
 T CAudioSourceWave::IsVoiceSource()
 T CAudioSourceWave::ParseChunk(IterateRIFF&, int)
 T CAudioSourceWave::ParseSentence(IterateRIFF&)
 T CAudioSourceWave::ReferenceAdd(CAudioMixer*)
 T CAudioSourceWave::ReferenceRemove(CAudioMixer*)
 T CAudioSourceWave::SampleCount()
 T CAudioSourceWave::SampleRate()
 T CAudioSourceWave::SampleSize()
 T CAudioSourceWave::SampleToStreamPosition(int)
 T CAudioSourceWave::SetPlayOnce(bool)
 T CAudioSourceWave::SetSentence(CSentence*)
 T CAudioSourceWave::SetSentenceWord(bool)
 T CAudioSourceWave::Setup(char const*, int, IterateRIFF&)
 T CAudioSourceWave::StreamToSamplePosition(int)
 T CAudioSourceWave::ZeroCrossingAfter(int)
 T CAudioSourceWave::ZeroCrossingBefore(int)
 T CAudioSourceWave::~CAudioSourceWave()
 T CAudioState::GetPerUser(int) const
 T CAudioState::IsAnyPlayerUnderwater() const
 T CAutoGain::CAutoGain()
 T CAutoGain::Reset(int, float, float, float)
 T CAutoMatSysDebugMode::CAutoMatSysDebugMode()
 T CAutoMatSysDebugMode::~CAutoMatSysDebugMode()
 T CBaseActionCDTrackStartDialog::CBaseActionCDTrackStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionCDTrackStartDialog::Init()
 T CBaseActionCDTrackStartDialog::OnSaveChanges()
 T CBaseActionCDTrackStartDialog::~CBaseActionCDTrackStartDialog()
 T CBaseActionChangePlaybackRateDialog::CBaseActionChangePlaybackRateDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionChangePlaybackRateDialog::Init()
 T CBaseActionChangePlaybackRateDialog::OnSaveChanges()
 T CBaseActionChangePlaybackRateDialog::~CBaseActionChangePlaybackRateDialog()
 T CBaseActionEditDialog::CBaseActionEditDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionEditDialog::GetAnimMap()
 T CBaseActionEditDialog::GetKBMap()
 T CBaseActionEditDialog::GetMessageMap()
 T CBaseActionEditDialog::GetPanelClassName()
 T CBaseActionEditDialog::Init()
 T CBaseActionEditDialog::OnCancel()
 T CBaseActionEditDialog::OnClose()
 T CBaseActionEditDialog::OnCommand(char const*)
 T CBaseActionEditDialog::OnSaveChanges()
 T CBaseActionEditDialog::~CBaseActionEditDialog()
 T CBaseActionPauseDialog::CBaseActionPauseDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionPauseDialog::Init()
 T CBaseActionPauseDialog::OnSaveChanges()
 T CBaseActionPauseDialog::~CBaseActionPauseDialog()
 T CBaseActionPlayCommandsDialog::CBaseActionPlayCommandsDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionPlayCommandsDialog::Init()
 T CBaseActionPlayCommandsDialog::OnSaveChanges()
 T CBaseActionPlayCommandsDialog::~CBaseActionPlayCommandsDialog()
 T CBaseActionPlaySoundStartDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CBaseActionPlaySoundStartDialog::CBaseActionPlaySoundStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionPlaySoundStartDialog::GetAnimMap()
 T CBaseActionPlaySoundStartDialog::GetKBMap()
 T CBaseActionPlaySoundStartDialog::GetMessageMap()
 T CBaseActionPlaySoundStartDialog::GetPanelClassName()
 T CBaseActionPlaySoundStartDialog::Init()
 T CBaseActionPlaySoundStartDialog::OnCommand(char const*)
 T CBaseActionPlaySoundStartDialog::OnFileSelected(char const*)
 T CBaseActionPlaySoundStartDialog::OnSaveChanges()
 T CBaseActionPlaySoundStartDialog::~CBaseActionPlaySoundStartDialog()
 T CBaseActionScreenFadeStartDialog::CBaseActionScreenFadeStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionScreenFadeStartDialog::Init()
 T CBaseActionScreenFadeStartDialog::OnSaveChanges()
 T CBaseActionScreenFadeStartDialog::~CBaseActionScreenFadeStartDialog()
 T CBaseActionSkipAheadDialog::CBaseActionSkipAheadDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionSkipAheadDialog::Init()
 T CBaseActionSkipAheadDialog::OnSaveChanges()
 T CBaseActionSkipAheadDialog::~CBaseActionSkipAheadDialog()
 T CBaseActionStopPlaybackDialog::Init()
 T CBaseActionStopPlaybackDialog::~CBaseActionStopPlaybackDialog()
 T CBaseActionTextMessageStartDialog::CBaseActionTextMessageStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionTextMessageStartDialog::FillInFonts()
 T CBaseActionTextMessageStartDialog::Init()
 T CBaseActionTextMessageStartDialog::OnSaveChanges()
 T CBaseActionTextMessageStartDialog::SaveDifferingColor(vgui::TextEntry*, unsigned char*, unsigned char*, unsigned char*, unsigned char*)
 T CBaseActionTextMessageStartDialog::~CBaseActionTextMessageStartDialog()
 T CBaseActionWithStopTimeDialog::CBaseActionWithStopTimeDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionWithStopTimeDialog::Init()
 T CBaseActionWithStopTimeDialog::OnSaveChanges()
 T CBaseActionWithStopTimeDialog::~CBaseActionWithStopTimeDialog()
 T CBaseActionZoomDialog::CBaseActionZoomDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 T CBaseActionZoomDialog::Init()
 T CBaseActionZoomDialog::OnSaveChanges()
 T CBaseActionZoomDialog::~CBaseActionZoomDialog()
 T CBaseAppSystem<ICvarQuery>::Disconnect()
 T CBaseAppSystem<ICvarQuery>::GetDependencies()
 T CBaseAppSystem<ICvarQuery>::GetTier()
 T CBaseAppSystem<ICvarQuery>::IsSingleton()
 T CBaseAppSystem<ICvarQuery>::Reconnect(void* (*)(char const*, int*), char const*)
 T CBaseAppSystem<IDedicatedServerAPI>::GetDependencies()
 T CBaseAppSystem<IDedicatedServerAPI>::IsSingleton()
 T CBaseAppSystem<IEngineAPI>::GetDependencies()
 T CBaseAppSystem<IEngineAPI>::IsSingleton()
 T CBaseAppSystem<INetSupport>::GetDependencies()
 T CBaseAppSystem<INetSupport>::IsSingleton()
 T CBaseAppSystem<IToolFrameworkInternal>::GetDependencies()
 T CBaseAppSystem<IToolFrameworkInternal>::GetTier()
 T CBaseAppSystem<IToolFrameworkInternal>::IsSingleton()
 T CBaseAppSystem<IToolFrameworkInternal>::Reconnect(void* (*)(char const*, int*), char const*)
 T CBaseAutoCompleteFileList::AutoCompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CBaseBudgetPanel::ApplySchemeSettings(vgui::IScheme*)
 T CBaseBudgetPanel::CBaseBudgetPanel(vgui::Panel*, char const*)
 T CBaseBudgetPanel::ClearTimesForAllGroupsForThisFrame()
 T CBaseBudgetPanel::GetBudgetGroupData(int&, int&, int&) const
 T CBaseBudgetPanel::GetBudgetGroupPercent(float)
 T CBaseBudgetPanel::GetGraphLabelScreenSpaceTopAndBottom(int, int&, int&)
 T CBaseBudgetPanel::OnConfigDataChanged(CBudgetPanelConfigData const&)
 T CBaseBudgetPanel::Paint(IVGuiPaintSurface*)
 T CBaseBudgetPanel::PaintBackground(IVGuiPaintSurface*)
 T CBaseBudgetPanel::PerformLayout()
 T CBaseBudgetPanel::Rebuild(CBudgetPanelConfigData const&)
 T CBaseBudgetPanel::ResetAll()
 T CBaseBudgetPanel::SetHistoryLabelText()
 T CBaseBudgetPanel::SetTimeLabelText()
 T CBaseBudgetPanel::~CBaseBudgetPanel()
 T CBaseClient::ActivatePlayer()
 T CBaseClient::CBaseClient()
 T CBaseClient::CLCMsg_BaselineAck(CCLCMsg_BaselineAck const&)
 T CBaseClient::CLCMsg_ClientInfo(CCLCMsg_ClientInfo const&)
 T CBaseClient::CLCMsg_ClientMessage(CCLCMsg_ClientMessage const&)
 T CBaseClient::CLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck const&)
 T CBaseClient::CLCMsg_ListenEvents(CCLCMsg_ListenEvents const&)
 T CBaseClient::CLCMsg_LoadingProgress(CCLCMsg_LoadingProgress const&)
 T CBaseClient::CLCMsg_Move(CCLCMsg_Move const&)
 T CBaseClient::CLCMsg_RespondCvarValue(CCLCMsg_RespondCvarValue const&)
 T CBaseClient::CLCMsg_SplitPlayerConnect(CCLCMsg_SplitPlayerConnect const&)
 T CBaseClient::CLCMsg_VoiceData(CCLCMsg_VoiceData const&)
 T CBaseClient::ChangeSplitscreenUser(int)
 T CBaseClient::CheckConnect()
 T CBaseClient::Clear()
 T CBaseClient::ClientPrintf(char const*, ...)
 T CBaseClient::Connect(char const*, int, INetChannel*, bool, int, CMsg_CVars const*)
 T CBaseClient::ConnectionStart(INetChannel*)
 T CBaseClient::DemoRestart()
 T CBaseClient::Disconnect(int)
 T CBaseClient::DisconnectSplitScreenUser(CBaseClient*)
 T CBaseClient::EndTrace(bf_write&)
 T CBaseClient::ExecuteStringCommand(char const*)
 T CBaseClient::FillSignOnFullServerInfo(CNETMsg_SignonState_t&)
 T CBaseClient::FillUserInfo(player_info_s&)
 T CBaseClient::FireGameEvent(IGameEvent*)
 T CBaseClient::FreeBaselines()
 T CBaseClient::GetClientName() const
 T CBaseClient::GetClientXuid() const
 T CBaseClient::GetDeltaFrame(int)
 T CBaseClient::GetForcedSnapshot() const
 T CBaseClient::GetMaxAckTickCount() const
 T CBaseClient::GetNetChannel()
 T CBaseClient::GetNetworkID() const
 T CBaseClient::GetNetworkIDString() const
 T CBaseClient::GetNumPlayers()
 T CBaseClient::GetPlayerSlot() const
 T CBaseClient::GetRate() const
 T CBaseClient::GetServer()
 T CBaseClient::GetSplitScreenOwner()
 T CBaseClient::GetUpdateRate() const
 T CBaseClient::GetUserID() const
 T CBaseClient::GetUserSetting(char const*) const
 T CBaseClient::IgnoreTempEntity(CEventInfo*)
 T CBaseClient::Inactivate()
 T CBaseClient::IsActive() const
 T CBaseClient::IsConnected() const
 T CBaseClient::IsFakeClient() const
 T CBaseClient::IsHLTV() const
 T CBaseClient::IsHearingClient(int) const
 T CBaseClient::IsHumanPlayer() const
 T CBaseClient::IsLowViolenceClient() const
 T CBaseClient::IsProximityHearingClient(int) const
 T CBaseClient::IsSpawned() const
 T CBaseClient::IsSplitScreenPartner(CBaseClient const*) const
 T CBaseClient::IsSplitScreenUser() const
 T CBaseClient::IsTracing() const
 T CBaseClient::NETMsg_SetConVar(CNETMsg_SetConVar const&)
 T CBaseClient::NETMsg_SignonState(CNETMsg_SignonState const&)
 T CBaseClient::NETMsg_StringCmd(CNETMsg_StringCmd const&)
 T CBaseClient::NETMsg_Tick(CNETMsg_Tick const&)
 T CBaseClient::OnRequestFullUpdate(char const*)
 T CBaseClient::PerformDisconnection(int)
 T CBaseClient::ProcessSignonStateMsg(int, int)
 T CBaseClient::Reconnect()
 T CBaseClient::SendNetMsg(INetMessage&, bool, bool)
 T CBaseClient::SendServerInfo()
 T CBaseClient::SendSignonData()
 T CBaseClient::SendSnapshot(CClientFrame*)
 T CBaseClient::SetForcedSnapshot(bool)
 T CBaseClient::SetMaxRoutablePayloadSize(int)
 T CBaseClient::SetName(char const*)
 T CBaseClient::SetRate(int, bool)
 T CBaseClient::SetSignonState(int)
 T CBaseClient::SetSteamID(CSteamID const&)
 T CBaseClient::SetTraceThreshold(int)
 T CBaseClient::SetUpdateRate(int, bool)
 T CBaseClient::SetUserCVar(char const*, char const*)
 T CBaseClient::ShouldReceiveStringTableUserData(INetworkStringTable const*, int)
 T CBaseClient::ShouldSendMessages()
 T CBaseClient::SpawnPlayer()
 T CBaseClient::SplitScreenDisconnect(CCommand const&)
 T CBaseClient::TraceNetworkData(bf_write&, char const*, ...)
 T CBaseClient::TraceNetworkMsg(int, char const*, ...)
 T CBaseClient::UpdateAcknowledgedFramecount(int)
 T CBaseClient::UpdateSendState()
 T CBaseClient::UpdateUserSettings()
 T CBaseClient::WriteGameSounds(bf_write&, int)
 T CBaseClient::~CBaseClient()
 T CBaseClientState::CBaseClientState()
 T CBaseClientState::ChangeSplitscreenUser(int)
 T CBaseClientState::CheckForResend(bool)
 T CBaseClientState::Clear()
 T CBaseClientState::Connect(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&)
 T CBaseClientState::ConnectInternal(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&, int)
 T CBaseClientState::ConnectSplitScreen(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&, int)
 T CBaseClientState::ConnectionClosing(int)
 T CBaseClientState::ConnectionCrashed(int)
 T CBaseClientState::ConnectionStart(INetChannel*)
 T CBaseClientState::CopyEntityBaseline(int, int)
 T CBaseClientState::Disconnect(bool)
 T CBaseClientState::FileDenied(char const*, unsigned int, bool)
 T CBaseClientState::FileReceived(char const*, unsigned int, bool)
 T CBaseClientState::FileRequested(char const*, unsigned int, bool)
 T CBaseClientState::FileSent(char const*, unsigned int, bool)
 T CBaseClientState::FindClientClass(char const*)
 T CBaseClientState::ForceFullUpdate(char const*)
 T CBaseClientState::FullConnect(ns_address const&)
 T CBaseClientState::GetCDKeyHash()
 T CBaseClientState::GetClassBaseline(int, int*)
 T CBaseClientState::GetClientClass(int)
 T CBaseClientState::GetClientName()
 T CBaseClientState::GetConnectionRetryNumber() const
 T CBaseClientState::GetEntityBaseline(int, int)
 T CBaseClientState::GetStringTable(char const*) const
 T CBaseClientState::GetViewEntity()
 T CBaseClientState::HookClientStringTable(char const*)
 T CBaseClientState::InstallStringTableCallback(char const*)
 T CBaseClientState::InternalProcessStringCmd(CNETMsg_StringCmd const&, bool)
 T CBaseClientState::LinkClasses()
 T CBaseClientState::NETMsg_SetConVar(CNETMsg_SetConVar const&)
 T CBaseClientState::NETMsg_SignonState(CNETMsg_SignonState const&)
 T CBaseClientState::NETMsg_StringCmd(CNETMsg_StringCmd const&)
 T CBaseClientState::NETMsg_Tick(CNETMsg_Tick const&)
 T CBaseClientState::PacketEnd()
 T CBaseClientState::PacketStart(int, int)
 T CBaseClientState::PrepareSteamConnectResponse(unsigned long long, bool, ns_address const&, bf_write&)
 T CBaseClientState::ProcessConnectionlessPacket(netpacket_t*)
 T CBaseClientState::RunFrame()
 T CBaseClientState::SVCMsg_ClassInfo(CSVCMsg_ClassInfo const&)
 T CBaseClientState::SVCMsg_CreateStringTable(CSVCMsg_CreateStringTable const&)
 T CBaseClientState::SVCMsg_FullFrameSplit(CSVCMsg_FullFrameSplit const&)
 T CBaseClientState::SVCMsg_GameEventList(CSVCMsg_GameEventList const&)
 T CBaseClientState::SVCMsg_GetCvarValue(CSVCMsg_GetCvarValue const&)
 T CBaseClientState::SVCMsg_Menu(CSVCMsg_Menu const&)
 T CBaseClientState::SVCMsg_PacketEntities(CSVCMsg_PacketEntities const&)
 T CBaseClientState::SVCMsg_Print(CSVCMsg_Print const&)
 T CBaseClientState::SVCMsg_SendTable(CSVCMsg_SendTable const&)
 T CBaseClientState::SVCMsg_ServerInfo(CSVCMsg_ServerInfo const&)
 T CBaseClientState::SVCMsg_SetPause(CSVCMsg_SetPause const&)
 T CBaseClientState::SVCMsg_SetView(CSVCMsg_SetView const&)
 T CBaseClientState::SVCMsg_SplitScreen(CSVCMsg_SplitScreen const&)
 T CBaseClientState::SVCMsg_UpdateStringTable(CSVCMsg_UpdateStringTable const&)
 T CBaseClientState::SendConnectPacket(ns_address const&, int, int, unsigned long long, bool)
 T CBaseClientState::SendStringCmd(char const*)
 T CBaseClientState::SetEntityBaseline(int, ClientClass*, int, int)
 T CBaseClientState::SetSignonState(int, int, CNETMsg_SignonState const*)
 T CBaseClientState::UpdateInstanceBaseline(int)
 T CBaseClientState::~CBaseClientState()
 T CBaseDemoAction::AddEditorFactory(DEMOACTION, CBaseActionEditDialog* (*)(CDemoEditorPanel*, CBaseDemoAction*, bool))
 T CBaseDemoAction::AddFactory(DEMOACTION, CBaseDemoAction* (*)())
 T CBaseDemoAction::BufPrintf(int, CUtlBuffer&, char const*, ...)
 T CBaseDemoAction::CBaseDemoAction()
 T CBaseDemoAction::CreateDemoAction(DEMOACTION)
 T CBaseDemoAction::GetActionFired() const
 T CBaseDemoAction::GetActionName() const
 T CBaseDemoAction::GetStartTick() const
 T CBaseDemoAction::GetStartTime() const
 T CBaseDemoAction::GetTimingType() const
 T CBaseDemoAction::GetType() const
 T CBaseDemoAction::Init(KeyValues*)
 T CBaseDemoAction::NameForTimingType(DEMOACTIONTIMINGTYPE)
 T CBaseDemoAction::NameForType(DEMOACTION)
 T CBaseDemoAction::OnActionFinished()
 T CBaseDemoAction::Reset()
 T CBaseDemoAction::SaveKeysToBuffer(int, CUtlBuffer&)
 T CBaseDemoAction::SaveToBuffer(int, int, CUtlBuffer&)
 T CBaseDemoAction::SetActionFired(bool)
 T CBaseDemoAction::SetActionName(char const*)
 T CBaseDemoAction::SetFinishedAction(bool)
 T CBaseDemoAction::SetStartTick(int)
 T CBaseDemoAction::SetStartTime(float)
 T CBaseDemoAction::SetTimingType(DEMOACTIONTIMINGTYPE)
 T CBaseDemoAction::SetType(DEMOACTION)
 T CBaseDemoAction::TimingTypeForName(char const*)
 T CBaseDemoAction::TypeForName(char const*)
 T CBaseDemoAction::Update(DemoActionTimingContext const&)
 T CBaseDemoAction::operator delete(void*)
 T CBaseDemoAction::operator new(unsigned long)
 T CBaseDemoAction::~CBaseDemoAction()
 T CBaseDemoActionWithStopTime::SetStopTick(int)
 T CBaseDemoActionWithStopTime::SetStopTime(float)
 T CBaseDemoActionWithStopTime::Update(DemoActionTimingContext const&)
 T CBaseEdict::GetChangeAccessor()
 T CBaseEdict::GetChangeAccessor() const
 T CBasePanel::CBasePanel(vgui::Panel*, char const*)
 T CBasePanel::OnTick()
 T CBasePanel::~CBasePanel()
 T CBaseServer::ActivateFakeClient(CBaseClient*)
 T CBaseServer::AddTag(char const*, char const*)
 T CBaseServer::AddTagString(CUtlString&, char const*)
 T CBaseServer::BroadcastMessage(INetMessage&, IRecipientFilter&)
 T CBaseServer::BroadcastMessage(INetMessage&, bool, bool)
 T CBaseServer::BroadcastPrintf(char const*, ...)
 T CBaseServer::CBaseServer()
 T CBaseServer::CalculateCPUUsage()
 T CBaseServer::CheckChallengeNr(ns_address const&, int)
 T CBaseServer::CheckChallengeType(CBaseClient*, int, ns_address const&, int, char const*, int, int)
 T CBaseServer::CheckIPRestrictions(ns_address const&, int)
 T CBaseServer::CheckMasterServerRequestRestart()
 T CBaseServer::CheckPassword(ns_address const&, char const*, char const*)
 T CBaseServer::CheckProtocol(ns_address const&, int, int)
 T CBaseServer::CheckTimeouts()
 T CBaseServer::Clear()
 T CBaseServer::ConnectClient(ns_address const&, int, int, int, int, char const*, char const*, char const*, int, CUtlVector<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, CUtlMemory<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, int> >&, bool)
 T CBaseServer::CreateFakeClient(char const*)
 T CBaseServer::CreateNewClient(int)
 T CBaseServer::CreateSplitClient(CMsg_CVars const&, CBaseClient*)
 T CBaseServer::DisconnectClient(IClient*, int)
 T CBaseServer::FillServerInfo(CSVCMsg_ServerInfo&)
 T CBaseServer::FinishCertificateCheck(ns_address const&, int, char const*, int)
 T CBaseServer::ForwardPacketsFromMasterServerUpdater()
 T CBaseServer::GetAddonName() const
 T CBaseServer::GetBaseUserForSplitClient(CBaseClient*)
 T CBaseServer::GetCPUUsage()
 T CBaseServer::GetChallengeNr(ns_address const&)
 T CBaseServer::GetChallengeType(ns_address const&)
 T CBaseServer::GetClassBaseline(ServerClass*, int*)
 T CBaseServer::GetClassBits() const
 T CBaseServer::GetClient(int)
 T CBaseServer::GetClientCount() const
 T CBaseServer::GetFinalTickTime() const
 T CBaseServer::GetFreeClientInternal(ns_address const&)
 T CBaseServer::GetInstanceBaselineTable()
 T CBaseServer::GetLastSyncSnapshotNetTime() const
 T CBaseServer::GetLightStyleTable()
 T CBaseServer::GetMapName() const
 T CBaseServer::GetMasterServerPlayerCounts(int&, int&, int&)
 T CBaseServer::GetMaxClients() const
 T CBaseServer::GetMaxHumanPlayers() const
 T CBaseServer::GetName() const
 T CBaseServer::GetNetStats(float&, float&)
 T CBaseServer::GetNumClasses() const
 T CBaseServer::GetNumClients() const
 T CBaseServer::GetNumFakeClients() const
 T CBaseServer::GetNumHumanPlayers() const
 T CBaseServer::GetNumPlayers()
 T CBaseServer::GetNumProxies() const
 T CBaseServer::GetPassword() const
 T CBaseServer::GetPlayerInfo(int, player_info_s*)
 T CBaseServer::GetSpawnCount() const
 T CBaseServer::GetTick() const
 T CBaseServer::GetTickInterval() const
 T CBaseServer::GetTime() const
 T CBaseServer::GetTimescale() const
 T CBaseServer::GetUDPPort() const
 T CBaseServer::InactivateClients()
 T CBaseServer::Init(bool)
 T CBaseServer::IsActive() const
 T CBaseServer::IsDedicated() const
 T CBaseServer::IsHLTV() const
 T CBaseServer::IsLoading() const
 T CBaseServer::IsMultiplayer() const
 T CBaseServer::IsPausable() const
 T CBaseServer::IsPaused() const
 T CBaseServer::IsPlayingSoloAgainstBots() const
 T CBaseServer::IsReplay() const
 T CBaseServer::IsSinglePlayerGame() const
 T CBaseServer::ProcessConnectionlessPacket(netpacket_t*)
 T CBaseServer::ProcessSplitScreenDisconnects()
 T CBaseServer::ProcessVoice()
 T CBaseServer::QueueSplitScreenDisconnect(CBaseClient*, CBaseClient*)
 T CBaseServer::RecalculateTags()
 T CBaseServer::ReconnectClients()
 T CBaseServer::RejectConnection(ns_address const&, int, char const*, ...)
 T CBaseServer::RemoveClientFromGame(CBaseClient*, int)
 T CBaseServer::RemoveTag(char const*, bool)
 T CBaseServer::ReplyChallenge(ns_address const&, int)
 T CBaseServer::ReplyServerChallenge(ns_address const&)
 T CBaseServer::RunFrame()
 T CBaseServer::SendClientMessages(bool)
 T CBaseServer::SendPendingServerInfo()
 T CBaseServer::SetMaxClients(int)
 T CBaseServer::SetPassword(char const*)
 T CBaseServer::SetPaused(bool, bool)
 T CBaseServer::SetTimescale(float)
 T CBaseServer::ShouldUpdateMasterServer()
 T CBaseServer::Shutdown()
 T CBaseServer::UpdateGameData()
 T CBaseServer::UpdateGameType()
 T CBaseServer::UpdateMasterServer()
 T CBaseServer::UpdateMasterServerPlayers()
 T CBaseServer::UpdateMasterServerRules()
 T CBaseServer::UpdateUserSettings()
 T CBaseServer::UserInfoChanged(int)
 T CBaseServer::WriteDeltaEntities(CBaseClient*, CClientFrame*, CClientFrame*, CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>&)
 T CBaseServer::WriteTempEntities(CBaseClient*, CFrameSnapshot*, CFrameSnapshot*, CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>&)
 T CBaseServer::~CBaseServer()
 T CBenchmarkResults::StartBenchmark(CCommand const&)
 T CBenchmarkResults::StopBenchmark()
 T CBenchmarkResults::Upload()
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::AddElementToBucket(unsigned short, unsigned short)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::RemoveBucket(unsigned short)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::RemoveElement(unsigned short)
 T CBlackBox::Count(int)
 T CBlackBox::Flush(int)
 T CBlackBox::Get(int, unsigned int)
 T CBlackBox::GetTypeCount()
 T CBlackBox::GetTypeName(int)
 T CBlackBox::Record(int, char const*)
 T CBlackBox::SetLimit(int, unsigned int)
 T CBlackBox::~CBlackBox()
 T CBlackBoxRecord::operator char const*() const
 T CBlockingUDPSocket::CBlockingUDPSocket()
 T CBlockingUDPSocket::ReceiveSocketMessage(sockaddr_in*, unsigned char*, unsigned long)
 T CBlockingUDPSocket::SendSocketMessage(sockaddr_in const&, unsigned char const*, unsigned long)
 T CBlockingUDPSocket::WaitForMessage(float)
 T CBlockingUDPSocket::~CBlockingUDPSocket()
 T CBoolProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBoolProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CBoolProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBoundedCvar_CmdRate::GetFloat() const
 T CBoundedCvar_CmdRate::~CBoundedCvar_CmdRate()
 T CBoundedCvar_Rate::GetFloat() const
 T CBoundedCvar_Rate::~CBoundedCvar_Rate()
 T CBoundedCvar_UpdateRate::GetFloat() const
 T CBoundedCvar_UpdateRate::~CBoundedCvar_UpdateRate()
 T CBreakpadPassiveAssertionFailureListener::AssertionFailure(char const*, char const*, int, char const*, char const*, int, AssertionType_t, bool)
 T CBreakpadPassiveAssertionFailureListener::MiniDumpHandler(MiniDumpHandlerData_t const&, char const*, char const*, int, char const*, char const*, int, AssertionType_t, bool)
 T CBreakpadPassiveAssertionFailureListener::~CBreakpadPassiveAssertionFailureListener()
 T CBrushBSPIterator::EnumerateLeaf(int, int)
 T CBrushBatchRender::AddTransBatch(CBrushBatchRender::transrender_t&, msurface2_t*)
 T CBrushBatchRender::BuildTransLists_r(CBrushBatchRender::transrender_t&, model_t*, mnode_t*)
 T CBrushBatchRender::DrawBrushModelShadow(model_t*, IClientRenderable*)
 T CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)
 T CBrushBatchRender::DrawTransLists(CBrushBatchRender::transrender_t&, void*)
 T CBrushBatchRender::FindOrCreateRenderBatch(model_t*)
 T CBrushBatchRender::LevelInit()
 T CBrushBatchRender::SurfaceCmp(CBrushBatchRender::surfacelist_t const*, CBrushBatchRender::surfacelist_t const*)
 T CBrushBatchRender::~CBrushBatchRender()
 T CBrushConvexInfo::GetContents(int)
 T CBrushModelTransform::CBrushModelTransform(Vector const&, QAngle const&, IMatRenderContext*)
 T CBrushModelTransform::~CBrushModelTransform()
 T CBrushSurface::ComputeLightmapCoordinate(Vector const&, Vector2D&)
 T CBrushSurface::ComputeTextureCoordinate(Vector const&, Vector2D&)
 T CBrushSurface::GetMaterial()
 T CBrushSurface::GetVertexCount() const
 T CBrushSurface::GetVertexData(BrushVertex_t*)
 T CBudget::AddAsset(CUtlString, int)
 T CBudget::AddReference(int, int)
 T CBudget::CBudget()
 T CBudget::EnableGamesComFilter()
 T CBudget::FindOwners(CUtlString, CUtlVector<int, CUtlMemory<int, int> >&, int&)
 T CBudget::FinishSections()
 T CBudget::GatherAssets(char const*, char const*, char const*)
 T CBudget::GatherMapAssets(char const*)
 T CBudget::GenerateAsset(int, bool)
 T CBudget::GenerateAssetSection(int, CUtlString)
 T CBudget::GenerateExecutiveSummary()
 T CBudget::GenerateFAQSection()
 T CBudget::GenerateHTML()
 T CBudget::GenerateMaterialsSection()
 T CBudget::GenerateModelSection()
 T CBudget::GenerateTextureSection()
 T CBudget::GenerateUserSection()
 T CBudget::GetBudget(char const*, CUtlString)
 T CBudget::GetHistory()
 T CBudget::IsAssetPublic(CUtlString)
 T CBudget::IsOnIgnoreList(CUtlString)
 T CBudget::IsOnSkipBudgetList(CUtlString)
 T CBudget::Msg(char*, ...)
 T CBudget::PrepareHTML()
 T CBudget::Resolve()
 T CBudget::ScanAssets()
 T CBudget::Serialize()
 T CBudget::~CBudget()
 T CBudgetBarGraphPanel::CBudgetBarGraphPanel(CBaseBudgetPanel*, char const*)
 T CBudgetBarGraphPanel::DrawAverages(IVGuiPaintSurface*)
 T CBudgetBarGraphPanel::DrawBarAtIndex(IVGuiPaintSurface*, int, float)
 T CBudgetBarGraphPanel::DrawInstantaneous(IVGuiPaintSurface*)
 T CBudgetBarGraphPanel::DrawPeaks(IVGuiPaintSurface*)
 T CBudgetBarGraphPanel::DrawTickAtIndex(IVGuiPaintSurface*, int, float, int, int, int, int)
 T CBudgetBarGraphPanel::DrawTimeLines(IVGuiPaintSurface*)
 T CBudgetBarGraphPanel::Paint(IVGuiPaintSurface*)
 T CBudgetBarGraphPanel::~CBudgetBarGraphPanel()
 T CBudgetHistoryPanel::CBudgetHistoryPanel(CBaseBudgetPanel*, char const*)
 T CBudgetHistoryPanel::Paint(IVGuiPaintSurface*)
 T CBudgetHistoryPanel::SetData(double*, int, int, int)
 T CBudgetHistoryPanel::SetRange(float, float)
 T CBudgetHistoryPanel::~CBudgetHistoryPanel()
 T CBudgetPanelEngine::CBudgetPanelEngine(vgui::Panel*, char const*)
 T CBudgetPanelEngine::IsBudgetPanelShown() const
 T CBudgetPanelEngine::OnTick()
 T CBudgetPanelEngine::PostChildPaint(IVGuiPaintSurface*)
 T CBudgetPanelEngine::SetHistoryLabelText()
 T CBudgetPanelEngine::SetTimeLabelText()
 T CBudgetPanelEngine::~CBudgetPanelEngine()
 T CBudgetPanelShared::CBudgetPanelShared(vgui::Panel*, char const*, int)
 T CBudgetPanelShared::Paint(IVGuiPaintSurface*)
 T CBudgetPanelShared::PaintBackground(IVGuiPaintSurface*)
 T CBudgetPanelShared::PostChildPaint(IVGuiPaintSurface*)
 T CBudgetPanelShared::SendConfigDataToBase()
 T CBudgetPanelShared::SetHistoryLabelText()
 T CBudgetPanelShared::SetTimeLabelText()
 T CBudgetPanelShared::SetupCustomConfigData(CBudgetPanelConfigData&)
 T CBudgetPanelShared::SnapshotVProfHistory(float)
 T CBudgetPanelShared::~CBudgetPanelShared()
 T CBugReportFinishedDialog::CBugReportFinishedDialog(vgui::Panel*, char const*, char const*, char const*)
 T CBugReportFinishedDialog::OnCommand(char const*)
 T CBugReportFinishedDialog::PerformLayout()
 T CBugReportFinishedDialog::~CBugReportFinishedDialog()
 T CBugReportUploadProgressDialog::CBugReportUploadProgressDialog(vgui::Panel*, char const*, char const*, char const*)
 T CBugReportUploadProgressDialog::PerformLayout()
 T CBugReportUploadProgressDialog::~CBugReportUploadProgressDialog()
 T CBugUIPanel::Activate()
 T CBugUIPanel::AddFileToZip(char const*)
 T CBugUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CBugUIPanel::AutoFillToken(char const*, bool)
 T CBugUIPanel::CBugUIPanel(bool, vgui::Panel*)
 T CBugUIPanel::CheckContinueQueryingSteamForCSERList()
 T CBugUIPanel::ClearBugSubmissionCount()
 T CBugUIPanel::Close()
 T CBugUIPanel::CopyInfoFromRemoteBug()
 T CBugUIPanel::DetermineSubmitterName()
 T CBugUIPanel::GetAnimMap()
 T CBugUIPanel::GetArea()
 T CBugUIPanel::GetBugSubmissionCount() const
 T CBugUIPanel::GetConsoleHistory(CUtlBuffer&) const
 T CBugUIPanel::GetDataFileBase(char const*, char*, int)
 T CBugUIPanel::GetKBMap()
 T CBugUIPanel::GetMessageMap()
 T CBugUIPanel::GetPanelClassName()
 T CBugUIPanel::Init()
 T CBugUIPanel::IsValidEmailAddress(char const*)
 T CBugUIPanel::IsValidSubmission(bool)
 T CBugUIPanel::OnChooseArea(vgui::Panel*)
 T CBugUIPanel::OnChooseVMFFolder()
 T CBugUIPanel::OnCommand(char const*)
 T CBugUIPanel::OnDirectorySelected(char const*)
 T CBugUIPanel::OnFileSelected(char const*)
 T CBugUIPanel::OnFinishBugReport()
 T CBugUIPanel::OnIncludeFile()
 T CBugUIPanel::OnKeyCodeTyped(ButtonCode_t)
 T CBugUIPanel::OnSaveBSP()
 T CBugUIPanel::OnSaveGame()
 T CBugUIPanel::OnSaveVMF()
 T CBugUIPanel::OnSubmit()
 T CBugUIPanel::OnTakeSnapshot()
 T CBugUIPanel::OnTick()
 T CBugUIPanel::ParseCommands(CCommand const&)
 T CBugUIPanel::ParseDefaultParams()
 T CBugUIPanel::PopulateControls()
 T CBugUIPanel::SetVisible(bool)
 T CBugUIPanel::SuccessSound(int)
 T CBugUIPanel::TakeSnapshot()
 T CBugUIPanel::UploadBugSubmission(char const*, int, char const*, char const*, char const*, char const*, CUtlVector<CBugUIPanel::includedfile, CUtlMemory<CBugUIPanel::includedfile, int> >&)
 T CBugUIPanel::UploadFile(char const*, char const*, bool)
 T CBugUIPanel::WipeData()
 T CBugUIPanel::~CBugUIPanel()
 T CBuildModeDialogMgr::Add(vgui::BuildModeDialog*)
 T CBuildModeDialogMgr::~CBuildModeDialogMgr()
 T CBuildModeNavCombo::CBuildModeNavCombo(vgui::Panel*, char const*, int, bool, bool, vgui::Panel*)
 T CBuildModeNavCombo::GetAnimMap()
 T CBuildModeNavCombo::GetKBMap()
 T CBuildModeNavCombo::GetMessageMap()
 T CBuildModeNavCombo::GetPanelClassName()
 T CBuildModeNavCombo::OnShowMenu(vgui::Menu*)
 T CBuildModeNavCombo::~CBuildModeNavCombo()
 T CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
 T CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
 T CCLCMsg_BaselineAck::ByteSize() const
 T CCLCMsg_BaselineAck::CCLCMsg_BaselineAck()
 T CCLCMsg_BaselineAck::Clear()
 T CCLCMsg_BaselineAck::CopyFrom(CCLCMsg_BaselineAck const&)
 T CCLCMsg_BaselineAck::GetCachedSize() const
 T CCLCMsg_BaselineAck::GetMetadata() const
 T CCLCMsg_BaselineAck::IsInitialized() const
 T CCLCMsg_BaselineAck::MergeFrom(CCLCMsg_BaselineAck const&)
 T CCLCMsg_BaselineAck::New() const
 T CCLCMsg_BaselineAck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_BaselineAck::SetCachedSize(int) const
 T CCLCMsg_BaselineAck::~CCLCMsg_BaselineAck()
 T CCLCMsg_ClientInfo::ByteSize() const
 T CCLCMsg_ClientInfo::CCLCMsg_ClientInfo()
 T CCLCMsg_ClientInfo::Clear()
 T CCLCMsg_ClientInfo::CopyFrom(CCLCMsg_ClientInfo const&)
 T CCLCMsg_ClientInfo::GetCachedSize() const
 T CCLCMsg_ClientInfo::GetMetadata() const
 T CCLCMsg_ClientInfo::IsInitialized() const
 T CCLCMsg_ClientInfo::MergeFrom(CCLCMsg_ClientInfo const&)
 T CCLCMsg_ClientInfo::New() const
 T CCLCMsg_ClientInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_ClientInfo::SetCachedSize(int) const
 T CCLCMsg_ClientInfo::~CCLCMsg_ClientInfo()
 T CCLCMsg_ClientMessage::ByteSize() const
 T CCLCMsg_ClientMessage::CCLCMsg_ClientMessage()
 T CCLCMsg_ClientMessage::Clear()
 T CCLCMsg_ClientMessage::CopyFrom(CCLCMsg_ClientMessage const&)
 T CCLCMsg_ClientMessage::GetCachedSize() const
 T CCLCMsg_ClientMessage::GetMetadata() const
 T CCLCMsg_ClientMessage::IsInitialized() const
 T CCLCMsg_ClientMessage::MergeFrom(CCLCMsg_ClientMessage const&)
 T CCLCMsg_ClientMessage::New() const
 T CCLCMsg_ClientMessage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_ClientMessage::SetCachedSize(int) const
 T CCLCMsg_ClientMessage::~CCLCMsg_ClientMessage()
 T CCLCMsg_FileCRCCheck::ByteSize() const
 T CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck()
 T CCLCMsg_FileCRCCheck::Clear()
 T CCLCMsg_FileCRCCheck::CopyFrom(CCLCMsg_FileCRCCheck const&)
 T CCLCMsg_FileCRCCheck::GetCachedSize() const
 T CCLCMsg_FileCRCCheck::GetMetadata() const
 T CCLCMsg_FileCRCCheck::IsInitialized() const
 T CCLCMsg_FileCRCCheck::MergeFrom(CCLCMsg_FileCRCCheck const&)
 T CCLCMsg_FileCRCCheck::New() const
 T CCLCMsg_FileCRCCheck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_FileCRCCheck::SetCachedSize(int) const
 T CCLCMsg_FileCRCCheck::SharedCtor()
 T CCLCMsg_FileCRCCheck::SharedDtor()
 T CCLCMsg_FileCRCCheck::~CCLCMsg_FileCRCCheck()
 T CCLCMsg_FileCRCCheck_t::CCLCMsg_FileCRCCheck_t(char const*, char const*, unsigned int)
 T CCLCMsg_FileCRCCheck_t::GetFileNameStr(CCLCMsg_FileCRCCheck const&)
 T CCLCMsg_FileCRCCheck_t::GetPathIDStr(CCLCMsg_FileCRCCheck const&)
 T CCLCMsg_FileCRCCheck_t::~CCLCMsg_FileCRCCheck_t()
 T CCLCMsg_ListenEvents::ByteSize() const
 T CCLCMsg_ListenEvents::CCLCMsg_ListenEvents()
 T CCLCMsg_ListenEvents::Clear()
 T CCLCMsg_ListenEvents::CopyFrom(CCLCMsg_ListenEvents const&)
 T CCLCMsg_ListenEvents::GetCachedSize() const
 T CCLCMsg_ListenEvents::GetMetadata() const
 T CCLCMsg_ListenEvents::IsInitialized() const
 T CCLCMsg_ListenEvents::MergeFrom(CCLCMsg_ListenEvents const&)
 T CCLCMsg_ListenEvents::New() const
 T CCLCMsg_ListenEvents::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_ListenEvents::SetCachedSize(int) const
 T CCLCMsg_ListenEvents::~CCLCMsg_ListenEvents()
 T CCLCMsg_LoadingProgress::ByteSize() const
 T CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress()
 T CCLCMsg_LoadingProgress::Clear()
 T CCLCMsg_LoadingProgress::CopyFrom(CCLCMsg_LoadingProgress const&)
 T CCLCMsg_LoadingProgress::GetCachedSize() const
 T CCLCMsg_LoadingProgress::GetMetadata() const
 T CCLCMsg_LoadingProgress::IsInitialized() const
 T CCLCMsg_LoadingProgress::MergeFrom(CCLCMsg_LoadingProgress const&)
 T CCLCMsg_LoadingProgress::New() const
 T CCLCMsg_LoadingProgress::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_LoadingProgress::SetCachedSize(int) const
 T CCLCMsg_LoadingProgress::~CCLCMsg_LoadingProgress()
 T CCLCMsg_Move::ByteSize() const
 T CCLCMsg_Move::CCLCMsg_Move()
 T CCLCMsg_Move::Clear()
 T CCLCMsg_Move::CopyFrom(CCLCMsg_Move const&)
 T CCLCMsg_Move::GetCachedSize() const
 T CCLCMsg_Move::GetMetadata() const
 T CCLCMsg_Move::IsInitialized() const
 T CCLCMsg_Move::MergeFrom(CCLCMsg_Move const&)
 T CCLCMsg_Move::New() const
 T CCLCMsg_Move::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_Move::SetCachedSize(int) const
 T CCLCMsg_Move::~CCLCMsg_Move()
 T CCLCMsg_RespondCvarValue::ByteSize() const
 T CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue()
 T CCLCMsg_RespondCvarValue::Clear()
 T CCLCMsg_RespondCvarValue::CopyFrom(CCLCMsg_RespondCvarValue const&)
 T CCLCMsg_RespondCvarValue::GetCachedSize() const
 T CCLCMsg_RespondCvarValue::GetMetadata() const
 T CCLCMsg_RespondCvarValue::IsInitialized() const
 T CCLCMsg_RespondCvarValue::MergeFrom(CCLCMsg_RespondCvarValue const&)
 T CCLCMsg_RespondCvarValue::New() const
 T CCLCMsg_RespondCvarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_RespondCvarValue::SetCachedSize(int) const
 T CCLCMsg_RespondCvarValue::SharedDtor()
 T CCLCMsg_RespondCvarValue::~CCLCMsg_RespondCvarValue()
 T CCLCMsg_SplitPlayerConnect::ByteSize() const
 T CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect()
 T CCLCMsg_SplitPlayerConnect::Clear()
 T CCLCMsg_SplitPlayerConnect::CopyFrom(CCLCMsg_SplitPlayerConnect const&)
 T CCLCMsg_SplitPlayerConnect::GetCachedSize() const
 T CCLCMsg_SplitPlayerConnect::GetMetadata() const
 T CCLCMsg_SplitPlayerConnect::IsInitialized() const
 T CCLCMsg_SplitPlayerConnect::MergeFrom(CCLCMsg_SplitPlayerConnect const&)
 T CCLCMsg_SplitPlayerConnect::New() const
 T CCLCMsg_SplitPlayerConnect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_SplitPlayerConnect::SetCachedSize(int) const
 T CCLCMsg_SplitPlayerConnect::~CCLCMsg_SplitPlayerConnect()
 T CCLCMsg_VoiceData::ByteSize() const
 T CCLCMsg_VoiceData::CCLCMsg_VoiceData()
 T CCLCMsg_VoiceData::Clear()
 T CCLCMsg_VoiceData::CopyFrom(CCLCMsg_VoiceData const&)
 T CCLCMsg_VoiceData::GetCachedSize() const
 T CCLCMsg_VoiceData::GetMetadata() const
 T CCLCMsg_VoiceData::IsInitialized() const
 T CCLCMsg_VoiceData::MergeFrom(CCLCMsg_VoiceData const&)
 T CCLCMsg_VoiceData::New() const
 T CCLCMsg_VoiceData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCLCMsg_VoiceData::SetCachedSize(int) const
 T CCLCMsg_VoiceData::~CCLCMsg_VoiceData()
 T CC_TransmitEvents(CCommand const&)
 T CCallQueue::~CCallQueue()
 T CCallQueueT<CTSQueue<CFunctor*, false> >::CallQueued()
 T CCallQueueT<CTSQueue<CFunctor*, false> >::ExecuteWrapper(int&)
 T CCallQueueT<CTSQueue<CFunctor*, false> >::ParallelCallQueued(char const*, IThreadPool*)
 T CCallQueueT<CTSQueue<CFunctor*, false> >::QueueFunctorInternal(CFunctor*)
 T CCallback<CSteam3Client, ClientGameServerDeny_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, ClientGameServerDeny_t, false>::Run(void*)
 T CCallback<CSteam3Client, ClientGameServerDeny_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Client, GameOverlayActivated_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, GameOverlayActivated_t, false>::Run(void*)
 T CCallback<CSteam3Client, GameOverlayActivated_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Client, GameServerChangeRequested_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, GameServerChangeRequested_t, false>::Run(void*)
 T CCallback<CSteam3Client, GameServerChangeRequested_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Client, LowBatteryPower_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, LowBatteryPower_t, false>::Run(void*)
 T CCallback<CSteam3Client, LowBatteryPower_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Client, PersonaStateChange_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, PersonaStateChange_t, false>::Run(void*)
 T CCallback<CSteam3Client, PersonaStateChange_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Client, SocketStatusCallback_t, false>::GetCallbackSizeBytes()
 T CCallback<CSteam3Client, SocketStatusCallback_t, false>::Run(void*)
 T CCallback<CSteam3Client, SocketStatusCallback_t, false>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Server, GSPolicyResponse_t, true>::GetCallbackSizeBytes()
 T CCallback<CSteam3Server, GSPolicyResponse_t, true>::Run(void*)
 T CCallback<CSteam3Server, GSPolicyResponse_t, true>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Server, SteamServerConnectFailure_t, true>::GetCallbackSizeBytes()
 T CCallback<CSteam3Server, SteamServerConnectFailure_t, true>::Run(void*)
 T CCallback<CSteam3Server, SteamServerConnectFailure_t, true>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Server, SteamServersConnected_t, true>::GetCallbackSizeBytes()
 T CCallback<CSteam3Server, SteamServersConnected_t, true>::Run(void*)
 T CCallback<CSteam3Server, SteamServersConnected_t, true>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Server, SteamServersDisconnected_t, true>::GetCallbackSizeBytes()
 T CCallback<CSteam3Server, SteamServersDisconnected_t, true>::Run(void*)
 T CCallback<CSteam3Server, SteamServersDisconnected_t, true>::Run(void*, bool, unsigned long long)
 T CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>::GetCallbackSizeBytes()
 T CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>::Run(void*)
 T CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>::Run(void*, bool, unsigned long long)
 T CChangeFrameList::CChangeFrameList(CChangeFrameList const&)
 T CChangeFrameList::CChangeFrameList(int, int)
 T CChangeFrameList::Copy()
 T CChangeFrameList::Release()
 T CChangeFrameList::SetChangeTick(int const*, int, int)
 T CChannelCullList::Initialize(CChannelList&)
 T CCircularBuffer::CCircularBuffer(int)
 T CCircularBuffer::Flush()
 T CCircularBuffer::GetReadAvailable()
 T CCircularBuffer::GetWriteAvailable()
 T CCircularBuffer::Read(void*, int)
 T CCircularBuffer::Write(void const*, int)
 T CClassMemoryPool<CSfxTable, CUtlMemoryPool<CSfxTable> >::Clear()
 T CClassMemoryPool<CSfxTable, CUtlMemoryPool<CSfxTable> >::~CClassMemoryPool()
 T CClassMemoryPool<PackedEntity, CUtlMemoryPool<PackedEntity> >::Clear()
 T CClassMemoryPool<PanelAnimationMap, CUtlMemoryPool<PanelAnimationMap> >::Clear()
 T CClassMemoryPool<PropLightcache_t, CUtlMemoryPool<PropLightcache_t> >::Clear()
 T CClassMemoryPool<PropLightcache_t, CUtlMemoryPool<PropLightcache_t> >::~CClassMemoryPool()
 T CClassMemoryPool<decal_t, CUtlMemoryPool<decal_t> >::~CClassMemoryPool()
 T CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 T CClientDatatableStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
 T CClientEngineTools::EnableFullscreenToolMode(bool)
 T CClientEngineTools::InToolMode()
 T CClientEngineTools::IsFullscreen() const
 T CClientEngineTools::IsGameInputEnabled() const
 T CClientEngineTools::IsThirdPersonCamera()
 T CClientEngineTools::LevelInitPostEntityAllTools()
 T CClientEngineTools::LevelInitPreEntityAllTools()
 T CClientEngineTools::LevelShutdownPostEntityAllTools()
 T CClientEngineTools::LevelShutdownPreEntityAllTools()
 T CClientEngineTools::PostRenderAllTools()
 T CClientEngineTools::PostToolMessage(unsigned int, KeyValues*)
 T CClientEngineTools::PreRenderAllTools()
 T CClientEngineTools::SetMode(bool, bool)
 T CClientEngineTools::SetupAudioState(AudioState_t&)
 T CClientEngineTools::SetupEngineView(Vector&, QAngle&, float&)
 T CClientEngineTools::VGui_PostRenderAllTools(int)
 T CClientEngineTools::VGui_PreRenderAllTools(int)
 T CClientEngineTools::~CClientEngineTools()
 T CClientFrame::CClientFrame()
 T CClientFrame::CClientFrame(CFrameSnapshot*)
 T CClientFrame::CopyFrame(CClientFrame&)
 T CClientFrame::Init(CFrameSnapshot*)
 T CClientFrame::Init(int)
 T CClientFrame::IsMemPoolAllocated()
 T CClientFrame::SetSnapshot(CFrameSnapshot*)
 T CClientFrame::~CClientFrame()
 T CClientFrameManager::AddClientFrame(CClientFrame*)
 T CClientFrameManager::AllocateFrame()
 T CClientFrameManager::CountClientFrames()
 T CClientFrameManager::DeleteClientFrames(int)
 T CClientFrameManager::FreeFrame(CClientFrame*)
 T CClientFrameManager::GetClientFrame(int, bool)
 T CClientFrameManager::RemoveAllFrames()
 T CClientFrameManager::RemoveOldestFrame()
 T CClientFrameManager::~CClientFrameManager()
 T CClientSendProp::CClientSendProp()
 T CClientSendProp::~CClientSendProp()
 T CClientSendTable::CClientSendTable()
 T CClientSendTable::~CClientSendTable()
 T CClientState::AddCustomFile(int, char const*)
 T CClientState::CClientState()
 T CClientState::CheckFileCRCsWithServer()
 T CClientState::CheckOthersCustomFile(unsigned int)
 T CClientState::CheckOwnCustomFiles()
 T CClientState::CheckUpdatingSteamResources()
 T CClientState::Clear()
 T CClientState::ClearSounds()
 T CClientState::ConnectionClosing(int)
 T CClientState::ConnectionCrashed(int)
 T CClientState::ConsistencyCheck(bool)
 T CClientState::Disconnect(bool)
 T CClientState::DumpPrecacheStats(char const*)
 T CClientState::FileDenied(char const*, unsigned int, bool)
 T CClientState::FileReceived(char const*, unsigned int, bool)
 T CClientState::FileRequested(char const*, unsigned int, bool)
 T CClientState::FinishSignonState_New()
 T CClientState::FullConnect(ns_address const&)
 T CClientState::GetAreaBits_BackwardCompatibility()
 T CClientState::GetCDKeyHash()
 T CClientState::GetClientInterpAmount()
 T CClientState::GetFrameTime() const
 T CClientState::GetModel(int)
 T CClientState::GetSound(int)
 T CClientState::GetSoundName(int)
 T CClientState::GetTime() const
 T CClientState::HookClientStringTable(char const*)
 T CClientState::InstallEngineStringTableCallback(char const*)
 T CClientState::InstallStringTableCallback(char const*)
 T CClientState::IsPaused() const
 T CClientState::LookupModelIndex(char const*)
 T CClientState::LookupSoundIndex(char const*)
 T CClientState::NETMsg_StringCmd(CNETMsg_StringCmd const&)
 T CClientState::NETMsg_Tick(CNETMsg_Tick const&)
 T CClientState::PacketEnd()
 T CClientState::PacketStart(int, int)
 T CClientState::ProcessConnectionlessPacket(netpacket_t*)
 T CClientState::ReadDeletions(CEntityReadInfo&)
 T CClientState::ReadPacketEntities(CEntityReadInfo&)
 T CClientState::RunFrame()
 T CClientState::SVCMsg_BSPDecal(CSVCMsg_BSPDecal const&)
 T CClientState::SVCMsg_ClassInfo(CSVCMsg_ClassInfo const&)
 T CClientState::SVCMsg_CrosshairAngle(CSVCMsg_CrosshairAngle const&)
 T CClientState::SVCMsg_FixAngle(CSVCMsg_FixAngle const&)
 T CClientState::SVCMsg_GameEvent(CSVCMsg_GameEvent const&)
 T CClientState::SVCMsg_PacketEntities(CSVCMsg_PacketEntities const&)
 T CClientState::SVCMsg_Prefetch(CSVCMsg_Prefetch const&)
 T CClientState::SVCMsg_ServerInfo(CSVCMsg_ServerInfo const&)
 T CClientState::SVCMsg_SetPause(CSVCMsg_SetPause const&)
 T CClientState::SVCMsg_Sounds(CSVCMsg_Sounds const&)
 T CClientState::SVCMsg_TempEntities(CSVCMsg_TempEntities const&)
 T CClientState::SVCMsg_UserMessage(CSVCMsg_UserMessage const&)
 T CClientState::SVCMsg_VoiceData(CSVCMsg_VoiceData const&)
 T CClientState::SVCMsg_VoiceInit(CSVCMsg_VoiceInit const&)
 T CClientState::SendClientInfo()
 T CClientState::SendLoadingProgress(int)
 T CClientState::SetDecal(int)
 T CClientState::SetFriendsID(unsigned int, char const*)
 T CClientState::SetGeneric(int)
 T CClientState::SetModel(int)
 T CClientState::SetSignonState(int, int, CNETMsg_SignonState const*)
 T CClientState::SetSound(int)
 T CClientState::UpdateAreaBits_BackwardsCompatible()
 T CClientState::~CClientState()
 T CClockDriftMgr::AdjustAverageDifferenceBy(float)
 T CClockDriftMgr::AdjustFrameTime(float)
 T CClockDriftMgr::CClockDriftMgr()
 T CClockDriftMgr::Clear()
 T CClockDriftMgr::IsClockCorrectionEnabled()
 T CClockDriftMgr::SetServerTick(int)
 T CClockDriftMgr::ShowDebugInfo(float)
 T CCollisionBSPData::~CCollisionBSPData()
 T CColorBalanceOperation::Apply(Vector const&, Vector&)
 T CColorBalanceOperation::Clone()
 T CColorBalanceOperation::CreateLookupTables()
 T CColorBalanceOperation::GetBlendFactor()
 T CColorBalanceOperation::GetName()
 T CColorBalanceOperation::IsEnabled()
 T CColorBalanceOperation::Release()
 T CColorBalanceOperation::Serialize(CDmxElement*)
 T CColorBalanceOperation::SetBlendFactor(float)
 T CColorBalanceOperation::SetEnabled(bool)
 T CColorBalanceOperation::SetName(char const*)
 T CColorBalanceOperation::ToolID()
 T CColorBalanceOperation::Unserialize(CDmxElement*)
 T CColorBalanceUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CColorBalanceUIPanel::CColorBalanceUIPanel(vgui::Panel*, CColorBalanceOperation*)
 T CColorBalanceUIPanel::GetAnimMap()
 T CColorBalanceUIPanel::GetKBMap()
 T CColorBalanceUIPanel::GetMessageMap()
 T CColorBalanceUIPanel::GetOperation()
 T CColorBalanceUIPanel::GetPanelClassName()
 T CColorBalanceUIPanel::Init()
 T CColorBalanceUIPanel::OnCommand(char const*)
 T CColorBalanceUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CColorBalanceUIPanel::OnRadioButtonHit()
 T CColorBalanceUIPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CColorBalanceUIPanel::ResetSliders()
 T CColorBalanceUIPanel::Shutdown()
 T CColorBalanceUIPanel::~CColorBalanceUIPanel()
 T CColorCorrectionTools::GrabPreColorCorrectedFrame(int, int, int, int)
 T CColorCorrectionTools::Init()
 T CColorCorrectionTools::InstallColorCorrectionUI(vgui::Panel*)
 T CColorCorrectionTools::SetFinalOperation(IColorOperation*)
 T CColorCorrectionTools::ShouldPause() const
 T CColorCorrectionTools::Shutdown()
 T CColorCorrectionTools::UpdateColorCorrection()
 T CColorCorrectionUIChildPanel::CColorCorrectionUIChildPanel(vgui::Panel*, char const*)
 T CColorCorrectionUIChildPanel::GetAnimMap()
 T CColorCorrectionUIChildPanel::GetKBMap()
 T CColorCorrectionUIChildPanel::GetMessageMap()
 T CColorCorrectionUIChildPanel::GetOperation()
 T CColorCorrectionUIChildPanel::GetPanelClassName()
 T CColorCorrectionUIChildPanel::Init()
 T CColorCorrectionUIChildPanel::OnClose()
 T CColorCorrectionUIChildPanel::OnKeyCodeTyped(ButtonCode_t)
 T CColorCorrectionUIChildPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CColorCorrectionUIChildPanel::Shutdown()
 T CColorCorrectionUIChildPanel::~CColorCorrectionUIChildPanel()
 T CColorCorrectionUIPanel::Activate()
 T CColorCorrectionUIPanel::CColorCorrectionUIPanel(vgui::Panel*)
 T CColorCorrectionUIPanel::GetAnimMap()
 T CColorCorrectionUIPanel::GetKBMap()
 T CColorCorrectionUIPanel::GetMessageMap()
 T CColorCorrectionUIPanel::GetPanelClassName()
 T CColorCorrectionUIPanel::OnCommand(char const*)
 T CColorCorrectionUIPanel::OnKeyCodeTyped(ButtonCode_t)
 T CColorCorrectionUIPanel::OnThink()
 T CColorCorrectionUIPanel::~CColorCorrectionUIPanel()
 T CColorCurvesEditPanel::CColorCurvesEditPanel(vgui::Panel*, char const*)
 T CColorCurvesEditPanel::ControlPointCount()
 T CColorCurvesEditPanel::FindControlPoint(float, float)
 T CColorCurvesEditPanel::FindOrAddControlPoint(float, float, float)
 T CColorCurvesEditPanel::GetAnimMap()
 T CColorCurvesEditPanel::GetControlPoint(int, float*, float*)
 T CColorCurvesEditPanel::GetKBMap()
 T CColorCurvesEditPanel::GetMessageMap()
 T CColorCurvesEditPanel::GetPanelClassName()
 T CColorCurvesEditPanel::GetValue(float)
 T CColorCurvesEditPanel::ModifyControlPoint(int, float, float)
 T CColorCurvesEditPanel::RemoveControlPoint(int)
 T CColorCurvesEditPanel::~CColorCurvesEditPanel()
 T CColorCurvesUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CColorCurvesUIPanel::CColorCurvesUIPanel(vgui::Panel*, CCurvesColorOperation*)
 T CColorCurvesUIPanel::GetAnimMap()
 T CColorCurvesUIPanel::GetKBMap()
 T CColorCurvesUIPanel::GetMessageMap()
 T CColorCurvesUIPanel::GetOperation()
 T CColorCurvesUIPanel::GetPanelClassName()
 T CColorCurvesUIPanel::Init()
 T CColorCurvesUIPanel::OnCommand(char const*)
 T CColorCurvesUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CColorCurvesUIPanel::OnTextChanged(KeyValues*)
 T CColorCurvesUIPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CColorCurvesUIPanel::Shutdown()
 T CColorCurvesUIPanel::~CColorCurvesUIPanel()
 T CColorHistogramPanel::CColorHistogramPanel(vgui::Panel*, char const*, CLevelsColorOperation*)
 T CColorHistogramPanel::ComputeHistogram(Rect_t&, unsigned char*, ImageFormat, int)
 T CColorHistogramPanel::GetAnimMap()
 T CColorHistogramPanel::GetKBMap()
 T CColorHistogramPanel::GetMessageMap()
 T CColorHistogramPanel::GetPanelClassName()
 T CColorHistogramPanel::Paint(IVGuiPaintSurface*)
 T CColorHistogramPanel::PaintBackground(IVGuiPaintSurface*)
 T CColorHistogramPanel::~CColorHistogramPanel()
 T CColorLevelsUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CColorLevelsUIPanel::CColorLevelsUIPanel(vgui::Panel*, CLevelsColorOperation*)
 T CColorLevelsUIPanel::GetAnimMap()
 T CColorLevelsUIPanel::GetKBMap()
 T CColorLevelsUIPanel::GetMessageMap()
 T CColorLevelsUIPanel::GetOperation()
 T CColorLevelsUIPanel::GetPanelClassName()
 T CColorLevelsUIPanel::Init()
 T CColorLevelsUIPanel::OnCommand(char const*)
 T CColorLevelsUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CColorLevelsUIPanel::OnTextChanged(KeyValues*)
 T CColorLevelsUIPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CColorLevelsUIPanel::Shutdown()
 T CColorLevelsUIPanel::~CColorLevelsUIPanel()
 T CColorLookupOperation::Apply(Vector const&, Vector&)
 T CColorLookupOperation::Clone()
 T CColorLookupOperation::GetBlendFactor()
 T CColorLookupOperation::GetName()
 T CColorLookupOperation::IsEnabled()
 T CColorLookupOperation::LoadLookupTable(char const*)
 T CColorLookupOperation::Release()
 T CColorLookupOperation::Serialize(CDmxElement*)
 T CColorLookupOperation::SetBlendFactor(float)
 T CColorLookupOperation::SetEnabled(bool)
 T CColorLookupOperation::SetName(char const*)
 T CColorLookupOperation::ToolID()
 T CColorLookupOperation::Unserialize(CDmxElement*)
 T CColorLookupUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CColorLookupUIPanel::CColorLookupUIPanel(vgui::Panel*, CColorLookupOperation*)
 T CColorLookupUIPanel::GetAnimMap()
 T CColorLookupUIPanel::GetKBMap()
 T CColorLookupUIPanel::GetMessageMap()
 T CColorLookupUIPanel::GetOperation()
 T CColorLookupUIPanel::GetPanelClassName()
 T CColorLookupUIPanel::Init()
 T CColorLookupUIPanel::OnCommand(char const*)
 T CColorLookupUIPanel::OnFileSelected(char const*)
 T CColorLookupUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CColorLookupUIPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CColorLookupUIPanel::Shutdown()
 T CColorLookupUIPanel::~CColorLookupUIPanel()
 T CColorMeshData::DestroyResource()
 T CColorOperationList::Apply(color24, color24&, IColorOperation*)
 T CColorOperationList::BringForward(int)
 T CColorOperationList::PushBack(int)
 T CColorOperationListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CColorOperationListPanel::CColorOperationListPanel(vgui::Panel*, unsigned int)
 T CColorOperationListPanel::GetAnimMap()
 T CColorOperationListPanel::GetKBMap()
 T CColorOperationListPanel::GetMessageMap()
 T CColorOperationListPanel::GetPanelClassName()
 T CColorOperationListPanel::LaunchOperationPanel(IColorOperation*)
 T CColorOperationListPanel::LoadVCCFile(char const*)
 T CColorOperationListPanel::OnCheckButtonChecked(KeyValues*)
 T CColorOperationListPanel::OnCommand(char const*)
 T CColorOperationListPanel::OnKeyCodeTyped(ButtonCode_t)
 T CColorOperationListPanel::OnLaunchOperation(int)
 T CColorOperationListPanel::OnMouseDoublePressed(ButtonCode_t)
 T CColorOperationListPanel::OnOpPanelClose(KeyValues*)
 T CColorOperationListPanel::OnReadFileFromDisk(char const*, char const*, KeyValues*)
 T CColorOperationListPanel::OnSliderMoved(KeyValues*)
 T CColorOperationListPanel::OnThink()
 T CColorOperationListPanel::OnWriteFileToDisk(char const*, char const*, KeyValues*)
 T CColorOperationListPanel::PopulateList()
 T CColorOperationListPanel::ResetSlider()
 T CColorOperationListPanel::SaveRawFile(char const*)
 T CColorOperationListPanel::SaveVCCFile(char const*)
 T CColorOperationListPanel::SetupFileOpenDialog(vgui::FileOpenDialog*, bool, char const*, KeyValues*)
 T CColorOperationListPanel::~CColorOperationListPanel()
 T CColorProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CColorProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorSlider::CColorSlider(vgui::Panel*, char const*, int)
 T CColorSlider::GetAnimMap()
 T CColorSlider::GetKBMap()
 T CColorSlider::GetMessageMap()
 T CColorSlider::GetPanelClassName()
 T CColorSlider::OnCursorMoved(int, int)
 T CColorSlider::OnMousePressed(ButtonCode_t)
 T CColorSlider::OnMouseReleased(ButtonCode_t)
 T CColorSlider::Paint(IVGuiPaintSurface*)
 T CColorSlider::SetNormalizedValue(int, float)
 T CColorSlider::~CColorSlider()
 T CCombineDisplacements::CCombineDisplacements()
 T CCombineDisplacements::ComputeMapName(char*, unsigned long)
 T CCombineDisplacements::DilateRender(IMatRenderContext*)
 T CCombineDisplacements::GatherDisplacementInfo()
 T CCombineDisplacements::PackDisplacements(float)
 T CCombineDisplacements::Push2DRenderingSetup(IMatRenderContext*, ITexture*, int, int)
 T CCombineDisplacements::RenderDisplacement(IMatRenderContext*, TDisplacementImage&)
 T CCombineDisplacements::RenderResults()
 T CCombineDisplacements::ResampleRender(IMatRenderContext*, TDisplacementImage&)
 T CCombineDisplacements::~CCombineDisplacements()
 T CCommand::CCommand()
 T CCommand::CCommand(int, char const**)
 T CCommand::DefaultBreakSet()
 T CCommand::FindArg(char const*) const
 T CCommand::Reset()
 T CCommand::Tokenize(char const*, characterset_t*)
 T CCommandBuffer::AddText(char const*, int)
 T CCommandBuffer::BeginProcessingCommands(int)
 T CCommandBuffer::CCommandBuffer()
 T CCommandBuffer::DequeueNextCommand()
 T CCommandBuffer::EndProcessingCommands()
 T CCommandBuffer::GetNextCommandHandle()
 T CCommandBuffer::InsertCommand(char const*, int, int)
 T CCommandBuffer::IsProcessingCommands()
 T CCommandBuffer::SetWaitDelayTime(int)
 T CCommandBuffer::~CCommandBuffer()
 T CCommonHostState::SetWorldModel(model_t*)
 T CCompressedHeightfield<128u, 128u>::init(float const*, unsigned int)
 T CConCommandMemberAccessor<CEngineVGui>::CommandCallback(CCommandContext const&, CCommand const&)
 T CConCommandMemberAccessor<CEngineVGui>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CConCommandMemberAccessor<CEngineVGui>::~CConCommandMemberAccessor()
 T CConCommandMemberAccessor<CTextureBudgetPanel>::CommandCallback(CCommandContext const&, CCommand const&)
 T CConCommandMemberAccessor<CTextureBudgetPanel>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CConCommandMemberAccessor<CTextureBudgetPanel>::~CConCommandMemberAccessor()
 T CConPanel::AddToNotify(Color const&, char const*)
 T CConPanel::ApplySchemeSettings(vgui::IScheme*)
 T CConPanel::CConPanel(vgui::Panel*)
 T CConPanel::DrawDebugAreas(IVGuiPaintSurface*)
 T CConPanel::DrawNotify(IVGuiPaintSurface*)
 T CConPanel::DrawText(IVGuiPaintSurface*, unsigned long, int, int, wchar_t*, ...)
 T CConPanel::Paint(IVGuiPaintSurface*)
 T CConPanel::PaintBackground(IVGuiPaintSurface*)
 T CConPanel::ProcessNotifyLines(IVGuiPaintSurface*, int&, int&, int&, int&, bool)
 T CConPanel::ShouldDraw()
 T CConPanel::~CConPanel()
 T CConVarCheckButton::CConVarCheckButton(vgui::Panel*, char const*, char const*)
 T CConVarCheckButton::SetConVar(ConVar*)
 T CConVarCheckButton::SetSelected(bool)
 T CConVarCheckButton::~CConVarCheckButton()
 T CCoreDispInfo::CCoreDispInfo()
 T CCoreDispInfo::CalcBoundingBoxAtNode(int)
 T CCoreDispInfo::CalcDispSurfCoords(bool, int)
 T CCoreDispInfo::CalcErrorTermAtNode(int, int)
 T CCoreDispInfo::CalcMinMaxBoundingBoxAtNode(int, Vector&, Vector&)
 T CCoreDispInfo::CalcNodeInfo(int, int)
 T CCoreDispInfo::CalcNormalFromEdges(int, int, bool*, Vector&)
 T CCoreDispInfo::CalcRayBoundingBoxes(int, int (*) [3])
 T CCoreDispInfo::CalcTriSurfBoundingBoxes(int, int (*) [3])
 T CCoreDispInfo::CalcTriSurfInfoAtNode(int)
 T CCoreDispInfo::CalcTriSurfPlanes(int, int (*) [3])
 T CCoreDispInfo::CalcVertIndicesAtNodes(int)
 T CCoreDispInfo::Create()
 T CCoreDispInfo::GenerateCollisionSurface()
 T CCoreDispInfo::GenerateDispSurf()
 T CCoreDispInfo::GenerateDispSurfTangentSpaces()
 T CCoreDispInfo::GetCornerNeighbors(int)
 T CCoreDispInfo::GetDispUtilsByIndex(int)
 T CCoreDispInfo::GetEdgeNeighbor(int)
 T CCoreDispInfo::GetPowerInfo() const
 T CCoreDispInfo::GetTriCount()
 T CCoreDispInfo::GetTriIndices(int, unsigned short&, unsigned short&, unsigned short&)
 T CCoreDispInfo::InitDispInfo(int, int, float, CDispVert const*, CDispTri const*, int, CDispMultiBlend const*)
 T CCoreDispInfo::InitDispInfo(int, int, float, float*, Vector*, float*, int, CDispMultiBlend const*)
 T CCoreDispInfo::SetDispUtilsHelperInfo(CCoreDispInfo**, int)
 T CCoreDispInfo::~CCoreDispInfo()
 T CCoreDispSurface::AdjustSurfPointData()
 T CCoreDispSurface::FindSurfPointStartIndex()
 T CCoreDispSurface::Init()
 T CCoreDispSurface::SetNeighborData(CDispNeighbor const*, CDispCornerNeighbors const*)
 T CCurveEditorPanel::CCurveEditorPanel(vgui::Panel*, char const*)
 T CCurveEditorPanel::GetAnimMap()
 T CCurveEditorPanel::GetKBMap()
 T CCurveEditorPanel::GetMessageMap()
 T CCurveEditorPanel::GetPanelClassName()
 T CCurveEditorPanel::OnCursorMoved(int, int)
 T CCurveEditorPanel::OnKeyCodePressed(ButtonCode_t)
 T CCurveEditorPanel::OnMousePressed(ButtonCode_t)
 T CCurveEditorPanel::OnMouseReleased(ButtonCode_t)
 T CCurveEditorPanel::Paint(IVGuiPaintSurface*)
 T CCurveEditorPanel::PaintBackground(IVGuiPaintSurface*)
 T CCurveEditorPanel::~CCurveEditorPanel()
 T CCurvesColorOperation::Apply(Vector const&, Vector&)
 T CCurvesColorOperation::CCurvesColorOperation()
 T CCurvesColorOperation::Clone()
 T CCurvesColorOperation::ComputeActualCorrectedColor(float)
 T CCurvesColorOperation::FindOrAddControlPoint(float, float, float)
 T CCurvesColorOperation::GetBlendFactor()
 T CCurvesColorOperation::GetName()
 T CCurvesColorOperation::IsEnabled()
 T CCurvesColorOperation::ModifyControlPoint(int, float, float)
 T CCurvesColorOperation::Release()
 T CCurvesColorOperation::RemoveControlPoint(int)
 T CCurvesColorOperation::Serialize(CDmxElement*)
 T CCurvesColorOperation::SetBlendFactor(float)
 T CCurvesColorOperation::SetEnabled(bool)
 T CCurvesColorOperation::SetName(char const*)
 T CCurvesColorOperation::ToolID()
 T CCurvesColorOperation::Unserialize(CDmxElement*)
 T CCvarQuery::AreConVarsLinkable(ConVar const*, ConVar const*)
 T CCvarQuery::Connect(void* (*)(char const*, int*))
 T CCvarQuery::Init()
 T CCvarQuery::QueryInterface(char const*)
 T CCvarQuery::Shutdown()
 T CCvarUtilities::CvarDifferences(CCommand const&)
 T CCvarUtilities::CvarFindFlagsCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CCvarUtilities::CvarFindFlags_f(CCommand const&)
 T CCvarUtilities::CvarList(CCommand const&)
 T CCvarUtilities::CvarToggle(CCommand const&)
 T CCvarUtilities::EnableDevCvars()
 T CCvarUtilities::IsCommand(CCommand const&, int)
 T CCvarUtilities::IsValidToggleCommand(char const*)
 T CCvarUtilities::ResetConVarsToDefaultValues(char const*)
 T CCvarUtilities::SetDirect(ConVar*, char const*)
 T CCvarUtilities::WriteVariables(CUtlBuffer&, int)
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::CreateResource(CDispCollTree* const&, bool)
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::DestroyResourceStorage(void*)
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::GetRealSize(void*)
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::Lock()
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::TryLock()
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::Unlock()
 T CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::~CDataManager()
 T CDataManagerBase::BreakLock(memhandle_t__*)
 T CDataManagerBase::CDataManagerBase(unsigned int)
 T CDataManagerBase::CreateHandle(bool)
 T CDataManagerBase::DestroyResource(memhandle_t__*)
 T CDataManagerBase::EnsureCapacity(unsigned int)
 T CDataManagerBase::FlushAll()
 T CDataManagerBase::Lock()
 T CDataManagerBase::LockResource(memhandle_t__*)
 T CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
 T CDataManagerBase::TryLock()
 T CDataManagerBase::Unlock()
 T CDataManagerBase::UnlockResource(memhandle_t__*)
 T CDataManagerBase::~CDataManagerBase()
 T CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 T CDatatableStack::CDatatableStack(CSendTablePrecalc*, unsigned char*, int)
 T CDatatableStack::Init(bool)
 T CDebugCommandButton::OnCommand(char const*)
 T CDebugCommandButton::OnTick()
 T CDebugCommandButton::~CDebugCommandButton()
 T CDebugCommandCheckbox::OnCommand(char const*)
 T CDebugCommandCheckbox::~CDebugCommandCheckbox()
 T CDebugIncrementCVarButton::CDebugIncrementCVarButton(vgui::Panel*, char const*, char const*, char const*)
 T CDebugIncrementCVarButton::OnCommand(char const*)
 T CDebugIncrementCVarButton::OnTick()
 T CDebugIncrementCVarButton::~CDebugIncrementCVarButton()
 T CDebugMenuButton::CDebugMenuButton(vgui::Panel*, char const*, char const*)
 T CDebugMenuButton::~CDebugMenuButton()
 T CDebugOptionsPage::CDebugOptionsPage(vgui::Panel*, char const*)
 T CDebugOptionsPage::Init(KeyValues*)
 T CDebugOptionsPage::OnTick()
 T CDebugOptionsPage::PerformLayout()
 T CDebugOptionsPage::~CDebugOptionsPage()
 T CDebugOptionsPanel::CDebugOptionsPanel(vgui::Panel*, char const*)
 T CDebugOptionsPanel::~CDebugOptionsPanel()
 T CDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T CDebugOverlay::AddBoxOverlay2(Vector const&, Vector const&, Vector const&, QAngle const&, Color const&, Color const&, float)
 T CDebugOverlay::AddCoordFrameOverlay(matrix3x4_t const&, float, int (*) [3])
 T CDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*)
 T CDebugOverlay::AddGridOverlay(Vector const&)
 T CDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, int, bool, float)
 T CDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
 T CDebugOverlay::AddScreenTextOverlay(float, float, int, float, int, int, int, int, char const*)
 T CDebugOverlay::AddSphereOverlay(Vector const&, float, int, int, int, int, int, int, float, bool)
 T CDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T CDebugOverlay::AddTextOverlay(Vector const&, float, char const*)
 T CDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*)
 T CDebugOverlay::AddTextOverlay(Vector const&, int, float, float, char const*)
 T CDebugOverlay::AddTextOverlay(Vector const&, int, float, float, float, float, float, char const*)
 T CDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
 T CDebugOverlay::ClearAllOverlays()
 T CDebugOverlay::ClearDeadOverlays()
 T CDebugOverlay::DestroyOverlay(CDebugOverlay::OverlayBase_t*)
 T CDebugOverlay::Draw3DOverlays()
 T CDebugOverlay::DrawAllOverlays()
 T CDebugOverlay::DrawGridOverlay()
 T CDebugOverlay::DrawOverlay(CDebugOverlay::OverlayBase_t*)
 T CDebugOverlay::PurgeServerOverlays()
 T CDebugOverlay::PurgeTextOverlays()
 T CDebugOverlay::ScreenPosition(Vector const&, Vector&)
 T CDebugOverlay::ScreenPosition(float, float, Vector&)
 T CDebugSystemPanel::CDebugSystemPanel(vgui::Panel*, char const*)
 T CDebugSystemPanel::OnCommand(char const*)
 T CDebugSystemPanel::SetVisible(bool)
 T CDebugSystemPanel::~CDebugSystemPanel()
 T CDecalVertCache::FindFreeBlocks(int)
 T CDecalVertCache::StoreVertsInCache(decal_t*, CDecalVert*)
 T CDedicatedServerAPI::AddConsoleText(char*)
 T CDedicatedServerAPI::Connect(void* (*)(char const*, int*))
 T CDedicatedServerAPI::Disconnect()
 T CDedicatedServerAPI::ModInit(ModInfo_t&)
 T CDedicatedServerAPI::ModShutdown()
 T CDedicatedServerAPI::PreMinidumpCallback(void*)
 T CDedicatedServerAPI::QueryInterface(char const*)
 T CDedicatedServerAPI::RunFrame()
 T CDedicatedServerAPI::SetSubProcessID(int, int)
 T CDedicatedServerAPI::UpdateHostname(char*, int)
 T CDedicatedServerAPI::UpdateStatus(float*, int*, int*, char*, int)
 T CDefOps<CUtlSymbol>::LessFunc(CUtlSymbol const&, CUtlSymbol const&)
 T CDefOps<IMaterialVar*>::LessFunc(IMaterialVar* const&, IMaterialVar* const&)
 T CDefOps<char*>::LessFunc(char* const&, char* const&)
 T CDefOps<int>::LessFunc(int const&, int const&)
 T CDefOps<studiohdr_t const*>::LessFunc(studiohdr_t const* const&, studiohdr_t const* const&)
 T CDefOps<unsigned int>::LessFunc(unsigned int const&, unsigned int const&)
 T CDefOps<unsigned short>::LessFunc(unsigned short const&, unsigned short const&)
 T CDefOps<void*>::LessFunc(void* const&, void* const&)
 T CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 T CDefaultDataCacheClient::GetItemName(unsigned int, void const*, char*, unsigned int)
 T CDeltaBitsReader::CDeltaBitsReader(bf_read*)
 T CDeltaBitsReader::GetFieldPathBits() const
 T CDeltaBitsReader::ReadNextPropIndex()
 T CDeltaBitsReader::~CDeltaBitsReader()
 T CDeltaBitsWriter::CDeltaBitsWriter(bf_write*)
 T CDeltaBitsWriter::Finish()
 T CDeltaBitsWriter::WritePropIndex(int)
 T CDeltaBitsWriter::~CDeltaBitsWriter()
 T CDeltaEntityCache::AddDeltaBits(int, int, int, bf_write*)
 T CDeltaEntityCache::FindDeltaBits(int, int, int&)
 T CDemoActionCDTrackStart::FireAction()
 T CDemoActionCDTrackStart::GetTrack() const
 T CDemoActionCDTrackStart::Init(KeyValues*)
 T CDemoActionCDTrackStart::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionCDTrackStart::SetTrack(int)
 T CDemoActionCDTrackStart::~CDemoActionCDTrackStart()
 T CDemoActionCDTrackStop::FireAction()
 T CDemoActionCDTrackStop::~CDemoActionCDTrackStop()
 T CDemoActionChangePlaybackRate::FireAction()
 T CDemoActionChangePlaybackRate::GetPlaybackRate() const
 T CDemoActionChangePlaybackRate::Init(KeyValues*)
 T CDemoActionChangePlaybackRate::OnActionFinished()
 T CDemoActionChangePlaybackRate::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionChangePlaybackRate::SetPlaybackRate(float)
 T CDemoActionChangePlaybackRate::~CDemoActionChangePlaybackRate()
 T CDemoActionManager::AddAction(CBaseDemoAction*)
 T CDemoActionManager::DispatchEvents()
 T CDemoActionManager::GetAction(int)
 T CDemoActionManager::GetActionCount()
 T CDemoActionManager::GetCurrentDemoFile()
 T CDemoActionManager::Init()
 T CDemoActionManager::InsertFireEvent(CBaseDemoAction*)
 T CDemoActionManager::IsDirty() const
 T CDemoActionManager::OverrideView(democmdinfo_t&, int)
 T CDemoActionManager::ReloadFromDisk()
 T CDemoActionManager::RemoveAction(CBaseDemoAction*)
 T CDemoActionManager::SaveToBuffer(CUtlBuffer&)
 T CDemoActionManager::SaveToFile()
 T CDemoActionManager::SetDirty(bool)
 T CDemoActionManager::Shutdown()
 T CDemoActionManager::StartPlaying(char const*)
 T CDemoActionManager::StopPlaying()
 T CDemoActionManager::Update(bool, int, float)
 T CDemoActionManager::~CDemoActionManager()
 T CDemoActionPausePlayback::FireAction()
 T CDemoActionPausePlayback::GetPauseTime() const
 T CDemoActionPausePlayback::Init(KeyValues*)
 T CDemoActionPausePlayback::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionPausePlayback::SetPauseTime(float)
 T CDemoActionPausePlayback::~CDemoActionPausePlayback()
 T CDemoActionPlayCommands::FireAction()
 T CDemoActionPlayCommands::GetCommandStream() const
 T CDemoActionPlayCommands::Init(KeyValues*)
 T CDemoActionPlayCommands::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionPlayCommands::SetCommandStream(char const*)
 T CDemoActionPlayCommands::~CDemoActionPlayCommands()
 T CDemoActionPlaySoundStart::FireAction()
 T CDemoActionPlaySoundStart::GetSoundName() const
 T CDemoActionPlaySoundStart::Init(KeyValues*)
 T CDemoActionPlaySoundStart::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionPlaySoundStart::SetSoundName(char const*)
 T CDemoActionPlaySoundStart::~CDemoActionPlaySoundStart()
 T CDemoActionScreenFadeStart::FireAction()
 T CDemoActionScreenFadeStart::GetScreenFade()
 T CDemoActionScreenFadeStart::Init(KeyValues*)
 T CDemoActionScreenFadeStart::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionScreenFadeStart::~CDemoActionScreenFadeStart()
 T CDemoActionSkipAhead::FireAction()
 T CDemoActionSkipAhead::Init(KeyValues*)
 T CDemoActionSkipAhead::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionSkipAhead::SetSkipToTick(int)
 T CDemoActionSkipAhead::SetSkipToTime(float)
 T CDemoActionSkipAhead::Update(DemoActionTimingContext const&)
 T CDemoActionSkipAhead::~CDemoActionSkipAhead()
 T CDemoActionStopPlayback::FireAction()
 T CDemoActionStopPlayback::Update(DemoActionTimingContext const&)
 T CDemoActionStopPlayback::~CDemoActionStopPlayback()
 T CDemoActionTextMessageStart::FireAction()
 T CDemoActionTextMessageStart::GetFontName() const
 T CDemoActionTextMessageStart::GetMessageText() const
 T CDemoActionTextMessageStart::GetTextMessage()
 T CDemoActionTextMessageStart::Init(KeyValues*)
 T CDemoActionTextMessageStart::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionTextMessageStart::SetFontName(char const*)
 T CDemoActionTextMessageStart::SetMessageText(char const*)
 T CDemoActionTextMessageStart::~CDemoActionTextMessageStart()
 T CDemoActionZoom::FireAction()
 T CDemoActionZoom::Init(KeyValues*)
 T CDemoActionZoom::SaveKeysToBuffer(int, CUtlBuffer&)
 T CDemoActionZoom::Update(DemoActionTimingContext const&)
 T CDemoActionZoom::~CDemoActionZoom()
 T CDemoClassInfo::ByteSize() const
 T CDemoClassInfo::CDemoClassInfo()
 T CDemoClassInfo::Clear()
 T CDemoClassInfo::GetCachedSize() const
 T CDemoClassInfo::GetMetadata() const
 T CDemoClassInfo::IsInitialized() const
 T CDemoClassInfo::MergeFrom(CDemoClassInfo const&)
 T CDemoClassInfo::New() const
 T CDemoClassInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoClassInfo::SetCachedSize(int) const
 T CDemoClassInfo::~CDemoClassInfo()
 T CDemoClassInfo_class_t::ByteSize() const
 T CDemoClassInfo_class_t::CDemoClassInfo_class_t()
 T CDemoClassInfo_class_t::Clear()
 T CDemoClassInfo_class_t::GetCachedSize() const
 T CDemoClassInfo_class_t::GetMetadata() const
 T CDemoClassInfo_class_t::IsInitialized() const
 T CDemoClassInfo_class_t::MergeFrom(CDemoClassInfo_class_t const&)
 T CDemoClassInfo_class_t::New() const
 T CDemoClassInfo_class_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoClassInfo_class_t::SetCachedSize(int) const
 T CDemoClassInfo_class_t::SharedDtor()
 T CDemoClassInfo_class_t::~CDemoClassInfo_class_t()
 T CDemoConsoleCmd::ByteSize() const
 T CDemoConsoleCmd::CDemoConsoleCmd()
 T CDemoConsoleCmd::Clear()
 T CDemoConsoleCmd::GetCachedSize() const
 T CDemoConsoleCmd::GetMetadata() const
 T CDemoConsoleCmd::IsInitialized() const
 T CDemoConsoleCmd::MergeFrom(CDemoConsoleCmd const&)
 T CDemoConsoleCmd::New() const
 T CDemoConsoleCmd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoConsoleCmd::SetCachedSize(int) const
 T CDemoConsoleCmd::~CDemoConsoleCmd()
 T CDemoCustomData::ByteSize() const
 T CDemoCustomData::CDemoCustomData()
 T CDemoCustomData::Clear()
 T CDemoCustomData::GetCachedSize() const
 T CDemoCustomData::GetMetadata() const
 T CDemoCustomData::IsInitialized() const
 T CDemoCustomData::MergeFrom(CDemoCustomData const&)
 T CDemoCustomData::New() const
 T CDemoCustomData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoCustomData::SetCachedSize(int) const
 T CDemoCustomData::~CDemoCustomData()
 T CDemoCustomDataCallbacks::ByteSize() const
 T CDemoCustomDataCallbacks::CDemoCustomDataCallbacks()
 T CDemoCustomDataCallbacks::Clear()
 T CDemoCustomDataCallbacks::GetCachedSize() const
 T CDemoCustomDataCallbacks::GetMetadata() const
 T CDemoCustomDataCallbacks::IsInitialized() const
 T CDemoCustomDataCallbacks::MergeFrom(CDemoCustomDataCallbacks const&)
 T CDemoCustomDataCallbacks::New() const
 T CDemoCustomDataCallbacks::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoCustomDataCallbacks::SetCachedSize(int) const
 T CDemoCustomDataCallbacks::~CDemoCustomDataCallbacks()
 T CDemoEditorPanel::OnRefresh()
 T CDemoEditorPanel::PopulateActionList()
 T CDemoFile::CDemoFile()
 T CDemoFile::Close()
 T CDemoFile::GetCurPos(bool)
 T CDemoFile::IsOpen()
 T CDemoFile::Open(char const*, bool, DEMOBUFFERTYPE)
 T CDemoFile::ReadDemoHeader()
 T CDemoFile::ReadMessage(IDemoMessage*, bool, int*, int*)
 T CDemoFile::ReadMessageType(int*, bool*)
 T CDemoFile::SeekTo(int, bool)
 T CDemoFile::WriteFileBytes(void*, int)
 T CDemoFile::WriteMessage(IDemoMessage&, int, EDemoCommands)
 T CDemoFile::~CDemoFile()
 T CDemoFileHeader::ByteSize() const
 T CDemoFileHeader::CDemoFileHeader()
 T CDemoFileHeader::Clear()
 T CDemoFileHeader::GetCachedSize() const
 T CDemoFileHeader::GetMetadata() const
 T CDemoFileHeader::IsInitialized() const
 T CDemoFileHeader::MergeFrom(CDemoFileHeader const&)
 T CDemoFileHeader::New() const
 T CDemoFileHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoFileHeader::SetCachedSize(int) const
 T CDemoFileHeader::SharedCtor()
 T CDemoFileHeader::SharedDtor()
 T CDemoFileHeader::~CDemoFileHeader()
 T CDemoFileInfo::ByteSize() const
 T CDemoFileInfo::CDemoFileInfo()
 T CDemoFileInfo::Clear()
 T CDemoFileInfo::GetCachedSize() const
 T CDemoFileInfo::GetMetadata() const
 T CDemoFileInfo::IsInitialized() const
 T CDemoFileInfo::MergeFrom(CDemoFileInfo const&)
 T CDemoFileInfo::New() const
 T CDemoFileInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoFileInfo::SetCachedSize(int) const
 T CDemoFileInfo::~CDemoFileInfo()
 T CDemoFullPacket::ByteSize() const
 T CDemoFullPacket::CDemoFullPacket()
 T CDemoFullPacket::Clear()
 T CDemoFullPacket::GetCachedSize() const
 T CDemoFullPacket::GetMetadata() const
 T CDemoFullPacket::IsInitialized() const
 T CDemoFullPacket::MergeFrom(CDemoFullPacket const&)
 T CDemoFullPacket::New() const
 T CDemoFullPacket::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoFullPacket::SetCachedSize(int) const
 T CDemoFullPacket::~CDemoFullPacket()
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::GetName() const
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::GetType() const
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::ToString() const
 T CDemoMessagePB<(EDemoCommands)0, CDemoStop>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::GetName() const
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::GetType() const
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::ToString() const
 T CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::GetName() const
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::GetType() const
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::ToString() const
 T CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::GetName() const
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::GetType() const
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::ToString() const
 T CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::GetName() const
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::GetType() const
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::ToString() const
 T CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::GetName() const
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::GetType() const
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::ToString() const
 T CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::GetName() const
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::GetType() const
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::ToString() const
 T CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::GetName() const
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::GetType() const
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::ToString() const
 T CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::GetName() const
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::GetType() const
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::ToString() const
 T CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::GetName() const
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::GetType() const
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::ToString() const
 T CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::GetName() const
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::GetType() const
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::ToString() const
 T CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::GetName() const
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::GetType() const
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::ToString() const
 T CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::GetName() const
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::GetType() const
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::ToString() const
 T CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::~CDemoMessagePB()
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::GetName() const
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::GetProtoMsg()
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::GetSize() const
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::GetType() const
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::ToString() const
 T CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::~CDemoMessagePB()
 T CDemoPacket::ByteSize() const
 T CDemoPacket::CDemoPacket()
 T CDemoPacket::Clear()
 T CDemoPacket::GetCachedSize() const
 T CDemoPacket::GetMetadata() const
 T CDemoPacket::IsInitialized() const
 T CDemoPacket::MergeFrom(CDemoPacket const&)
 T CDemoPacket::New() const
 T CDemoPacket::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoPacket::SetCachedSize(int) const
 T CDemoPacket::Swap(CDemoPacket*)
 T CDemoPacket::~CDemoPacket()
 T CDemoPlayer::CDemoPlayer()
 T CDemoPlayer::CheckPausedPlayback()
 T CDemoPlayer::ClearDemoScrubbingData()
 T CDemoPlayer::Disconnect()
 T CDemoPlayer::FullPacketGoto(int)
 T CDemoPlayer::GetClosestSave(int, CDemoSaveGame*)
 T CDemoPlayer::GetDemoFile()
 T CDemoPlayer::GetPacketTick()
 T CDemoPlayer::GetPlaybackDeltaTick()
 T CDemoPlayer::GetPlaybackStartTick()
 T CDemoPlayer::GetPlaybackTick()
 T CDemoPlayer::GetPlaybackTimeScale()
 T CDemoPlayer::GetTotalTicks()
 T CDemoPlayer::IsPlaybackPaused() const
 T CDemoPlayer::IsPlayingBack() const
 T CDemoPlayer::IsPlayingTimeDemo() const
 T CDemoPlayer::IsSkipping() const
 T CDemoPlayer::MarkFrame(float)
 T CDemoPlayer::NopOutMessagesForSkip(CDemoPacket*)
 T CDemoPlayer::PausePlayback(float)
 T CDemoPlayer::ReadMessage()
 T CDemoPlayer::ReadPacket()
 T CDemoPlayer::ResetDemoInterpolation()
 T CDemoPlayer::ResumePlayback()
 T CDemoPlayer::SetPlaybackTimeScale(float)
 T CDemoPlayer::SetupDemoScrubbingData(CVarBitVec const&)
 T CDemoPlayer::SkipToTick(int, bool, bool)
 T CDemoPlayer::StartPlayback(char const*, bool)
 T CDemoPlayer::StopPlayback()
 T CDemoPlayer::WriteTimeDemoResults()
 T CDemoPlayer::~CDemoPlayer()
 T CDemoRecorder::CloseDemoFile(CGameInfo const*)
 T CDemoRecorder::GetDemoFile()
 T CDemoRecorder::GetRecordingTick()
 T CDemoRecorder::IsRecording()
 T CDemoRecorder::PauseRecording()
 T CDemoRecorder::RecordCommand(char const*)
 T CDemoRecorder::RecordCustomData(int, void const*, unsigned long)
 T CDemoRecorder::RecordMessages(bf_read&, int)
 T CDemoRecorder::RecordPacket()
 T CDemoRecorder::RecordServerClasses(ServerClass*)
 T CDemoRecorder::RecordStringTables()
 T CDemoRecorder::RecordUserInput(int)
 T CDemoRecorder::ResetDemoInterpolation()
 T CDemoRecorder::ResumeRecording()
 T CDemoRecorder::SetSignonState(int)
 T CDemoRecorder::StartRecording(char const*, bool)
 T CDemoRecorder::StartupDemoFile()
 T CDemoRecorder::StopRecording(CGameInfo const*)
 T CDemoRecorder::WriteBSPDecals()
 T CDemoRecorder::WriteDemoCvars()
 T CDemoRecorder::WriteNetMessage(INetMessage const&)
 T CDemoRecorder::~CDemoRecorder()
 T CDemoSaveGame::ByteSize() const
 T CDemoSaveGame::CDemoSaveGame()
 T CDemoSaveGame::Clear()
 T CDemoSaveGame::CopyFrom(CDemoSaveGame const&)
 T CDemoSaveGame::GetCachedSize() const
 T CDemoSaveGame::GetMetadata() const
 T CDemoSaveGame::IsInitialized() const
 T CDemoSaveGame::MergeFrom(CDemoSaveGame const&)
 T CDemoSaveGame::New() const
 T CDemoSaveGame::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoSaveGame::SetCachedSize(int) const
 T CDemoSaveGame::~CDemoSaveGame()
 T CDemoSendTables::ByteSize() const
 T CDemoSendTables::CDemoSendTables()
 T CDemoSendTables::Clear()
 T CDemoSendTables::GetCachedSize() const
 T CDemoSendTables::GetMetadata() const
 T CDemoSendTables::IsInitialized() const
 T CDemoSendTables::MergeFrom(CDemoSendTables const&)
 T CDemoSendTables::New() const
 T CDemoSendTables::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoSendTables::SetCachedSize(int) const
 T CDemoSendTables::~CDemoSendTables()
 T CDemoStop::ByteSize() const
 T CDemoStop::CDemoStop()
 T CDemoStop::Clear()
 T CDemoStop::GetCachedSize() const
 T CDemoStop::GetMetadata() const
 T CDemoStop::IsInitialized() const
 T CDemoStop::MergeFrom(CDemoStop const&)
 T CDemoStop::New() const
 T CDemoStop::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoStop::SetCachedSize(int) const
 T CDemoStop::~CDemoStop()
 T CDemoStringTables::ByteSize() const
 T CDemoStringTables::CDemoStringTables()
 T CDemoStringTables::Clear()
 T CDemoStringTables::GetCachedSize() const
 T CDemoStringTables::GetMetadata() const
 T CDemoStringTables::IsInitialized() const
 T CDemoStringTables::MergeFrom(CDemoStringTables const&)
 T CDemoStringTables::New() const
 T CDemoStringTables::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoStringTables::SetCachedSize(int) const
 T CDemoStringTables::~CDemoStringTables()
 T CDemoStringTables_items_t::ByteSize() const
 T CDemoStringTables_items_t::CDemoStringTables_items_t()
 T CDemoStringTables_items_t::Clear()
 T CDemoStringTables_items_t::GetCachedSize() const
 T CDemoStringTables_items_t::GetMetadata() const
 T CDemoStringTables_items_t::IsInitialized() const
 T CDemoStringTables_items_t::MergeFrom(CDemoStringTables_items_t const&)
 T CDemoStringTables_items_t::New() const
 T CDemoStringTables_items_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoStringTables_items_t::SetCachedSize(int) const
 T CDemoStringTables_items_t::SharedDtor()
 T CDemoStringTables_items_t::~CDemoStringTables_items_t()
 T CDemoStringTables_table_t::ByteSize() const
 T CDemoStringTables_table_t::CDemoStringTables_table_t()
 T CDemoStringTables_table_t::Clear()
 T CDemoStringTables_table_t::GetCachedSize() const
 T CDemoStringTables_table_t::GetMetadata() const
 T CDemoStringTables_table_t::IsInitialized() const
 T CDemoStringTables_table_t::MergeFrom(CDemoStringTables_table_t const&)
 T CDemoStringTables_table_t::New() const
 T CDemoStringTables_table_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoStringTables_table_t::SetCachedSize(int) const
 T CDemoStringTables_table_t::~CDemoStringTables_table_t()
 T CDemoSyncTick::ByteSize() const
 T CDemoSyncTick::CDemoSyncTick()
 T CDemoSyncTick::Clear()
 T CDemoSyncTick::GetCachedSize() const
 T CDemoSyncTick::GetMetadata() const
 T CDemoSyncTick::IsInitialized() const
 T CDemoSyncTick::MergeFrom(CDemoSyncTick const&)
 T CDemoSyncTick::New() const
 T CDemoSyncTick::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoSyncTick::SetCachedSize(int) const
 T CDemoSyncTick::~CDemoSyncTick()
 T CDemoUserCmd::ByteSize() const
 T CDemoUserCmd::CDemoUserCmd()
 T CDemoUserCmd::Clear()
 T CDemoUserCmd::GetCachedSize() const
 T CDemoUserCmd::GetMetadata() const
 T CDemoUserCmd::IsInitialized() const
 T CDemoUserCmd::MergeFrom(CDemoUserCmd const&)
 T CDemoUserCmd::New() const
 T CDemoUserCmd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CDemoUserCmd::SetCachedSize(int) const
 T CDemoUserCmd::~CDemoUserCmd()
 T CDevShotGenerator::BuildMapList()
 T CDevShotGenerator::NextMap()
 T CDevShotGenerator::StartDevShotGeneration()
 T CDevShotGenerator::~CDevShotGenerator()
 T CDiskDemoBuffer::DumpToFile(char const*, protodemoheader_t const&) const
 T CDiskDemoBuffer::Get(void*, int)
 T CDiskDemoBuffer::GetVarInt()
 T CDiskDemoBuffer::Init(DemoBufferInitParams_t const&)
 T CDiskDemoBuffer::IsInitialized() const
 T CDiskDemoBuffer::IsValid() const
 T CDiskDemoBuffer::NotifyBeginFrame()
 T CDiskDemoBuffer::NotifyEndFrame()
 T CDiskDemoBuffer::NotifySignonComplete()
 T CDiskDemoBuffer::Put(void const*, int)
 T CDiskDemoBuffer::PutVarInt(unsigned int)
 T CDiskDemoBuffer::SeekGet(bool, int)
 T CDiskDemoBuffer::SeekPut(bool, int)
 T CDiskDemoBuffer::TellGet() const
 T CDiskDemoBuffer::TellMaxPut() const
 T CDiskDemoBuffer::TellPut() const
 T CDiskDemoBuffer::UpdateStartTick(int&) const
 T CDiskDemoBuffer::~CDiskDemoBuffer()
 T CDispCollTree::AABBTree_BuildTreeTrisInSphere_r(Vector const&, float, int, unsigned short*, unsigned short)
 T CDispCollTree::AABBTree_CopyDispData(CCoreDispInfo*)
 T CDispCollTree::AABBTree_Create(CCoreDispInfo*)
 T CDispCollTree::AABBTree_CreateLeafs()
 T CDispCollTree::AABBTree_GenerateBoxes_r(int, Vector*, Vector*)
 T CDispCollTree::AABBTree_GetTrisInSphere(Vector const&, float, unsigned short*, int)
 T CDispCollTree::AABBTree_IntersectAABB(Vector const&, Vector const&)
 T CDispCollTree::AABBTree_Ray(Ray_t const&, RayDispOutput_t&)
 T CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, CBaseTrace*, bool)
 T CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, RayDispOutput_t&)
 T CDispCollTree::AABBTree_SweepAABB(Ray_t const&, Vector const&, CBaseTrace*)
 T CDispCollTree::AABBTree_TreeTrisRayBarycentricTest(Ray_t const&, Vector const&, int, RayDispOutput_t&, CDispCollTri**)
 T CDispCollTree::AABBTree_TreeTrisRayTest(Ray_t const&, Vector const&, int, CBaseTrace*, bool, CDispCollTri**)
 T CDispCollTree::AddPlane(Vector const&)
 T CDispCollTree::Cache()
 T CDispCollTree::Cache_Create(CDispCollTri*, int)
 T CDispCollTree::Create(CCoreDispInfo*)
 T CDispCollTree::GetVirtualMeshList(virtualmeshlist_t*)
 T CDispCollTree::PointInBounds(Vector const&, Vector const&, Vector const&, bool)
 T CDispCollTree::SweepAABBTriIntersect(Ray_t const&, Vector const&, int, CDispCollTri*, CBaseTrace*)
 T CDispCollTree::~CDispCollTree()
 T CDispCollTri::CalcPlane(CDispVector<Vector>&)
 T CDispCollTri::FindMinMax(CDispVector<Vector>&)
 T CDispInfo::AddDynamicLights(dlight_t*, unsigned int)
 T CDispInfo::AddShadowDecal(unsigned short)
 T CDispInfo::AddSingleDynamicAlphaLight(dlight_t&)
 T CDispInfo::AddSingleDynamicLight(dlight_t&)
 T CDispInfo::AddSingleDynamicLightBumped(dlight_t&)
 T CDispInfo::AllocateDispDecalFragment(unsigned short, int)
 T CDispInfo::AllocateShadowDecalFragment(unsigned short, int)
 T CDispInfo::CDispInfo()
 T CDispInfo::ClearAllDecalFragments()
 T CDispInfo::ClearAllShadowDecalFragments()
 T CDispInfo::ComputeDynamicLightMask(dlight_t*)
 T CDispInfo::ComputeLightmapAndTextureCoordinate(RayDispOutput_t const&, Vector2D*, Vector2D*)
 T CDispInfo::ComputeShadowFragments(unsigned short, int&, int&)
 T CDispInfo::CopyCoreDispData(model_t*, MaterialSystem_SortInfo_t const*, CCoreDispInfo const*, bool)
 T CDispInfo::CopyCoreDispVertData(CCoreDispInfo const*, float)
 T CDispInfo::CopyMapDispData(ddispinfo_t const*)
 T CDispInfo::FindNodesInShadowFrustum(Frustum_t const&, unsigned short*, int*, int, int)
 T CDispInfo::GenerateDecalFragments_R(CVertIndex const&, int, unsigned short, CDispDecalBase*, int)
 T CDispInfo::GetBoundingBox(Vector&, Vector&)
 T CDispInfo::GetCornerNeighbors(int)
 T CDispInfo::GetDispUtilsByIndex(int)
 T CDispInfo::GetEdgeNeighbor(int)
 T CDispInfo::GetFlatVert(int)
 T CDispInfo::GetIntersectingSurfaces(GetIntersectingSurfaces_Struct*)
 T CDispInfo::GetParent()
 T CDispInfo::GetPowerInfo() const
 T CDispInfo::GetTag()
 T CDispInfo::InitializeActiveVerts()
 T CDispInfo::NotifyAddDecal(decal_t*, float)
 T CDispInfo::NotifyRemoveDecal(unsigned short)
 T CDispInfo::NumLightMaps()
 T CDispInfo::RemoveShadowDecal(unsigned short)
 T CDispInfo::Render(CGroupMesh*, bool)
 T CDispInfo::RenderWireframeInLightmapPage(int)
 T CDispInfo::SetParent(msurface2_t*)
 T CDispInfo::SetTag()
 T CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)
 T CDispInfo::SetupDecalNodeIntersect_R(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*, int, CDecalNodeSetupCache*)
 T CDispInfo::SpecifyBuildableDynamicMesh()
 T CDispInfo::SpecifyDynamicMesh()
 T CDispInfo::SpecifyWalkableDynamicMesh()
 T CDispInfo::TesselateDisplacement()
 T CDispInfo::TestAddDecalTri(int, unsigned short, CDispDecal*)
 T CDispInfo::TestAddDecalTri(int, unsigned short, CDispShadowDecal*)
 T CDispInfo::TestRay(Ray_t const&, float, float, float&, Vector2D*, Vector2D*)
 T CDispInfo::UpdateBoundingBox()
 T CDispInfo::UpdateNodeBoundingBoxes_R(CVertIndex const&, int, int)
 T CDispInfo::~CDispInfo()
 T CDispLeafBuilder::BuildLeafListForDisplacement(int)
 T CDispLeafBuilder::CDispLeafBuilder(CCollisionBSPData*)
 T CDispLeafBuilder::WriteLeafList(unsigned short*)
 T CDispUtilsHelper::GetPower() const
 T CDmxAttribute::AllocateDataMemory(DmAttributeType_t)
 T CDmxAttribute::AllocateDataMemory_AndConstruct(DmAttributeType_t)
 T CDmxAttribute::CDmxAttribute(char const*)
 T CDmxAttribute::FreeDataMemory()
 T CDmxAttribute::GetArrayCount() const
 T CDmxAttribute::GetName() const
 T CDmxAttribute::Serialize(CUtlBuffer&) const
 T CDmxAttribute::SerializeElement(int, CUtlBuffer&) const
 T CDmxAttribute::SerializesOnMultipleLines() const
 T CDmxAttribute::SetValue(char const*)
 T CDmxAttribute::Unserialize(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::UnserializeElement(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::~CDmxAttribute()
 T CDmxElement::AddAttribute(char const*)
 T CDmxElement::AddElementsToDelete(CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxElement::AttributeCount() const
 T CDmxElement::CDmxElement(char const*)
 T CDmxElement::GetAttribute(char const*)
 T CDmxElement::GetAttribute(char const*) const
 T CDmxElement::GetAttribute(int)
 T CDmxElement::GetId() const
 T CDmxElement::GetName() const
 T CDmxElement::GetTypeString() const
 T CDmxElement::HasAttribute(char const*) const
 T CDmxElement::LockForChanges(bool)
 T CDmxElement::RemoveAllElementsRecursive()
 T CDmxElement::Resort() const
 T CDmxElement::SetId(UniqueId_t const&)
 T CDmxElement::SetName(char const*)
 T CDmxElement::~CDmxElement()
 T CDmxElementDictionary::AddArrayAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::AddAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::Clear()
 T CDmxElementDictionary::HookUpElementArrayAttributes()
 T CDmxElementDictionary::HookUpElementReferences()
 T CDmxElementDictionary::InsertElement(CDmxElement*)
 T CDmxKeyValues2ErrorStack::ReportError(char const*, ...)
 T CDmxSerializationDictionary::BuildElementList(CDmxElement*, bool)
 T CDmxSerializationDictionary::BuildElementList_R(CDmxElement*, bool, bool)
 T CDmxSerializationDictionary::CDmxSerializationDictionary(int)
 T CDmxSerializationDictionary::Find(CDmxElement*)
 T CDmxSerializationDictionary::FirstRootElement() const
 T CDmxSerializationDictionary::GetRootElement(int)
 T CDmxSerializationDictionary::LessFunc(CDmxSerializationDictionary::DmxElementInfo_t const&, CDmxSerializationDictionary::DmxElementInfo_t const&)
 T CDmxSerializationDictionary::NextRootElement(int) const
 T CDmxSerializationDictionary::RootElementCount() const
 T CDmxSerializationDictionary::ShouldInlineElement(CDmxElement*)
 T CDmxSerializer::Dme_GetStringFromBuffer(CUtlBuffer&, bool, int, int*, char*)
 T CDmxSerializer::GatherSymbols(CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>*, CDmxElement*)
 T CDmxSerializer::SaveElement(CUtlBuffer&, CDmxSerializationDictionary&, CUtlDict<int, int>*, CDmxElement*)
 T CDmxSerializer::SaveElementDict(CUtlBuffer&, CUtlDict<int, int>*, CDmxElement*)
 T CDmxSerializer::Serialize(CUtlBuffer&, CDmxElement*, char const*)
 T CDmxSerializer::SerializeElementArrayAttribute(CUtlBuffer&, CDmxSerializationDictionary&, CDmxAttribute*)
 T CDmxSerializer::SerializeElementIndex(CUtlBuffer&, CDmxSerializationDictionary&, CDmxElement*)
 T CDmxSerializer::Unserialize(CUtlBuffer&, int, CDmxElement**)
 T CDmxSerializer::UnserializeAttributes(CUtlBuffer&, CDmxElement*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&, int, int*, char*, int)
 T CDmxSerializer::UnserializeElementArrayAttribute(CUtlBuffer&, CDmxAttribute*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializer::UnserializeElementIndex(CUtlBuffer&, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializerKeyValues2::EatWhitespacesAndComments(CUtlBuffer&)
 T CDmxSerializerKeyValues2::ReadToken(CUtlBuffer&, CUtlBuffer&)
 T CDmxSerializerKeyValues2::SaveElement(CUtlBuffer&, CDmxSerializationDictionary&, CDmxElement*, bool)
 T CDmxSerializerKeyValues2::Serialize(CUtlBuffer&, CDmxElement*, char const*)
 T CDmxSerializerKeyValues2::SerializeArrayAttribute(CUtlBuffer&, CDmxAttribute*)
 T CDmxSerializerKeyValues2::SerializeAttributes(CUtlBuffer&, CDmxSerializationDictionary&, CDmxElement*)
 T CDmxSerializerKeyValues2::SerializeElementArrayAttribute(CUtlBuffer&, CDmxSerializationDictionary&, CDmxAttribute*)
 T CDmxSerializerKeyValues2::SerializeElementAttribute(CUtlBuffer&, CDmxSerializationDictionary&, CDmxAttribute*)
 T CDmxSerializerKeyValues2::Unserialize(char const*, CUtlBuffer&, CDmxElement**)
 T CDmxSerializerKeyValues2::UnserializeArrayAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttributeValueFromToken(CDmxAttribute*, DmAttributeType_t, CUtlBuffer&)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, char const*, int*)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, int*)
 T CDmxSerializerKeyValues2::UnserializeElementArrayAttribute(CUtlBuffer&, int, char const*)
 T CDmxSerializerKeyValues2::UnserializeElementAttribute(CUtlBuffer&, int, char const*, char const*)
 T CDmxSerializerKeyValues2::UnserializeId(CUtlBuffer&, int)
 T CDownloadListGenerator::ForceExactFile(char const*, ConsistencyType)
 T CDownloadListGenerator::ForceModelBounds(char const*, Vector const&, Vector const&)
 T CDownloadListGenerator::OnLevelLoadEnd()
 T CDownloadListGenerator::OnLevelLoadStart(char const*)
 T CDownloadListGenerator::OnResourcePrecached(char const*)
 T CDownloadListGenerator::SetStringTable(INetworkStringTable*)
 T CDownloadListGenerator::~CDownloadListGenerator()
 T CDragDropHelperPanel::AddPanel(vgui::Panel*)
 T CDragDropHelperPanel::CDragDropHelperPanel()
 T CDragDropHelperPanel::GetAnimMap()
 T CDragDropHelperPanel::GetKBMap()
 T CDragDropHelperPanel::GetMessageMap()
 T CDragDropHelperPanel::GetPanelClassName()
 T CDragDropHelperPanel::IsWithinTraverse(int, int, bool)
 T CDragDropHelperPanel::PostChildPaint(IVGuiPaintSurface*)
 T CDragDropHelperPanel::RemovePanel(vgui::Panel*)
 T CDragDropHelperPanel::~CDragDropHelperPanel()
 T CDrawTreeFrame::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CDrawTreeFrame::CDrawTreeFrame(vgui::Panel*, char const*)
 T CDrawTreeFrame::GetAnimMap()
 T CDrawTreeFrame::GetKBMap()
 T CDrawTreeFrame::GetMessageMap()
 T CDrawTreeFrame::GetPanelClassName()
 T CDrawTreeFrame::OnClose()
 T CDrawTreeFrame::OnItemDoublePressed(int, int)
 T CDrawTreeFrame::OnItemSelected()
 T CDrawTreeFrame::PerformLayout()
 T CDrawTreeFrame::RecalculateSelectedHighlight()
 T CDrawTreeFrame::~CDrawTreeFrame()
 T CDummySfx::getname(char*, unsigned long)
 T CEdgeList::AddEdge(Vector**, int)
 T CEdgeList::AddSurface(cplane_t const&)
 T CEdgeList::CullSmallOccluders()
 T CEdgeList::IntroduceNewActiveEdges(float)
 T CEdgeList::LocateEdgeCrossingDiscontinuity(float, float, int&, CEdgeList::Edge_t**)
 T CEdgeList::ReduceActiveEdgeList(CWingedEdgeList&, float, float)
 T CEdgeList::ReduceActiveList(CWingedEdgeList&)
 T CEdgeList::ReorderActiveEdgeList(int, CEdgeList::Edge_t**)
 T CEdgeList::SurfCompare(void const*, void const*)
 T CEmptyConVar::GetName() const
 T CEmptyConVar::IsFlagSet(int) const
 T CEmptyConVar::SetValue(char const*)
 T CEmptyConVar::SetValue(float)
 T CEmptyConVar::SetValue(int)
 T CEmptyConVar::~CEmptyConVar()
 T CEngine::FilterTime(float)
 T CEngine::Frame()
 T CEngine::GetCurTime()
 T CEngine::GetFrameTime()
 T CEngine::GetQuitting()
 T CEngine::GetState()
 T CEngine::Load(bool, char const*)
 T CEngine::SetNextState(IEngine::EngineState_t)
 T CEngine::SetQuitting(int)
 T CEngine::Unload()
 T CEngine::~CEngine()
 T CEngineAPI::ActivateSimulation(bool)
 T CEngineAPI::Connect(void* (*)(char const*, int*))
 T CEngineAPI::Disconnect()
 T CEngineAPI::HandleSetModeError()
 T CEngineAPI::Init()
 T CEngineAPI::IsRunningSimulation() const
 T CEngineAPI::ModInit(char const*, char const*)
 T CEngineAPI::OnStartup(void*, char const*)
 T CEngineAPI::PostConsoleCommand(char const*)
 T CEngineAPI::QueryInterface(char const*)
 T CEngineAPI::Run()
 T CEngineAPI::RunListenServer()
 T CEngineAPI::RunSingleLoop(bool&)
 T CEngineAPI::SetEngineWindow(void*)
 T CEngineAPI::SetMap(char const*)
 T CEngineAPI::SetStartupInfo(StartupInfo_t&)
 T CEngineAPI::Shutdown()
 T CEngineBSPTree::EnumerateLeavesAlongRay(Ray_t const&, ISpatialLeafEnumerator*, int)
 T CEngineBSPTree::EnumerateLeavesAtPoint(Vector const&, ISpatialLeafEnumerator*, int)
 T CEngineBSPTree::EnumerateLeavesInBox(Vector const&, Vector const&, ISpatialLeafEnumerator*, int)
 T CEngineBSPTree::EnumerateLeavesInSphere(Vector const&, float, ISpatialLeafEnumerator*, int)
 T CEngineBSPTree::EnumerateLeavesInSphereWithFlagSet(Vector const&, float, ISpatialLeafEnumerator*, int, int)
 T CEngineBSPTree::LeafCount() const
 T CEngineBSPTree::ListLeavesInBox(Vector const&, Vector const&, unsigned short*, int)
 T CEngineBSPTree::ListLeavesInSphereWithFlagSet(int*, Vector const&, float, int, unsigned short const*, int, int)
 T CEngineBugReporter::ClearBugSubmissionCount()
 T CEngineBugReporter::GetBugSubmissionCount() const
 T CEngineBugReporter::Init()
 T CEngineBugReporter::InstallBugReportingUI(vgui::Panel*, IEngineBugReporter::BR_TYPE)
 T CEngineBugReporter::IsVisible() const
 T CEngineBugReporter::ShouldPause() const
 T CEngineBugReporter::Shutdown()
 T CEngineClient::ActivateOccluder(int, bool)
 T CEngineClient::AddFileToZip(HZIP__*, char const*)
 T CEngineClient::AddPhonemeFile(char const*)
 T CEngineClient::BeginRenderTest()
 T CEngineClient::CheckDoneKeyTrapping(ButtonCode_t&)
 T CEngineClient::CheckDoneMultiKeyTrapping(CUtlVector<ButtonCode_t, CUtlMemory<ButtonCode_t, int> >&)
 T CEngineClient::CheckPoint(char const*)
 T CEngineClient::ClearBugSubmissionCount()
 T CEngineClient::ClientCmd(char const*)
 T CEngineClient::ClientCmd_Unrestricted(char const*)
 T CEngineClient::CloseZipZ(HZIP__*)
 T CEngineClient::ComputeDynamicLighting(Vector const&, Vector const*, Vector&)
 T CEngineClient::ComputeLeavesConnected(Vector const&, int, int const*, bool*)
 T CEngineClient::ComputeLighting(Vector const&, Vector const*, bool, Vector&, Vector*)
 T CEngineClient::ComputeLightingCube(Vector const&, bool, Vector*)
 T CEngineClient::Con_IsVisible()
 T CEngineClient::Con_NPrintf(int, char const*, ...)
 T CEngineClient::Con_NXPrintf(con_nprint_s const*, char const*, ...)
 T CEngineClient::ConfigureSystemLevel(int, int)
 T CEngineClient::CopyFile(char const*, char const*)
 T CEngineClient::CopyFrameBufferToMaterial(char const*)
 T CEngineClient::CreateZipZ(char const*)
 T CEngineClient::CullBox(Vector const&, Vector const&)
 T CEngineClient::DSPGetCurrentDASRoomChanged()
 T CEngineClient::DSPGetCurrentDASRoomNew()
 T CEngineClient::DSPGetCurrentDASRoomSkyAbove()
 T CEngineClient::DSPGetCurrentDASRoomSkyPercent()
 T CEngineClient::DebugDrawPhysCollide(CPhysCollide const*, IMaterial*, matrix3x4_t const&, color32 const&)
 T CEngineClient::DecompressBZipFile(char const*, char const*)
 T CEngineClient::DecompressBZipToDisk(char const*, char const*, char*, int)
 T CEngineClient::DemoFrame(float)
 T CEngineClient::DoesBoxTouchAreaFrustum(Vector const&, Vector const&, int)
 T CEngineClient::DoesLevelContainWater() const
 T CEngineClient::DrawPortals()
 T CEngineClient::EnablePaintmapRender()
 T CEngineClient::EndRenderTest()
 T CEngineClient::EngineStats_BeginFrame()
 T CEngineClient::EngineStats_EndFrame()
 T CEngineClient::ExecuteClientCmd(char const*)
 T CEngineClient::FireEvents()
 T CEngineClient::FirstValidSplitScreenSlot()
 T CEngineClient::FlashWindow()
 T CEngineClient::ForceOpenClientDefaultPort()
 T CEngineClient::ForceOpenServerPort()
 T CEngineClient::GameLumpSize(int) const
 T CEngineClient::GameLumpVersion(int) const
 T CEngineClient::GetAchievementMgr()
 T CEngineClient::GetActiveSplitScreenPlayerSlot()
 T CEngineClient::GetAmbientLightColor(Vector&)
 T CEngineClient::GetAppID()
 T CEngineClient::GetBSPTreeQuery()
 T CEngineClient::GetBudgetGroupTimes(float*)
 T CEngineClient::GetBugSubmissionCount() const
 T CEngineClient::GetChapterName(char*, int)
 T CEngineClient::GetClientVersion() const
 T CEngineClient::GetDXSupportLevel()
 T CEngineClient::GetDemoPacketTick()
 T CEngineClient::GetDemoPlaybackFileName()
 T CEngineClient::GetDemoPlaybackStartTick()
 T CEngineClient::GetDemoPlaybackTick()
 T CEngineClient::GetDemoPlaybackTimeScale()
 T CEngineClient::GetDemoPlaybackTotalTicks()
 T CEngineClient::GetDemoRecordingTick()
 T CEngineClient::GetEngineBuildNumber()
 T CEngineClient::GetFrustumList(Frustum_t**, int)
 T CEngineClient::GetGameDirectory()
 T CEngineClient::GetGamestatsData()
 T CEngineClient::GetHTTPDownloadProgress(unsigned int, int&, int&)
 T CEngineClient::GetInputContext(EngineInputContextId_t)
 T CEngineClient::GetInstantReplayMaxTick()
 T CEngineClient::GetInstantReplayMinTick()
 T CEngineClient::GetInstantReplayPlaybackDeltaTick()
 T CEngineClient::GetIntersectingSurfaces(model_t const*, Vector const&, float, bool, SurfInfo*, int)
 T CEngineClient::GetLastMouseMoveTime()
 T CEngineClient::GetLastTimeStamp()
 T CEngineClient::GetLeavesArea(unsigned short*, int)
 T CEngineClient::GetLevelName()
 T CEngineClient::GetLevelNameShort()
 T CEngineClient::GetLightForPoint(Vector const&, bool)
 T CEngineClient::GetLightForPointFast(Vector const&, bool)
 T CEngineClient::GetLocalPlayer()
 T CEngineClient::GetMainMenuBackgroundName(char*, int)
 T CEngineClient::GetMainWindow()
 T CEngineClient::GetMapEntitiesString()
 T CEngineClient::GetMaxClients()
 T CEngineClient::GetMixGroupIndex(char const*)
 T CEngineClient::GetMixLayerIndex(char const*)
 T CEngineClient::GetMostRecentSaveGame()
 T CEngineClient::GetMouseDelta(int&, int&, bool)
 T CEngineClient::GetNetChannelInfo()
 T CEngineClient::GetPitchScale()
 T CEngineClient::GetPlayerForUserID(int)
 T CEngineClient::GetPlayerInfo(int, player_info_s*)
 T CEngineClient::GetProductVersionString()
 T CEngineClient::GetScreenAspectRatio(int, int)
 T CEngineClient::GetScreenSize(int&, int&)
 T CEngineClient::GetSentence(CAudioSource*)
 T CEngineClient::GetSentenceLength(CAudioSource*)
 T CEngineClient::GetServerSimulationFrameTime() const
 T CEngineClient::GetSinglePlayerSharedMemorySpace(char const*, int)
 T CEngineClient::GetSplitScreenPlayer(int)
 T CEngineClient::GetSteamAPIContext()
 T CEngineClient::GetTimescale() const
 T CEngineClient::GetUILanguage(char*, int)
 T CEngineClient::GetViewAngles(QAngle&)
 T CEngineClient::GetVoiceTweakAPI()
 T CEngineClient::GrabPreColorCorrectedFrame(int, int, int, int)
 T CEngineClient::HTTPFileExists(char const*)
 T CEngineClient::HideLoadingPlaque()
 T CEngineClient::IsActiveApp()
 T CEngineClient::IsBoxInViewCluster(Vector const&, Vector const&)
 T CEngineClient::IsBoxVisible(Vector const&, Vector const&)
 T CEngineClient::IsClientLocalToActiveServer()
 T CEngineClient::IsConnected()
 T CEngineClient::IsCreatingReslist()
 T CEngineClient::IsCreatingXboxReslist()
 T CEngineClient::IsDemoPaused()
 T CEngineClient::IsDemoSkipping()
 T CEngineClient::IsDrawingLoadingImage()
 T CEngineClient::IsHLTV()
 T CEngineClient::IsHammerRunning() const
 T CEngineClient::IsInCommentaryMode()
 T CEngineClient::IsInEditMode()
 T CEngineClient::IsInGame()
 T CEngineClient::IsLevelMainMenuBackground()
 T CEngineClient::IsLocalPlayerResolvable()
 T CEngineClient::IsLowViolence()
 T CEngineClient::IsOccluded(Vector const&, Vector const&)
 T CEngineClient::IsPaused()
 T CEngineClient::IsPlayingDemo()
 T CEngineClient::IsPlayingTimeDemo()
 T CEngineClient::IsRecordingDemo()
 T CEngineClient::IsReplay()
 T CEngineClient::IsSaveInProgress()
 T CEngineClient::IsSkyboxVisibleFromPoint(Vector const&)
 T CEngineClient::IsSplitScreenActive()
 T CEngineClient::IsStreaming(CAudioSource*) const
 T CEngineClient::IsTakingScreenshot()
 T CEngineClient::IsTransitioningToLoad()
 T CEngineClient::IsValidSplitScreenSlot(int)
 T CEngineClient::Key_BindingForKey(ButtonCode_t)
 T CEngineClient::Key_LookupBinding(char const*)
 T CEngineClient::Key_LookupBindingEx(char const*, int, int, int)
 T CEngineClient::LevelLeafCount() const
 T CEngineClient::LightStyleValue(int)
 T CEngineClient::LinearToGamma(float*, float*)
 T CEngineClient::LoadDemo(char const*, bool)
 T CEngineClient::LoadFilmmaker()
 T CEngineClient::LoadGameLump(int, void*, int)
 T CEngineClient::LoadModel(char const*, bool)
 T CEngineClient::MapHasHDRLighting()
 T CEngineClient::MapLoadFailed()
 T CEngineClient::Mat_Stub(IMaterialSystem*)
 T CEngineClient::NextValidSplitScreenSlot(int)
 T CEngineClient::OnStorageDeviceAttached(int)
 T CEngineClient::OnStorageDeviceDetached(int)
 T CEngineClient::PaintSurface(model_t const*, Vector const&, Color const&, float)
 T CEngineClient::ParseFile(char const*, char*, int)
 T CEngineClient::QueueHTTPDownload(char const*, char const*)
 T CEngineClient::ReadConfiguration(int, bool)
 T CEngineClient::RecalculateBSPLeafFlags()
 T CEngineClient::RecordDemoCustomData(void (*)(unsigned char*, unsigned long), void const*, unsigned long)
 T CEngineClient::RegisterDemoCustomDataCallback(string_t, void (*)(unsigned char*, unsigned long))
 T CEngineClient::RemoveAllPaint()
 T CEngineClient::RenderDemoFrame()
 T CEngineClient::ResetDemoInterpolation()
 T CEngineClient::SOSGetOpvarFloat(char const*, float&)
 T CEngineClient::SOSSetOpvarFloat(char const*, float)
 T CEngineClient::SaveAllocMemory(unsigned long, unsigned long)
 T CEngineClient::SaveFreeMemory(void*)
 T CEngineClient::SearchPathsChangedAfterInstall()
 T CEngineClient::SendClientOOBPacket(ns_address const&, void const*, int)
 T CEngineClient::SentenceGroupIndexFromName(char const*)
 T CEngineClient::SentenceGroupNameFromIndex(int)
 T CEngineClient::SentenceGroupPick(int, char*, int)
 T CEngineClient::SentenceGroupPickSequential(int, char*, int, int, int)
 T CEngineClient::SentenceIndexFromName(char const*)
 T CEngineClient::SentenceLength(int)
 T CEngineClient::SentenceNameFromIndex(int)
 T CEngineClient::ServerCmd(char const*, bool)
 T CEngineClient::SetAchievementMgr(IAchievementMgr*)
 T CEngineClient::SetActiveSplitScreenPlayerSlot(int)
 T CEngineClient::SetAudioState(AudioState_t const&)
 T CEngineClient::SetBlurFade(float)
 T CEngineClient::SetDemoTime(float)
 T CEngineClient::SetDisplacementVisibility(int, bool)
 T CEngineClient::SetGamestatsData(CGamestatsData*)
 T CEngineClient::SetLeafFlag(int, int)
 T CEngineClient::SetLocalPlayerIsResolvable(char const*, int, bool)
 T CEngineClient::SetMapLoadFailed(bool)
 T CEngineClient::SetMixGroupOfCurrentMixer(char const*, char const*, float, int)
 T CEngineClient::SetMixLayerLevel(int, float)
 T CEngineClient::SetMixLayerTriggerFactor(char const*, char const*, float)
 T CEngineClient::SetMixLayerTriggerFactor(int, int, float)
 T CEngineClient::SetMostRecentSaveGame(char const*)
 T CEngineClient::SetMouseWindowLock(bool)
 T CEngineClient::SetOcclusionParameters(OcclusionParams_t const&)
 T CEngineClient::SetOverlayBindProxy(int, void*)
 T CEngineClient::SetPitchScale(float)
 T CEngineClient::SetRestrictClientCommands(bool)
 T CEngineClient::SetRestrictServerCommands(bool)
 T CEngineClient::SetTime(float)
 T CEngineClient::SetTimescale(float)
 T CEngineClient::SetViewAngles(QAngle&)
 T CEngineClient::SolidMoved(CEntityIndex, ICollideable*, Vector const*, bool)
 T CEngineClient::Sound_ExtraUpdate()
 T CEngineClient::StartKeyTrapMode()
 T CEngineClient::StartMultiKeyTrapMode(CUtlVector<ButtonCode_t, CUtlMemory<ButtonCode_t, int> >&)
 T CEngineClient::StartXboxExitingProcess()
 T CEngineClient::StopDemo()
 T CEngineClient::SubmitStatRecord(char const*, unsigned int, unsigned int, void const*)
 T CEngineClient::SupportsHDR()
 T CEngineClient::TextMessageGet(char const*)
 T CEngineClient::TickProgressBar()
 T CEngineClient::TraceLineMaterialAndLighting(Vector const&, Vector const&, Vector&, Vector&)
 T CEngineClient::TracePaintSurface(model_t const*, Vector const&, float, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T CEngineClient::TriggerMoved(CEntityIndex, bool)
 T CEngineClient::UnloadFilmmaker()
 T CEngineClient::UnzipZip(char const*, char const*, char const*, bool, bool, bool)
 T CEngineClient::UpdateDAndELights()
 T CEngineClient::WorldToScreenMatrix()
 T CEngineClient::WorldToViewMatrix()
 T CEngineClient::WriteScreenshot(char const*)
 T CEngineConsoleLoggingListener::Log(LoggingContext_t const*, char const*)
 T CEnginePanel::~CEnginePanel()
 T CEnginePerfTools::Init()
 T CEnginePerfTools::InstallPerformanceToolsUI(vgui::Panel*)
 T CEnginePerfTools::ShouldPause() const
 T CEnginePerfTools::Shutdown()
 T CEngineRecipientFilter::AddAllPlayers()
 T CEngineRecipientFilter::AddPlayersFromFilter(IRecipientFilter const*)
 T CEngineRecipientFilter::AddRecipient(int)
 T CEngineRecipientFilter::CEngineRecipientFilter()
 T CEngineRecipientFilter::GetRecipientCount() const
 T CEngineRecipientFilter::GetRecipientIndex(int) const
 T CEngineRecipientFilter::IncludesPlayer(int)
 T CEngineRecipientFilter::IsInitMessage() const
 T CEngineRecipientFilter::IsReliable() const
 T CEngineRecipientFilter::MakeReliable()
 T CEngineRecipientFilter::~CEngineRecipientFilter()
 T CEngineSingleUserFilter::GetRecipientCount() const
 T CEngineSingleUserFilter::GetRecipientIndex(int) const
 T CEngineSingleUserFilter::IsBroadcastMessage() const
 T CEngineSingleUserFilter::IsInitMessage() const
 T CEngineSingleUserFilter::IsReliable() const
 T CEngineSingleUserFilter::~CEngineSingleUserFilter()
 T CEngineSoundClient::EmitAmbientSound(char const*, float, int, int, float)
 T CEngineSoundClient::EmitSentenceByIndex(IRecipientFilter&, int, int, int, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundClient::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundClient::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundClient::EmitSoundInternal(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundClient::GetActiveSounds(CUtlVector<SndInfo_t, CUtlMemory<SndInfo_t, int> >&)
 T CEngineSoundClient::GetAudioDeviceList(CUtlVector<audio_device_description_t, CUtlMemory<audio_device_description_t, int> >&)
 T CEngineSoundClient::GetDistGainFromSoundLevel(soundlevel_t, float)
 T CEngineSoundClient::GetElapsedTimeByGuid(int)
 T CEngineSoundClient::GetGuidForLastSoundEmitted()
 T CEngineSoundClient::GetSoundChannelVolume(char const*, float&, float&)
 T CEngineSoundClient::GetSoundDuration(char const*)
 T CEngineSoundClient::IsLoopingSound(char const*)
 T CEngineSoundClient::IsSoundPrecached(char const*)
 T CEngineSoundClient::IsSoundStillPlaying(int)
 T CEngineSoundClient::NotifyBeginMoviePlayback()
 T CEngineSoundClient::NotifyEndMoviePlayback()
 T CEngineSoundClient::PrecacheSentenceGroup(char const*)
 T CEngineSoundClient::PrecacheSound(char const*, bool, bool)
 T CEngineSoundClient::PrefetchSound(char const*)
 T CEngineSoundClient::SetPlayerDSP(IRecipientFilter&, int, bool)
 T CEngineSoundClient::SetRoomType(IRecipientFilter&, int)
 T CEngineSoundClient::SetSoundParametersByGuid(int, float, int, Vector, soundlevel_t)
 T CEngineSoundClient::SetVolumeByGuid(int, float)
 T CEngineSoundClient::StopAllSounds(bool)
 T CEngineSoundClient::StopSound(int, int, char const*, unsigned int)
 T CEngineSoundClient::StopSoundByGuid(int)
 T CEngineSoundClient::~CEngineSoundClient()
 T CEngineSoundServer::EmitAmbientSound(char const*, float, int, int, float)
 T CEngineSoundServer::EmitSentenceByIndex(IRecipientFilter&, int, int, int, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
 T CEngineSoundServer::GetActiveSounds(CUtlVector<SndInfo_t, CUtlMemory<SndInfo_t, int> >&)
 T CEngineSoundServer::GetAudioDeviceList(CUtlVector<audio_device_description_t, CUtlMemory<audio_device_description_t, int> >&)
 T CEngineSoundServer::GetDistGainFromSoundLevel(soundlevel_t, float)
 T CEngineSoundServer::GetElapsedTimeByGuid(int)
 T CEngineSoundServer::GetGuidForLastSoundEmitted()
 T CEngineSoundServer::GetSoundChannelVolume(char const*, float&, float&)
 T CEngineSoundServer::GetSoundDuration(char const*)
 T CEngineSoundServer::IsLoopingSound(char const*)
 T CEngineSoundServer::IsSoundPrecached(char const*)
 T CEngineSoundServer::IsSoundStillPlaying(int)
 T CEngineSoundServer::NotifyBeginMoviePlayback()
 T CEngineSoundServer::NotifyEndMoviePlayback()
 T CEngineSoundServer::PrecacheSentenceGroup(char const*)
 T CEngineSoundServer::PrecacheSound(char const*, bool, bool)
 T CEngineSoundServer::PrefetchSound(char const*)
 T CEngineSoundServer::SetPlayerDSP(IRecipientFilter&, int, bool)
 T CEngineSoundServer::SetRoomType(IRecipientFilter&, int)
 T CEngineSoundServer::SetSoundParametersByGuid(int, float, int, Vector, soundlevel_t)
 T CEngineSoundServer::SetVolumeByGuid(int, float)
 T CEngineSoundServer::StopAllSounds(bool)
 T CEngineSoundServer::StopSound(int, int, char const*, unsigned int)
 T CEngineSoundServer::StopSoundByGuid(int)
 T CEngineSoundServer::~CEngineSoundServer()
 T CEngineSoundServices::CacheBuildingFinish()
 T CEngineSoundServices::CacheBuildingStart()
 T CEngineSoundServices::CacheBuildingUpdateProgress(float, char const*)
 T CEngineSoundServices::CacheSoundsFromResFile(bool, CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&, char const*, bool)
 T CEngineSoundServices::EmitCloseCaption(char const*, float)
 T CEngineSoundServices::EmitSentenceCloseCaption(char const*)
 T CEngineSoundServices::GetAllManifestFiles(CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&)
 T CEngineSoundServices::GetAllSoundFilesInManifest(CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&, char const*)
 T CEngineSoundServices::GetAllSoundFilesReferencedInReslists(CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >&)
 T CEngineSoundServices::GetClientTime()
 T CEngineSoundServices::GetGameDir()
 T CEngineSoundServices::GetHostFrametime()
 T CEngineSoundServices::GetHostTime()
 T CEngineSoundServices::GetPrecachedSound(int)
 T CEngineSoundServices::GetPrecachedSoundCount()
 T CEngineSoundServices::GetServerCount()
 T CEngineSoundServices::GetSoundSpatialization(int, SpatializationInfo_t&)
 T CEngineSoundServices::GetSpectatorTarget(ClientDLLObserverMode_t*)
 T CEngineSoundServices::GetToolSpatialization(int, int, SpatializationInfo_t&)
 T CEngineSoundServices::GetUILanguage()
 T CEngineSoundServices::GetViewEntity(int)
 T CEngineSoundServices::IsConnected()
 T CEngineSoundServices::IsGamePaused()
 T CEngineSoundServices::IsPlayer(int)
 T CEngineSoundServices::LevelAlloc(int, char const*)
 T CEngineSoundServices::OnChangeVoiceStatus(int, int, bool)
 T CEngineSoundServices::OnExtraUpdate()
 T CEngineSoundServices::OnSoundStarted(int, StartSoundParams_t&, char const*)
 T CEngineSoundServices::OnSoundStopped(int, int, int, char const*)
 T CEngineSoundServices::RestartSoundSystem()
 T CEngineSoundServices::SetSoundFrametime(float, float)
 T CEngineSoundServices::ShouldSuppressNonUISounds()
 T CEngineStats::BeginFrame()
 T CEngineStats::BeginRun()
 T CEngineStats::CEngineStats()
 T CEngineStats::EnableVProfStatsRecording(char const*)
 T CEngineStats::EndFrame()
 T CEngineStats::EndRun()
 T CEngineTesselateHelper::EndTriangle()
 T CEngineTool::CancelMovieRecording()
 T CEngineTool::ChangeToMap(char const*)
 T CEngineTool::ClientFrameTime()
 T CEngineTool::ClientTick()
 T CEngineTool::ClientTime()
 T CEngineTool::Command(char const*)
 T CEngineTool::Con_NPrintf(int, char const*, ...)
 T CEngineTool::Con_NXPrintf(con_nprint_s const*, char const*, ...)
 T CEngineTool::CreatePartitionHandle(IHandleEntity*, int, Vector const&, Vector const&)
 T CEngineTool::CreatePickingRay(CViewSetup const&, int, int, Vector&, Vector&)
 T CEngineTool::DestroyPartitionHandle(unsigned short)
 T CEngineTool::ElementMoved(unsigned short, Vector const&, Vector const&)
 T CEngineTool::EndMovieRecording()
 T CEngineTool::Execute()
 T CEngineTool::ForceSend()
 T CEngineTool::ForceUpdateDuringPause()
 T CEngineTool::GetActiveDLights(dlight_t**)
 T CEngineTool::GetClientFactory(void* (*&)(char const*, int*))
 T CEngineTool::GetCurrentMap()
 T CEngineTool::GetEngineHwnd()
 T CEngineTool::GetGameDir(char*, int)
 T CEngineTool::GetLightingConditions(Vector const&, Vector*, int, LightDesc_t*)
 T CEngineTool::GetMaxClients()
 T CEngineTool::GetModel(unsigned int)
 T CEngineTool::GetMono16Samples(char const*, CUtlVector<short, CUtlMemory<short, int> >&)
 T CEngineTool::GetPlayerView(CViewSetup&, int, int, int, int)
 T CEngineTool::GetPointContents(Vector const&)
 T CEngineTool::GetRealFrameTime()
 T CEngineTool::GetRealTime()
 T CEngineTool::GetRecordingAVIHandle()
 T CEngineTool::GetScreenSize(int&, int&)
 T CEngineTool::GetServerFactory(void* (*&)(char const*, int*))
 T CEngineTool::GetSoundChannelVolume(char const*, float&, float&)
 T CEngineTool::GetSoundDuration(char const*)
 T CEngineTool::GetSoundDuration(int)
 T CEngineTool::GetSoundElapsedTime(int)
 T CEngineTool::GetStudioModel(unsigned int)
 T CEngineTool::GetTimescale()
 T CEngineTool::GetToolCount() const
 T CEngineTool::GetToolName(int) const
 T CEngineTool::GetToolSystem(int) const
 T CEngineTool::GetTopmostTool()
 T CEngineTool::GetWorldToScreenMatrixForView(CViewSetup const&, VMatrix*)
 T CEngineTool::HostFrameCount()
 T CEngineTool::HostFrameTime()
 T CEngineTool::HostTick()
 T CEngineTool::HostTime()
 T CEngineTool::InstallPartitionQueryCallback(IPartitionQueryCallback*)
 T CEngineTool::InstallQuitHandler(void*, bool (*)(void*))
 T CEngineTool::IsConnected()
 T CEngineTool::IsConsoleVisible()
 T CEngineTool::IsCursorVisible() const
 T CEngineTool::IsGamePaused()
 T CEngineTool::IsInGame()
 T CEngineTool::IsLoopingSound(int)
 T CEngineTool::IsMapValid(char const*)
 T CEngineTool::IsRecordingMovie()
 T CEngineTool::IsSoundStillPlaying(int)
 T CEngineTool::IsTopmostTool(IToolSystem const*) const
 T CEngineTool::IsVoiceRecording()
 T CEngineTool::LoadToolModule(char const*, bool)
 T CEngineTool::OnModeChanged(bool)
 T CEngineTool::PrecacheModel(char const*, bool)
 T CEngineTool::PrecacheSound(char const*, bool)
 T CEngineTool::PrefetchSound(char const*)
 T CEngineTool::ReloadSound(char const*)
 T CEngineTool::RemovePartitionQueryCallback(IPartitionQueryCallback*)
 T CEngineTool::RenderView(CViewSetup&, int, int)
 T CEngineTool::ResetKeyboardState()
 T CEngineTool::ServerFrameTime()
 T CEngineTool::ServerTick()
 T CEngineTool::ServerTickInterval()
 T CEngineTool::ServerTime()
 T CEngineTool::SetAudioState(AudioState_t const&)
 T CEngineTool::SetClientFrameTime(float)
 T CEngineTool::SetGamePaused(bool)
 T CEngineTool::SetIsInGame(bool)
 T CEngineTool::SetMainView(Vector const&, QAngle const&)
 T CEngineTool::SetSoundParametersByGuid(int, float, int, Vector, soundlevel_t)
 T CEngineTool::SetTimescale(float)
 T CEngineTool::SetVolumeByGuid(int, float)
 T CEngineTool::ShowCursor(bool)
 T CEngineTool::StartMovieRecording(KeyValues*)
 T CEngineTool::StartRecordingVoiceToFile(char const*, char const*)
 T CEngineTool::StartSound(int, bool, int, int, char const*, float, soundlevel_t, Vector const&, Vector const&, int, int, bool, float, int)
 T CEngineTool::StopAllSounds()
 T CEngineTool::StopRecordingVoiceToFile()
 T CEngineTool::StopSoundByGuid(int)
 T CEngineTool::SwitchToTool(int)
 T CEngineTool::TakeTGAScreenShot(char const*, int, int)
 T CEngineTool::Time()
 T CEngineTool::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CBaseTrace*)
 T CEngineTool::TraceRayServer(Ray_t const&, unsigned int, ITraceFilter*, CBaseTrace*)
 T CEngineTool::ValidateSoundCache(char const*)
 T CEngineTool::~CEngineTool()
 T CEngineTrace::AllocTraceListData()
 T CEngineTrace::ClipRayToBBox(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
 T CEngineTrace::ClipRayToCollideable(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
 T CEngineTrace::ClipRayToEntity(Ray_t const&, unsigned int, IHandleEntity*, CGameTrace*)
 T CEngineTrace::ClipRayToHitboxes(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
 T CEngineTrace::ClipRayToVPhysics(Ray_t const&, unsigned int, ICollideable*, studiohdr_t*, CGameTrace*)
 T CEngineTrace::EnumerateEntities(Ray_t const&, bool, IEntityEnumerator*)
 T CEngineTrace::EnumerateEntities(Vector const&, Vector const&, IEntityEnumerator*)
 T CEngineTrace::FreeTraceListData(ITraceListData*)
 T CEngineTrace::GetBrushInfo(int, CUtlVector<BrushSideInfo_t, CUtlMemory<BrushSideInfo_t, int> >*, int*)
 T CEngineTrace::GetBrushesInAABB(Vector const&, Vector const&, CUtlVector<int, CUtlMemory<int, int> >*, int)
 T CEngineTrace::GetCollidableFromDisplacementsInAABB(Vector const&, Vector const&)
 T CEngineTrace::GetDisplacementMesh(int, virtualmeshlist_t*)
 T CEngineTrace::GetLeafContainingPoint(Vector const&)
 T CEngineTrace::GetNumDisplacements()
 T CEngineTrace::GetPointContents(Vector const&, int, IHandleEntity**)
 T CEngineTrace::GetPointContents_Collideable(ICollideable*, Vector const&)
 T CEngineTrace::GetPointContents_WorldOnly(Vector const&, int)
 T CEngineTrace::GetStatByIndex(int, bool)
 T CEngineTrace::GetStaticEntitiesInTile(int, int, IHandleEntity**, int)
 T CEngineTrace::PointOutsideWorld(Vector const&)
 T CEngineTrace::SetupLeafAndEntityListBox(Vector const&, Vector const&, ITraceListData*)
 T CEngineTrace::SetupLeafAndEntityListRay(Ray_t const&, ITraceListData*)
 T CEngineTrace::SweepCollideable(ICollideable*, Vector const&, Vector const&, QAngle const&, unsigned int, ITraceFilter*, CGameTrace*)
 T CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)
 T CEngineTrace::TraceRayAgainstLeafAndEntityList(Ray_t const&, ITraceListData*, unsigned int, ITraceFilter*, CGameTrace*)
 T CEngineTrace::TraceRayVerticalGroundHeight(float, float, float, float, float)
 T CEngineTraceClient::GetCollideable(IHandleEntity*)
 T CEngineTraceClient::GetWorldCollideable()
 T CEngineTraceClient::HandleEntityToCollideable(IHandleEntity*, ICollideable**, char const**)
 T CEngineTraceClient::SetTraceEntity(ICollideable*, CGameTrace*)
 T CEngineTraceClient::SpatialPartitionMask() const
 T CEngineTraceClient::SpatialPartitionTriggerMask() const
 T CEngineTraceServer::GenerateDotaMapHeightFieldData()
 T CEngineTraceServer::GetCollideable(IHandleEntity*)
 T CEngineTraceServer::GetWorldCollideable()
 T CEngineTraceServer::HandleEntityToCollideable(IHandleEntity*, ICollideable**, char const**)
 T CEngineTraceServer::SetTraceEntity(ICollideable*, CGameTrace*)
 T CEngineTraceServer::SpatialPartitionMask() const
 T CEngineTraceServer::SpatialPartitionTriggerMask() const
 T CEngineUniformRandomStream::RandomFloat(float, float)
 T CEngineUniformRandomStream::RandomFloatExp(float, float, float)
 T CEngineUniformRandomStream::RandomInt(int, int)
 T CEngineUniformRandomStream::SetSeed(int)
 T CEngineVGui::ActivateGameUI()
 T CEngineVGui::AddErrorMessage(char const*)
 T CEngineVGui::BackwardCompatibility_Paint()
 T CEngineVGui::ClearConsole()
 T CEngineVGui::Connect()
 T CEngineVGui::CreateVProfPanels(vgui::Panel*)
 T CEngineVGui::DrawKeyFocus()
 T CEngineVGui::DrawMouseFocus()
 T CEngineVGui::EnabledProgressBarForNextLoad()
 T CEngineVGui::FinishCustomProgress()
 T CEngineVGui::GetGameUIFactory()
 T CEngineVGui::GetGameUIInputContext()
 T CEngineVGui::GetPanel(VGuiPanel_t)
 T CEngineVGui::HideConsole()
 T CEngineVGui::HideDebugSystem()
 T CEngineVGui::HideGameUI()
 T CEngineVGui::HideLoadingPlaque()
 T CEngineVGui::Init()
 T CEngineVGui::IsConsoleVisible()
 T CEngineVGui::IsGameUIVisible()
 T CEngineVGui::IsInitialized() const
 T CEngineVGui::IsToolsUIVisible()
 T CEngineVGui::Key_Event(InputEvent_t const&)
 T CEngineVGui::NeedConnectionProblemWaitScreen()
 T CEngineVGui::NotifyOfServerConnect(char const*, int, int, int)
 T CEngineVGui::NotifyOfServerDisconnect()
 T CEngineVGui::OnLevelLoadingFinished()
 T CEngineVGui::OnLevelLoadingStarted(char const*, bool)
 T CEngineVGui::OnToolModeChanged(bool)
 T CEngineVGui::Paint(PaintMode_t)
 T CEngineVGui::PostInit()
 T CEngineVGui::SetGameDLLPanelsVisible(bool)
 T CEngineVGui::SetNotAllowedToHideGameUI(bool)
 T CEngineVGui::SetNotAllowedToShowGameUI(bool)
 T CEngineVGui::SetProgressLevelName(char const*)
 T CEngineVGui::SetRenderFirst(bool)
 T CEngineVGui::SetVGUIDirectories()
 T CEngineVGui::ShouldPause()
 T CEngineVGui::ShouldRenderFirst()
 T CEngineVGui::ShowConsole()
 T CEngineVGui::ShowErrorMessage()
 T CEngineVGui::ShowPasswordUI(char const*)
 T CEngineVGui::Shutdown()
 T CEngineVGui::Simulate()
 T CEngineVGui::StartCustomProgress()
 T CEngineVGui::ToggleDebugSystemUI(CCommandContext const&, CCommand const&)
 T CEngineVGui::UpdateButtonState(InputEvent_t const&)
 T CEngineVGui::UpdateCustomProgressBar(float, wchar_t const*)
 T CEngineVGui::UpdateProgressBar(LevelLoadingProgress_e)
 T CEngineVGui::~CEngineVGui()
 T CEngineVoiceSteam::AddPlayerToVoiceList(unsigned long long, int)
 T CEngineVoiceSteam::GetRemoteTalkers(int*, unsigned long long*)
 T CEngineVoiceSteam::GetVoiceData(int, unsigned char const**, unsigned int*)
 T CEngineVoiceSteam::IsHeadsetPresent(int)
 T CEngineVoiceSteam::IsLocalPlayerTalking(int)
 T CEngineVoiceSteam::PlayIncomingVoiceData(unsigned long long, unsigned char const*, unsigned int, bool const*)
 T CEngineVoiceSteam::RemoveAllTalkers()
 T CEngineVoiceSteam::RemovePlayerFromVoiceList(unsigned long long, int)
 T CEngineVoiceSteam::SetPlaybackPriority(unsigned long long, int, int)
 T CEngineVoiceSteam::VoiceResetLocalData(int)
 T CEngineVoiceSteam::VoiceUpdateData(int)
 T CEngineVoiceSteam::~CEngineVoiceSteam()
 T CEntityListAlongRay::EnumElement(IHandleEntity*)
 T CEntityReadInfo::~CEntityReadInfo()
 T CEntityReportManager::~CEntityReportManager()
 T CEntityReportPanel::ApplyEffect(CEntityBits*, int&, int&, int&)
 T CEntityReportPanel::ApplySchemeSettings(vgui::IScheme*)
 T CEntityReportPanel::CEntityReportPanel(vgui::Panel*)
 T CEntityReportPanel::Paint(IVGuiPaintSurface*)
 T CEntityReportPanel::ShouldDraw()
 T CEntityReportPanel::~CEntityReportPanel()
 T CEntityWriteInfo::~CEntityWriteInfo()
 T CEnumerationFilter::EnumElement(IHandleEntity*)
 T CEventInfo::~CEventInfo()
 T CExpressionCalculator::Parse1ArgFunc(char const*&)
 T CExpressionCalculator::Parse2ArgFunc(char const*&)
 T CExpressionCalculator::Parse3ArgFunc(char const*&)
 T CExpressionCalculator::Parse5ArgFunc(char const*&)
 T CExpressionCalculator::ParseAddSub(char const*&)
 T CExpressionCalculator::ParseAnd(char const*&)
 T CExpressionCalculator::ParseConditional(char const*&)
 T CExpressionCalculator::ParseDivMul(char const*&)
 T CExpressionCalculator::ParseEquality(char const*&)
 T CExpressionCalculator::ParseLessGreater(char const*&)
 T CExpressionCalculator::ParseOr(char const*&)
 T CExpressionCalculator::ParsePrimary(char const*&)
 T CExpressionCalculator::ParseUnary(char const*&)
 T CExpressionCalculator::SetVariable(char const*, float)
 T CExpressionEvaluator::CExpressionEvaluator()
 T CExpressionEvaluator::Evaluate(bool&, char const*, bool (*)(char const*), void (*)(char const*))
 T CExpressionEvaluator::FreeTree(ExprNode*&)
 T CExpressionEvaluator::IsIdentifierOrConstant(char)
 T CExpressionEvaluator::MakeExpression(ExprNode*&)
 T CExpressionEvaluator::MakeFactor(ExprNode*&)
 T CExpressionEvaluator::SimplifyNode(ExprNode*&)
 T CExpressionEvaluator::~CExpressionEvaluator()
 T CFSSearchPathsInit::CFSSearchPathsInit()
 T CFastPointLeafNum::CFastPointLeafNum()
 T CFastPointLeafNum::GetLeaf(Vector const&)
 T CFastPointLeafNum::Reset()
 T CFileDownloadFilter::CanRedownloadFile(char const*)
 T CFileDownloadFilter::IsSafeFileToDownload(char const*)
 T CFileDownloadFilter::IsValidFileTransferExtension(char const*)
 T CFileLoggingListener::AssignAllLogChannels(int)
 T CFileLoggingListener::AssignLogChannel(int, int)
 T CFileLoggingListener::BeginLoggingToFile(char const*, char const*, char const*)
 T CFileLoggingListener::CFileLoggingListener()
 T CFileLoggingListener::EndLoggingToFile(int)
 T CFileLoggingListener::Log(LoggingContext_t const*, char const*)
 T CFileLoggingListener::UnassignAllLogChannels()
 T CFileLoggingListener::UnassignLogChannel(int)
 T CFileLoggingListener::~CFileLoggingListener()
 T CFilter::Add(CCommand const&)
 T CFilter::BanID(CCommand const&)
 T CFilter::GetUserBanList(CUtlBuffer&)
 T CFilter::Init()
 T CFilter::IsUserBanned(USERID_s const&)
 T CFilter::List(CCommand const&)
 T CFilter::ListID(CCommand const&)
 T CFilter::Remove(CCommand const&)
 T CFilter::RemoveID(CCommand const&)
 T CFilter::SendBan(netadr_t const&)
 T CFilter::ShouldDiscard(netadr_t const&)
 T CFilter::ShouldDiscardPacket(ns_address const&)
 T CFilter::Shutdown()
 T CFilter::WriteID(CCommand const&)
 T CFilter::WriteIP(CCommand const&)
 T CFilter::~CFilter()
 T CFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFmtStrN<1024, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<1024, false>::InitQuietTruncation()
 T CFmtStrN<1024, false>::sprintf(char const*, ...)
 T CFmtStrN<1024, true>::CFmtStrN(char const*, ...)
 T CFmtStrN<1024, true>::InitQuietTruncation()
 T CFmtStrN<1040, false>::InitQuietTruncation()
 T CFmtStrN<1040, false>::sprintf(char const*, ...)
 T CFmtStrN<2048, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<2048, false>::InitQuietTruncation()
 T CFmtStrN<256, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<256, false>::InitQuietTruncation()
 T CFmtStrN<256, false>::sprintf(char const*, ...)
 T CFocusOverlayPanel::CFocusOverlayPanel(vgui::Panel*, char const*)
 T CFocusOverlayPanel::DrawFocusPanelList(IVGuiPaintSurface*)
 T CFocusOverlayPanel::DrawKeyFocusPanel(IVGuiPaintSurface*)
 T CFocusOverlayPanel::DrawTitleSafeOverlay(IVGuiPaintSurface*)
 T CFocusOverlayPanel::PostChildPaint(IVGuiPaintSurface*)
 T CFocusOverlayPanel::~CFocusOverlayPanel()
 T CFogUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CFogUIPanel::CFogUIPanel(vgui::Panel*)
 T CFogUIPanel::GetAnimMap()
 T CFogUIPanel::GetKBMap()
 T CFogUIPanel::GetMessageMap()
 T CFogUIPanel::GetPanelClassName()
 T CFogUIPanel::InitControls()
 T CFogUIPanel::InstallFogUI(vgui::Panel*)
 T CFogUIPanel::OnCommand(char const*)
 T CFogUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CFogUIPanel::OnTextKillFocus(KeyValues*)
 T CFogUIPanel::OnTextNewLine(KeyValues*)
 T CFogUIPanel::OnTick()
 T CFogUIPanel::UpdateFogColors()
 T CFogUIPanel::~CFogUIPanel()
 T CFrameSnapshot::AddReference(char const*)
 T CFrameSnapshot::ReleaseReference(char const*)
 T CFrameSnapshot::~CFrameSnapshot()
 T CFrameSnapshotManager::AddEntityReference(int)
 T CFrameSnapshotManager::AddExplicitDelete(int)
 T CFrameSnapshotManager::BuildSnapshotList(CFrameSnapshot*, CFrameSnapshot*, unsigned int, CReferencedSnapshotList&)
 T CFrameSnapshotManager::CFrameSnapshotManager()
 T CFrameSnapshotManager::CreateEmptySnapshot(char const*, int, int, unsigned int)
 T CFrameSnapshotManager::CreateLocalPackedEntity(CFrameSnapshot*, int)
 T CFrameSnapshotManager::CreatePackedEntity(CFrameSnapshot*, int)
 T CFrameSnapshotManager::DeleteFrameSnapshot(CFrameSnapshot*)
 T CFrameSnapshotManager::GetPreviouslySentPacket(int, int)
 T CFrameSnapshotManager::LevelChanged()
 T CFrameSnapshotManager::RemoveEntityReference(int)
 T CFrameSnapshotManager::TakeTickSnapshot(char const*, int, unsigned int)
 T CFrameSnapshotManager::UsePreviouslySentPacket(CFrameSnapshot*, int, int) const
 T CFrameSnapshotManager::~CFrameSnapshotManager()
 T CFrameTimer::ComputeFrameVariability()
 T CFrameTimer::MarkFrame()
 T CFullScreenSelectionPanel::CFullScreenSelectionPanel(char const*, CSelectedHSVOperation*, vgui::Panel*)
 T CFullScreenSelectionPanel::GetAnimMap()
 T CFullScreenSelectionPanel::GetKBMap()
 T CFullScreenSelectionPanel::GetMessageMap()
 T CFullScreenSelectionPanel::GetPanelClassName()
 T CFullScreenSelectionPanel::OnCursorMoved(int, int)
 T CFullScreenSelectionPanel::OnKeyCodeTyped(ButtonCode_t)
 T CFullScreenSelectionPanel::OnMousePressed(ButtonCode_t)
 T CFullScreenSelectionPanel::OnMouseReleased(ButtonCode_t)
 T CFullScreenSelectionPanel::~CFullScreenSelectionPanel()
 T CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor0()
 T CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor5()
 T CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor7()
 T CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor7()
 T CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor9()
 T CFunctorJob::CFunctorJob(CFunctor*, char const*)
 T CFunctorJob::DoExecute()
 T CFunctorJob::~CFunctorJob()
 T CGainManager::Apply(short*, int)
 T CGame::AppActivate(bool)
 T CGame::CreateGameWindow()
 T CGame::DestroyGameWindow()
 T CGame::DispatchAllStoredGameMessages()
 T CGame::DispatchInputEvent(InputEvent_t const&)
 T CGame::GetDesktopInfo(int&, int&, int&)
 T CGame::GetMainWindow()
 T CGame::GetMainWindowAddress()
 T CGame::GetWindowRect(int*, int*, int*, int*)
 T CGame::HandleMsg_Close(InputEvent_t const&)
 T CGame::HandleMsg_WindowMove(InputEvent_t const&)
 T CGame::Init(void*)
 T CGame::InputAttachToGameWindow()
 T CGame::InputDetachFromGameWindow()
 T CGame::IsActiveApp()
 T CGame::OnScreenSizeChanged(int, int)
 T CGame::PlayScaleformVideoAndWait(char const*)
 T CGame::PlayStartupVideos()
 T CGame::PlayVideoAndWait(char const*, bool)
 T CGame::PlayVideoListAndWait(char const*, bool)
 T CGame::SetGameWindow(void*)
 T CGame::SetMouseWindowLock(bool)
 T CGame::SetWindowSize(int, int)
 T CGame::SetWindowXY(int, int)
 T CGame::Shutdown()
 T CGame::UpdateDesktopInformation(SDL_Window*)
 T CGame::~CGame()
 T CGameClient::ActivatePlayer()
 T CGameClient::CGameClient(int, CBaseServer*)
 T CGameClient::CLCMsg_ClientInfo(CCLCMsg_ClientInfo const&)
 T CGameClient::CLCMsg_ClientMessage(CCLCMsg_ClientMessage const&)
 T CGameClient::CLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck const&)
 T CGameClient::CLCMsg_Move(CCLCMsg_Move const&)
 T CGameClient::CLCMsg_RespondCvarValue(CCLCMsg_RespondCvarValue const&)
 T CGameClient::CLCMsg_VoiceData(CCLCMsg_VoiceData const&)
 T CGameClient::CheckConnect()
 T CGameClient::Clear()
 T CGameClient::Connect(char const*, int, INetChannel*, bool, int, CMsg_CVars const*)
 T CGameClient::ConnectionClosing(int)
 T CGameClient::ConnectionCrashed(int)
 T CGameClient::Disconnect(int)
 T CGameClient::DownloadCustomizations()
 T CGameClient::ExecuteStringCommand(char const*)
 T CGameClient::FileDenied(char const*, unsigned int, bool)
 T CGameClient::FileReceived(char const*, unsigned int, bool)
 T CGameClient::FileRequested(char const*, unsigned int, bool)
 T CGameClient::FileSent(char const*, unsigned int, bool)
 T CGameClient::FillSoundsMessage(CSVCMsg_Sounds&, int)
 T CGameClient::GetDeltaFrame(int)
 T CGameClient::GetSendFrame()
 T CGameClient::IgnoreTempEntity(CEventInfo*)
 T CGameClient::Inactivate()
 T CGameClient::IsHearingClient(int) const
 T CGameClient::IsProximityHearingClient(int) const
 T CGameClient::PacketEnd()
 T CGameClient::PacketStart(int, int)
 T CGameClient::PerformDisconnection(int)
 T CGameClient::ProcessSignonStateMsg(int, int)
 T CGameClient::Reconnect()
 T CGameClient::SendNetMsg(INetMessage&, bool, bool)
 T CGameClient::SendSignonData()
 T CGameClient::SendSnapshot(CClientFrame*)
 T CGameClient::SendSound(SoundInfo_t&, bool)
 T CGameClient::SetRate(int, bool)
 T CGameClient::SetUpdateRate(int, bool)
 T CGameClient::SetupPackInfo(CFrameSnapshot*)
 T CGameClient::ShouldReceiveStringTableUserData(INetworkStringTable const*, int)
 T CGameClient::ShouldSendMessages()
 T CGameClient::SpawnPlayer()
 T CGameClient::UpdateAcknowledgedFramecount(int)
 T CGameClient::UpdateUserSettings()
 T CGameClient::WriteGameSounds(bf_write&, int)
 T CGameClient::WriteViewAngleUpdate()
 T CGameClient::~CGameClient()
 T CGameEvent::GetBool(char const*, bool)
 T CGameEvent::GetDataKeys()
 T CGameEvent::GetFloat(char const*, float)
 T CGameEvent::GetID() const
 T CGameEvent::GetInt(char const*, int)
 T CGameEvent::GetName() const
 T CGameEvent::GetPtr(char const*)
 T CGameEvent::GetString(char const*, char const*)
 T CGameEvent::GetUint64(char const*, unsigned long long)
 T CGameEvent::IsEmpty(char const*)
 T CGameEvent::IsLocal() const
 T CGameEvent::IsReliable() const
 T CGameEvent::SetBool(char const*, bool)
 T CGameEvent::SetFloat(char const*, float)
 T CGameEvent::SetInt(char const*, int)
 T CGameEvent::SetPtr(char const*, void const*)
 T CGameEvent::SetString(char const*, char const*)
 T CGameEvent::SetUint64(char const*, unsigned long long)
 T CGameEvent::~CGameEvent()
 T CGameEventDescriptor::~CGameEventDescriptor()
 T CGameEventManager::AddListener(IGameEventListener2*, char const*, bool)
 T CGameEventManager::AddListener(void*, CGameEventDescriptor*, int)
 T CGameEventManager::AddListenerAll(void*, int)
 T CGameEventManager::CGameEventManager()
 T CGameEventManager::ConPrintEvent(IGameEvent*)
 T CGameEventManager::CreateEvent(CGameEventDescriptor*, char const*)
 T CGameEventManager::CreateEvent(char const*, bool, int*)
 T CGameEventManager::DumpEventNetworkStats()
 T CGameEventManager::DuplicateEvent(IGameEvent*)
 T CGameEventManager::FindListener(IGameEventListener2*, char const*)
 T CGameEventManager::FireEvent(IGameEvent*, bool)
 T CGameEventManager::FireEventClientSide(IGameEvent*)
 T CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)
 T CGameEventManager::FreeEvent(IGameEvent*)
 T CGameEventManager::GetEventDescriptor(char const*, int*)
 T CGameEventManager::GetEventDescriptor(int)
 T CGameEventManager::HasClientListenersChanged(bool)
 T CGameEventManager::Init()
 T CGameEventManager::LoadEventsFromFile(char const*)
 T CGameEventManager::LookupEventId(char const*)
 T CGameEventManager::ParseEventList(CSVCMsg_GameEventList const&)
 T CGameEventManager::RegisterEvent(KeyValues*)
 T CGameEventManager::ReloadEventDefinitions()
 T CGameEventManager::RemoveListener(IGameEventListener2*)
 T CGameEventManager::RemoveListenerOld(void*)
 T CGameEventManager::Reset()
 T CGameEventManager::SerializeEvent(IGameEvent*, CSVCMsg_GameEvent*)
 T CGameEventManager::Shutdown()
 T CGameEventManager::UnloadEventsFile(char const*)
 T CGameEventManager::UnserializeEvent(CSVCMsg_GameEvent const&)
 T CGameEventManager::WriteEventList(CSVCMsg_GameEventList*)
 T CGameEventManager::WriteListenEventList(CCLCMsg_ListenEvents*)
 T CGameEventManager::~CGameEventManager()
 T CGameEventManagerOld::AddListener(IGameEventListener*, bool)
 T CGameEventManagerOld::AddListener(IGameEventListener*, char const*, bool)
 T CGameEventManagerOld::FireEvent(KeyValues*)
 T CGameEventManagerOld::FireEventClientOnly(KeyValues*)
 T CGameEventManagerOld::FireEventServerOnly(KeyValues*)
 T CGameEventManagerOld::GetEvent(char const*)
 T CGameEventManagerOld::LoadEventsFromFile(char const*)
 T CGameEventManagerOld::RemoveListener(IGameEventListener*)
 T CGameEventManagerOld::Reset()
 T CGameEventManagerOld::SerializeKeyValues(KeyValues*, bf_write*, CGameEvent*)
 T CGameEventManagerOld::UnserializeKeyValue(bf_read*)
 T CGameEventManagerOld::~CGameEventManagerOld()
 T CGameEventTransmitter::Init()
 T CGameEventTransmitter::TransmitGameEvent(IGameEvent*)
 T CGameInfo::ByteSize() const
 T CGameInfo::CGameInfo()
 T CGameInfo::Clear()
 T CGameInfo::CopyFrom(CGameInfo const&)
 T CGameInfo::GetCachedSize() const
 T CGameInfo::GetMetadata() const
 T CGameInfo::IsInitialized() const
 T CGameInfo::MergeFrom(CGameInfo const&)
 T CGameInfo::New() const
 T CGameInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGameInfo::SetCachedSize(int) const
 T CGameInfo::~CGameInfo()
 T CGameInfo_CDotaGameInfo::ByteSize() const
 T CGameInfo_CDotaGameInfo::CGameInfo_CDotaGameInfo()
 T CGameInfo_CDotaGameInfo::Clear()
 T CGameInfo_CDotaGameInfo::GetCachedSize() const
 T CGameInfo_CDotaGameInfo::GetMetadata() const
 T CGameInfo_CDotaGameInfo::IsInitialized() const
 T CGameInfo_CDotaGameInfo::MergeFrom(CGameInfo_CDotaGameInfo const&)
 T CGameInfo_CDotaGameInfo::New() const
 T CGameInfo_CDotaGameInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGameInfo_CDotaGameInfo::SetCachedSize(int) const
 T CGameInfo_CDotaGameInfo::SharedCtor()
 T CGameInfo_CDotaGameInfo::SharedDtor()
 T CGameInfo_CDotaGameInfo::~CGameInfo_CDotaGameInfo()
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::ByteSize() const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::Clear()
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::GetCachedSize() const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::GetMetadata() const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::IsInitialized() const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::MergeFrom(CGameInfo_CDotaGameInfo_CHeroSelectEvent const&)
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::New() const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::SetCachedSize(int) const
 T CGameInfo_CDotaGameInfo_CHeroSelectEvent::~CGameInfo_CDotaGameInfo_CHeroSelectEvent()
 T CGameInfo_CDotaGameInfo_CPlayerInfo::ByteSize() const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::Clear()
 T CGameInfo_CDotaGameInfo_CPlayerInfo::GetCachedSize() const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::GetMetadata() const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::IsInitialized() const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::MergeFrom(CGameInfo_CDotaGameInfo_CPlayerInfo const&)
 T CGameInfo_CDotaGameInfo_CPlayerInfo::New() const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::SetCachedSize(int) const
 T CGameInfo_CDotaGameInfo_CPlayerInfo::SharedCtor()
 T CGameInfo_CDotaGameInfo_CPlayerInfo::SharedDtor()
 T CGameInfo_CDotaGameInfo_CPlayerInfo::~CGameInfo_CDotaGameInfo_CPlayerInfo()
 T CGameServer::AssignClassIds()
 T CGameServer::BroadcastSound(SoundInfo_t&, IRecipientFilter&)
 T CGameServer::CGameServer()
 T CGameServer::Clear()
 T CGameServer::CopyPureServerWhitelistToStringTable()
 T CGameServer::CreateEngineStringTables()
 T CGameServer::CreateNewClient(int)
 T CGameServer::DumpPrecacheStats(INetworkStringTable*)
 T CGameServer::FinishCertificateCheck(ns_address const&, int, char const*, int)
 T CGameServer::FinishRestore()
 T CGameServer::GetModel(int)
 T CGameServer::GetModelPrecacheTable() const
 T CGameServer::GetSound(int)
 T CGameServer::GetSoundPrecacheTable() const
 T CGameServer::Init(bool)
 T CGameServer::InitMaxClients()
 T CGameServer::IsHibernating() const
 T CGameServer::IsInPureServerMode() const
 T CGameServer::IsPausable() const
 T CGameServer::LookupModelIndex(char const*)
 T CGameServer::LookupSoundIndex(char const*)
 T CGameServer::PrecacheDecal(char const*, int)
 T CGameServer::PrecacheGeneric(char const*, int)
 T CGameServer::PrecacheModel(char const*, int, model_t*)
 T CGameServer::PrecacheSound(char const*, int)
 T CGameServer::ReloadWhitelist(char const*)
 T CGameServer::RemoveClientFromGame(CBaseClient*, int)
 T CGameServer::SendClientMessages(bool)
 T CGameServer::SetHibernating(bool)
 T CGameServer::SetMaxClients(int)
 T CGameServer::Shutdown()
 T CGameServer::SpawnServer(char*, char*)
 T CGameServer::UpdateHibernationState()
 T CGameServer::UpdateMasterServerPlayers()
 T CGameServer::~CGameServer()
 T CGameTrace::GetEdict() const
 T CGameUIFuncs::GetBindingForButtonCode(ButtonCode_t)
 T CGameUIFuncs::GetButtonCodeForBind(char const*, int)
 T CGameUIFuncs::GetDesktopResolution(int&, int&)
 T CGameUIFuncs::GetVideoModes(vmode_s**, int*)
 T CGameUIFuncs::IsConnectedToVACSecureServer()
 T CGameUIFuncs::IsKeyDown(char const*, bool&)
 T CGameUIFuncs::PlayUISoundScript(char const*)
 T CGameUIFuncs::PlayUISoundScriptAtPitch(char const*, float)
 T CGameUIFuncs::SetFriendsID(unsigned int, char const*)
 T CGameUIFuncs::StopSoundByGuid(int)
 T CHFontProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHFontProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CHFontProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHLTVClient::CHLTVClient(int, CBaseServer*)
 T CHLTVClient::CLCMsg_ClientInfo(CCLCMsg_ClientInfo const&)
 T CHLTVClient::CLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck const&)
 T CHLTVClient::CLCMsg_ListenEvents(CCLCMsg_ListenEvents const&)
 T CHLTVClient::CLCMsg_Move(CCLCMsg_Move const&)
 T CHLTVClient::CLCMsg_RespondCvarValue(CCLCMsg_RespondCvarValue const&)
 T CHLTVClient::CLCMsg_VoiceData(CCLCMsg_VoiceData const&)
 T CHLTVClient::Clear()
 T CHLTVClient::ConnectionClosing(int)
 T CHLTVClient::ConnectionCrashed(int)
 T CHLTVClient::ExecuteStringCommand(char const*)
 T CHLTVClient::FileDenied(char const*, unsigned int, bool)
 T CHLTVClient::FileReceived(char const*, unsigned int, bool)
 T CHLTVClient::FileRequested(char const*, unsigned int, bool)
 T CHLTVClient::FileSent(char const*, unsigned int, bool)
 T CHLTVClient::GetDeltaFrame(int)
 T CHLTVClient::NETMsg_SetConVar(CNETMsg_SetConVar const&)
 T CHLTVClient::PacketEnd()
 T CHLTVClient::PacketStart(int, int)
 T CHLTVClient::ProcessSignonStateMsg(int, int)
 T CHLTVClient::SendSignonData()
 T CHLTVClient::SendSnapshot(CClientFrame*)
 T CHLTVClient::SetRate(int, bool)
 T CHLTVClient::SetUpdateRate(int, bool)
 T CHLTVClient::ShouldSendMessages()
 T CHLTVClient::SpawnPlayer()
 T CHLTVClient::UpdateAcknowledgedFramecount(int)
 T CHLTVClient::UpdateUserSettings()
 T CHLTVClient::~CHLTVClient()
 T CHLTVClientState::CHLTVClientState()
 T CHLTVClientState::Clear()
 T CHLTVClientState::ConnectionClosing(int)
 T CHLTVClientState::ConnectionCrashed(int)
 T CHLTVClientState::CopyNewEntity(CEntityReadInfo&, int, int)
 T CHLTVClientState::Disconnect(bool)
 T CHLTVClientState::GetCDKeyHash()
 T CHLTVClientState::GetClientName()
 T CHLTVClientState::GetConnectionRetryNumber() const
 T CHLTVClientState::HookClientStringTable(char const*)
 T CHLTVClientState::InstallStringTableCallback(char const*)
 T CHLTVClientState::NETMsg_SetConVar(CNETMsg_SetConVar const&)
 T CHLTVClientState::NETMsg_StringCmd(CNETMsg_StringCmd const&)
 T CHLTVClientState::PacketEnd()
 T CHLTVClientState::ReadDeletions(CEntityReadInfo&)
 T CHLTVClientState::ReadDeltaEnt(CEntityReadInfo&)
 T CHLTVClientState::ReadEnterPVS(CEntityReadInfo&)
 T CHLTVClientState::ReadLeavePVS(CEntityReadInfo&)
 T CHLTVClientState::ReadPacketEntities(CEntityReadInfo&)
 T CHLTVClientState::ReadPreserveEnt(CEntityReadInfo&)
 T CHLTVClientState::RunFrame()
 T CHLTVClientState::SVCMsg_BSPDecal(CSVCMsg_BSPDecal const&)
 T CHLTVClientState::SVCMsg_ClassInfo(CSVCMsg_ClassInfo const&)
 T CHLTVClientState::SVCMsg_CrosshairAngle(CSVCMsg_CrosshairAngle const&)
 T CHLTVClientState::SVCMsg_FixAngle(CSVCMsg_FixAngle const&)
 T CHLTVClientState::SVCMsg_GameEvent(CSVCMsg_GameEvent const&)
 T CHLTVClientState::SVCMsg_GameEventList(CSVCMsg_GameEventList const&)
 T CHLTVClientState::SVCMsg_Menu(CSVCMsg_Menu const&)
 T CHLTVClientState::SVCMsg_PacketEntities(CSVCMsg_PacketEntities const&)
 T CHLTVClientState::SVCMsg_Prefetch(CSVCMsg_Prefetch const&)
 T CHLTVClientState::SVCMsg_ServerInfo(CSVCMsg_ServerInfo const&)
 T CHLTVClientState::SVCMsg_SetPause(CSVCMsg_SetPause const&)
 T CHLTVClientState::SVCMsg_SetView(CSVCMsg_SetView const&)
 T CHLTVClientState::SVCMsg_Sounds(CSVCMsg_Sounds const&)
 T CHLTVClientState::SVCMsg_TempEntities(CSVCMsg_TempEntities const&)
 T CHLTVClientState::SVCMsg_UserMessage(CSVCMsg_UserMessage const&)
 T CHLTVClientState::SVCMsg_VoiceData(CSVCMsg_VoiceData const&)
 T CHLTVClientState::SVCMsg_VoiceInit(CSVCMsg_VoiceInit const&)
 T CHLTVClientState::SendClientInfo()
 T CHLTVClientState::SendConnectPacket(ns_address const&, int, int, unsigned long long, bool)
 T CHLTVClientState::SendPacket()
 T CHLTVClientState::SetSignonState(int, int, CNETMsg_SignonState const*)
 T CHLTVClientState::UpdateStats()
 T CHLTVClientState::~CHLTVClientState()
 T CHLTVDemoRecorder::CHLTVDemoRecorder()
 T CHLTVDemoRecorder::GetDemoFile()
 T CHLTVDemoRecorder::GetRecordingTick()
 T CHLTVDemoRecorder::IsRecording()
 T CHLTVDemoRecorder::PauseRecording()
 T CHLTVDemoRecorder::RecordCommand(char const*)
 T CHLTVDemoRecorder::RecordCustomData(int, void const*, unsigned long)
 T CHLTVDemoRecorder::RecordMessages(bf_read&, int)
 T CHLTVDemoRecorder::RecordPacket()
 T CHLTVDemoRecorder::RecordServerClasses(ServerClass*)
 T CHLTVDemoRecorder::RecordStringTables()
 T CHLTVDemoRecorder::RecordUserInput(int)
 T CHLTVDemoRecorder::ResetDemoInterpolation()
 T CHLTVDemoRecorder::ResumeRecording()
 T CHLTVDemoRecorder::SetSignonState(int)
 T CHLTVDemoRecorder::StartAutoRecording()
 T CHLTVDemoRecorder::StartRecording(char const*, bool)
 T CHLTVDemoRecorder::StopRecording(CGameInfo const*)
 T CHLTVDemoRecorder::WriteFrame(CHLTVFrame*, bf_write*)
 T CHLTVDemoRecorder::WriteFullFrame(CHLTVFrame*, CVarBitVec const*)
 T CHLTVDemoRecorder::WriteNetMessage(INetMessage const&, EDemoCommands)
 T CHLTVDemoRecorder::WriteServerInfo()
 T CHLTVDemoRecorder::WriteSignonData()
 T CHLTVDemoRecorder::~CHLTVDemoRecorder()
 T CHLTVFrame::AllocBuffers()
 T CHLTVFrame::CopyHLTVData(CHLTVFrame const&)
 T CHLTVFrame::FreeBuffers()
 T CHLTVFrame::IsMemPoolAllocated()
 T CHLTVFrame::Reset()
 T CHLTVFrame::~CHLTVFrame()
 T CHLTVServer::ActivateServer()
 T CHLTVServer::AddNewDeltaFrame(CClientFrame*)
 T CHLTVServer::AddNewFrame(CClientFrame*)
 T CHLTVServer::AddSaveGame(CSteamID, unsigned long long, int, CUtlBuffer const&)
 T CHLTVServer::BroadcastEvent(IGameEvent*)
 T CHLTVServer::BroadcastEventLocal(IGameEvent*, bool)
 T CHLTVServer::BroadcastLocalChat(CSteamID const&, char const*, char const*, char const*)
 T CHLTVServer::BroadcastLocalTitle(CHLTVClient*)
 T CHLTVServer::BuildFullFrameSplit(CHLTVClient*)
 T CHLTVServer::CHLTVServer()
 T CHLTVServer::Changelevel()
 T CHLTVServer::Clear()
 T CHLTVServer::CloneDeltaSnapshot(CFrameSnapshot const*)
 T CHLTVServer::ConnectClient(ns_address const&, int, int, int, int, char const*, char const*, char const*, int, CUtlVector<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, CUtlMemory<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, int> >&, bool)
 T CHLTVServer::ConnectRelay(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&)
 T CHLTVServer::CreateDeltaFrameEntities(CHLTVServer::SHLTVDeltaFrame_t*, CFrameSnapshot const*, CFrameSnapshot const*)
 T CHLTVServer::CreateNewClient(int)
 T CHLTVServer::DispatchToRelay(CHLTVClient*)
 T CHLTVServer::EntityPVSCheck(CClientFrame*)
 T CHLTVServer::ExpandDeltaFrameToFullFrame(CHLTVServer::SHLTVDeltaFrame_t*)
 T CHLTVServer::ExpandDeltaFramesToTick(int)
 T CHLTVServer::FillServerInfo(CSVCMsg_ServerInfo&)
 T CHLTVServer::FireGameEvent(IGameEvent*)
 T CHLTVServer::GetBaseServer()
 T CHLTVServer::GetBuffer(int)
 T CHLTVServer::GetClassBaseline(ServerClass*, int*)
 T CHLTVServer::GetDeltaFrame(int)
 T CHLTVServer::GetDirector()
 T CHLTVServer::GetFullSendTables()
 T CHLTVServer::GetGlobalStats(int&, int&, int&)
 T CHLTVServer::GetHLTVSlot()
 T CHLTVServer::GetLastCameraEventMsg()
 T CHLTVServer::GetLocalStats(int&, int&, int&)
 T CHLTVServer::GetName() const
 T CHLTVServer::GetNetStats(float&, float&)
 T CHLTVServer::GetOnlineTime()
 T CHLTVServer::GetPassword() const
 T CHLTVServer::GetRecordingDemoFilename()
 T CHLTVServer::GetRelayAddress()
 T CHLTVServer::GetRelayStats(int&, int&, int&)
 T CHLTVServer::GetTVSecretCode()
 T CHLTVServer::HandlePause(bool)
 T CHLTVServer::Init(bool)
 T CHLTVServer::InitClientRecvTables()
 T CHLTVServer::InstallStringTables()
 T CHLTVServer::IsCorrectUniqueTVCode(char const*, unsigned int) const
 T CHLTVServer::IsDemoPlayback()
 T CHLTVServer::IsHLTV() const
 T CHLTVServer::IsMasterProxy()
 T CHLTVServer::IsMultiplayer() const
 T CHLTVServer::IsRecording()
 T CHLTVServer::IsTVRelay()
 T CHLTVServer::LinkInstanceBaselines()
 T CHLTVServer::OnHLTVClientStateConnectionClosing(int)
 T CHLTVServer::RunFrame()
 T CHLTVServer::SHLTVDeltaFrame_t::~SHLTVDeltaFrame_t()
 T CHLTVServer::SendClientMessages(bool)
 T CHLTVServer::SendNetMsg(INetMessage const&, bool, bool)
 T CHLTVServer::SetMaxClients(int)
 T CHLTVServer::ShouldUpdateMasterServer()
 T CHLTVServer::Shutdown()
 T CHLTVServer::SignonComplete()
 T CHLTVServer::StartAutoRecording()
 T CHLTVServer::StartMaster(CGameClient*)
 T CHLTVServer::StartRelay()
 T CHLTVServer::StopRecording(CGameInfo const*)
 T CHLTVServer::StopRecordingAndFreeFrames(bool, CGameInfo const*)
 T CHLTVServer::UpdateHibernationState()
 T CHLTVServer::UpdateStats()
 T CHLTVServer::UpdateTick()
 T CHLTVServer::UserInfoChanged(int)
 T CHLTVServer::UsingTVSecretCode() const
 T CHLTVServer::~CHLTVServer()
 T CHTMLFile::AddSectionLink(CUtlString, CUtlString)
 T CHTMLFile::AddSectionText(char*, ...)
 T CHTMLFile::CreateSection(CUtlString, CUtlString)
 T CHTMLFile::CreateSectionAndLink(CUtlString, CUtlString)
 T CHTMLFile::Generate(CUtlString)
 T CHTMLFile::GenerateSection(CHTMLSection*, CUtlBuffer&)
 T CHTMLFile::PushActiveSection(CUtlString)
 T CHostState::FrameUpdate(float)
 T CHostState::OnClientConnected()
 T CHostState::RememberLocation()
 T CHostState::State_ChangeLevelMP()
 T CHostState::State_GameShutdown()
 T CHostState::State_LoadGame()
 T CHostState::State_NewGame()
 T CHostState::State_Run(float)
 T CIVDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T CIVDebugOverlay::AddBoxOverlay2(Vector const&, Vector const&, Vector const&, QAngle const&, Color const&, Color const&, float)
 T CIVDebugOverlay::AddCircleOverlay(Vector const&, float, int, int, int, int, bool, float)
 T CIVDebugOverlay::AddCoordFrameOverlay(matrix3x4_t const&, float, int (*) [3])
 T CIVDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
 T CIVDebugOverlay::AddGridOverlay(Vector const&)
 T CIVDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
 T CIVDebugOverlay::AddLineOverlayAlpha(Vector const&, Vector const&, int, int, int, int, bool, float)
 T CIVDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
 T CIVDebugOverlay::AddScreenTextOverlayOffset(float, float, int, float, int, int, int, int, char const*)
 T CIVDebugOverlay::AddSphereOverlay(Vector const&, float, int, int, int, int, int, int, float)
 T CIVDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T CIVDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
 T CIVDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
 T CIVDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
 T CIVDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, int, int, int, int, char const*, ...)
 T CIVDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
 T CIVDebugOverlay::Circle(Vector const&, Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T CIVDebugOverlay::ClearAllOverlays()
 T CIVDebugOverlay::ClearDeadOverlays()
 T CIVDebugOverlay::GetFirst()
 T CIVDebugOverlay::GetNext(OverlayText_t*)
 T CIVDebugOverlay::PurgeTextOverlays()
 T CIVDebugOverlay::ScreenPosition(Vector const&, Vector&)
 T CIVDebugOverlay::ScreenPosition(float, float, Vector&)
 T CImagePacker::AddBlock(int, int, int*, int*)
 T CImagePacker::GetEfficiency()
 T CImagePacker::Reset(int, int, int)
 T CInitTracker::Init(char const*, char const*, int)
 T CInitTracker::Shutdown(char const*, int)
 T CInitTracker::~CInitTracker()
 T CInstantReplay::CheckLimits()
 T CInstantReplay::Clear()
 T CInstantReplay::Disconnect()
 T CInstantReplay::FullFrameSplit(CSVCMsg_FullFrameSplit const&)
 T CInstantReplay::GetClosestSave(int, CDemoSaveGame*)
 T CInstantReplay::GetDemoFile()
 T CInstantReplay::GetFullFrameSplitAckTick() const
 T CInstantReplay::GetPacketTick()
 T CInstantReplay::GetPlaybackDeltaTick()
 T CInstantReplay::GetPlaybackStartTick()
 T CInstantReplay::GetPlaybackTick()
 T CInstantReplay::GetPlaybackTimeScale()
 T CInstantReplay::GetTotalTicks()
 T CInstantReplay::InsertFullPacket(int, CSVCMsg_PacketEntities const&)
 T CInstantReplay::InterceptMessage(INetMessage*)
 T CInstantReplay::IsPlaybackPaused() const
 T CInstantReplay::IsPlayingBack() const
 T CInstantReplay::IsPlayingTimeDemo() const
 T CInstantReplay::IsSkipping() const
 T CInstantReplay::PausePlayback(float)
 T CInstantReplay::ReadMessage()
 T CInstantReplay::ReadPacket()
 T CInstantReplay::ResetDemoInterpolation()
 T CInstantReplay::ResumePlayback()
 T CInstantReplay::SInstantReplayFrame::~SInstantReplayFrame()
 T CInstantReplay::SetPlaybackTimeScale(float)
 T CInstantReplay::SkipToTick(int, bool, bool)
 T CInstantReplay::StartPlayback(char const*, bool)
 T CInstantReplay::StopPlayback()
 T CInstantReplay::~CInstantReplay()
 T CIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CJob::Abort(bool)
 T CJob::CJob(JobPriority_t)
 T CJob::Describe()
 T CJob::DoAbort(bool)
 T CJob::DoCleanup()
 T CJob::Execute()
 T CJob::SetDescription(char const*)
 T CJob::~CJob()
 T CKeyBindingsMgr::AddPanelToContext(vgui::KeyBindingContextHandle_t, vgui::Panel*)
 T CKeyBindingsMgr::Find(vgui::KeyBindingContextHandle_t)
 T CKeyBindingsMgr::KeyBindingContextHandleLessFunc(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&)
 T CKeyBindingsMgr::~CKeyBindingsMgr()
 T CKeySymbol::CKeySymbol(char const*)
 T CKeyValueCache::FlushReloadCachedKeyValues(char const*, bool, char const*, char const*)
 T CKeyValueCache::LoadCachedKeyValues(char const*, bool, char const*, char const*)
 T CKeyValueCache::LoadCachedKeyValuesList(CUtlVector<char*, CUtlMemory<char*, int> >&, bool, char const*, char const*)
 T CKeyValueCache::ReleaseCachedKeyValues(KeyValues*)
 T CKeyValueCache::~CKeyValueCache()
 T CKeyValuesErrorStack::ReportError(char const*)
 T CKeyValuesTokenReader::ReadToken(bool&, bool&)
 T CKeyValuesTokenReader::SeekBackOneToken()
 T CLZMA::GetActualSize(unsigned char const*)
 T CLZMA::IsCompressed(unsigned char const*)
 T CLZMA::Uncompress(unsigned char const*, unsigned char*, void (*)())
 T CLZSS::Compress(unsigned char*, int, unsigned int*, bool)
 T CLZSS::CompressNoAlloc(unsigned char*, int, unsigned char*, unsigned int*, bool)
 T CLZSS::GetActualSize(unsigned char*)
 T CLZSS::Uncompress(unsigned char*, unsigned char*)
 T CL_AddSound(SoundInfo_t const&)
 T CL_AllocDlight(int)
 T CL_AllocElight(int)
 T CL_ApplyAddAngle()
 T CL_BenchFrame_f(CCommand const&)
 T CL_ChangeCloudSettingsCvar(IConVar*, char const*, float)
 T CL_CheckCRCs(char const*)
 T CL_CheckClientState()
 T CL_CheckForPureServerWhitelist()
 T CL_CheckToDisplayStartupMenus(CCommand const&)
 T CL_ClearState()
 T CL_CopyExistingEntity(CEntityReadInfo&)
 T CL_CopyNewEntity(CEntityReadInfo&, int, int)
 T CL_CreateDLLEntity(int, int, int)
 T CL_CreateEntityReportPanel(vgui::Panel*)
 T CL_CreateTextureListPanel(vgui::Panel*)
 T CL_DecayLights()
 T CL_DecompressBZipFile(char const*, char const*)
 T CL_DecompressBZipToDisk(char const*, char const*, char*, int)
 T CL_DeleteAllEntities()
 T CL_DeleteDLLEntity(int, char*, bool)
 T CL_DescribeEvent(int, CEventInfo*, char const*)
 T CL_DevShots_NextMap()
 T CL_DiscardOldAddAngleEntries(float)
 T CL_DispatchSound(SoundInfo_t const&)
 T CL_DispatchSounds()
 T CL_DownloadUpdate()
 T CL_EndMovie()
 T CL_ExtraMouseUpdate(float)
 T CL_FileDenied(char const*, unsigned int, bool)
 T CL_FileReceived(char const*, unsigned int, bool)
 T CL_FireEvents()
 T CL_FlushEntityPacket(CClientFrame*, char const*, ...)
 T CL_FullyConnected()
 T CL_GetBackgroundLevelName(char*, int, bool)
 T CL_GetDownloadQueueSize()
 T CL_GetHTTPDownloadProgress(unsigned int, int&, int&)
 T CL_GetPrecacheUserData(INetworkStringTable*, int)
 T CL_HTTPFileExists(char const*)
 T CL_HTTPStop_f()
 T CL_HandlePureServerWhitelist(CPureServerWhitelist*)
 T CL_HudMessage(char const*)
 T CL_Init()
 T CL_InitLanguageCvar()
 T CL_InstallAndInvokeClientStringTableCallbacks()
 T CL_IsRecordingMovie()
 T CL_LatchInterpolationAmount()
 T CL_ListDemo_f(CCommand const&)
 T CL_LoadWhitelist(INetworkStringTable*, char const*)
 T CL_MarkEntitiesOutOfPVS(CBitVec<2048>*)
 T CL_Move(float, bool)
 T CL_NameCvarChanged(IConVar*, char const*, float)
 T CL_NextDemo()
 T CL_PlayDemo_f(CCommand const&)
 T CL_PreprocessEntities()
 T CL_PreserveExistingEntity(int)
 T CL_PrintStringTables()
 T CL_PrintWhitelistInfo()
 T CL_ProcessPacketEntities(CSVCMsg_PacketEntities const&)
 T CL_ProcessVoiceData()
 T CL_QueueDownload(char const*)
 T CL_QueueHTTPDownload(char const*, char const*)
 T CL_RateCvarChanged(IConVar*, char const*, float)
 T CL_ReadPackets(bool)
 T CL_ReallocateDynamicData(int)
 T CL_RecordAddEntity(int)
 T CL_RecordDeleteEntity(int, ClientClass*)
 T CL_RecordEntityBits(int, int)
 T CL_RecordLeavePVS(int)
 T CL_RegisterResources()
 T CL_ResetEntityBits()
 T CL_Retry()
 T CL_RunPrediction(PREDICTION_REASON)
 T CL_SendMove()
 T CL_SendVoicePacket(bool)
 T CL_SetPagedPoolInfo()
 T CL_SetSteamCrashComment()
 T CL_SetupLocalNetworkBackDoor(bool)
 T CL_SetupMapName(char const*, char*, int)
 T CL_Shutdown()
 T CL_SndShow(char const*, SoundInfo_t const&)
 T CL_SolidMoved(IClientEntity*, ICollideable*, Vector const*, bool)
 T CL_StartMovie(char const*, int, int, int, float, int, bool)
 T CL_TakeJpeg(char const*, int)
 T CL_TakeScreenshot(char const*)
 T CL_TakeSnapshotAndSwap()
 T CL_TextureListPanel_ClearState()
 T CL_TimeDemoQuit_f(CCommand const&)
 T CL_TimeDemo_Helper(char const*, char const*, char const*)
 T CL_TimeDemo_VProfRecord_f(CCommand const&)
 T CL_TimeDemo_f(CCommand const&)
 T CL_TriggerMoved(IClientEntity*, bool)
 T CL_UpdateDAndELights(bool)
 T CLevelsColorOperation::Apply(Vector const&, Vector&)
 T CLevelsColorOperation::Clone()
 T CLevelsColorOperation::ComputeNormalizedInputLevel(float)
 T CLevelsColorOperation::GetBlendFactor()
 T CLevelsColorOperation::GetName()
 T CLevelsColorOperation::IsEnabled()
 T CLevelsColorOperation::Release()
 T CLevelsColorOperation::Serialize(CDmxElement*)
 T CLevelsColorOperation::SetBlendFactor(float)
 T CLevelsColorOperation::SetEnabled(bool)
 T CLevelsColorOperation::SetName(char const*)
 T CLevelsColorOperation::ToolID()
 T CLevelsColorOperation::Unserialize(CDmxElement*)
 T CLoaderProgress::BeginProgress()
 T CLoaderProgress::EndProgress()
 T CLoaderProgress::PauseNonInteractiveProgress(bool)
 T CLoaderProgress::UpdateProgress(float, bool)
 T CLocalNetworkBackdoor::AddToPendingDormantEntityList(unsigned short)
 T CLocalNetworkBackdoor::ClearState()
 T CLocalNetworkBackdoor::EndEntityStateUpdate()
 T CLocalNetworkBackdoor::EntState(int, int, int, SendTable const*, void const*, bool, bool)
 T CLocalNetworkBackdoor::ForceFlushEntity(int)
 T CLocalNetworkBackdoor::InitFastCopy()
 T CLocalNetworkBackdoor::ProcessDormantEntities()
 T CLocalNetworkBackdoor::StartBackdoorMode()
 T CLocalNetworkBackdoor::StartEntityStateUpdate()
 T CLocalNetworkBackdoor::StopBackdoorMode()
 T CLocalNetworkBackdoor::~CLocalNetworkBackdoor()
 T CLog::AddLogAddress(netadr_t)
 T CLog::CLog()
 T CLog::Close()
 T CLog::FireGameEvent(IGameEvent*)
 T CLog::Init()
 T CLog::IsActive()
 T CLog::ListLogAddress()
 T CLog::Open()
 T CLog::Print(char const*)
 T CLog::PrintServerVars()
 T CLog::Printf(char const*, ...)
 T CLog::RunFrame()
 T CLog::Shutdown()
 T CLog::~CLog()
 T CLookupViewPanel::CLookupViewPanel(vgui::Panel*, unsigned int)
 T CLookupViewPanel::GetAnimMap()
 T CLookupViewPanel::GetKBMap()
 T CLookupViewPanel::GetMessageMap()
 T CLookupViewPanel::GetPanelClassName()
 T CLookupViewPanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T CLookupViewPanel::~CLookupViewPanel()
 T CLookupViewWindow::CLookupViewWindow(vgui::Panel*, unsigned int)
 T CLookupViewWindow::GetAnimMap()
 T CLookupViewWindow::GetKBMap()
 T CLookupViewWindow::GetMessageMap()
 T CLookupViewWindow::GetPanelClassName()
 T CLookupViewWindow::Init()
 T CLookupViewWindow::Shutdown()
 T CLookupViewWindow::~CLookupViewWindow()
 T CMDLCacheNotify::ComputeModelFlags(model_t*, unsigned short)
 T CMDLCacheNotify::OnCombinerPreCache(unsigned short, unsigned short)
 T CMDLCacheNotify::OnDataLoaded(MDLCacheDataType_t, unsigned short)
 T CMDLCacheNotify::OnDataUnloaded(MDLCacheDataType_t, unsigned short)
 T CMPAException::CMPAException(CMPAException::ErrorIDs, char const*, char const*, bool)
 T CMPAException::ShowError()
 T CMPAException::~CMPAException()
 T CMPAFile::CMPAFile(char const*, unsigned int, void*)
 T CMPAFile::ExtractBytes(unsigned int&, unsigned int, bool)
 T CMPAFile::FillBuffer(unsigned int)
 T CMPAFile::Open(char const*)
 T CMPAFile::~CMPAFile()
 T CMPAHeader::CMPAHeader(CMPAFile*, unsigned int, bool, bool)
 T CMPAHeader::DecodeHeader(unsigned int, bool)
 T CMPAHeader::SkipEmptyFrames()
 T CMPAHeader::~CMPAHeader()
 T CMSurfaceSortList::AddSurfaceToTail(msurface2_t*, int, int)
 T CMSurfaceSortList::GetSurfaceAtHead(surfacesortgroup_t const&) const
 T CMSurfaceSortList::GetSurfaceListForGroup(CUtlVector<msurface2_t*, CUtlMemory<msurface2_t*, int> >&, surfacesortgroup_t const&) const
 T CMSurfaceSortList::Init(int, int)
 T CMSurfaceSortList::Reset()
 T CMSurfaceSortList::Shutdown()
 T CMSurfaceSortList::~CMSurfaceSortList()
 T CM_AreasConnected(int, int)
 T CM_BoxLeafnums(Vector const&, Vector const&, int*, int, int*)
 T CM_BoxLeafnums(leafnums_t&, Vector const&, Vector const&, int)
 T CM_BoxTrace(Ray_t const&, int, int, bool, CGameTrace&)
 T CM_BoxTraceAgainstLeafList(Ray_t const&, CTraceListData const&, int, CGameTrace&)
 T CM_BoxVisible(Vector const&, Vector const&, unsigned char const*, int)
 T CM_BrushContents_r(CCollisionBSPData*, int)
 T CM_ClearTrace(CGameTrace*)
 T CM_ClusterPVS(int)
 T CM_ClusterPVSSize()
 T CM_CreateDispPhysCollide(dphysdisp_t*, int)
 T CM_DecompressVis(CCollisionBSPData*, int, int, unsigned char*)
 T CM_DestroyDispPhysCollide()
 T CM_DiscardEntityString()
 T CM_DispTreeLeafnum(CCollisionBSPData*)
 T CM_EntityString()
 T CM_FreeMap()
 T CM_GetAreaPortalPlane(Vector const&, int, VPlane*)
 T CM_GetTraceDataForBSP(Vector const&, Vector const&, CTraceListData&)
 T CM_GetTraceDataForLeaf(TraceInfo_t*, int, CTraceListData&)
 T CM_GetVCollide(int)
 T CM_HeadnodeVisible(int, unsigned char const*, int)
 T CM_InlineModelContents(int)
 T CM_InlineModelNumber(int)
 T CM_LeafArea(int)
 T CM_LeafCluster(int)
 T CM_LeafContents(int)
 T CM_LeafFlags(int)
 T CM_LeavesConnected(Vector const&, int, int const*, bool*)
 T CM_LoadMap(char const*, bool, texinfo_s*, int, unsigned int*)
 T CM_NumClusters()
 T CM_PhysCollideForDisp(int)
 T CM_PointContents(Vector const&, int, int)
 T CM_PointLeafnum(Vector const&)
 T CM_PostTraceToDispTree(TraceInfo_t*)
 T CM_PreStab(TraceInfo_t*, unsigned short const*, int, Vector&, int, int&)
 T CM_RecursiveHullCheck(TraceInfo_t*, int, float, float)
 T CM_RegisterPaintMap(CCollisionBSPData*)
 T CM_SetAreaPortalState(int, int)
 T CM_SetAreaPortalStates(int const*, int const*, int)
 T CM_SetupAreaFloodNums(unsigned char*, int*)
 T CM_SnapPointToReferenceLeaf(Vector const&, float, Vector*)
 T CM_SnapPointToReferenceLeaf_r(CCollisionBSPData*, Vector const&, int, float, Vector*)
 T CM_Stab(TraceInfo_t*, Vector const&, Vector const&, int)
 T CM_SurfacepropsForDisp(int)
 T CM_TestInDispTree(TraceInfo_t*, unsigned short const*, int, Vector const&, Vector const&, Vector const&, int, CGameTrace*)
 T CM_TransformedBoxTrace(Ray_t const&, int, int, Vector const&, QAngle const&, CGameTrace&)
 T CM_TransformedPointContents(Vector const&, int, Vector const&, QAngle const&)
 T CM_VCollideForModel(int, model_t const*)
 T CM_Vis(unsigned char*, int, int, int)
 T CM_WorldSpaceBounds(ICollideable*, Vector*, Vector*)
 T CM_WorldSpaceCenter(ICollideable*, Vector*)
 T CM_WriteAreaBits(unsigned char*, int, int)
 T CManagedDataCacheClient<CAsyncWaveData, asyncwaveparams_t, CAsyncWaveData*>::HandleCacheNotification(DataCacheNotification_t const&)
 T CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::CacheUnlock(memhandle_t__*)
 T CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::HandleCacheNotification(DataCacheNotification_t const&)
 T CMapListManager::BuildList()
 T CMapListManager::RefreshList()
 T CMapListManager::~CMapListManager()
 T CMapLoadHelper::CMapLoadHelper(int)
 T CMapLoadHelper::GetDiskName()
 T CMapLoadHelper::GetMap()
 T CMapLoadHelper::Init(model_t*, char const*)
 T CMapLoadHelper::LoadLumpData(int, int, void*)
 T CMapLoadHelper::LoadLumpElement(int, int, void*)
 T CMapLoadHelper::LumpBase()
 T CMapLoadHelper::LumpOffset()
 T CMapLoadHelper::LumpSize()
 T CMapLoadHelper::LumpSize(int)
 T CMapLoadHelper::LumpVersion() const
 T CMapLoadHelper::Shutdown()
 T CMapLoadHelper::~CMapLoadHelper()
 T CMapReslistGenerator::BuildEngineLogFromReslist()
 T CMapReslistGenerator::BuildMapList()
 T CMapReslistGenerator::CMapReslistGenerator()
 T CMapReslistGenerator::EnableDeletionsTracking()
 T CMapReslistGenerator::EnableReslistGeneration(bool)
 T CMapReslistGenerator::FileSystemLoggingFunc(char const*, char const*)
 T CMapReslistGenerator::GetResListDirectory() const
 T CMapReslistGenerator::IsCreatingForXbox()
 T CMapReslistGenerator::LogPrefix()
 T CMapReslistGenerator::LogToEngineReslist(char const*)
 T CMapReslistGenerator::OnLevelLoadEnd()
 T CMapReslistGenerator::OnLevelLoadStart(char const*)
 T CMapReslistGenerator::OnLevelShutdown()
 T CMapReslistGenerator::OnModelPrecached(char const*)
 T CMapReslistGenerator::OnPlayerSpawn()
 T CMapReslistGenerator::OnResourcePrecached(char const*)
 T CMapReslistGenerator::OnResourcePrecachedFullPath(char const*)
 T CMapReslistGenerator::OnSoundPrecached(char const*)
 T CMapReslistGenerator::RunFrame()
 T CMapReslistGenerator::Shutdown()
 T CMapReslistGenerator::SpewTrackedDeletionsLog()
 T CMapReslistGenerator::StartReslistGeneration()
 T CMapReslistGenerator::TrackDeletions(char const*)
 T CMapReslistGenerator::TrackDeletionsLoggingFunc(char const*, char const*)
 T CMapReslistGenerator::WriteMapLog()
 T CMapReslistGenerator::~CMapReslistGenerator()
 T CMaterialProxyFactory::CreateProxy(char const*)
 T CMaterialProxyFactory::DeleteProxy(IMaterialProxy*)
 T CMaterialProxyFactory::GetFactory()
 T CMaterialReference::CMaterialReference(char const*, char const*, bool)
 T CMaterialReference::Init(IMaterial*)
 T CMaterialReference::Init(char const*, char const*, bool)
 T CMaterialReference::Shutdown(bool)
 T CMaterialReference::~CMaterialReference()
 T CMaterialsBuckets<msurface2_t*>::AddElement(int, msurface2_t*)
 T CMaterialsBuckets<msurface2_t*>::Flush()
 T CMaterialsBuckets<msurface2_t*>::SetNumMaterialSortIDs(int)
 T CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::CMemberFunctor3(CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*> const&, CUtlEnvelope<char const*> const&, bool const&)
 T CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::CMemberFunctor3(CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*> const&, CUtlEnvelope<char const*> const&, bool const&)
 T CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor7()
 T CMemoryStack::CMemoryStack()
 T CMemoryStack::CommitTo(unsigned char*)
 T CMemoryStack::FreeAll(bool)
 T CMemoryStack::FreeToAllocPoint(unsigned int, bool)
 T CMemoryStack::GetAllocatedBytes() const
 T CMemoryStack::GetCommittedBytes() const
 T CMemoryStack::GetHighestBytes() const
 T CMemoryStack::GetMemoryName() const
 T CMemoryStack::GetReservedBytes() const
 T CMemoryStack::GetSize() const
 T CMemoryStack::Init(char const*, unsigned int, unsigned int, unsigned int, unsigned int)
 T CMemoryStack::~CMemoryStack()
 T CMessage::ApplySchemeSettings(vgui::IScheme*)
 T CMessage::CMessage(vgui::Panel*, char const*, char const*)
 T CMessage::GetAnimMap()
 T CMessage::GetKBMap()
 T CMessage::GetMessageMap()
 T CMessage::GetPanelClassName()
 T CMessage::~CMessage()
 T CMiniDumpComment::BuildComment(char const*, bool, MiniDumpHandlerData_t const*)
 T CMiniDumpComment::~CMiniDumpComment()
 T CMixerControls::CMixerControls()
 T CMixerControls::GetMixerName()
 T CMixerControls::GetValue_Float(IMixerControls::Control, float&)
 T CMixerControls::Release()
 T CMixerControls::SelectMicrophoneForWaveInput()
 T CMixerControls::SetValue_Float(IMixerControls::Control, float)
 T CMixerControls::~CMixerControls()
 T CModAppSystemGroup::Create()
 T CModAppSystemGroup::Destroy()
 T CModAppSystemGroup::Main()
 T CModAppSystemGroup::PostShutdown()
 T CModAppSystemGroup::PreInit()
 T CModelInfo::AddRefDynamicModel(int)
 T CModelInfo::ComputeLevelScreenFade(Vector const&, float, float) const
 T CModelInfo::ComputeTranslucencyType(model_t const*, int, int)
 T CModelInfo::ComputeViewScreenFade(Vector const&, float, float) const
 T CModelInfo::FindModel(studiohdr_t const*, void**, char const*) const
 T CModelInfo::FindModel(void*) const
 T CModelInfo::FindOrLoadModel(char const*) const
 T CModelInfo::GetAnimBlock(studiohdr_t const*, int) const
 T CModelInfo::GetAutoplayList(studiohdr_t const*, unsigned short**) const
 T CModelInfo::GetBrushModelPlane(model_t const*, int, cplane_t&, Vector*) const
 T CModelInfo::GetBrushModelPlaneCount(model_t const*) const
 T CModelInfo::GetCacheHandle(model_t const*) const
 T CModelInfo::GetCollideForVirtualTerrain(int)
 T CModelInfo::GetIlluminationPoint(model_t const*, IClientRenderable*, Vector const&, QAngle const&, Vector*)
 T CModelInfo::GetLevelScreenFadeRange(float*, float*) const
 T CModelInfo::GetModelBounds(model_t const*, Vector&, Vector&) const
 T CModelInfo::GetModelClientSideIndex(char const*) const
 T CModelInfo::GetModelContents(int) const
 T CModelInfo::GetModelExtraData(model_t const*)
 T CModelInfo::GetModelFrameCount(model_t const*) const
 T CModelInfo::GetModelIndex(char const*) const
 T CModelInfo::GetModelKeyValue(model_t const*, CUtlBuffer&)
 T CModelInfo::GetModelKeyValueText(model_t const*)
 T CModelInfo::GetModelMaterialCount(model_t const*) const
 T CModelInfo::GetModelMaterials(model_t const*, int, IMaterial**)
 T CModelInfo::GetModelName(model_t const*) const
 T CModelInfo::GetModelRadius(model_t const*)
 T CModelInfo::GetModelRenderBounds(model_t const*, Vector&, Vector&) const
 T CModelInfo::GetModelSpriteHeight(model_t const*) const
 T CModelInfo::GetModelSpriteWidth(model_t const*) const
 T CModelInfo::GetModelType(model_t const*) const
 T CModelInfo::GetStudiomodel(model_t const*)
 T CModelInfo::GetSurfacepropsForVirtualTerrain(int)
 T CModelInfo::GetVCollide(int) const
 T CModelInfo::GetVCollide(model_t const*) const
 T CModelInfo::GetVirtualModel(studiohdr_t const*) const
 T CModelInfo::GrowNetworkedDynamicModels(int)
 T CModelInfo::IsDynamicModelLoading(int)
 T CModelInfo::IsModelVertexLit(model_t const*) const
 T CModelInfo::IsTranslucent(model_t const*) const
 T CModelInfo::IsTranslucentTwoPass(model_t const*) const
 T CModelInfo::IsUsingFBTexture(model_t const*, int, int, void*) const
 T CModelInfo::IsValidModel(model_t const*) const
 T CModelInfo::LookupDynamicModel(int)
 T CModelInfo::ModelHasMaterialProxy(model_t const*) const
 T CModelInfo::OnDynamicModelStringTableChanged(int, char const*, void const*)
 T CModelInfo::OnLevelChange()
 T CModelInfo::ReferenceModel(char const*)
 T CModelInfo::RegisterModelLoadCallback(int, IModelLoadCallback*, bool)
 T CModelInfo::ReleaseDynamicModel(int)
 T CModelInfo::SetLevelScreenFadeRange(float, float)
 T CModelInfo::SetViewScreenFadeRange(float, float)
 T CModelInfo::UnloadUnreferencedModels()
 T CModelInfo::UnreferenceModel(model_t*)
 T CModelInfo::UnregisterModelLoadCallback(int, IModelLoadCallback*)
 T CModelInfo::UsesEnvCubemap(model_t const*) const
 T CModelInfo::UsesStaticLighting(model_t const*) const
 T CModelInfo::~CModelInfo()
 T CModelInfoClient::AddSecondaryCombinedModel(int, char const*, int)
 T CModelInfoClient::BeginCombinedModel(char const*, bool)
 T CModelInfoClient::ComputeLevelScreenFade(Vector const&, float, float) const
 T CModelInfoClient::ComputeScreenFade(Vector const&, float, float, CModelInfoClient::ScreenFadeInfo_t const&) const
 T CModelInfoClient::ComputeViewScreenFade(Vector const&, float, float) const
 T CModelInfoClient::FinishCombinedModel(int, void (*)(void*, unsigned short, unsigned short, SCombinedResults&), void*)
 T CModelInfoClient::GetDynamicModelStringTable() const
 T CModelInfoClient::GetLevelScreenFadeRange(float*, float*) const
 T CModelInfoClient::GetModel(int) const
 T CModelInfoClient::GetModelMaterialColorAndLighting(model_t const*, Vector const&, QAngle const&, CGameTrace*, Vector&, Vector&)
 T CModelInfoClient::LookupPrecachedModelIndex(char const*) const
 T CModelInfoClient::OnDynamicModelStringTableChanged(int, char const*, void const*)
 T CModelInfoClient::OnLevelChange()
 T CModelInfoClient::ReferenceModel(char const*)
 T CModelInfoClient::RegisterCombinedDynamicModel(char const*, unsigned short)
 T CModelInfoClient::RegisterDynamicModel(char const*, bool, bool)
 T CModelInfoClient::ReleaseCombinedModel(int)
 T CModelInfoClient::SetLevelScreenFadeRange(float, float)
 T CModelInfoClient::SetPrimaryCombinedModel(int, char const*, int)
 T CModelInfoClient::SetViewScreenFadeRange(float, float)
 T CModelInfoClient::UnloadUnreferencedModels()
 T CModelInfoClient::UnreferenceModel(model_t*)
 T CModelInfoClient::UpdateCombinedDynamicModel(int, unsigned short)
 T CModelInfoClient::~CModelInfoClient()
 T CModelInfoServer::AddSecondaryCombinedModel(int, char const*, int)
 T CModelInfoServer::BeginCombinedModel(char const*, bool)
 T CModelInfoServer::FinishCombinedModel(int, void (*)(void*, unsigned short, unsigned short, SCombinedResults&), void*)
 T CModelInfoServer::GetDynamicModelStringTable() const
 T CModelInfoServer::GetModel(int) const
 T CModelInfoServer::GetModelMaterialColorAndLighting(model_t const*, Vector const&, QAngle const&, CGameTrace*, Vector&, Vector&)
 T CModelInfoServer::LookupPrecachedModelIndex(char const*) const
 T CModelInfoServer::RegisterCombinedDynamicModel(char const*, unsigned short)
 T CModelInfoServer::RegisterDynamicModel(char const*, bool, bool)
 T CModelInfoServer::ReleaseCombinedModel(int)
 T CModelInfoServer::SetPrimaryCombinedModel(int, char const*, int)
 T CModelInfoServer::UpdateCombinedDynamicModel(int, unsigned short)
 T CModelInfoServer::~CModelInfoServer()
 T CModelLoader::AddRefDynamicModel(model_t*, bool)
 T CModelLoader::AddSecondaryCombinedModel(model_t*, char const*, int)
 T CModelLoader::CModelLoader()
 T CModelLoader::Client_OnServerModelStateChanged(model_t*, bool)
 T CModelLoader::DebugCombinerInfo()
 T CModelLoader::DebugPrintDynamicModels()
 T CModelLoader::DumpVCollideStats()
 T CModelLoader::FindModel(char const*)
 T CModelLoader::FinishCombinedModel(model_t*, void (*)(void*, unsigned short, unsigned short, SCombinedResults&), void*)
 T CModelLoader::FinishDynamicModelLoadIfReady(CModelLoader::CDynamicModelInfo*, model_t*)
 T CModelLoader::FlushDynamicModels()
 T CModelLoader::ForceUnloadNonClientDynamicModels()
 T CModelLoader::GetCount()
 T CModelLoader::GetDynamicCombinedModel(char const*, bool)
 T CModelLoader::GetDynamicModel(char const*, bool)
 T CModelLoader::GetExtraData(model_t*)
 T CModelLoader::GetModelFileSize(char const*)
 T CModelLoader::GetModelForIndex(int)
 T CModelLoader::GetModelForName(char const*, IModelLoader::REFERENCETYPE)
 T CModelLoader::GetName(model_t const*)
 T CModelLoader::GetTypeFromName(char const*)
 T CModelLoader::Init()
 T CModelLoader::InternalUpdateDynamicModels(bool)
 T CModelLoader::IsDynamicModelLoading(model_t*)
 T CModelLoader::IsLoaded(model_t const*)
 T CModelLoader::LastLoadedMapHasHDRLighting()
 T CModelLoader::LoadModel(model_t*, IModelLoader::REFERENCETYPE*)
 T CModelLoader::Map_GetRenderInfoAllocated()
 T CModelLoader::Map_IsValid(char const*, bool)
 T CModelLoader::Map_LoadDisplacements(model_t*, bool)
 T CModelLoader::Map_LoadModel(model_t*)
 T CModelLoader::Map_LoadModelGuts(model_t*)
 T CModelLoader::Map_SetRenderInfoAllocated(bool)
 T CModelLoader::Map_UnloadCubemapSamples(model_t*)
 T CModelLoader::Map_UnloadModel(model_t*)
 T CModelLoader::Print()
 T CModelLoader::PurgeUnusedModels()
 T CModelLoader::QueueDynamicModelLoad(CModelLoader::CDynamicModelInfo*, model_t*)
 T CModelLoader::RecomputeSurfaceFlags(model_t*)
 T CModelLoader::ReferenceModel(char const*, IModelLoader::REFERENCETYPE)
 T CModelLoader::RegisterModelLoadCallback(model_t*, IModelLoadCallback*, bool)
 T CModelLoader::ReleaseDynamicCombinedModel(model_t*, bool)
 T CModelLoader::ReleaseDynamicModel(model_t*, bool)
 T CModelLoader::ReloadFilesInList(IFileList*)
 T CModelLoader::SetPrimaryCombinedModel(model_t*, char const*, int)
 T CModelLoader::SetupSubModels(model_t*, CUtlVector<mmodel_t, CUtlMemory<mmodel_t, int> >&)
 T CModelLoader::Shutdown()
 T CModelLoader::Sprite_LoadModel(model_t*)
 T CModelLoader::Sprite_UnloadModel(model_t*)
 T CModelLoader::Studio_LoadModel(model_t*, bool)
 T CModelLoader::Studio_ReloadModels(IModelLoader::ReloadType_t)
 T CModelLoader::UnloadModel(model_t*)
 T CModelLoader::UnloadUnreferencedModels()
 T CModelLoader::UnreferenceAllModels(IModelLoader::REFERENCETYPE)
 T CModelLoader::UnreferenceModel(model_t*, IModelLoader::REFERENCETYPE)
 T CModelLoader::UnregisterModelLoadCallback(model_t*, IModelLoadCallback*)
 T CModelLoader::UpdateDynamicCombinedModel(model_t*, unsigned short, bool)
 T CModelLoader::UpdateDynamicModelLoadQueue()
 T CModelLoader::UpdateDynamicModels()
 T CModelLoader::~CModelLoader()
 T CModelRender::AddDecal(unsigned short, Ray_t const&, Vector const&, int, int, bool, int)
 T CModelRender::CModelRender()
 T CModelRender::ChangeInstance(unsigned short, IClientRenderable*)
 T CModelRender::CleanupStaticLightingState(int, memhandle_t__**)
 T CModelRender::ComputeAmbientBoost(int, LightingQuery_t const*, MaterialLightingState_t*)
 T CModelRender::ComputeLOD(ModelRenderInfo_t const&, DrawModelState_t&)
 T CModelRender::ComputeLightingState(int, LightingQuery_t const*, MaterialLightingState_t*, ITexture**)
 T CModelRender::ComputeStaticLightingState(int, StaticLightingQuery_t const*, MaterialLightingState_t*, MaterialLightingState_t*, ColorMeshInfo_t**, ITexture**, memhandle_t__**)
 T CModelRender::CreateInstance(IClientRenderable*, LightCacheHandle_t__**)
 T CModelRender::DebugDrawLightingOrigin(DrawModelState_t const&, ModelRenderInfo_t const&)
 T CModelRender::DestroyInstance(unsigned short)
 T CModelRender::DrawModel(int, IClientRenderable*, unsigned short, int, model_t const*, Vector const&, QAngle const&, int, int, int, matrix3x4_t const*, matrix3x4_t const*)
 T CModelRender::DrawModelEx(ModelRenderInfo_t&)
 T CModelRender::DrawModelExStaticProp(ModelRenderInfo_t&)
 T CModelRender::DrawModelExecute(DrawModelState_t const&, ModelRenderInfo_t const&, matrix3x4_t*)
 T CModelRender::DrawModelSetup(ModelRenderInfo_t&, DrawModelState_t*, matrix3x4_t**)
 T CModelRender::DrawModelShadow(IClientRenderable*, DrawModelInfo_t const&, matrix3x4a_t*)
 T CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4a_t*)
 T CModelRender::DrawStaticPropArrayFast(StaticPropRenderInfo_t*, int, bool)
 T CModelRender::ForcedMaterialOverride(IMaterial*, OverrideType_t)
 T CModelRender::GetBrightestShadowingLightSource(Vector const&, Vector&, Vector&, bool)
 T CModelRender::GetItemName(unsigned int, void const*, char*, unsigned int)
 T CModelRender::GetLightingConditions(Vector const&, Vector*, int, LightDesc_t*, ITexture*&, unsigned short, bool)
 T CModelRender::GetModelDecalHandles(StudioDecalHandle_t__**, int, int, unsigned short const*)
 T CModelRender::GetStaticLighting(unsigned short)
 T CModelRender::IsStaticProp(unsigned short)
 T CModelRender::ProtectColorDataIfQueued(memhandle_t__*)
 T CModelRender::RecomputeStaticLighting(unsigned short)
 T CModelRender::ReleaseAllStaticPropColorData()
 T CModelRender::RemoveAllDecals(unsigned short)
 T CModelRender::RemoveAllDecalsFromAllModels()
 T CModelRender::RestoreAllStaticPropColorData()
 T CModelRender::SetStaticLighting(unsigned short, LightCacheHandle_t__**)
 T CModelRender::SetViewTarget(CStudioHdr const*, int, Vector const&)
 T CModelRender::SetupColorMeshes(int)
 T CModelRender::SetupLighting(Vector const&)
 T CModelRender::SetupLightingEx(Vector const&, unsigned short)
 T CModelRender::SnapCurrentLightingState(CModelRender::ModelInstance_t&, LightingState_t*)
 T CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)
 T CModelRender::SuppressEngineLighting(bool)
 T CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)
 T CModelRender::UnlockCacheCacheHandleArray(int, memhandle_t__**)
 T CModelRender::~CModelRender()
 T CMsgQAngle::ByteSize() const
 T CMsgQAngle::CMsgQAngle()
 T CMsgQAngle::Clear()
 T CMsgQAngle::GetCachedSize() const
 T CMsgQAngle::GetMetadata() const
 T CMsgQAngle::IsInitialized() const
 T CMsgQAngle::MergeFrom(CMsgQAngle const&)
 T CMsgQAngle::New() const
 T CMsgQAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgQAngle::SetCachedSize(int) const
 T CMsgQAngle::default_instance()
 T CMsgQAngle::~CMsgQAngle()
 T CMsgVector2D::ByteSize() const
 T CMsgVector2D::Clear()
 T CMsgVector2D::GetCachedSize() const
 T CMsgVector2D::GetMetadata() const
 T CMsgVector2D::IsInitialized() const
 T CMsgVector2D::MergeFrom(CMsgVector2D const&)
 T CMsgVector2D::New() const
 T CMsgVector2D::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgVector2D::SetCachedSize(int) const
 T CMsgVector2D::~CMsgVector2D()
 T CMsgVector::ByteSize() const
 T CMsgVector::CMsgVector()
 T CMsgVector::Clear()
 T CMsgVector::GetCachedSize() const
 T CMsgVector::GetMetadata() const
 T CMsgVector::IsInitialized() const
 T CMsgVector::MergeFrom(CMsgVector const&)
 T CMsgVector::New() const
 T CMsgVector::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgVector::SetCachedSize(int) const
 T CMsgVector::default_instance()
 T CMsgVector::~CMsgVector()
 T CMsg_CVars::ByteSize() const
 T CMsg_CVars::CMsg_CVars()
 T CMsg_CVars::Clear()
 T CMsg_CVars::GetCachedSize() const
 T CMsg_CVars::GetMetadata() const
 T CMsg_CVars::IsInitialized() const
 T CMsg_CVars::MergeFrom(CMsg_CVars const&)
 T CMsg_CVars::New() const
 T CMsg_CVars::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsg_CVars::SetCachedSize(int) const
 T CMsg_CVars::default_instance()
 T CMsg_CVars::~CMsg_CVars()
 T CMsg_CVars_CVar::ByteSize() const
 T CMsg_CVars_CVar::CMsg_CVars_CVar()
 T CMsg_CVars_CVar::Clear()
 T CMsg_CVars_CVar::GetCachedSize() const
 T CMsg_CVars_CVar::GetMetadata() const
 T CMsg_CVars_CVar::IsInitialized() const
 T CMsg_CVars_CVar::MergeFrom(CMsg_CVars_CVar const&)
 T CMsg_CVars_CVar::New() const
 T CMsg_CVars_CVar::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsg_CVars_CVar::SetCachedSize(int) const
 T CMsg_CVars_CVar::SharedDtor()
 T CMsg_CVars_CVar::~CMsg_CVars_CVar()
 T CNETMsg_Disconnect::ByteSize() const
 T CNETMsg_Disconnect::Clear()
 T CNETMsg_Disconnect::GetCachedSize() const
 T CNETMsg_Disconnect::GetMetadata() const
 T CNETMsg_Disconnect::IsInitialized() const
 T CNETMsg_Disconnect::MergeFrom(CNETMsg_Disconnect const&)
 T CNETMsg_Disconnect::New() const
 T CNETMsg_Disconnect::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_Disconnect::SetCachedSize(int) const
 T CNETMsg_Disconnect::~CNETMsg_Disconnect()
 T CNETMsg_File::ByteSize() const
 T CNETMsg_File::CNETMsg_File()
 T CNETMsg_File::Clear()
 T CNETMsg_File::GetCachedSize() const
 T CNETMsg_File::GetMetadata() const
 T CNETMsg_File::IsInitialized() const
 T CNETMsg_File::MergeFrom(CNETMsg_File const&)
 T CNETMsg_File::New() const
 T CNETMsg_File::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_File::SetCachedSize(int) const
 T CNETMsg_File::~CNETMsg_File()
 T CNETMsg_NOP::ByteSize() const
 T CNETMsg_NOP::Clear()
 T CNETMsg_NOP::GetCachedSize() const
 T CNETMsg_NOP::GetMetadata() const
 T CNETMsg_NOP::IsInitialized() const
 T CNETMsg_NOP::MergeFrom(CNETMsg_NOP const&)
 T CNETMsg_NOP::New() const
 T CNETMsg_NOP::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_NOP::SetCachedSize(int) const
 T CNETMsg_NOP::~CNETMsg_NOP()
 T CNETMsg_SetConVar::ByteSize() const
 T CNETMsg_SetConVar::CNETMsg_SetConVar()
 T CNETMsg_SetConVar::Clear()
 T CNETMsg_SetConVar::CopyFrom(CNETMsg_SetConVar const&)
 T CNETMsg_SetConVar::GetCachedSize() const
 T CNETMsg_SetConVar::GetMetadata() const
 T CNETMsg_SetConVar::IsInitialized() const
 T CNETMsg_SetConVar::MergeFrom(CNETMsg_SetConVar const&)
 T CNETMsg_SetConVar::New() const
 T CNETMsg_SetConVar::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SetConVar::SetCachedSize(int) const
 T CNETMsg_SetConVar::~CNETMsg_SetConVar()
 T CNETMsg_SetConVar_t::AddToTail(char const*, char const*)
 T CNETMsg_SetConVar_t::~CNETMsg_SetConVar_t()
 T CNETMsg_SignonState::ByteSize() const
 T CNETMsg_SignonState::CNETMsg_SignonState()
 T CNETMsg_SignonState::Clear()
 T CNETMsg_SignonState::CopyFrom(CNETMsg_SignonState const&)
 T CNETMsg_SignonState::GetCachedSize() const
 T CNETMsg_SignonState::GetMetadata() const
 T CNETMsg_SignonState::IsInitialized() const
 T CNETMsg_SignonState::MergeFrom(CNETMsg_SignonState const&)
 T CNETMsg_SignonState::New() const
 T CNETMsg_SignonState::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SignonState::SetCachedSize(int) const
 T CNETMsg_SignonState::~CNETMsg_SignonState()
 T CNETMsg_SignonState_t::~CNETMsg_SignonState_t()
 T CNETMsg_SplitScreenUser::ByteSize() const
 T CNETMsg_SplitScreenUser::Clear()
 T CNETMsg_SplitScreenUser::GetCachedSize() const
 T CNETMsg_SplitScreenUser::GetMetadata() const
 T CNETMsg_SplitScreenUser::IsInitialized() const
 T CNETMsg_SplitScreenUser::MergeFrom(CNETMsg_SplitScreenUser const&)
 T CNETMsg_SplitScreenUser::New() const
 T CNETMsg_SplitScreenUser::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_SplitScreenUser::SetCachedSize(int) const
 T CNETMsg_SplitScreenUser::~CNETMsg_SplitScreenUser()
 T CNETMsg_StringCmd::ByteSize() const
 T CNETMsg_StringCmd::CNETMsg_StringCmd()
 T CNETMsg_StringCmd::Clear()
 T CNETMsg_StringCmd::CopyFrom(CNETMsg_StringCmd const&)
 T CNETMsg_StringCmd::GetCachedSize() const
 T CNETMsg_StringCmd::GetMetadata() const
 T CNETMsg_StringCmd::IsInitialized() const
 T CNETMsg_StringCmd::MergeFrom(CNETMsg_StringCmd const&)
 T CNETMsg_StringCmd::New() const
 T CNETMsg_StringCmd::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_StringCmd::SetCachedSize(int) const
 T CNETMsg_StringCmd::~CNETMsg_StringCmd()
 T CNETMsg_StringCmd_t::CNETMsg_StringCmd_t(char const*)
 T CNETMsg_StringCmd_t::~CNETMsg_StringCmd_t()
 T CNETMsg_Tick::ByteSize() const
 T CNETMsg_Tick::CNETMsg_Tick()
 T CNETMsg_Tick::Clear()
 T CNETMsg_Tick::CopyFrom(CNETMsg_Tick const&)
 T CNETMsg_Tick::GetCachedSize() const
 T CNETMsg_Tick::GetMetadata() const
 T CNETMsg_Tick::IsInitialized() const
 T CNETMsg_Tick::MergeFrom(CNETMsg_Tick const&)
 T CNETMsg_Tick::New() const
 T CNETMsg_Tick::SerializeWithCachedSizesToArray(unsigned char*) const
 T CNETMsg_Tick::SetCachedSize(int) const
 T CNETMsg_Tick::~CNETMsg_Tick()
 T CNETMsg_Tick_t::~CNETMsg_Tick_t()
 T CNetConsoleMgr::CNetConsoleMgr()
 T CNetConsoleMgr::Execute(CConnectedNetConsoleData*)
 T CNetConsoleMgr::OnSocketAccepted(int, netadr_t const&, void**)
 T CNetConsoleMgr::OnSocketClosed(int, netadr_t const&, void*)
 T CNetConsoleMgr::RunFrame()
 T CNetConsoleMgr::SendStringToNetConsoles(char const*)
 T CNetConsoleMgr::ShouldAcceptSocket(int, netadr_t const&)
 T CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>::GetType() const
 T CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CCLCMsg_FileCRCCheck_t>::~BindParams()
 T CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>::GetType() const
 T CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNETMsg_SetConVar_t>::~BindParams()
 T CNetMessageBinder::BindParams<CNETMsg_SignonState_t>::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNETMsg_SignonState_t>::GetType() const
 T CNetMessageBinder::BindParams<CNETMsg_SignonState_t>::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNETMsg_SignonState_t>::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNETMsg_SignonState_t>::~BindParams()
 T CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>::GetType() const
 T CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNETMsg_StringCmd_t>::~BindParams()
 T CNetMessageBinder::BindParams<CNETMsg_Tick_t>::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNETMsg_Tick_t>::GetType() const
 T CNetMessageBinder::BindParams<CNETMsg_Tick_t>::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNETMsg_Tick_t>::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNETMsg_Tick_t>::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CCLCMsg_VoiceData, 9, false> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<11, CSVCMsg_SetPause, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<16, CSVCMsg_Print, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<17, CSVCMsg_Sounds, 4, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<18, CSVCMsg_SetView, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<19, CSVCMsg_FixAngle, 0, false> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<23, CSVCMsg_UserMessage, 7, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<25, CSVCMsg_GameEvent, 5, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<27, CSVCMsg_TempEntities, 6, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<28, CSVCMsg_Prefetch, 4, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<29, CSVCMsg_Menu, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<30, CSVCMsg_GameEventList, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CCLCMsg_Move, 11, false> >::~BindParams()
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >::CreateFromBuffer(bf_read&)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >::GetType() const
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >::Process(INetMessage const&)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >::SetNetChannel(INetChannel*)
 T CNetMessageBinder::BindParams<CNetMessagePB<9, CSVCMsg_SendTable, 13, true> >::~BindParams()
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::Clone() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::GetGroup() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::GetName() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::GetSize() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::GetType() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::IsReliable() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::SetReliable(bool)
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::ToString() const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::~CNetMessagePB()
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::Clone() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::GetGroup() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::GetName() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::GetSize() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::GetType() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::IsReliable() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::SetReliable(bool)
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::ToString() const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::~CNetMessagePB()
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::Clone() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::GetGroup() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::GetName() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::GetSize() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::GetType() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::IsReliable() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::SetReliable(bool)
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::ToString() const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::~CNetMessagePB()
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::Clone() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::GetGroup() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::GetName() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::GetSize() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::GetType() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::IsReliable() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::SetReliable(bool)
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::ToString() const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::~CNetMessagePB()
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::Clone() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::GetGroup() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::GetName() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::GetSize() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::GetType() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::IsReliable() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::SetReliable(bool)
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::ToString() const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::~CNetMessagePB()
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::Clone() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::GetGroup() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::GetName() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::GetSize() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::GetType() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::IsReliable() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::SetReliable(bool)
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::ToString() const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::~CNetMessagePB()
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::Clone() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::GetGroup() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::GetName() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::GetSize() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::GetType() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::IsReliable() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::SetReliable(bool)
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::ToString() const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::~CNetMessagePB()
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::Clone() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::GetGroup() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::GetName() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::GetSize() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::GetType() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::IsReliable() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::SetReliable(bool)
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::ToString() const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::~CNetMessagePB()
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::Clone() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::GetGroup() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::GetName() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::GetSize() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::GetType() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::IsReliable() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::SetReliable(bool)
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::ToString() const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::~CNetMessagePB()
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::Clone() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::GetGroup() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::GetName() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::GetSize() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::GetType() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::IsReliable() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::SetReliable(bool)
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::ToString() const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::~CNetMessagePB()
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::Clone() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::GetGroup() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::GetName() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::GetSize() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::GetType() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::IsReliable() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::SetReliable(bool)
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::ToString() const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::~CNetMessagePB()
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::Clone() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::GetGroup() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::GetName() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::GetSize() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::GetType() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::IsReliable() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::SetReliable(bool)
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::ToString() const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::~CNetMessagePB()
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::Clone() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::GetGroup() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::GetName() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::GetSize() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::GetType() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::IsReliable() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::SetReliable(bool)
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::ToString() const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::~CNetMessagePB()
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::Clone() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::GetGroup() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::GetName() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::GetSize() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::GetType() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::IsReliable() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::SetReliable(bool)
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::ToString() const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<16, CSVCMsg_Print, 0, true>::~CNetMessagePB()
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::Clone() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::GetGroup() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::GetName() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::GetSize() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::GetType() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::IsReliable() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::SetReliable(bool)
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::ToString() const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::~CNetMessagePB()
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::Clone() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::GetGroup() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::GetName() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::GetSize() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::GetType() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::IsReliable() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::SetReliable(bool)
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::ToString() const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::~CNetMessagePB()
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::Clone() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::GetGroup() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::GetName() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::GetSize() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::GetType() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::IsReliable() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::SetReliable(bool)
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::ToString() const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<18, CSVCMsg_SetView, 0, true>::~CNetMessagePB()
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::Clone() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::GetGroup() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::GetName() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::GetSize() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::GetType() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::IsReliable() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::SetReliable(bool)
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::ToString() const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::~CNetMessagePB()
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::Clone() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::GetGroup() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::GetName() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::GetSize() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::GetType() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::IsReliable() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::SetReliable(bool)
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::ToString() const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::~CNetMessagePB()
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::Clone() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::GetGroup() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::GetName() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::GetSize() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::GetType() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::IsReliable() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::SetReliable(bool)
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::ToString() const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::~CNetMessagePB()
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::Clone() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::GetGroup() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::GetName() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::GetSize() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::GetType() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::IsReliable() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::SetReliable(bool)
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::ToString() const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::~CNetMessagePB()
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::Clone() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::GetGroup() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::GetName() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::GetSize() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::GetType() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::IsReliable() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::SetReliable(bool)
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::ToString() const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::~CNetMessagePB()
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::Clone() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::GetGroup() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::GetName() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::GetSize() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::GetType() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::IsReliable() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::SetReliable(bool)
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::ToString() const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::~CNetMessagePB()
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::Clone() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::GetGroup() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::GetName() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::GetSize() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::GetType() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::IsReliable() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::SetReliable(bool)
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::ToString() const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::~CNetMessagePB()
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::Clone() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::GetGroup() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::GetName() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::GetSize() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::GetType() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::IsReliable() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::SetReliable(bool)
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::ToString() const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::~CNetMessagePB()
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::Clone() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::GetGroup() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::GetName() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::GetSize() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::GetType() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::IsReliable() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::SetReliable(bool)
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::ToString() const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::~CNetMessagePB()
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::Clone() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::GetGroup() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::GetName() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::GetSize() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::GetType() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::IsReliable() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::SetReliable(bool)
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::ToString() const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<29, CSVCMsg_Menu, 0, true>::~CNetMessagePB()
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::Clone() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::GetGroup() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::GetName() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::GetSize() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::GetType() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::IsReliable() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::SetReliable(bool)
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::ToString() const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::~CNetMessagePB()
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::Clone() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::GetGroup() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::GetName() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::GetSize() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::GetType() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::IsReliable() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::SetReliable(bool)
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::ToString() const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::~CNetMessagePB()
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::Clone() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::GetGroup() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::GetName() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::GetSize() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::GetType() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::IsReliable() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::SetReliable(bool)
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::ToString() const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::~CNetMessagePB()
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::Clone() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::GetGroup() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::GetName() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::GetSize() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::GetType() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::IsReliable() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::SetReliable(bool)
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::ToString() const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::~CNetMessagePB()
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::Clone() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::GetGroup() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::GetName() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::GetSize() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::GetType() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::IsReliable() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::SetReliable(bool)
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::ToString() const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<4, CNETMsg_Tick, 0, true>::~CNetMessagePB()
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::Clone() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::GetGroup() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::GetName() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::GetSize() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::GetType() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::IsReliable() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::SetReliable(bool)
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::ToString() const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::~CNetMessagePB()
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::Clone() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::GetGroup() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::GetName() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::GetSize() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::GetType() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::IsReliable() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::SetReliable(bool)
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::ToString() const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::~CNetMessagePB()
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::Clone() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::GetGroup() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::GetName() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::GetSize() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::GetType() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::IsReliable() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::SetReliable(bool)
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::ToString() const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<7, CNETMsg_SignonState, 13, true>::~CNetMessagePB()
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::Clone() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::GetGroup() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::GetName() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::GetSize() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::GetType() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::IsReliable() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::SetReliable(bool)
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::ToString() const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::~CNetMessagePB()
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::Clone() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::GetGroup() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::GetName() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::GetSize() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::GetType() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::IsReliable() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::SetReliable(bool)
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::ToString() const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::~CNetMessagePB()
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::Clone() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::GetGroup() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::GetName() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::GetSize() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::GetType() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::IsReliable() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::SetReliable(bool)
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::ToString() const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<9, CCLCMsg_Move, 11, false>::~CNetMessagePB()
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::Clone() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::GetGroup() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::GetName() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::GetSize() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::GetType() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::IsReliable() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::ReadFromBuffer(bf_read&)
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::SetReliable(bool)
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::ToString() const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::WriteToBuffer(bf_write&) const
 T CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::~CNetMessagePB()
 T CNetSupportImpl::Connect(void* (*)(char const*, int*))
 T CNetSupportImpl::Disconnect()
 T CNetSupportImpl::GetClientInfo(INetSupport::ClientInfo_t*)
 T CNetSupportImpl::GetEngineBuildNumber()
 T CNetSupportImpl::GetServerInfo(INetSupport::ServerInfo_t*)
 T CNetSupportImpl::Init()
 T CNetSupportImpl::QueryInterface(char const*)
 T CNetSupportImpl::Shutdown()
 T CNetSupportImpl::~CNetSupportImpl()
 T CNetworkStringDict::CTableItem::ComputeHash()
 T CNetworkStringDict::CTableItem::Less(CNetworkStringDict::CTableItem const&, CNetworkStringDict::CTableItem const&)
 T CNetworkStringDict::Find(char const*)
 T CNetworkStringDict::Insert(char const*)
 T CNetworkStringDict::~CNetworkStringDict()
 T CNetworkStringTable::AddString(bool, char const*, int, void const*)
 T CNetworkStringTable::CNetworkStringTable(int, char const*, int, int, int, int)
 T CNetworkStringTable::ChangedSinceTick(int) const
 T CNetworkStringTable::ClearTick(int)
 T CNetworkStringTable::CopyStringTable(CNetworkStringTable*)
 T CNetworkStringTable::DeleteAllStrings(bool)
 T CNetworkStringTable::Dump()
 T CNetworkStringTable::FindStringIndex(char const*)
 T CNetworkStringTable::GetCallback()
 T CNetworkStringTable::GetEntryBits() const
 T CNetworkStringTable::GetMaxStrings() const
 T CNetworkStringTable::GetNumStrings() const
 T CNetworkStringTable::GetString(int, bool) const
 T CNetworkStringTable::GetStringUserData(int, int*) const
 T CNetworkStringTable::GetTableId() const
 T CNetworkStringTable::GetTableName() const
 T CNetworkStringTable::GetTick() const
 T CNetworkStringTable::GetUserDataSize() const
 T CNetworkStringTable::GetUserDataSizeBits() const
 T CNetworkStringTable::IsUsingDictionary() const
 T CNetworkStringTable::Lock(bool)
 T CNetworkStringTable::ParseUpdate(bf_read&, int)
 T CNetworkStringTable::ReadStringTable(CDemoStringTables_table_t const&)
 T CNetworkStringTable::RestoreTick(int)
 T CNetworkStringTable::SetAllowClientSideAddString(bool)
 T CNetworkStringTable::SetMirrorTable(INetworkStringTable*)
 T CNetworkStringTable::SetStringChangedCallback(void*, void (*)(void*, INetworkStringTable*, int, char const*, void const*))
 T CNetworkStringTable::SetStringUserData(int, int, void const*, bool)
 T CNetworkStringTable::SetTick(int)
 T CNetworkStringTable::UpdateMirrorTable(int)
 T CNetworkStringTable::WriteBaselines(CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>&)
 T CNetworkStringTable::WriteStringTable(CDemoStringTables_table_t&)
 T CNetworkStringTable::WriteUpdate(CBaseClient*, bf_write&, int) const
 T CNetworkStringTable::~CNetworkStringTable()
 T CNetworkStringTableContainer::AllowCreation(bool)
 T CNetworkStringTableContainer::CNetworkStringTableContainer()
 T CNetworkStringTableContainer::CreateDictionary(char const*)
 T CNetworkStringTableContainer::CreateStringTable(char const*, int, int, int, int)
 T CNetworkStringTableContainer::DestroyTable(char const*)
 T CNetworkStringTableContainer::DirectUpdate(int)
 T CNetworkStringTableContainer::Dump()
 T CNetworkStringTableContainer::EnableRollback(bool)
 T CNetworkStringTableContainer::FindTable(char const*) const
 T CNetworkStringTableContainer::GetNumTables() const
 T CNetworkStringTableContainer::GetTable(int) const
 T CNetworkStringTableContainer::Lock(bool)
 T CNetworkStringTableContainer::ReadStringTables(CDemoStringTables const&, char const*)
 T CNetworkStringTableContainer::RemoveAllTables()
 T CNetworkStringTableContainer::SetAllowClientSideAddString(INetworkStringTable*, bool)
 T CNetworkStringTableContainer::SetTick(int)
 T CNetworkStringTableContainer::WriteBaselines(char const*, bf_write&)
 T CNetworkStringTableContainer::WriteStringTables(CDemoStringTables&, CVarBitVec const*)
 T CNetworkStringTableContainer::WriteUpdateMessage(CBaseClient*, int, bf_write&, CVarBitVec*)
 T CNetworkStringTableContainer::~CNetworkStringTableContainer()
 T CNetworkStringTableDictionaryManager::CNetworkStringTableDictionaryManager()
 T CNetworkStringTableDictionaryManager::CStringTableDictionaryCache::CStringTableDictionaryCache()
 T CNetworkStringTableDictionaryManager::Clear()
 T CNetworkStringTableDictionaryManager::GetCRC()
 T CNetworkStringTableDictionaryManager::HashStringCaselessIgnoreSlashes(char const*) const
 T CNetworkStringTableDictionaryManager::LoadDictionaryFile(CUtlBuffer&, char const*)
 T CNetworkStringTableDictionaryManager::LoadMapStrings(char const*, bool)
 T CNetworkStringTableDictionaryManager::OnBSPFullyUnloaded()
 T CNetworkStringTableDictionaryManager::OnLevelLoadStart(char const*, unsigned int*)
 T CNetworkStringTableDictionaryManager::ProcessBuffer(CUtlBuffer&)
 T CNetworkStringTableDictionaryManager::ShouldRecreateDictionary(char const*)
 T CNetworkStringTableDictionaryManager::WriteDictionaryToBSP(char const*, CUtlBuffer&, bool)
 T CNetworkStringTableDictionaryManager::~CNetworkStringTableDictionaryManager()
 T CNetworkStringTableItem::CNetworkStringTableItem()
 T CNetworkStringTableItem::ClearTick(int)
 T CNetworkStringTableItem::QueueUserData(int, int, void const*, bool)
 T CNetworkStringTableItem::RestoreTick(int)
 T CNetworkStringTableItem::SetUserData(int, int, void const*, bool)
 T CNetworkStringTableItem::~CNetworkStringTableItem()
 T CNewOperationDialog::CNewOperationDialog(vgui::Panel*, CColorOperationList*)
 T CNewOperationDialog::GetAnimMap()
 T CNewOperationDialog::GetKBMap()
 T CNewOperationDialog::GetMessageMap()
 T CNewOperationDialog::GetPanelClassName()
 T CNewOperationDialog::OnCommand(char const*)
 T CNewOperationDialog::~CNewOperationDialog()
 T COM_CheckGameDirectory(char const*)
 T COM_CompareFileTime(char const*, char const*, int*)
 T COM_CopyFile(char const*, char const*)
 T COM_CreatePath(char const*)
 T COM_DXLevelToString(int)
 T COM_ExplainDisconnection(bool, char const*)
 T COM_FileSize(char const*)
 T COM_FormatSeconds(int)
 T COM_GetGameDir(char*, int)
 T COM_GetModDirectory()
 T COM_IOReadBinary::close(int)
 T COM_IOReadBinary::open(char const*)
 T COM_IOReadBinary::read(void*, int, int)
 T COM_IOReadBinary::seek(int, int)
 T COM_IOReadBinary::size(int)
 T COM_IOReadBinary::tell(int)
 T COM_Init()
 T COM_InitFilesystem(char const*)
 T COM_IsValidPath(char const*)
 T COM_LoadFile(char const*, int, int*)
 T COM_LoadStackFile(char const*, void*, int, int&)
 T COM_LogString(char const*, char const*)
 T COM_OpenFile(char const*, void**)
 T COM_Parse(char const*)
 T COM_ParseFile(char const*, char*, int)
 T COM_ParseLine(char const*)
 T COM_SetupLogDir(char const*)
 T COM_Shutdown()
 T COM_ShutdownFileSystem()
 T COM_StringCopy(char const*)
 T COM_StringFree(char const*)
 T COM_TokenWaiting(char const*)
 T CObjectPool<CWorldRenderList, 0, true>::PutObject(CWorldRenderList*)
 T CObjectPool<CWorldRenderList, 0, true>::~CObjectPool()
 T COcclusionSystem::ActivateOccluder(int, bool)
 T COcclusionSystem::AddPolygonToEdgeList(CEdgeList&, Vector**, int, int, bool)
 T COcclusionSystem::COcclusionSystem()
 T COcclusionSystem::ClipPolygonToAxisAlignedPlane(Vector**, int, COcclusionSystem::AxisAlignedPlane_t const&, Vector**) const
 T COcclusionSystem::ClipPolygonToNearPlane(Vector**, int, Vector**, bool*) const
 T COcclusionSystem::DrawDebugOverlays()
 T COcclusionSystem::IsOccluded(Vector const&, Vector const&)
 T COcclusionSystem::MinOccluderArea() const
 T COcclusionSystem::RecomputeOccluderEdgeList()
 T COcclusionSystem::SetOcclusionParameters(float, float)
 T COcclusionSystem::SetView(Vector const&, float, VMatrix const&, VMatrix const&, VPlane const&)
 T COcclusionSystem::StitchClippedVertices(Vector*, int)
 T COcclusionSystem::~COcclusionSystem()
 T COcclusionUIPanel::Activate()
 T COcclusionUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T COcclusionUIPanel::COcclusionUIPanel(vgui::Panel*)
 T COcclusionUIPanel::Deactivate()
 T COcclusionUIPanel::GetAnimMap()
 T COcclusionUIPanel::GetKBMap()
 T COcclusionUIPanel::GetMessageMap()
 T COcclusionUIPanel::GetPanelClassName()
 T COcclusionUIPanel::OnCheckButtonChecked(vgui::Panel*)
 T COcclusionUIPanel::OnTextChanged(KeyValues*)
 T COcclusionUIPanel::~COcclusionUIPanel()
 T COperationFileListFrame::COperationFileListFrame(vgui::Panel*, char const*, char const*, bool, bool, int)
 T COperationFileListFrame::DoModal(KeyValues*, char const*)
 T COperationFileListFrame::GetAnimMap()
 T COperationFileListFrame::GetDescription()
 T COperationFileListFrame::GetKBMap()
 T COperationFileListFrame::GetMessageMap()
 T COperationFileListFrame::GetPanelClassName()
 T COperationFileListFrame::OnCommand(char const*)
 T COperationFileListFrame::PerformLayout()
 T COperationFileListFrame::PerformOperation()
 T COperationFileListFrame::~COperationFileListFrame()
 T COperationListPanel::AddSelectedItem(int)
 T COperationListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T COperationListPanel::COperationListPanel(vgui::Panel*, char const*)
 T COperationListPanel::ClearSelectedItems()
 T COperationListPanel::GetAnimMap()
 T COperationListPanel::GetKBMap()
 T COperationListPanel::GetMessageMap()
 T COperationListPanel::GetPanelClassName()
 T COperationListPanel::OnMouseDoublePressed(ButtonCode_t)
 T COperationListPanel::OnMousePressed(ButtonCode_t)
 T COperationListPanel::OnTextNewLine(KeyValues*)
 T COperationListPanel::RemoveItem(int)
 T COperationListPanel::SetSortColumn(int)
 T COperationListPanel::SortList()
 T COperationListPanel::~COperationListPanel()
 T COverlayMgr::AddFragmentListToRenderList(int, unsigned short, bool)
 T COverlayMgr::AddFragmentToFragmentList(int)
 T COverlayMgr::BuildClipPlanes(msurface2_t*, moverlayfragment_t&, Vector const&, CUtlVector<cplane_t, CUtlMemory<cplane_t, int> >&)
 T COverlayMgr::ClearRenderLists()
 T COverlayMgr::ClearRenderLists(int)
 T COverlayMgr::CreateFragments()
 T COverlayMgr::Disp_ClipFragment(CDispInfo*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&)
 T COverlayMgr::Disp_CreateFragments(moverlay_t*, msurface2_t*)
 T COverlayMgr::Disp_DoClip(CDispInfo*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, cplane_t&, float, int, int, int, int)
 T COverlayMgr::Disp_PostClipFragment(CDispInfo*, CMeshReader*, moverlay_t*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, msurface2_t*)
 T COverlayMgr::Disp_PreClipFragment(moverlay_t*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, msurface2_t*)
 T COverlayMgr::DoClipFragment(moverlayfragment_t*, cplane_t*, moverlayfragment_t**, moverlayfragment_t**)
 T COverlayMgr::FadeOverlayFragment(moverlay_t*, moverlayfragment_t*)
 T COverlayMgr::FadeOverlayFragmentGlobal(moverlayfragment_t*)
 T COverlayMgr::GetMaterialSortID(IMaterial*, int)
 T COverlayMgr::LoadOverlays()
 T COverlayMgr::ReSortMaterials()
 T COverlayMgr::RenderOverlays(int)
 T COverlayMgr::RenderOverlaysCombined(int, Vector&, Vector&, Vector&)
 T COverlayMgr::SetOverlayBindProxy(int, void*)
 T COverlayMgr::Surf_ClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*, moverlayfragment_t&)
 T COverlayMgr::Surf_CreateFragments(moverlay_t*, msurface2_t*)
 T COverlayMgr::Surf_PostClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*)
 T COverlayMgr::Surf_PreClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*, moverlayfragment_t&)
 T COverlayMgr::UnloadOverlays()
 T COverlayMgr::UpdateOverlayRenderLevels(int, int)
 T COverlayMgr::~COverlayMgr()
 T CP4Factory::AccessFile(char const*, PerforceFileType_t) const
 T CP4Factory::SetDummyMode(bool)
 T CP4Factory::SetOpenFileChangeList(char const*)
 T CP4File::Add()
 T CP4File::Edit()
 T CP4File::Integ(char const*)
 T CP4File::IsFileInPerforce()
 T CP4File::Reopen()
 T CP4File::~CP4File()
 T CP4File_Dummy::Add()
 T CP4File_Dummy::Edit()
 T CP4File_Dummy::Integ(char const*)
 T CP4File_Dummy::IsFileInPerforce()
 T CP4File_Dummy::~CP4File_Dummy()
 T CPaintMapDataManager::BeginPaintTextureAllocation(int)
 T CPaintMapDataManager::DestroyPaintMaps()
 T CPaintMapDataManager::InitializeProceduralTexture(int, CTextureReference*, int, int)
 T CPaintMapDataManager::NotifyTextureReleased(int)
 T CPaintMapDataManager::RegenerateTextureBits(int, ITexture*, IVTFTexture*, Rect_t*)
 T CPaintMapDataManager::RemoveAllPaint()
 T CPaintMapDataManager::~CPaintMapDataManager()
 T CPaintMaterial::DrawCircle(PaintRect_t const&, Color const&)
 T CPaintMaterial::GetPixels(Rect_t const&, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T CPaintMaterial::Init(char const*, int, int, int)
 T CPaintMaterial::Paint(PaintRect_t const&, Color const&)
 T CPaintMaterial::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T CPanelAnimationDictionary::FindOrAddPanelAnimationMap(char const*)
 T CPanelAnimationDictionary::~CPanelAnimationDictionary()
 T CPanelKeyBindingMapDictionary::FindOrAddPanelKeyBindingMap(char const*)
 T CPanelKeyBindingMapDictionary::~CPanelKeyBindingMapDictionary()
 T CPanelMessageMapDictionary::FindOrAddPanelMessageMap(char const*)
 T CPanelMessageMapDictionary::~CPanelMessageMapDictionary()
 T CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::DoExecute()
 T CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::Run(CGameClient**, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::DoExecute()
 T CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::Run(CShadowMgr::DispDecalWorkItem_t*, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::DoExecute()
 T CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::Run(CrashItem_t*, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::DoExecute()
 T CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::Run(PackWork_t*, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::DoExecute()
 T CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::Run(int*, unsigned int, int, int, IThreadPool*)
 T CPerfUIChildPanel::Activate()
 T CPerfUIChildPanel::CPerfUIChildPanel(vgui::Panel*, char const*)
 T CPerfUIChildPanel::Deactivate()
 T CPerfUIChildPanel::GetAnimMap()
 T CPerfUIChildPanel::GetKBMap()
 T CPerfUIChildPanel::GetMessageMap()
 T CPerfUIChildPanel::GetPanelClassName()
 T CPerfUIChildPanel::~CPerfUIChildPanel()
 T CPerfUIPanel::Activate()
 T CPerfUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CPerfUIPanel::CPerfUIPanel(vgui::Panel*)
 T CPerfUIPanel::GetAnimMap()
 T CPerfUIPanel::GetKBMap()
 T CPerfUIPanel::GetMessageMap()
 T CPerfUIPanel::GetPanelClassName()
 T CPerfUIPanel::OnCommand(char const*)
 T CPerfUIPanel::OnKeyCodeTyped(ButtonCode_t)
 T CPerfUIPanel::OnTextChanged(KeyValues*)
 T CPerfUIPanel::OnTick()
 T CPerfUIPanel::~CPerfUIPanel()
 T CPerforceFileListFrame::AddFileForOpen(char const*)
 T CPerforceFileListFrame::AddFileForSubmit(char const*, P4FileState_t)
 T CPerforceFileListFrame::CPerforceFileListFrame(vgui::Panel*, char const*, char const*, PerforceAction_t)
 T CPerforceFileListFrame::GetAnimMap()
 T CPerforceFileListFrame::GetKBMap()
 T CPerforceFileListFrame::GetMessageMap()
 T CPerforceFileListFrame::GetPanelClassName()
 T CPerforceFileListFrame::PerformOperation()
 T CPerforceFileListFrame::~CPerforceFileListFrame()
 T CPluginGameUIDialog::CPluginGameUIDialog()
 T CPluginGameUIDialog::GetAnimMap()
 T CPluginGameUIDialog::GetKBMap()
 T CPluginGameUIDialog::GetMessageMap()
 T CPluginGameUIDialog::GetPanelClassName()
 T CPluginGameUIDialog::OnCommand(char const*)
 T CPluginGameUIDialog::Show(DIALOG_TYPE, KeyValues*)
 T CPluginGameUIDialog::~CPluginGameUIDialog()
 T CPluginHudMessage::ApplySchemeSettings(vgui::IScheme*)
 T CPluginHudMessage::CPluginHudMessage(unsigned int)
 T CPluginHudMessage::GetAnimMap()
 T CPluginHudMessage::GetKBMap()
 T CPluginHudMessage::GetMessageMap()
 T CPluginHudMessage::GetPanelClassName()
 T CPluginHudMessage::OnSizeChanged(int, int)
 T CPluginHudMessage::OnTick()
 T CPluginHudMessage::ShowMessage(wchar_t const*, int, Color, bool)
 T CPluginHudMessage::~CPluginHudMessage()
 T CPluginMenu::CPluginMenu(vgui::Panel*)
 T CPluginMenu::GetAnimMap()
 T CPluginMenu::GetKBMap()
 T CPluginMenu::GetMessageMap()
 T CPluginMenu::GetPanelClassName()
 T CPluginMenu::OnCommand(char const*)
 T CPluginMenu::Show(KeyValues*)
 T CPluginMenu::~CPluginMenu()
 T CPluginUIManager::CPluginUIManager()
 T CPluginUIManager::GetAnimMap()
 T CPluginUIManager::GetHudMessagePosition(int&, int&, int&, int&)
 T CPluginUIManager::GetKBMap()
 T CPluginUIManager::GetMessageMap()
 T CPluginUIManager::GetPanelClassName()
 T CPluginUIManager::OnTick()
 T CPluginUIManager::Show(DIALOG_TYPE, KeyValues*)
 T CPluginUIManager::Shutdown()
 T CPluginUIManager::~CPluginUIManager()
 T CPointContentsEnum::EnumElement(IHandleEntity*)
 T CPooledVBAllocator_ColorMesh::Allocate(int)
 T CPooledVBAllocator_ColorMesh::Clear()
 T CPooledVBAllocator_ColorMesh::Deallocate(int, int)
 T CPooledVBAllocator_ColorMesh::GetNumVertsAllocated()
 T CPooledVBAllocator_ColorMesh::GetSharedMesh()
 T CPooledVBAllocator_ColorMesh::GetVertexBufferBase()
 T CPooledVBAllocator_ColorMesh::Init(unsigned long long, int)
 T CPooledVBAllocator_ColorMesh::~CPooledVBAllocator_ColorMesh()
 T CPowerInfo::GetCornerPointIndex(int) const
 T CPowerInfoInitializer::CPowerInfoInitializer()
 T CPrecacheItem::CPrecacheItem()
 T CPrecacheItem::GetFirstReference()
 T CPrecacheItem::GetModel()
 T CPrecacheItem::GetMostRecentReference()
 T CPrecacheItem::GetName()
 T CPrecacheItem::GetReferenceCount()
 T CPrecacheItem::GetSound()
 T CPrecacheItem::SetDecal(char const*)
 T CPrecacheItem::SetGeneric(char const*)
 T CPrecacheItem::SetModel(model_t const*)
 T CPrecacheItem::SetName(char const*)
 T CPrecacheItem::SetSound(CSfxTable const*)
 T CPrecisionSlider::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CPrecisionSlider::CPrecisionSlider(vgui::Panel*, char const*)
 T CPrecisionSlider::GetAnimMap()
 T CPrecisionSlider::GetKBMap()
 T CPrecisionSlider::GetMessageMap()
 T CPrecisionSlider::GetPanelClassName()
 T CPrecisionSlider::GetTrackRect(int&, int&, int&, int&)
 T CPrecisionSlider::OnMouseWheeled(int)
 T CPrecisionSlider::OnSizeChanged(int, int)
 T CPrecisionSlider::OnTextNewLine(KeyValues*)
 T CPrecisionSlider::SetEnabled(bool)
 T CPrecisionSlider::SetValue(int, bool)
 T CPrecisionSlider::~CPrecisionSlider()
 T CProceduralTexturePanel::CProceduralTexturePanel(vgui::Panel*, char const*)
 T CProceduralTexturePanel::CleanUp()
 T CProceduralTexturePanel::DownloadTexture()
 T CProceduralTexturePanel::GetAnimMap()
 T CProceduralTexturePanel::GetImageBuffer()
 T CProceduralTexturePanel::GetKBMap()
 T CProceduralTexturePanel::GetMessageMap()
 T CProceduralTexturePanel::GetPanelClassName()
 T CProceduralTexturePanel::Init(int, int, bool)
 T CProceduralTexturePanel::MaintainProportions(bool)
 T CProceduralTexturePanel::Paint(IVGuiPaintSurface*)
 T CProceduralTexturePanel::PaintBackground(IVGuiPaintSurface*)
 T CProceduralTexturePanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T CProceduralTexturePanel::Release()
 T CProceduralTexturePanel::SetTextureSubRect(Rect_t const&)
 T CProceduralTexturePanel::Shutdown()
 T CProceduralTexturePanel::~CProceduralTexturePanel()
 T CProfileHierarchyPanel::AddItem(KeyValues*, int, CProfileHierarchyPanel::ColumnPanels_t&)
 T CProfileHierarchyPanel::ApplySchemeSettings(vgui::IScheme*)
 T CProfileHierarchyPanel::CProfileHierarchyPanel(vgui::Panel*, char const*)
 T CProfileHierarchyPanel::ColumnPanels_t::ColumnPanels_t(CProfileHierarchyPanel::ColumnPanels_t const&)
 T CProfileHierarchyPanel::ColumnPanels_t::Refresh(KeyValues*)
 T CProfileHierarchyPanel::ExpandItem(int, bool)
 T CProfileHierarchyPanel::GetAnimMap()
 T CProfileHierarchyPanel::GetItemData(int)
 T CProfileHierarchyPanel::GetKBMap()
 T CProfileHierarchyPanel::GetMessageMap()
 T CProfileHierarchyPanel::GetPanelClassName()
 T CProfileHierarchyPanel::HideAll()
 T CProfileHierarchyPanel::IsItemExpanded(int)
 T CProfileHierarchyPanel::ModifyItem(KeyValues*, int)
 T CProfileHierarchyPanel::PanelsLessFunc(CProfileHierarchyPanel::ColumnPanels_t const&, CProfileHierarchyPanel::ColumnPanels_t const&)
 T CProfileHierarchyPanel::PerformLayout()
 T CProfileHierarchyPanel::PostChildPaint(IVGuiPaintSurface*)
 T CProfileHierarchyPanel::RemoveAll()
 T CProfileHierarchyPanel::SetItemColors(int, Color const&, Color const&)
 T CProfileHierarchyPanel::SetItemColumnColors(int, int, Color const&, Color const&)
 T CProfileHierarchyPanel::~CProfileHierarchyPanel()
 T CProfileTree::ApplySchemeSettings(vgui::IScheme*)
 T CProfileTree::CProfileTree(CVProfPanel*, char const*)
 T CProfileTree::GetAnimMap()
 T CProfileTree::GetKBMap()
 T CProfileTree::GetMessageMap()
 T CProfileTree::GetPanelClassName()
 T CProfileTree::InvalidateLayout(bool, bool)
 T CProfileTree::OnCommand(char const*)
 T CProfileTree::SetBgColor(Color)
 T CProfileTree::~CProfileTree()
 T CPropCullStack::CullPropsFromProxies(CUtlVectorFixedGrowable<int, 128ul> const&, CUtlVectorFixedGrowable<int, 128ul>&)
 T CPropCullStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
 T CPropFadeUIPanel::Activate()
 T CPropFadeUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CPropFadeUIPanel::CPropFadeUIPanel(vgui::Panel*)
 T CPropFadeUIPanel::Deactivate()
 T CPropFadeUIPanel::GetAnimMap()
 T CPropFadeUIPanel::GetKBMap()
 T CPropFadeUIPanel::GetMessageMap()
 T CPropFadeUIPanel::GetPanelClassName()
 T CPropFadeUIPanel::OnTextChanged(KeyValues*)
 T CPropFadeUIPanel::~CPropFadeUIPanel()
 T CPropMapStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
 T CPropOffsetStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
 T CProportionalFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProtobufLogHandler::~CProtobufLogHandler()
 T CPureServerWhitelist::CAllowFromDiskList::IsFileInList(char const*)
 T CPureServerWhitelist::CAllowFromDiskList::Release()
 T CPureServerWhitelist::CForceMatchList::IsFileInList(char const*)
 T CPureServerWhitelist::CForceMatchList::Release()
 T CPureServerWhitelist::CacheFileCRCs()
 T CPureServerWhitelist::Create(IFileSystem*)
 T CPureServerWhitelist::Decode(CUtlBuffer&)
 T CPureServerWhitelist::DecodeCommandList(CUtlDict<CPureServerWhitelist::CCommand*, int>&, CUtlBuffer&)
 T CPureServerWhitelist::EnableFullyPureMode()
 T CPureServerWhitelist::Encode(CUtlBuffer&)
 T CPureServerWhitelist::EncodeCommandList(CUtlDict<CPureServerWhitelist::CCommand*, int>&, CUtlBuffer&)
 T CPureServerWhitelist::FindCommandByLoadOrder(CUtlDict<CPureServerWhitelist::CCommand*, int>&, int)
 T CPureServerWhitelist::GetAllowFromDiskList()
 T CPureServerWhitelist::GetBestEntry(char const*)
 T CPureServerWhitelist::GetForceMatchList()
 T CPureServerWhitelist::InternalCacheFileCRCs(CUtlDict<CPureServerWhitelist::CCommand*, int>&, ECacheCRCType)
 T CPureServerWhitelist::IsInFullyPureMode() const
 T CPureServerWhitelist::LoadFromKeyValues(KeyValues*)
 T CPureServerWhitelist::PrintCommand(char const*, char const*, int, CPureServerWhitelist::CCommand*)
 T CPureServerWhitelist::PrintWhitelistContents()
 T CPureServerWhitelist::Release()
 T CPureServerWhitelist::UpdateCommandStats(CUtlDict<CPureServerWhitelist::CCommand*, int>&, int*, int*)
 T CRC32_Final(unsigned int*)
 T CRC32_Init(unsigned int*)
 T CRC32_ProcessBuffer(unsigned int*, void const*, int)
 T CRC_File(unsigned int*, char const*)
 T CRC_MapFile(unsigned int*, char const*)
 T CRConClient::Authenticate()
 T CRConClient::BuildResponse(CUtlBuffer&, ServerDataRequestType_t, char const*, char const*)
 T CRConClient::CRConClient()
 T CRConClient::OnSocketAccepted(int, netadr_t const&, void**)
 T CRConClient::OnSocketClosed(int, netadr_t const&, void*)
 T CRConClient::ParseReceivedData()
 T CRConClient::RunFrame()
 T CRConClient::SaveRemoteConsoleLog(void const*, int)
 T CRConClient::SaveRemoteScreenshot(void const*, int)
 T CRConClient::SendBugRequest()
 T CRConClient::SendCmd(char const*)
 T CRConClient::SendQueuedData()
 T CRConClient::SendResponse(CUtlBuffer&, bool)
 T CRConClient::SetAddress(netadr_t const&)
 T CRConClient::SetPassword(char const*)
 T CRConClient::ShouldAcceptSocket(int, netadr_t const&)
 T CRConClient::~CRConClient()
 T CRConServer::BCloseAcceptedSocket(unsigned int)
 T CRConServer::CRConServer()
 T CRConServer::FinishRedirect(char const*, netadr_t const&)
 T CRConServer::HandleFailedRconAuth(netadr_t const&)
 T CRConServer::IsPassword(char const*) const
 T CRConServer::OnSocketAccepted(int, netadr_t const&, void**)
 T CRConServer::OnSocketClosed(int, netadr_t const&, void*)
 T CRConServer::RunFrame()
 T CRConServer::SendRCONResponse(int, void const*, int, bool)
 T CRConServer::SetRequestID(unsigned int, int)
 T CRConServer::ShouldAcceptSocket(int, netadr_t const&)
 T CRConServer::~CRConServer()
 T CRConVProfExport::AddListener()
 T CRConVProfExport::GetBudgetGroupInfos(IVProfExport::CExportedBudgetGroupInfo*)
 T CRConVProfExport::GetBudgetGroupTimes(float*)
 T CRConVProfExport::GetNumBudgetGroups()
 T CRConVProfExport::OnRemoteData(void const*, int)
 T CRConVProfExport::OnRemoteGroupData(void const*, int)
 T CRConVProfExport::PauseProfile()
 T CRConVProfExport::RemoveListener()
 T CRConVProfExport::ResumeProfile()
 T CRConVProfExport::SetBudgetFlagsFilter(int)
 T CRConVProfExport::VProf_AddDeferredFunction(CUtlDelegate<void (CVProfile*)> const&)
 T CRConVProfExport::VProf_RemoveDeferredFunction(CUtlDelegate<void (CVProfile*)> const&)
 T CRS_Alloc(int, float, float, float)
 T CRS_Free(crs_t*)
 T CRS_GetNext(crs_t*, int)
 T CRS_GetNextN(crs_t*, portable_samplepair_t*, int, int)
 T CRS_Mod(void*, float)
 T CRS_VParams(void*)
 T CRealMemoryDemoBuffer::DumpToFile(char const*, protodemoheader_t const&) const
 T CRealMemoryDemoBuffer::Get(void*, int)
 T CRealMemoryDemoBuffer::GetVarInt()
 T CRealMemoryDemoBuffer::Init(DemoBufferInitParams_t const&)
 T CRealMemoryDemoBuffer::IsInitialized() const
 T CRealMemoryDemoBuffer::IsValid() const
 T CRealMemoryDemoBuffer::NotifyBeginFrame()
 T CRealMemoryDemoBuffer::NotifyEndFrame()
 T CRealMemoryDemoBuffer::NotifySignonComplete()
 T CRealMemoryDemoBuffer::Put(void const*, int)
 T CRealMemoryDemoBuffer::PutVarInt(unsigned int)
 T CRealMemoryDemoBuffer::SeekGet(bool, int)
 T CRealMemoryDemoBuffer::SeekPut(bool, int)
 T CRealMemoryDemoBuffer::TellGet() const
 T CRealMemoryDemoBuffer::TellMaxPut() const
 T CRealMemoryDemoBuffer::TellPut() const
 T CRealMemoryDemoBuffer::UpdateStartTick(int&) const
 T CRealMemoryDemoBuffer::~CRealMemoryDemoBuffer()
 T CRecvDecoder::CRecvDecoder()
 T CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRefCounted1<IWorldRenderList, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<IWorldRenderList, CRefCountServiceBase<true, CRefMT> >::Release()
 T CReferencedSnapshotList::~CReferencedSnapshotList()
 T CRegistry::DirectInit(char const*)
 T CRegistry::Init(char const*)
 T CRegistry::ReadInt(char const*, char const*, int)
 T CRegistry::ReadInt(char const*, int)
 T CRegistry::ReadString(char const*, char const*)
 T CRegistry::ReadString(char const*, char const*, char const*)
 T CRegistry::Shutdown()
 T CRegistry::WriteInt(char const*, char const*, int)
 T CRegistry::WriteInt(char const*, int)
 T CRegistry::WriteString(char const*, char const*)
 T CRegistry::WriteString(char const*, char const*, char const*)
 T CRegistry::~CRegistry()
 T CRender::BeginUpdateLightmaps()
 T CRender::BuildWorldLists(IWorldRenderList*, WorldListInfo_t*, int, VisOverrideData_t const*, bool, float*)
 T CRender::ClearView(CViewSetup&, int, ITexture*, ITexture*)
 T CRender::ClipTransform(Vector const&, Vector*)
 T CRender::CreateWorldList()
 T CRender::DrawSceneBegin()
 T CRender::DrawSceneEnd()
 T CRender::DrawWorldLists(IWorldRenderList*, unsigned long, float)
 T CRender::EndUpdateLightmaps()
 T CRender::FrameBegin()
 T CRender::FrameEnd()
 T CRender::GetFov()
 T CRender::GetFovViewmodel()
 T CRender::GetFovY()
 T CRender::GetFramerate()
 T CRender::GetZFar()
 T CRender::GetZNear()
 T CRender::InLightmapUpdate() const
 T CRender::OnViewActive(VPlane*)
 T CRender::OrthoExtractFrustumPlanes(VPlane*)
 T CRender::OverrideViewFrustum(VPlane*)
 T CRender::PopView(VPlane*)
 T CRender::Push2DView(CViewSetup const&, int, ITexture*, VPlane*)
 T CRender::Push3DView(CViewSetup const&, int, ITexture*, VPlane*)
 T CRender::Push3DView(CViewSetup const&, int, ITexture*, VPlane*, ITexture*)
 T CRender::ScreenTransform(Vector const&, Vector*)
 T CRender::SetMainView(Vector const&, QAngle const&)
 T CRender::UpdateBrushModelLightmap(model_t*, IClientRenderable*)
 T CRender::ViewAngles()
 T CRender::ViewDrawFade(unsigned char*, IMaterial*)
 T CRender::ViewGetCurrent()
 T CRender::ViewMatrix()
 T CRender::ViewOrigin()
 T CRender::ViewSetupVis(bool, int, Vector const*)
 T CRender::ViewSetupVisEx(bool, int, Vector const*, unsigned int&)
 T CRender::WorldToScreenMatrix()
 T CRender::~CRender()
 T CRenderTextureEditor::Activate()
 T CRenderTextureEditor::ApplySchemeSettings(vgui::IScheme*)
 T CRenderTextureEditor::CRenderTextureEditor(vgui::Panel*, char const*)
 T CRenderTextureEditor::Close()
 T CRenderTextureEditor::GetAnimMap()
 T CRenderTextureEditor::GetFont()
 T CRenderTextureEditor::GetKBMap()
 T CRenderTextureEditor::GetMessageMap()
 T CRenderTextureEditor::GetPanelClassName()
 T CRenderTextureEditor::OnCommand(char const*)
 T CRenderTextureEditor::OnMouseDoublePressed(ButtonCode_t)
 T CRenderTextureEditor::OnMousePressed(ButtonCode_t)
 T CRenderTextureEditor::Paint(IVGuiPaintSurface*)
 T CRenderTextureEditor::PerformLayout()
 T CRenderTextureEditor::SetDispInfo(KeyValues*, int)
 T CRenderTextureEditor::SetFont(unsigned long)
 T CRenderTextureEditor::~CRenderTextureEditor()
 T CRenderTexturesListViewPanel::CRenderTexturesListViewPanel(vgui::Panel*, char const*)
 T CRenderTexturesListViewPanel::GetAnimMap()
 T CRenderTexturesListViewPanel::GetKBMap()
 T CRenderTexturesListViewPanel::GetMessageMap()
 T CRenderTexturesListViewPanel::GetNumTiles()
 T CRenderTexturesListViewPanel::GetPanelClassName()
 T CRenderTexturesListViewPanel::GetTileSize(int&, int&)
 T CRenderTexturesListViewPanel::OnMouseDoublePressed(ButtonCode_t)
 T CRenderTexturesListViewPanel::OnMousePressed(ButtonCode_t)
 T CRenderTexturesListViewPanel::PerformLayout()
 T CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)
 T CRenderTexturesListViewPanel::~CRenderTexturesListViewPanel()
 T CResourcePreload::OnEndMapLoading(bool)
 T CResourcePreload::PurgeAll()
 T CResourcePreload::PurgeUnreferencedResources()
 T CResourcePreloadSound::CreateResource(char const*)
 T CResourcePreloadSound::PrepareForCreate(bool)
 T CResourcePreloadSound::PurgeAllSounds()
 T CSGFrustum(Frustum_t&)
 T CSGPlaneList(leafvis_t*, CUtlVector<cplane_t, CUtlMemory<cplane_t, int> >&, DrawGroup_t)
 T CSOAContainer::AllocateData(int, int, int)
 T CSOAContainer::CopyAttrFrom(CSOAContainer const&, int, int)
 T CSOAContainer::CopyAttrFromPartial(int, int, int, int, CSOAContainer const*, int, int)
 T CSOAContainer::FillAttr(int, float)
 T CSOAContainer::FillAttrPartial(int, int, int, int, int, float)
 T CSOAContainer::PurgeData()
 T CSOAContainer::SetAttributeType(int, EAttributeDataType, bool)
 T CSOAContainer::~CSOAContainer()
 T CSPSharedMemory::AddRef()
 T CSPSharedMemory::Base()
 T CSPSharedMemory::Init(unsigned long)
 T CSPSharedMemory::Release()
 T CSPSharedMemory::Size()
 T CSPSharedMemoryManager::GetSharedMemory(char const*, int)
 T CSPSharedMemoryManager::~CSPSharedMemoryManager()
 T CSVCMsgList_GameEvents::ByteSize() const
 T CSVCMsgList_GameEvents::CSVCMsgList_GameEvents()
 T CSVCMsgList_GameEvents::Clear()
 T CSVCMsgList_GameEvents::GetCachedSize() const
 T CSVCMsgList_GameEvents::GetMetadata() const
 T CSVCMsgList_GameEvents::IsInitialized() const
 T CSVCMsgList_GameEvents::MergeFrom(CSVCMsgList_GameEvents const&)
 T CSVCMsgList_GameEvents::New() const
 T CSVCMsgList_GameEvents::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsgList_GameEvents::SetCachedSize(int) const
 T CSVCMsgList_GameEvents::~CSVCMsgList_GameEvents()
 T CSVCMsgList_GameEvents_event_t::ByteSize() const
 T CSVCMsgList_GameEvents_event_t::Clear()
 T CSVCMsgList_GameEvents_event_t::GetCachedSize() const
 T CSVCMsgList_GameEvents_event_t::GetMetadata() const
 T CSVCMsgList_GameEvents_event_t::IsInitialized() const
 T CSVCMsgList_GameEvents_event_t::MergeFrom(CSVCMsgList_GameEvents_event_t const&)
 T CSVCMsgList_GameEvents_event_t::New() const
 T CSVCMsgList_GameEvents_event_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsgList_GameEvents_event_t::SetCachedSize(int) const
 T CSVCMsgList_GameEvents_event_t::~CSVCMsgList_GameEvents_event_t()
 T CSVCMsgList_UserMessages::ByteSize() const
 T CSVCMsgList_UserMessages::CSVCMsgList_UserMessages()
 T CSVCMsgList_UserMessages::Clear()
 T CSVCMsgList_UserMessages::GetCachedSize() const
 T CSVCMsgList_UserMessages::GetMetadata() const
 T CSVCMsgList_UserMessages::IsInitialized() const
 T CSVCMsgList_UserMessages::MergeFrom(CSVCMsgList_UserMessages const&)
 T CSVCMsgList_UserMessages::New() const
 T CSVCMsgList_UserMessages::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsgList_UserMessages::SetCachedSize(int) const
 T CSVCMsgList_UserMessages::~CSVCMsgList_UserMessages()
 T CSVCMsgList_UserMessages_usermsg_t::ByteSize() const
 T CSVCMsgList_UserMessages_usermsg_t::Clear()
 T CSVCMsgList_UserMessages_usermsg_t::GetCachedSize() const
 T CSVCMsgList_UserMessages_usermsg_t::GetMetadata() const
 T CSVCMsgList_UserMessages_usermsg_t::IsInitialized() const
 T CSVCMsgList_UserMessages_usermsg_t::MergeFrom(CSVCMsgList_UserMessages_usermsg_t const&)
 T CSVCMsgList_UserMessages_usermsg_t::New() const
 T CSVCMsgList_UserMessages_usermsg_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsgList_UserMessages_usermsg_t::SetCachedSize(int) const
 T CSVCMsgList_UserMessages_usermsg_t::~CSVCMsgList_UserMessages_usermsg_t()
 T CSVCMsg_BSPDecal::ByteSize() const
 T CSVCMsg_BSPDecal::CSVCMsg_BSPDecal()
 T CSVCMsg_BSPDecal::Clear()
 T CSVCMsg_BSPDecal::CopyFrom(CSVCMsg_BSPDecal const&)
 T CSVCMsg_BSPDecal::GetCachedSize() const
 T CSVCMsg_BSPDecal::GetMetadata() const
 T CSVCMsg_BSPDecal::IsInitialized() const
 T CSVCMsg_BSPDecal::MergeFrom(CSVCMsg_BSPDecal const&)
 T CSVCMsg_BSPDecal::New() const
 T CSVCMsg_BSPDecal::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_BSPDecal::SetCachedSize(int) const
 T CSVCMsg_BSPDecal::~CSVCMsg_BSPDecal()
 T CSVCMsg_ClassInfo::ByteSize() const
 T CSVCMsg_ClassInfo::CSVCMsg_ClassInfo()
 T CSVCMsg_ClassInfo::Clear()
 T CSVCMsg_ClassInfo::CopyFrom(CSVCMsg_ClassInfo const&)
 T CSVCMsg_ClassInfo::GetCachedSize() const
 T CSVCMsg_ClassInfo::GetMetadata() const
 T CSVCMsg_ClassInfo::IsInitialized() const
 T CSVCMsg_ClassInfo::MergeFrom(CSVCMsg_ClassInfo const&)
 T CSVCMsg_ClassInfo::New() const
 T CSVCMsg_ClassInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ClassInfo::SetCachedSize(int) const
 T CSVCMsg_ClassInfo::~CSVCMsg_ClassInfo()
 T CSVCMsg_ClassInfo_class_t::ByteSize() const
 T CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t()
 T CSVCMsg_ClassInfo_class_t::Clear()
 T CSVCMsg_ClassInfo_class_t::GetCachedSize() const
 T CSVCMsg_ClassInfo_class_t::GetMetadata() const
 T CSVCMsg_ClassInfo_class_t::IsInitialized() const
 T CSVCMsg_ClassInfo_class_t::MergeFrom(CSVCMsg_ClassInfo_class_t const&)
 T CSVCMsg_ClassInfo_class_t::New() const
 T CSVCMsg_ClassInfo_class_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ClassInfo_class_t::SetCachedSize(int) const
 T CSVCMsg_ClassInfo_class_t::SharedDtor()
 T CSVCMsg_ClassInfo_class_t::~CSVCMsg_ClassInfo_class_t()
 T CSVCMsg_CreateStringTable::ByteSize() const
 T CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable()
 T CSVCMsg_CreateStringTable::Clear()
 T CSVCMsg_CreateStringTable::CopyFrom(CSVCMsg_CreateStringTable const&)
 T CSVCMsg_CreateStringTable::GetCachedSize() const
 T CSVCMsg_CreateStringTable::GetMetadata() const
 T CSVCMsg_CreateStringTable::IsInitialized() const
 T CSVCMsg_CreateStringTable::MergeFrom(CSVCMsg_CreateStringTable const&)
 T CSVCMsg_CreateStringTable::New() const
 T CSVCMsg_CreateStringTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_CreateStringTable::SetCachedSize(int) const
 T CSVCMsg_CreateStringTable::SharedCtor()
 T CSVCMsg_CreateStringTable::SharedDtor()
 T CSVCMsg_CreateStringTable::~CSVCMsg_CreateStringTable()
 T CSVCMsg_CrosshairAngle::ByteSize() const
 T CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle()
 T CSVCMsg_CrosshairAngle::Clear()
 T CSVCMsg_CrosshairAngle::CopyFrom(CSVCMsg_CrosshairAngle const&)
 T CSVCMsg_CrosshairAngle::GetCachedSize() const
 T CSVCMsg_CrosshairAngle::GetMetadata() const
 T CSVCMsg_CrosshairAngle::IsInitialized() const
 T CSVCMsg_CrosshairAngle::MergeFrom(CSVCMsg_CrosshairAngle const&)
 T CSVCMsg_CrosshairAngle::New() const
 T CSVCMsg_CrosshairAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_CrosshairAngle::SetCachedSize(int) const
 T CSVCMsg_CrosshairAngle::~CSVCMsg_CrosshairAngle()
 T CSVCMsg_FixAngle::ByteSize() const
 T CSVCMsg_FixAngle::CSVCMsg_FixAngle()
 T CSVCMsg_FixAngle::Clear()
 T CSVCMsg_FixAngle::CopyFrom(CSVCMsg_FixAngle const&)
 T CSVCMsg_FixAngle::GetCachedSize() const
 T CSVCMsg_FixAngle::GetMetadata() const
 T CSVCMsg_FixAngle::IsInitialized() const
 T CSVCMsg_FixAngle::MergeFrom(CSVCMsg_FixAngle const&)
 T CSVCMsg_FixAngle::New() const
 T CSVCMsg_FixAngle::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_FixAngle::SetCachedSize(int) const
 T CSVCMsg_FixAngle::~CSVCMsg_FixAngle()
 T CSVCMsg_FullFrameSplit::ByteSize() const
 T CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit()
 T CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit(CSVCMsg_FullFrameSplit const&)
 T CSVCMsg_FullFrameSplit::Clear()
 T CSVCMsg_FullFrameSplit::CopyFrom(CSVCMsg_FullFrameSplit const&)
 T CSVCMsg_FullFrameSplit::GetCachedSize() const
 T CSVCMsg_FullFrameSplit::GetMetadata() const
 T CSVCMsg_FullFrameSplit::IsInitialized() const
 T CSVCMsg_FullFrameSplit::MergeFrom(CSVCMsg_FullFrameSplit const&)
 T CSVCMsg_FullFrameSplit::New() const
 T CSVCMsg_FullFrameSplit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_FullFrameSplit::SetCachedSize(int) const
 T CSVCMsg_FullFrameSplit::~CSVCMsg_FullFrameSplit()
 T CSVCMsg_GameEvent::ByteSize() const
 T CSVCMsg_GameEvent::CSVCMsg_GameEvent()
 T CSVCMsg_GameEvent::Clear()
 T CSVCMsg_GameEvent::CopyFrom(CSVCMsg_GameEvent const&)
 T CSVCMsg_GameEvent::GetCachedSize() const
 T CSVCMsg_GameEvent::GetMetadata() const
 T CSVCMsg_GameEvent::IsInitialized() const
 T CSVCMsg_GameEvent::MergeFrom(CSVCMsg_GameEvent const&)
 T CSVCMsg_GameEvent::New() const
 T CSVCMsg_GameEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEvent::SetCachedSize(int) const
 T CSVCMsg_GameEvent::Swap(CSVCMsg_GameEvent*)
 T CSVCMsg_GameEvent::~CSVCMsg_GameEvent()
 T CSVCMsg_GameEventList::ByteSize() const
 T CSVCMsg_GameEventList::CSVCMsg_GameEventList()
 T CSVCMsg_GameEventList::Clear()
 T CSVCMsg_GameEventList::CopyFrom(CSVCMsg_GameEventList const&)
 T CSVCMsg_GameEventList::GetCachedSize() const
 T CSVCMsg_GameEventList::GetMetadata() const
 T CSVCMsg_GameEventList::IsInitialized() const
 T CSVCMsg_GameEventList::MergeFrom(CSVCMsg_GameEventList const&)
 T CSVCMsg_GameEventList::New() const
 T CSVCMsg_GameEventList::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList::SetCachedSize(int) const
 T CSVCMsg_GameEventList::~CSVCMsg_GameEventList()
 T CSVCMsg_GameEventList_descriptor_t::ByteSize() const
 T CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t()
 T CSVCMsg_GameEventList_descriptor_t::Clear()
 T CSVCMsg_GameEventList_descriptor_t::GetCachedSize() const
 T CSVCMsg_GameEventList_descriptor_t::GetMetadata() const
 T CSVCMsg_GameEventList_descriptor_t::IsInitialized() const
 T CSVCMsg_GameEventList_descriptor_t::MergeFrom(CSVCMsg_GameEventList_descriptor_t const&)
 T CSVCMsg_GameEventList_descriptor_t::New() const
 T CSVCMsg_GameEventList_descriptor_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList_descriptor_t::SetCachedSize(int) const
 T CSVCMsg_GameEventList_descriptor_t::~CSVCMsg_GameEventList_descriptor_t()
 T CSVCMsg_GameEventList_key_t::ByteSize() const
 T CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t()
 T CSVCMsg_GameEventList_key_t::Clear()
 T CSVCMsg_GameEventList_key_t::GetCachedSize() const
 T CSVCMsg_GameEventList_key_t::GetMetadata() const
 T CSVCMsg_GameEventList_key_t::IsInitialized() const
 T CSVCMsg_GameEventList_key_t::MergeFrom(CSVCMsg_GameEventList_key_t const&)
 T CSVCMsg_GameEventList_key_t::New() const
 T CSVCMsg_GameEventList_key_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEventList_key_t::SetCachedSize(int) const
 T CSVCMsg_GameEventList_key_t::~CSVCMsg_GameEventList_key_t()
 T CSVCMsg_GameEvent_key_t::ByteSize() const
 T CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t()
 T CSVCMsg_GameEvent_key_t::Clear()
 T CSVCMsg_GameEvent_key_t::GetCachedSize() const
 T CSVCMsg_GameEvent_key_t::GetMetadata() const
 T CSVCMsg_GameEvent_key_t::IsInitialized() const
 T CSVCMsg_GameEvent_key_t::MergeFrom(CSVCMsg_GameEvent_key_t const&)
 T CSVCMsg_GameEvent_key_t::New() const
 T CSVCMsg_GameEvent_key_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GameEvent_key_t::SetCachedSize(int) const
 T CSVCMsg_GameEvent_key_t::~CSVCMsg_GameEvent_key_t()
 T CSVCMsg_GetCvarValue::ByteSize() const
 T CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue()
 T CSVCMsg_GetCvarValue::Clear()
 T CSVCMsg_GetCvarValue::CopyFrom(CSVCMsg_GetCvarValue const&)
 T CSVCMsg_GetCvarValue::GetCachedSize() const
 T CSVCMsg_GetCvarValue::GetMetadata() const
 T CSVCMsg_GetCvarValue::IsInitialized() const
 T CSVCMsg_GetCvarValue::MergeFrom(CSVCMsg_GetCvarValue const&)
 T CSVCMsg_GetCvarValue::New() const
 T CSVCMsg_GetCvarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_GetCvarValue::SetCachedSize(int) const
 T CSVCMsg_GetCvarValue::~CSVCMsg_GetCvarValue()
 T CSVCMsg_Menu::ByteSize() const
 T CSVCMsg_Menu::CSVCMsg_Menu()
 T CSVCMsg_Menu::Clear()
 T CSVCMsg_Menu::CopyFrom(CSVCMsg_Menu const&)
 T CSVCMsg_Menu::GetCachedSize() const
 T CSVCMsg_Menu::GetMetadata() const
 T CSVCMsg_Menu::IsInitialized() const
 T CSVCMsg_Menu::MergeFrom(CSVCMsg_Menu const&)
 T CSVCMsg_Menu::New() const
 T CSVCMsg_Menu::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Menu::SetCachedSize(int) const
 T CSVCMsg_Menu::~CSVCMsg_Menu()
 T CSVCMsg_PacketEntities::ByteSize() const
 T CSVCMsg_PacketEntities::CSVCMsg_PacketEntities()
 T CSVCMsg_PacketEntities::Clear()
 T CSVCMsg_PacketEntities::CopyFrom(CSVCMsg_PacketEntities const&)
 T CSVCMsg_PacketEntities::GetCachedSize() const
 T CSVCMsg_PacketEntities::GetMetadata() const
 T CSVCMsg_PacketEntities::IsInitialized() const
 T CSVCMsg_PacketEntities::MergeFrom(CSVCMsg_PacketEntities const&)
 T CSVCMsg_PacketEntities::New() const
 T CSVCMsg_PacketEntities::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_PacketEntities::SetCachedSize(int) const
 T CSVCMsg_PacketEntities::~CSVCMsg_PacketEntities()
 T CSVCMsg_PacketReliable::ByteSize() const
 T CSVCMsg_PacketReliable::CSVCMsg_PacketReliable()
 T CSVCMsg_PacketReliable::Clear()
 T CSVCMsg_PacketReliable::CopyFrom(CSVCMsg_PacketReliable const&)
 T CSVCMsg_PacketReliable::GetCachedSize() const
 T CSVCMsg_PacketReliable::GetMetadata() const
 T CSVCMsg_PacketReliable::IsInitialized() const
 T CSVCMsg_PacketReliable::MergeFrom(CSVCMsg_PacketReliable const&)
 T CSVCMsg_PacketReliable::New() const
 T CSVCMsg_PacketReliable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_PacketReliable::SetCachedSize(int) const
 T CSVCMsg_PacketReliable::~CSVCMsg_PacketReliable()
 T CSVCMsg_Prefetch::ByteSize() const
 T CSVCMsg_Prefetch::CSVCMsg_Prefetch()
 T CSVCMsg_Prefetch::Clear()
 T CSVCMsg_Prefetch::CopyFrom(CSVCMsg_Prefetch const&)
 T CSVCMsg_Prefetch::GetCachedSize() const
 T CSVCMsg_Prefetch::GetMetadata() const
 T CSVCMsg_Prefetch::IsInitialized() const
 T CSVCMsg_Prefetch::MergeFrom(CSVCMsg_Prefetch const&)
 T CSVCMsg_Prefetch::New() const
 T CSVCMsg_Prefetch::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Prefetch::SetCachedSize(int) const
 T CSVCMsg_Prefetch::~CSVCMsg_Prefetch()
 T CSVCMsg_Print::ByteSize() const
 T CSVCMsg_Print::CSVCMsg_Print()
 T CSVCMsg_Print::Clear()
 T CSVCMsg_Print::CopyFrom(CSVCMsg_Print const&)
 T CSVCMsg_Print::GetCachedSize() const
 T CSVCMsg_Print::GetMetadata() const
 T CSVCMsg_Print::IsInitialized() const
 T CSVCMsg_Print::MergeFrom(CSVCMsg_Print const&)
 T CSVCMsg_Print::New() const
 T CSVCMsg_Print::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Print::SetCachedSize(int) const
 T CSVCMsg_Print::~CSVCMsg_Print()
 T CSVCMsg_SendTable::ByteSize() const
 T CSVCMsg_SendTable::CSVCMsg_SendTable()
 T CSVCMsg_SendTable::Clear()
 T CSVCMsg_SendTable::CopyFrom(CSVCMsg_SendTable const&)
 T CSVCMsg_SendTable::GetCachedSize() const
 T CSVCMsg_SendTable::GetMetadata() const
 T CSVCMsg_SendTable::IsInitialized() const
 T CSVCMsg_SendTable::MergeFrom(CSVCMsg_SendTable const&)
 T CSVCMsg_SendTable::New() const
 T CSVCMsg_SendTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SendTable::SetCachedSize(int) const
 T CSVCMsg_SendTable::~CSVCMsg_SendTable()
 T CSVCMsg_SendTable_sendprop_t::ByteSize() const
 T CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t()
 T CSVCMsg_SendTable_sendprop_t::Clear()
 T CSVCMsg_SendTable_sendprop_t::GetCachedSize() const
 T CSVCMsg_SendTable_sendprop_t::GetMetadata() const
 T CSVCMsg_SendTable_sendprop_t::IsInitialized() const
 T CSVCMsg_SendTable_sendprop_t::MergeFrom(CSVCMsg_SendTable_sendprop_t const&)
 T CSVCMsg_SendTable_sendprop_t::New() const
 T CSVCMsg_SendTable_sendprop_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SendTable_sendprop_t::SetCachedSize(int) const
 T CSVCMsg_SendTable_sendprop_t::SharedCtor()
 T CSVCMsg_SendTable_sendprop_t::SharedDtor()
 T CSVCMsg_SendTable_sendprop_t::~CSVCMsg_SendTable_sendprop_t()
 T CSVCMsg_ServerInfo::ByteSize() const
 T CSVCMsg_ServerInfo::CSVCMsg_ServerInfo()
 T CSVCMsg_ServerInfo::Clear()
 T CSVCMsg_ServerInfo::CopyFrom(CSVCMsg_ServerInfo const&)
 T CSVCMsg_ServerInfo::GetCachedSize() const
 T CSVCMsg_ServerInfo::GetMetadata() const
 T CSVCMsg_ServerInfo::IsInitialized() const
 T CSVCMsg_ServerInfo::MergeFrom(CSVCMsg_ServerInfo const&)
 T CSVCMsg_ServerInfo::New() const
 T CSVCMsg_ServerInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_ServerInfo::SetCachedSize(int) const
 T CSVCMsg_ServerInfo::SharedCtor()
 T CSVCMsg_ServerInfo::SharedDtor()
 T CSVCMsg_ServerInfo::~CSVCMsg_ServerInfo()
 T CSVCMsg_SetPause::ByteSize() const
 T CSVCMsg_SetPause::CSVCMsg_SetPause()
 T CSVCMsg_SetPause::Clear()
 T CSVCMsg_SetPause::CopyFrom(CSVCMsg_SetPause const&)
 T CSVCMsg_SetPause::GetCachedSize() const
 T CSVCMsg_SetPause::GetMetadata() const
 T CSVCMsg_SetPause::IsInitialized() const
 T CSVCMsg_SetPause::MergeFrom(CSVCMsg_SetPause const&)
 T CSVCMsg_SetPause::New() const
 T CSVCMsg_SetPause::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SetPause::SetCachedSize(int) const
 T CSVCMsg_SetPause::~CSVCMsg_SetPause()
 T CSVCMsg_SetView::ByteSize() const
 T CSVCMsg_SetView::CSVCMsg_SetView()
 T CSVCMsg_SetView::Clear()
 T CSVCMsg_SetView::CopyFrom(CSVCMsg_SetView const&)
 T CSVCMsg_SetView::GetCachedSize() const
 T CSVCMsg_SetView::GetMetadata() const
 T CSVCMsg_SetView::IsInitialized() const
 T CSVCMsg_SetView::MergeFrom(CSVCMsg_SetView const&)
 T CSVCMsg_SetView::New() const
 T CSVCMsg_SetView::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SetView::SetCachedSize(int) const
 T CSVCMsg_SetView::~CSVCMsg_SetView()
 T CSVCMsg_Sounds::ByteSize() const
 T CSVCMsg_Sounds::CSVCMsg_Sounds()
 T CSVCMsg_Sounds::Clear()
 T CSVCMsg_Sounds::CopyFrom(CSVCMsg_Sounds const&)
 T CSVCMsg_Sounds::GetCachedSize() const
 T CSVCMsg_Sounds::GetMetadata() const
 T CSVCMsg_Sounds::IsInitialized() const
 T CSVCMsg_Sounds::MergeFrom(CSVCMsg_Sounds const&)
 T CSVCMsg_Sounds::New() const
 T CSVCMsg_Sounds::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Sounds::SetCachedSize(int) const
 T CSVCMsg_Sounds::~CSVCMsg_Sounds()
 T CSVCMsg_Sounds_ReadDeltaAndUpdate(SoundInfo_t*, SoundInfo_t const*, CSVCMsg_Sounds_sounddata_t const&)
 T CSVCMsg_Sounds_WriteDeltaAndUpdate(SoundInfo_t*, SoundInfo_t const*, CSVCMsg_Sounds&, float)
 T CSVCMsg_Sounds_sounddata_t::ByteSize() const
 T CSVCMsg_Sounds_sounddata_t::Clear()
 T CSVCMsg_Sounds_sounddata_t::GetCachedSize() const
 T CSVCMsg_Sounds_sounddata_t::GetMetadata() const
 T CSVCMsg_Sounds_sounddata_t::IsInitialized() const
 T CSVCMsg_Sounds_sounddata_t::MergeFrom(CSVCMsg_Sounds_sounddata_t const&)
 T CSVCMsg_Sounds_sounddata_t::New() const
 T CSVCMsg_Sounds_sounddata_t::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_Sounds_sounddata_t::SetCachedSize(int) const
 T CSVCMsg_Sounds_sounddata_t::~CSVCMsg_Sounds_sounddata_t()
 T CSVCMsg_SplitScreen::ByteSize() const
 T CSVCMsg_SplitScreen::CSVCMsg_SplitScreen()
 T CSVCMsg_SplitScreen::Clear()
 T CSVCMsg_SplitScreen::CopyFrom(CSVCMsg_SplitScreen const&)
 T CSVCMsg_SplitScreen::GetCachedSize() const
 T CSVCMsg_SplitScreen::GetMetadata() const
 T CSVCMsg_SplitScreen::IsInitialized() const
 T CSVCMsg_SplitScreen::MergeFrom(CSVCMsg_SplitScreen const&)
 T CSVCMsg_SplitScreen::New() const
 T CSVCMsg_SplitScreen::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_SplitScreen::SetCachedSize(int) const
 T CSVCMsg_SplitScreen::~CSVCMsg_SplitScreen()
 T CSVCMsg_TempEntities::ByteSize() const
 T CSVCMsg_TempEntities::CSVCMsg_TempEntities()
 T CSVCMsg_TempEntities::Clear()
 T CSVCMsg_TempEntities::CopyFrom(CSVCMsg_TempEntities const&)
 T CSVCMsg_TempEntities::GetCachedSize() const
 T CSVCMsg_TempEntities::GetMetadata() const
 T CSVCMsg_TempEntities::IsInitialized() const
 T CSVCMsg_TempEntities::MergeFrom(CSVCMsg_TempEntities const&)
 T CSVCMsg_TempEntities::New() const
 T CSVCMsg_TempEntities::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_TempEntities::SetCachedSize(int) const
 T CSVCMsg_TempEntities::~CSVCMsg_TempEntities()
 T CSVCMsg_UpdateStringTable::ByteSize() const
 T CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable()
 T CSVCMsg_UpdateStringTable::Clear()
 T CSVCMsg_UpdateStringTable::CopyFrom(CSVCMsg_UpdateStringTable const&)
 T CSVCMsg_UpdateStringTable::GetCachedSize() const
 T CSVCMsg_UpdateStringTable::GetMetadata() const
 T CSVCMsg_UpdateStringTable::IsInitialized() const
 T CSVCMsg_UpdateStringTable::MergeFrom(CSVCMsg_UpdateStringTable const&)
 T CSVCMsg_UpdateStringTable::New() const
 T CSVCMsg_UpdateStringTable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_UpdateStringTable::SetCachedSize(int) const
 T CSVCMsg_UpdateStringTable::~CSVCMsg_UpdateStringTable()
 T CSVCMsg_UserMessage::ByteSize() const
 T CSVCMsg_UserMessage::CSVCMsg_UserMessage()
 T CSVCMsg_UserMessage::Clear()
 T CSVCMsg_UserMessage::CopyFrom(CSVCMsg_UserMessage const&)
 T CSVCMsg_UserMessage::GetCachedSize() const
 T CSVCMsg_UserMessage::GetMetadata() const
 T CSVCMsg_UserMessage::IsInitialized() const
 T CSVCMsg_UserMessage::MergeFrom(CSVCMsg_UserMessage const&)
 T CSVCMsg_UserMessage::New() const
 T CSVCMsg_UserMessage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_UserMessage::SetCachedSize(int) const
 T CSVCMsg_UserMessage::Swap(CSVCMsg_UserMessage*)
 T CSVCMsg_UserMessage::~CSVCMsg_UserMessage()
 T CSVCMsg_VoiceData::ByteSize() const
 T CSVCMsg_VoiceData::CSVCMsg_VoiceData()
 T CSVCMsg_VoiceData::Clear()
 T CSVCMsg_VoiceData::CopyFrom(CSVCMsg_VoiceData const&)
 T CSVCMsg_VoiceData::GetCachedSize() const
 T CSVCMsg_VoiceData::GetMetadata() const
 T CSVCMsg_VoiceData::IsInitialized() const
 T CSVCMsg_VoiceData::MergeFrom(CSVCMsg_VoiceData const&)
 T CSVCMsg_VoiceData::New() const
 T CSVCMsg_VoiceData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_VoiceData::SetCachedSize(int) const
 T CSVCMsg_VoiceData::SharedCtor()
 T CSVCMsg_VoiceData::~CSVCMsg_VoiceData()
 T CSVCMsg_VoiceInit::ByteSize() const
 T CSVCMsg_VoiceInit::CSVCMsg_VoiceInit()
 T CSVCMsg_VoiceInit::Clear()
 T CSVCMsg_VoiceInit::CopyFrom(CSVCMsg_VoiceInit const&)
 T CSVCMsg_VoiceInit::GetCachedSize() const
 T CSVCMsg_VoiceInit::GetMetadata() const
 T CSVCMsg_VoiceInit::IsInitialized() const
 T CSVCMsg_VoiceInit::MergeFrom(CSVCMsg_VoiceInit const&)
 T CSVCMsg_VoiceInit::New() const
 T CSVCMsg_VoiceInit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSVCMsg_VoiceInit::SetCachedSize(int) const
 T CSVCMsg_VoiceInit::~CSVCMsg_VoiceInit()
 T CSaveDirectory::CSaveDirectory()
 T CSaveDirectory::~CSaveDirectory()
 T CSaveDocumentQuery::ApplySchemeSettings(vgui::IScheme*)
 T CSaveDocumentQuery::CSaveDocumentQuery(vgui::Panel*, char const*, char const*, int, vgui::Panel*, KeyValues*)
 T CSaveDocumentQuery::DoModal()
 T CSaveDocumentQuery::GetAnimMap()
 T CSaveDocumentQuery::GetKBMap()
 T CSaveDocumentQuery::GetMessageMap()
 T CSaveDocumentQuery::GetPanelClassName()
 T CSaveDocumentQuery::OnCommand(char const*)
 T CSaveDocumentQuery::~CSaveDocumentQuery()
 T CSaveMemory::~CSaveMemory()
 T CSaveRestore::AddDeferredCommand(char const*)
 T CSaveRestore::AgeSaveFile(char const*, char const*, int, bool)
 T CSaveRestore::AgeSaveList(char const*, int, bool)
 T CSaveRestore::AutoSaveDangerousIsSafe()
 T CSaveRestore::BuildRestoredIndexTranslationTable(char const*, CSaveRestoreData*, bool)
 T CSaveRestore::CSaveRestore()
 T CSaveRestore::CalcSaveGameName(char const*, char*, int)
 T CSaveRestore::ClearRestoredIndexTranslationTables()
 T CSaveRestore::ClearSaveDir()
 T CSaveRestore::DirectoryCopy(char const*, char const*, bool)
 T CSaveRestore::DoClearSaveDir(bool)
 T CSaveRestore::EntityPatchRead(CSaveRestoreData*, char const*)
 T CSaveRestore::EntityPatchWrite(CSaveRestoreData*, char const*, bool)
 T CSaveRestore::FindRecentSave(char*, int)
 T CSaveRestore::Finish(CSaveRestoreData*)
 T CSaveRestore::FinishAsyncSave()
 T CSaveRestore::ForgetRecentSave()
 T CSaveRestore::GetMostRecentElapsedMinutes()
 T CSaveRestore::GetMostRecentElapsedSeconds()
 T CSaveRestore::GetMostRecentElapsedTimeSet()
 T CSaveRestore::GetMostRecentlyLoadedFileName()
 T CSaveRestore::GetSaveDir()
 T CSaveRestore::GetSaveFileName()
 T CSaveRestore::Init()
 T CSaveRestore::IsOverrideLoadGameEntsOn()
 T CSaveRestore::IsSaveInProgress()
 T CSaveRestore::IsValidSave()
 T CSaveRestore::IsXSave()
 T CSaveRestore::LoadAdjacentEnts(char const*, char const*)
 T CSaveRestore::LoadGame(char const*, bool)
 T CSaveRestore::LoadGameState(char const*, bool)
 T CSaveRestore::LoadSaveData(char const*)
 T CSaveRestore::OnFinishedClientRestore()
 T CSaveRestore::OnFrameRendered()
 T CSaveRestore::ParseSaveTables(CSaveRestoreData*, SAVE_HEADER*, int)
 T CSaveRestore::ReapplyDecal(bool, CSaveRestore::RestoreLookupTable*, decallist_t*)
 T CSaveRestore::RequestClearSaveDir()
 T CSaveRestore::RestoreAdjacenClientState(char const*)
 T CSaveRestore::RestoreClientState(char const*, bool)
 T CSaveRestore::RestoreLookupTable::RestoreLookupTable(CSaveRestore::RestoreLookupTable const&)
 T CSaveRestore::SaveClientState(char const*)
 T CSaveRestore::SaveFileExists(char const*)
 T CSaveRestore::SaveGameSlot(char const*, char const*, bool, bool, char const*, char const*)
 T CSaveRestore::SaveGameState(bool, CSaveRestoreData**, bool, bool)
 T CSaveRestore::SaveGameStateGlobals(CSaveRestoreData*)
 T CSaveRestore::SaveReadHeader(void*, GAME_HEADER*, int)
 T CSaveRestore::SaveReadNameAndComment(void*, char*, char*)
 T CSaveRestore::SetIsXSave(bool)
 T CSaveRestore::SetMostRecentElapsedMinutes(int)
 T CSaveRestore::SetMostRecentElapsedSeconds(int)
 T CSaveRestore::SetMostRecentSaveGame(char const*)
 T CSaveRestore::Shutdown()
 T CSaveRestore::StorageDeviceValid()
 T CSaveRestore::UpdateSaveGameScreenshots()
 T CSaveRestore::~CSaveRestore()
 T CSaveRestoreFileSystem::AsyncAppend(char const*, void const*, int, bool, FSAsyncControl_t__**)
 T CSaveRestoreFileSystem::AsyncAppendFile(char const*, char const*, FSAsyncControl_t__**)
 T CSaveRestoreFileSystem::AsyncFinish(FSAsyncControl_t__*, bool)
 T CSaveRestoreFileSystem::AsyncFinishAllWrites()
 T CSaveRestoreFileSystem::AsyncRelease(FSAsyncControl_t__*)
 T CSaveRestoreFileSystem::AsyncWrite(char const*, void const*, int, bool, bool, FSAsyncControl_t__**)
 T CSaveRestoreFileSystem::AuditFiles()
 T CSaveRestoreFileSystem::Close(void*)
 T CSaveRestoreFileSystem::Compress(CSaveDirectory::file_t*)
 T CSaveRestoreFileSystem::DirectorCopyToMemory(char const*, char const*)
 T CSaveRestoreFileSystem::DirectoryClear(char const*, bool)
 T CSaveRestoreFileSystem::DirectoryCopy(char const*, char const*, bool)
 T CSaveRestoreFileSystem::DirectoryCount(char const*)
 T CSaveRestoreFileSystem::DirectoryExtract(void*, int, bool)
 T CSaveRestoreFileSystem::DumpSaveDirectory()
 T CSaveRestoreFileSystem::FileExists(char const*, char const*)
 T CSaveRestoreFileSystem::GetFileIndex(char const*)
 T CSaveRestoreFileSystem::LoadFileFromDisk(char const*)
 T CSaveRestoreFileSystem::Open(char const*, char const*, char const*)
 T CSaveRestoreFileSystem::Read(void*, int, void*)
 T CSaveRestoreFileSystem::RemoveFile(char const*, char const*)
 T CSaveRestoreFileSystem::RenameFile(char const*, char const*, char const*)
 T CSaveRestoreFileSystem::Seek(void*, int, FileSystemSeek_t)
 T CSaveRestoreFileSystem::Size(char const*, char const*)
 T CSaveRestoreFileSystem::Size(void*)
 T CSaveRestoreFileSystem::Tell(void*)
 T CSaveRestoreFileSystem::Uncompress(CSaveDirectory::file_t*)
 T CSaveRestoreFileSystem::Write(void const*, int, void*)
 T CSaveRestoreFileSystem::~CSaveRestoreFileSystem()
 T CSaveRestoreFileSystemPassthrough::AsyncAppend(char const*, void const*, int, bool, FSAsyncControl_t__**)
 T CSaveRestoreFileSystemPassthrough::AsyncAppendFile(char const*, char const*, FSAsyncControl_t__**)
 T CSaveRestoreFileSystemPassthrough::AsyncFinish(FSAsyncControl_t__*, bool)
 T CSaveRestoreFileSystemPassthrough::AsyncFinishAllWrites()
 T CSaveRestoreFileSystemPassthrough::AsyncRelease(FSAsyncControl_t__*)
 T CSaveRestoreFileSystemPassthrough::AsyncWrite(char const*, void const*, int, bool, bool, FSAsyncControl_t__**)
 T CSaveRestoreFileSystemPassthrough::AuditFiles()
 T CSaveRestoreFileSystemPassthrough::Close(void*)
 T CSaveRestoreFileSystemPassthrough::DirectoryClear(char const*, bool)
 T CSaveRestoreFileSystemPassthrough::DirectoryCopy(char const*, char const*, bool)
 T CSaveRestoreFileSystemPassthrough::DirectoryCount(char const*)
 T CSaveRestoreFileSystemPassthrough::DirectoryExtract(void*, int, bool)
 T CSaveRestoreFileSystemPassthrough::FileExists(char const*, char const*)
 T CSaveRestoreFileSystemPassthrough::LoadFileFromDisk(char const*)
 T CSaveRestoreFileSystemPassthrough::Open(char const*, char const*, char const*)
 T CSaveRestoreFileSystemPassthrough::Read(void*, int, void*)
 T CSaveRestoreFileSystemPassthrough::RemoveFile(char const*, char const*)
 T CSaveRestoreFileSystemPassthrough::RenameFile(char const*, char const*, char const*)
 T CSaveRestoreFileSystemPassthrough::Seek(void*, int, FileSystemSeek_t)
 T CSaveRestoreFileSystemPassthrough::Size(char const*, char const*)
 T CSaveRestoreFileSystemPassthrough::Size(void*)
 T CSaveRestoreFileSystemPassthrough::Tell(void*)
 T CSaveRestoreFileSystemPassthrough::Write(void const*, int, void*)
 T CScratchPad::SetPerExecution(channel_t*, StartSoundParams_t*)
 T CScratchPad::~CScratchPad()
 T CSelectedHSVOperation::AddSelectedColor(unsigned char, unsigned char, unsigned char)
 T CSelectedHSVOperation::AddSelectedColorHSV(unsigned char, unsigned char, unsigned char)
 T CSelectedHSVOperation::Apply(Vector const&, Vector&)
 T CSelectedHSVOperation::CSelectedHSVOperation(CColorOperationList*)
 T CSelectedHSVOperation::Clone()
 T CSelectedHSVOperation::GetBlendFactor()
 T CSelectedHSVOperation::GetName()
 T CSelectedHSVOperation::GetSelectionAmount(Vector const&) const
 T CSelectedHSVOperation::IsEnabled()
 T CSelectedHSVOperation::Release()
 T CSelectedHSVOperation::Serialize(CDmxElement*)
 T CSelectedHSVOperation::SetBlendFactor(float)
 T CSelectedHSVOperation::SetEnabled(bool)
 T CSelectedHSVOperation::SetName(char const*)
 T CSelectedHSVOperation::ToolID()
 T CSelectedHSVOperation::Unserialize(CDmxElement*)
 T CSelectedHSVUIPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CSelectedHSVUIPanel::CSelectedHSVUIPanel(vgui::Panel*, CSelectedHSVOperation*)
 T CSelectedHSVUIPanel::GetAnimMap()
 T CSelectedHSVUIPanel::GetKBMap()
 T CSelectedHSVUIPanel::GetMessageMap()
 T CSelectedHSVUIPanel::GetOperation()
 T CSelectedHSVUIPanel::GetPanelClassName()
 T CSelectedHSVUIPanel::Init()
 T CSelectedHSVUIPanel::OnCommand(char const*)
 T CSelectedHSVUIPanel::OnMessage(KeyValues const*, unsigned int)
 T CSelectedHSVUIPanel::OnSelectionMethodSelected()
 T CSelectedHSVUIPanel::OnTextChanged(KeyValues*)
 T CSelectedHSVUIPanel::PopulateControls()
 T CSelectedHSVUIPanel::ReadUncorrectedImage(Rect_t*, unsigned char*)
 T CSelectedHSVUIPanel::Shutdown()
 T CSelectedHSVUIPanel::~CSelectedHSVUIPanel()
 T CSendNode::~CSendNode()
 T CSendTablePrecalc::CSendTablePrecalc()
 T CSendTablePrecalc::SetupFlatPropertyArray()
 T CSendTablePrecalc::~CSendTablePrecalc()
 T CSentence::Append(float, CSentence const&)
 T CSentence::CSentence()
 T CSentence::CacheRestoreFromBuffer(CUtlBuffer&)
 T CSentence::CacheSaveToBuffer(CUtlBuffer&, int)
 T CSentence::InitFromBuffer(CUtlBuffer&)
 T CSentence::InitFromDataChunk(void*, int)
 T CSentence::MakeRuntimeOnly()
 T CSentence::ParseCloseCaption(CUtlBuffer&)
 T CSentence::ParseDataVersionOnePointZero(CUtlBuffer&)
 T CSentence::ParseEmphasis(CUtlBuffer&)
 T CSentence::ParseOptions(CUtlBuffer&)
 T CSentence::ParsePlaintext(CUtlBuffer&)
 T CSentence::ParseWords(CUtlBuffer&)
 T CSentence::Reset()
 T CSentence::operator=(CSentence const&)
 T CSentence::~CSentence()
 T CSentenceMixer::CSentenceMixer(voxword_t*)
 T CSentenceMixer::GetMixSampleSize()
 T CSentenceMixer::GetPositionForSave()
 T CSentenceMixer::GetSamplePosition()
 T CSentenceMixer::GetSource()
 T CSentenceMixer::GetVolumeScale()
 T CSentenceMixer::IsReadyToMix()
 T CSentenceMixer::MixDataToDevice(channel_t*, int, int, int)
 T CSentenceMixer::ModifyPitch(float)
 T CSentenceMixer::SetPositionFromSaved(int)
 T CSentenceMixer::SetSampleEnd(int)
 T CSentenceMixer::SetSampleStart(int)
 T CSentenceMixer::SetStartupDelaySamples(int)
 T CSentenceMixer::ShouldContinueMixing()
 T CSentenceMixer::SkipSamples(channel_t*, int, int, int)
 T CSentenceMixer::~CSentenceMixer()
 T CSerializedEntities::AllocateSerializedEntity(char const*, int)
 T CSerializedEntities::CopySerializedEntity(int, char const*, int)
 T CSerializedEntities::ReleaseSerializedEntity(int)
 T CSerializedEntity::CSerializedEntity()
 T CSerializedEntity::Clear()
 T CSerializedEntity::Copy(CSerializedEntity const&)
 T CSerializedEntity::Grow()
 T CSerializedEntity::PackWithFieldData(bf_read&, int)
 T CSerializedEntity::PackWithFieldData(void*, int)
 T CSerializedEntity::ReadFieldPaths(bf_read*, CUtlVector<int, CUtlMemory<int, int> >*)
 T CSerializedEntity::ReservePathAndOffsetMemory(unsigned int)
 T CSerializedEntity::SetupPackMemory(int, int)
 T CSerializedEntity::StartReading(bf_read&) const
 T CSerializedEntity::StartWriting(bf_write&)
 T CSerializedEntity::Swap(CSerializedEntity&)
 T CSerializedEntity::~CSerializedEntity()
 T CServerDatatableStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
 T CServerEngineTools::FrameUpdatePostEntityThinkAllTools()
 T CServerEngineTools::FrameUpdatePreEntityThinkAllTools()
 T CServerEngineTools::GetEntityData(char const*)
 T CServerEngineTools::InToolMode()
 T CServerEngineTools::LevelInitPostEntityAllTools()
 T CServerEngineTools::LevelInitPreEntityAllTools()
 T CServerEngineTools::LevelShutdownPostEntityAllTools()
 T CServerEngineTools::LevelShutdownPreEntityAllTools()
 T CServerEngineTools::PreClientUpdateAllTools()
 T CServerEngineTools::PreSetupVisibilityAllTools()
 T CServerEngineTools::QueryInterface(char const*)
 T CServerEngineTools::~CServerEngineTools()
 T CServerPlugin::ClientActive(CEntityIndex, bool)
 T CServerPlugin::ClientCommand(CEntityIndex, CCommand const&)
 T CServerPlugin::ClientCommand(CEntityIndex, char const*)
 T CServerPlugin::ClientConnect(CEntityIndex, char const*, char const*, char*, int)
 T CServerPlugin::ClientDisconnect(CEntityIndex, int)
 T CServerPlugin::ClientFullyConnect(CEntityIndex)
 T CServerPlugin::ClientPutInServer(CEntityIndex, char const*)
 T CServerPlugin::ClientSettingsChanged(CEntityIndex)
 T CServerPlugin::CreateMessage(CEntityIndex, DIALOG_TYPE, KeyValues*, IServerPluginCallbacks*)
 T CServerPlugin::GameFrame(bool)
 T CServerPlugin::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
 T CServerPlugin::LevelShutdown()
 T CServerPlugin::LoadPlugins()
 T CServerPlugin::NetworkIDValidated(char const*, char const*)
 T CServerPlugin::OnEdictAllocated(edict_t*)
 T CServerPlugin::OnEdictFreed(edict_t const*)
 T CServerPlugin::OnQueryCvarValueFinished(int, CEntityIndex, EQueryCvarValueStatus, char const*, char const*)
 T CServerPlugin::PreChangeLevel(char const*)
 T CServerPlugin::ServerActivate()
 T CServerPlugin::SetCommandClient(int)
 T CServerPlugin::StartQueryCvarValue(CEntityIndex, char const*)
 T CServerPlugin::UnloadPlugins()
 T CServerPlugin::~CServerPlugin()
 T CServerRemoteAccess::BadPassword(CRConServer*, unsigned int)
 T CServerRemoteAccess::CheckPassword(CRConServer*, unsigned int, int, char const*)
 T CServerRemoteAccess::GetDataResponseSize(unsigned int)
 T CServerRemoteAccess::GetMapList(CUtlBuffer&)
 T CServerRemoteAccess::GetNextListenerID(bool, netadr_t const*)
 T CServerRemoteAccess::GetPlayerList(CUtlBuffer&)
 T CServerRemoteAccess::LogCommand(unsigned int, char const*)
 T CServerRemoteAccess::LookupStringValue(char const*)
 T CServerRemoteAccess::LookupValue(char const*, CUtlBuffer&)
 T CServerRemoteAccess::ReadDataResponse(unsigned int, void*, int)
 T CServerRemoteAccess::RegisterAdminUIID(unsigned int)
 T CServerRemoteAccess::RemoteBug(char const*)
 T CServerRemoteAccess::RequestValue(unsigned int, int, char const*)
 T CServerRemoteAccess::RespondString(unsigned int, int, char const*)
 T CServerRemoteAccess::SendMessageToAdminUI(unsigned int, char const*)
 T CServerRemoteAccess::SendResponseToClient(unsigned int, ServerDataResponseType_t, void*, int)
 T CServerRemoteAccess::SendVProfData(unsigned int, bool, void*, int)
 T CServerRemoteAccess::SetValue(char const*, char const*)
 T CServerRemoteAccess::UploadScreenshot(char const*)
 T CServerRemoteAccess::WriteDataRequest(CRConServer*, unsigned int, void const*, int)
 T CServerRemoteAccess::WriteDataRequest(unsigned int, void const*, int)
 T CServerRemoteAccess::~CServerRemoteAccess()
 T CSfxTable::CSfxTable()
 T CSfxTable::GetFileName(char*, unsigned long)
 T CSfxTable::IsPrecachedSound()
 T CSfxTable::OnNameChanged(char const*)
 T CSfxTable::getname(char*, unsigned long)
 T CShadowMgr::AddDecalToShadowList(unsigned short, unsigned short)
 T CShadowMgr::AddExtraClipPlane(unsigned short, Vector const&, float)
 T CShadowMgr::AddNormalShadowsToMeshBuilder(CMeshBuilder&, CShadowMgr::ShadowRenderInfo_t&)
 T CShadowMgr::AddShadowToBrushModel(unsigned short, model_t*, Vector const&, QAngle const&)
 T CShadowMgr::AddShadowToModel(unsigned short, unsigned short)
 T CShadowMgr::AddShadowsOnSurfaceToRenderList(unsigned short)
 T CShadowMgr::AddSurfaceToShadow(unsigned short, msurface2_t*)
 T CShadowMgr::ApplyFlashlightToLeaf(CShadowMgr::Shadow_t const&, mleaf_t*, CShadowMgr::ShadowBuildInfo_t*)
 T CShadowMgr::ApplyShadowToDisplacement(CShadowMgr::ShadowBuildInfo_t&, IDispInfo*, bool)
 T CShadowMgr::ApplyShadowToLeaf(CShadowMgr::Shadow_t const&, mleaf_t*, CShadowMgr::ShadowBuildInfo_t*)
 T CShadowMgr::CShadowMgr()
 T CShadowMgr::CleanupMaterial(CShadowMgr::Shadow_t&)
 T CShadowMgr::ClearExtraClipPlanes(unsigned short)
 T CShadowMgr::ClearShadowRenderList()
 T CShadowMgr::ClearTempCache()
 T CShadowMgr::ComputeRenderInfo(ShadowDecalRenderInfo_t*, unsigned short) const
 T CShadowMgr::ComputeShadowVertices(CShadowMgr::ShadowDecal_t&, VMatrix const*, VMatrix const*, CShadowMgr::ShadowVertexCache_t*)
 T CShadowMgr::ComputeSurfaceBounds(CShadowMgr::SurfaceBounds_t*, msurface2_t*)
 T CShadowMgr::CreateShadow(IMaterial*, IMaterial*, void*, int)
 T CShadowMgr::CreateShadowEx(IMaterial*, IMaterial*, void*, int, int)
 T CShadowMgr::DestroyShadow(unsigned short)
 T CShadowMgr::DestroyShadows()
 T CShadowMgr::DrawFlashlightDecals(int, bool, float)
 T CShadowMgr::DrawFlashlightDecalsOnDisplacements(int, CDispInfo**, int, bool)
 T CShadowMgr::DrawFlashlightDecalsOnSurfaceList(msurface2_t**, int, bool)
 T CShadowMgr::DrawFlashlightDepthTexture()
 T CShadowMgr::DrawFlashlightOverlays(int, bool)
 T CShadowMgr::DrawVolumetrics()
 T CShadowMgr::EnableShadow(unsigned short, bool)
 T CShadowMgr::EnableStencilAndScissorMasking(IMatRenderContext*, CShadowMgr::FlashlightInfo_t const&, bool)
 T CShadowMgr::EndFlashlightRenderState(unsigned short)
 T CShadowMgr::EndFrameCleanup()
 T CShadowMgr::EnumerateLeaf(int, int)
 T CShadowMgr::FlashlightDrawCallback(void (*)(void*), void*)
 T CShadowMgr::FlashlightInfo_t::~FlashlightInfo_t()
 T CShadowMgr::GenerateNormalShadowRenderInfo(IMatRenderContext*, CShadowMgr::ShadowDecal_t&, CShadowMgr::ShadowRenderInfo_t&)
 T CShadowMgr::GenerateShadowRenderInfo(IMatRenderContext*, unsigned short, CShadowMgr::ShadowRenderInfo_t&)
 T CShadowMgr::GenerateShadowRenderInfoThreaded(IMatRenderContext*, unsigned short, CShadowMgr::ShadowRenderInfo_t&)
 T CShadowMgr::GetFlashlightFrustum(unsigned short)
 T CShadowMgr::GetFlashlightRenderInfo(FlashlightInstance_t*, int, unsigned short const*)
 T CShadowMgr::GetFlashlightState(unsigned short)
 T CShadowMgr::GetInfo(unsigned short)
 T CShadowMgr::GetNumShadowsOnModel(unsigned short)
 T CShadowMgr::GetShadowsOnModel(unsigned short, unsigned short*, bool, bool)
 T CShadowMgr::GetSurfaceBounds(msurface2_t*)
 T CShadowMgr::InvalidShadowIndex()
 T CShadowMgr::IsShadowNearSurface(unsigned short, msurface2_t*, VMatrix const*, VMatrix const*)
 T CShadowMgr::LevelInit(int)
 T CShadowMgr::LevelShutdown()
 T CShadowMgr::ModelHasShadows(unsigned short)
 T CShadowMgr::PopSinglePassFlashlightStateEnabled()
 T CShadowMgr::ProcessDispDecalWorkItem(CShadowMgr::DispDecalWorkItem_t&)
 T CShadowMgr::ProjectAndClipVertices(CShadowMgr::Shadow_t const&, VMatrix const&, VMatrix const*, int, Vector**, ShadowVertex_t***, ShadowClipState_t&)
 T CShadowMgr::ProjectAndClipVertices(unsigned short, int, Vector**, ShadowVertex_t***)
 T CShadowMgr::ProjectAndClipVerticesEx(unsigned short, int, Vector**, ShadowVertex_t***, ShadowClipState_t&)
 T CShadowMgr::ProjectFlashlight(unsigned short, VMatrix const&, int, int const*)
 T CShadowMgr::ProjectShadow(unsigned short, Vector const&, Vector const&, VMatrix const&, Vector2D const&, int, int const*, float, float, float, Vector const&)
 T CShadowMgr::ProjectVerticesIntoShadowSpace(VMatrix const*, float, int, Vector**, ShadowClipState_t&)
 T CShadowMgr::PushSinglePassFlashlightStateEnabled(bool)
 T CShadowMgr::QueueShadowToBeDestroyed(unsigned short)
 T CShadowMgr::RemoveAllDecalsFromShadow(unsigned short)
 T CShadowMgr::RemoveAllShadowsFromBrushModel(model_t*)
 T CShadowMgr::RemoveAllShadowsFromModel(unsigned short)
 T CShadowMgr::RemoveShadowDecalFromSurface(msurface2_t*, unsigned short)
 T CShadowMgr::RenderDebuggingInfo(CShadowMgr::ShadowRenderInfo_t const&, void (*)(unsigned short, Vector const&))
 T CShadowMgr::RenderFlashlights(bool, bool, VMatrix const*)
 T CShadowMgr::RenderProjectedTextures(VMatrix const*)
 T CShadowMgr::RenderShadowList(IMatRenderContext*, unsigned short, VMatrix const*)
 T CShadowMgr::RenderShadows(VMatrix const*)
 T CShadowMgr::SetFalloffBias(unsigned short, unsigned char)
 T CShadowMgr::SetFlashlightDepthTexture(unsigned short, ITexture*, unsigned char)
 T CShadowMgr::SetFlashlightRenderState(unsigned short)
 T CShadowMgr::SetFlashlightStencilMasks(bool)
 T CShadowMgr::SetMaterial(CShadowMgr::Shadow_t&, IMaterial*, IMaterial*, void*)
 T CShadowMgr::SetModelShadowState(unsigned short)
 T CShadowMgr::SetNumWorldMaterialBuckets(int)
 T CShadowMgr::SetShadowMaterial(unsigned short, IMaterial*, IMaterial*, void*)
 T CShadowMgr::SetShadowTexCoord(unsigned short, float, float, float, float)
 T CShadowMgr::SetSinglePassFlashlightRenderState(unsigned short)
 T CShadowMgr::SetStencilAndScissor(IMatRenderContext*, CShadowMgr::FlashlightInfo_t&, bool)
 T CShadowMgr::SetupFlashlightRenderInstanceInfo(unsigned short*, unsigned int*, int, int, unsigned short const*)
 T CShadowMgr::SinglePassFlashlightModeEnabled()
 T CShadowMgr::SkipShadowForEntity(int)
 T CShadowMgr::UpdateFlashlightState(unsigned short, FlashlightState_t const&)
 T CShadowMgr::~CShadowMgr()
 T CSmallTextEntry::ApplySchemeSettings(vgui::IScheme*)
 T CSmallTextEntry::CSmallTextEntry(vgui::Panel*, char const*)
 T CSmallTextEntry::GetAnimMap()
 T CSmallTextEntry::GetKBMap()
 T CSmallTextEntry::GetMessageMap()
 T CSmallTextEntry::GetPanelClassName()
 T CSmallTextEntry::~CSmallTextEntry()
 T CSocketCreator::CSocketCreator(ISocketCreatorListener*)
 T CSocketCreator::CloseAcceptedSocket(int)
 T CSocketCreator::CloseAllAcceptedSockets()
 T CSocketCreator::CloseListenSocket()
 T CSocketCreator::ConfigureSocket(int)
 T CSocketCreator::ConnectSocket(netadr_t const&, bool)
 T CSocketCreator::CreateListenSocket(netadr_t const&, bool)
 T CSocketCreator::GetAcceptedSocketAddress(int) const
 T CSocketCreator::GetAcceptedSocketCount() const
 T CSocketCreator::GetAcceptedSocketData(int)
 T CSocketCreator::GetAcceptedSocketHandle(int) const
 T CSocketCreator::ProcessAccept()
 T CSocketCreator::RunFrame()
 T CSocketCreator::~CSocketCreator()
 T CSosEntryMatch::IsAMatch(CSosEntryMatch*)
 T CSosEntryMatchList::GetEntryFromIndex(int) const
 T CSosEntryMatchList::GetFreeEntryIndex() const
 T CSosEntryMatchList::HasAMatch(CSosEntryMatch*) const
 T CSosEntryMatchList::Update()
 T CSosManagedEntryMatch::Print()
 T CSosOperator::BaseParseKV(CSosOperatorStack*, CSosOperator_t*, char const*, char const*) const
 T CSosOperator::CSosOperator()
 T CSosOperator::GetOutputOffset(char const*) const
 T CSosOperator::OffsetConnections(void*, unsigned long) const
 T CSosOperator::ParseValueRef(CSosOperatorStack*, char const*, char const*) const
 T CSosOperator::PrintBaseParams(void*, CSosOperatorStack*, int, int) const
 T CSosOperator::PrintIO(CSosOperator_t*, CSosOperatorStack*, int) const
 T CSosOperator::ResolveInputValues(void*, void*) const
 T CSosOperator::SetBaseDefaults(void*) const
 T CSosOperator::StackInit(void*, CSosOperatorStack*, int)
 T CSosOperator::StackShutdown(void*, CSosOperatorStack*, int)
 T CSosOperator::~CSosOperator()
 T CSosOperatorBlockEntry::CSosOperatorBlockEntry()
 T CSosOperatorBlockEntry::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorBlockEntry::GetSize() const
 T CSosOperatorBlockEntry::OpHelp() const
 T CSosOperatorBlockEntry::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorBlockEntry::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorBlockEntry::SetDefaults(void*) const
 T CSosOperatorBlockEntry::StackShutdown(void*, CSosOperatorStack*, int)
 T CSosOperatorBlockEntry::~CSosOperatorBlockEntry()
 T CSosOperatorConvar::CSosOperatorConvar()
 T CSosOperatorConvar::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorConvar::GetSize() const
 T CSosOperatorConvar::OpHelp() const
 T CSosOperatorConvar::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorConvar::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorConvar::SetDefaults(void*) const
 T CSosOperatorConvar::~CSosOperatorConvar()
 T CSosOperatorCurve4::CSosOperatorCurve4()
 T CSosOperatorCurve4::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorCurve4::GetSize() const
 T CSosOperatorCurve4::OpHelp() const
 T CSosOperatorCurve4::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorCurve4::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorCurve4::SetDefaults(void*) const
 T CSosOperatorCurve4::~CSosOperatorCurve4()
 T CSosOperatorDashboard::CSosOperatorDashboard()
 T CSosOperatorDashboard::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorDashboard::GetSize() const
 T CSosOperatorDashboard::OpHelp() const
 T CSosOperatorDashboard::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorDashboard::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorDashboard::SetDefaults(void*) const
 T CSosOperatorDashboard::~CSosOperatorDashboard()
 T CSosOperatorDelta::CSosOperatorDelta()
 T CSosOperatorDelta::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorDelta::GetSize() const
 T CSosOperatorDelta::OpHelp() const
 T CSosOperatorDelta::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorDelta::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorDelta::SetDefaults(void*) const
 T CSosOperatorDelta::~CSosOperatorDelta()
 T CSosOperatorDistantDSP::CSosOperatorDistantDSP()
 T CSosOperatorDistantDSP::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorDistantDSP::GetSize() const
 T CSosOperatorDistantDSP::OpHelp() const
 T CSosOperatorDistantDSP::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorDistantDSP::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorDistantDSP::SetDefaults(void*) const
 T CSosOperatorDistantDSP::~CSosOperatorDistantDSP()
 T CSosOperatorDotaIsInWater::CSosOperatorDotaIsInWater()
 T CSosOperatorDotaIsInWater::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorDotaIsInWater::GetSize() const
 T CSosOperatorDotaIsInWater::OpHelp() const
 T CSosOperatorDotaIsInWater::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorDotaIsInWater::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorDotaIsInWater::SetDefaults(void*) const
 T CSosOperatorDotaIsInWater::~CSosOperatorDotaIsInWater()
 T CSosOperatorEntityInfo::CSosOperatorEntityInfo()
 T CSosOperatorEntityInfo::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorEntityInfo::GetSize() const
 T CSosOperatorEntityInfo::OpHelp() const
 T CSosOperatorEntityInfo::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorEntityInfo::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorEntityInfo::SetDefaults(void*) const
 T CSosOperatorEntityInfo::~CSosOperatorEntityInfo()
 T CSosOperatorEntryTime::CSosOperatorEntryTime()
 T CSosOperatorEntryTime::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorEntryTime::GetSize() const
 T CSosOperatorEntryTime::OpHelp() const
 T CSosOperatorEntryTime::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorEntryTime::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorEntryTime::SetDefaults(void*) const
 T CSosOperatorEntryTime::~CSosOperatorEntryTime()
 T CSosOperatorFacing::CSosOperatorFacing()
 T CSosOperatorFacing::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFacing::GetSize() const
 T CSosOperatorFacing::OpHelp() const
 T CSosOperatorFacing::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFacing::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFacing::SetDefaults(void*) const
 T CSosOperatorFacing::~CSosOperatorFacing()
 T CSosOperatorFalloff::CSosOperatorFalloff()
 T CSosOperatorFalloff::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFalloff::GetSize() const
 T CSosOperatorFalloff::OpHelp() const
 T CSosOperatorFalloff::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFalloff::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFalloff::SetDefaults(void*) const
 T CSosOperatorFalloff::~CSosOperatorFalloff()
 T CSosOperatorFloat::CSosOperatorFloat()
 T CSosOperatorFloat::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFloat::GetSize() const
 T CSosOperatorFloat::OpHelp() const
 T CSosOperatorFloat::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFloat::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFloat::SetDefaults(void*) const
 T CSosOperatorFloat::~CSosOperatorFloat()
 T CSosOperatorFloatAccumulate12::CSosOperatorFloatAccumulate12()
 T CSosOperatorFloatAccumulate12::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFloatAccumulate12::GetSize() const
 T CSosOperatorFloatAccumulate12::OpHelp() const
 T CSosOperatorFloatAccumulate12::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFloatAccumulate12::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFloatAccumulate12::SetDefaults(void*) const
 T CSosOperatorFloatAccumulate12::~CSosOperatorFloatAccumulate12()
 T CSosOperatorFloatFilter::CSosOperatorFloatFilter()
 T CSosOperatorFloatFilter::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFloatFilter::GetSize() const
 T CSosOperatorFloatFilter::OpHelp() const
 T CSosOperatorFloatFilter::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFloatFilter::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFloatFilter::SetDefaults(void*) const
 T CSosOperatorFloatFilter::~CSosOperatorFloatFilter()
 T CSosOperatorFunc1::CSosOperatorFunc1()
 T CSosOperatorFunc1::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorFunc1::GetSize() const
 T CSosOperatorFunc1::OpHelp() const
 T CSosOperatorFunc1::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorFunc1::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorFunc1::SetDefaults(void*) const
 T CSosOperatorFunc1::~CSosOperatorFunc1()
 T CSosOperatorGetOpvarFloat::CSosOperatorGetOpvarFloat()
 T CSosOperatorGetOpvarFloat::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorGetOpvarFloat::GetSize() const
 T CSosOperatorGetOpvarFloat::OpHelp() const
 T CSosOperatorGetOpvarFloat::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorGetOpvarFloat::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorGetOpvarFloat::SetDefaults(void*) const
 T CSosOperatorGetOpvarFloat::~CSosOperatorGetOpvarFloat()
 T CSosOperatorGetTrackSyncPoint::CSosOperatorGetTrackSyncPoint()
 T CSosOperatorGetTrackSyncPoint::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorGetTrackSyncPoint::GetSize() const
 T CSosOperatorGetTrackSyncPoint::OpHelp() const
 T CSosOperatorGetTrackSyncPoint::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorGetTrackSyncPoint::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorGetTrackSyncPoint::SetDefaults(void*) const
 T CSosOperatorGetTrackSyncPoint::~CSosOperatorGetTrackSyncPoint()
 T CSosOperatorIncrementOpvarFloat::CSosOperatorIncrementOpvarFloat()
 T CSosOperatorIncrementOpvarFloat::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorIncrementOpvarFloat::GetSize() const
 T CSosOperatorIncrementOpvarFloat::OpHelp() const
 T CSosOperatorIncrementOpvarFloat::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorIncrementOpvarFloat::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorIncrementOpvarFloat::SetDefaults(void*) const
 T CSosOperatorIncrementOpvarFloat::~CSosOperatorIncrementOpvarFloat()
 T CSosOperatorIterateAndMergeSpeakers::CSosOperatorIterateAndMergeSpeakers()
 T CSosOperatorIterateAndMergeSpeakers::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorIterateAndMergeSpeakers::GetSize() const
 T CSosOperatorIterateAndMergeSpeakers::OpHelp() const
 T CSosOperatorIterateAndMergeSpeakers::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorIterateAndMergeSpeakers::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorIterateAndMergeSpeakers::SetDefaults(void*) const
 T CSosOperatorIterateAndMergeSpeakers::~CSosOperatorIterateAndMergeSpeakers()
 T CSosOperatorLogicSwitch::CSosOperatorLogicSwitch()
 T CSosOperatorLogicSwitch::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorLogicSwitch::GetSize() const
 T CSosOperatorLogicSwitch::OpHelp() const
 T CSosOperatorLogicSwitch::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorLogicSwitch::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorLogicSwitch::SetDefaults(void*) const
 T CSosOperatorLogicSwitch::~CSosOperatorLogicSwitch()
 T CSosOperatorMapName::CSosOperatorMapName()
 T CSosOperatorMapName::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorMapName::GetSize() const
 T CSosOperatorMapName::OpHelp() const
 T CSosOperatorMapName::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorMapName::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorMapName::SetDefaults(void*) const
 T CSosOperatorMapName::~CSosOperatorMapName()
 T CSosOperatorMixGroup::CSosOperatorMixGroup()
 T CSosOperatorMixGroup::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorMixGroup::GetSize() const
 T CSosOperatorMixGroup::OpHelp() const
 T CSosOperatorMixGroup::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorMixGroup::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorMixGroup::SetDefaults(void*) const
 T CSosOperatorMixGroup::~CSosOperatorMixGroup()
 T CSosOperatorMixLayer::CSosOperatorMixLayer()
 T CSosOperatorMixLayer::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorMixLayer::GetSize() const
 T CSosOperatorMixLayer::OpHelp() const
 T CSosOperatorMixLayer::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorMixLayer::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorMixLayer::SetDefaults(void*) const
 T CSosOperatorMixLayer::~CSosOperatorMixLayer()
 T CSosOperatorOcclusion::CSosOperatorOcclusion()
 T CSosOperatorOcclusion::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorOcclusion::GetSize() const
 T CSosOperatorOcclusion::OpHelp() const
 T CSosOperatorOcclusion::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorOcclusion::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorOcclusion::SetDefaults(void*) const
 T CSosOperatorOcclusion::~CSosOperatorOcclusion()
 T CSosOperatorOutput::CSosOperatorOutput()
 T CSosOperatorOutput::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorOutput::GetSize() const
 T CSosOperatorOutput::OpHelp() const
 T CSosOperatorOutput::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorOutput::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorOutput::SetDefaults(void*) const
 T CSosOperatorOutput::~CSosOperatorOutput()
 T CSosOperatorPlatform::CSosOperatorPlatform()
 T CSosOperatorPlatform::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorPlatform::GetSize() const
 T CSosOperatorPlatform::OpHelp() const
 T CSosOperatorPlatform::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorPlatform::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorPlatform::SetDefaults(void*) const
 T CSosOperatorPlatform::~CSosOperatorPlatform()
 T CSosOperatorPlayOnTrack::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorPlayOnTrack::GetSize() const
 T CSosOperatorPlayOnTrack::OpHelp() const
 T CSosOperatorPlayOnTrack::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorPlayOnTrack::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorPlayOnTrack::SetDefaults(void*) const
 T CSosOperatorPlayOnTrack::~CSosOperatorPlayOnTrack()
 T CSosOperatorPosVec8::CSosOperatorPosVec8()
 T CSosOperatorPosVec8::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorPosVec8::GetSize() const
 T CSosOperatorPosVec8::OpHelp() const
 T CSosOperatorPosVec8::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorPosVec8::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorPosVec8::SetDefaults(void*) const
 T CSosOperatorPosVec8::~CSosOperatorPosVec8()
 T CSosOperatorPrintFloat::CSosOperatorPrintFloat()
 T CSosOperatorPrintFloat::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorPrintFloat::GetSize() const
 T CSosOperatorPrintFloat::OpHelp() const
 T CSosOperatorPrintFloat::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorPrintFloat::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorPrintFloat::SetDefaults(void*) const
 T CSosOperatorPrintFloat::~CSosOperatorPrintFloat()
 T CSosOperatorQueueToTrack::CSosOperatorQueueToTrack()
 T CSosOperatorQueueToTrack::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorQueueToTrack::GetSize() const
 T CSosOperatorQueueToTrack::OpHelp() const
 T CSosOperatorQueueToTrack::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorQueueToTrack::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorQueueToTrack::SetDefaults(void*) const
 T CSosOperatorQueueToTrack::~CSosOperatorQueueToTrack()
 T CSosOperatorRandom::CSosOperatorRandom()
 T CSosOperatorRandom::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorRandom::GetSize() const
 T CSosOperatorRandom::OpHelp() const
 T CSosOperatorRandom::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorRandom::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorRandom::SetDefaults(void*) const
 T CSosOperatorRandom::~CSosOperatorRandom()
 T CSosOperatorRemapValue::CSosOperatorRemapValue()
 T CSosOperatorRemapValue::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorRemapValue::GetSize() const
 T CSosOperatorRemapValue::OpHelp() const
 T CSosOperatorRemapValue::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorRemapValue::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorRemapValue::SetDefaults(void*) const
 T CSosOperatorRemapValue::~CSosOperatorRemapValue()
 T CSosOperatorSetConvar::CSosOperatorSetConvar()
 T CSosOperatorSetConvar::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSetConvar::GetSize() const
 T CSosOperatorSetConvar::OpHelp() const
 T CSosOperatorSetConvar::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSetConvar::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSetConvar::SetDefaults(void*) const
 T CSosOperatorSetConvar::~CSosOperatorSetConvar()
 T CSosOperatorSetOpvarFloat::CSosOperatorSetOpvarFloat()
 T CSosOperatorSetOpvarFloat::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSetOpvarFloat::GetSize() const
 T CSosOperatorSetOpvarFloat::OpHelp() const
 T CSosOperatorSetOpvarFloat::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSetOpvarFloat::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSetOpvarFloat::SetDefaults(void*) const
 T CSosOperatorSetOpvarFloat::~CSosOperatorSetOpvarFloat()
 T CSosOperatorSourceDistance::CSosOperatorSourceDistance()
 T CSosOperatorSourceDistance::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSourceDistance::GetSize() const
 T CSosOperatorSourceDistance::OpHelp() const
 T CSosOperatorSourceDistance::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSourceDistance::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSourceDistance::SetDefaults(void*) const
 T CSosOperatorSourceDistance::~CSosOperatorSourceDistance()
 T CSosOperatorSourceInfo::CSosOperatorSourceInfo()
 T CSosOperatorSourceInfo::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSourceInfo::GetSize() const
 T CSosOperatorSourceInfo::OpHelp() const
 T CSosOperatorSourceInfo::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSourceInfo::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSourceInfo::SetDefaults(void*) const
 T CSosOperatorSourceInfo::~CSosOperatorSourceInfo()
 T CSosOperatorSpatializeSpeakers::CSosOperatorSpatializeSpeakers()
 T CSosOperatorSpatializeSpeakers::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSpatializeSpeakers::GetSize() const
 T CSosOperatorSpatializeSpeakers::OpHelp() const
 T CSosOperatorSpatializeSpeakers::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSpatializeSpeakers::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSpatializeSpeakers::SetDefaults(void*) const
 T CSosOperatorSpatializeSpeakers::~CSosOperatorSpatializeSpeakers()
 T CSosOperatorSpeakers::CSosOperatorSpeakers()
 T CSosOperatorSpeakers::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSpeakers::GetSize() const
 T CSosOperatorSpeakers::OpHelp() const
 T CSosOperatorSpeakers::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSpeakers::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSpeakers::SetDefaults(void*) const
 T CSosOperatorSpeakers::~CSosOperatorSpeakers()
 T CSosOperatorStack::AddToTail(CSosOperator*, char const*)
 T CSosOperatorStack::Copy(CSosOperatorStack*, unsigned long)
 T CSosOperatorStack::Execute(channel_t*, CScratchPad*)
 T CSosOperatorStack::ExecuteIterator(channel_t*, CScratchPad*, void const*, char const*, int*)
 T CSosOperatorStack::FindOperator(char const*, void**)
 T CSosOperatorStack::FindOperatorViaOffset(unsigned long)
 T CSosOperatorStack::GetOperatorOutputOffset(char const*, char const*)
 T CSosOperatorStack::GetSyncPointsKV(KeyValues*, char const*)
 T CSosOperatorStack::GetSyncPointsKV(char const*)
 T CSosOperatorStack::GetTrackData(track_data_t&) const
 T CSosOperatorStack::ParseKV(KeyValues*)
 T CSosOperatorStack::Print(int)
 T CSosOperatorStack::SetScriptHash(unsigned int)
 T CSosOperatorStack::SetStopType(SOSStopType_t)
 T CSosOperatorStack::Shutdown()
 T CSosOperatorStack::~CSosOperatorStack()
 T CSosOperatorStackCollection::Clear()
 T CSosOperatorStackCollection::ParseKV(CSosOperatorStack::SosStackType_t, KeyValues*)
 T CSosOperatorStackCollection::Print()
 T CSosOperatorStackCollection::~CSosOperatorStackCollection()
 T CSosOperatorStackList::Execute(CSosOperatorStack::SosStackType_t, channel_t*, CScratchPad*)
 T CSosOperatorStackList::GetStack(CSosOperatorStack::SosStackType_t)
 T CSosOperatorStackList::HasStack(CSosOperatorStack::SosStackType_t)
 T CSosOperatorStackList::ParseKV(stack_data_t&)
 T CSosOperatorStackList::Print()
 T CSosOperatorStackList::SetStopTime(float)
 T CSosOperatorStackList::SetStopType(SOSStopType_t)
 T CSosOperatorStackList::StopStacks(SOSStopType_t)
 T CSosOperatorStackList::~CSosOperatorStackList()
 T CSosOperatorStartEntry::CSosOperatorStartEntry()
 T CSosOperatorStartEntry::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorStartEntry::GetSize() const
 T CSosOperatorStartEntry::OpHelp() const
 T CSosOperatorStartEntry::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorStartEntry::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorStartEntry::SetDefaults(void*) const
 T CSosOperatorStartEntry::~CSosOperatorStartEntry()
 T CSosOperatorStartEntryDOTA::CSosOperatorStartEntryDOTA()
 T CSosOperatorStartEntryDOTA::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorStartEntryDOTA::GetSize() const
 T CSosOperatorStartEntryDOTA::OpHelp() const
 T CSosOperatorStartEntryDOTA::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorStartEntryDOTA::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorStartEntryDOTA::SetDefaults(void*) const
 T CSosOperatorStartEntryDOTA::~CSosOperatorStartEntryDOTA()
 T CSosOperatorStopEntry::CSosOperatorStopEntry()
 T CSosOperatorStopEntry::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorStopEntry::GetSize() const
 T CSosOperatorStopEntry::OpHelp() const
 T CSosOperatorStopEntry::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorStopEntry::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorStopEntry::SetDefaults(void*) const
 T CSosOperatorStopEntry::~CSosOperatorStopEntry()
 T CSosOperatorStopTrack::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorStopTrack::GetSize() const
 T CSosOperatorStopTrack::OpHelp() const
 T CSosOperatorStopTrack::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorStopTrack::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorStopTrack::SetDefaults(void*) const
 T CSosOperatorStopTrack::~CSosOperatorStopTrack()
 T CSosOperatorSysTime::CSosOperatorSysTime()
 T CSosOperatorSysTime::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorSysTime::GetSize() const
 T CSosOperatorSysTime::OpHelp() const
 T CSosOperatorSysTime::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorSysTime::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorSysTime::SetDefaults(void*) const
 T CSosOperatorSysTime::~CSosOperatorSysTime()
 T CSosOperatorSystem::CSosOperatorSystem()
 T CSosOperatorSystem::ClearSubSystems()
 T CSosOperatorSystem::DEBUG_ShowOpvarList()
 T CSosOperatorSystem::DEBUG_ShowTrackList()
 T CSosOperatorSystem::GetChannelOnTrack(char const*)
 T CSosOperatorSystem::GetOpVarFloat(char const*, float&)
 T CSosOperatorSystem::GetSoundOperatorSystem()
 T CSosOperatorSystem::Init()
 T CSosOperatorSystem::QueueStartEntry(StartSoundParams_t&, float, bool)
 T CSosOperatorSystem::QueueStopChannel(int, float)
 T CSosOperatorSystem::RemoveChannelFromTrack(char const*, int)
 T CSosOperatorSystem::RemoveChannelFromTracks(int)
 T CSosOperatorSystem::SetChannelOnTrack(char const*, channel_t*)
 T CSosOperatorSystem::SetOpVarFloat(char const*, float)
 T CSosOperatorSystem::Shutdown()
 T CSosOperatorSystem::StartQueuedEntries()
 T CSosOperatorSystem::StopChannelOnTrack(char const*, bool, float)
 T CSosOperatorSystem::StopQueuedChannels()
 T CSosOperatorSystem::Update()
 T CSosOperatorSystem::~CSosOperatorSystem()
 T CSosOperatorTimer::CSosOperatorTimer()
 T CSosOperatorTimer::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorTimer::GetSize() const
 T CSosOperatorTimer::OpHelp() const
 T CSosOperatorTimer::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorTimer::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorTimer::SetDefaults(void*) const
 T CSosOperatorTimer::~CSosOperatorTimer()
 T CSosOperatorTimerRamp::CSosOperatorTimerRamp()
 T CSosOperatorTimerRamp::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorTimerRamp::GetSize() const
 T CSosOperatorTimerRamp::OpHelp() const
 T CSosOperatorTimerRamp::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorTimerRamp::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorTimerRamp::SetDefaults(void*) const
 T CSosOperatorTimerRamp::~CSosOperatorTimerRamp()
 T CSosOperatorVec3::CSosOperatorVec3()
 T CSosOperatorVec3::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorVec3::GetSize() const
 T CSosOperatorVec3::OpHelp() const
 T CSosOperatorVec3::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorVec3::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorVec3::SetDefaults(void*) const
 T CSosOperatorVec3::~CSosOperatorVec3()
 T CSosOperatorViewInfo::CSosOperatorViewInfo()
 T CSosOperatorViewInfo::Execute(void*, channel_t*, CScratchPad*, CSosOperatorStack*, int) const
 T CSosOperatorViewInfo::GetSize() const
 T CSosOperatorViewInfo::OpHelp() const
 T CSosOperatorViewInfo::ParseKV(CSosOperatorStack*, void*, KeyValues*) const
 T CSosOperatorViewInfo::Print(void*, CSosOperatorStack*, int, int) const
 T CSosOperatorViewInfo::SetDefaults(void*) const
 T CSosOperatorViewInfo::~CSosOperatorViewInfo()
 T CSpatialPartition::CSpatialPartition()
 T CSpatialPartition::CreateHandle(IHandleEntity*)
 T CSpatialPartition::CreateHandle(IHandleEntity*, int, Vector const&, Vector const&)
 T CSpatialPartition::DestroyHandle(unsigned short)
 T CSpatialPartition::DrawDebugOverlays()
 T CSpatialPartition::ElementMoved(unsigned short, Vector const&, Vector const&)
 T CSpatialPartition::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)
 T CSpatialPartition::EnumerateElementsAtPoint(int, Vector const&, bool, IPartitionEnumerator*)
 T CSpatialPartition::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)
 T CSpatialPartition::EnumerateElementsInSphere(int, Vector const&, float, bool, IPartitionEnumerator*)
 T CSpatialPartition::GetSuppressedLists()
 T CSpatialPartition::HideElement(unsigned short)
 T CSpatialPartition::Init(Vector const&, Vector const&)
 T CSpatialPartition::Insert(int, unsigned short)
 T CSpatialPartition::InsertIntoTree(unsigned short, Vector const&, Vector const&)
 T CSpatialPartition::InstallQueryCallback(IPartitionQueryCallback*)
 T CSpatialPartition::Remove(int, unsigned short)
 T CSpatialPartition::Remove(unsigned short)
 T CSpatialPartition::RemoveAndInsert(int, int, unsigned short)
 T CSpatialPartition::RemoveFromTree(unsigned short)
 T CSpatialPartition::RemoveQueryCallback(IPartitionQueryCallback*)
 T CSpatialPartition::RenderAllObjectsInTree(float)
 T CSpatialPartition::RenderLeafsForBoxEnd()
 T CSpatialPartition::RenderLeafsForBoxStart(float)
 T CSpatialPartition::RenderLeafsForHullTraceEnd()
 T CSpatialPartition::RenderLeafsForHullTraceStart(float)
 T CSpatialPartition::RenderLeafsForRayTraceEnd()
 T CSpatialPartition::RenderLeafsForRayTraceStart(float)
 T CSpatialPartition::RenderLeafsForSphereEnd()
 T CSpatialPartition::RenderLeafsForSphereStart(float)
 T CSpatialPartition::RenderObjectsAlongRay(Ray_t const&, float)
 T CSpatialPartition::RenderObjectsInBox(Vector const&, Vector const&, float)
 T CSpatialPartition::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
 T CSpatialPartition::RenderObjectsInSphere(Vector const&, float, float)
 T CSpatialPartition::ReportStats(char const*)
 T CSpatialPartition::Shutdown()
 T CSpatialPartition::SuppressLists(int, bool)
 T CSpatialPartition::UnhideElement(unsigned short, int)
 T CSpatialPartition::~CSpatialPartition()
 T CSplitScreen::AddBaseUser(int, int)
 T CSplitScreen::AddSplitScreenUser(int, int)
 T CSplitScreen::FirstValidSplitScreenSlot()
 T CSplitScreen::GetActiveSplitScreenPlayerSlot()
 T CSplitScreen::GetNumSplitScreenPlayers()
 T CSplitScreen::GetSplitScreenPlayerEntity(int)
 T CSplitScreen::GetSplitScreenPlayerNetChan(int)
 T CSplitScreen::Init()
 T CSplitScreen::IsDisconnecting(int)
 T CSplitScreen::IsLocalPlayerResolvable()
 T CSplitScreen::IsValidSplitScreenSlot(int)
 T CSplitScreen::NextValidSplitScreenSlot(int)
 T CSplitScreen::RemoveSplitScreenUser(int, int)
 T CSplitScreen::SetActiveSplitScreenPlayerSlot(int)
 T CSplitScreen::SetDisconnecting(int, bool)
 T CSplitScreen::SetLocalPlayerIsResolvable(char const*, int, bool)
 T CSplitScreen::Shutdown()
 T CSplitString::CSplitString(char const*, char const*)
 T CSplitString::Construct(char const*, char const**, int)
 T CSplitString::~CSplitString()
 T CStaticPanel::~CStaticPanel()
 T CStaticProp::CollisionToWorldTransform() const
 T CStaticProp::CreateModelInstance()
 T CStaticProp::CreateVPhysics(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
 T CStaticProp::DisplayStaticPropInfo(int)
 T CStaticProp::DoAnimationEvents()
 T CStaticProp::DrawModel(int, RenderableInstance_t const&)
 T CStaticProp::DrawModelSlow(int, RenderableInstance_t const&)
 T CStaticProp::FirstShadowChild()
 T CStaticProp::GetAttachment(int, Vector&, QAngle&)
 T CStaticProp::GetAttachment(int, matrix3x4_t&)
 T CStaticProp::GetBaseEntity()
 T CStaticProp::GetBody()
 T CStaticProp::GetClientAlphaProperty()
 T CStaticProp::GetClientModelRenderable()
 T CStaticProp::GetClientNetworkable()
 T CStaticProp::GetClientRenderable()
 T CStaticProp::GetClientThinkable()
 T CStaticProp::GetCollideable()
 T CStaticProp::GetCollisionAngles() const
 T CStaticProp::GetCollisionGroup() const
 T CStaticProp::GetCollisionModel()
 T CStaticProp::GetCollisionModelIndex()
 T CStaticProp::GetCollisionOrigin() const
 T CStaticProp::GetColorModulation(float*)
 T CStaticProp::GetEntityHandle()
 T CStaticProp::GetIClientEntity()
 T CStaticProp::GetIClientUnknown()
 T CStaticProp::GetModel() const
 T CStaticProp::GetModelInstance()
 T CStaticProp::GetPVSNotifyInterface()
 T CStaticProp::GetRefEHandle() const
 T CStaticProp::GetRenderAngles()
 T CStaticProp::GetRenderBounds(Vector&, Vector&)
 T CStaticProp::GetRenderBoundsWorldspace(Vector&, Vector&)
 T CStaticProp::GetRenderClipPlane()
 T CStaticProp::GetRenderData(void*, ModelDataCategory_t)
 T CStaticProp::GetRenderFlags()
 T CStaticProp::GetRenderOrigin()
 T CStaticProp::GetRootParentToWorldTransform() const
 T CStaticProp::GetShadowCastDirection(Vector*, ShadowType_t) const
 T CStaticProp::GetShadowCastDistance(float*, ShadowType_t) const
 T CStaticProp::GetShadowDrawMaterial()
 T CStaticProp::GetShadowHandle() const
 T CStaticProp::GetShadowParent()
 T CStaticProp::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T CStaticProp::GetSkin()
 T CStaticProp::GetSolid() const
 T CStaticProp::GetSolidFlags() const
 T CStaticProp::Init(int, StaticPropLump_t&, model_t*)
 T CStaticProp::InsertPropIntoKDTree()
 T CStaticProp::IsShadowDirty()
 T CStaticProp::LODTest()
 T CStaticProp::LookupAttachment(char const*)
 T CStaticProp::MarkShadowDirty(bool)
 T CStaticProp::NextShadowPeer()
 T CStaticProp::OBBMaxs() const
 T CStaticProp::OBBMins() const
 T CStaticProp::OnThreadedDrawSetup()
 T CStaticProp::OverrideAlphaModulation(unsigned char)
 T CStaticProp::OverrideShadowAlphaModulation(unsigned char)
 T CStaticProp::RecordToolMessage()
 T CStaticProp::RenderHandle()
 T CStaticProp::RenderableToWorldTransform()
 T CStaticProp::SetRefEHandle(CBaseHandle const&)
 T CStaticProp::SetupBones(matrix3x4a_t*, int, int, float)
 T CStaticProp::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T CStaticProp::ShadowCastType()
 T CStaticProp::ShouldCacheRenderInfo()
 T CStaticProp::ShouldDraw()
 T CStaticProp::ShouldDrawForSplitScreenUser(int)
 T CStaticProp::ShouldReceiveProjectedTextures(int)
 T CStaticProp::ShouldTouchTrigger(int) const
 T CStaticProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CStaticProp::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CStaticProp::UsesFlexDelayedWeights()
 T CStaticProp::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T CStaticProp::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T CStaticProp::~CStaticProp()
 T CStaticPropMgr::AddDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&)
 T CStaticPropMgr::AddShadowToStaticProp(unsigned short, IClientRenderable*)
 T CStaticPropMgr::ConfigureSystemLevel(int, int)
 T CStaticPropMgr::CreateVPhysicsRepresentations(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
 T CStaticPropMgr::DrawStaticProps(IClientRenderable**, RenderableInstance_t const*, int, bool, bool)
 T CStaticPropMgr::DrawStaticProps_Fast(IClientRenderable**, RenderableInstance_t const*, int, bool)
 T CStaticPropMgr::DrawStaticProps_FastPipeline(IClientRenderable**, RenderableInstance_t const*, int, bool)
 T CStaticPropMgr::DrawStaticProps_Slow(IClientRenderable**, RenderableInstance_t const*, int, bool, bool)
 T CStaticPropMgr::GetAllStaticProps(CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T CStaticPropMgr::GetAllStaticPropsInAABB(Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T CStaticPropMgr::GetAllStaticPropsInOBB(Vector const&, Vector const&, Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T CStaticPropMgr::GetLightCacheHandleForStaticProp(IHandleEntity*)
 T CStaticPropMgr::GetLightingOrigins(Vector*, int, int, IClientRenderable**, int)
 T CStaticPropMgr::GetStaticProp(IHandleEntity*)
 T CStaticPropMgr::GetStaticPropByIndex(int)
 T CStaticPropMgr::GetStaticPropIndex(IHandleEntity*) const
 T CStaticPropMgr::GetStaticPropMaterialColorAndLighting(CGameTrace*, int, Vector&, Vector&)
 T CStaticPropMgr::Init()
 T CStaticPropMgr::IsPropInPVS(IHandleEntity*, unsigned char const*) const
 T CStaticPropMgr::IsStaticProp(CBaseHandle) const
 T CStaticPropMgr::IsStaticProp(IHandleEntity*) const
 T CStaticPropMgr::LevelInit()
 T CStaticPropMgr::LevelInitClient()
 T CStaticPropMgr::LevelShutdown()
 T CStaticPropMgr::LevelShutdownClient()
 T CStaticPropMgr::PrecacheLighting()
 T CStaticPropMgr::PropHasBakedLightingDisabled(IHandleEntity*) const
 T CStaticPropMgr::RecomputeStaticLighting()
 T CStaticPropMgr::RemoveAllShadowsFromStaticProp(IClientRenderable*)
 T CStaticPropMgr::RestoreStaticProps()
 T CStaticPropMgr::Shutdown()
 T CStaticPropMgr::TraceRayAgainstStaticProp(Ray_t const&, int, CGameTrace&)
 T CStaticPropMgr::UnserializeLeafList(CUtlBuffer&)
 T CStaticPropMgr::UnserializeModelDict(CUtlBuffer&)
 T CStaticPropMgr::UnserializeModels(CUtlBuffer&)
 T CStaticPropMgr::UnserializeStaticProps()
 T CStaticPropMgr::UpdatePropVisibility(int, int)
 T CStaticPropMgr::~CStaticPropMgr()
 T CSteam3Client::Activate()
 T CSteam3Client::CSteam3Client()
 T CSteam3Client::CancelAuthTicket()
 T CSteam3Client::GetAuthSessionTicket(void*, int, unsigned int*, unsigned long long, bool)
 T CSteam3Client::OnClientGameServerDeny(ClientGameServerDeny_t*)
 T CSteam3Client::OnGameOverlayActivated(GameOverlayActivated_t*)
 T CSteam3Client::OnGameServerChangeRequested(GameServerChangeRequested_t*)
 T CSteam3Client::OnLowBattery(LowBatteryPower_t*)
 T CSteam3Client::OnPersonaUpdated(PersonaStateChange_t*)
 T CSteam3Client::OnSteamSocketStatus(SocketStatusCallback_t*)
 T CSteam3Client::RunFrame()
 T CSteam3Client::Shutdown()
 T CSteam3Client::~CSteam3Client()
 T CSteam3Server::Activate()
 T CSteam3Server::CSteam3Server()
 T CSteam3Server::CheckForDuplicateSteamID(CBaseClient const*)
 T CSteam3Server::ClientFindFromSteamID(CSteamID&)
 T CSteam3Server::CompareUserID(USERID_s const&, USERID_s const&)
 T CSteam3Server::GetGSSteamID() const
 T CSteam3Server::IsMasterServerUpdaterSharingGameSocket()
 T CSteam3Server::NotifyClientConnect(CBaseClient*, unsigned int, void const*, unsigned int)
 T CSteam3Server::NotifyClientDisconnect(CBaseClient*)
 T CSteam3Server::NotifyLocalClientConnect(CBaseClient*)
 T CSteam3Server::NotifyOfLevelChange()
 T CSteam3Server::NotifyOfServerNameChange()
 T CSteam3Server::OnGSPolicyResponse(GSPolicyResponse_t*)
 T CSteam3Server::OnLoggedOff(SteamServersDisconnected_t*)
 T CSteam3Server::OnLogonFailure(SteamServerConnectFailure_t*)
 T CSteam3Server::OnLogonSuccess(SteamServersConnected_t*)
 T CSteam3Server::OnValidateAuthTicketResponse(ValidateAuthTicketResponse_t*)
 T CSteam3Server::OnValidateAuthTicketResponseHelper(CBaseClient*, EAuthSessionResponse)
 T CSteam3Server::RunFrame()
 T CSteam3Server::SendUpdatedServerDetails()
 T CSteam3Server::Shutdown()
 T CSteam3Server::~CSteam3Server()
 T CSteamAPIContext::Init()
 T CSteamID::CSteamID(char const*, EUniverse)
 T CSteamID::Render() const
 T CSteamID::SetFromString(char const*, EUniverse)
 T CSteamP2PAllowConnection::SteamIDAllowedToP2PConnect(CSteamID)
 T CSteamP2PAllowConnection::~CSteamP2PAllowConnection()
 T CStringProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CStringProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStudioConvexInfo::GetContents(int)
 T CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
 T CTSList<CWorldRenderList*>::~CTSList()
 T CTSPool<CVarBitVec>::Purge()
 T CTSPool<CVarBitVec>::~CTSPool()
 T CTSPool<TraceInfo_t>::~CTSPool()
 T CTSQueue<CFunctor*, false>::CTSQueue()
 T CTSQueue<CFunctor*, false>::Pop()
 T CTSQueue<CFunctor*, false>::Purge()
 T CTSQueue<CFunctor*, false>::Push(CTSQueue<CFunctor*, false>::Node_t*)
 T CTSQueue<CFunctor*, false>::~CTSQueue()
 T CTSQueue<StartSoundParams_t, false>::CTSQueue()
 T CTSQueue<StartSoundParams_t, false>::Pop()
 T CTSQueue<StartSoundParams_t, false>::Purge()
 T CTSQueue<StartSoundParams_t, false>::Push(CTSQueue<StartSoundParams_t, false>::Node_t*)
 T CTSQueue<StartSoundParams_t, false>::PushItem(StartSoundParams_t const&)
 T CTSQueue<StartSoundParams_t, false>::~CTSQueue()
 T CTestScriptMgr::CTestScriptMgr()
 T CTestScriptMgr::CheckPoint(char const*)
 T CTestScriptMgr::LoopCount(char const*, int)
 T CTestScriptMgr::LoopForNumSeconds(char const*, double)
 T CTestScriptMgr::RunCommands()
 T CTestScriptMgr::SetWaitCheckPoint(char const*, bool)
 T CTestScriptMgr::StartLoop(char const*)
 T CTestScriptMgr::StartTestScript(char const*)
 T CTestScriptMgr::~CTestScriptMgr()
 T CTextureBudgetPanel::CTextureBudgetPanel(vgui::Panel*, char const*)
 T CTextureBudgetPanel::DumpGlobalTextureStats(CCommandContext const&, CCommand const&)
 T CTextureBudgetPanel::OnTick()
 T CTextureBudgetPanel::Paint(IVGuiPaintSurface*)
 T CTextureBudgetPanel::PerformLayout()
 T CTextureBudgetPanel::ResetAll()
 T CTextureBudgetPanel::SendConfigDataToBase()
 T CTextureBudgetPanel::SetHistoryLabelText()
 T CTextureBudgetPanel::SetTimeLabelText()
 T CTextureBudgetPanel::SnapshotTextureHistory()
 T CTextureBudgetPanel::~CTextureBudgetPanel()
 T CTextureIdProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureIdProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CTextureIdProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureListPanel::AddListItem(KeyValues*)
 T CTextureListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CTextureListPanel::ApplySchemeSettings(vgui::IScheme*)
 T CTextureListPanel::CTextureListPanel(vgui::Panel*)
 T CTextureListPanel::Close()
 T CTextureListPanel::GetAnimMap()
 T CTextureListPanel::GetKBMap()
 T CTextureListPanel::GetMessageMap()
 T CTextureListPanel::GetPanelClassName()
 T CTextureListPanel::OnCommand(char const*)
 T CTextureListPanel::OnTextChanged()
 T CTextureListPanel::Paint(IVGuiPaintSurface*)
 T CTextureListPanel::PerformLayout()
 T CTextureListPanel::ShouldDraw()
 T CTextureListPanel::UpdateDisplayedItem(KeyValues*, KeyValues*)
 T CTextureListPanel::UpdateTotalUsageLabel()
 T CTextureListPanel::~CTextureListPanel()
 T CTextureReference::CTextureReference()
 T CTextureReference::Init(ITexture*)
 T CTextureReference::InitProceduralTexture(char const*, char const*, int, int, ImageFormat, int)
 T CTextureReference::Shutdown(bool)
 T CTextureReference::~CTextureReference()
 T CThreadEvent::~CThreadEvent()
 T CThreadMutex::~CThreadMutex()
 T CTier2AppSystem<IDedicatedServerAPI, 0>::Init()
 T CTier2AppSystem<IDedicatedServerAPI, 0>::Reconnect(void* (*)(char const*, int*), char const*)
 T CTier2AppSystem<IDedicatedServerAPI, 0>::Shutdown()
 T CTier2AppSystem<IEngineAPI, 0>::Reconnect(void* (*)(char const*, int*), char const*)
 T CTier2AppSystem<INetSupport, 0>::GetTier()
 T CTier2AppSystem<INetSupport, 0>::Reconnect(void* (*)(char const*, int*), char const*)
 T CTier3AppSystem<IDedicatedServerAPI, 0>::GetTier()
 T CTier3AppSystem<IEngineAPI, 0>::GetTier()
 T CToolAutoCompleteFileList::AutoCompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CToolFrameworkInternal::CanQuit()
 T CToolFrameworkInternal::ClientInit(void* (*)(char const*, int*))
 T CToolFrameworkInternal::ClientLevelInitPostEntityAllTools()
 T CToolFrameworkInternal::ClientLevelInitPreEntityAllTools()
 T CToolFrameworkInternal::ClientLevelShutdownPostEntityAllTools()
 T CToolFrameworkInternal::ClientLevelShutdownPreEntityAllTools()
 T CToolFrameworkInternal::ClientPostRenderAllTools()
 T CToolFrameworkInternal::ClientPreRenderAllTools()
 T CToolFrameworkInternal::ClientShutdown()
 T CToolFrameworkInternal::Connect(void* (*)(char const*, int*))
 T CToolFrameworkInternal::Disconnect()
 T CToolFrameworkInternal::GetModules(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CToolFrameworkInternal::GetSoundSpatialization(int, int, SpatializationInfo_t&)
 T CToolFrameworkInternal::GetToolCount()
 T CToolFrameworkInternal::GetToolName(int)
 T CToolFrameworkInternal::GetToolSystem(int) const
 T CToolFrameworkInternal::GetTopmostTool()
 T CToolFrameworkInternal::HostRunFrameBegin()
 T CToolFrameworkInternal::HostRunFrameEnd()
 T CToolFrameworkInternal::InToolMode()
 T CToolFrameworkInternal::Init()
 T CToolFrameworkInternal::IsGameInputEnabled()
 T CToolFrameworkInternal::IsThirdPersonCamera()
 T CToolFrameworkInternal::IsToolRecording()
 T CToolFrameworkInternal::IsTopmostTool(IToolSystem const*)
 T CToolFrameworkInternal::LoadFilmmaker()
 T CToolFrameworkInternal::LoadToolModule(char const*, bool)
 T CToolFrameworkInternal::LoadToolsFromEngineToolsManifest()
 T CToolFrameworkInternal::LoadToolsFromLibrary(char const*)
 T CToolFrameworkInternal::LookupProxy(char const*)
 T CToolFrameworkInternal::PostInit()
 T CToolFrameworkInternal::PostMessage(KeyValues*)
 T CToolFrameworkInternal::PostToolMessage(unsigned int, KeyValues*)
 T CToolFrameworkInternal::QueryInterface(char const*)
 T CToolFrameworkInternal::RenderFrameBegin()
 T CToolFrameworkInternal::RenderFrameEnd()
 T CToolFrameworkInternal::ServerFrameUpdatePostEntityThinkAllTools()
 T CToolFrameworkInternal::ServerFrameUpdatePreEntityThinkAllTools()
 T CToolFrameworkInternal::ServerInit(void* (*)(char const*, int*))
 T CToolFrameworkInternal::ServerLevelInitPostEntityAllTools()
 T CToolFrameworkInternal::ServerLevelInitPreEntityAllTools()
 T CToolFrameworkInternal::ServerLevelShutdownPostEntityAllTools()
 T CToolFrameworkInternal::ServerLevelShutdownPreEntityAllTools()
 T CToolFrameworkInternal::ServerPreClientUpdateAllTools()
 T CToolFrameworkInternal::ServerPreSetupVisibilityAllTools()
 T CToolFrameworkInternal::ServerShutdown()
 T CToolFrameworkInternal::SetupAudioState(AudioState_t&)
 T CToolFrameworkInternal::SetupEngineView(Vector&, QAngle&, float&)
 T CToolFrameworkInternal::ShouldGamePlaySounds()
 T CToolFrameworkInternal::ShouldGameRenderView()
 T CToolFrameworkInternal::Shutdown()
 T CToolFrameworkInternal::ShutdownModules()
 T CToolFrameworkInternal::ShutdownTools()
 T CToolFrameworkInternal::SwitchToTool(char const*)
 T CToolFrameworkInternal::SwitchToTool(int)
 T CToolFrameworkInternal::Think(bool)
 T CToolFrameworkInternal::UnloadFilmmaker()
 T CToolFrameworkInternal::UnloadTools(char const*, bool)
 T CToolFrameworkInternal::VGui_PostRenderAllTools(int)
 T CToolFrameworkInternal::VGui_PostSimulateAllTools()
 T CToolFrameworkInternal::VGui_PreRenderAllTools(int)
 T CToolFrameworkInternal::VGui_PreSimulateAllTools()
 T CToolFrameworkInternal::~CToolFrameworkInternal()
 T CToolUnloadAutoCompleteFileList::AutoCompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CTouchLinks::CTouchLinks(edict_t*, Vector const*, bool)
 T CTouchLinks::EnumElement(IHandleEntity*)
 T CTouchLinks_ClientSide::CTouchLinks_ClientSide(IClientEntity*, Vector const*, bool)
 T CTouchLinks_ClientSide::EnumElement(IHandleEntity*)
 T CTraceFilter::GetTraceType() const
 T CTraceFilterDAS::GetTraceType() const
 T CTraceFilterDAS::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterHitAll::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterHitAll::~CTraceFilterHitAll()
 T CTraceFilterWorldAndProps::GetTraceType() const
 T CTraceFilterWorldAndProps::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldAndPropsOnly::GetTraceType() const
 T CTraceFilterWorldAndPropsOnly::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldAndStaticEntities::GetTraceType() const
 T CTraceFilterWorldAndStaticEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldOnly::GetTraceType() const
 T CTraceFilterWorldOnly::ShouldHitEntity(IHandleEntity*, int)
 T CTraceListData::CTraceListData()
 T CTraceListData::CanTraceRay(Ray_t const&)
 T CTraceListData::EnumElement(IHandleEntity*)
 T CTraceListData::IsEmpty()
 T CTraceListData::Reset()
 T CTraceListData::~CTraceListData()
 T CTriggerMoved::EnumElement(IHandleEntity*)
 T CTriggerMoved::TriggerMoved(edict_t*)
 T CTriggerMoved_ClientSide::EnumElement(IHandleEntity*)
 T CTriggerMoved_ClientSide::TriggerMoved(IClientEntity*)
 T CUncorrectedImagePanel::CUncorrectedImagePanel(vgui::Panel*, char const*)
 T CUncorrectedImagePanel::GetAnimMap()
 T CUncorrectedImagePanel::GetKBMap()
 T CUncorrectedImagePanel::GetMessageMap()
 T CUncorrectedImagePanel::GetPanelClassName()
 T CUncorrectedImagePanel::OnCursorMoved(int, int)
 T CUncorrectedImagePanel::OnMousePressed(ButtonCode_t)
 T CUncorrectedImagePanel::OnMouseReleased(ButtonCode_t)
 T CUncorrectedImagePanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T CUncorrectedImagePanel::~CUncorrectedImagePanel()
 T CUploadGameStats::GetPseudoUniqueId(char*, unsigned long)
 T CUploadGameStats::InitConnection()
 T CUploadGameStats::IsCyberCafeUser()
 T CUploadGameStats::IsGameStatsLoggingEnabled()
 T CUploadGameStats::IsHDREnabled()
 T CUploadGameStats::UpdateConnection()
 T CUploadGameStats::UploadGameStats(char const*, unsigned int, unsigned int, void const*)
 T CUtlArray<CNetMessageBinder, 14ul>::~CUtlArray()
 T CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 T CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 T CUtlBinaryBlock::Set(void const*, int)
 T CUtlBinaryBlock::SetLength(int)
 T CUtlBuffer::AddNullTermination()
 T CUtlBuffer::AssumeMemory(void*, int, int, int)
 T CUtlBuffer::CUtlBuffer(int, int, int)
 T CUtlBuffer::CUtlBuffer(void const*, int, int)
 T CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 T CUtlBuffer::CheckGet(int)
 T CUtlBuffer::CheckPut(int)
 T CUtlBuffer::EatCPPComment()
 T CUtlBuffer::EatWhiteSpace()
 T CUtlBuffer::EnsureCapacity(int)
 T CUtlBuffer::Get(void*, int)
 T CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 T CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 T CUtlBuffer::GetOverflow(int)
 T CUtlBuffer::GetString(char*, int)
 T CUtlBuffer::GetToken(char const*)
 T CUtlBuffer::GetUpTo(void*, int)
 T CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 T CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
 T CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 T CUtlBuffer::PeekGet(int, int)
 T CUtlBuffer::PeekStringLength()
 T CUtlBuffer::PeekStringMatch(int, char const*, int)
 T CUtlBuffer::PeekWhiteSpace(int)
 T CUtlBuffer::Printf(char const*, ...)
 T CUtlBuffer::Put(void const*, int)
 T CUtlBuffer::PutChar(char)
 T CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
 T CUtlBuffer::PutOverflow(int)
 T CUtlBuffer::PutString(char const*)
 T CUtlBuffer::Scanf(char const*, ...)
 T CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SetBigEndian(bool)
 T CUtlBuffer::SetBufferType(bool, bool)
 T CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 T CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
 T CUtlBuffer::VaPrintf(char const*, char*)
 T CUtlBuffer::VaScanf(char const*, char*)
 T CUtlBuffer::~CUtlBuffer()
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::CUtlCachedFileData(char const*, int, unsigned int (*)(), UtlCachedFileDataType_t, bool, bool, bool, bool)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::CheckDiskInfo(bool, long)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::EnsureCapacity(int)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::FileNameHandleLessFunc(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::Get(char const*)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::GetIndex(char const*)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::Init()
 T CUtlCachedFileData<CAudioSourceCachedInfo>::InitLargeBuffer(void*&, bool&)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::InitSmallBuffer(void*&, int, bool&)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::RebuildItem(char const*)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::RecheckItem(char const*)
 T CUtlCachedFileData<CAudioSourceCachedInfo>::Save()
 T CUtlCachedFileData<CAudioSourceCachedInfo>::SaveManifest()
 T CUtlCachedFileData<CAudioSourceCachedInfo>::Shutdown()
 T CUtlCachedFileData<CAudioSourceCachedInfo>::~CUtlCachedFileData()
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlDict<CMapListItem, int>::Purge()
 T CUtlDict<CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Purge()
 T CUtlDict<CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Purge()
 T CUtlDict<CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::RemoveAll()
 T CUtlDict<CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Purge()
 T CUtlDict<CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::RemoveAll()
 T CUtlDict<CPureServerWhitelist::CCommand*, int>::Purge()
 T CUtlDict<CPureServerWhitelist::CCommand*, int>::PurgeAndDeleteElements()
 T CUtlDict<CSaveRestore::RestoreLookupTable, int>::Purge()
 T CUtlDict<CSentence*, int>::Purge()
 T CUtlDict<CSentence*, int>::PurgeAndDeleteElements()
 T CUtlDict<CSentence*, int>::Remove(char const*)
 T CUtlDict<CSentence*, int>::~CUtlDict()
 T CUtlDict<CSosOperator*, int>::Purge()
 T CUtlDict<CSosOperatorStack*, int>::Purge()
 T CUtlDict<CSosOperatorStack*, int>::RemoveAll()
 T CUtlDict<CUtlString, unsigned short>::Purge()
 T CUtlDict<CUtlString, unsigned short>::~CUtlDict()
 T CUtlDict<channel_t*, int>::Purge()
 T CUtlDict<channel_t*, int>::RemoveAll()
 T CUtlDict<float, int>::Purge()
 T CUtlDict<int, int>::Purge()
 T CUtlDict<int, int>::RemoveAll()
 T CUtlDict<int, int>::~CUtlDict()
 T CUtlDict<int, unsigned short>::RemoveAll()
 T CUtlDict<int, unsigned short>::~CUtlDict()
 T CUtlDict<memhandle_t__*, int>::Purge()
 T CUtlDict<vgui::CLayoutRegion, int>::HasElement(char const*) const
 T CUtlDict<vgui::CLayoutRegion, int>::Purge()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::Purge()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::~CUtlDict()
 T CUtlFixedLinkedList<decal_t*>::~CUtlFixedLinkedList()
 T CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> >::Grow(int)
 T CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> >::Grow(int)
 T CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> >::Grow(int)
 T CUtlFixedMemory<UtlLinkedListElem_t<PackedEntity*, int> >::Grow(int)
 T CUtlFixedMemory<UtlLinkedListElem_t<decal_t*, int> >::Grow(int)
 T CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> >::Grow(int)
 T CUtlHandleTable<vgui::BuildGroup, 20>::AddHandle()
 T CUtlHandleTable<vgui::BuildGroup, 20>::RemoveHandle(unsigned int)
 T CUtlHandleTable<vgui::BuildGroup, 20>::~CUtlHandleTable()
 T CUtlHash<CGameSaveRestoreInfo::CHashElement, CGameSaveRestoreInfo::CHashFuncs, CGameSaveRestoreInfo::CHashFuncs>::CUtlHash(int, int, int, CGameSaveRestoreInfo::CHashFuncs, CGameSaveRestoreInfo::CHashFuncs)
 T CUtlHash<CGameSaveRestoreInfo::CHashElement, CGameSaveRestoreInfo::CHashFuncs, CGameSaveRestoreInfo::CHashFuncs>::~CUtlHash()
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::~CUtlHash()
 T CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::CUtlHash(int, int, int, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs)
 T CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::DoFind(DispCollPlaneIndex_t const&, unsigned int*, int*) const
 T CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::~CUtlHash()
 T CUtlHash<ModelInstanceHashPair_t, bool (*)(ModelInstanceHashPair_t const&, ModelInstanceHashPair_t const&), unsigned int (*)(ModelInstanceHashPair_t const&)>::CUtlHash(int, int, int, bool (*)(ModelInstanceHashPair_t const&, ModelInstanceHashPair_t const&), unsigned int (*)(ModelInstanceHashPair_t const&))
 T CUtlHash<ModelInstanceHashPair_t, bool (*)(ModelInstanceHashPair_t const&, ModelInstanceHashPair_t const&), unsigned int (*)(ModelInstanceHashPair_t const&)>::Insert(ModelInstanceHashPair_t const&)
 T CUtlHash<ModelInstanceHashPair_t, bool (*)(ModelInstanceHashPair_t const&, ModelInstanceHashPair_t const&), unsigned int (*)(ModelInstanceHashPair_t const&)>::~CUtlHash()
 T CUtlHashFast<int, CUtlHashFastNoHash>::~CUtlHashFast()
 T CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::BumpEntry(unsigned int)
 T CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoRealloc(int)
 T CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::BumpEntry(unsigned int)
 T CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::DoRealloc(int)
 T CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::Find(IModelLoadCallback*) const
 T CUtlHashtable<char const*, empty_t, DefaultHashFunctor<char const*>, DefaultEqualFunctor<char const*>, undefined_t>::BumpEntry(unsigned int)
 T CUtlHashtable<char const*, empty_t, DefaultHashFunctor<char const*>, DefaultEqualFunctor<char const*>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<char const*, empty_t, DefaultHashFunctor<char const*>, DefaultEqualFunctor<char const*>, undefined_t>::DoRealloc(int)
 T CUtlHashtable<char const*, empty_t, DefaultHashFunctor<char const*>, DefaultEqualFunctor<char const*>, undefined_t>::~CUtlHashtable()
 T CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::BumpEntry(unsigned int)
 T CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoRealloc(int)
 T CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::Find(model_t*) const
 T CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::RemoveAll()
 T CUtlLinkedList<CAsyncWavDataCache::StreamedEntry_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CAsyncWavDataCache::StreamedEntry_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CBrushBatchRender::brushrender_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBrushBatchRender::brushrender_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBrushBatchRender::brushrender_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBrushBatchRender::brushrender_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CBrushBatchRender::brushrender_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBrushBatchRender::brushrender_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::RemoveAll()
 T CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::Unlink(int)
 T CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::PurgeAndDeleteElements()
 T CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::PurgeAndDeleteElements()
 T CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::Free(unsigned short)
 T CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::Free(unsigned short)
 T CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEventInfo, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CEventInfo, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> > >::RemoveAll()
 T CUtlLinkedList<CEventInfo, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> > >::Unlink(int)
 T CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::AddToTail()
 T CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::Free(int)
 T CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::InsertBefore(int)
 T CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<CShadowMgr::FlashlightInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::FlashlightInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::FlashlightInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::FlashlightInfo_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CShadowMgr::FlashlightInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::FlashlightInfo_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CShadowMgr::ShadowDecal_t, unsigned short, true, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::ShadowDecal_t, unsigned short, true, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<CShadowMgr::ShadowDecal_t, unsigned short, true, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int> >::SetGrowSize(int)
 T CUtlLinkedList<CShadowMgr::ShadowDecal_t, unsigned short, true, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CShadowMgr::ShadowVertexCache_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexCache_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::ShadowVertexCache_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexCache_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CShadowMgr::ShadowVertexLargeList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexLargeList_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::ShadowVertexLargeList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexLargeList_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CShadowMgr::ShadowVertexSmallList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexSmallList_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::ShadowVertexSmallList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexSmallList_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CShadowMgr::Shadow_t, unsigned short, false, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::Shadow_t, unsigned short>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::Shadow_t, unsigned short, false, int, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::Shadow_t, unsigned short>, int> >::LinkBefore(int, int)
 T CUtlLinkedList<CShadowMgr::SortOrderInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::SortOrderInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::SortOrderInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CShadowMgr::SortOrderInfo_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CShadowMgr::SurfaceBounds_t, unsigned short, false, int, CUtlMemoryFixed<UtlLinkedListElem_t<CShadowMgr::SurfaceBounds_t, unsigned short>, 1024ul> >::AllocInternal(bool)
 T CUtlLinkedList<CShadowMgr::SurfaceBounds_t, unsigned short, false, int, CUtlMemoryFixed<UtlLinkedListElem_t<CShadowMgr::SurfaceBounds_t, unsigned short>, 1024ul> >::LinkAfter(int, int)
 T CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::Free(unsigned short)
 T CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CUtlHashFast<int, CUtlHashFastNoHash>::HashFastData_t_<int>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<int, CUtlHashFastNoHash>::HashFastData_t_<int>, int> > >::RemoveAll()
 T CUtlLinkedList<CUtlKeyValuePair<model_t*, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlKeyValuePair<model_t*, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::Free(unsigned short)
 T CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<EntityInfo_t, unsigned short, false, unsigned short, CUtlMemoryStack<UtlLinkedListElem_t<EntityInfo_t, unsigned short>, unsigned short, 65535ul, 1024ul, 0ul> >::AllocInternal(bool)
 T CUtlLinkedList<EntityInfo_t, unsigned short, false, unsigned short, CUtlMemoryStack<UtlLinkedListElem_t<EntityInfo_t, unsigned short>, unsigned short, 65535ul, 1024ul, 0ul> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::AllocInternal(bool)
 T CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::RemoveAll()
 T CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::Unlink(int)
 T CUtlLinkedList<PackedEntity*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<PackedEntity*, int> > >::AllocInternal(bool)
 T CUtlLinkedList<PackedEntity*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<PackedEntity*, int> > >::RemoveAll()
 T CUtlLinkedList<PackedEntity*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<PackedEntity*, int> > >::Unlink(int)
 T CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
 T CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<decal_t*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<decal_t*, int> > >::AllocInternal(bool)
 T CUtlLinkedList<decal_t*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<decal_t*, int> > >::RemoveAll()
 T CUtlLinkedList<decal_t*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<decal_t*, int> > >::Unlink(int)
 T CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<int, int, false, int, CUtlMemory<UtlLinkedListElem_t<int, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::Free(unsigned short)
 T CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlLinkedList<msurface2_t*, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<msurface2_t*, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<msurface2_t*, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<msurface2_t*, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::AllocInternal(bool)
 T CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::RemoveAll()
 T CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::Unlink(int)
 T CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::LinkBefore(unsigned char, unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)
 T CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Find(CNetworkStringDict::CTableItem const&) const
 T CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Insert(CNetworkStringDict::CTableItem const&)
 T CUtlMap<CUtlString, int, unsigned short>::Find(CUtlString const&) const
 T CUtlMap<CUtlString, int, unsigned short>::Insert(CUtlString const&, int const&)
 T CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Find(char const* const&) const
 T CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Insert(char const* const&)
 T CUtlMap<char const*, CUtlString, unsigned short>::Find(char const* const&) const
 T CUtlMap<char const*, CUtlString, unsigned short>::Insert(char const* const&, CUtlString const&)
 T CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::~CUtlMap()
 T CUtlMap<unsigned int, DecalEntry, unsigned short>::~CUtlMap()
 T CUtlMap<unsigned int, SfxDictEntry, unsigned short>::~CUtlMap()
 T CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Find(unsigned short const&) const
 T CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Insert(unsigned short const&)
 T CUtlMemory<AddAngle, int>::Grow(int)
 T CUtlMemory<AppSystemInfo_t, int>::Grow(int)
 T CUtlMemory<BrushSideInfo_t, int>::Grow(int)
 T CUtlMemory<ButtonCode_t, int>::Grow(int)
 T CUtlMemory<CAppSystemGroup::Module_t, int>::Grow(int)
 T CUtlMemory<CAsyncWavDataCache::DeadBufferEntry_t, int>::Grow(int)
 T CUtlMemory<CAudioSourceCachedInfo*, int>::Grow(int)
 T CUtlMemory<CBaseBudgetPanel::BudgetGroupTimeData_t, int>::Grow(int)
 T CUtlMemory<CBaseClient*, int>::Grow(int)
 T CUtlMemory<CBaseDemoAction*, int>::Grow(int)
 T CUtlMemory<CBasePhonemeTag, int>::Grow(int)
 T CUtlMemory<CBaseServer::SplitDisconnect_t, int>::Grow(int)
 T CUtlMemory<CBlackBoxRecord*, int>::Grow(int)
 T CUtlMemory<CBrushBatchRender::surfacelist_t, int>::Grow(int)
 T CUtlMemory<CBudgetGroupInfo, int>::Grow(int)
 T CUtlMemory<CBugUIPanel::includedfile, int>::Grow(int)
 T CUtlMemory<CClientSendProp, int>::Grow(int)
 T CUtlMemory<CColorCorrectionUIChildPanel*, int>::Grow(int)
 T CUtlMemory<CConPanel::CNotifyText, int>::Grow(int)
 T CUtlMemory<CCoreDispInfo*, int>::Grow(int)
 T CUtlMemory<CDTIProp, int>::Grow(int)
 T CUtlMemory<CDemoPlayer::fullpacketinfo_t, int>::Grow(int)
 T CUtlMemory<CDemoPlayer::savegameinfo_t, int>::Grow(int)
 T CUtlMemory<CDispCollTriCache, int>::Grow(int)
 T CUtlMemory<CDispGroup*, int>::Grow(int)
 T CUtlMemory<CDispInfo*, int>::Grow(int)
 T CUtlMemory<CDmxAttribute*, int>::Grow(int)
 T CUtlMemory<CDmxElement*, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::DictInfo_t, int>::Grow(int)
 T CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int>::Grow(int)
 T CUtlMemory<CEdgeList::Edge_t, int>::Grow(int)
 T CUtlMemory<CEdgeList::Surface_t, int>::Grow(int)
 T CUtlMemory<CEmphasisSample, int>::Grow(int)
 T CUtlMemory<CEngineTool::QuitHandler_t, int>::Grow(int)
 T CUtlMemory<CEntityBits, int>::Grow(int)
 T CUtlMemory<CEntityIndex, int>::Grow(int)
 T CUtlMemory<CEventInfo*, int>::Grow(int)
 T CUtlMemory<CFastLocalTransferPropInfo, int>::Grow(int)
 T CUtlMemory<CFrameCacheEntry_s, int>::Grow(int)
 T CUtlMemory<CFrameSnapshot*, int>::Grow(int)
 T CUtlMemory<CGameEventCallback*, int>::Grow(int)
 T CUtlMemory<CGameEventDescriptor*, int>::Grow(int)
 T CUtlMemory<CGameSaveRestoreInfo::CHashElement, int>::Grow(int)
 T CUtlMemory<CGridData, int>::Grow(int)
 T CUtlMemory<CGroupMesh*, int>::Grow(int)
 T CUtlMemory<CHLTVClient::SFullFrameSplitMsg, int>::Grow(int)
 T CUtlMemory<CHTMLSection*, int>::Grow(int)
 T CUtlMemory<CImagePacker, int>::Grow(int)
 T CUtlMemory<CInitTracker::InitFunc*, int>::Grow(int)
 T CUtlMemory<CInstantReplay::SInstantReplayFrame, int>::Grow(int)
 T CUtlMemory<CKeyValueCache::kvcache_t, int>::Grow(int)
 T CUtlMemory<CMaterialsBuckets<msurface2_t*>::MaterialSortInfo_t, int>::Grow(int)
 T CUtlMemory<CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>*, int>::Grow(int)
 T CUtlMemory<CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>*, int>::Grow(int)
 T CUtlMemory<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, int>::Grow(int)
 T CUtlMemory<CNetworkStringTable*, int>::Grow(int)
 T CUtlMemory<CNetworkStringTableItem::itemchange_s, int>::Grow(int)
 T CUtlMemory<COwner*, int>::Grow(int)
 T CUtlMemory<CPhonemeTag*, int>::Grow(int)
 T CUtlMemory<CPhysCollide*, int>::Grow(int)
 T CUtlMemory<CPortalRect, int>::Grow(int)
 T CUtlMemory<CPrimList, int>::Grow(int)
 T CUtlMemory<CProfileHierarchyPanel::PanelEntry_t, int>::Grow(int)
 T CUtlMemory<CRConServer::FailedRCon_t, int>::Grow(int)
 T CUtlMemory<CRender::ViewStack_t, int>::Grow(int)
 T CUtlMemory<CSPSharedMemory*, int>::Grow(int)
 T CUtlMemory<CSPVert, int>::Grow(int)
 T CUtlMemory<CSVCMsg_FullFrameSplit*, int>::Grow(int)
 T CUtlMemory<CSaveRestore::SaveRestoreTranslate, int>::Grow(int)
 T CUtlMemory<CSendNode*, int>::Grow(int)
 T CUtlMemory<CSendProxyRecipients, int>::Grow(int)
 T CUtlMemory<CSendTablePrecalc::CProxyPath, int>::Grow(int)
 T CUtlMemory<CSendTablePrecalc::CProxyPathEntry, int>::Grow(int)
 T CUtlMemory<CSendTablePrecalc::PropOffset_t, int>::Grow(int)
 T CUtlMemory<CShadowMgr::ShadowVertexCache_t, int>::Grow(int)
 T CUtlMemory<CSocketCreator::AcceptedSocket_t, int>::Grow(int)
 T CUtlMemory<CSortedCacheFile, int>::Grow(int)
 T CUtlMemory<CSosOperator*, int>::Grow(int)
 T CUtlMemory<CSosOperator::InputData_t, int>::Grow(int)
 T CUtlMemory<CSosOperator::OutputData_t, int>::Grow(int)
 T CUtlMemory<CStaticProp, int>::Grow(int)
 T CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
 T CUtlMemory<CUtlBinaryBlock, int>::Grow(int)
 T CUtlMemory<CUtlCachedFileData<CAudioSourceCachedInfo>*, int>::Grow(int)
 T CUtlMemory<CUtlDelegate<void (CVProfile*)>, int>::Grow(int)
 T CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int>::Grow(int)
 T CUtlMemory<CUtlMap<char*, double, unsigned short>*, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlString, int>::Grow(int)
 T CUtlMemory<CUtlSymbol, int>::Grow(int)
 T CUtlMemory<CUtlSymbolLarge, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTable, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBaseTreeEntry_t*, int>::Grow(int)
 T CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, int>::Grow(int)
 T CUtlMemory<CVGuiPaintHelper::Entry_t, int>::Grow(int)
 T CUtlMemory<CVProfNode*, int>::Grow(int)
 T CUtlMemory<CVProfRecorder::CNodeAverage, int>::Grow(int)
 T CUtlMemory<CVTFTexture::ResourceMemorySection, int>::Grow(int)
 T CUtlMemory<CWin32UploadGameStats::FSMState_t, int>::Grow(int)
 T CUtlMemory<CWingedEdgeList::Surface_t, int>::Grow(int)
 T CUtlMemory<CWingedEdgeList::WingedEdge_t, int>::Grow(int)
 T CUtlMemory<CWordTag*, int>::Grow(int)
 T CUtlMemory<CheatCodeData_t, int>::Grow(int)
 T CUtlMemory<Color, int>::Grow(int)
 T CUtlMemory<DecalMaterialBucket_t, int>::Grow(int)
 T CUtlMemory<DecalSortTrees_t, int>::Grow(int)
 T CUtlMemory<DecalSortVertexFormat_t, int>::Grow(int)
 T CUtlMemory<DemoCustomDataCallbackMapping_t, int>::Grow(int)
 T CUtlMemory<DispCollPlaneIndex_t, int>::Grow(int)
 T CUtlMemory<DmeTime_t, int>::Grow(int)
 T CUtlMemory<EdgeVisualizationInfo_t, int>::Grow(int)
 T CUtlMemory<Frustum_t, int>::Grow(int)
 T CUtlMemory<IAppSystem*, int>::Grow(int)
 T CUtlMemory<IClientEntity*, int>::Grow(int)
 T CUtlMemory<ICollideable*, int>::Grow(int)
 T CUtlMemory<IColorOperation*, int>::Grow(int)
 T CUtlMemory<IDispInfo*, int>::Grow(int)
 T CUtlMemory<IMaterial*, int>::Grow(int)
 T CUtlMemory<IMesh*, int>::Grow(int)
 T CUtlMemory<IModelLoadCallback*, int>::Grow(int)
 T CUtlMemory<INetMessage*, int>::Grow(int)
 T CUtlMemory<IToolSystem*, int>::Grow(int)
 T CUtlMemory<IVProfExport::CExportedBudgetGroupInfo, int>::Grow(int)
 T CUtlMemory<KeyValues*, int>::Grow(int)
 T CUtlMemory<LightingState_t, int>::Grow(int)
 T CUtlMemory<LightmapTransformInfo_t, int>::Grow(int)
 T CUtlMemory<LightmapUpdateInfo_t, int>::Grow(int)
 T CUtlMemory<ModelDebugOverlayData_t, int>::Grow(int)
 T CUtlMemory<ModelInstanceHashPair_t, int>::Grow(int)
 T CUtlMemory<PanelAnimationMapEntry, int>::Grow(int)
 T CUtlMemory<PanelItem_t, int>::Grow(int)
 T CUtlMemory<QAngle, int>::Grow(int)
 T CUtlMemory<Quaternion, int>::Grow(int)
 T CUtlMemory<RecvProp const*, int>::Grow(int)
 T CUtlMemory<RegisteredDemoCustomDataCallbackPair_t, int>::Grow(int)
 T CUtlMemory<RequestContext*, int>::Grow(int)
 T CUtlMemory<ResourceEntryInfo, int>::Grow(int)
 T CUtlMemory<S3RGBA, int>::Grow(int)
 T CUtlMemory<SendProp const*, int>::Grow(int)
 T CUtlMemory<SendTable*, int>::Grow(int)
 T CUtlMemory<SndInfo_t, int>::Grow(int)
 T CUtlMemory<SosStartQueueData_t*, int>::Grow(int)
 T CUtlMemory<SosStopQueueData_t*, int>::Grow(int)
 T CUtlMemory<SoundInfo_t, int>::Grow(int)
 T CUtlMemory<Spike_t, int>::Grow(int)
 T CUtlMemory<StaticPropLeafLump_t, int>::Grow(int)
 T CUtlMemory<StringHistoryEntry, int>::Grow(int)
 T CUtlMemory<TAssetInfo*, int>::Grow(int)
 T CUtlMemory<TDisplacementImage, int>::Grow(int)
 T CUtlMemory<ToolModule_t, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CAsyncWavDataCache::StreamedEntry_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::BucketListInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned short>::ElementListInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBrushBatchRender::brushrender_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::FlashlightInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowDecal_t, unsigned short>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexCache_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexLargeList_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::ShadowVertexSmallList_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::Shadow_t, unsigned short>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CShadowMgr::SortOrderInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<int, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<msurface2_t*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<void*, int>, int>::Grow(int)
 T CUtlMemory<VMatrix, int>::Grow(int)
 T CUtlMemory<VProfListenInfo_t, int>::Grow(int)
 T CUtlMemory<VacClient::VarEntry_t, int>::Grow(int)
 T CUtlMemory<Vector, int>::Grow(int)
 T CUtlMemory<Vector2D, int>::Grow(int)
 T CUtlMemory<Vector4D, int>::Grow(int)
 T CUtlMemory<WordBuf, int>::Grow(int)
 T CUtlMemory<WorldListLeafData_t, int>::Grow(int)
 T CUtlMemory<activethreadsound_t, int>::Grow(int)
 T CUtlMemory<audio_device_description_t, int>::Grow(int)
 T CUtlMemory<batchlist_t, int>::Grow(int)
 T CUtlMemory<bool, int>::Grow(int)
 T CUtlMemory<char const*, int>::Grow(int)
 T CUtlMemory<char*, int>::Grow(int)
 T CUtlMemory<char, int>::Grow(int)
 T CUtlMemory<collideable_handleentity_t, int>::Grow(int)
 T CUtlMemory<cplane_t*, int>::Grow(int)
 T CUtlMemory<cplane_t, int>::Grow(int)
 T CUtlMemory<decal_t*, int>::Grow(int)
 T CUtlMemory<dgamelump_t, int>::Grow(int)
 T CUtlMemory<edict_t*, int>::Grow(int)
 T CUtlMemory<filelistelem_t, int>::Grow(int)
 T CUtlMemory<float, int>::Grow(int)
 T CUtlMemory<int, int>::Grow(int)
 T CUtlMemory<ipfilter_t, int>::Grow(int)
 T CUtlMemory<leafvis_t::Polygon_t, int>::Grow(int)
 T CUtlMemory<maplist_map_t, int>::Grow(int)
 T CUtlMemory<materiallist_t, int>::Grow(int)
 T CUtlMemory<memhandle_t__*, int>::Grow(int)
 T CUtlMemory<meshlist_t, int>::Grow(int)
 T CUtlMemory<mmodel_t, int>::Grow(int)
 T CUtlMemory<model_t*, int>::Grow(int)
 T CUtlMemory<model_t, int>::Grow(int)
 T CUtlMemory<modelsize_t, int>::Grow(int)
 T CUtlMemory<mouthenvelope_t, int>::Grow(int)
 T CUtlMemory<mouthoutput_t, int>::Grow(int)
 T CUtlMemory<moverlay_t, int>::Grow(int)
 T CUtlMemory<moverlayfragment_t*, int>::Grow(int)
 T CUtlMemory<msurface2_t*, int>::Grow(int)
 T CUtlMemory<musicsave_t, int>::Grow(int)
 T CUtlMemory<netadr_t, int>::Grow(int)
 T CUtlMemory<ns_address, int>::Grow(int)
 T CUtlMemory<overlayvert_t, int>::Grow(int)
 T CUtlMemory<rdecalmodel_t, int>::Grow(int)
 T CUtlMemory<rmodel_t, int>::Grow(int)
 T CUtlMemory<robject_t, int>::Grow(int)
 T CUtlMemory<sentence_t, int>::Grow(int)
 T CUtlMemory<sentencegroup_t, int>::Grow(int)
 T CUtlMemory<short, int>::Grow(int)
 T CUtlMemory<surfacesortgroup_t const*, int>::Grow(int)
 T CUtlMemory<surfacesortgroup_t*, int>::Grow(int)
 T CUtlMemory<surfacesortgroup_t, int>::Grow(int)
 T CUtlMemory<transsurfacebatch_t, int>::Grow(int)
 T CUtlMemory<unsigned char, int>::Grow(int)
 T CUtlMemory<unsigned int, int>::Grow(int)
 T CUtlMemory<unsigned long long, int>::Grow(int)
 T CUtlMemory<unsigned long, int>::Grow(int)
 T CUtlMemory<unsigned short, int>::Grow(int)
 T CUtlMemory<userfilter_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::AnimCommand_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::AnimSequence_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::PostedMessage_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::RanEvent_t, int>::Grow(int)
 T CUtlMemory<vgui::BoundKey_t, int>::Grow(int)
 T CUtlMemory<vgui::BuildModeDialog*, int>::Grow(int)
 T CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int>::Grow(int)
 T CUtlMemory<vgui::ClickPanel*, int>::Grow(int)
 T CUtlMemory<vgui::DHANDLE<vgui::Menu>, int>::Grow(int)
 T CUtlMemory<vgui::FileData_t*, int>::Grow(int)
 T CUtlMemory<vgui::FileData_t, int>::Grow(int)
 T CUtlMemory<vgui::IImage*, int>::Grow(int)
 T CUtlMemory<vgui::IntRect, int>::Grow(int)
 T CUtlMemory<vgui::Label*, int>::Grow(int)
 T CUtlMemory<vgui::Label::TImageInfo, int>::Grow(int)
 T CUtlMemory<vgui::LayoutPanel_t, int>::Grow(int)
 T CUtlMemory<vgui::MenuButton*, int>::Grow(int)
 T CUtlMemory<vgui::MenuSeparator*, int>::Grow(int)
 T CUtlMemory<vgui::MessageMapItem_t, int>::Grow(int)
 T CUtlMemory<vgui::OverridableColorEntry, int>::Grow(int)
 T CUtlMemory<vgui::PHandle, int>::Grow(int)
 T CUtlMemory<vgui::PageTab*, int>::Grow(int)
 T CUtlMemory<vgui::Panel*, int>::Grow(int)
 T CUtlMemory<vgui::PropertySheet::Page_t, int>::Grow(int)
 T CUtlMemory<vgui::RichText::TFormatStream, int>::Grow(int)
 T CUtlMemory<vgui::Splitter::SplitterInfo_t, int>::Grow(int)
 T CUtlMemory<vgui::TreeNode*, int>::Grow(int)
 T CUtlMemory<vgui::layoutcmd_t, int>::Grow(int)
 T CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
 T CUtlMemory<void*, int>::Grow(int)
 T CUtlMemory<wchar_t*, int>::Grow(int)
 T CUtlMemory<wchar_t, int>::Grow(int)
 T CUtlMemoryPool<CFrameSnapshot>::~CUtlMemoryPool()
 T CUtlMemoryPoolBase::AddNewBlob()
 T CUtlMemoryPoolBase::Alloc()
 T CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, char const*)
 T CUtlMemoryPoolBase::Clear()
 T CUtlMemoryPoolBase::Free(void*)
 T CUtlMemoryPoolBase::Size() const
 T CUtlMemoryPoolBase::~CUtlMemoryPoolBase()
 T CUtlMemoryPoolMT<CChangeFrameList>::Alloc()
 T CUtlMemoryPoolMT<CChangeFrameList>::Free(CChangeFrameList*)
 T CUtlMemoryPoolMT<CChangeFrameList>::~CUtlMemoryPoolMT()
 T CUtlMemoryPoolMT<CSerializedEntity>::Alloc()
 T CUtlMemoryPoolMT<CSerializedEntity>::Free(CSerializedEntity*)
 T CUtlMemoryPoolMT<CSerializedEntity>::~CUtlMemoryPoolMT()
 T CUtlMemoryPoolMT<CUtlTSHashBase<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, CThreadSpinRWLock>::HashFixedDataInternal_t<CUtlSymbolTableLargeBaseTreeEntry_t*> >::Alloc()
 T CUtlMemoryPoolMT<CUtlTSHashBase<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, CThreadSpinRWLock>::HashFixedDataInternal_t<CUtlSymbolTableLargeBaseTreeEntry_t*> >::Clear()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::Insert(CAsyncWavDataCache::BufferEntry_t const&)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::NewNode(CAsyncWavDataCache::BufferEntry_t const*)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CAsyncWavDataCache::BufferEntry_t, int, bool (*)(CAsyncWavDataCache::BufferEntry_t const&, CAsyncWavDataCache::BufferEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::BufferEntry_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CAsyncWavDataCache::CacheEntry_t, int, bool (*)(CAsyncWavDataCache::CacheEntry_t const&, CAsyncWavDataCache::CacheEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int> >::Insert(CAsyncWavDataCache::CacheEntry_t const&)
 T CUtlRBTree<CAsyncWavDataCache::CacheEntry_t, int, bool (*)(CAsyncWavDataCache::CacheEntry_t const&, CAsyncWavDataCache::CacheEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CAsyncWavDataCache::CacheEntry_t, int, bool (*)(CAsyncWavDataCache::CacheEntry_t const&, CAsyncWavDataCache::CacheEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int> >::NewNode(CAsyncWavDataCache::CacheEntry_t const*)
 T CUtlRBTree<CAsyncWavDataCache::CacheEntry_t, int, bool (*)(CAsyncWavDataCache::CacheEntry_t const&, CAsyncWavDataCache::CacheEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CAsyncWavDataCache::CacheEntry_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CDmxSerializationDictionary::DmxElementInfo_t, int, bool (*)(CDmxSerializationDictionary::DmxElementInfo_t const&, CDmxSerializationDictionary::DmxElementInfo_t const&), CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int> >::Insert(CDmxSerializationDictionary::DmxElementInfo_t const&)
 T CUtlRBTree<CDmxSerializationDictionary::DmxElementInfo_t, int, bool (*)(CDmxSerializationDictionary::DmxElementInfo_t const&, CDmxSerializationDictionary::DmxElementInfo_t const&), CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CDmxSerializationDictionary::DmxElementInfo_t, int, bool (*)(CDmxSerializationDictionary::DmxElementInfo_t const&, CDmxSerializationDictionary::DmxElementInfo_t const&), CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int> >::NewNode(CDmxSerializationDictionary::DmxElementInfo_t const*)
 T CUtlRBTree<CDmxSerializationDictionary::DmxElementInfo_t, int, bool (*)(CDmxSerializationDictionary::DmxElementInfo_t const&, CDmxSerializationDictionary::DmxElementInfo_t const&), CUtlMemory<UtlRBTreeNode_t<CDmxSerializationDictionary::DmxElementInfo_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CProfileHierarchyPanel::ColumnPanels_t, int, bool (*)(CProfileHierarchyPanel::ColumnPanels_t const&, CProfileHierarchyPanel::ColumnPanels_t const&), CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int> >::Insert(CProfileHierarchyPanel::ColumnPanels_t const&)
 T CUtlRBTree<CProfileHierarchyPanel::ColumnPanels_t, int, bool (*)(CProfileHierarchyPanel::ColumnPanels_t const&, CProfileHierarchyPanel::ColumnPanels_t const&), CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CProfileHierarchyPanel::ColumnPanels_t, int, bool (*)(CProfileHierarchyPanel::ColumnPanels_t const&, CProfileHierarchyPanel::ColumnPanels_t const&), CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int> >::NewNode(CProfileHierarchyPanel::ColumnPanels_t const*)
 T CUtlRBTree<CProfileHierarchyPanel::ColumnPanels_t, int, bool (*)(CProfileHierarchyPanel::ColumnPanels_t const&, CProfileHierarchyPanel::ColumnPanels_t const&), CUtlMemory<UtlRBTreeNode_t<CProfileHierarchyPanel::ColumnPanels_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::Insert(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&)
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::NewNode(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const*)
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&, CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CAudioSourceCachedInfo>::ElementType_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CNetworkStringDict::CTableItem, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CUtlString, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<CUtlString, int, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Link(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CSaveDirectory::file_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDemoPlayer::fullpacketstringtableinfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CMapListItem, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CMapListItem, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int, CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int, CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int, CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int, CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSaveRestore::RestoreLookupTable, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CSentence*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CSentence*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<char const*, CSentence*, int>::Node_t, int, CUtlMap<char const*, CSentence*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSentence*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CSosOperator*, int>::Node_t, int, CUtlMap<char const*, CSosOperator*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CSosOperator*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CSosOperator*, int>::Node_t, int, CUtlMap<char const*, CSosOperator*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CSosOperator*, int>::Node_t, int, CUtlMap<char const*, CSosOperator*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CSosOperator*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CSosOperator*, int>::Node_t, int, CUtlMap<char const*, CSosOperator*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperator*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int, CUtlMap<char const*, CSosOperatorStack*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CSosOperatorStack*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int, CUtlMap<char const*, CSosOperatorStack*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int, CUtlMap<char const*, CSosOperatorStack*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, CSosOperatorStack*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int, CUtlMap<char const*, CSosOperatorStack*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CSosOperatorStack*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, CUtlString, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<char const*, CUtlString, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, channel_t*, int>::Node_t, int, CUtlMap<char const*, channel_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, channel_t*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, channel_t*, int>::Node_t, int, CUtlMap<char const*, channel_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, channel_t*, int>::Node_t, int, CUtlMap<char const*, channel_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, channel_t*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, channel_t*, int>::Node_t, int, CUtlMap<char const*, channel_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, channel_t*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, float, int>::Node_t, int, CUtlMap<char const*, float, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, float, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, float, int>::Node_t, int, CUtlMap<char const*, float, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, float, int>::Node_t, int, CUtlMap<char const*, float, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, float, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, float, int>::Node_t, int, CUtlMap<char const*, float, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, float, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, int, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, int, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<char const*, int, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int, CUtlMap<char const*, memhandle_t__*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int, CUtlMap<char const*, vgui::CLayoutRegion, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int, CUtlMap<char const*, vgui::CLayoutRegion, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int, CUtlMap<char const*, vgui::CLayoutRegion, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int, CUtlMap<char const*, vgui::CLayoutRegion, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::CLayoutRegion, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::NewNode(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const*)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char*, double, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<char*, double, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short, CUtlMap<char*, double, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, double, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char*, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<char*, int, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::Insert(CUtlMap<int, bool, short>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::NewNode(CUtlMap<int, bool, short>::Node_t const*)
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::Purge()
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<int, bool, short>::Node_t, short, CUtlMap<int, bool, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, bool, short>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<int, int, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, SfxDictEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SfxDictEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned int, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned int, int, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::TxInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, MatViewOverride::ViewParamsLast::VarMap, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode(CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t const*)
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::Insert(CUtlString const&)
 T CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::NewNode(CUtlString const*)
 T CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Insert(CUtlSymbol const&)
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::NewNode(CUtlSymbol const*)
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Find(CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlSymbolTable::CStringPoolIndex const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode(CUtlSymbolTable::CStringPoolIndex const*)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::Insert(CUtlSymbolTableLargeBaseTreeEntry_t* const&)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::NewNode(CUtlSymbolTableLargeBaseTreeEntry_t* const*)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::Insert(CVoiceWriterData const&)
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::NewNode(CVoiceWriterData const*)
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CVoiceWriterData, unsigned short, bool (*)(CVoiceWriterData const&, CVoiceWriterData const&), CUtlMemory<UtlRBTreeNode_t<CVoiceWriterData, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::Insert(ConCommandBase const* const&)
 T CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::NewNode(ConCommandBase const* const*)
 T CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<ConVar*, int, bool (*)(ConVar* const&, ConVar* const&), CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int> >::Insert(ConVar* const&)
 T CUtlRBTree<ConVar*, int, bool (*)(ConVar* const&, ConVar* const&), CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<ConVar*, int, bool (*)(ConVar* const&, ConVar* const&), CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int> >::NewNode(ConVar* const*)
 T CUtlRBTree<ConVar*, int, bool (*)(ConVar* const&, ConVar* const&), CUtlMemory<UtlRBTreeNode_t<ConVar*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<DecalMaterialSortData_t, int, bool (*)(DecalMaterialSortData_t const&, DecalMaterialSortData_t const&), CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int> >::Insert(DecalMaterialSortData_t const&)
 T CUtlRBTree<DecalMaterialSortData_t, int, bool (*)(DecalMaterialSortData_t const&, DecalMaterialSortData_t const&), CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<DecalMaterialSortData_t, int, bool (*)(DecalMaterialSortData_t const&, DecalMaterialSortData_t const&), CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int> >::NewNode(DecalMaterialSortData_t const*)
 T CUtlRBTree<DecalMaterialSortData_t, int, bool (*)(DecalMaterialSortData_t const&, DecalMaterialSortData_t const&), CUtlMemory<UtlRBTreeNode_t<DecalMaterialSortData_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::InsertIfNotFound(IMaterialVar* const&)
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::NewNode(IMaterialVar* const*)
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<IMaterialVar*, unsigned short, bool (*)(IMaterialVar* const&, IMaterialVar* const&), CUtlMemory<UtlRBTreeNode_t<IMaterialVar*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<MP3Duration_t, int, bool (*)(MP3Duration_t const&, MP3Duration_t const&), CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int> >::Insert(MP3Duration_t const&)
 T CUtlRBTree<MP3Duration_t, int, bool (*)(MP3Duration_t const&, MP3Duration_t const&), CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<MP3Duration_t, int, bool (*)(MP3Duration_t const&, MP3Duration_t const&), CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int> >::NewNode(MP3Duration_t const*)
 T CUtlRBTree<MP3Duration_t, int, bool (*)(MP3Duration_t const&, MP3Duration_t const&), CUtlMemory<UtlRBTreeNode_t<MP3Duration_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::Insert(MatchingProp_t const&)
 T CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::NewNode(MatchingProp_t const*)
 T CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<SoundInfo_t, int, bool (*)(SoundInfo_t const&, SoundInfo_t const&), CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int> >::Insert(SoundInfo_t const&)
 T CUtlRBTree<SoundInfo_t, int, bool (*)(SoundInfo_t const&, SoundInfo_t const&), CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<SoundInfo_t, int, bool (*)(SoundInfo_t const&, SoundInfo_t const&), CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int> >::NewNode(SoundInfo_t const*)
 T CUtlRBTree<SoundInfo_t, int, bool (*)(SoundInfo_t const&, SoundInfo_t const&), CUtlMemory<UtlRBTreeNode_t<SoundInfo_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::Insert(ccpair const&)
 T CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::NewNode(ccpair const*)
 T CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Insert(char const* const&)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::NewNode(char const* const*)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<msurface2_t*, int, bool (*)(msurface2_t* const&, msurface2_t* const&), CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int> >::Insert(msurface2_t* const&)
 T CUtlRBTree<msurface2_t*, int, bool (*)(msurface2_t* const&, msurface2_t* const&), CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<msurface2_t*, int, bool (*)(msurface2_t* const&, msurface2_t* const&), CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int> >::NewNode(msurface2_t* const*)
 T CUtlRBTree<msurface2_t*, int, bool (*)(msurface2_t* const&, msurface2_t* const&), CUtlMemory<UtlRBTreeNode_t<msurface2_t*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >::Insert(unsigned int const&)
 T CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >::NewNode(unsigned int const*)
 T CUtlRBTree<unsigned int, int, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Insert(unsigned int const&)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::NewNode(unsigned int const*)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Insert(vgui::ListPanel::IndexItem_t const&)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::NewNode(vgui::ListPanel::IndexItem_t const*)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Unlink(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::Insert(void* const&)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::NewNode(void* const*)
 T CUtlRBTree<void*, int, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, int>, int> >::~CUtlRBTree()
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::CompareHelper(CDmxAttribute* const*, CDmxAttribute* const*)
 T CUtlSortVector<CSortedCacheFile, CSortedCacheFile, CUtlVector<CSortedCacheFile, CUtlMemory<CSortedCacheFile, int> > >::CompareHelper(CSortedCacheFile const*, CSortedCacheFile const*)
 T CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::Insert(TAssetInfo* const&)
 T CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Insert(Vector const&)
 T CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)
 T CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::Insert(modelsize_t const&)
 T CUtlSortVector<robject_t, CRobjectLess, CUtlVector<robject_t, CUtlMemory<robject_t, int> > >::CompareHelper(robject_t const*, robject_t const*)
 T CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::Insert(unsigned short const&)
 T CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Insert(vgui::LayoutPanel_t const&)
 T CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::RemoveAndAdvance(unsigned int)
 T CUtlStack<CRender::ViewStack_t, CUtlMemory<CRender::ViewStack_t, int> >::Push()
 T CUtlStreamBuffer::CUtlStreamBuffer()
 T CUtlStreamBuffer::CUtlStreamBuffer(char const*, char const*, int, bool, int, int)
 T CUtlStreamBuffer::Close()
 T CUtlStreamBuffer::IsOpen() const
 T CUtlStreamBuffer::Open(char const*, char const*, int, int)
 T CUtlStreamBuffer::ReadBytesFromFile(int, int)
 T CUtlStreamBuffer::StreamGetOverflow(int)
 T CUtlStreamBuffer::StreamPutOverflow(int)
 T CUtlStreamBuffer::~CUtlStreamBuffer()
 T CUtlString::Append(char const*)
 T CUtlString::Clear()
 T CUtlString::FixSlashes(char)
 T CUtlString::Format(char const*, ...)
 T CUtlString::FreeMemoryBlock()
 T CUtlString::Get() const
 T CUtlString::GetExtension() const
 T CUtlString::GetForModify()
 T CUtlString::IsEqual_CaseSensitive(char const*) const
 T CUtlString::Left(int) const
 T CUtlString::MatchesPattern(CUtlString const&, int) const
 T CUtlString::Set(char const*)
 T CUtlString::SetLength(int)
 T CUtlString::Slice(int, int) const
 T CUtlString::StripExtension() const
 T CUtlString::ToLower()
 T CUtlString::Trim(char const*)
 T CUtlString::TrimLeft(char const*)
 T CUtlString::UnqualifiedFilename() const
 T CUtlString::operator+(CUtlString const&) const
 T CUtlString::operator+(char const*) const
 T CUtlString::operator+=(CUtlString const&)
 T CUtlString::operator+=(char const*)
 T CUtlString::operator=(CUtlString const&)
 T CUtlString::operator=(char const*)
 T CUtlString::operator==(CUtlString const&) const
 T CUtlString::~CUtlString()
 T CUtlStringMap<bool>::CUtlStringMap(bool, int, int)
 T CUtlStringMap<bool>::operator[](char const*)
 T CUtlSymbol::CUtlSymbol(char const*)
 T CUtlSymbol::Initialize()
 T CUtlSymbol::String() const
 T CUtlSymbolTable::AddString(char const*)
 T CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
 T CUtlSymbolTable::Find(char const*) const
 T CUtlSymbolTable::RemoveAll()
 T CUtlSymbolTable::String(CUtlSymbol) const
 T CUtlSymbolTable::~CUtlSymbolTable()
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableMT::String(CUtlSymbol) const
 T CUtlTSHashBase<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, CThreadSpinRWLock>::Find(CUtlSymbolTableLargeBaseTreeEntry_t*) const
 T CUtlTSHashBase<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, CThreadSpinRWLock>::Insert(CUtlSymbolTableLargeBaseTreeEntry_t*, CUtlSymbolTableLargeBaseTreeEntry_t* const&, bool*)
 T CUtlTSHashBase<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, CThreadSpinRWLock>::RemoveAll()
 T CUtlVector<CDispGroup*, CUtlMemory<CDispGroup*, int> >::~CUtlVector()
 T CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >::~CUtlVector()
 T CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::~CUtlVector()
 T CUtlVector<CPortalRect, CUtlMemory<CPortalRect, int> >::~CUtlVector()
 T CUtlVector<CUtlDelegate<void (CVProfile*)>, CUtlMemory<CUtlDelegate<void (CVProfile*)>, int> >::~CUtlVector()
 T CUtlVector<CheatCodeData_t, CUtlMemory<CheatCodeData_t, int> >::~CUtlVector()
 T CUtlVector<DecalSortTrees_t, CUtlMemory<DecalSortTrees_t, int> >::~CUtlVector()
 T CUtlVector<DecalSortVertexFormat_t, CUtlMemory<DecalSortVertexFormat_t, int> >::~CUtlVector()
 T CUtlVector<EdgeVisualizationInfo_t, CUtlMemory<EdgeVisualizationInfo_t, int> >::~CUtlVector()
 T CUtlVector<Frustum_t, CUtlMemory<Frustum_t, int> >::~CUtlVector()
 T CUtlVector<IMesh*, CUtlMemory<IMesh*, int> >::~CUtlVector()
 T CUtlVector<IVProfExport::CExportedBudgetGroupInfo, CUtlMemory<IVProfExport::CExportedBudgetGroupInfo, int> >::~CUtlVector()
 T CUtlVector<LightmapTransformInfo_t, CUtlMemory<LightmapTransformInfo_t, int> >::~CUtlVector()
 T CUtlVector<LightmapUpdateInfo_t, CUtlMemory<LightmapUpdateInfo_t, int> >::~CUtlVector()
 T CUtlVector<ModelDebugOverlayData_t, CUtlMemory<ModelDebugOverlayData_t, int> >::~CUtlVector()
 T CUtlVector<RegisteredDemoCustomDataCallbackPair_t, CUtlMemory<RegisteredDemoCustomDataCallbackPair_t, int> >::~CUtlVector()
 T CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >::~CUtlVector()
 T CUtlVector<VProfListenInfo_t, CUtlMemory<VProfListenInfo_t, int> >::~CUtlVector()
 T CUtlVector<Vector, CUtlMemory<Vector, int> >::~CUtlVector()
 T CUtlVector<activethreadsound_t, CUtlMemory<activethreadsound_t, int> >::~CUtlVector()
 T CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
 T CUtlVector<decal_t*, CUtlMemory<decal_t*, int> >::~CUtlVector()
 T CUtlVector<dgamelump_t, CUtlMemory<dgamelump_t, int> >::~CUtlVector()
 T CUtlVector<float, CUtlMemory<float, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
 T CUtlVector<meshlist_t, CUtlMemory<meshlist_t, int> >::~CUtlVector()
 T CUtlVector<mouthenvelope_t, CUtlMemory<mouthenvelope_t, int> >::~CUtlVector()
 T CUtlVector<mouthoutput_t, CUtlMemory<mouthoutput_t, int> >::~CUtlVector()
 T CUtlVector<sentence_t, CUtlMemory<sentence_t, int> >::~CUtlVector()
 T CUtlVector<sentencegroup_t, CUtlMemory<sentencegroup_t, int> >::~CUtlVector()
 T CUtlVector<unsigned char, CHunkMemory<unsigned char> >::~CUtlVector()
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
 T CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::~CUtlVector()
 T CUtlVector<vgui::IntRect, CUtlMemory<vgui::IntRect, int> >::~CUtlVector()
 T CUtlVector<vgui::ToolWindow*, CUtlMemory<vgui::ToolWindow*, int> >::~CUtlVector()
 T CUtlVectorBase<CBasePhonemeTag, CUtlMemory<CBasePhonemeTag, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CBlackBoxRecord*, CUtlMemory<CBlackBoxRecord*, int> >::PurgeAndDeleteElements()
 T CUtlVectorBase<CBudgetGroupInfo, CUtlMemory<CBudgetGroupInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CClientSendProp, CUtlMemory<CClientSendProp, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CDTIProp, CUtlMemory<CDTIProp, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CDTIProp, CUtlMemory<CDTIProp, int> >::~CUtlVectorBase()
 T CUtlVectorBase<CDispCollTri, CHunkMemory<CDispCollTri> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CEntityBits, CUtlMemory<CEntityBits, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CMaterialsBuckets<msurface2_t*>::MaterialSortInfo_t, CUtlMemory<CMaterialsBuckets<msurface2_t*>::MaterialSortInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CPhonemeTag*, CUtlMemory<CPhonemeTag*, int> >::PurgeAndDeleteElements()
 T CUtlVectorBase<CPlugin*, CUtlMemory<CPlugin*, int> >::PurgeAndDeleteElements()
 T CUtlVectorBase<CProfileHierarchyPanel::PanelEntry_t, CUtlMemory<CProfileHierarchyPanel::PanelEntry_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CRConServer::FailedRCon_t, CUtlMemory<CRConServer::FailedRCon_t, int> >::InsertBefore(int)
 T CUtlVectorBase<CRConServer::FailedRCon_t, CUtlMemory<CRConServer::FailedRCon_t, int> >::~CUtlVectorBase()
 T CUtlVectorBase<CSendProxyRecipients, CUtlMemory<CSendProxyRecipients, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CSocketCreator::AcceptedSocket_t, CUtlMemory<CSocketCreator::AcceptedSocket_t, int> >::InsertBefore(int)
 T CUtlVectorBase<CStaticProp, CUtlMemory<CStaticProp, int> >::InsertBefore(int)
 T CUtlVectorBase<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int)
 T CUtlVectorBase<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int, CUtlBinaryBlock const&)
 T CUtlVectorBase<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::~CUtlVectorBase()
 T CUtlVectorBase<CUtlDelegate<void (CVProfile*)>, CUtlMemory<CUtlDelegate<void (CVProfile*)>, int> >::AddToTail(CUtlDelegate<void (CVProfile*)> const&)
 T CUtlVectorBase<CUtlMap<char*, double, unsigned short>*, CUtlMemory<CUtlMap<char*, double, unsigned short>*, int> >::PurgeAndDeleteElements()
 T CUtlVectorBase<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 T CUtlVectorBase<CUtlString, CUtlMemory<CUtlString, int> >::~CUtlVectorBase()
 T CUtlVectorBase<CUtlSymbolLarge, CUtlMemory<CUtlSymbolLarge, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlSymbolTable, CUtlMemory<CUtlSymbolTable, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int> >::Purge()
 T CUtlVectorBase<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::Purge()
 T CUtlVectorBase<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int> >::Purge()
 T CUtlVectorBase<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, CUtlMemory<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, CUtlMemory<CUtlVector<ModelInstanceHashPair_t, CUtlMemory<ModelInstanceHashPair_t, int> >, int> >::Purge()
 T CUtlVectorBase<CVTFTexture::ResourceMemorySection, CUtlMemory<CVTFTexture::ResourceMemorySection, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<DecalSortTrees_t, CUtlMemory<DecalSortTrees_t, int> >::InsertBefore(int)
 T CUtlVectorBase<DemoCustomDataCallbackMapping_t, CUtlMemory<DemoCustomDataCallbackMapping_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<DemoCustomDataCallbackMapping_t, CUtlMemory<DemoCustomDataCallbackMapping_t, int> >::~CUtlVectorBase()
 T CUtlVectorBase<Frustum_t, CUtlMemory<Frustum_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<IVProfExport::CExportedBudgetGroupInfo, CUtlMemory<IVProfExport::CExportedBudgetGroupInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<LightingState_t, CUtlMemoryFixedGrowable<LightingState_t, 256ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<LightingState_t, CUtlMemoryFixedGrowable<LightingState_t, 256ul, int> >::InsertBefore(int)
 T CUtlVectorBase<LightingState_t, CUtlMemoryFixedGrowable<LightingState_t, 256ul, int> >::InsertBefore(int, LightingState_t const&)
 T CUtlVectorBase<ModelDebugOverlayData_t, CUtlMemory<ModelDebugOverlayData_t, int> >::InsertBefore(int)
 T CUtlVectorBase<SendProp const*, CUtlMemory<SendProp const*, int> >::CopyArray(SendProp const* const*, int)
 T CUtlVectorBase<ToolModule_t, CUtlMemory<ToolModule_t, int> >::~CUtlVectorBase()
 T CUtlVectorBase<WordBuf, CUtlMemory<WordBuf, int> >::InsertBefore(int, WordBuf const&)
 T CUtlVectorBase<batchlist_t, CUtlMemoryFixedGrowable<batchlist_t, 512ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<batchlist_t, CUtlMemoryFixedGrowable<batchlist_t, 512ul, int> >::InsertBefore(int)
 T CUtlVectorBase<char, CUtlMemory<char, int> >::InsertMultipleBefore(int, int, char const*)
 T CUtlVectorBase<collideable_handleentity_t, CUtlMemoryFixedGrowable<collideable_handleentity_t, 64ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<collideable_handleentity_t, CUtlMemoryFixedGrowable<collideable_handleentity_t, 64ul, int> >::InsertBefore(int)
 T CUtlVectorBase<decal_t*, CUtlMemoryFixedGrowable<decal_t*, 32ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<decal_t*, CUtlMemoryFixedGrowable<decal_t*, 32ul, int> >::InsertBefore(int, decal_t* const&)
 T CUtlVectorBase<int, CUtlMemoryFixedGrowable<int, 128ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<int, CUtlMemoryFixedGrowable<int, 128ul, int> >::InsertBefore(int, int const&)
 T CUtlVectorBase<int, CUtlMemoryFixedGrowable<int, 128ul, int> >::SetCount(int)
 T CUtlVectorBase<int, CUtlMemoryFixedGrowable<int, 256ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<int, CUtlMemoryFixedGrowable<int, 256ul, int> >::InsertBefore(int, int const&)
 T CUtlVectorBase<moverlay_t, CUtlMemory<moverlay_t, int> >::Purge()
 T CUtlVectorBase<msurface2_t*, CUtlMemoryFixedGrowable<msurface2_t*, 16ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<msurface2_t*, CUtlMemoryFixedGrowable<msurface2_t*, 16ul, int> >::InsertBefore(int, msurface2_t* const&)
 T CUtlVectorBase<ns_address, CUtlMemory<ns_address, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<ns_address, CUtlMemory<ns_address, int> >::operator=(CUtlVectorBase<ns_address, CUtlMemory<ns_address, int> > const&)
 T CUtlVectorBase<ns_address, CUtlMemory<ns_address, int> >::~CUtlVectorBase()
 T CUtlVectorBase<overlayvert_t, CUtlMemory<overlayvert_t, int> >::CopyArray(overlayvert_t const*, int)
 T CUtlVectorBase<overlayvert_t, CUtlMemory<overlayvert_t, int> >::InsertBefore(int, overlayvert_t const&)
 T CUtlVectorBase<overlayvert_t, CUtlMemory<overlayvert_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<rdecalmodel_t, CUtlMemoryFixedGrowable<rdecalmodel_t, 64ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<rdecalmodel_t, CUtlMemoryFixedGrowable<rdecalmodel_t, 64ul, int> >::InsertBefore(int, rdecalmodel_t const&)
 T CUtlVectorBase<rmodel_t, CUtlMemoryFixedGrowable<rmodel_t, 256ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<rmodel_t, CUtlMemoryFixedGrowable<rmodel_t, 256ul, int> >::InsertBefore(int)
 T CUtlVectorBase<sentence_t, CUtlMemory<sentence_t, int> >::InsertBefore(int)
 T CUtlVectorBase<short, CUtlMemoryFixedGrowable<short, 256ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<short, CUtlMemoryFixedGrowable<short, 256ul, int> >::InsertBefore(int, short const&)
 T CUtlVectorBase<short, CUtlMemoryFixedGrowable<short, 64ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<short, CUtlMemoryFixedGrowable<short, 64ul, int> >::InsertBefore(int, short const&)
 T CUtlVectorBase<surfacesortgroup_t const*, CUtlMemoryFixedGrowable<surfacesortgroup_t const*, 8ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<surfacesortgroup_t const*, CUtlMemoryFixedGrowable<surfacesortgroup_t const*, 8ul, int> >::InsertBefore(int, surfacesortgroup_t const* const&)
 T CUtlVectorBase<transsurfacebatch_t, CUtlMemoryFixedGrowable<transsurfacebatch_t, 16ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<transsurfacebatch_t, CUtlMemoryFixedGrowable<transsurfacebatch_t, 16ul, int> >::InsertBefore(int)
 T CUtlVectorBase<unsigned short, CUtlMemory<unsigned short, int> >::InsertMultipleBefore(int, int, unsigned short const*)
 T CUtlVectorBase<unsigned short, CUtlMemoryFixedGrowable<unsigned short, 32ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<unsigned short, CUtlMemoryFixedGrowable<unsigned short, 32ul, int> >::InsertBefore(int, unsigned short const&)
 T CUtlVectorBase<unsigned short, CUtlMemoryFixedGrowable<unsigned short, 64ul, int> >::CUtlVectorBase(int, int)
 T CUtlVectorBase<unsigned short, CUtlMemoryFixedGrowable<unsigned short, 64ul, int> >::InsertBefore(int, unsigned short const&)
 T CUtlVectorBase<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::Purge()
 T CUtlVectorBase<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::Remove(int)
 T CUtlVectorBase<vgui::BoundKey_t, CUtlMemory<vgui::BoundKey_t, int> >::InsertBefore(int, vgui::BoundKey_t const&)
 T CUtlVectorBase<vgui::CTreeViewListControl::CColumnInfo, CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVectorBase<vgui::FileData_t, CUtlMemory<vgui::FileData_t, int> >::InsertBefore(int)
 T CUtlVectorBase<vgui::FileData_t, CUtlMemory<vgui::FileData_t, int> >::~CUtlVectorBase()
 T CUtlVectorBase<vgui::layoutcmd_t, CUtlMemory<vgui::layoutcmd_t, int> >::Purge()
 T CUtlVectorBase<wchar_t, CUtlMemory<wchar_t, int> >::CopyArray(wchar_t const*, int)
 T CVBRHeader::CVBRHeader(CMPAFile*, CVBRHeader::VBRHeaderType, unsigned int)
 T CVBRHeader::ExtractVBRIHeader(unsigned int)
 T CVBRHeader::ExtractXINGHeader(unsigned int)
 T CVBRHeader::IsVBRHeaderAvailable(CMPAFile*, CVBRHeader::VBRHeaderType&, unsigned int&)
 T CVBRHeader::~CVBRHeader()
 T CVEfx::CL_AllocDlight(int)
 T CVEfx::CL_AllocElight(int)
 T CVEfx::CL_GetActiveDLights(dlight_t**)
 T CVEfx::DecalColorShoot(int, int, model_t const*, Vector const&, QAngle const&, Vector const&, Vector const*, int, color32 const&, Vector const*)
 T CVEfx::DecalShoot(int, int, model_t const*, Vector const&, QAngle const&, Vector const&, Vector const*, int, Vector const*)
 T CVEfx::Draw_DecalIndexFromName(char*)
 T CVEfx::Draw_DecalNameFromIndex(int)
 T CVEfx::GetElightByKey(int)
 T CVEfx::PlayerDecalShoot(IMaterial*, void*, int, model_t const*, Vector const&, QAngle const&, Vector const&, Vector const*, int, color32 const&)
 T CVEfx::~CVEfx()
 T CVEngineServer::AddOriginToPVS(Vector const&)
 T CVEngineServer::AllocLevelStaticData(unsigned long)
 T CVEngineServer::AllowImmediateEdictReuse()
 T CVEngineServer::BuildEntityClusterList(CEntityIndex, PVSInfo_t*)
 T CVEngineServer::ChangeLevel(char const*, char const*)
 T CVEngineServer::CheckAreasConnected(int, int)
 T CVEngineServer::CheckBoxInPVS(Vector const&, Vector const&, unsigned char const*, int)
 T CVEngineServer::CheckHeadnodeVisible(int, unsigned char const*, int)
 T CVEngineServer::CheckOriginInPVS(Vector const&, unsigned char const*, int)
 T CVEngineServer::CleanUpEntityClusterList(PVSInfo_t*)
 T CVEngineServer::ClearSaveDir()
 T CVEngineServer::ClearSaveDirAfterClientLoad()
 T CVEngineServer::ClientCommand(CEntityIndex, char const*, ...)
 T CVEngineServer::ClientPrintf(CEntityIndex, char const*)
 T CVEngineServer::CompareFileTime(char const*, char const*, int*)
 T CVEngineServer::Con_NPrintf(int, char const*, ...)
 T CVEngineServer::Con_NXPrintf(con_nprint_s const*, char const*, ...)
 T CVEngineServer::CopyFile(char const*, char const*)
 T CVEngineServer::CreateEdict(int)
 T CVEngineServer::CreateFakeClient(char const*)
 T CVEngineServer::CreateSpatialPartition(Vector const&, Vector const&)
 T CVEngineServer::CrosshairAngle(CEntityIndex, float, float)
 T CVEngineServer::DestroySpatialPartition(ISpatialPartition*)
 T CVEngineServer::DisconnectClient(CEntityIndex, int)
 T CVEngineServer::DrawMapToScratchPad(IScratchPad3D*, unsigned long)
 T CVEngineServer::EmitAmbientSound(CEntityIndex, Vector const&, char const*, float, soundlevel_t, int, int, float)
 T CVEngineServer::FadeClientVolume(CEntityIndex, float, float, float, float)
 T CVEngineServer::ForceExactFile(char const*)
 T CVEngineServer::ForceFlushEntity(CEntityIndex)
 T CVEngineServer::ForceModelBounds(char const*, Vector const&, Vector const&)
 T CVEngineServer::ForceSimpleMaterial(char const*)
 T CVEngineServer::FreeEntPrivateData(void*)
 T CVEngineServer::GetAchievementMgr()
 T CVEngineServer::GetAllClusterBounds(bbox_t*, int)
 T CVEngineServer::GetAppID()
 T CVEngineServer::GetArea(Vector const&)
 T CVEngineServer::GetAreaBits(int, unsigned char*, int)
 T CVEngineServer::GetAreaPortalPlane(Vector const&, int, VPlane*)
 T CVEngineServer::GetChangeAccessor(CEntityIndex)
 T CVEngineServer::GetClientConVarValue(CEntityIndex, char const*)
 T CVEngineServer::GetClientSteamID(CEntityIndex)
 T CVEngineServer::GetClientXUID(CEntityIndex)
 T CVEngineServer::GetClusterCount()
 T CVEngineServer::GetClusterForOrigin(Vector const&)
 T CVEngineServer::GetEntityCount()
 T CVEngineServer::GetEntityTransmitBitsForClient(int)
 T CVEngineServer::GetFreeEntityCount()
 T CVEngineServer::GetGameDir(char*, int)
 T CVEngineServer::GetGameServerSteamID()
 T CVEngineServer::GetGamestatsData()
 T CVEngineServer::GetLaunchOptions()
 T CVEngineServer::GetLoadingProgressForUserID(int)
 T CVEngineServer::GetMapEntitiesString()
 T CVEngineServer::GetMaxEntityCount()
 T CVEngineServer::GetMostRecentlyLoadedFileName()
 T CVEngineServer::GetNumSplitScreenUsersAttachedToEdict(CEntityIndex)
 T CVEngineServer::GetPVSForCluster(int, int, unsigned char*)
 T CVEngineServer::GetPlayerInfo(CEntityIndex, player_info_s*)
 T CVEngineServer::GetPlayerNetInfo(CEntityIndex)
 T CVEngineServer::GetPlayerNetworkIDString(CPlayerSlot)
 T CVEngineServer::GetPlayerUserId(CPlayerSlot)
 T CVEngineServer::GetSaveFileName()
 T CVEngineServer::GetServerVersion() const
 T CVEngineServer::GetSharedEdictChangeInfo()
 T CVEngineServer::GetSinglePlayerSharedMemorySpace(char const*, int)
 T CVEngineServer::GetSplitScreenPlayerAttachToEdict(CEntityIndex)
 T CVEngineServer::GetSplitScreenPlayerForEdict(CEntityIndex, int)
 T CVEngineServer::GetTimescale() const
 T CVEngineServer::HasPaintMap()
 T CVEngineServer::InsertServerCommand(char const*)
 T CVEngineServer::IsActiveApp()
 T CVEngineServer::IsAnyClientLowViolence()
 T CVEngineServer::IsClientFullyAuthenticated(CEntityIndex)
 T CVEngineServer::IsClientLowViolence(CEntityIndex)
 T CVEngineServer::IsCreatingReslist()
 T CVEngineServer::IsCreatingXboxReslist()
 T CVEngineServer::IsDecalPrecached(char const*) const
 T CVEngineServer::IsDedicatedServer()
 T CVEngineServer::IsDedicatedServerForXbox()
 T CVEngineServer::IsGenericPrecached(char const*) const
 T CVEngineServer::IsHLTVRelay()
 T CVEngineServer::IsInCommentaryMode()
 T CVEngineServer::IsInEditMode()
 T CVEngineServer::IsInternalBuild()
 T CVEngineServer::IsLevelMainMenuBackground()
 T CVEngineServer::IsLogEnabled()
 T CVEngineServer::IsLowViolence()
 T CVEngineServer::IsMapValid(char const*)
 T CVEngineServer::IsModelPrecached(char const*) const
 T CVEngineServer::IsOverrideLoadGameEntsOn()
 T CVEngineServer::IsPaused()
 T CVEngineServer::IsServerLocalOnly()
 T CVEngineServer::IsSplitScreenPlayer(CEntityIndex)
 T CVEngineServer::IsUserIDInUse(int)
 T CVEngineServer::LightStyle(int, char const*)
 T CVEngineServer::LoadAdjacentEnts(char const*, char const*)
 T CVEngineServer::LoadGameState(char const*, bool)
 T CVEngineServer::LockNetworkStringTables(bool)
 T CVEngineServer::LogPrint(char const*)
 T CVEngineServer::Message_DetermineMulticastRecipients(bool, Vector const&, CBitVec<64>&)
 T CVEngineServer::NotifyEdictFlagsChange(CEntityIndex)
 T CVEngineServer::PaintSurface(model_t const*, Vector const&, Color const&, float)
 T CVEngineServer::ParseFile(char const*, char*, int)
 T CVEngineServer::Pause(bool, bool)
 T CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)
 T CVEngineServer::PrecacheDecal(char const*, bool)
 T CVEngineServer::PrecacheGeneric(char const*, bool)
 T CVEngineServer::PrecacheModel(char const*, bool)
 T CVEngineServer::PrecacheSentenceFile(char const*, bool)
 T CVEngineServer::PvAllocEntPrivateData(long)
 T CVEngineServer::RefreshScreenIfNecessary()
 T CVEngineServer::RemoveAllPaint()
 T CVEngineServer::RemoveEdict(edict_t*)
 T CVEngineServer::ResetPVS(unsigned char*, int)
 T CVEngineServer::SaveAllocMemory(unsigned long, unsigned long)
 T CVEngineServer::SaveFreeMemory(void*)
 T CVEngineServer::SentenceGroupIndexFromName(char const*)
 T CVEngineServer::SentenceGroupNameFromIndex(int)
 T CVEngineServer::SentenceGroupPick(int, char*, int)
 T CVEngineServer::SentenceGroupPickSequential(int, char*, int, int, int)
 T CVEngineServer::SentenceIndexFromName(char const*)
 T CVEngineServer::SentenceLength(int)
 T CVEngineServer::SentenceNameFromIndex(int)
 T CVEngineServer::ServerCommand(char const*)
 T CVEngineServer::ServerExecute()
 T CVEngineServer::SetAchievementMgr(IAchievementMgr*)
 T CVEngineServer::SetAreaPortalState(int, int)
 T CVEngineServer::SetAreaPortalStates(int const*, int const*, int)
 T CVEngineServer::SetDedicatedServerBenchmarkMode(bool)
 T CVEngineServer::SetFakeClientConVarValue(CEntityIndex, char const*, char const*)
 T CVEngineServer::SetGamestatsData(CGamestatsData*)
 T CVEngineServer::SetHLTVChatBan(int, bool)
 T CVEngineServer::SetTimescale(float)
 T CVEngineServer::SetView(CEntityIndex, CEntityIndex)
 T CVEngineServer::SolidMoved(CEntityIndex, ICollideable*, Vector const*, bool)
 T CVEngineServer::StartQueryCvarValue(CEntityIndex, char const*)
 T CVEngineServer::StaticDecal(Vector const&, int, CEntityIndex, int, bool)
 T CVEngineServer::TextMessageGet(char const*)
 T CVEngineServer::TracePaintSurface(model_t const*, Vector const&, float, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T CVEngineServer::TriggerMoved(CEntityIndex, bool)
 T CVGuiPaintHelper::AddUIPanel(unsigned int)
 T CVGuiPaintHelper::Paint(unsigned int, PaintMode_t)
 T CVGuiTree::ApplySchemeSettings(vgui::IScheme*)
 T CVGuiTree::~CVGuiTree()
 T CVPROFToCSVConverter::ConvertVPROJFileToCSVFile(char const*, char const*)
 T CVPROFToCSVConverter::WriteHeaders(char*, int)
 T CVPROFToCSVConverter::WriteNodeDataToDict(CVProfNode*, CUtlMap<char*, double, unsigned short>*)
 T CVProfExport::AddListener()
 T CVProfExport::CalculateBudgetGroupTimes_Recursive(CVProfNode*)
 T CVProfExport::GetBudgetGroupInfos(IVProfExport::CExportedBudgetGroupInfo*)
 T CVProfExport::GetBudgetGroupTimes(float*)
 T CVProfExport::GetNumBudgetGroups()
 T CVProfExport::PauseProfile()
 T CVProfExport::RemoveListener()
 T CVProfExport::ResumeProfile()
 T CVProfExport::SetBudgetFlagsFilter(int)
 T CVProfExport::SnapshotVProfHistory()
 T CVProfExport::VProf_AddDeferredFunction(CUtlDelegate<void (CVProfile*)> const&)
 T CVProfExport::VProf_RemoveDeferredFunction(CUtlDelegate<void (CVProfile*)> const&)
 T CVProfExport::~CVProfExport()
 T CVProfGraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T CVProfGraphPanel::CVProfGraphPanel(unsigned int)
 T CVProfGraphPanel::OnTick()
 T CVProfGraphPanel::Paint(IVGuiPaintSurface*)
 T CVProfGraphPanel::ShouldDraw()
 T CVProfGraphPanel::~CVProfGraphPanel()
 T CVProfLabel::ApplySchemeSettings(vgui::IScheme*)
 T CVProfLabel::CVProfLabel(vgui::Panel*, char const*)
 T CVProfLabel::GetAnimMap()
 T CVProfLabel::GetKBMap()
 T CVProfLabel::GetMessageMap()
 T CVProfLabel::GetPanelClassName()
 T CVProfLabel::~CVProfLabel()
 T CVProfPanel::AddColumns(CProfileHierarchyPanel::ColumnPanels_t&)
 T CVProfPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CVProfPanel::ApplySchemeSettings(vgui::IScheme*)
 T CVProfPanel::CVProfPanel(vgui::Panel*, char const*)
 T CVProfPanel::Close()
 T CVProfPanel::ExpandGroupRecursive(int, CVProfNode*)
 T CVProfPanel::FillTree(KeyValues*, CVProfNode*, int)
 T CVProfPanel::GetAnimMap()
 T CVProfPanel::GetKBMap()
 T CVProfPanel::GetMessageMap()
 T CVProfPanel::GetPanelClassName()
 T CVProfPanel::OnCheckButtonChecked(vgui::Panel*)
 T CVProfPanel::OnCommand(char const*)
 T CVProfPanel::OnTextChanged(KeyValues*)
 T CVProfPanel::OnTick()
 T CVProfPanel::Paint(IVGuiPaintSurface*)
 T CVProfPanel::PerformLayout()
 T CVProfPanel::Reset()
 T CVProfPanel::UpdateProfile(float)
 T CVProfPanel::UpdateVProfTreeEntry(KeyValues*, CVProfNode*, int)
 T CVProfPanel::~CVProfPanel()
 T CVProfRecorder::DumpAverages_R(CUtlVector<CVProfRecorder::CNodeAverage, CUtlMemory<CVProfRecorder::CNodeAverage, int> >&, CVProfNode*)
 T CVProfRecorder::FindVProfNodeByID_R(CVProfNode*, int)
 T CVProfRecorder::Playback_Average(int)
 T CVProfRecorder::Playback_ReadAddNode()
 T CVProfRecorder::Playback_ReadString(char*, int)
 T CVProfRecorder::Playback_ReadTick(int, bool*)
 T CVProfRecorder::Playback_ReadTimings_R(CVProfNode*)
 T CVProfRecorder::Playback_SeekToPercent(float)
 T CVProfRecorder::Playback_SetPlaybackTick(int)
 T CVProfRecorder::Playback_Start(char const*)
 T CVProfRecorder::PoolString(char const*)
 T CVProfRecorder::Record_MatchBudgetGroups(CVProfile*)
 T CVProfRecorder::Record_MatchTree_R(CVProfNode*, CVProfNode const*, CVProfile*)
 T CVProfRecorder::Record_Snapshot()
 T CVProfRecorder::Record_Start(char const*)
 T CVProfRecorder::Record_WriteTimings_R(CVProfNode const*)
 T CVProfRecorder::UpdateAverages_R(CUtlVector<CVProfRecorder::CNodeAverage, CUtlMemory<CVProfRecorder::CNodeAverage, int> >&, CVProfNode*)
 T CVProfRecorder::~CVProfRecorder()
 T CVRenderView::AreAnyLeavesVisible(int*, int)
 T CVRenderView::BeginUpdateLightmaps()
 T CVRenderView::BuildWorldLists(IWorldRenderList*, WorldListInfo_t*, int, VisOverrideData_t const*, bool, float*)
 T CVRenderView::CreateWorldList()
 T CVRenderView::DoesBoxIntersectWaterVolume(Vector const&, Vector const&, int)
 T CVRenderView::Draw3DDebugOverlays()
 T CVRenderView::DrawBrushModel(IClientEntity*, model_t*, Vector const&, QAngle const&, bool)
 T CVRenderView::DrawBrushModelShadow(IClientRenderable*)
 T CVRenderView::DrawBrushModelShadowDepth(IClientEntity*, model_t*, Vector const&, QAngle const&, bool)
 T CVRenderView::DrawIdentityBrushModel(IWorldRenderList*, model_t*)
 T CVRenderView::DrawLightmaps(IWorldRenderList*, int)
 T CVRenderView::DrawLights()
 T CVRenderView::DrawLineFile()
 T CVRenderView::DrawMaskEntities()
 T CVRenderView::DrawTopView(bool)
 T CVRenderView::DrawTranslucentSurfaces(IWorldRenderList*, int*, int, unsigned long)
 T CVRenderView::DrawWorldLists(IWorldRenderList*, unsigned long, float)
 T CVRenderView::EndUpdateLightmaps()
 T CVRenderView::EnumerateLeaf(int, int)
 T CVRenderView::GetAreaBits()
 T CVRenderView::GetBlend()
 T CVRenderView::GetColorModulation(float*)
 T CVRenderView::GetFieldOfView()
 T CVRenderView::GetLightAtPoint(Vector&)
 T CVRenderView::GetMatricesForView(CViewSetup const&, VMatrix*, VMatrix*, VMatrix*, VMatrix*)
 T CVRenderView::GetNumIndicesForWorldLists(IWorldRenderList*, unsigned long)
 T CVRenderView::GetViewEntity()
 T CVRenderView::GetVisibleFogVolume(Vector const&, VisibleFogVolumeInfo_t*)
 T CVRenderView::InstallBrushSurfaceRenderer(IBrushRenderer*)
 T CVRenderView::IsViewEntity(int)
 T CVRenderView::LeafContainsTranslucentSurfaces(IWorldRenderList*, int, unsigned long)
 T CVRenderView::OLD_SetOffCenterProjectionMatrix(float, float, float, float, float, float, float, float)
 T CVRenderView::OLD_SetProjectionMatrix(float, float, float)
 T CVRenderView::OLD_SetProjectionMatrixOrtho(float, float, float, float, float, float)
 T CVRenderView::OverrideViewFrustum(VPlane*)
 T CVRenderView::PopView(VPlane*)
 T CVRenderView::Push2DView(CViewSetup const&, int, ITexture*, VPlane*)
 T CVRenderView::Push3DView(CViewSetup const&, int, ITexture*, VPlane*)
 T CVRenderView::Push3DView(CViewSetup const&, int, ITexture*, VPlane*, ITexture*)
 T CVRenderView::RemapWorldMaterial(IMaterial*, IMaterial*)
 T CVRenderView::SceneBegin()
 T CVRenderView::SceneEnd()
 T CVRenderView::SetAreaState(unsigned char*, unsigned char*)
 T CVRenderView::SetBlend(float)
 T CVRenderView::SetColorModulation(float const*)
 T CVRenderView::SetFogVolumeState(int, bool)
 T CVRenderView::SetMainView(Vector const&, QAngle const&)
 T CVRenderView::TopViewBounds(Vector2D const&, Vector2D const&)
 T CVRenderView::TouchLight(dlight_t*)
 T CVRenderView::UpdateBrushModelLightmap(model_t*, IClientRenderable*)
 T CVRenderView::VGui_Paint(int)
 T CVRenderView::VguiPaint()
 T CVRenderView::ViewDrawFade(unsigned char*, IMaterial*)
 T CVRenderView::ViewSetupVis(bool, int, Vector const*)
 T CVRenderView::ViewSetupVisEx(bool, int, Vector const*, unsigned int&)
 T CVTFTexture::BlendCubeMapCornerPalettes(int, int, CCornerMatch const*)
 T CVTFTexture::BlendCubeMapEdgePalettes(int, int, CEdgeMatch const*)
 T CVTFTexture::BlendCubeMapFaceCorners(int, int, CCornerMatch const*)
 T CVTFTexture::BlendCubeMapFaceEdges(int, int, CEdgeMatch const*)
 T CVTFTexture::BuildCubeMapMatchLists(CEdgeMatch*, CCornerMatch*, bool)
 T CVTFTexture::BumpScale() const
 T CVTFTexture::ComputeAlphaFlags()
 T CVTFTexture::ComputeFaceSize(int) const
 T CVTFTexture::ComputeHemispheremapFrame(unsigned char**, unsigned char*, LookDir_t)
 T CVTFTexture::ComputeMipLevelDimensions(int, int*, int*, int*) const
 T CVTFTexture::ComputeMipLevelSubRect(Rect_t*, int, Rect_t*) const
 T CVTFTexture::ComputeMipSize(int) const
 T CVTFTexture::ComputeReflectivity()
 T CVTFTexture::ComputeTotalSize() const
 T CVTFTexture::ConstructLowResImage()
 T CVTFTexture::ConvertImageFormat(ImageFormat, bool, bool)
 T CVTFTexture::Depth() const
 T CVTFTexture::FaceCount() const
 T CVTFTexture::FaceSizeInBytes(int) const
 T CVTFTexture::FileSize(int) const
 T CVTFTexture::FindOrCreateResourceEntryInfo(unsigned int)
 T CVTFTexture::FixCubemapFaceOrientation()
 T CVTFTexture::Flags() const
 T CVTFTexture::Format() const
 T CVTFTexture::FrameCount() const
 T CVTFTexture::GenerateHemisphereMap(unsigned char*, int, int, LookDir_t, int)
 T CVTFTexture::GenerateMipmaps()
 T CVTFTexture::GenerateSpheremap(LookDir_t)
 T CVTFTexture::GetImageOffset(int, int, int, ImageFormat) const
 T CVTFTexture::GetResourceData(unsigned int, unsigned long*) const
 T CVTFTexture::GetResourceTypes(unsigned int*, int) const
 T CVTFTexture::HasResourceEntry(unsigned int) const
 T CVTFTexture::Height() const
 T CVTFTexture::ImageData()
 T CVTFTexture::ImageData(int, int, int)
 T CVTFTexture::ImageData(int, int, int, int, int, int)
 T CVTFTexture::ImageFileInfo(int, int, int, int*, int*) const
 T CVTFTexture::Init(int, int, int, ImageFormat, int, int, int)
 T CVTFTexture::InitLowResImage(int, int, ImageFormat)
 T CVTFTexture::IsCubeMap() const
 T CVTFTexture::IsNormalMap() const
 T CVTFTexture::IsPreTiled() const
 T CVTFTexture::IsVolumeTexture() const
 T CVTFTexture::LoadImageData(CUtlBuffer&, VTFFileHeader_t const&, int)
 T CVTFTexture::LowResFileInfo(int*, int*) const
 T CVTFTexture::LowResFormat() const
 T CVTFTexture::LowResHeight() const
 T CVTFTexture::LowResImageData()
 T CVTFTexture::LowResWidth() const
 T CVTFTexture::MatchCubeMapBorders(int, ImageFormat, bool)
 T CVTFTexture::MatchCubeMapS3TCPalettes(CEdgeMatch*, CCornerMatch*)
 T CVTFTexture::MipCount() const
 T CVTFTexture::NormalizeTopMipLevel()
 T CVTFTexture::PostProcess(bool, LookDir_t, bool, bool)
 T CVTFTexture::PremultAlphaWithMipFraction()
 T CVTFTexture::PutOneOverMipLevelInAlpha()
 T CVTFTexture::ReadHeader(CUtlBuffer&, VTFFileHeader_t&)
 T CVTFTexture::Reflectivity() const
 T CVTFTexture::RemoveResourceEntryInfo(unsigned int)
 T CVTFTexture::ResourceMemorySection::LoadData(CUtlBuffer&, CByteswap&)
 T CVTFTexture::RowSizeInBytes(int) const
 T CVTFTexture::Serialize(CUtlBuffer&)
 T CVTFTexture::SetAlphaTestThreshholds(float, float)
 T CVTFTexture::SetBumpScale(float)
 T CVTFTexture::SetPostProcessingSettings(VtfProcessingOptions const*)
 T CVTFTexture::SetReflectivity(Vector const&)
 T CVTFTexture::SetResourceData(unsigned int, void const*, unsigned long)
 T CVTFTexture::SetupTextureEdgeIncrements(int, int, int, bool, CEdgeIncrements*)
 T CVTFTexture::Shutdown()
 T CVTFTexture::Unserialize(CUtlBuffer&, bool, int)
 T CVTFTexture::Width() const
 T CVTFTexture::~CVTFTexture()
 T CVarBitVecBase<unsigned short>::ReallocInts(int)
 T CVarBitVecBase<unsigned short>::Resize(int, bool)
 T CVideoMode_Common::AdjustWindow(int, int, int, bool, bool)
 T CVideoMode_Common::CenterEngineWindow(void*, int, int)
 T CVideoMode_Common::CreateGameWindow(int, int, bool, bool)
 T CVideoMode_Common::DrawNullBackground(void*, int, int)
 T CVideoMode_Common::DrawStartupGraphic()
 T CVideoMode_Common::GetClientViewRect() const
 T CVideoMode_Common::GetMode(int)
 T CVideoMode_Common::GetModeCount()
 T CVideoMode_Common::GetModeHeight() const
 T CVideoMode_Common::GetModeWidth() const
 T CVideoMode_Common::InvalidateWindow()
 T CVideoMode_Common::IsWindowedMode() const
 T CVideoMode_Common::MarkClientViewRectDirty()
 T CVideoMode_Common::NoWindowBorder() const
 T CVideoMode_Common::RecomputeClientViewRect()
 T CVideoMode_Common::ResetCurrentModeForNewResolution(int, int, bool, bool)
 T CVideoMode_Common::SetClientViewRect(vrect_t const&)
 T CVideoMode_Common::TakeSnapshotJPEG(char const*, int)
 T CVideoMode_Common::TakeSnapshotJPEGToBuffer(CUtlBuffer&, int)
 T CVideoMode_Common::TakeSnapshotPFMRect(char const*, int, int, int, int, int, int, CubeMapFaceIndex_t)
 T CVideoMode_Common::TakeSnapshotPNGtoBuffer(CUtlBuffer&)
 T CVideoMode_Common::TakeSnapshotTGA(char const*)
 T CVideoMode_Common::TakeSnapshotTGARect(char const*, int, int, int, int, int, int, bool, CubeMapFaceIndex_t)
 T CVideoMode_Common::UpdateWindowPosition()
 T CVideoMode_Common::WriteMovieFrame(MovieInfo_t const&)
 T CVideoMode_MaterialSystem::AdjustForModeChange()
 T CVideoMode_MaterialSystem::ChangeDisplaySettingsToFullscreen(int, int, int)
 T CVideoMode_MaterialSystem::Init()
 T CVideoMode_MaterialSystem::ReadScreenPixels(int, int, int, int, void*, ImageFormat)
 T CVideoMode_MaterialSystem::ReleaseFullScreen()
 T CVideoMode_MaterialSystem::ReleaseVideo()
 T CVideoMode_MaterialSystem::RestoreVideo()
 T CVideoMode_MaterialSystem::SetGameWindow(void*)
 T CVideoMode_MaterialSystem::SetMode(int, int, bool, bool)
 T CVideoMode_MaterialSystem::Shutdown()
 T CVideoMode_MaterialSystem::~CVideoMode_MaterialSystem()
 T CVirtualTerrain::GetTrianglesInSphere(void*, Vector const&, float, virtualmeshtrianglelist_t*)
 T CVirtualTerrain::GetVirtualMesh(void*, virtualmeshlist_t*)
 T CVirtualTerrain::GetWorldspaceBounds(void*, Vector*, Vector*)
 T CVirtualTerrain::LevelInit(dphysdisp_t*, int)
 T CVirtualTerrain::~CVirtualTerrain()
 T CVisibleFogVolumeQuery::RecursiveGetVisibleFogVolume(mnode_t*)
 T CVmtTextEntry::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CVmtTextEntry::CVmtTextEntry(vgui::Panel*, char const*)
 T CVmtTextEntry::GetAnimMap()
 T CVmtTextEntry::GetKBMap()
 T CVmtTextEntry::GetMessageMap()
 T CVmtTextEntry::GetPanelClassName()
 T CVmtTextEntry::OpenEditMenu()
 T CVmtTextEntry::OpenVmtSelected()
 T CVmtTextEntry::~CVmtTextEntry()
 T CVoiceChannel::Init(int, float)
 T CVoiceServer::GetClientListening(int, int)
 T CVoiceServer::SetClientListening(int, int, bool)
 T CVoiceServer::SetClientProximity(int, int, bool)
 T CVoiceServer::~CVoiceServer()
 T CVoiceSfx::getname(char*, unsigned long)
 T CVoiceWriter::AddDecompressedData(CVoiceChannel*, unsigned char const*, unsigned long)
 T CVoiceWriter::Finish()
 T CVoiceWriter::Flush()
 T CVoiceWriter::~CVoiceWriter()
 T CVoiceWriterData::CVoiceWriterData(CVoiceWriterData const&)
 T CVoiceWriterData::Less(CVoiceWriterData const&, CVoiceWriterData const&)
 T CVoxelHash::EnumerateElementsAlongRay_ExtrudedRaySlice(int, IPartitionEnumerator*, CIntersectSweptBox const&, int*, int*, int, int*)
 T CVoxelHash::EnumerateElementsAtPoint(int, Voxel_t, Vector const&, IPartitionEnumerator*)
 T CVoxelHash::EnumerateElementsInBox(int, Voxel_t, Voxel_t, Vector const&, Vector const&, IPartitionEnumerator*)
 T CVoxelHash::Init(CVoxelTree*, Vector const&, Vector const&, int)
 T CVoxelHash::InsertIntoTree(unsigned short, Vector const&, Vector const&)
 T CVoxelHash::LeafListExtrudedRaySetup(Ray_t const&, Vector const&, Vector const&, Vector const&, int*, int*, int*, float*, float*, float*)
 T CVoxelHash::LeafListRaySetup(Ray_t const&, Vector const&, Vector const&, Voxel_t, int*, float*, float*)
 T CVoxelHash::RemoveFromTree(unsigned short)
 T CVoxelHash::RenderAllObjectsInTree(float)
 T CVoxelHash::RenderGrid()
 T CVoxelHash::RenderObjectInVoxel(unsigned short, CPartitionVisitor*, float)
 T CVoxelHash::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
 T CVoxelHash::Shutdown()
 T CVoxelHash::~CVoxelHash()
 T CVoxelTree::CVoxelTree()
 T CVoxelTree::DrawDebugOverlays()
 T CVoxelTree::ElementMoved(unsigned short, Vector const&, Vector const&)
 T CVoxelTree::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)
 T CVoxelTree::EnumerateElementsAlongRay_ExtrudedRay(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
 T CVoxelTree::EnumerateElementsAlongRay_Ray(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
 T CVoxelTree::EnumerateElementsAtPoint(int, Vector const&, bool, IPartitionEnumerator*)
 T CVoxelTree::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)
 T CVoxelTree::EnumerateElementsInSphere(int, Vector const&, float, bool, IPartitionEnumerator*)
 T CVoxelTree::Init(CSpatialPartition*, int, Vector const&, Vector const&)
 T CVoxelTree::InsertIntoTree(unsigned short, Vector const&, Vector const&)
 T CVoxelTree::RemoveFromTree(unsigned short)
 T CVoxelTree::RenderAllObjectsInTree(float)
 T CVoxelTree::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
 T CVoxelTree::ReportStats(char const*)
 T CVoxelTree::~CVoxelTree()
 T CWaveDataMemoryAsync::IsReadyToMix()
 T CWaveDataMemoryAsync::ReadSourceData(void**, int, int, char*)
 T CWaveDataMemoryAsync::Source()
 T CWaveDataMemoryAsync::~CWaveDataMemoryAsync()
 T CWaveDataStreamAsync::CWaveDataStreamAsync(CAudioSource&, IWaveStreamSource*, char const*, int, int, CSfxTable*, int)
 T CWaveDataStreamAsync::IsReadyToMix()
 T CWaveDataStreamAsync::ReadSourceData(void**, int, int, char*)
 T CWaveDataStreamAsync::Source()
 T CWaveDataStreamAsync::~CWaveDataStreamAsync()
 T CWin32UploadGameStats::CWin32UploadGameStats(netadr_t const&, TGameStatsParameters const&, unsigned int)
 T CWin32UploadGameStats::CloseTCPSocket(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::ConnectToHarvesterServer(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::CreateTCPSocket(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::ReceiveFileUploadSuccess(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::ReceiveOKToSendFile(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::ReceiveProtocolOkay(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::SendGracefulClose(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::SendProtocolVersion(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::SendUploadCommand(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::SendWholeFile(EGameStatsUploadStatus&, CUtlBuffer&)
 T CWin32UploadGameStats::~CWin32UploadGameStats()
 T CWingedEdgeList::AddEdge(Vector const&, Vector const&, int, int)
 T CWingedEdgeList::AddSurface(cplane_t const&)
 T CWingedEdgeList::AdvanceActiveEdgeList(float)
 T CWingedEdgeList::IsOccludingActiveEdgeList(CWingedEdgeList&, float)
 T CWingedEdgeList::IsOccludingEdgeList(CWingedEdgeList&)
 T CWingedEdgeList::QueueVisualization(unsigned char*)
 T CWingedEdgeList::~CWingedEdgeList()
 T CWordTag::CWordTag(CWordTag const&)
 T CWordTag::CWordTag(char const*)
 T CWorldRenderList::Init(int)
 T CWorldRenderList::OnFinalRelease()
 T CWorldRenderList::Purge()
 T CWorldRenderList::~CWorldRenderList()
 T CXboxSystem::AwardAchievement(unsigned int, unsigned int, void**)
 T CXboxSystem::AwardAvatarAsset(unsigned int, unsigned int, void**)
 T CXboxSystem::CancelOverlappedOperation(void*)
 T CXboxSystem::CloseAllContainers()
 T CXboxSystem::CloseContainers(int)
 T CXboxSystem::CreateAsyncHandle()
 T CXboxSystem::CreateSavegameContainer(int, unsigned int)
 T CXboxSystem::CreateSession(unsigned int, unsigned int, unsigned int, unsigned int, unsigned long long*, void*, void**, bool, void**)
 T CXboxSystem::CreateUserSettingsContainer(int, unsigned int)
 T CXboxSystem::DeleteSession(void*, bool, void**)
 T CXboxSystem::DeviceCapacityAdequate(int, unsigned int, char const*)
 T CXboxSystem::DiscoverUserData(unsigned int, char const*)
 T CXboxSystem::EnumerateAchievements(unsigned int, unsigned long long, unsigned int, unsigned int, void*, unsigned int, bool, void**)
 T CXboxSystem::EnumerateStatsByRank(unsigned int, unsigned int, unsigned int, void*, void**, bool, void**)
 T CXboxSystem::EnumerateStatsByXuid(unsigned long long, unsigned int, unsigned int, void*, void**, bool, void**)
 T CXboxSystem::FinishAllContainerWrites()
 T CXboxSystem::FinishContainerWrites(int)
 T CXboxSystem::FlushStats(void*, bool, void**)
 T CXboxSystem::GameHasSavegames()
 T CXboxSystem::GetContainerOpenResult(int)
 T CXboxSystem::GetContainerRemainingSpace(unsigned int)
 T CXboxSystem::GetModSaveContainerNames(char const*, wchar_t const**, char const**)
 T CXboxSystem::GetOverlappedResult(void*, unsigned int*, bool)
 T CXboxSystem::Io_HasOverlappedIoCompleted(XOVERLAPPED*)
 T CXboxSystem::NetGetTitleXnAddr(XNADDR*)
 T CXboxSystem::NetInAddrToXnAddr(ip4_addr, XNADDR*, XNKID*)
 T CXboxSystem::NetRandom(unsigned char*, unsigned int)
 T CXboxSystem::NetXnAddrToInAddr(XNADDR const*, XNKID const*, ip4_addr*)
 T CXboxSystem::NetXnAddrToMachineId(XNADDR const*, unsigned long long*)
 T CXboxSystem::OpenContainers(int)
 T CXboxSystem::ReleaseAsyncHandle(void*)
 T CXboxSystem::SessionArbitrationRegister(void*, unsigned int, unsigned long long, unsigned int*, void*, bool, void**)
 T CXboxSystem::SessionEnd(void*, bool, void**)
 T CXboxSystem::SessionJoinLocal(void*, unsigned int, unsigned int const*, bool const*, bool, void**)
 T CXboxSystem::SessionJoinRemote(void*, unsigned int, unsigned long long const*, bool const*, bool, void**)
 T CXboxSystem::SessionLeaveLocal(void*, unsigned int, unsigned int const*, bool, void**)
 T CXboxSystem::SessionLeaveRemote(void*, unsigned int, unsigned long long const*, bool, void**)
 T CXboxSystem::SessionMigrate(void*, unsigned int, void*, bool, void**)
 T CXboxSystem::SessionSearch(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, _XUSER_PROPERTY*, _XUSER_CONTEXT*, unsigned int*, _XSESSION_SEARCHRESULT_HEADER*, bool, void**)
 T CXboxSystem::SessionStart(void*, unsigned int, bool, void**)
 T CXboxSystem::ShowDeviceSelector(int, bool, unsigned int*, void**)
 T CXboxSystem::ShowSigninUI(unsigned int, unsigned int)
 T CXboxSystem::UserGetContext(unsigned int, unsigned int, unsigned int&)
 T CXboxSystem::UserGetPropertyInt(unsigned int, unsigned int, unsigned int&)
 T CXboxSystem::UserGetSigninState(int)
 T CXboxSystem::UserSetContext(unsigned int, _XUSER_CONTEXT const&, bool, void**)
 T CXboxSystem::UserSetProperty(unsigned int, _XUSER_PROPERTY const&, bool, void**)
 T CXboxSystem::WriteStats(void*, unsigned long long, unsigned int, void*, bool, void**)
 T CXboxSystem::~CXboxSystem()
 T C_ServerClassInfo::C_ServerClassInfo()
 T C_ServerClassInfo::~C_ServerClassInfo()
 T CacheAndUnloadLightmapData()
 T CalcBarycentricCooefs(Vector const&, Vector const&, Vector const&, Vector const&, float&, float&, float&)
 T CalcFovY(float, float)
 T CalcMaxNumVertsAndIndices(int, int*, int*)
 T CalcPathLengths_R(CSendNode*, CUtlVector<int, CUtlMemory<int, int> >&, int, int&)
 T CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
 T CalculateAABBFromProjectionMatrixInverse(VMatrix const&, Vector*, Vector*)
 T CalculateSphereFromProjectionMatrixInverse(VMatrix const&, Vector*, float*)
 T CallPostConnect()
 T Callback_DecalChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_DynamicModelChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_GenericChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_InstanceBaselineChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_ModelChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_SoundChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T Callback_UserInfoChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T CanAdjustTextureSize(char const*, bool)
 T CaselessStringLessThan(char const* const&, char const* const&)
 T Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Cbuf_AddExecutionMarker(ECommandTarget_t, ECmdExecutionMarker)
 T Cbuf_AddText(ECommandTarget_t, char const*, int)
 T Cbuf_Clear(ECommandTarget_t)
 T Cbuf_Execute()
 T Cbuf_GetCurrentPlayer()
 T Cbuf_Init()
 T Cbuf_InsertText(ECommandTarget_t, char const*, int)
 T Cbuf_Shutdown()
 T CeilPow2(int)
 T ChangeCallback_RefreshDrawTree(IConVar*, char const*, float)
 T ChangeVProfScopeCallback(IConVar*, char const*, float)
 T ChannelCopyVolumes(channel_t*, int*, int, int)
 T ChannelLoudestCurVolume(channel_t const*)
 T ChannelSetVolTarget(channel_t*, int, int)
 T ChannelSetVolTargets(channel_t*, float*, int, int)
 T ChannelUpdateVolXfade(channel_t*)
 T CharacterSetBuild(characterset_t*, char const*)
 T CheckImage::Paint(IVGuiPaintSurface*)
 T CheckImage::~CheckImage()
 T CheckNewDspPresets
 T CheckSimpleMaterial(IMaterial*)
 T CheckVarRange_Generic(ConVar*, int, int)
 T CheckVarRange_r_lod()
 T CheckVarRange_r_rootlod()
 T ChildCostSortFunc(KeyValues*, KeyValues*)
 T ClampClientRate(int)
 T CleanupDMX(CDmxElement*)
 T ClearBounds(Vector&, Vector&)
 T ClearCheatCommands()
 T ClearIOStates()
 T ClearMaterialConfigLightingChanged()
 T ClearStaticLightingCache()
 T ClientDLL_Connect()
 T ClientDLL_FrameStageNotify(ClientFrameStage_t)
 T ClientDLL_GameInit()
 T ClientDLL_GameShutdown()
 T ClientDLL_GetAllClasses()
 T ClientDLL_GetFactory()
 T ClientDLL_GetFullscreenClientDLLVPanel()
 T ClientDLL_GetSpectatorTarget(ClientDLLObserverMode_t*)
 T ClientDLL_HudVidInit()
 T ClientDLL_Init()
 T ClientDLL_Load()
 T ClientDLL_OnSplitScreenStateChanged()
 T ClientDLL_ProcessInput()
 T ClientDLL_Shutdown()
 T ClientDLL_Unload()
 T ClientDLL_Update()
 T ClientDLL_VoiceStatus(int, int, bool)
 T ClipChanged(IConVar*, char const*, float)
 T ClipPlaneToFrustum(Vector*, Vector*, Vector*)
 T ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
 T CloseZipU(HZIP__*)
 T CloseZipZ(HZIP__*)
 T Cmd_AddClientCmdCanExecuteVar(char const*)
 T Cmd_Dispatch(ConCommandBase const*, CCommand const&)
 T Cmd_ExecIfExists_f(CCommandContext const&, CCommand const&)
 T Cmd_Exec_f(CCommandContext const&, CCommand const&)
 T Cmd_ExecuteCommand(ECommandTarget_t, CCommand const&, cmd_source_t, int)
 T Cmd_ForwardToServer(CCommand const&, bool)
 T Cmd_Init()
 T Cmd_PropCrosshair_f()
 T Cmd_Shutdown()
 T CodeToByteCode(int)
 T CollisionBSPData_Destroy(CCollisionBSPData*)
 T CollisionBSPData_GetCollisionTree(int)
 T CollisionBSPData_LinkPhysics()
 T CollisionBSPData_Load(char const*, CCollisionBSPData*, texinfo_s*, int)
 T CollisionBSPData_LoadAreaPortals(CCollisionBSPData*)
 T CollisionBSPData_LoadAreas(CCollisionBSPData*)
 T CollisionBSPData_LoadBrushSides(CCollisionBSPData*, texinfo_s*, int)
 T CollisionBSPData_LoadBrushes(CCollisionBSPData*)
 T CollisionBSPData_LoadDispInfo(CCollisionBSPData*, texinfo_s*, int)
 T CollisionBSPData_LoadEntityString(CCollisionBSPData*)
 T CollisionBSPData_LoadLeafBrushes(CCollisionBSPData*)
 T CollisionBSPData_LoadLeafs(CCollisionBSPData*)
 T CollisionBSPData_LoadLeafs_Version_0(CCollisionBSPData*, CMapLoadHelper&)
 T CollisionBSPData_LoadLeafs_Version_1(CCollisionBSPData*, CMapLoadHelper&)
 T CollisionBSPData_LoadNodes(CCollisionBSPData*)
 T CollisionBSPData_LoadPhysics(CCollisionBSPData*)
 T CollisionBSPData_LoadPlanes(CCollisionBSPData*)
 T CollisionBSPData_LoadSubmodels(CCollisionBSPData*)
 T CollisionBSPData_LoadTextures(CCollisionBSPData*)
 T CollisionBSPData_LoadVisibility(CCollisionBSPData*)
 T CollisionBSPData_PreLoad(CCollisionBSPData*)
 T ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
 T ColumnButton::ApplySchemeSettings(vgui::IScheme*)
 T ColumnButton::OnMousePressed(ButtonCode_t)
 T ColumnButton::~ColumnButton()
 T ComboBox_Factory()
 T CompareRecvPropToSendProp(RecvProp const*, SendProp const*)
 T ComplexBufferFillPlayback(OpaqueAudioConverter*, unsigned long*, AudioBufferList*, AudioStreamPacketDescription**, void*)
 T ComputeDecalLightmapOffset(msurface2_t*)
 T ComputeDynamicLighting(Vector const&, Vector const*, Vector&)
 T ComputeIntersectionBarycentricCoordinates(Ray_t const&, Vector const&, Vector const&, Vector const&, float&, float&, float*)
 T ComputeLightRadius(dworldlight_t*, bool)
 T ComputeLighting(Vector const&, Vector const*, bool, bool, Vector&, Vector*)
 T ComputeModFilename(char const*, char*, int)
 T ComputePaintRect(msurface2_t*, Vector const&, VPlane const&, int, PaintRect_t&)
 T ComputePointFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, float, float, Vector2D&)
 T ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
 T ComputeViewMatrices(VMatrix*, VMatrix*, VMatrix*, CViewSetup const&)
 T ComputeViewMatrix(VMatrix*, Vector const&, QAngle const&)
 T ComputeWorldToScreenMatrix(VMatrix*, VMatrix const&, CViewSetup const&)
 T ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T ConCommand::CanAutoComplete()
 T ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 T ConCommand::ConCommand(char const*, void (*)(), char const*, int, void (*)(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&))
 T ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, void (*)(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&))
 T ConCommand::ConCommand(char const*, void (*)(CCommandContext const&, CCommand const&), char const*, int, void (*)(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&))
 T ConCommand::Dispatch(CCommandContext const&, CCommand const&)
 T ConCommand::IsCommand() const
 T ConCommand::~ConCommand()
 T ConCommandBase::AddFlags(int)
 T ConCommandBase::Create(char const*, char const*, int)
 T ConCommandBase::GetDLLIdentifier() const
 T ConCommandBase::GetFlags() const
 T ConCommandBase::GetHelpText() const
 T ConCommandBase::GetName() const
 T ConCommandBase::Init()
 T ConCommandBase::IsFlagSet(int) const
 T ConCommandBase::IsRegistered() const
 T ConCommandBase::RemoveFlags(int)
 T ConCommandBase::Shutdown()
 T ConVar::AddFlags(int)
 T ConVar::ChangeStringValue(char const*, float)
 T ConVar::ClampValue(float&)
 T ConVar::ConVar(char const*, char const*, int)
 T ConVar::ConVar(char const*, char const*, int, char const*)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 T ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::GetBaseName() const
 T ConVar::GetDefault() const
 T ConVar::GetFlags() const
 T ConVar::GetHelpText() const
 T ConVar::GetName() const
 T ConVar::GetSplitScreenPlayerSlot() const
 T ConVar::Init()
 T ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float), bool)
 T ConVar::InternalSetColorValue(Color)
 T ConVar::InternalSetFloatValue(float)
 T ConVar::InternalSetIntValue(int)
 T ConVar::InternalSetValue(char const*)
 T ConVar::IsCommand() const
 T ConVar::IsFlagSet(int) const
 T ConVar::IsRegistered() const
 T ConVar::RemoveChangeCallback(void (*)(IConVar*, char const*, float))
 T ConVar::Revert()
 T ConVar::SetValue(Color)
 T ConVar::SetValue(char const*)
 T ConVar::SetValue(float)
 T ConVar::SetValue(int)
 T ConVar::~ConVar()
 T ConVarRef::ConVarRef(IConVar*)
 T ConVarRef::ConVarRef(char const*)
 T ConVarRef::ConVarRef(char const*, bool)
 T ConVarRef::Init(char const*, bool)
 T ConVarRef::IsValid() const
 T ConVar_PrintDescription(ConCommandBase const*)
 T ConVar_Register(int, IConCommandBaseAccessor*)
 T ConVar_ServerBounded::GetBool() const
 T ConVar_ServerBounded::GetInt() const
 T ConVar_Unregister()
 T Con_ClearNotify()
 T Con_Clear_f()
 T Con_ColorPrint(Color const&, char const*)
 T Con_ColorPrintf(Color const&, char const*, ...)
 T Con_CreateConsolePanel(vgui::Panel*)
 T Con_DebugLog(char const*, ...)
 T Con_HideConsole_f()
 T Con_Init()
 T Con_IsVisible()
 T Con_LogColor_f(CCommand const&)
 T Con_LogDumpChannels_f()
 T Con_LogFlags_f(CCommand const&)
 T Con_LogLevel_f(CCommand const&)
 T Con_LogVerbosity_f(CCommand const&)
 T Con_NPrintf(int, char const*, ...)
 T Con_NXPrintf(con_nprint_s const*, char const*, ...)
 T Con_RunFrame()
 T Con_ShowConsole_f()
 T Con_Shutdown()
 T Con_ToggleConsole_f()
 T ConnectInterfaces(void* (**)(char const*, int*), int)
 T ConnectMDLCacheNotify()
 T ConnectTier1Libraries(void* (**)(char const*, int*), int)
 T ConnectTier2Libraries(void* (**)(char const*, int*), int)
 T ConnectTier3Libraries(void* (**)(char const*, int*), int)
 T ConsoleLogFileCallback(IConVar*, char const*, float)
 T ConsoleLogManager::GetConsoleLogFileHandleForAppend()
 T ConsoleLogManager::GetConsoleLogFilename() const
 T ConsoleLogManager::ReadConsoleLogFile(CUtlBuffer&)
 T ConsoleLogManager::RemoveConsoleLogFile()
 T ConsoleLogSuffixCallback(IConVar*, char const*, float)
 T ConstructNearAndFarPolygons(Vector*, Vector*, float)
 T ConvertListenerVectorTo2D(Vector*, Vector const*)
 T CopyListPanelToClipboard(vgui::ListPanel*)
 T CopyPrecalcedLightingState(lightcache_t*, LightingState_t&, LightingStateInfo_t&)
 T CopyStagedAddons(IFileSystem*, char const*)
 T CopyUniqueId(UniqueId_t const&, UniqueId_t*)
 T CrashThreadProc(void*)
 T CreateADPCMMixer(IWaveData*)
 T CreateAskConnectPanel(unsigned int)
 T CreateCircleBuffer()
 T CreateDemoBuffer(DEMOBUFFERTYPE, DemoBufferInitParams_t const&)
 T CreateDirectoryDialog::CreateDirectoryDialog(vgui::Panel*, char const*)
 T CreateDirectoryDialog::GetAnimMap()
 T CreateDirectoryDialog::GetKBMap()
 T CreateDirectoryDialog::GetMessageMap()
 T CreateDirectoryDialog::GetPanelClassName()
 T CreateDirectoryDialog::OnClose()
 T CreateDirectoryDialog::OnCommand(char const*)
 T CreateDirectoryDialog::PerformLayout()
 T CreateDirectoryDialog::~CreateDirectoryDialog()
 T CreateDmxElement(char const*)
 T CreateInterface
 T CreateInterfaceInternal(char const*, int*)
 T CreateMP3Mixer(IWaveData*, MP3FrameHeader*, int*)
 T CreateSentenceMixer(voxword_t*)
 T CreateSpatialPartition(Vector const&, Vector const&)
 T CreateStaticLightingCache(Vector const&, Vector const&, Vector const&)
 T CreateUniqueId(UniqueId_t*)
 T CreateVProfGraphPanel(vgui::Panel*)
 T CreateVTFTexture()
 T CreateVoiceRecord_AudioQueue(int)
 T CreateVoiceRecord_DSound(int)
 T CreateWave(CSfxTable*, bool)
 T CreateWaveDataMemory(CAudioSource&)
 T CreateWaveDataStream(CAudioSource&, IWaveStreamSource*, char const*, int, int, CSfxTable*, int)
 T CreateWaveMixer(IWaveData*, int, int, int, int)
 T CreateZipZ(void*, unsigned int, unsigned int)
 T Create_CvarToggleCheckButton()
 T CrossProduct(float const*, float const*, float*)
 T Cubemap_CreateDefaultCubemap(char const*, IBSPPack*)
 T CubemapsFSFactory(char const*, int*)
 T DAS_CalcRoomProps(das_room_t*)
 T DAS_CheckNewRoom(das_room_t*)
 T DAS_CheckNewRoomDSP()
 T DAS_CheckNextNode(das_room_t*)
 T DAS_DisplayRoomDEBUG(das_room_t*, bool, float)
 T DAS_GetSurfaceData(das_room_t*, CGameTrace*, das_surfdata_t*)
 T DAS_InitNodes()
 T DAS_SetTraceHeight(das_room_t*, CGameTrace*, CGameTrace*)
 T DAS_StartTraceChecks(das_room_t*)
 T DAS_StoreNode(das_room_t*, int)
 T DAS_TraceNodeToPlayer(das_room_t*, das_node_t*)
 T DAS_UpdateRoomSize(das_room_t*)
 T DEBUG_ShowChannelCount()
 T DEBUG_StartSoundMeasure(int, int)
 T DEBUG_StopSoundMeasure(int, int)
 T DEBUG_drawGainCurve()
 T DFR_Alloc(int*, int*, int*, int)
 T DFR_Free(dfr_t*)
 T DFR_GetNext(dfr_t*, int)
 T DFR_GetNextN(dfr_t*, portable_samplepair_t*, int, int)
 T DFR_Mod(void*, float)
 T DFR_Params(prc_t*)
 T DFR_VParams(void*)
 T DLY_AllocLP(int, int, int, int, int, int, int*, int*)
 T DLY_ChangeTaps(dly_t*, int, int, int, int)
 T DLY_Free(dly_t*)
 T DLY_GetNext(dly_t*, int)
 T DLY_GetNextN(dly_t*, portable_samplepair_t*, int, int)
 T DLY_GetNextXfade(dly_t*, int)
 T DLY_Mod(void*, float)
 T DLY_Params(prc_t*)
 T DLY_VParams(void*)
 T DMXAlloc(unsigned long)
 T DSP_Alloc(int, float, int)
 T DSP_ChangePresetValue(int, int, int, float)
 T DSP_CheckDspAutoEnabled()
 T DSP_CheckRestorePresets()
 T DSP_ClearState
 T DSP_ConstructPreset(bool, int, int, int, float, float, float*, int, int)
 T DSP_DEBUGReloadPresetFile()
 T DSP_DEBUGSetParams(int, int, float*, int)
 T DSP_FastReset(int)
 T DSP_Free(int)
 T DSP_FreeAll
 T DSP_InitAll
 T DSP_LoadPresetFile()
 T DSP_Process
 T DSP_Process5To1(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_Process5To5(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_ProcessQuadToMono(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_ProcessQuadToQuad(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_ProcessQuadToStereo(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_ProcessStereoToMono(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_ProcessStereoToStereo(dsp_t*, portable_samplepair_t*, portable_samplepair_t*, int, bool)
 T DSP_RoomDSPIsOff()
 T DSP_SetDspAuto(int)
 T DSP_SetPreset(int, int)
 T DTI_Flush()
 T DTI_Flush_f()
 T DTI_HookRecvDecoder(CRecvDecoder*)
 T DTI_Init()
 T DTI_Term()
 T DVariant::ToString()
 T DataTable_ClearWriteFlags(ServerClass*)
 T DataTable_ClearWriteFlags_R(SendTable*)
 T DataTable_CreateClientClassInfosFromServerClasses(CBaseClientState*)
 T DataTable_CreateClientTablesFromServerTables()
 T DataTable_GetTypeNameString()
 T DataTable_LoadDataTablesFromBuffer(bf_read*, int)
 T DataTable_MaybeCreateReceiveTable(CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >&, SendTable*, bool)
 T DataTable_MaybeCreateReceiveTable_R(CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >&, SendTable*)
 T DataTable_ParseClassInfosFromBuffer(CDemoClassInfo const&)
 T DataTable_SetupReceiveTableFromSendTable(SendTable*, bool)
 T DataTable_Warning(char const*, ...)
 T DataTable_WriteClassInfosBuffer(ServerClass*, CDemoClassInfo&)
 T DataTable_WriteSendTablesBuffer(ServerClass*, bf_write*)
 T DbReferenceChanged(IConVar*, char const*, float)
 T DebugDrawPhysCollide(CPhysCollide const*, IMaterial*, matrix3x4_t const&, color32 const&, bool)
 T DecalListCreate(decallist_t*)
 T DecalSortTreeSortLessFunc(DecalMaterialSortData_t const&, DecalMaterialSortData_t const&)
 T DecalSortTrees_t::DecalSortTrees_t()
 T DecalSortTrees_t::~DecalSortTrees_t()
 T DecalSurfaceAdd(msurface2_t*, int)
 T DecalSurfaceDraw(IMatRenderContext*, int, float)
 T DecalSurfaceDraw_NonQueued(IMatRenderContext*, int, Vector const&, int, float)
 T DecalSurfaceDraw_QueueHelper(bool, int, Vector, int, decal_t**, int, int, int, float)
 T DecalSurfacesInit(bool)
 T DecalUpdateAndDrawSingle(decalcontext_t&, msurface2_t*, decal_t*)
 T Decal_Init()
 T Decal_Shutdown()
 T DefaultCompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T DefaultConditionalErrorProc(char const*)
 T DefaultConditionalSymbolProc(char const*)
 T DemoOverlay::DrawOverlay(float)
 T DestroySpatialPartition(ISpatialPartition*)
 T DestroyVProfGraphPanel()
 T DestroyVTFTexture(IVTFTexture*)
 T DevShotGenerator()
 T DevShotGenerator_Init()
 T DevShotGenerator_Shutdown()
 T DeveloperChangeCallback(IConVar*, char const*, float)
 T Device_ApplyDSPEffects(int, portable_samplepair_t*, portable_samplepair_t*, portable_samplepair_t*, int)
 T Device_Mix16Mono(channel_t*, short*, int, int, unsigned int, int, int)
 T Device_Mix16Stereo(channel_t*, short*, int, int, unsigned int, int, int)
 T Device_Mix8Mono(channel_t*, char*, int, int, unsigned int, int, int)
 T Device_Mix8Stereo(channel_t*, char*, int, int, unsigned int, int, int)
 T Device_MixUpsample(int, int)
 T Device_SpatializeChannel(int, float*, Vector const&, float, float)
 T Device_SpatializeChannel(int, int*, int, Vector const&, float, float, int)
 T DisconnectInterfaces()
 T DisconnectMDLCacheNotify()
 T DisconnectTier1Libraries()
 T DisconnectTier2Libraries()
 T DisconnectTier3Libraries()
 T DispCollTrees_Alloc(int)
 T DispCollTrees_Free(CDispCollTree*)
 T DispCollTrees_FreeLeafList(CCollisionBSPData*)
 T DispInfoRenderDebugModes()
 T DispInfo_AddShadowsToMeshBuilder(CMeshBuilder&, unsigned short, int)
 T DispInfo_BatchDecals(CDispInfo**, int)
 T DispInfo_BuildPrimLists(int, msurface2_t**, int, bool, CDispInfo**, int&)
 T DispInfo_ClearAllTags(void*)
 T DispInfo_ComputeIndex(void*, IDispInfo*)
 T DispInfo_CreateArray(int)
 T DispInfo_CreateEmptyStaticBuffers(model_t*, ddispinfo_t const*)
 T DispInfo_CreateFromMapDisp(model_t*, int, ddispinfo_t const*, CCoreDispInfo*, CDispVert const*, CDispTri const*, CDispMultiBlend const*, MaterialSystem_SortInfo_t const*, bool)
 T DispInfo_CreateMaterialGroups(model_t*, MaterialSystem_SortInfo_t const*)
 T DispInfo_DeleteArray(void*)
 T DispInfo_DrawDecalMeshList(DecalMeshList_t&)
 T DispInfo_DrawDecals(CDispInfo**, int)
 T DispInfo_DrawDecalsGroup(int, int)
 T DispInfo_DrawPrimLists(int, ERenderDepthMode)
 T DispInfo_GetVisibleDispsAndAddOverlayFragmentsToRenderList(int, msurface2_t**, int, CDispInfo**, int&)
 T DispInfo_IndexArray(void*, int)
 T DispInfo_LoadDisplacements(model_t*, bool)
 T DispInfo_ReleaseMaterialSystemObjects(model_t*)
 T DispInfo_RenderListDebug(msurface2_t**, int)
 T DispInfo_RenderListDecalsAndOverlays(int, msurface2_t**, int, bool, unsigned long)
 T DispInfo_RenderListWorld(int, msurface2_t**, int, bool, unsigned long, ERenderDepthMode)
 T DispInfo_SetVisibility(model_t*, int, bool)
 T DisplaySystemVersion(char*, int)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)
 T DownloadCache::BuildKeyNames(char const*)
 T DownloadCache::GenerateCacheFilename(RequestContext const*, char*)
 T DownloadCache::GetCachedData(RequestContext*)
 T DownloadCache::Init()
 T DownloadCache::PersistToCache(RequestContext const*)
 T DownloadCache::PersistToDisk(RequestContext const*)
 T DownloadListGenerator()
 T DownloadManager::CheckActiveDownload()
 T DownloadManager::FileDenied(char const*, unsigned int, bool)
 T DownloadManager::FileReceived(char const*, unsigned int, bool)
 T DownloadManager::PruneCompletedRequests()
 T DownloadManager::Queue(char const*, char const*)
 T DownloadManager::QueueHTTPDownload(char const*, char const*)
 T DownloadManager::Reset()
 T DownloadManager::StartNewDownload()
 T DownloadManager::UpdateProgressBar()
 T DownloadManager::~DownloadManager()
 T DownloadThread(void*)
 T Dragger::Dragger(int)
 T Dragger::OnCursorMoved(int, int)
 T Dragger::OnMouseDoublePressed(ButtonCode_t)
 T Dragger::OnMousePressed(ButtonCode_t)
 T Dragger::OnMouseReleased(ButtonCode_t)
 T Dragger::SetMovable(bool)
 T Dragger::~Dragger()
 T DrawColoredText(IVGuiPaintSurface*, unsigned long, int, int, int, int, int, int, wchar_t const*)
 T DrawDebugPolygon(int, Vector*, bool, bool)
 T DrawDecalsOnSingleSurface(IMatRenderContext*, msurface2_t*)
 T DrawDecalsOnSingleSurface_QueueHelper(msurface2_t*, Vector)
 T DrawLeafvis(leafvis_t*)
 T DrawLeafvis_Solid(leafvis_t*)
 T DrawLightDebuggingInfo()
 T DrawLightSprites()
 T DrawLightmapPage(int)
 T DrawModelDebugOverlay(DrawModelInfo_t const&, DrawModelResults_t const&, Vector const&, float, float, float)
 T DrawPolygonToStencil(IMatRenderContext*, int, Vector*, bool, bool)
 T DrawSavedModelDebugOverlays()
 T DrawScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, void*, int, int, float)
 T DrawSpotLight(dworldlight_t*)
 T DrawTextLen(IVGuiPaintSurface*, unsigned long, wchar_t const*)
 T Draw_DecalIndexFromName(char*, bool*)
 T Draw_DecalMaterial(int)
 T Draw_DecalMax()
 T Draw_DecalNameFromIndex(int)
 T Draw_DecalSetName(int, char*)
 T DumpFilePaths(char const*)
 T DumpPanels_r(unsigned int, int, bool)
 T EDICT_NUM(int)
 T ED_Alloc(int)
 T ED_AllowImmediateReuse()
 T ED_ClearEdict(edict_t*)
 T ED_ClearFreeEdictList()
 T ED_Free(edict_t*)
 T ED_NumAvailableEdicts()
 T EDemoCommands_descriptor()
 T EFO_Alloc(float, float, float, bool)
 T EFO_Free(efo_t*)
 T EFO_GetNext(efo_t*, int)
 T EFO_GetNextN(efo_t*, portable_samplepair_t*, int, int)
 T EFO_Mod(void*, float)
 T EFO_VParams(void*)
 T ENV_Alloc(int, float, float, float, float, float, float, float, bool)
 T ENV_Free(env_t*)
 T ENV_GetNext(env_t*, int)
 T ENV_GetNextN(env_t*, portable_samplepair_t*, int, int)
 T ENV_Mod(void*, float)
 T ENV_VParams(void*)
 T ENetworkDisconnectionReason_IsValid(int)
 T ENetworkDisconnectionReason_descriptor()
 T EditorToggle_f()
 T EnableHDR(bool)
 T EndDMXContext(bool)
 T EndLoadingUpdates()
 T EndTrace(TraceInfo_t*&)
 T EngineBitBufErrorHandler(BitBufErrorType, char const*)
 T EngineSoundClient()
 T EngineTool_CheckQuitHandlers()
 T EngineTool_InstallQuitHandler(void*, bool (*)(void*))
 T EngineTool_OverrideSampleRate(int&)
 T EngineTool_SuppressDeInit()
 T EngineTool_UpdateScreenshot()
 T EngineTraceRenderRayCasts()
 T EngineTrace_SetWorldModel(char const*)
 T EngineVGui()
 T Engine_WorldLightAngle(dworldlight_t const*, Vector const&, Vector const&, Vector const&)
 T Engine_WorldLightDistanceFalloff(dworldlight_t const*, Vector const&, bool)
 T EnsureDirectory(char const*, char const*)
 T EvaluateExpression(char const*, float)
 T FLT_Free(flt_t*)
 T FLT_GetNext(flt_t*, int)
 T FLT_GetNextN(flt_t*, portable_samplepair_t*, int, int)
 T FLT_Mod(void*, float)
 T FLT_Params(prc_t*)
 T FLT_VParams(void*)
 T FUseHighQualityPitch(channel_t*)
 T FastDelegate1<CVProfile*, void>::InvokeStaticFunction(CVProfile*) const
 T FastPow(float, float)
 T FastPow10(float)
 T FileSystem_GetExecutableDir(char*, int)
 T FileSystem_IsHldsUpdateToolDedicatedServer()
 T FileSystem_LoadModule(char const*)
 T FileSystem_LoadSearchPaths(CFSSearchPathsInit&)
 T FileSystem_SetWhitelistSpewFlags()
 T FileSystem_UnloadModule(CSysModule*)
 T FileSystem_UpdateAddonSearchPaths(IFileSystem*)
 T FillPathEntries_R(CSendTablePrecalc*, CSendNode*, CSendNode*, int&)
 T FillStaticBuffer(CGroupMesh*, CDispInfo*, CCoreDispInfo const*, CDispVert const*, int)
 T Filter_StringToUserID(char const*)
 T FindAmbientLight()
 T FindClosestPointToTriangle(Vector const&, Vector const&, Vector const&, Vector const&)
 T FindFlagsCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T FindMinBrush(CCollisionBSPData*, int, int)
 T FindOrAddMesh(IMaterial*, int)
 T FindOrAddPanelAnimationMap(char const*)
 T FindRecvTable(char const*)
 T FindZipItemA(HZIP__*, char const*, bool, int*, ZIPENTRY*)
 T FinishAsyncSave()
 T FirstModelInShadow(unsigned short)
 T FirstShadowOnModel(unsigned short)
 T FirstShadowOnModelInstance(unsigned short)
 T FloatBitMap_t::Clear(float, float, float, float)
 T FloatBitMap_t::CompressTo8Bits(float)
 T FloatBitMap_t::FloatBitMap_t(int, int, int, int)
 T FloatBitMap_t::Init(int, int, int, int)
 T FloatBitMap_t::RaiseToPower(float)
 T FloatBitMap_t::WritePFM(char const*)
 T FloatCubeMap_t::FloatCubeMap_t(int, int)
 T FloatCubeMap_t::WritePFMs(char const*)
 T Float_Decode(DecodeInfo*)
 T Float_DecodeZero(DecodeInfo*)
 T Float_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T Float_GetTypeNameString()
 T Float_IsEncodedZero(SendProp const*, bf_read*)
 T Float_SkipProp(SendProp const*, bf_read*)
 T FloodArea_r(CCollisionBSPData*, carea_t*, int)
 T FlushDeltaBitsTrackingData()
 T FlushLOD_f()
 T FogUI_f()
 T ForceMatSysRestore()
 T FormatZipMessageU(unsigned int, char*, unsigned int)
 T FreeDsps
 T FrustumPlanesFromMatrix(VMatrix const&, Frustum_t&)
 T Frustum_t::Frustum_t()
 T Frustum_t::GetPlane(int, Vector*, float*) const
 T Frustum_t::GetPlanes(VPlane*) const
 T Frustum_t::Intersects(Vector const&, Vector const&) const
 T Frustum_t::SetPlane(int, Vector const&, float)
 T Frustum_t::SetPlanes(VPlane const*)
 T FullViewColorAdjustment()
 T FunctorExecuteThread(void*)
 T GL_LoadMaterial(char const*, char const*, bool)
 T GL_RebuildLightmaps()
 T GL_UnloadMaterial(IMaterial*)
 T Gain_To_Amplitude(float)
 T GameFactory(char const*, int*)
 T GenerateLineLoopIndexBuffer(unsigned short*, int, int)
 T GenerateLineStripIndexBuffer(unsigned short*, int, int)
 T GenerateLumpFileName(char const*, char*, int, int)
 T GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
 T GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
 T GeneratePolygonIndexBuffer(unsigned short*, int, int)
 T GenerateQuadIndexBuffer(unsigned short*, int, int)
 T GenerateSequentialIndexBuffer(unsigned short*, int, int)
 T GenericThreadLocals::CThreadLocal<unsigned int>::~CThreadLocal()
 T GenericThreadLocals::CThreadLocalInt<int>::~CThreadLocalInt()
 T GenericThreadLocals::CThreadLocalPtr<CSplitScreen::SplitSlot_t>::~CThreadLocalPtr()
 T Generic_FastCopy(SendProp const*, RecvProp const*, unsigned char const*, unsigned char*, int)
 T GetAllAreaFrustums(Frustum_t**, int)
 T GetAppModName(ESourceApp)
 T GetAppSteamAppId(ESourceApp)
 T GetAreaFrustum(int)
 T GetBaseLocalClient()
 T GetBudgetPanel()
 T GetBumpNormals(Vector const&, Vector const&, Vector const&, Vector const&, Vector*)
 T GetCStringCharConversion()
 T GetClientClassname(int)
 T GetClientVersion()
 T GetConsoleLogFileData(CUtlBuffer&)
 T GetDedicatedServerAppId()
 T GetDefaultKeyBindings()
 T GetEdgeIndexFromPoint(CVertIndex const&, int)
 T GetFileFromRemoteStorage(ISteamRemoteStorage*, char const*, char const*)
 T GetFlagString(int)
 T GetGameInputContext()
 T GetGameLastMouseMoveTime()
 T GetHostVersion()
 T GetIntersectingSurfaces_R(GetIntersectingSurfaces_Struct*, mnode_t*)
 T GetLanguageShortName(ELanguage)
 T GetLocalClient(int)
 T GetMP3Duration_Helper(char const*)
 T GetMapPathNameOnDisk(char*, char const*, unsigned int)
 T GetMaterialSystemConfigForBenchmarkUpload(KeyValues*)
 T GetModContentSubdirectory(char const*, char*, int)
 T GetModSubdirectory(char const*, char*, int)
 T GetNoEscCharConversion()
 T GetObjectClassName(int)
 T GetPanelAnimationDictionary()
 T GetPanelMessageMapDictionary()
 T GetPlatformMapPath(char const*, char*, int)
 T GetPowerInfo(int)
 T GetRam()
 T GetSaveMemory()
 T GetScreenAspect(int, int)
 T GetServerVersion()
 T GetSoundTime()
 T GetSpew(char*, unsigned long)
 T GetSteamAppID()
 T GetSteamUniverse()
 T GetSuggestedBinding(char const*, KeyValues*)
 T GetUserIDString(USERID_s const&)
 T GetVProfPanel()
 T GetVideoConfig()
 T GetZipItemA(HZIP__*, int, ZIPENTRY*)
 T Get_idsp_room()
 T HKeySymbolLessFunc(int const&, int const&)
 T HLTV_Client_Printf(char const*, ...)
 T HSLToRGB(int*, int*, int*)
 T HSVtoRGB(Vector const&, Vector&)
 T HasZipSuffix(char const*)
 T Hash12(void const*)
 T HashBlock(void const*, unsigned int)
 T HashString(char const*)
 T HashStringCaseless(char const*)
 T Heartbeat_f()
 T HideAskConnectPanel()
 T HideVProfGraphPanel()
 T HostState_ChangeLevelMP(char const*, char const*)
 T HostState_ChangeLevelSP(char const*, char const*)
 T HostState_Frame(float)
 T HostState_GameShutdown()
 T HostState_GetNewLevel()
 T HostState_Init()
 T HostState_IsGameShuttingDown()
 T HostState_IsTransitioningToLoad()
 T HostState_LoadGame(char const*, bool, bool)
 T HostState_NewGame(char const*, bool, bool, bool, bool)
 T HostState_OnClientConnected()
 T HostState_OnClientDisconnected()
 T HostState_Restart()
 T HostState_RunGameInit()
 T HostState_SetSpawnPoint(Vector&, QAngle&)
 T HostState_Shutdown()
 T Host_AccumulateTime(float)
 T Host_AllowQueuedMaterialSystem(bool)
 T Host_BeginThreadedSound()
 T Host_BuildConVarUpdateMessage(CMsg_CVars*, int, bool)
 T Host_BuildUserInfoUpdateMessage(int, CMsg_CVars*, bool)
 T Host_Changelevel(bool, char const*, char const*)
 T Host_Changelevel2_f(CCommandContext const&, CCommand const&)
 T Host_Changelevel_f(CCommandContext const&, CCommand const&)
 T Host_CheckDumpMemoryStats()
 T Host_CleanupConVarStringValue(char const*)
 T Host_Client_Printf(char const*, ...)
 T Host_CountVariablesWithFlags(int, bool)
 T Host_Disconnect(bool)
 T Host_EndGame(bool, char const*, ...)
 T Host_EndThreadedSound()
 T Host_EnsureHostNameSet()
 T Host_Error(char const*, ...)
 T Host_FreeStateAndWorld(bool)
 T Host_FreeToLowMark(bool)
 T Host_GetHostInfo(float*, int*, int*, char*, int)
 T Host_GetServerCount()
 T Host_GetServerSimulationFrameTime()
 T Host_GetSoundDuration(char const*)
 T Host_Init(bool)
 T Host_InitProcessor()
 T Host_IsSinglePlayerGame()
 T Host_LightCrosshair()
 T Host_Loadgame_f(CCommandContext const&, CCommand const&)
 T Host_Map_Background_f(CCommandContext const&, CCommand const&)
 T Host_Map_Commentary_f(CCommandContext const&, CCommand const&)
 T Host_Map_Helper(CCommand const&, EMapFlags)
 T Host_Map_Network_Backdoor_f(CCommandContext const&, CCommand const&)
 T Host_Map_f(CCommandContext const&, CCommand const&)
 T Host_NewGame(char*, bool, bool, bool, bool, char const*, char const*)
 T Host_PrintDemoList()
 T Host_PrintMemoryStatus()
 T Host_Quit_f()
 T Host_ReadConfiguration(int, bool)
 T Host_ReadPreStartupConfiguration()
 T Host_RecomputeSpeed_f()
 T Host_RunFrame(float)
 T Host_RunNetworkFrame()
 T Host_RunNetworkSendQueuedPackets()
 T Host_SetAudioState(AudioState_t const&)
 T Host_ShouldRun()
 T Host_ShowIPCCallCount()
 T Host_Shutdown()
 T Host_ShutdownServer()
 T Host_SplitScreen_Map_f(CCommandContext const&, CCommand const&)
 T Host_Stats_f()
 T Host_Status_PrintClient(IClient*, bool, void (*)(char const*, ...))
 T Host_UpdateMapList()
 T Host_UpdateSounds()
 T Host_VoiceRecordStart_f()
 T Host_VoiceRecordStop_f(CCommand const&)
 T Host_VoiceToggle_f(CCommand const&)
 T Host_WriteConfiguration(int, char const*)
 T Hunk_Alloc(int, bool)
 T Hunk_AllocName(int, char const*, bool)
 T Hunk_FreeToLowMark(int)
 T Hunk_LowMark()
 T Hunk_OnMapStart(int)
 T Hunk_Print()
 T IAssertionFailureListener::MiniDumpHandler(MiniDumpHandlerData_t const&, char const*, char const*, int, char const*, char const*, int, AssertionType_t, bool)
 T IAssertionFailureListener::~IAssertionFailureListener()
 T IAudioDevice::AutoDetectInit()
 T IAudioDevice::PaintEnd()
 T IClientRenderable::Unused() const
 T IDemoMessage::~IDemoMessage()
 T IGameEventListener2::~IGameEventListener2()
 T ILoggingListener::OnChannelFlagsChanged(int)
 T ILoggingListener::OnChannelRegistered(int)
 T ILoggingListener::OnChannelVerbosityChanged(int)
 T IN_BudgetDown()
 T IN_BudgetUp()
 T IN_VProfChild()
 T IN_VProfDown()
 T IN_VProfNamed(CCommand const&)
 T IN_VProfNamedAutoComplete(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T IN_VProfNextSibling()
 T IN_VProfParent()
 T IN_VProfPrevSibling()
 T IN_VProfUp()
 T INetMessage::~INetMessage()
 T IVModelInfo::Unused0()
 T IceKey::IceKey(int)
 T IceKey::encrypt(unsigned char const*, unsigned char*) const
 T IceKey::scheduleBuild(unsigned short*, int, int const*)
 T IceKey::set(unsigned char const*)
 T IceKey::~IceKey()
 T ImageLoader::CKernelWrapper<0, false>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, false>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, true>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, true>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, false>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, false>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, true>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, true>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, false>::AddAlphaToAlphaResult(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float, float*)
 T ImageLoader::CKernelWrapper<2, false>::AdjustAlphaChannel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*)
 T ImageLoader::CKernelWrapper<2, false>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, false>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, true>::AddAlphaToAlphaResult(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float, float*)
 T ImageLoader::CKernelWrapper<2, true>::AdjustAlphaChannel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*)
 T ImageLoader::CKernelWrapper<2, true>::ApplyKernel(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, true>::ComputeAveragedColor(KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::ComputeBicubicFilterKernel(float, float, float, KernelInfo_t*)
 T ImageLoader::ComputeNiceFilterKernel(float, float, float, KernelInfo_t*)
 T ImageLoader::ConvertImageFormat(unsigned char const*, ImageFormat, unsigned char*, ImageFormat, int, int, int, int)
 T ImageLoader::ConvertImageFormat_RGB323232F_To_BGRA8888(float*, unsigned char*, int, int)
 T ImageLoader::ConvertImageFormat_RGB323232F_To_RGBA8888(float*, unsigned char*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGB323232F(float16*, float*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGBA16161616(float16*, unsigned short*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGBA323232F(float16*, float*, int, int, unsigned long)
 T ImageLoader::ConvertImageFormat_RGBA16161616_To_RGBA16161616F(unsigned short*, float*, int, int)
 T ImageLoader::ConvertNormalMapARGB8888ToDXT5GA(unsigned char const*, unsigned char*, int, int)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUV88(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUVLX8888(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUVWQ8888(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::FlipImageHorizontally(void*, void*, int, int, ImageFormat, int)
 T ImageLoader::FlipImageVertically(void*, void*, int, int, ImageFormat, int)
 T ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)
 T ImageLoader::GetMemRequired(int, int, int, ImageFormat, bool, int*)
 T ImageLoader::GetMemRequired(int, int, int, int, ImageFormat, int*)
 T ImageLoader::GetNumMipMapLevels(int, int, int)
 T ImageLoader::ImageFormatInfo(ImageFormat)
 T ImageLoader::NormalizeNormalMapRGBA8888(unsigned char*, int)
 T ImageLoader::ResampleRGB323232F(ImageLoader::ResampleInfo_t const&)
 T ImageLoader::ResampleRGBA32323232F(ImageLoader::ResampleInfo_t const&)
 T ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)
 T ImageLoader::RotateImage180(unsigned char const*, unsigned char*, int, ImageFormat)
 T ImageLoader::RotateImageLeft(unsigned char const*, unsigned char*, int, ImageFormat)
 T ImprovedPerlinNoise(Vector const&)
 T InFileRIFF::InFileRIFF(char const*, IFileReadBinary&)
 T InFileRIFF::~InFileRIFF()
 T IncrementalUpdateTree(vgui::TreeView*, KeyValues*, bool (*)(vgui::TreeView*, int, KeyValues*), int)
 T IncrementalUpdateTree_R(vgui::TreeView*, int, KeyValues*, bool&, bool (*)(vgui::TreeView*, int, KeyValues*))
 T InitDLightGlobals(int)
 T InitExtraClientCmdCanExecuteVars()
 T InitMaterialSystem()
 T InitMaterialSystemConfig(bool)
 T InitMathlib()
 T InitMixerControls()
 T InitNetConsole()
 T InitPowerInfo(CPowerInfo*, int)
 T InitStartupScreen()
 T InitStudioModelState(model_t*)
 T InitStudioRender()
 T InitWellKnownRenderTargets()
 T InitializeEntityDLLFields(edict_t*)
 T InitializeStandardMaterials()
 T InstallBitBufErrorHandler()
 T InstallConVarHook()
 T InstallProtobufLogHandler()
 T InstanceRegistry(char const*)
 T Int64_Decode(DecodeInfo*)
 T Int64_DecodeZero(DecodeInfo*)
 T Int64_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T Int64_GetTypeNameString()
 T Int64_IsEncodedZero(SendProp const*, bf_read*)
 T Int64_SkipProp(SendProp const*, bf_read*)
 T Int_Decode(DecodeInfo*)
 T Int_DecodeZero(DecodeInfo*)
 T Int_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T Int_GetTypeNameString()
 T Int_IsEncodedZero(SendProp const*, bf_read*)
 T Int_SkipProp(SendProp const*, bf_read*)
 T InterfaceReg::InterfaceReg(void* (*)(), char const*)
 T IntersectRayWithAAPlane(Vector const&, Vector const&, int, float, float)
 T IntersectRayWithBox(Ray_t const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithBox(Ray_t const&, VectorAligned const&, VectorAligned const&, VectorAligned const&, CGameTrace*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithBoxBrush(TraceInfo_t*, cbrush_t const*, cboxbrush_t*)
 T IntersectRayWithOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithPlane(Vector const&, Vector const&, Vector const&, float)
 T IntersectRayWithRay(Ray_t const&, Ray_t const&, float&, float&)
 T IntersectRayWithTriangle(Ray_t const&, Vector const&, Vector const&, Vector const&, bool)
 T InvalidateSharedEdictChangeInfos()
 T InvalidateStaticLightingCache()
 T InvalidateUniqueId(UniqueId_t*)
 T IsAppPrivateBeta()
 T IsAskConnectPanelActive(char*, int)
 T IsBoxIntersectingBox(Vector const&, Vector const&, Vector const&, Vector const&)
 T IsBoxIntersectingRay(Vector const&, Vector const&, Ray_t const&, float)
 T IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, Ray_t const&, float)
 T IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingSphereExtents(Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingTriangle(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, cplane_t const&, float)
 T IsCircleIntersectingRectangle(Vector2D const&, Vector2D const&, Vector2D const&, float)
 T IsPointInBox(Vector const&, Vector const&, Vector const&)
 T IsSphereIntersectingCone(Vector const&, float, Vector const&, Vector const&, float, float)
 T IsSurfaceInFrontOfPlane(msurface2_t*, VPlane const&)
 T IsUniqueIdEqual(UniqueId_t const&, UniqueId_t const&)
 T IsValidFileExtension(char const*)
 T IsZipHandleU(HZIP__*)
 T IterateLightmapSamples(CDispInfo*, ProcessLightmapSampleData_t const&)
 T IterateRIFF::ChunkAvailable()
 T IterateRIFF::ChunkName()
 T IterateRIFF::ChunkNext()
 T IterateRIFF::ChunkRead(void*)
 T IterateRIFF::ChunkReadInt()
 T IterateRIFF::ChunkReadPartial(void*, int)
 T IterateRIFF::ChunkSize()
 T IterateRIFF::IterateRIFF(InFileRIFF&, int)
 T KeepKeysMatchingFilter(KeyValues*, char const*)
 T KeepSpecialKeys(KeyValues*, bool)
 T KeyContext_t::~KeyContext_t()
 T KeyValues::AddSubKey(KeyValues*)
 T KeyValues::Clear()
 T KeyValues::CopySubkeys(KeyValues*) const
 T KeyValues::CreateKeyUsingKnownLastChild(char const*, KeyValues*)
 T KeyValues::CreateNewKey()
 T KeyValues::FindKey(char const*, bool)
 T KeyValues::FindKey(int) const
 T KeyValues::FromString(char const*, char const*, char const**)
 T KeyValues::GetColor(char const*, Color const&)
 T KeyValues::GetDataType(char const*)
 T KeyValues::GetFirstSubKey()
 T KeyValues::GetFirstTrueSubKey()
 T KeyValues::GetFirstValue()
 T KeyValues::GetFloat(char const*, float)
 T KeyValues::GetInt(char const*, int)
 T KeyValues::GetName() const
 T KeyValues::GetNameSymbol() const
 T KeyValues::GetNextKey()
 T KeyValues::GetNextTrueSubKey()
 T KeyValues::GetNextValue()
 T KeyValues::GetPtr(char const*, void*)
 T KeyValues::GetString(char const*, char const*)
 T KeyValues::GetUint64(char const*, unsigned long long)
 T KeyValues::GetWString(char const*, wchar_t const*)
 T KeyValues::IsEmpty(char const*)
 T KeyValues::IsEqual(KeyValues*)
 T KeyValues::IsValidBinaryKVBuffer(CUtlBuffer&)
 T KeyValues::KeyValues(char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, int, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, wchar_t const*)
 T KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool (*)(char const*))
 T KeyValues::MakeCopy() const
 T KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, bool (*)(char const*))
 T KeyValues::ProcessResolutionKeys(char const*)
 T KeyValues::ReadAsBinary(CUtlBuffer&)
 T KeyValues::ReadAsBinaryInternal(CUtlBuffer&)
 T KeyValues::RecursiveLoadFromBuffer(char const*, CKeyValuesTokenReader&, bool (*)(char const*))
 T KeyValues::RecursiveMergeKeyValues(KeyValues*)
 T KeyValues::RecursiveSaveToFile(CUtlBuffer&, int)
 T KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)
 T KeyValues::RemoveEverything()
 T KeyValues::RemoveSubKey(KeyValues*)
 T KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool)
 T KeyValues::SetColor(char const*, Color)
 T KeyValues::SetFloat(char const*, float)
 T KeyValues::SetInt(char const*, int)
 T KeyValues::SetName(char const*)
 T KeyValues::SetPtr(char const*, void*)
 T KeyValues::SetString(char const*, char const*)
 T KeyValues::SetStringValue(char const*)
 T KeyValues::SetUint64(char const*, unsigned long long)
 T KeyValues::SetWString(char const*, wchar_t const*)
 T KeyValues::UsesEscapeSequences(bool)
 T KeyValues::WriteAsBinary(CUtlBuffer&)
 T KeyValues::WriteAsBinaryInternal(CUtlBuffer&)
 T KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
 T KeyValues::deleteThis()
 T KeyValues::operator delete(void*)
 T KeyValues::operator new(unsigned long)
 T KeyValues::~KeyValues()
 T Key_BindingForKey(ButtonCode_t)
 T Key_CheckDoneMultiTrapping(CUtlVector<ButtonCode_t, CUtlMemory<ButtonCode_t, int> >&)
 T Key_CheckDoneTrapping(ButtonCode_t&)
 T Key_CountBindings()
 T Key_Event(InputEvent_t const&)
 T Key_ForceBind_f(CCommand const&)
 T Key_Init()
 T Key_NameForBinding(char const*, int, int, int)
 T Key_ResetKeyboardState()
 T Key_SetBinding(ButtonCode_t, char const*)
 T Key_Shutdown()
 T Key_StartMultiTrapMode(CUtlVector<ButtonCode_t, CUtlMemory<ButtonCode_t, int> >&)
 T Key_StartTrapMode()
 T Key_WriteBindings(CUtlBuffer&, int)
 T LFOWAV_Fill(int*, int, int)
 T LFOWAV_FreeAll()
 T LFOWAV_InitAll()
 T LFO_Alloc(int, float, bool, float)
 T LFO_Free(lfo_t*)
 T LFO_GetNext(lfo_t*, int)
 T LFO_GetNextN(lfo_t*, portable_samplepair_t*, int, int)
 T LFO_Mod(lfo_t*, float)
 T LFO_VParams(void*)
 T LeafVisBuild(Vector const&)
 T LeafVisDraw()
 T LeafvisChanged(IConVar*, char const*, float)
 T LightDesc_t::RecalculateOneOverThetaDotMinusPhiDot()
 T LightcacheGetDynamic(Vector const&, LightingState_t&, LightcacheGetDynamic_Stats&, IClientRenderable const*, unsigned int, bool)
 T LightcacheGetStatic(LightCacheHandle_t__*, ITexture**, unsigned int)
 T LightmapPageCompareFunc(void const*, void const*)
 T LinearToScreenGamma(float)
 T LinearToTexture(float)
 T Linefile_Draw()
 T Linefile_Read_f()
 T LoadEntityDLLs(char const*)
 T LoadGameInfoFile(char const*, KeyValues*&, KeyValues*&, KeyValues*&)
 T LocalTransfer_InitFastCopy(SendTable const*, CStandardSendProxies const*, RecvTable*, CStandardRecvProxies const*, int&, int&)
 T LocalTransfer_TransferEntity(CBaseEdict const*, SendTable const*, void const*, RecvTable*, void*, bool, bool, int)
 T LumpCompare(void const*, void const*)
 T MD5Final(unsigned char*, MD5Context_t*)
 T MD5Init(MD5Context_t*)
 T MD5Update(MD5Context_t*, unsigned char const*, unsigned int)
 T MD5_Print(unsigned char*, int)
 T MDY_Free(mdy_t*)
 T MDY_FreeAll()
 T MDY_GetNext(mdy_t*, int)
 T MDY_GetNextN(mdy_t*, portable_samplepair_t*, int, int)
 T MDY_Mod(mdy_t*, float)
 T MDY_Params(prc_t*)
 T MDY_VParams(void*)
 T MIX_BuildChannelList(CChannelList&)
 T MIX_ClearAllPaintBuffers
 T MIX_FreeAllPaintbuffers
 T MIX_GetCurrentPaintbufferIndex
 T MIX_GetCurrentPaintbufferPtr
 T MIX_GetMaxRate(double, int)
 T MIX_InitAllPaintbuffers
 T MIX_MixChannelsToPaintbuffer(CChannelList&, int, int, int, int)
 T MIX_MixPaintbuffers(int, int, int, int, float)
 T MIX_MixUpsampleBuffer(CChannelList&, int, int, int, int)
 T MIX_PaintChannels
 T MIX_ScaleChannelVolume(paintbuffer_t*, channel_t*, int*, int)
 T MIX_ScalePaintBuffer(int, int, float)
 T MIX_SetCurrentPaintbuffer
 T MIX_UpsampleAllPaintbuffers(CChannelList&, int, int)
 T MP3Duration_t::LessFunc(MP3Duration_t const&, MP3Duration_t const&)
 T MXR_AddClassname(char const*)
 T MXR_AssignGroupIds()
 T MXR_DebugGraphMixVolumes(debug_showvols_t*, int)
 T MXR_DebugShowMixVolumes()
 T MXR_GetFirstValidMixGroup(channel_t*)
 T MXR_GetGroupnameFromId(int)
 T MXR_GetMixGroupFromSoundsource(channel_t*)
 T MXR_GetMixGroupListFromDirName(char const*, unsigned char*, int)
 T MXR_GetMixLayerIndexFromName(char const*)
 T MXR_GetMixgroupFromName(char const*)
 T MXR_GetValuesFromMixGroupIndex(mixervalues_t*, int)
 T MXR_GetVolFromMixGroup(channel_t*, mixervalues_t*, int*)
 T MXR_IsMusicGroup(int)
 T MXR_IsVOIPGroup(int)
 T MXR_LoadAllSoundMixers()
 T MXR_ParseLayerTriggers(char const*)
 T MXR_ParseMixGroup(char const*)
 T MXR_ParseSoundMixer(char const*, soundmixer_t*)
 T MXR_ReleaseMemory()
 T MXR_SetCurrentSoundMixer(char const*)
 T MXR_SetSoloActive()
 T MXR_UpdateAllDuckerVolumes()
 T MakeSkyVec(float, float, int, float, Vector&, Vector2D&)
 T MapPropOffsetsToIndices(CBaseEdict const*, CSendTablePrecalc*, unsigned short const*, unsigned short, unsigned short*)
 T MapReslistGenerator()
 T MapReslistGenerator_BuildMapList()
 T MapReslistGenerator_Init()
 T MapReslistGenerator_Shutdown()
 T MapReslistGenerator_Usage()
 T Map_AreAnyLeavesVisible(worldbrushdata_t const&, int*, int)
 T Map_CheckFeatureFlags()
 T Map_CheckForHDR(model_t*, char const*)
 T Map_VisClear()
 T Map_VisCurrent()
 T Map_VisCurrentCluster()
 T Map_VisForceFullSky()
 T Map_VisMark(bool, model_t*)
 T Map_VisSetup(model_t*, int, Vector const*, bool, unsigned int&)
 T MarkDLightsOnStaticProps()
 T MarkStaticPropLightsEmumerator::EnumElement(IHandleEntity*)
 T MarkWaterSurfaces_r(mnode_t*)
 T MatViewOverride::DisplaySelectedTextures()
 T MatViewOverride::ViewParamsLast::~ViewParamsLast()
 T MatViewOverride::ViewParamsReq::~ViewParamsReq()
 T MatchingProp_t::LessFunc(MatchingProp_t const&, MatchingProp_t const&)
 T MaterialConfigLightingChanged()
 T MaterialSystem_CreateSortinfo(bool)
 T MaterialSystem_DestroySortinfo()
 T MaterialSystem_RegisterLightmapSurfaces()
 T MaterialSystem_RegisterPaintSurfaces()
 T MaterialSystem_RemapWorldMaterial(IMaterial*, IMaterial*)
 T MaterialSytsem_DoBumpWarnings()
 T MathLib_Init(float, float, float, int)
 T MatrixBuildOrtho(VMatrix&, double, double, double, double, double, double)
 T MatrixBuildPerspectiveOffCenterX(VMatrix&, double, double, double, double, double, double, double, double)
 T MatrixBuildPerspectiveX(VMatrix&, double, double, double, double)
 T MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
 T MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
 T MatrixBuildTranslation(VMatrix&, Vector const&)
 T MatrixCopy(VMatrix const&, VMatrix&)
 T MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
 T MatrixInverseGeneral(VMatrix const&, VMatrix&)
 T MatrixInverseTR(VMatrix const&, VMatrix&)
 T MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
 T MatrixSetIdentity(VMatrix&)
 T MatrixTransformPlane(VMatrix const&, cplane_t const&, cplane_t&)
 T MaybeReportMissingWav(char const*)
 T Memory_Init()
 T Memory_Shutdown()
 T MenuItemCheckImage::Paint(IVGuiPaintSurface*)
 T MenuItemCheckImage::~MenuItemCheckImage()
 T MessageBox_Factory()
 T Mix16MonoWavtype
 T Mix16StereoWavtype
 T Mix8MonoWavtype
 T Mix8StereoWavtype
 T Mod_ComputeTranslucencyType(model_t*, int, int)
 T Mod_GameLumpSize(int)
 T Mod_GameLumpVersion(int)
 T Mod_GetMaterialCount(model_t*)
 T Mod_GetModelMaterials(model_t*, int, IMaterial**)
 T Mod_LeafAmbientColorAtPos(Vector*, Vector const&, int)
 T Mod_LoadCubemapSamples()
 T Mod_LoadEdges()
 T Mod_LoadFaces()
 T Mod_LoadGameLump(int, void*, int)
 T Mod_LoadGameLumpDict()
 T Mod_LoadLeafMinDistToWater()
 T Mod_LoadLeafWaterData()
 T Mod_LoadLeafs()
 T Mod_LoadLeafs_Version_0(CMapLoadHelper&)
 T Mod_LoadLeafs_Version_1(CMapLoadHelper&, CMapLoadHelper&, CMapLoadHelper&)
 T Mod_LoadLump(model_t*, int, char*, int, void**, int*)
 T Mod_LoadMarksurfaces()
 T Mod_LoadNodes()
 T Mod_LoadOcclusion()
 T Mod_LoadPrimIndices()
 T Mod_LoadPrimVerts()
 T Mod_LoadPrimitives()
 T Mod_LoadSubmodels(CUtlVector<mmodel_t, CUtlMemory<mmodel_t, int> >&)
 T Mod_LoadSurfedges(medge_t*)
 T Mod_LoadTexinfo(CMapLoadHelper&)
 T Mod_LoadVertNormalIndices()
 T Mod_LoadVertNormals()
 T Mod_LoadVertices()
 T Mod_LoadWorldlights(CMapLoadHelper&, bool)
 T Mod_MarkWaterSurfaces(model_t*)
 T Mod_SetParent(mnode_t*, mnode_t*)
 T Mod_TouchAllData(model_t*, int)
 T Model_LessFunc(unsigned int const&, unsigned int const&)
 T MurmurHash2LowerCase(char const*, unsigned int)
 T NET_Messages_descriptor()
 T NULL_Free(nul_t*)
 T NULL_GetNext(void*, int)
 T NULL_GetNextN(nul_t*, portable_samplepair_t*, int, int)
 T NULL_Mod(void*, float)
 T NULL_VParams(void*)
 T NUM_FOR_EDICT(edict_t const*)
 T Networking_Init(bool)
 T NotifyDedicatedServerUI
 T OcclusionSystem()
 T OnChangeThreadAffinity(IConVar*, char const*, float)
 T OnChangeThreadReserve(IConVar*, char const*, float)
 T OnHibernateWhenEmptyChanged(IConVar*, char const*, float)
 T OnSndSurroundCvarChanged2(IConVar*, char const*, float)
 T OnSndSurroundLegacyChanged2(IConVar*, char const*, float)
 T OnTVEnablehanged(IConVar*, char const*, float)
 T OpenZipU(void*, unsigned int, unsigned int)
 T OverlayMgr()
 T Overlay_DispUVToWorld(CDispInfo*, CMeshReader*, Vector2D const&, Vector&, Vector&, moverlayfragment_t&)
 T Overlay_TriBLToTR(CDispInfo*, CMeshReader*, Vector&, Vector&, float, float, int, Vector const&)
 T Overlay_TriTLToBR(CDispInfo*, CMeshReader*, Vector&, Vector&, float, float, int, Vector const&)
 T OverrideMaterialSystemConfig(MaterialSystem_Config_t&)
 T PSET_Alloc(int)
 T PSET_GetNext(pset_t*, int)
 T PTC_Alloc(float, float, float)
 T PTC_Free(ptc_t*)
 T PTC_GetNext(ptc_t*, int)
 T PTC_GetNextN(ptc_t*, portable_samplepair_t*, int, int)
 T PTC_Mod(ptc_t*, float)
 T PTC_VParams(void*)
 T PackEntities_NetworkBackDoor(int, CGameClient**, CFrameSnapshot*)
 T PackEntities_Normal(CBitVec<2048> const&, CFrameSnapshot*)
 T PackWork_t::Process(PackWork_t&)
 T PackedEntity::CompareRecipients(CUtlMemory<CSendProxyRecipients, int> const&) const
 T PackedEntity::CopyPackedData(int)
 T PackedEntity::GetNumRecipients() const
 T PackedEntity::GetRecipients() const
 T PackedEntity::PackedEntity()
 T PackedEntity::SetPackedData(int)
 T PackedEntity::SetRecipients(CUtlMemory<CSendProxyRecipients, int> const&)
 T PackedEntity::SetServerAndClientClass(ServerClass*, ClientClass*)
 T PackedEntity::~PackedEntity()
 T PacketReliableHandler_t::CreateFromBuffer(bf_read&)
 T PacketReliableHandler_t::GetType() const
 T PacketReliableHandler_t::Process(INetMessage const&)
 T PacketReliableHandler_t::SetNetChannel(INetChannel*)
 T PacketReliableHandler_t::~PacketReliableHandler_t()
 T PanelGeometryChangedCallBack(IConVar*, char const*, float)
 T ParallelCrash(CrashItem_t&)
 T ParseConnectArgs(CUtlVector<ns_address, CUtlMemory<ns_address, int> >&, CCommand const&, int)
 T ParseDirective(char const*)
 T ParseFile(char const*, char*, bool*, characterset_t*)
 T ParseFile(char*, char*, bool*)
 T ParseFloats(char const*, float*, int)
 T ParseString(char const*, char*, unsigned long)
 T ParseTokenFromString(char const**)
 T PauseLoadingUpdates(bool)
 T PchLanguageToELanguage(char const*, ELanguage)
 T PhonemeMP3Shutdown()
 T PluginHelpers_Menu(CSVCMsg_Menu const&)
 T PointInQuadFromBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector2D const&, Vector&)
 T PointInQuadToBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector2D&)
 T PolyFromPlane(Vector*, Vector const&, float, float)
 T PopTraceVisits(TraceInfo_t*)
 T PostUpdateProfile()
 T PreUpdateProfile(float)
 T PrecalcLightingState(lightcache_t*, unsigned char const*)
 T PrefetchDataStream(char const*, int, int)
 T PreparePanelMessageMap(vgui::PanelMessageMap*)
 T PrintChannelInfo(channel_t*)
 T PrintColorCorrection()
 T PrintMaterialSystemConfig(MaterialSystem_Config_t const&)
 T PrintPartialChangeEntsList()
 T PropOffsetLT(unsigned short const&, unsigned short const&)
 T PushTraceVisits(TraceInfo_t*)
 T Q_StrTrim(char*)
 T Q_UTF16ToUTF8(unsigned short const*, char*, int, EStringConvertErrorPolicy)
 T Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
 T Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
 T Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
 T Q_log2(unsigned int)
 T QuadWithParallelEdges(Vector const&, Vector const&, float, Vector const&, float, Vector const&, Vector2D&)
 T QuaternionNormalize(Quaternion&)
 T RCONClient()
 T RCONServer()
 T RGBToHSL(int*, int*, int*)
 T RGBtoHSV(Vector const&, Vector&)
 T RVA_Alloc(int*, int*, int*, int, flt_t*, int, float, float, float)
 T RVA_ConstructDelays(float*, float*, int, int*, int*, int*, float, float)
 T RVA_Free(rva_t*)
 T RVA_GetNext(rva_t*, int)
 T RVA_GetNextN(rva_t*, portable_samplepair_t*, int, int)
 T RVA_Mod(void*, float)
 T RVA_Params(prc_t*)
 T RVA_VParams(void*)
 T R_AddDynamicLights(dlight_t*, msurface2_t*, matrix3x4_t const&, bool, unsigned int)
 T R_AddPaintToSurface(msurface2_t*, paintinfo_t*)
 T R_AnimateLight()
 T R_Areaportal_LevelInit()
 T R_Areaportal_LevelShutdown()
 T R_BrushBatchInit()
 T R_BuildCubemapSamples(int)
 T R_BuildCubemapSamples_PostBuild()
 T R_BuildCubemapSamples_PreBuild()
 T R_BuildLightMap(dlight_t*, ICallQueue*, msurface2_t*, matrix3x4_t const&, bool)
 T R_BuildLightMapGuts(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool)
 T R_BuildWorldLists(IWorldRenderList*, WorldListInfo_t*, int, VisOverrideData_t const*, bool, float*)
 T R_CanUseVisibleDLight(int)
 T R_CheckForLightingConfigChanges()
 T R_ComputeDynamicLightMask(dlight_t*, msurface2_t*, msurfacelighting_t*, matrix3x4_t const&)
 T R_ComputeLightingOrigin(IClientRenderable*, studiohdr_t*, matrix3x4_t const&, Vector&)
 T R_CullNode(mnode_t*)
 T R_DLightEndView()
 T R_DLightStartView()
 T R_DecalComputeBasis(Vector const&, Vector const*, Vector*)
 T R_DecalFlushDestroyList()
 T R_DecalGetMaterialAndSize(int, IMaterial*&, float&, float&)
 T R_DecalInit()
 T R_DecalLeaf(mleaf_t*, decalinfo_t*)
 T R_DecalReSortMaterials()
 T R_DecalSetupVerts(decalcontext_t&, decal_t*, msurface2_t*, IMaterial*)
 T R_DecalShoot(int, int, model_t const*, Vector const&, Vector const*, int, color32 const&, Vector const*)
 T R_DecalSortInit()
 T R_DecalSurface(msurface2_t*, decalinfo_t*, bool)
 T R_DecalTerm(worldbrushdata_t*, bool)
 T R_DecalTermAll()
 T R_DecalUnlink(decal_t*, worldbrushdata_t*)
 T R_DecalVertsClip(CDecalVert*, decal_t*, msurface2_t*, IMaterial*)
 T R_DoDecalSHClip(CDecalVert*, CDecalVert*, decal_t*, int, Vector const&)
 T R_DrawBrushModel(IClientEntity*, model_t*, Vector const&, QAngle const&, bool, bool)
 T R_DrawBrushModelShadow(IClientRenderable*)
 T R_DrawDecalMeshList(DecalMeshList_t&)
 T R_DrawDecalsAll(IMatRenderContext*, int, int, Vector const&, int, float)
 T R_DrawDecalsAllImmediate(IMatRenderContext*, int, int, Vector const&, int, float)
 T R_DrawDecalsAllImmediate_GatherDecals(IMatRenderContext*, int, int, CUtlVector<decal_t*, CUtlMemory<decal_t*, int> >&)
 T R_DrawDecalsAllImmediate_Gathered(IMatRenderContext*, decal_t**, int, Vector const&, float)
 T R_DrawDecalsAll_GatherDecals(IMatRenderContext*, int, int, CUtlVector<decal_t*, CUtlMemory<decal_t*, int> >&)
 T R_DrawDecalsAll_Gathered(IMatRenderContext*, decal_t**, int, Vector const&, float)
 T R_DrawIdentityBrushModel(IWorldRenderList*, model_t*)
 T R_DrawLightmaps(IWorldRenderList*, int)
 T R_DrawPortals()
 T R_DrawScreenRect(float, float, float, float)
 T R_DrawSkyBox(float, int)
 T R_DrawTopView(bool)
 T R_DrawWorldLists(IWorldRenderList*, unsigned long, float)
 T R_GetBrushModelPlane(model_t const*, int, Vector*)
 T R_GetBrushModelPlaneCount(model_t const*)
 T R_GetNumIndicesForWorldList(IWorldRenderList*, unsigned long)
 T R_GetVisibleFogVolume(Vector const&, VisibleFogVolumeInfo_t*)
 T R_Init()
 T R_InitStudio()
 T R_InstallBrushRenderOverride(IBrushRenderer*)
 T R_LevelInit()
 T R_LevelShutdown()
 T R_LightPoint(Vector&)
 T R_LightVec(Vector const&, Vector const&, bool, Vector&, float*, float*, float*, float*)
 T R_LightVecUseModel(model_t*)
 T R_LoadNamedSkys(char const*)
 T R_LoadSkys()
 T R_LoadWorldGeometry(bool)
 T R_MarkDLightNotVisible(int)
 T R_MarkDlightsOnBrushModel(model_t*, IClientRenderable*)
 T R_MarkLights(dlight_t*, int, mnode_t*)
 T R_MarkLightsLeaf(dlight_t*, int, mleaf_t*)
 T R_PaintNode(mnode_t*, paintinfo_t*)
 T R_PlayerDecalShoot(IMaterial*, void*, int, model_t const*, Vector const&, Vector const*, int, color32 const&)
 T R_PushDlights()
 T R_RedownloadAllLightmaps()
 T R_RemoveAllDecalsFromAllModels()
 T R_RenderDynamicLightmaps(dlight_t*, ICallQueue*, msurface2_t*, matrix3x4_t const&)
 T R_SceneBegin()
 T R_SceneEnd()
 T R_SetFogVolumeState(int, bool)
 T R_SetupAreaBits(int, VisOverrideData_t const*, float*)
 T R_SetupDecalClip(CDecalVert*&, decal_t*, Vector&, IMaterial*, Vector*, float*)
 T R_SetupDecalTextureSpaceBasis(decal_t*, Vector&, IMaterial*, Vector*, float*)
 T R_SetupDecalVertsForMSurface(decal_t*, msurface2_t*, Vector*, CDecalVert*)
 T R_Shutdown()
 T R_StudioCheckReinitLightingCache()
 T R_StudioInitLightingCache()
 T R_Surface_LevelInit()
 T R_Surface_LevelShutdown()
 T R_TimeRefresh_f()
 T R_TopViewBounds(Vector2D const&, Vector2D const&)
 T R_TryLightMarkSurface(dlight_t*, msurfacelighting_t*, msurface2_t*, int)
 T R_UnloadSkys()
 T RandomInterval(interval_t const&)
 T Ray_t::Init(Vector const&, Vector const&, Vector const&, Vector const&)
 T ReadCheatCommandsFromFile(char*)
 T ReadDMXHeader(CUtlBuffer&, char*, int, int&, char*, int, int&)
 T ReadInterval(char const*)
 T ReadKeyValuesFile(char const*)
 T ReadWaveFile(char const*, char*&, int&, int&, int&, int&)
 T RecomputeClipbrushes(bool)
 T ReconcileAddonListFile(IFileSystem*, char const*)
 T ReconnectInterface(void* (*)(char const*, int*), char const*)
 T RecreatePaintCircle(IConVar*, char const*, float)
 T RecursiveLightPoint(mnode_t*, float, float, Vector&, LightVecState_t&)
 T RecvProp::RecvProp()
 T RecvTable::RecvTable(RecvProp*, int, char const*)
 T RecvTable::~RecvTable()
 T RecvTable_CreateDecoders(bool, bool*)
 T RecvTable_Decode(RecvTable*, void*, int, int)
 T RecvTable_DecodeZeros(RecvTable*, void*, int)
 T RecvTable_Init(RecvTable**, int)
 T RecvTable_MergeDeltas(RecvTable*, int, int, int, int, CUtlVector<int, CUtlMemory<int, int> >*)
 T RecvTable_ReadFieldList(RecvTable*, bf_read&, int, int, bool)
 T RecvTable_RecvClassInfos(CSVCMsg_SendTable const&, int, unsigned int*)
 T RecvTable_Term(bool)
 T RecvTable_WriteTablesToFile(char const*)
 T RefreshScreenIfNecessary()
 T RegisterVProfDataListener(unsigned int)
 T ReleaseInstancedRegistry(IRegistry*)
 T ReleaseMaterialSystemObjects(int)
 T RemapPlayerOrMusicVols(channel_t*, int*, bool, bool, float)
 T RemoveVProfDataListener(unsigned int)
 T RenderBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool, bool)
 T RenderBoxInternal(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool)
 T RenderLine(Vector const&, Vector const&, Color, bool)
 T RenderSphere(Vector const&, float, int, int, Color, IMaterial*, bool)
 T RenderSphereInternal(Vector const&, float, int, int, Color, IMaterial*, bool)
 T RenderTriangle(Vector const&, Vector const&, Vector const&, Color, bool)
 T RenderTriangleInternal(Vector const&, Vector const&, Vector const&, Color, IMaterial*)
 T RenderWireframeBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool)
 T RenderWireframeSphere(Vector const&, float, int, int, Color, bool)
 T RenderWireframeSweptBox(Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool)
 T Resampler::Resampler(int, int, int, int, Resampler::Boundary_Op, float, float, char const*, Resampler::Contrib_List*, Resampler::Contrib_List*, float, float, float, float)
 T Resampler::get_line()
 T Resampler::make_clist(int, int, Resampler::Boundary_Op, float (*)(float), float, float, float)
 T Resampler::put_line(float const*)
 T Resampler::resample_y(float*)
 T Resampler::~Resampler()
 T ReserveThreads(int)
 T ResetGameConVarsToDefaults()
 T ResolveQuadratic(double, double, Vector, Vector, Vector, Vector, Vector, Vector, int, double&, double&)
 T RestoreMaterialSystemObjects(int)
 T SCR_BeginLoadingPlaque(char const*)
 T SCR_EndLoadingPlaque()
 T SCR_Init()
 T SCR_Shutdown()
 T SCR_UpdateScreen(bool)
 T SNDDMA_Shutdown()
 T SND_ChannelOkToTrace(channel_t*)
 T SND_ClearMouth
 T SND_CloseMouth
 T SND_ExecuteUpdateOperators(channel_t*)
 T SND_FadeToNewGain(gain_t*, channel_t const*, float)
 T SND_GetClosestPoint(channel_t*, Vector const&, QAngle&, Vector&)
 T SND_GetDspMix(channel_t*, int)
 T SND_GetDspMix(channel_t*, int, float)
 T SND_GetFacingDirection(channel_t*, Vector const&, QAngle const&)
 T SND_GetGain(int, gain_t*, channel_t const*, Vector const&, bool, bool, bool, bool, float, bool, bool)
 T SND_GetGainFromMult(float, float, float)
 T SND_GetGainObscured(int, gain_t*, channel_t const*, Vector const&, bool, bool, bool, bool, Vector*)
 T SND_InitMouth
 T SND_InitScaletable()
 T SND_IsInGame()
 T SND_MergeVolumes(float const (*) [6], float*)
 T SND_MouthUpdateAll
 T SND_MoveMouth8
 T SND_MovieEnd()
 T SND_MovieStart()
 T SND_PickStaticChannel(int, CSfxTable*)
 T SND_RecordBuffer(int const*, int, int)
 T SND_SetSpatialDelays()
 T SND_Spatialize(channel_t*)
 T SND_StealDynamicChannel(int, int, Vector const&, CSfxTable*)
 T SVC_Messages_descriptor()
 T SV_ActivateServer()
 T SV_ActivateSteamGameServer()
 T SV_AddOriginToPVS(Vector const&)
 T SV_BroadcastVoiceData(IClient*, CCLCMsg_VoiceData const&)
 T SV_BuildSendTablesArray(ServerClass*, SendTable**, int)
 T SV_CheckForFlushMemory(char const*, char const*)
 T SV_ClearWorld()
 T SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)
 T SV_CreateBaseline()
 T SV_CreateDictionary(char const*)
 T SV_CreateNetworkStringTables(char const*)
 T SV_DecalIndex(char const*)
 T SV_DetermineMulticastRecipients(bool, Vector const&, CBitVec<64>&)
 T SV_EnsureInstanceBaseline(ServerClass*, int, int)
 T SV_FindOrAddDecal(char const*, bool)
 T SV_FindOrAddGeneric(char const*, bool)
 T SV_FindOrAddModel(char const*, bool)
 T SV_FindOrAddSound(char const*, bool)
 T SV_FindServerClass(char const*)
 T SV_FindServerClass(int)
 T SV_FlushMemoryIfMarked()
 T SV_ForceExactFile(char const*)
 T SV_ForceModelBounds(char const*, Vector const&, Vector const&)
 T SV_ForceSend()
 T SV_ForceSimpleMaterial(char const*)
 T SV_Frame(bool)
 T SV_FrameExecuteThreadDeferred()
 T SV_GenericIndex(char const*)
 T SV_GetSoundDuration(char const*)
 T SV_InitGameDLL()
 T SV_InstallClientStringTableMirrors()
 T SV_ModelIndex(char const*)
 T SV_ParallelSendSnapshot(CGameClient*&)
 T SV_PrintStringTables()
 T SV_ProcessVoice()
 T SV_RedirectActive()
 T SV_RedirectAddText(char const*)
 T SV_RedirectEnd()
 T SV_RedirectFlush()
 T SV_RedirectStart(redirect_t, netadr_t const*)
 T SV_ReplicateConVarChange(ConVar const*, char const*)
 T SV_ResetPVS(unsigned char*, int)
 T SV_SendClientUpdates(bool, bool)
 T SV_ShutdownGameDLL()
 T SV_SolidMoved(edict_t*, ICollideable*, Vector const*, bool)
 T SV_SoundIndex(char const*)
 T SV_StartSound(IRecipientFilter&, edict_t*, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, Vector const*, float, int, CUtlVector<Vector, CUtlMemory<Vector, int> >*, int)
 T SV_Think(bool)
 T SV_TriggerMoved(edict_t*, bool)
 T SV_WriteClassInfos(ServerClass*, bf_write&)
 T SV_WriteSendTables(ServerClass*, bf_write&)
 T SV_WriteVoiceCodec(bf_write&)
 T SW_Mix16StereoDirectional_Interp(float, portable_samplepair_t*, int*, short*, int, unsigned int, int)
 T SW_Mix16StereoDistVar(float, portable_samplepair_t*, int*, short*, int, unsigned int, int)
 T SW_Mix16StereoDistVar_Interp(float, portable_samplepair_t*, int*, short*, int, unsigned int, int)
 T SW_Mix8Mono(portable_samplepair_t*, int*, unsigned char*, int, unsigned int, int)
 T SW_Mix8StereoDirectional_Interp(float, portable_samplepair_t*, int*, unsigned char*, int, unsigned int, int)
 T SW_Mix8StereoDistVar(float, portable_samplepair_t*, int*, unsigned char*, int, unsigned int, int)
 T SW_Mix8StereoDistVar_Interp(float, portable_samplepair_t*, int*, unsigned char*, int, unsigned int, int)
 T SW_Mix8Stereo_Interp(portable_samplepair_t*, int*, unsigned char*, int, unsigned int, int)
 T S_AlterChannel(StartSoundParams_t&)
 T S_AlterChannelByGuid(StartSoundParams_t&)
 T S_CalcOcclusion(int, channel_t*, Vector const&, Vector, float)
 T S_ClearBuffer()
 T S_ComputeDelayForSoundtime(float, clocksync_index_t)
 T S_DSPGetCurrentDASRoomChanged()
 T S_DSPGetCurrentDASRoomNew()
 T S_DSPGetCurrentDASRoomSkyAbove()
 T S_DSPGetCurrentDASRoomSkyPercent()
 T S_DspParms(CCommand const&)
 T S_DummySfx(char const*)
 T S_DumpClientSounds()
 T S_DumpFilePaths(CCommand const&)
 T S_ExtraUpdate()
 T S_FindChannelByGuid(int)
 T S_FindChannelByScriptHash(unsigned int)
 T S_FindName(char const*, int*)
 T S_FlushMixers(CCommand const&)
 T S_FlushSound(char const*)
 T S_FreeChannel(channel_t*)
 T S_GetActiveSounds(CUtlVector<SndInfo_t, CUtlMemory<SndInfo_t, int> >&)
 T S_GetAudioDeviceList(CUtlVector<audio_device_description_t, CUtlMemory<audio_device_description_t, int> >&)
 T S_GetCurrentlyPlayingMusic(CUtlVector<musicsave_t, CUtlMemory<musicsave_t, int> >&)
 T S_GetDashboarMusicMixValue()
 T S_GetElapsedTime(channel_t const*)
 T S_GetElapsedTimeByGuid(int)
 T S_GetExpressionType(char const*)
 T S_GetFunc1Type(char const*)
 T S_GetGainFromSoundLevel(soundlevel_t, float)
 T S_GetGuidForLastSoundEmitted()
 T S_GetMasterVolume()
 T S_GetMixGroupIndex(char const*)
 T S_GetMixGroupOfCurrentMixer(char const*, soundmixer_t*)
 T S_GetMixLayerIndex(char const*)
 T S_GetMono16Samples(char const*, CUtlVector<short, CUtlMemory<short, int> >&)
 T S_GetSoundChannelVolume(char const*, float&, float&)
 T S_GetStack(CSosOperatorStack::SosStackType_t, stack_data_t&)
 T S_GetTrackData(KeyValues*, track_data_t&)
 T S_Init()
 T S_InitChannelOperators(stack_data_t&)
 T S_InternalReloadSound(CSfxTable*)
 T S_Interpolate2xCubic(portable_samplepair_t*, portable_samplepair_t*, int, int)
 T S_Interpolate2xLinear_2(int, portable_samplepair_t*, portable_samplepair_t*, int)
 T S_IsInitted()
 T S_IsLoopingSoundByGuid(int)
 T S_IsMusic(channel_t*)
 T S_IsSoundStillPlaying(int)
 T S_LoadSound(CSfxTable*, channel_t*)
 T S_MarkUISound(CSfxTable*)
 T S_MixBufferUpsample2x
 T S_OnLoadScreen(bool)
 T S_Play(char const*, bool)
 T S_PrecacheSound(char const*)
 T S_PrefetchSound(char const*, bool)
 T S_PreventSound(bool)
 T S_PrintOperatorList()
 T S_ReloadAudioCaches()
 T S_ReloadSound(char const*)
 T S_RestartSong(musicsave_t const*)
 T S_SOSFlush()
 T S_SOSGetOpvarFloat(char const*, float&)
 T S_SOSSetOpvarFloat(char const*, float)
 T S_SetIndexedMixGroupOfMixer(int, char const*, float, soundmixer_t*, int)
 T S_SetMixGroupOfCurrentMixer(char const*, char const*, float, int)
 T S_SetMixGroupOfMixLayer(int, int, MXRMixGroupFields_t, float)
 T S_SetMixGroupOfMixer(char const*, char const*, float, soundmixer_t*, int)
 T S_SetMixLayerLevel(int, float)
 T S_SetMixLayerTriggerFactor(char const*, char const*, float)
 T S_SetMixLayerTriggerFactor(int, int, float)
 T S_SetVolumeByGuid(int, float)
 T S_Shutdown()
 T S_SoundDuration(channel_t*)
 T S_SoundDurationByGuid(int)
 T S_SoundFade(float, float, float, float)
 T S_SoundGetPitchScale()
 T S_SoundInfo_f()
 T S_SoundList()
 T S_SoundSetPitchScale(float)
 T S_StartQueuedSounds()
 T S_StartSound(StartSoundParams_t&)
 T S_StartSoundEntry(StartSoundParams_t&, int, bool)
 T S_Startup()
 T S_StopAllSounds(bool)
 T S_StopAllSoundsC()
 T S_StopSound(int, int)
 T S_StopSoundByGuid(int, bool)
 T S_SyncClockAdjust(clocksync_index_t)
 T S_TrackHasPriority(track_data_t&, track_data_t&)
 T S_TransferStereo16
 T S_Update(CAudioState const*)
 T S_UpdateSoundFade()
 T S_UpdateWindowFocus(bool)
 T S_Update_(float)
 T S_Update_Guts(float)
 T S_Update_Thread()
 T S_ValidateSoundCache(char const*)
 T SaveAllocMemory(unsigned long, unsigned long, bool)
 T SaveFreeMemory(void*)
 T SaveInMemoryCallback(IConVar*, char const*, float)
 T ScreenSpaceRectFromPoints(IMatRenderContext*, Vector (*) [10], int*, int, int*, int*, int*, int*)
 T ScrollBar_Horizontal_Factory()
 T ScrollBar_Vertical_Factory()
 T SeedRandSIMD(unsigned int)
 T SeedRandomNumberGenerator(bool)
 T SendCvarValueQueryToClient(IClient*, char const*, bool)
 T SendProp::GetNumArrayLengthBits() const
 T SendProp::SendProp()
 T SendTable::SendTable()
 T SendTable::~SendTable()
 T SendTable_BuildDeltaProperties(edict_t*, int, SendTable const*, int, CUtlVectorFixedGrowable<int, 128ul>&, CUtlMemory<CSendProxyRecipients, int>*, bool&)
 T SendTable_BuildHierarchy(CSendNode*, SendTable const*, CBuildHierarchyStruct*)
 T SendTable_BuildHierarchy_IterateProps(CSendNode*, SendTable const*, CBuildHierarchyStruct*, SendProp const**, int&)
 T SendTable_CRCTable(unsigned int&, SendTable*)
 T SendTable_CalcDelta(SendTable const*, int, int, int, CUtlVectorFixedGrowable<int, 128ul>&)
 T SendTable_ComputeCRC()
 T SendTable_ComputeCRC_DataTable_R(unsigned int&, SendTable*)
 T SendTable_CullPropsFromProxies(SendTable const*, CUtlVectorFixedGrowable<int, 128ul> const&, int, CSendProxyRecipients const*, int, CSendProxyRecipients const*, int, CUtlVectorFixedGrowable<int, 128ul>&)
 T SendTable_Encode(SendTable const*, int, void const*, int, CUtlMemory<CSendProxyRecipients, int>*)
 T SendTable_GenerateProxyPaths(CSendTablePrecalc*, int)
 T SendTable_GetCRC()
 T SendTable_GetNumFlatProps(SendTable const*)
 T SendTable_Init(SendTable**, int)
 T SendTable_PrintStats()
 T SendTable_SortByPriority(CBuildHierarchyStruct*)
 T SendTable_Term()
 T SendTable_WriteAllDeltaProps(SendTable const*, int, int, int, bf_write*)
 T SendTable_WriteInfos(SendTable const*, bf_write&, bool, bool)
 T SendTable_WritePropList(SendTable const*, int, bf_write*, int, CUtlVectorFixedGrowable<int, 128ul>*)
 T Sendprop_UsingDebugWatch()
 T Serialize(CUtlBuffer&, CUtlBinaryBlock const&)
 T Serialize(CUtlBuffer&, CUtlString const&)
 T Serialize(CUtlBuffer&, Color const&)
 T Serialize(CUtlBuffer&, DmeTime_t const&)
 T Serialize(CUtlBuffer&, QAngle const&)
 T Serialize(CUtlBuffer&, Quaternion const&)
 T Serialize(CUtlBuffer&, UniqueId_t const&)
 T Serialize(CUtlBuffer&, VMatrix const&)
 T Serialize(CUtlBuffer&, Vector const&)
 T Serialize(CUtlBuffer&, Vector2D const&)
 T Serialize(CUtlBuffer&, Vector4D const&)
 T Serialize(CUtlBuffer&, bool const&)
 T Serialize(CUtlBuffer&, float const&)
 T Serialize(CUtlBuffer&, int const&)
 T SerializeDMX(CUtlBuffer&, CDmxElement*, char const*)
 T SerializeDMX(char const*, char const*, bool, CDmxElement*)
 T SerializeTextDMX(char const*, CUtlBuffer&, CDmxElement*)
 T ServerDLL_Load()
 T ServerDLL_Unload()
 T ServerDTI_AddEntityEncodeEvent(SendTable*, float)
 T ServerDTI_Flush()
 T ServerDTI_HookTable(SendTable*)
 T ServerDTI_Term()
 T SetBitBufErrorHandler(void (*)(BitBufErrorType, char const*))
 T SetIdentityMatrix(matrix3x4_t&)
 T SetLaunchOptions(CCommand const&)
 T SetNameToSteamIDName(IConVar*)
 T SetProxiesForURL(void*, char const*)
 T SetRootLOD_f(IConVar*, char const*, float)
 T SetSerializationArrayDelimiter(char const*)
 T SetSerializationDelimiter(CUtlCharConversion*)
 T SetTexInfoBaseTexture2Flags()
 T SetupClientSendTableHierarchy()
 T SetupDefaultAskConnectAcceptKey()
 T SetupEdgeIncrements(CDispUtilsHelper*, int, int, CVertIndex&, CVertIndex&, CVertIndex&, CVertIndex&, int&, int&)
 T SetupFileSystemError(bool, FSReturnCode_t, char const*, ...)
 T SetupMatrixScale(Vector const&)
 T SetupMeshReaders(model_t*, int)
 T SetupSpan(int, int, NeighborSpan, CVertIndex&, CVertIndex&)
 T Shader_AddSurfaceDynamic(CMeshBuilder&, msurface2_t*)
 T Shader_AddSurfaceDynamicTextureOnly(CMeshBuilder&, msurface2_t*)
 T Shader_BeginRendering()
 T Shader_BrushSurfaceOverride(msurface2_t*, model_t*, IClientEntity*)
 T Shader_Connect(bool)
 T Shader_DecalDrawPoly(CDecalVert*, IMaterial*, msurface2_t*, int, decal_t*, float)
 T Shader_Disconnect()
 T Shader_DrawChainsDynamic(CMSurfaceSortList const&, int, bool)
 T Shader_DrawDispChainDecalsAndOverlays(int, CMSurfaceSortList const&, unsigned long)
 T Shader_DrawLightmapPageChains(IWorldRenderList*, int)
 T Shader_DrawLightmapPageSurface(msurface2_t*, float, float, float)
 T Shader_DrawSurfaceDynamic(IMatRenderContext*, msurface2_t*)
 T Shader_DrawSurfaceListStatic(IMatRenderContext*, msurface2_t**, int, int)
 T Shader_DrawTranslucentSurfaces(IWorldRenderList*, int*, int, unsigned long)
 T Shader_DrawWireframePolygons(msurface2_t**, int)
 T Shader_LeafContainsTranslucentSurfaces(IWorldRenderList*, int, unsigned long)
 T Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)
 T Shader_SwapBuffers()
 T Shader_TranslucentDisplacementSurface(CWorldRenderList*, msurface2_t*)
 T Shader_TranslucentWorldSurface(CWorldRenderList*, msurface2_t*)
 T Shader_WorldBegin(CWorldRenderList*)
 T ShootPaint(model_t const*, Vector const&, Color const&, float)
 T ShouldWatchThisProp(SendTable const*, int, char const*)
 T ShowAskConnectPanel(char const*, float)
 T ShowHideColorCorrectionUI()
 T ShowHidePerfUI()
 T ShowPerforceQuery(vgui::Panel*, char const*, vgui::Panel*, KeyValues*, PerforceAction_t)
 T ShowSaveDocumentQuery(vgui::Panel*, char const*, char const*, int, vgui::Panel*, KeyValues*)
 T ShutdownMaterialSystem()
 T ShutdownMixerControls()
 T ShutdownStudioRender()
 T ShutdownWellKnownRenderTargets()
 T SmoothDispSurfNormals(CCoreDispInfo**, int)
 T Snd_Restart_f()
 T SocketErrorString(int)
 T SocketWouldBlock()
 T SortInfoToLightmapPage(int)
 T SortMapCompareFunc(void const*, void const*)
 T SortServerTags(char* const*, char* const*)
 T SpatialPartition()
 T SplitString(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T SrgbGammaTo360Gamma(float)
 T SrgbGammaToLinear(float)
 T SrgbLinearToGamma(float)
 T StartAudio(void*)
 T StaticLightCacheAffectedByDynamicLight(LightCacheHandle_t__*)
 T StaticPropMgr()
 T Steam3Client()
 T Steam3Server()
 T StringAfterPrefix(char const*, char const*)
 T StringLessThan(char const* const&, char const* const&)
 T String_Decode(DecodeInfo*)
 T String_DecodeZero(DecodeInfo*)
 T String_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T String_GetTypeNameString()
 T String_IsEncodedZero(SendProp const*, bf_read*)
 T String_SkipProp(SendProp const*, bf_read*)
 T SurfComputeLightmapCoordinate(SurfaceCtx_t const&, msurface2_t*, Vector const&, Vector2D&)
 T SurfComputeTextureCoordinate(msurface2_t*, Vector const&, float*)
 T SurfHasBumpedLightmaps(msurface2_t*)
 T SurfHasLightmap(msurface2_t*)
 T SurfNeedsBumpedLightmaps(msurface2_t*)
 T SurfNeedsLightmap(msurface2_t*)
 T SurfSetupSurfaceContext(SurfaceCtx_t&, msurface2_t*)
 T Surf_ComputeCentroid(msurface2_t*, Vector*)
 T Sys_CompareFileTime(long, long)
 T Sys_CreateFileAssociations(int, FileAssociationInfo*)
 T Sys_Error(char const*, ...)
 T Sys_Error_Internal(bool, char const*, char*)
 T Sys_FindClose()
 T Sys_FindFirst(char const*, char*, int)
 T Sys_FindFirstEx(char const*, char const*, char*, int)
 T Sys_FindNext(char*, int)
 T Sys_GenerateAppIDFile(bool)
 T Sys_GetFactory(CSysModule*)
 T Sys_GetFactoryThis()
 T Sys_GetProductString()
 T Sys_GetVersionString()
 T Sys_InitGame(void* (*)(char const*, int*), char const*, void*, int)
 T Sys_InitMemory()
 T Sys_LoadModule(char const*)
 T Sys_MessageBox(char const*, char const*, bool)
 T Sys_NoCrashDialog()
 T Sys_OutputDebugString(char const*)
 T Sys_Printf(char*, ...)
 T Sys_SetRegKeyValue(char*, char*, char const*)
 T Sys_ShutdownGame()
 T Sys_Sleep(int)
 T Sys_TestSendKey(char const*)
 T Sys_UnloadModule(CSysModule*)
 T Sys_mkdir(char const*)
 T TAssetInfo::CheckBudget()
 T TAssetInfo::CheckForExceptionallyBad()
 T TAssetInfo::DeltaInt(unsigned int)
 T TAssetInfo::DisplayAssetInfo()
 T TAssetInfo::DisplayStats()
 T TAssetInfo::FindOwners()
 T TAssetInfo::GenerateHTMLSection(CUtlString, bool)
 T TAssetInfo::GenerateHTMLSection(bool)
 T TAssetInfo::GenerateHTMLSectionReferences(bool)
 T TAssetInfo::GetSize()
 T TAssetInfo::Init(CUtlString)
 T TAssetInfo::Init(KeyValues*)
 T TAssetInfo::IsExceptionallyBad()
 T TAssetInfo::Resolve()
 T TAssetInfo::Serialize(KeyValues*)
 T TAssetInfo::SkipBudget()
 T TAssetInfo::StripLeadingDir(CUtlString, CUtlString)
 T TAssetInfo::TAssetInfo()
 T TGAWriter::WriteTGAFile(char const*, int, int, ImageFormat, unsigned char const*, int)
 T TGAWriter::WriteToBuffer(unsigned char*, CUtlBuffer&, int, int, ImageFormat, ImageFormat)
 T TMaterialAssetInfo::CheckBudget()
 T TMaterialAssetInfo::DisplayStats()
 T TMaterialAssetInfo::GenerateHTMLSection(bool)
 T TMaterialAssetInfo::Init(CUtlString)
 T TMaterialAssetInfo::Init(KeyValues*)
 T TMaterialAssetInfo::Resolve()
 T TMaterialAssetInfo::Serialize(KeyValues*)
 T TModelAssetInfo::CheckBudget()
 T TModelAssetInfo::DisplayStats()
 T TModelAssetInfo::GenerateHTMLSection(bool)
 T TModelAssetInfo::GetSize()
 T TModelAssetInfo::Init(CUtlString)
 T TModelAssetInfo::Init(KeyValues*)
 T TModelAssetInfo::Resolve()
 T TModelAssetInfo::Serialize(KeyValues*)
 T TTextureAssetInfo::CheckBudget()
 T TTextureAssetInfo::DisplayStats()
 T TTextureAssetInfo::GenerateHTMLSection(bool)
 T TTextureAssetInfo::Init(CUtlString)
 T TTextureAssetInfo::Init(KeyValues*)
 T TTextureAssetInfo::Resolve()
 T TTextureAssetInfo::Serialize(KeyValues*)
 T TTextureAssetInfo::SkipBudget()
 T TUnzip::Close()
 T TUnzip::Find(char const*, bool, int*, ZIPENTRY*)
 T TUnzip::Get(int, ZIPENTRY*)
 T TUnzip::Unzip(int, void*, unsigned int, unsigned int)
 T TZip::Add(char const*, void*, unsigned int, unsigned int)
 T TZip::AddCentral()
 T TZip::ideflate(zlist*)
 T TZip::istore()
 T TZip::open_mem(void*, unsigned int)
 T TZip::sflush(void*, char const*, unsigned int*)
 T TZip::sread(TState&, char*, unsigned int)
 T TangentSpaceComputeBasis(Vector&, Vector&, Vector const&, Vector const&, bool)
 T TangentSpaceSurfaceSetup(msurface2_t*, Vector&)
 T Test_Loop(CCommandContext const&, CCommand const&)
 T Test_LoopCount(CCommandContext const&, CCommand const&)
 T Test_LoopForNumSeconds(CCommandContext const&, CCommand const&)
 T Test_RunFrame(CCommandContext const&, CCommand const&)
 T Test_StartLoop(CCommandContext const&, CCommand const&)
 T Test_Wait(CCommandContext const&, CCommand const&)
 T Test_WaitForCheckPoint(CCommandContext const&, CCommand const&)
 T TexCoordInQuadFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
 T TextMessageGet
 T TextMessageInit
 T TextMessageShutdown
 T TextMessage_DemoMessageFull
 T TextureToLinear(int)
 T ThreadPoolReserverFunction()
 T Tool_Load_f(CCommandContext const&, CCommand const&)
 T Tool_Unload_f(CCommandContext const&, CCommand const&)
 T Trace(char const*, ...)
 T TraceInit(char const*, char const*, int)
 T TracePaint(model_t const*, Vector const&, float, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T TraceShutdown(char const*, int)
 T TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T TransformIntoSubNeighbor(CDispUtilsHelper*, int, int, CVertIndex const&, CVertIndex&)
 T TriangleArea(Vector const&, Vector const&, Vector const&)
 T TxViewPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T TxViewPanel::GetAnimMap()
 T TxViewPanel::GetKBMap()
 T TxViewPanel::GetMessageMap()
 T TxViewPanel::GetPanelClassName()
 T TxViewPanel::Install(vgui::Panel*)
 T TxViewPanel::OnCommand(char const*)
 T TxViewPanel::OnFileSelected(char const*)
 T TxViewPanel::OnMessage(KeyValues const*, unsigned int)
 T TxViewPanel::OnTick()
 T TxViewPanel::TxViewPanel(vgui::Panel*)
 T TxViewPanel::~TxViewPanel()
 T URLLabel_Factory()
 T UniqueIdFromString(UniqueId_t*, char const*, int)
 T UnloadEntityDLLs()
 T Unserialize(CUtlBuffer&, CUtlBinaryBlock&)
 T Unserialize(CUtlBuffer&, CUtlString&)
 T Unserialize(CUtlBuffer&, Color&)
 T Unserialize(CUtlBuffer&, DmeTime_t&)
 T Unserialize(CUtlBuffer&, QAngle&)
 T Unserialize(CUtlBuffer&, Quaternion&)
 T Unserialize(CUtlBuffer&, VMatrix&)
 T Unserialize(CUtlBuffer&, Vector&)
 T Unserialize(CUtlBuffer&, Vector2D&)
 T Unserialize(CUtlBuffer&, Vector4D&)
 T Unserialize(CUtlBuffer&, bool&)
 T Unserialize(CUtlBuffer&, float&)
 T Unserialize(CUtlBuffer&, int&)
 T UnserializeDMX(CUtlBuffer&, CDmxElement**, char const*)
 T UnserializeDMX(char const*, char const*, bool, CDmxElement**)
 T UnserializeTextDMX(char const*, CUtlBuffer&, CDmxElement**)
 T UnzipItem(HZIP__*, int, void*, unsigned int, unsigned int)
 T UpdateItemState(vgui::TreeView*, int, KeyValues*)
 T UpdateMaterialSystemConfig()
 T UpdateNameFromSteamID(IConVar*, CSteamID*)
 T UpdateProgress(TGameStatsParameters const&, char const*, ...)
 T UpdateStudioRenderConfig()
 T UploadData(char const*, char const*, KeyValues*)
 T UseCDKeyAuth()
 T UseDefaultBindings()
 T UserDataSize(unsigned long long)
 T UtlMemory_CalcNewAllocationCount(int, int, int, int)
 T UtlStringLessFunc(CUtlString const&, CUtlString const&)
 T VCR_EnterPausedState()
 T VGui_AddPopupsToKeyValues(KeyValues*)
 T VGui_CreateDrawTreePanel(vgui::Panel*)
 T VGui_DrawHierarchy()
 T VGui_FillKeyValues(KeyValues*)
 T VGui_MoveDrawTreePanelToFront()
 T VGui_RecursivePrintTree(unsigned int, KeyValues*, int)
 T VGui_UpdateDrawTreePanel()
 T VGui_UpdateTextureListPanel()
 T VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T VMatrix::operator=(VMatrix const&)
 T VOX_AddNumbers(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
 T VOX_AddRndVirtual(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
 T VOX_AddSentenceWavesToResList()
 T VOX_CompactSentenceFile()
 T VOX_GetChanVol(channel_t*)
 T VOX_GetDirectory(char*, int, char*)
 T VOX_GroupAdd(char const*)
 T VOX_GroupIndexFromName
 T VOX_GroupInitAllLRUs()
 T VOX_GroupNameFromIndex
 T VOX_GroupPick
 T VOX_GroupPickSequential
 T VOX_Init
 T VOX_LRUInit(sentencegroup_t*)
 T VOX_LoadSound
 T VOX_LookupGlobalSeqVirtual(int, int, char*, int)
 T VOX_LookupGlobalVirtual(int, int, char*, int)
 T VOX_LookupRangeHeadingOrGrid(int, char*, channel_t*, int, char**, char**, char**, int*, bool)
 T VOX_LookupRndVirtual(char*)
 T VOX_LookupSectorVirtual(char*)
 T VOX_LookupSentenceByIndex(char*, int, int*)
 T VOX_LookupString
 T VOX_ParseLineCommands(char*, int)
 T VOX_ParseString(char*)
 T VOX_ParseWordParams(char*, voxword_t*, int)
 T VOX_Precache(IEngineSound*, int, char const*)
 T VOX_PrecacheSentenceGroup
 T VOX_ReadSentenceFile
 T VOX_ReplaceVirtualNames(channel_t*)
 T VOX_SentenceCount
 T VOX_SentenceLength
 T VOX_SentenceNameFromIndex
 T VOX_Shutdown
 T VOX_TouchSound(char const*, CUtlDict<int, int>&, CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >&, bool)
 T VOX_TouchSounds(CUtlDict<int, int>&, CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >&, bool)
 T VProfExport_Pause()
 T VProfExport_Resume()
 T VProfNodeSpike()
 T VProfNodeSpikeMinimumMs(CCommand const&)
 T VProfNodeSpikeMultiplier(CCommand const&)
 T VProfPlayback_GetCurrentPercent()
 T VProfPlayback_GetCurrentTick()
 T VProfPlayback_SeekToPercent(float)
 T VProfPlayback_Step()
 T VProfPlayback_StepBack()
 T VProfRecord_IsPlayingBack()
 T VProfRecord_Shutdown()
 T VProfRecord_Snapshot()
 T VProfRecord_StartOrStop()
 T VProf_StartRecording(char const*)
 T VProf_StopRecording()
 T V_CheckGamma()
 T V_FixSlashes(char*, char)
 T V_GetFileExtension(char const*)
 T V_Init()
 T V_IsAbsolutePath(char const*)
 T V_RemoveDotSlashes(char*, char)
 T V_RenderVGuiOnly()
 T V_RenderVGuiOnly_NoSwap()
 T V_RenderView()
 T V_Shutdown()
 T V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_StripFilename(char*)
 T V_StripTrailingSlash(char*)
 T V_UnqualifiedFileName(char const*)
 T V_atod(char const*)
 T V_atof(char const*)
 T V_atoi(char const*)
 T V_atoi64(char const*)
 T V_pretifymem(float, int, bool)
 T V_snprintf(char*, int, char const*, ...)
 T V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 T V_strcasecmp(char const*, char const*)
 T V_stristr(char const*, char const*)
 T V_stristr(char*, char const*)
 T V_strncasecmp(char const*, char const*, int)
 T V_vsnprintf(char*, int, char const*, char*)
 T V_vsnprintfRet(char*, int, char const*, char*, bool*)
 T V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
 T VacClient::BuildCvarDirectory()
 T VacClient::CProcessMutex::CProcessMutex()
 T VacClient::CProcessMutex::Lock()
 T VacClient::CProcessMutex::Unlock()
 T VacClient::CProcessMutex::~CProcessMutex()
 T VacClient::CVarDirectory::CVarDirectory()
 T VacClient::CVarDirectory::~CVarDirectory()
 T VacClient::CVarFieldData::AddConvar(ConVar*)
 T VacClient::CVarFieldData::Finalize()
 T VacClient::VarEntry_t::NSortByName(VacClient::VarEntry_t const*, VacClient::VarEntry_t const*)
 T Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
 T Vector3DMultiplyPositionProjective(VMatrix const&, Vector const&, Vector&)
 T Vector4DMultiply(VMatrix const&, Vector4D const&, Vector4D&)
 T Vector::DistTo(Vector const&) const
 T VectorAngles(Vector const&, QAngle&)
 T VectorIRotate(float const*, matrix3x4_t const&, float*)
 T VectorITransform(float const*, matrix3x4_t const&, float*)
 T VectorNormalize(Vector&)
 T VectorRotate(float const*, matrix3x4_t const&, float*)
 T VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
 T VectorTransform(float const*, matrix3x4_t const&, float*)
 T VectorVectors(Vector const&, Vector&, Vector&)
 T VectorXY_Decode(DecodeInfo*)
 T VectorXY_DecodeZero(DecodeInfo*)
 T VectorXY_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T VectorXY_GetTypeNameString()
 T VectorXY_IsEncodedZero(SendProp const*, bf_read*)
 T VectorXY_SkipProp(SendProp const*, bf_read*)
 T Vector_Decode(DecodeInfo*)
 T Vector_DecodeZero(DecodeInfo*)
 T Vector_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
 T Vector_GetTypeNameString()
 T Vector_IsEncodedZero(SendProp const*, bf_read*)
 T Vector_SkipProp(SendProp const*, bf_read*)
 T VideoMode_Create()
 T VideoMode_Destroy()
 T VisualizeQueuedEdges()
 T VoiceEnableCallback(IConVar*, char const*, float)
 T VoiceRecord_AudioQueue::GetRecordedData(short*, int)
 T VoiceRecord_AudioQueue::Idle()
 T VoiceRecord_AudioQueue::Init()
 T VoiceRecord_AudioQueue::InitalizeInterfaces()
 T VoiceRecord_AudioQueue::RecordStart()
 T VoiceRecord_AudioQueue::RecordStop()
 T VoiceRecord_AudioQueue::Release()
 T VoiceRecord_AudioQueue::VoiceRecord_AudioQueue()
 T VoiceRecord_AudioQueue::~VoiceRecord_AudioQueue()
 T VoiceRecord_OpenAL::GetRecordedData(short*, int)
 T VoiceRecord_OpenAL::Idle()
 T VoiceRecord_OpenAL::Init(int)
 T VoiceRecord_OpenAL::RecordStart()
 T VoiceRecord_OpenAL::RecordStop()
 T VoiceRecord_OpenAL::Release()
 T VoiceRecord_OpenAL::~VoiceRecord_OpenAL()
 T VoiceSE_CloseMouth(int)
 T VoiceSE_EndChannel(int, int)
 T VoiceSE_EndOverdrive()
 T VoiceSE_Idle(float)
 T VoiceSE_Init()
 T VoiceSE_InitMouth(int)
 T VoiceSE_MoveMouth(int, short*, int)
 T VoiceSE_StartChannel(int, int, bool, int)
 T VoiceSE_StartOverdrive()
 T VoiceSE_Term()
 T VoiceTweak_EndVoiceTweakMode()
 T VoiceTweak_GetControlFloat(VoiceTweakControl)
 T VoiceTweak_IsControlFound(VoiceTweakControl)
 T VoiceTweak_IsStillTweaking()
 T VoiceTweak_SetControlFloat(VoiceTweakControl, float)
 T VoiceTweak_StartVoiceTweakMode()
 T Voice_AddIncomingData(int, char const*, int, unsigned char, unsigned int, unsigned int, VoiceFormat_t)
 T Voice_AssignChannel(int, bool, float)
 T Voice_AvgBytesPerSec()
 T Voice_Deinit()
 T Voice_Enabled()
 T Voice_EndChannel(int)
 T Voice_ForceInit()
 T Voice_GetChannel(int)
 T Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)
 T Voice_GetOutputData(int, char*, int, int, int)
 T Voice_Idle(float)
 T Voice_Init(char const*, int)
 T Voice_IsRecording()
 T Voice_LocalPlayerTalkingAck(int)
 T Voice_OnAudioSourceShutdown(int)
 T Voice_RecordStart(char const*, char const*, char const*)
 T Voice_RecordStop()
 T Voice_SamplesPerSec()
 T Voice_SetupAudioSource(int, int)
 T Voice_Spatialize(channel_t*)
 T WaveAppendTmpFile(char const*, void*, int, int)
 T WaveCreateTmpFile(char const*, int, int, int)
 T WaveFixupTmpFile(char const*)
 T Win32UploadGameStatsBlocking(TGameStatsParameters const&)
 T WordBuf::Set(char const*)
 T WorldLightToMaterialLight(dworldlight_t*, LightDesc_t&)
 T WorldStaticMeshCreate()
 T WorldStaticMeshDestroy()
 T WriteMiniDumpUsingExceptionInfoSource
 T WriteRemoteVProfData()
 T WriteRemoteVProfGroupData(VProfListenInfo_t&)
 T WriteWaveFile(char const*, char const*, int, int, int, int)
 T WriteWindowsSettingsToVideoConfig(int, int, int, bool, bool)
 T X360GammaToLinear(float)
 T X360LinearToGamma(float)
 T ZipAdd(HZIP__*, char const*, void*, unsigned int, unsigned int)
 T ZipGetMemory(HZIP__*, void**, unsigned long*)
 T _Cmd_Exec_f(CCommand const&, bool)
 T _DTI_HookDeltaBits(CRecvDecoder*, int, int, int)
 T _Host_Map_f_CompletionFunc(char const*, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T _Host_ProcessVoice_Server()
 T _Host_RunFrame(float)
 T _Host_RunFrame_Client(bool)
 T _Host_RunFrame_Input(float, bool)
 T _Host_RunFrame_Render()
 T _Host_RunFrame_Server(bool)
 T _Host_RunFrame_Server_Async(int)
 T _Host_RunFrame_Sound()
 T _Host_SetGlobalTime()
 T _ServerDTI_HookTimer(SendTable const*, ServerDTITimerType, CCycleCount const&)
 T _V_AppendSlash(char*, int, char)
 T _V_ComposeFileName(char const*, char const*, char*, int)
 T _V_DefaultExtension(char*, char const*, int)
 T _V_ExtractFileExtension(char const*, char*, int)
 T _V_ExtractFilePath(char const*, char*, int)
 T _V_FileBase(char const*, char*, int)
 T _V_MakeAbsolutePath(char*, int, char const*, char const*)
 T _V_MakeRelativePath(char const*, char const*, char*, int)
 T _V_SetExtension(char*, char const*, int)
 T _V_StrRight(char const*, int, char*, int)
 T _V_StrSubst(char const*, char const*, char const*, char*, int, bool)
 T _V_StripExtension(char const*, char*, int)
 T _V_StripLastDir(char*, int)
 T _V_binarytohex(unsigned char const*, int, char*, int)
 T _V_hextobinary(char const*, int, unsigned char*, int)
 T _V_memcmp(void const*, void const*, int)
 T _V_memcpy(void*, void const*, int)
 T _V_memmove(void*, void const*, int)
 T _V_memset(void*, int, int)
 T _V_strcmp(char const*, char const*)
 T _V_strcpy(char*, char const*)
 T _V_stricmp(char const*, char const*)
 T _V_strlen(char const*)
 T _V_strlower(char*)
 T _V_strncasecmp(char const*, char const*, int)
 T _V_strncat(char*, char const*, int, int)
 T _V_strncmp(char const*, char const*, int)
 T _V_strncpy(char*, char const*, int)
 T _V_strnicmp(char const*, char const*, int)
 T _V_strnistr(char const*, char const*, int)
 T _V_strrchr(char const*, char)
 T _V_strstr(char const*, char const*)
 T _V_strupr(char*)
 T _V_wcscmp(wchar_t const*, wchar_t const*)
 T _V_wcslen(wchar_t const*)
 T _V_wcsncpy(wchar_t*, wchar_t const*, int)
 T __clang_call_terminate
 T askconnect_accept_f()
 T bf_read::ReadBitCellCoord(int, EBitCoordType)
 T bf_read::ReadBitCoord()
 T bf_read::ReadBitCoordMP(EBitCoordType)
 T bf_read::ReadBitNormal()
 T bf_read::ReadBits(void*, int)
 T bf_read::ReadBytes(void*, int)
 T bf_read::ReadLongLong()
 T bf_read::ReadSBitLong(int)
 T bf_read::ReadString(char*, int, bool, int*)
 T bf_read::ReadUBitVarInternal(int)
 T bf_read::ReadVarInt32()
 T bf_read::ReadVarInt64()
 T bf_read::SetDebugName(char const*)
 T bf_read::SetOverflowFlag()
 T bf_read::StartReading(std::string const*)
 T bf_read::StartReading(void const*, int, int, int)
 T bf_read::bf_read()
 T bf_read::bf_read(char const*, void const*, int, int)
 T bf_read::bf_read(std::string const*)
 T bf_read::bf_read(void const*, int, int)
 T bf_write::ByteSizeVarInt32(unsigned int)
 T bf_write::Reset()
 T bf_write::SeekToBit(int)
 T bf_write::SetAssertOnOverflow(bool)
 T bf_write::SetDebugName(char const*)
 T bf_write::StartWriting(std::string*)
 T bf_write::StartWriting(void*, int, int, int)
 T bf_write::WriteBitCellCoord(float, int, EBitCoordType)
 T bf_write::WriteBitCoord(float)
 T bf_write::WriteBitCoordMP(float, EBitCoordType)
 T bf_write::WriteBitNormal(float)
 T bf_write::WriteBits(void const*, int)
 T bf_write::WriteBitsFromBuffer(bf_read*, int)
 T bf_write::WriteBytes(void const*, int)
 T bf_write::WriteLongLong(long long)
 T bf_write::WriteSBitLong(int, int)
 T bf_write::WriteSignedVarInt32(int)
 T bf_write::WriteSignedVarInt64(long long)
 T bf_write::WriteString(char const*)
 T bf_write::WriteVarInt32(unsigned int)
 T bf_write::WriteVarInt64(unsigned long long)
 T bf_write::bf_write()
 T bf_write::bf_write(char const*, void*, int, int)
 T bf_write::bf_write(std::string*)
 T bf_write::bf_write(void*, int, int)
 T bi_windup(TState&)
 T bool CDispCollTree::EdgeCrossAxis<0>(Ray_t const&, unsigned short, CDispCollHelper*)
 T bool CDispCollTree::EdgeCrossAxis<1>(Ray_t const&, unsigned short, CDispCollHelper*)
 T bool CDispCollTree::EdgeCrossAxis<2>(Ray_t const&, unsigned short, CDispCollHelper*)
 T bool CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::DoRemove<model_t*>(model_t*)
 T bool CVoxelHash::EnumerateElementsInSingleVoxel<CIntersectBox>(Voxel_t, CIntersectBox const&, int, IPartitionEnumerator*)
 T bool CVoxelHash::EnumerateElementsInSingleVoxel<CIntersectRay>(Voxel_t, CIntersectRay const&, int, IPartitionEnumerator*)
 T bool CVoxelHash::EnumerateElementsInVoxel<CIntersectBox>(Voxel_t, CIntersectBox const&, int, IPartitionEnumerator*)
 T bool CVoxelHash::EnumerateElementsInVoxel<CIntersectRay>(Voxel_t, CIntersectRay const&, int, IPartitionEnumerator*)
 T bool CVoxelHash::EnumerateElementsInVoxel<CIntersectSweptBox>(Voxel_t, CIntersectSweptBox const&, int, IPartitionEnumerator*)
 T bool EnumerateLeafInSphere_R<false>(mnode_t*, EnumLeafSphereInfo_t&, int)
 T bool EnumerateLeafInSphere_R<true>(mnode_t*, EnumLeafSphereInfo_t&, int)
 T bool RecvTable_ReadFieldList_Guts<false>(RecvTable*, bf_read&, int, int)
 T bool RecvTable_ReadFieldList_Guts<true>(RecvTable*, bf_read&, int, int)
 T bool Serialize<CUtlBinaryBlock>(CUtlBuffer&, CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> > const&)
 T bool Serialize<CUtlString>(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> > const&)
 T bool Serialize<Color>(CUtlBuffer&, CUtlVector<Color, CUtlMemory<Color, int> > const&)
 T bool Serialize<DmeTime_t>(CUtlBuffer&, CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> > const&)
 T bool Serialize<QAngle>(CUtlBuffer&, CUtlVector<QAngle, CUtlMemory<QAngle, int> > const&)
 T bool Serialize<Quaternion>(CUtlBuffer&, CUtlVector<Quaternion, CUtlMemory<Quaternion, int> > const&)
 T bool Serialize<VMatrix>(CUtlBuffer&, CUtlVector<VMatrix, CUtlMemory<VMatrix, int> > const&)
 T bool Serialize<Vector2D>(CUtlBuffer&, CUtlVector<Vector2D, CUtlMemory<Vector2D, int> > const&)
 T bool Serialize<Vector4D>(CUtlBuffer&, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> > const&)
 T bool Serialize<Vector>(CUtlBuffer&, CUtlVector<Vector, CUtlMemory<Vector, int> > const&)
 T bool Serialize<bool>(CUtlBuffer&, CUtlVector<bool, CUtlMemory<bool, int> > const&)
 T bool Serialize<float>(CUtlBuffer&, CUtlVector<float, CUtlMemory<float, int> > const&)
 T bool Serialize<int>(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> > const&)
 T bool Unserialize<CUtlBinaryBlock>(CUtlBuffer&, CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >&)
 T bool Unserialize<CUtlString>(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T bool Unserialize<Color>(CUtlBuffer&, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T bool Unserialize<DmeTime_t>(CUtlBuffer&, CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> >&)
 T bool Unserialize<QAngle>(CUtlBuffer&, CUtlVector<QAngle, CUtlMemory<QAngle, int> >&)
 T bool Unserialize<Quaternion>(CUtlBuffer&, CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >&)
 T bool Unserialize<VMatrix>(CUtlBuffer&, CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >&)
 T bool Unserialize<Vector2D>(CUtlBuffer&, CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >&)
 T bool Unserialize<Vector4D>(CUtlBuffer&, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >&)
 T bool Unserialize<Vector>(CUtlBuffer&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T bool Unserialize<bool>(CUtlBuffer&, CUtlVector<bool, CUtlMemory<bool, int> >&)
 T bool Unserialize<float>(CUtlBuffer&, CUtlVector<float, CUtlMemory<float, int> >&)
 T bool Unserialize<int>(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> >&)
 T build_bl_tree(TState&)
 T build_number()
 T build_tree(TState&, tree_desc*)
 T char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 T compress_block(TState&, ct_data*, ct_data*)
 T copy_block(TState&, char*, unsigned int, int)
 T crc32(unsigned long, unsigned char const*, unsigned long)
 T ct_init(TState&, unsigned short*)
 T ct_tally(TState&, int, int)
 T dB_To_Gain(float)
 T decalcontext_t::InitSurface(msurface2_t*)
 T deflate(TState&)
 T deflate_fast(TState&)
 T dsp_room_GetInt()
 T fill_window(TState&)
 T float16::ConvertFloatTo16bits(float)
 T flush_block(TState&, char*, unsigned long, int)
 T gen_bitlen(TState&, tree_desc*)
 T gen_codes(TState&, ct_data*, int)
 T huft_build(unsigned int*, unsigned int, unsigned int, unsigned int const*, unsigned int const*, inflate_huft_s**, unsigned int*, inflate_huft_s*, unsigned int*, unsigned int*)
 T inflate(z_stream_s*, int)
 T inflateInit2(z_stream_s*)
 T inflateReset(z_stream_s*)
 T inflate_blocks(inflate_blocks_state*, z_stream_s*, int)
 T inflate_blocks_free(inflate_blocks_state*, z_stream_s*)
 T inflate_blocks_new(z_stream_s*, unsigned long (*)(unsigned long, unsigned char const*, unsigned int), unsigned int)
 T inflate_codes(inflate_blocks_state*, z_stream_s*, int)
 T inflate_fast(unsigned int, unsigned int, inflate_huft_s const*, inflate_huft_s const*, inflate_blocks_state*, z_stream_s*)
 T inflate_flush(inflate_blocks_state*, z_stream_s*, int)
 T inflate_trees_dynamic(unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, inflate_huft_s**, inflate_huft_s**, inflate_huft_s*, z_stream_s*)
 T init_block(TState&)
 T int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoRemove<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex const&>(CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex const&, unsigned int)
 T int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoRemove<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex>(CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, unsigned int)
 T int CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::DoRemove<IModelLoadCallback*>(IModelLoadCallback*, unsigned int)
 T int CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoRemove<model_t*>(model_t*, unsigned int)
 T int CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find<CDmxAttribute*>(CDmxAttribute* const&) const
 T int CUtlSortVector<TAssetInfo*, CBudget::OverBudgetLessFunc, CUtlVector<TAssetInfo*, CUtlMemory<TAssetInfo*, int> > >::FindLessOrEqual<TAssetInfo*>(TAssetInfo* const&, bool*) const
 T int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::Find<Vector>(Vector const&) const
 T int CUtlSortVector<Vector, CCurvesColorOperation::CurvesLessFunc, CUtlVector<Vector, CUtlMemory<Vector, int> > >::FindLessOrEqual<Vector>(Vector const&, bool*) const
 T int CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual<int>(int const&, bool*) const
 T int CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::FindLessOrEqual<modelsize_t>(modelsize_t const&, bool*) const
 T int CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::FindLessOrEqual<unsigned short>(unsigned short const&, bool*) const
 T int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::Find<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&) const
 T int CUtlSortVector<vgui::LayoutPanel_t, vgui::SortFuncPanelPtr, CUtlVector<vgui::LayoutPanel_t, CUtlMemory<vgui::LayoutPanel_t, int> > >::FindLessOrEqual<vgui::LayoutPanel_t>(vgui::LayoutPanel_t const&, bool*) const
 T int V_sprintf_safe<256ul>(char (&) [256ul], char const*, ...)
 T int V_sprintf_safe<260ul>(char (&) [260ul], char const*, ...)
 T int V_sprintf_safe<40ul>(char (&) [40ul], char const*, ...)
 T int V_sprintf_safe<512ul>(char (&) [512ul], char const*, ...)
 T int V_sprintf_safe<64ul>(char (&) [64ul], char const*, ...)
 T jcopy_sample_rows
 T jdiv_round_up
 T jinit_arith_encoder
 T jinit_c_coef_controller
 T jinit_c_main_controller
 T jinit_c_master_control
 T jinit_c_prep_controller
 T jinit_color_converter
 T jinit_compress_master
 T jinit_downsampler
 T jinit_forward_dct
 T jinit_huff_encoder
 T jinit_marker_writer
 T jinit_memory_mgr
 T jpeg_CreateCompress
 T jpeg_abort
 T jpeg_alloc_huff_table
 T jpeg_alloc_quant_table
 T jpeg_calc_jpeg_dimensions
 T jpeg_default_colorspace
 T jpeg_destroy
 T jpeg_destroy_compress
 T jpeg_fdct_10x10(int*, unsigned char**, unsigned int)
 T jpeg_fdct_10x5(int*, unsigned char**, unsigned int)
 T jpeg_fdct_11x11(int*, unsigned char**, unsigned int)
 T jpeg_fdct_12x12(int*, unsigned char**, unsigned int)
 T jpeg_fdct_12x6(int*, unsigned char**, unsigned int)
 T jpeg_fdct_13x13(int*, unsigned char**, unsigned int)
 T jpeg_fdct_14x14(int*, unsigned char**, unsigned int)
 T jpeg_fdct_14x7(int*, unsigned char**, unsigned int)
 T jpeg_fdct_15x15(int*, unsigned char**, unsigned int)
 T jpeg_fdct_16x16(int*, unsigned char**, unsigned int)
 T jpeg_fdct_16x8(int*, unsigned char**, unsigned int)
 T jpeg_fdct_1x1(int*, unsigned char**, unsigned int)
 T jpeg_fdct_1x2(int*, unsigned char**, unsigned int)
 T jpeg_fdct_2x1(int*, unsigned char**, unsigned int)
 T jpeg_fdct_2x2(int*, unsigned char**, unsigned int)
 T jpeg_fdct_2x4(int*, unsigned char**, unsigned int)
 T jpeg_fdct_3x3(int*, unsigned char**, unsigned int)
 T jpeg_fdct_3x6(int*, unsigned char**, unsigned int)
 T jpeg_fdct_4x2(int*, unsigned char**, unsigned int)
 T jpeg_fdct_4x4(int*, unsigned char**, unsigned int)
 T jpeg_fdct_4x8(int*, unsigned char**, unsigned int)
 T jpeg_fdct_5x10(int*, unsigned char**, unsigned int)
 T jpeg_fdct_5x5(int*, unsigned char**, unsigned int)
 T jpeg_fdct_6x12(int*, unsigned char**, unsigned int)
 T jpeg_fdct_6x3(int*, unsigned char**, unsigned int)
 T jpeg_fdct_6x6(int*, unsigned char**, unsigned int)
 T jpeg_fdct_7x14(int*, unsigned char**, unsigned int)
 T jpeg_fdct_7x7(int*, unsigned char**, unsigned int)
 T jpeg_fdct_8x16(int*, unsigned char**, unsigned int)
 T jpeg_fdct_8x4(int*, unsigned char**, unsigned int)
 T jpeg_fdct_9x9(int*, unsigned char**, unsigned int)
 T jpeg_fdct_float(float*, unsigned char**, unsigned int)
 T jpeg_fdct_ifast(int*, unsigned char**, unsigned int)
 T jpeg_fdct_islow(int*, unsigned char**, unsigned int)
 T jpeg_finish_compress
 T jpeg_free_large(jpeg_common_struct*, void*, unsigned long)
 T jpeg_free_small(jpeg_common_struct*, void*, unsigned long)
 T jpeg_get_large(jpeg_common_struct*, unsigned long)
 T jpeg_get_small(jpeg_common_struct*, unsigned long)
 T jpeg_mem_available(jpeg_common_struct*, long, long, long)
 T jpeg_mem_init(jpeg_common_struct*)
 T jpeg_mem_term(jpeg_common_struct*)
 T jpeg_open_backing_store(jpeg_common_struct*, backing_store_struct*, long)
 T jpeg_set_defaults
 T jpeg_set_linear_quality
 T jpeg_set_quality
 T jpeg_start_compress
 T jpeg_std_error
 T jpeg_suppress_tables
 T jpeg_write_scanlines
 T jround_up
 T jzero_far
 T lm_init(TState&, int, unsigned short*)
 T longest_match(TState&, unsigned int)
 T lufopen(void*, unsigned int, unsigned int, unsigned int*)
 T mat_hdr_level_Callback(IConVar*, char const*, float)
 T mat_texture_list_off_f()
 T mat_texture_list_on_f()
 T memfgets(unsigned char*, int, int*, char*, int)
 T netadr_t::Clear()
 T netadr_t::CompareAdr(netadr_t const&, bool) const
 T netadr_t::CompareClassBAdr(netadr_t const&) const
 T netadr_t::GetIPHostByteOrder() const
 T netadr_t::GetIPNetworkByteOrder() const
 T netadr_t::GetPort() const
 T netadr_t::GetType() const
 T netadr_t::IsLocalhost() const
 T netadr_t::IsLoopback() const
 T netadr_t::IsReservedAdr() const
 T netadr_t::IsValid() const
 T netadr_t::SetFromSockadr(sockaddr const*)
 T netadr_t::SetFromString(char const*, bool)
 T netadr_t::SetIP(unsigned int)
 T netadr_t::SetPort(unsigned short)
 T netadr_t::SetType(netadrtype_t)
 T netadr_t::ToSockadr(sockaddr*) const
 T netadr_t::ToString(bool) const
 T netadr_t::ToString(char*, unsigned int, bool) const
 T netpacket_t::netpacket_t()
 T new_failed_to_allocate()
 T non-virtual thunk to CAsyncWavDataCache::GetItemName(unsigned int, void const*, char*, unsigned int)
 T non-virtual thunk to CAudioMixerWaveMP3::StreamRequestData(void*, int, int)
 T non-virtual thunk to CAudioSourceStreamMP3::GetLoopingInfo(int*, int*, int*)
 T non-virtual thunk to CAudioSourceStreamMP3::UpdateLoopingSamplePosition(int)
 T non-virtual thunk to CAudioSourceStreamMP3::UpdateSamples(char*, int)
 T non-virtual thunk to CAudioSourceStreamWave::GetLoopingInfo(int*, int*, int*)
 T non-virtual thunk to CAudioSourceStreamWave::UpdateLoopingSamplePosition(int)
 T non-virtual thunk to CAudioSourceStreamWave::UpdateSamples(char*, int)
 T non-virtual thunk to CBaseClient::ChangeSplitscreenUser(int)
 T non-virtual thunk to CBaseClient::CheckConnect()
 T non-virtual thunk to CBaseClient::Clear()
 T non-virtual thunk to CBaseClient::ClientPrintf(char const*, ...)
 T non-virtual thunk to CBaseClient::Connect(char const*, int, INetChannel*, bool, int, CMsg_CVars const*)
 T non-virtual thunk to CBaseClient::ConnectionStart(INetChannel*)
 T non-virtual thunk to CBaseClient::Disconnect(int)
 T non-virtual thunk to CBaseClient::ExecuteStringCommand(char const*)
 T non-virtual thunk to CBaseClient::GetClientName() const
 T non-virtual thunk to CBaseClient::GetMaxAckTickCount() const
 T non-virtual thunk to CBaseClient::GetNetChannel()
 T non-virtual thunk to CBaseClient::GetNetworkID() const
 T non-virtual thunk to CBaseClient::GetNetworkIDString() const
 T non-virtual thunk to CBaseClient::GetNumPlayers()
 T non-virtual thunk to CBaseClient::GetPlayerSlot() const
 T non-virtual thunk to CBaseClient::GetRate() const
 T non-virtual thunk to CBaseClient::GetServer()
 T non-virtual thunk to CBaseClient::GetSplitScreenOwner()
 T non-virtual thunk to CBaseClient::GetUpdateRate() const
 T non-virtual thunk to CBaseClient::GetUserID() const
 T non-virtual thunk to CBaseClient::GetUserSetting(char const*) const
 T non-virtual thunk to CBaseClient::Inactivate()
 T non-virtual thunk to CBaseClient::IsActive() const
 T non-virtual thunk to CBaseClient::IsConnected() const
 T non-virtual thunk to CBaseClient::IsFakeClient() const
 T non-virtual thunk to CBaseClient::IsHLTV() const
 T non-virtual thunk to CBaseClient::IsHearingClient(int) const
 T non-virtual thunk to CBaseClient::IsHumanPlayer() const
 T non-virtual thunk to CBaseClient::IsLowViolenceClient() const
 T non-virtual thunk to CBaseClient::IsProximityHearingClient(int) const
 T non-virtual thunk to CBaseClient::IsSpawned() const
 T non-virtual thunk to CBaseClient::IsSplitScreenUser() const
 T non-virtual thunk to CBaseClient::Reconnect()
 T non-virtual thunk to CBaseClient::SendNetMsg(INetMessage&, bool, bool)
 T non-virtual thunk to CBaseClient::SetMaxRoutablePayloadSize(int)
 T non-virtual thunk to CBaseClient::SetRate(int, bool)
 T non-virtual thunk to CBaseClient::SetUpdateRate(int, bool)
 T non-virtual thunk to CBaseClient::~CBaseClient()
 T non-virtual thunk to CBaseClientState::ProcessConnectionlessPacket(netpacket_t*)
 T non-virtual thunk to CBaseClientState::~CBaseClientState()
 T non-virtual thunk to CCLCMsg_FileCRCCheck_t::~CCLCMsg_FileCRCCheck_t()
 T non-virtual thunk to CClientState::ProcessConnectionlessPacket(netpacket_t*)
 T non-virtual thunk to CClientState::~CClientState()
 T non-virtual thunk to CColorOperationListPanel::OnReadFileFromDisk(char const*, char const*, KeyValues*)
 T non-virtual thunk to CColorOperationListPanel::OnWriteFileToDisk(char const*, char const*, KeyValues*)
 T non-virtual thunk to CColorOperationListPanel::SetupFileOpenDialog(vgui::FileOpenDialog*, bool, char const*, KeyValues*)
 T non-virtual thunk to CConCommandMemberAccessor<CEngineVGui>::CommandCallback(CCommandContext const&, CCommand const&)
 T non-virtual thunk to CConCommandMemberAccessor<CEngineVGui>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T non-virtual thunk to CConCommandMemberAccessor<CTextureBudgetPanel>::CommandCallback(CCommandContext const&, CCommand const&)
 T non-virtual thunk to CConCommandMemberAccessor<CTextureBudgetPanel>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)0, CDemoStop>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)1, CDemoFileHeader>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)10, CDemoCustomData>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)11, CDemoCustomDataCallbacks>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)12, CDemoUserCmd>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)13, CDemoFullPacket>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)14, CDemoSaveGame>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)2, CDemoFileInfo>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)3, CDemoSyncTick>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)4, CDemoSendTables>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)5, CDemoClassInfo>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)6, CDemoStringTables>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)7, CDemoPacket>::~CDemoMessagePB()
 T non-virtual thunk to CDemoMessagePB<(EDemoCommands)9, CDemoConsoleCmd>::~CDemoMessagePB()
 T non-virtual thunk to CDispInfo::GetCornerNeighbors(int)
 T non-virtual thunk to CDispInfo::GetDispUtilsByIndex(int)
 T non-virtual thunk to CDispInfo::GetEdgeNeighbor(int)
 T non-virtual thunk to CDispInfo::GetPowerInfo() const
 T non-virtual thunk to CEmptyConVar::GetName() const
 T non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 T non-virtual thunk to CEmptyConVar::SetValue(char const*)
 T non-virtual thunk to CEmptyConVar::SetValue(float)
 T non-virtual thunk to CEmptyConVar::SetValue(int)
 T non-virtual thunk to CFilter::ShouldDiscardPacket(ns_address const&)
 T non-virtual thunk to CFunctor0<void (*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor0()
 T non-virtual thunk to CFunctor1<void (*)(char const*), CUtlEnvelope<char const*>, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T non-virtual thunk to CFunctor1<void (*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T non-virtual thunk to CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T non-virtual thunk to CFunctor2<void (*)(msurface2_t*, Vector), msurface2_t*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T non-virtual thunk to CFunctor4<void (*)(Vector const&, Vector const&, Color, bool), Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T non-virtual thunk to CFunctor5<void (*)(Vector const&, Vector const&, Vector const&, Color, IMaterial*), Vector, Vector, Vector, Color, IMaterial*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor5()
 T non-virtual thunk to CFunctor6<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool), Vector, QAngle, Vector, Vector, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T non-virtual thunk to CFunctor6<void (*)(Vector const&, float, int, int, Color, bool), Vector, float, int, int, Color, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T non-virtual thunk to CFunctor6<void (*)(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool), dlight_t*, msurface2_t*, matrix3x4_t, unsigned int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T non-virtual thunk to CFunctor7<void (*)(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool), Vector, QAngle, Vector, Vector, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor7()
 T non-virtual thunk to CFunctor7<void (*)(Vector const&, float, int, int, Color, IMaterial*, bool), Vector, float, int, int, Color, IMaterial*, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor7()
 T non-virtual thunk to CFunctor9<void (*)(bool, int, Vector, int, decal_t**, int, int, int, float), bool, int, Vector, int, decal_t**, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor9()
 T non-virtual thunk to CFunctorJob::~CFunctorJob()
 T non-virtual thunk to CGameClient::CheckConnect()
 T non-virtual thunk to CGameClient::Clear()
 T non-virtual thunk to CGameClient::Connect(char const*, int, INetChannel*, bool, int, CMsg_CVars const*)
 T non-virtual thunk to CGameClient::ConnectionClosing(int)
 T non-virtual thunk to CGameClient::ConnectionCrashed(int)
 T non-virtual thunk to CGameClient::Disconnect(int)
 T non-virtual thunk to CGameClient::ExecuteStringCommand(char const*)
 T non-virtual thunk to CGameClient::FileDenied(char const*, unsigned int, bool)
 T non-virtual thunk to CGameClient::FileReceived(char const*, unsigned int, bool)
 T non-virtual thunk to CGameClient::FileRequested(char const*, unsigned int, bool)
 T non-virtual thunk to CGameClient::FileSent(char const*, unsigned int, bool)
 T non-virtual thunk to CGameClient::Inactivate()
 T non-virtual thunk to CGameClient::IsHearingClient(int) const
 T non-virtual thunk to CGameClient::IsProximityHearingClient(int) const
 T non-virtual thunk to CGameClient::PacketEnd()
 T non-virtual thunk to CGameClient::PacketStart(int, int)
 T non-virtual thunk to CGameClient::Reconnect()
 T non-virtual thunk to CGameClient::SendNetMsg(INetMessage&, bool, bool)
 T non-virtual thunk to CGameClient::SetRate(int, bool)
 T non-virtual thunk to CGameClient::SetUpdateRate(int, bool)
 T non-virtual thunk to CGameClient::~CGameClient()
 T non-virtual thunk to CHLTVClient::Clear()
 T non-virtual thunk to CHLTVClient::ConnectionClosing(int)
 T non-virtual thunk to CHLTVClient::ConnectionCrashed(int)
 T non-virtual thunk to CHLTVClient::ExecuteStringCommand(char const*)
 T non-virtual thunk to CHLTVClient::FileDenied(char const*, unsigned int, bool)
 T non-virtual thunk to CHLTVClient::FileReceived(char const*, unsigned int, bool)
 T non-virtual thunk to CHLTVClient::FileRequested(char const*, unsigned int, bool)
 T non-virtual thunk to CHLTVClient::FileSent(char const*, unsigned int, bool)
 T non-virtual thunk to CHLTVClient::PacketEnd()
 T non-virtual thunk to CHLTVClient::PacketStart(int, int)
 T non-virtual thunk to CHLTVClient::SetRate(int, bool)
 T non-virtual thunk to CHLTVClient::SetUpdateRate(int, bool)
 T non-virtual thunk to CHLTVClient::~CHLTVClient()
 T non-virtual thunk to CHLTVClientState::~CHLTVClientState()
 T non-virtual thunk to CHLTVServer::AddSaveGame(CSteamID, unsigned long long, int, CUtlBuffer const&)
 T non-virtual thunk to CHLTVServer::BroadcastEvent(IGameEvent*)
 T non-virtual thunk to CHLTVServer::Clear()
 T non-virtual thunk to CHLTVServer::ConnectClient(ns_address const&, int, int, int, int, char const*, char const*, char const*, int, CUtlVector<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, CUtlMemory<CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>*, int> >&, bool)
 T non-virtual thunk to CHLTVServer::CreateNewClient(int)
 T non-virtual thunk to CHLTVServer::FillServerInfo(CSVCMsg_ServerInfo&)
 T non-virtual thunk to CHLTVServer::GetBaseServer()
 T non-virtual thunk to CHLTVServer::GetClassBaseline(ServerClass*, int*)
 T non-virtual thunk to CHLTVServer::GetDirector()
 T non-virtual thunk to CHLTVServer::GetGlobalStats(int&, int&, int&)
 T non-virtual thunk to CHLTVServer::GetHLTVSlot()
 T non-virtual thunk to CHLTVServer::GetLocalStats(int&, int&, int&)
 T non-virtual thunk to CHLTVServer::GetName() const
 T non-virtual thunk to CHLTVServer::GetNetStats(float&, float&)
 T non-virtual thunk to CHLTVServer::GetOnlineTime()
 T non-virtual thunk to CHLTVServer::GetPassword() const
 T non-virtual thunk to CHLTVServer::GetRecordingDemoFilename()
 T non-virtual thunk to CHLTVServer::GetRelayAddress()
 T non-virtual thunk to CHLTVServer::Init(bool)
 T non-virtual thunk to CHLTVServer::IsDemoPlayback()
 T non-virtual thunk to CHLTVServer::IsHLTV() const
 T non-virtual thunk to CHLTVServer::IsMasterProxy()
 T non-virtual thunk to CHLTVServer::IsMultiplayer() const
 T non-virtual thunk to CHLTVServer::IsRecording()
 T non-virtual thunk to CHLTVServer::IsTVRelay()
 T non-virtual thunk to CHLTVServer::SendClientMessages(bool)
 T non-virtual thunk to CHLTVServer::SetMaxClients(int)
 T non-virtual thunk to CHLTVServer::ShouldUpdateMasterServer()
 T non-virtual thunk to CHLTVServer::Shutdown()
 T non-virtual thunk to CHLTVServer::StartAutoRecording()
 T non-virtual thunk to CHLTVServer::StopRecording(CGameInfo const*)
 T non-virtual thunk to CHLTVServer::UserInfoChanged(int)
 T non-virtual thunk to CHLTVServer::~CHLTVServer()
 T non-virtual thunk to CIVDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T non-virtual thunk to CIVDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
 T non-virtual thunk to CIVDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
 T non-virtual thunk to CIVDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
 T non-virtual thunk to CIVDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T non-virtual thunk to CIVDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
 T non-virtual thunk to CIVDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
 T non-virtual thunk to CIVDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
 T non-virtual thunk to CIVDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
 T non-virtual thunk to CInstantReplay::InterceptMessage(INetMessage*)
 T non-virtual thunk to CJob::~CJob()
 T non-virtual thunk to CLookupViewPanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T non-virtual thunk to CMemberFunctor0<CCallQueue*, void (CCallQueueT<CTSQueue<CFunctor*, false> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>*, void (CParallelProcessor<CShadowMgr::DispDecalWorkItem_t, CMemberFuncJobItemProcessor<CShadowMgr::DispDecalWorkItem_t, CShadowMgr, CShadowMgr>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>*, void (CParallelProcessor<CrashItem_t, CFuncJobItemProcessor<CrashItem_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>*, void (CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor*, false> >, CCallQueueT<CTSQueue<CFunctor*, false> > >, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CSaveRestore*, void (CSaveRestore::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<IFileSystem*, void (IFileSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<IMDLCache*, void (IMDLCache::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<IMaterialSystem*, void (IMaterialSystem::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor1<CSaveRestore*, void (CSaveRestore::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor1<IMaterialSystem*, void (IMaterialSystem::*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor1<IXboxSystem*, void (IXboxSystem::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor2<CModelRender*, void (CModelRender::*)(int, memhandle_t__**), int, memhandle_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T non-virtual thunk to CMemberFunctor3<CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T non-virtual thunk to CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, char const*, bool), CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T non-virtual thunk to CMemberFunctor3<CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*>, int, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T non-virtual thunk to CMemberFunctor6<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, int, float), int, int, int, int, int, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T non-virtual thunk to CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T non-virtual thunk to CMemberFunctor6<ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T non-virtual thunk to CMemberFunctor7<CSOAContainer*, void (CSOAContainer::*)(int, int, int, int, CSOAContainer const*, int, int), int, int, int, int, CSOAContainer const*, int, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor7()
 T non-virtual thunk to CModelRender::GetItemName(unsigned int, void const*, char*, unsigned int)
 T non-virtual thunk to CNETMsg_SetConVar_t::~CNETMsg_SetConVar_t()
 T non-virtual thunk to CNETMsg_SignonState_t::~CNETMsg_SignonState_t()
 T non-virtual thunk to CNETMsg_StringCmd_t::~CNETMsg_StringCmd_t()
 T non-virtual thunk to CNETMsg_Tick_t::~CNETMsg_Tick_t()
 T non-virtual thunk to CNetMessagePB<10, CCLCMsg_VoiceData, 9, false>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<10, CSVCMsg_ClassInfo, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<11, CCLCMsg_BaselineAck, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<11, CSVCMsg_SetPause, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<12, CCLCMsg_ListenEvents, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<12, CSVCMsg_CreateStringTable, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<13, CCLCMsg_RespondCvarValue, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<13, CSVCMsg_UpdateStringTable, 10, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<14, CCLCMsg_FileCRCCheck, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<14, CSVCMsg_VoiceInit, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<15, CCLCMsg_LoadingProgress, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<15, CSVCMsg_VoiceData, 9, false>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<16, CCLCMsg_SplitPlayerConnect, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<16, CSVCMsg_Print, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<17, CCLCMsg_ClientMessage, 7, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<17, CSVCMsg_Sounds, 4, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<18, CSVCMsg_SetView, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<19, CSVCMsg_FixAngle, 0, false>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<20, CSVCMsg_CrosshairAngle, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<21, CSVCMsg_BSPDecal, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<22, CSVCMsg_SplitScreen, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<23, CSVCMsg_UserMessage, 7, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<25, CSVCMsg_GameEvent, 5, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<27, CSVCMsg_TempEntities, 6, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<28, CSVCMsg_Prefetch, 4, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<29, CSVCMsg_Menu, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<30, CSVCMsg_GameEventList, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<31, CSVCMsg_GetCvarValue, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<32, CSVCMsg_PacketReliable, 3, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<33, CSVCMsg_FullFrameSplit, 3, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<4, CNETMsg_Tick, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<5, CNETMsg_StringCmd, 12, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<6, CNETMsg_SetConVar, 12, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<7, CNETMsg_SignonState, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<8, CCLCMsg_ClientInfo, 0, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<8, CSVCMsg_ServerInfo, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<9, CCLCMsg_Move, 11, false>::~CNetMessagePB()
 T non-virtual thunk to CNetMessagePB<9, CSVCMsg_SendTable, 13, true>::~CNetMessagePB()
 T non-virtual thunk to CProceduralTexturePanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T non-virtual thunk to CProceduralTexturePanel::Release()
 T non-virtual thunk to CRConVProfExport::OnRemoteData(void const*, int)
 T non-virtual thunk to CRConVProfExport::OnRemoteGroupData(void const*, int)
 T non-virtual thunk to CShadowMgr::EnumerateLeaf(int, int)
 T non-virtual thunk to CStaticProp::CollisionToWorldTransform() const
 T non-virtual thunk to CStaticProp::CreateModelInstance()
 T non-virtual thunk to CStaticProp::DoAnimationEvents()
 T non-virtual thunk to CStaticProp::DrawModel(int, RenderableInstance_t const&)
 T non-virtual thunk to CStaticProp::FirstShadowChild()
 T non-virtual thunk to CStaticProp::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to CStaticProp::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to CStaticProp::GetBody()
 T non-virtual thunk to CStaticProp::GetCollisionAngles() const
 T non-virtual thunk to CStaticProp::GetCollisionGroup() const
 T non-virtual thunk to CStaticProp::GetCollisionModel()
 T non-virtual thunk to CStaticProp::GetCollisionModelIndex()
 T non-virtual thunk to CStaticProp::GetCollisionOrigin() const
 T non-virtual thunk to CStaticProp::GetColorModulation(float*)
 T non-virtual thunk to CStaticProp::GetEntityHandle()
 T non-virtual thunk to CStaticProp::GetIClientUnknown()
 T non-virtual thunk to CStaticProp::GetModel() const
 T non-virtual thunk to CStaticProp::GetModelInstance()
 T non-virtual thunk to CStaticProp::GetPVSNotifyInterface()
 T non-virtual thunk to CStaticProp::GetRenderAngles()
 T non-virtual thunk to CStaticProp::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to CStaticProp::GetRenderBoundsWorldspace(Vector&, Vector&)
 T non-virtual thunk to CStaticProp::GetRenderClipPlane()
 T non-virtual thunk to CStaticProp::GetRenderData(void*, ModelDataCategory_t)
 T non-virtual thunk to CStaticProp::GetRenderFlags()
 T non-virtual thunk to CStaticProp::GetRenderOrigin()
 T non-virtual thunk to CStaticProp::GetRootParentToWorldTransform() const
 T non-virtual thunk to CStaticProp::GetShadowCastDirection(Vector*, ShadowType_t) const
 T non-virtual thunk to CStaticProp::GetShadowCastDistance(float*, ShadowType_t) const
 T non-virtual thunk to CStaticProp::GetShadowDrawMaterial()
 T non-virtual thunk to CStaticProp::GetShadowHandle() const
 T non-virtual thunk to CStaticProp::GetShadowParent()
 T non-virtual thunk to CStaticProp::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T non-virtual thunk to CStaticProp::GetSkin()
 T non-virtual thunk to CStaticProp::GetSolid() const
 T non-virtual thunk to CStaticProp::GetSolidFlags() const
 T non-virtual thunk to CStaticProp::IsShadowDirty()
 T non-virtual thunk to CStaticProp::LODTest()
 T non-virtual thunk to CStaticProp::LookupAttachment(char const*)
 T non-virtual thunk to CStaticProp::MarkShadowDirty(bool)
 T non-virtual thunk to CStaticProp::NextShadowPeer()
 T non-virtual thunk to CStaticProp::OBBMaxs() const
 T non-virtual thunk to CStaticProp::OBBMins() const
 T non-virtual thunk to CStaticProp::OnThreadedDrawSetup()
 T non-virtual thunk to CStaticProp::OverrideAlphaModulation(unsigned char)
 T non-virtual thunk to CStaticProp::OverrideShadowAlphaModulation(unsigned char)
 T non-virtual thunk to CStaticProp::RecordToolMessage()
 T non-virtual thunk to CStaticProp::RenderHandle()
 T non-virtual thunk to CStaticProp::RenderableToWorldTransform()
 T non-virtual thunk to CStaticProp::SetupBones(matrix3x4a_t*, int, int, float)
 T non-virtual thunk to CStaticProp::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to CStaticProp::ShadowCastType()
 T non-virtual thunk to CStaticProp::ShouldDraw()
 T non-virtual thunk to CStaticProp::ShouldDrawForSplitScreenUser(int)
 T non-virtual thunk to CStaticProp::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to CStaticProp::ShouldTouchTrigger(int) const
 T non-virtual thunk to CStaticProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T non-virtual thunk to CStaticProp::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T non-virtual thunk to CStaticProp::UsesFlexDelayedWeights()
 T non-virtual thunk to CStaticProp::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T non-virtual thunk to CStaticProp::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T non-virtual thunk to CStaticPropMgr::AddDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&)
 T non-virtual thunk to CStaticPropMgr::AddShadowToStaticProp(unsigned short, IClientRenderable*)
 T non-virtual thunk to CStaticPropMgr::CreateVPhysicsRepresentations(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
 T non-virtual thunk to CStaticPropMgr::DrawStaticProps(IClientRenderable**, RenderableInstance_t const*, int, bool, bool)
 T non-virtual thunk to CStaticPropMgr::GetAllStaticProps(CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInAABB(Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInOBB(Vector const&, Vector const&, Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
 T non-virtual thunk to CStaticPropMgr::GetLightingOrigins(Vector*, int, int, IClientRenderable**, int)
 T non-virtual thunk to CStaticPropMgr::GetStaticPropByIndex(int)
 T non-virtual thunk to CStaticPropMgr::GetStaticPropMaterialColorAndLighting(CGameTrace*, int, Vector&, Vector&)
 T non-virtual thunk to CStaticPropMgr::IsStaticProp(CBaseHandle) const
 T non-virtual thunk to CStaticPropMgr::IsStaticProp(IHandleEntity*) const
 T non-virtual thunk to CStaticPropMgr::RemoveAllShadowsFromStaticProp(IClientRenderable*)
 T non-virtual thunk to CStaticPropMgr::TraceRayAgainstStaticProp(Ray_t const&, int, CGameTrace&)
 T non-virtual thunk to CTraceListData::CanTraceRay(Ray_t const&)
 T non-virtual thunk to CTraceListData::IsEmpty()
 T non-virtual thunk to CTraceListData::Reset()
 T non-virtual thunk to CTraceListData::~CTraceListData()
 T non-virtual thunk to CUncorrectedImagePanel::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T non-virtual thunk to CVRenderView::EnumerateLeaf(int, int)
 T non-virtual thunk to CWorldRenderList::OnFinalRelease()
 T non-virtual thunk to CWorldRenderList::~CWorldRenderList()
 T non-virtual thunk to ConVar::GetBaseName() const
 T non-virtual thunk to ConVar::GetName() const
 T non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
 T non-virtual thunk to ConVar::IsFlagSet(int) const
 T non-virtual thunk to ConVar::SetValue(Color)
 T non-virtual thunk to ConVar::SetValue(char const*)
 T non-virtual thunk to ConVar::SetValue(float)
 T non-virtual thunk to ConVar::SetValue(int)
 T ns_address::SetFromString(char const*)
 T ns_address::~ns_address()
 T ns_address_render::ns_address_render(ns_address const&)
 T pqdownheap(TState&, ct_data*, int)
 T print_tv_status(void (*)(char const*, ...), bool)
 T protobuf_AddDesc_demo_2eproto()
 T protobuf_AddDesc_netmessages_2eproto()
 T protobuf_AddDesc_network_5fconnection_2eproto()
 T protobuf_AddDesc_networkbasetypes_2eproto()
 T protobuf_AssignDesc_demo_2eproto()
 T protobuf_AssignDesc_netmessages_2eproto()
 T protobuf_AssignDesc_network_5fconnection_2eproto()
 T protobuf_AssignDesc_networkbasetypes_2eproto()
 T protobuf_ShutdownFile_demo_2eproto()
 T protobuf_ShutdownFile_netmessages_2eproto()
 T protobuf_ShutdownFile_network_5fconnection_2eproto()
 T protobuf_ShutdownFile_networkbasetypes_2eproto()
 T r_lod_f(IConVar*, char const*, float)
 T scan_tree(TState&, ct_data*, int)
 T send_all_trees(TState&, int, int, int)
 T send_bits(TState&, int, int)
 T send_tree(TState&, ct_data*, int)
 T showbudget_texture_global_off_f()
 T showbudget_texture_global_on_f()
 T showbudget_texture_off_f()
 T showbudget_texture_on_f()
 T snappy::ByteArraySource::Available() const
 T snappy::ByteArraySource::Peek(unsigned long*)
 T snappy::ByteArraySource::Skip(unsigned long)
 T snappy::ByteArraySource::~ByteArraySource()
 T snappy::Compress(char const*, unsigned long, std::string*)
 T snappy::Compress(snappy::Source*, snappy::Sink*)
 T snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*)
 T snappy::IsValidCompressedBuffer(char const*, unsigned long)
 T snappy::LogMessageCrash::~LogMessageCrash()
 T snappy::MaxCompressedLength(unsigned long)
 T snappy::RawCompress(char const*, unsigned long, char*, unsigned long*)
 T snappy::RawUncompress(char const*, unsigned long, char*)
 T snappy::RawUncompress(snappy::Source*, char*)
 T snappy::SnappyDecompressor::RefillTag()
 T snappy::UncheckedByteArraySink::Append(char const*, unsigned long)
 T snappy::UncheckedByteArraySink::GetAppendBuffer(unsigned long, char*)
 T snappy::UncheckedByteArraySink::~UncheckedByteArraySink()
 T snappy::Uncompress(char const*, unsigned long, std::string*)
 T snappy::internal::CompressFragment(char const*, unsigned long, char*, unsigned short*, int)
 T snappy::internal::WorkingMemory::GetHashTable(unsigned long, int*)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, int const&)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_create_node(std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&)
 T std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique(std::pair<int const, std::string> const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::find(std::pair<std::string, int> const&) const
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::find(std::string const&) const
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_create_node(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const
 T std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long)
 T std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_allocate(unsigned long)
 T std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long)
 T std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_allocate(unsigned long)
 T std::_Vector_base<void*, std::allocator<void*> >::_M_allocate(unsigned long)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::less<std::pair<std::string, int> >::operator()(std::pair<std::string, int> const&, std::pair<std::string, int> const&) const
 T std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&)
 T std::string& std::string::_M_replace_dispatch<unsigned char*>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, unsigned char*, unsigned char*, std::__false_type)
 T std::string* std::__copy_backward<false, std::random_access_iterator_tag>::__copy_b<std::string*, std::string*>(std::string*, std::string*, std::string*)
 T std::vector<char const*, std::allocator<char const*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, unsigned long, char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::push_back(char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::resize(unsigned long, char const*)
 T std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 T std::vector<int, std::allocator<int> >::push_back(int const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::push_back(std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::resize(unsigned long, std::string*)
 T std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 T std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&)
 T std::vector<std::string, std::allocator<std::string> >::~vector()
 T std::vector<void (*)(), std::allocator<void (*)()> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
 T std::vector<void (*)(), std::allocator<void (*)()> >::push_back(void (* const&)())
 T std::vector<void*, std::allocator<void*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 T std::vector<void*, std::allocator<void*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
 T std::vector<void*, std::allocator<void*> >::push_back(void* const&)
 T std::vector<void*, std::allocator<void*> >::resize(unsigned long, void*)
 T strnlen
 T ucrc32(unsigned long, unsigned char const*, unsigned int)
 T unsigned int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoLookup<model_t*>(model_t*, unsigned int, unsigned int*) const
 T unsigned int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::EqualProxy, unsigned int>::DoLookup<unsigned int>(unsigned int, unsigned int, unsigned int*) const
 T unsigned int CUtlHashtable<IModelLoadCallback*, int, DefaultHashFunctor<IModelLoadCallback*>, DefaultEqualFunctor<IModelLoadCallback*>, undefined_t>::DoInsert<IModelLoadCallback*>(IModelLoadCallback*, int, unsigned int, bool*)
 T unsigned int CUtlHashtable<char const*, empty_t, DefaultHashFunctor<char const*>, DefaultEqualFunctor<char const*>, undefined_t>::DoInsert<char const*>(char const*, unsigned int)
 T unsigned int CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoInsert<model_t*>(model_t*, unsigned int)
 T unsigned int CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, unsigned int>::DoInsert<model_t*>(model_t*)
 T unzCloseCurrentFile(unz_s*)
 T unzLocateFile(unz_s*, char const*, int)
 T unzOpenCurrentFile(unz_s*)
 T unzOpenInternal(LUFILE*)
 T unzReadCurrentFile(unz_s*, void*, unsigned int)
 T unzlocal_CheckCurrentFileCoherencyHeader(unz_s*, unsigned int*, unsigned long*, unsigned int*)
 T unzlocal_GetCurrentFileInfoInternal(unz_s*, unz_file_info_s*, unz_file_info_internal_s*, char*, unsigned long, void*, unsigned long, char*, unsigned long)
 T unzlocal_SearchCentralDir(LUFILE*)
 T unzlocal_getLong(LUFILE*, unsigned long*)
 T unzlocal_getShort(LUFILE*, unsigned long*)
 T va(char const*, ...)
 T vgui::AnimatingImagePanel::AddImage(vgui::IImage*)
 T vgui::AnimatingImagePanel::AnimatingImagePanel(vgui::Panel*, char const*)
 T vgui::AnimatingImagePanel::ApplySettings(KeyValues*)
 T vgui::AnimatingImagePanel::GetAnimMap()
 T vgui::AnimatingImagePanel::GetDescription()
 T vgui::AnimatingImagePanel::GetKBMap()
 T vgui::AnimatingImagePanel::GetMessageMap()
 T vgui::AnimatingImagePanel::GetPanelClassName()
 T vgui::AnimatingImagePanel::GetSettings(KeyValues*)
 T vgui::AnimatingImagePanel::LoadAnimation(char const*, int)
 T vgui::AnimatingImagePanel::OnTick()
 T vgui::AnimatingImagePanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::AnimatingImagePanel::PerformLayout()
 T vgui::AnimatingImagePanel::ResetAnimation(int)
 T vgui::AnimatingImagePanel::StartAnimation()
 T vgui::AnimatingImagePanel::StopAnimation()
 T vgui::AnimatingImagePanel::~AnimatingImagePanel()
 T vgui::AnimationController::AnimationController(vgui::Panel*)
 T vgui::AnimationController::ExecAnimationCommand(unsigned short, vgui::AnimationController::AnimCommand_t&, vgui::Panel*)
 T vgui::AnimationController::GetAnimMap()
 T vgui::AnimationController::GetKBMap()
 T vgui::AnimationController::GetMessageMap()
 T vgui::AnimationController::GetPanelClassName()
 T vgui::AnimationController::GetRelativeOffset(vgui::AnimationController::AnimAlign_t&, bool)
 T vgui::AnimationController::GetValue(vgui::AnimationController::ActiveAnimation_t&, vgui::Panel*, unsigned short)
 T vgui::AnimationController::LoadScriptFile(char const*)
 T vgui::AnimationController::ParseScriptFile(char*, int)
 T vgui::AnimationController::ReloadScriptFile()
 T vgui::AnimationController::RemoveQueuedAnimationCommands(unsigned short, vgui::Panel*)
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, Color, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, float, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunCmd_SetFont(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_SetString(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_SetTexture(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_StopAnimation(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_StopPanelAnimations(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::SetScriptFile(unsigned int, char const*, bool)
 T vgui::AnimationController::SetValue(vgui::AnimationController::ActiveAnimation_t&, vgui::Panel*, unsigned short, vgui::AnimationController::Value_t&)
 T vgui::AnimationController::SetupPosition(vgui::AnimationController::AnimCmdAnimate_t&, float*, char const*, int)
 T vgui::AnimationController::StartAnimationSequence(char const*)
 T vgui::AnimationController::StartAnimationSequence(vgui::Panel*, char const*)
 T vgui::AnimationController::StartCmd_Animate(unsigned short, vgui::AnimationController::AnimCmdAnimate_t&, vgui::Panel*)
 T vgui::AnimationController::StartCmd_Animate(vgui::Panel*, unsigned short, vgui::AnimationController::AnimCmdAnimate_t&)
 T vgui::AnimationController::UpdateActiveAnimations(bool)
 T vgui::AnimationController::UpdateAnimations(float)
 T vgui::AnimationController::UpdatePostedMessages(bool)
 T vgui::AnimationController::UpdateScreenSize()
 T vgui::AnimationController::~AnimationController()
 T vgui::BaseInputDialog::BaseInputDialog(vgui::Panel*, char const*, bool)
 T vgui::BaseInputDialog::DoModal(KeyValues*)
 T vgui::BaseInputDialog::GetAnimMap()
 T vgui::BaseInputDialog::GetKBMap()
 T vgui::BaseInputDialog::GetMessageMap()
 T vgui::BaseInputDialog::GetPanelClassName()
 T vgui::BaseInputDialog::OnCommand(char const*)
 T vgui::BaseInputDialog::PerformLayout()
 T vgui::BaseInputDialog::PerformLayout(int, int, int, int)
 T vgui::BaseInputDialog::WriteDataToKeyValues(KeyValues*, bool)
 T vgui::BaseInputDialog::~BaseInputDialog()
 T vgui::BaseTooltip::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BaseTooltip::GetText()
 T vgui::BaseTooltip::HideTooltip()
 T vgui::BaseTooltip::PerformLayout()
 T vgui::BaseTooltip::PositionWindow(vgui::Panel*)
 T vgui::BaseTooltip::ResetDelay()
 T vgui::BaseTooltip::SetDrawPos(int, int)
 T vgui::BaseTooltip::SetEnabled(bool)
 T vgui::BaseTooltip::SetText(char const*)
 T vgui::BaseTooltip::SetTooltipDelay(int)
 T vgui::BaseTooltip::SetTooltipFormatToSingleLine()
 T vgui::BaseTooltip::SetTooltipInfo(KeyValues*)
 T vgui::BaseTooltip::ShowTooltip(vgui::Panel*)
 T vgui::BaseTooltip::~BaseTooltip()
 T vgui::BuildGroup::ActivateBuildDialog()
 T vgui::BuildGroup::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildGroup::ApplySettings(KeyValues*, bool)
 T vgui::BuildGroup::BuildGroup(vgui::Panel*, vgui::Panel*)
 T vgui::BuildGroup::ChangeControlSettingsFile(char const*)
 T vgui::BuildGroup::CreateBuildDialog()
 T vgui::BuildGroup::CursorMoved(int, int, vgui::Panel*)
 T vgui::BuildGroup::DeleteAllControlsCreatedByControlSettingsFile(KeyValues*)
 T vgui::BuildGroup::DrawRulers(IVGuiPaintSurface*)
 T vgui::BuildGroup::FieldNameTaken(char const*)
 T vgui::BuildGroup::GetContextPanel()
 T vgui::BuildGroup::GetControlGroup()
 T vgui::BuildGroup::GetCurrentPanel()
 T vgui::BuildGroup::GetCursor(vgui::Panel*)
 T vgui::BuildGroup::GetDialogVariables()
 T vgui::BuildGroup::GetNewFieldName(char*, int, vgui::Panel*)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileByIndex(int)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileCount()
 T vgui::BuildGroup::GetResourceName()
 T vgui::BuildGroup::GetSettings(KeyValues*)
 T vgui::BuildGroup::HasRulersOn()
 T vgui::BuildGroup::IncrementalReloadControlSettings()
 T vgui::BuildGroup::IsEnabled()
 T vgui::BuildGroup::KeyCodeReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyCodeTyped(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyTyped(wchar_t, vgui::Panel*)
 T vgui::BuildGroup::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::BuildGroup::LoadSettingsFile(char const*, char const*)
 T vgui::BuildGroup::MouseDoublePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MousePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MouseReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::NewControl(KeyValues*, int, int)
 T vgui::BuildGroup::NewControl(char const*, int, int)
 T vgui::BuildGroup::PanelAdded(vgui::Panel*)
 T vgui::BuildGroup::PanelRemoved(vgui::Panel*)
 T vgui::BuildGroup::ProcessConditionalKeys(KeyValues*, KeyValues*)
 T vgui::BuildGroup::RegisterControlSettingsFile(char const*, char const*)
 T vgui::BuildGroup::ReloadControlSettings()
 T vgui::BuildGroup::RemoveSettings()
 T vgui::BuildGroup::SaveControlSettings()
 T vgui::BuildGroup::SetContextPanel(vgui::Panel*)
 T vgui::BuildGroup::SetEnabled(bool)
 T vgui::BuildGroup::SetRulerLabelsVisible(bool)
 T vgui::BuildGroup::ToggleRulerDisplay()
 T vgui::BuildGroup::~BuildGroup()
 T vgui::BuildModeDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::BuildModeDialog::ApplyDataToControls()
 T vgui::BuildModeDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildModeDialog::BuildModeDialog(vgui::BuildGroup*)
 T vgui::BuildModeDialog::CreateControls()
 T vgui::BuildModeDialog::DoCopy()
 T vgui::BuildModeDialog::DoPaste()
 T vgui::BuildModeDialog::DoUndo()
 T vgui::BuildModeDialog::EnableSaveButton()
 T vgui::BuildModeDialog::GetAnimMap()
 T vgui::BuildModeDialog::GetKBMap()
 T vgui::BuildModeDialog::GetMessageMap()
 T vgui::BuildModeDialog::GetPanelClassName()
 T vgui::BuildModeDialog::IsBuildGroupEnabled()
 T vgui::BuildModeDialog::OnChangeChild(int)
 T vgui::BuildModeDialog::OnClose()
 T vgui::BuildModeDialog::OnCommand(char const*)
 T vgui::BuildModeDialog::OnCreateNewControl(char const*)
 T vgui::BuildModeDialog::OnDeletePanel()
 T vgui::BuildModeDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::BuildModeDialog::OnPanelMoved()
 T vgui::BuildModeDialog::OnReloadLocalization()
 T vgui::BuildModeDialog::OnSetClipboardText(char const*)
 T vgui::BuildModeDialog::OnShowNewControlMenu()
 T vgui::BuildModeDialog::OnTextChanged(vgui::Panel*)
 T vgui::BuildModeDialog::OnTextKillFocus()
 T vgui::BuildModeDialog::PanelList::AddItem(vgui::Panel*, vgui::TextEntry*, vgui::ComboBox*, vgui::Button*, char const*, int)
 T vgui::BuildModeDialog::PerformLayout()
 T vgui::BuildModeDialog::SetActiveControl(vgui::Panel*)
 T vgui::BuildModeDialog::ShutdownBuildMode()
 T vgui::BuildModeDialog::StoreSettings()
 T vgui::BuildModeDialog::StoreUndoSettings()
 T vgui::BuildModeDialog::UpdateControlData(vgui::Panel*)
 T vgui::BuildModeDialog::~BuildModeDialog()
 T vgui::Button::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Button::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Button::ApplySingleSetting(KeyValues*)
 T vgui::Button::Button(vgui::Panel*, char const*, char const*, vgui::Panel*, char const*)
 T vgui::Button::Button(vgui::Panel*, char const*, wchar_t const*, vgui::Panel*, char const*)
 T vgui::Button::CanBeDefaultButton()
 T vgui::Button::DoClick()
 T vgui::Button::DrawFocusBorder(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Button::FireActionSignal()
 T vgui::Button::ForceDepressed(bool)
 T vgui::Button::GetAnimMap()
 T vgui::Button::GetBaseStyleName()
 T vgui::Button::GetBorder(bool, bool, bool, bool)
 T vgui::Button::GetBottomAlignPoint()
 T vgui::Button::GetButtonBgColor()
 T vgui::Button::GetButtonFgColor()
 T vgui::Button::GetCommand()
 T vgui::Button::GetDescription()
 T vgui::Button::GetKBMap()
 T vgui::Button::GetMessageMap()
 T vgui::Button::GetPanelClassName()
 T vgui::Button::GetSettings(KeyValues*)
 T vgui::Button::GetSizerMinimumSize(int&, int&)
 T vgui::Button::GetStyleFlags()
 T vgui::Button::GetUnpackStructure() const
 T vgui::Button::Init()
 T vgui::Button::IsArmed()
 T vgui::Button::IsBlinking()
 T vgui::Button::IsDepressed()
 T vgui::Button::IsMouseClickEnabled(ButtonCode_t)
 T vgui::Button::IsSelected()
 T vgui::Button::IsUseCaptureMouseEnabled()
 T vgui::Button::NavigateFrom()
 T vgui::Button::NavigateTo()
 T vgui::Button::OnCursorEntered()
 T vgui::Button::OnCursorExited()
 T vgui::Button::OnHotkey()
 T vgui::Button::OnKeyCodePressed(ButtonCode_t)
 T vgui::Button::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Button::OnKillFocus()
 T vgui::Button::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Button::OnMousePressed(ButtonCode_t)
 T vgui::Button::OnMouseReleased(ButtonCode_t)
 T vgui::Button::OnSetFocus()
 T vgui::Button::OnSetState(int)
 T vgui::Button::Paint(IVGuiPaintSurface*)
 T vgui::Button::PerformLayout()
 T vgui::Button::RecalculateDepressedState()
 T vgui::Button::RequestInfo(KeyValues*)
 T vgui::Button::SetArmed(bool)
 T vgui::Button::SetArmedColor(Color, Color)
 T vgui::Button::SetAsCurrentDefaultButton(int)
 T vgui::Button::SetAsDefaultButton(int)
 T vgui::Button::SetBlink(bool)
 T vgui::Button::SetBlinkColor(Color)
 T vgui::Button::SetButtonActivationType(vgui::Button::ActivationType_t)
 T vgui::Button::SetButtonBorderEnabled(bool)
 T vgui::Button::SetCommand(KeyValues*)
 T vgui::Button::SetCommand(char const*)
 T vgui::Button::SetDefaultBorder(vgui::IBorder*)
 T vgui::Button::SetDefaultColor(Color, Color)
 T vgui::Button::SetDepressedBorder(vgui::IBorder*)
 T vgui::Button::SetDepressedColor(Color, Color)
 T vgui::Button::SetKeyFocusBorder(vgui::IBorder*)
 T vgui::Button::SetMouseClickEnabled(ButtonCode_t, bool)
 T vgui::Button::SetSelected(bool)
 T vgui::Button::SetUseCaptureMouse(bool)
 T vgui::Button::SizeToContents()
 T vgui::Button::~Button()
 T vgui::CBitmapImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CBitmapImagePanel::ApplySettings(KeyValues*)
 T vgui::CBitmapImagePanel::CBitmapImagePanel(vgui::Panel*, char const*, char const*)
 T vgui::CBitmapImagePanel::ComputeImagePosition(int&, int&, int&, int&)
 T vgui::CBitmapImagePanel::GetDescription()
 T vgui::CBitmapImagePanel::GetSettings(KeyValues*)
 T vgui::CBitmapImagePanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::CBitmapImagePanel::PaintBorder(IVGuiPaintSurface*)
 T vgui::CBitmapImagePanel::SetContentAlignment(vgui::Label::Alignment)
 T vgui::CBitmapImagePanel::setTexture(char const*, bool)
 T vgui::CBitmapImagePanel::~CBitmapImagePanel()
 T vgui::CBuildFactoryHelper::CBuildFactoryHelper(char const*, vgui::Panel* (*)())
 T vgui::CBuildFactoryHelper::GetFactoryNames(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T vgui::CBuildFactoryHelper::InstancePanel(char const*)
 T vgui::CMenuManager::AddMenu(vgui::Menu*)
 T vgui::CMenuManager::IsWithinMenuOrRelative(vgui::Panel*, int, int)
 T vgui::CMenuManager::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::CMenuManager::~CMenuManager()
 T vgui::CSizerBase::CSizerMember::RecursiveInvalidateCachedSize()
 T vgui::CTreeViewListControl::CTreeViewListControl(vgui::Panel*, char const*)
 T vgui::CTreeViewListControl::DrawTitleBars(IVGuiPaintSurface*)
 T vgui::CTreeViewListControl::GetAnimMap()
 T vgui::CTreeViewListControl::GetGridElementBounds(int, int, int&, int&, int&, int&)
 T vgui::CTreeViewListControl::GetKBMap()
 T vgui::CTreeViewListControl::GetMessageMap()
 T vgui::CTreeViewListControl::GetNumColumns() const
 T vgui::CTreeViewListControl::GetNumRows()
 T vgui::CTreeViewListControl::GetPanelClassName()
 T vgui::CTreeViewListControl::GetScrollBarSize()
 T vgui::CTreeViewListControl::GetTitleBarHeight()
 T vgui::CTreeViewListControl::GetTree()
 T vgui::CTreeViewListControl::GetTreeItemAtRow(int)
 T vgui::CTreeViewListControl::Paint(IVGuiPaintSurface*)
 T vgui::CTreeViewListControl::PerformLayout()
 T vgui::CTreeViewListControl::PostChildPaint(IVGuiPaintSurface*)
 T vgui::CTreeViewListControl::RecalculateRows_R(int)
 T vgui::CTreeViewListControl::SetBorderColor(Color)
 T vgui::CTreeViewListControl::SetColumnInfo(int, char const*, int, int)
 T vgui::CTreeViewListControl::SetNumColumns(int)
 T vgui::CTreeViewListControl::SetTitleBarInfo(unsigned long, int)
 T vgui::CTreeViewListControl::SetTreeView(vgui::TreeView*)
 T vgui::CTreeViewListControl::~CTreeViewListControl()
 T vgui::CheckButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CheckButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CheckButton::CheckButton(vgui::Panel*, char const*, char const*)
 T vgui::CheckButton::GetAnimMap()
 T vgui::CheckButton::GetBorder(bool, bool, bool, bool)
 T vgui::CheckButton::GetButtonFgColor()
 T vgui::CheckButton::GetKBMap()
 T vgui::CheckButton::GetMessageMap()
 T vgui::CheckButton::GetPanelClassName()
 T vgui::CheckButton::IsCheckButtonCheckable() const
 T vgui::CheckButton::OnCheckButtonChecked(vgui::Panel*)
 T vgui::CheckButton::SetCheckButtonCheckable(bool)
 T vgui::CheckButton::SetSelected(bool)
 T vgui::CheckButton::~CheckButton()
 T vgui::CircularProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CircularProgressBar::ApplySettings(KeyValues*)
 T vgui::CircularProgressBar::CircularProgressBar(vgui::Panel*, char const*)
 T vgui::CircularProgressBar::DrawCircleSegment(IVGuiPaintSurface*, Color, float, bool)
 T vgui::CircularProgressBar::GetAnimMap()
 T vgui::CircularProgressBar::GetKBMap()
 T vgui::CircularProgressBar::GetMessageMap()
 T vgui::CircularProgressBar::GetPanelClassName()
 T vgui::CircularProgressBar::Paint(IVGuiPaintSurface*)
 T vgui::CircularProgressBar::PaintBackground(IVGuiPaintSurface*)
 T vgui::CircularProgressBar::SetImage(char const*, progress_textures_t)
 T vgui::CircularProgressBar::~CircularProgressBar()
 T vgui::ClickPanel::ClickPanel(vgui::Panel*)
 T vgui::ClickPanel::GetAnimMap()
 T vgui::ClickPanel::GetKBMap()
 T vgui::ClickPanel::GetMessageMap()
 T vgui::ClickPanel::GetPanelClassName()
 T vgui::ClickPanel::OnMousePressed(ButtonCode_t)
 T vgui::ClickPanel::~ClickPanel()
 T vgui::ComboBox::ActivateItem(int)
 T vgui::ComboBox::ActivateItemByRow(int)
 T vgui::ComboBox::AddItem(char const*, KeyValues const*)
 T vgui::ComboBox::AddItem(wchar_t const*, KeyValues const*)
 T vgui::ComboBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ComboBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBox::ComboBox(vgui::Panel*, char const*, int, bool)
 T vgui::ComboBox::DoClick()
 T vgui::ComboBox::GetActiveItem()
 T vgui::ComboBox::GetActiveItemUserData()
 T vgui::ComboBox::GetAnimMap()
 T vgui::ComboBox::GetBaseStyleName()
 T vgui::ComboBox::GetItemCount()
 T vgui::ComboBox::GetItemIDFromRow(int)
 T vgui::ComboBox::GetItemText(int, char*, int)
 T vgui::ComboBox::GetKBMap()
 T vgui::ComboBox::GetMenu()
 T vgui::ComboBox::GetMessageMap()
 T vgui::ComboBox::GetPanelClassName()
 T vgui::ComboBox::HideMenu()
 T vgui::ComboBox::IsDropdownVisible()
 T vgui::ComboBox::IsItemIDValid(int)
 T vgui::ComboBox::OnCommand(char const*)
 T vgui::ComboBox::OnCursorEntered()
 T vgui::ComboBox::OnCursorExited()
 T vgui::ComboBox::OnHideMenu(vgui::Menu*)
 T vgui::ComboBox::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ComboBox::OnKeyTyped(wchar_t)
 T vgui::ComboBox::OnKillFocus()
 T vgui::ComboBox::OnMenuClose()
 T vgui::ComboBox::OnMenuItemSelected()
 T vgui::ComboBox::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ComboBox::OnMousePressed(ButtonCode_t)
 T vgui::ComboBox::OnSetFocus()
 T vgui::ComboBox::OnSetText(wchar_t const*)
 T vgui::ComboBox::OnShowMenu(vgui::Menu*)
 T vgui::ComboBox::OnSizeChanged(int, int)
 T vgui::ComboBox::PerformLayout()
 T vgui::ComboBox::RemoveAll()
 T vgui::ComboBox::SelectMenuItem(int)
 T vgui::ComboBox::SetDropdownButtonVisible(bool)
 T vgui::ComboBox::SetFont(unsigned long)
 T vgui::ComboBox::SetItemEnabled(char const*, bool)
 T vgui::ComboBox::SetItemEnabled(int, bool)
 T vgui::ComboBox::SetMenu(vgui::Menu*)
 T vgui::ComboBox::SetNumberOfEditLines(int)
 T vgui::ComboBox::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::ComboBox::SetUseFallbackFont(bool, unsigned long)
 T vgui::ComboBox::ShowMenu()
 T vgui::ComboBox::SortItems()
 T vgui::ComboBox::UpdateItem(int, char const*, KeyValues const*)
 T vgui::ComboBox::UpdateItem(int, wchar_t const*, KeyValues const*)
 T vgui::ComboBox::~ComboBox()
 T vgui::ComboBoxButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBoxButton::ComboBoxButton(vgui::ComboBox*, char const*, char const*)
 T vgui::ComboBoxButton::GetAnimMap()
 T vgui::ComboBoxButton::GetBaseStyleName()
 T vgui::ComboBoxButton::GetBorder(bool, bool, bool, bool)
 T vgui::ComboBoxButton::GetButtonBgColor()
 T vgui::ComboBoxButton::GetKBMap()
 T vgui::ComboBoxButton::GetMessageMap()
 T vgui::ComboBoxButton::GetPanelClassName()
 T vgui::ComboBoxButton::OnCursorExited()
 T vgui::ComboBoxButton::~ComboBoxButton()
 T vgui::ContextLabel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ContextLabel::ContextLabel(vgui::Button*, char const*, char const*)
 T vgui::ContextLabel::GetAnimMap()
 T vgui::ContextLabel::GetKBMap()
 T vgui::ContextLabel::GetMessageMap()
 T vgui::ContextLabel::GetPanelClassName()
 T vgui::ContextLabel::OnMousePressed(ButtonCode_t)
 T vgui::ContextLabel::OnMouseReleased(ButtonCode_t)
 T vgui::ContextLabel::~ContextLabel()
 T vgui::ContinuousProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ContinuousProgressBar::ContinuousProgressBar(vgui::Panel*, char const*)
 T vgui::ContinuousProgressBar::GetAnimMap()
 T vgui::ContinuousProgressBar::GetKBMap()
 T vgui::ContinuousProgressBar::GetMessageMap()
 T vgui::ContinuousProgressBar::GetPanelClassName()
 T vgui::ContinuousProgressBar::Paint(IVGuiPaintSurface*)
 T vgui::ContinuousProgressBar::PaintBackground(IVGuiPaintSurface*)
 T vgui::ContinuousProgressBar::~ContinuousProgressBar()
 T vgui::CvarToggleCheckButton<ConVarRef>::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CvarToggleCheckButton<ConVarRef>::ApplySettings(KeyValues*)
 T vgui::CvarToggleCheckButton<ConVarRef>::CvarToggleCheckButton(vgui::Panel*, char const*, char const*, char const*, bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::GetAnimMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetPanelClassName()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnApplyChanges()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnButtonChecked()
 T vgui::CvarToggleCheckButton<ConVarRef>::Paint(IVGuiPaintSurface*)
 T vgui::CvarToggleCheckButton<ConVarRef>::SetSelected(bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::~CvarToggleCheckButton()
 T vgui::DirectorySelectDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::DirectorySelectDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::DirectorySelectDialog::BuildDirTree()
 T vgui::DirectorySelectDialog::BuildDriveChoices()
 T vgui::DirectorySelectDialog::DirectorySelectDialog(vgui::Panel*, char const*)
 T vgui::DirectorySelectDialog::DoModal()
 T vgui::DirectorySelectDialog::DoesDirectoryHaveSubdirectories(char const*, char const*)
 T vgui::DirectorySelectDialog::ExpandTreeNode(char const*, int)
 T vgui::DirectorySelectDialog::GenerateFullPathForNode(int, char*, int)
 T vgui::DirectorySelectDialog::GetAnimMap()
 T vgui::DirectorySelectDialog::GetKBMap()
 T vgui::DirectorySelectDialog::GetMessageMap()
 T vgui::DirectorySelectDialog::GetPanelClassName()
 T vgui::DirectorySelectDialog::OnClose()
 T vgui::DirectorySelectDialog::OnCommand(char const*)
 T vgui::DirectorySelectDialog::OnCreateDirectory(char const*)
 T vgui::DirectorySelectDialog::OnTextChanged()
 T vgui::DirectorySelectDialog::OnTreeViewItemSelected()
 T vgui::DirectorySelectDialog::PerformLayout()
 T vgui::DirectorySelectDialog::SetStartDirectory(char const*)
 T vgui::DirectorySelectDialog::~DirectorySelectDialog()
 T vgui::DirectoryTreeView::GenerateChildrenOfNode(int)
 T vgui::DirectoryTreeView::~DirectoryTreeView()
 T vgui::Divider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Divider::Divider(vgui::Panel*, char const*)
 T vgui::Divider::GetAnimMap()
 T vgui::Divider::GetKBMap()
 T vgui::Divider::GetMessageMap()
 T vgui::Divider::GetPanelClassName()
 T vgui::Divider::~Divider()
 T vgui::EditablePanel::ActivateBuildMode()
 T vgui::EditablePanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::EditablePanel::ApplyRegionScrollingToControls(vgui::layoutcmd_t const&)
 T vgui::EditablePanel::ApplySettings(KeyValues*)
 T vgui::EditablePanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::CalculateRegionScrollbars(vgui::layoutcmd_t const&)
 T vgui::EditablePanel::CreateControlByName(char const*)
 T vgui::EditablePanel::EditablePanel(vgui::Panel*, char const*)
 T vgui::EditablePanel::ForceSubPanelsToUpdateWithNewDialogVariables()
 T vgui::EditablePanel::GetAnimMap()
 T vgui::EditablePanel::GetBuildGroup()
 T vgui::EditablePanel::GetControlInt(char const*, int)
 T vgui::EditablePanel::GetControlString(char const*, char const*)
 T vgui::EditablePanel::GetControlString(char const*, char*, int, char const*)
 T vgui::EditablePanel::GetCurrentKeyFocus()
 T vgui::EditablePanel::GetDialogVariables()
 T vgui::EditablePanel::GetFocusNavGroup()
 T vgui::EditablePanel::GetKBMap()
 T vgui::EditablePanel::GetLayoutFile()
 T vgui::EditablePanel::GetLayoutFileName()
 T vgui::EditablePanel::GetMessageMap()
 T vgui::EditablePanel::GetPanelClassName()
 T vgui::EditablePanel::GetUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::HasHotkey(wchar_t)
 T vgui::EditablePanel::LayoutCmd_CreateRegion(vgui::layoutcmd_t const&)
 T vgui::EditablePanel::LayoutCmd_Place(vgui::layoutcmd_t const&)
 T vgui::EditablePanel::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::EditablePanel::LoadControlSettingsAndUserConfig(char const*, int)
 T vgui::EditablePanel::LoadUserConfig(char const*, int)
 T vgui::EditablePanel::OnChildAdded(unsigned int)
 T vgui::EditablePanel::OnChildRemoved(unsigned int)
 T vgui::EditablePanel::OnClose()
 T vgui::EditablePanel::OnCurrentDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnFindDefaultButton()
 T vgui::EditablePanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::EditablePanel::OnLayoutFileChanged(char const*)
 T vgui::EditablePanel::OnMouseWheeled(int)
 T vgui::EditablePanel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::EditablePanel::OnSetFocus()
 T vgui::EditablePanel::OnSizeChanged(int, int)
 T vgui::EditablePanel::OnSliderMoved()
 T vgui::EditablePanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::EditablePanel::PerformLayout()
 T vgui::EditablePanel::PostChildPaint(IVGuiPaintSurface*)
 T vgui::EditablePanel::RegisterControlSettingsFile(char const*, char const*)
 T vgui::EditablePanel::ReloadLayoutFile()
 T vgui::EditablePanel::RequestFocus(int)
 T vgui::EditablePanel::RequestFocusNext(unsigned int)
 T vgui::EditablePanel::RequestFocusPrev(unsigned int)
 T vgui::EditablePanel::RequestInfo(KeyValues*)
 T vgui::EditablePanel::ResolveLayoutChildPointers()
 T vgui::EditablePanel::SaveUserConfig()
 T vgui::EditablePanel::SetControlEnabled(char const*, bool)
 T vgui::EditablePanel::SetControlGroupVisible(char const*, bool)
 T vgui::EditablePanel::SetControlInt(char const*, int)
 T vgui::EditablePanel::SetControlString(char const*, char const*)
 T vgui::EditablePanel::SetControlString(char const*, wchar_t const*)
 T vgui::EditablePanel::SetControlVisible(char const*, bool)
 T vgui::EditablePanel::SetDialogVariable(char const*, char const*)
 T vgui::EditablePanel::SetDialogVariable(char const*, float)
 T vgui::EditablePanel::SetDialogVariable(char const*, int)
 T vgui::EditablePanel::SetDialogVariable(char const*, wchar_t const*)
 T vgui::EditablePanel::~EditablePanel()
 T vgui::ExpandButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ExpandButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ExpandButton::ExpandButton(vgui::Panel*, char const*)
 T vgui::ExpandButton::GetAnimMap()
 T vgui::ExpandButton::GetBorder(bool, bool, bool, bool)
 T vgui::ExpandButton::GetKBMap()
 T vgui::ExpandButton::GetMessageMap()
 T vgui::ExpandButton::GetPanelClassName()
 T vgui::ExpandButton::OnExpanded(vgui::Panel*)
 T vgui::ExpandButton::Paint(IVGuiPaintSurface*)
 T vgui::ExpandButton::SetSelected(bool)
 T vgui::ExpandButton::~ExpandButton()
 T vgui::FileData_t::PrepareKV(KeyValues*)
 T vgui::FileNameComboBox::FileNameComboBox(vgui::FileOpenDialog*, char const*, int, bool)
 T vgui::FileNameComboBox::GetAnimMap()
 T vgui::FileNameComboBox::GetKBMap()
 T vgui::FileNameComboBox::GetMessageMap()
 T vgui::FileNameComboBox::GetPanelClassName()
 T vgui::FileNameComboBox::OnKeyCodeTyped(ButtonCode_t)
 T vgui::FileNameComboBox::OnMenuItemSelected()
 T vgui::FileNameComboBox::~FileNameComboBox()
 T vgui::FileOpenDialog::AddFilter(char const*, char const*, bool, char const*)
 T vgui::FileOpenDialog::AddSearchHistoryString(char const*)
 T vgui::FileOpenDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::FileOpenDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FileOpenDialog::BuildFileList()
 T vgui::FileOpenDialog::ChooseExtension(char*, int)
 T vgui::FileOpenDialog::DoModal(bool)
 T vgui::FileOpenDialog::ExtensionMatchesFilter(char const*)
 T vgui::FileOpenDialog::FileNameWildCardMatch(char const*, char const*)
 T vgui::FileOpenDialog::FileOpenDialog(vgui::Panel*, char const*, bool, KeyValues*)
 T vgui::FileOpenDialog::FilterFileList()
 T vgui::FileOpenDialog::GetAnimMap()
 T vgui::FileOpenDialog::GetKBMap()
 T vgui::FileOpenDialog::GetMessageMap()
 T vgui::FileOpenDialog::GetPanelClassName()
 T vgui::FileOpenDialog::Init(char const*, KeyValues*)
 T vgui::FileOpenDialog::MoveUpFolder()
 T vgui::FileOpenDialog::NewFolder(char const*)
 T vgui::FileOpenDialog::OnClose()
 T vgui::FileOpenDialog::OnCommand(char const*)
 T vgui::FileOpenDialog::OnFolderUp()
 T vgui::FileOpenDialog::OnInputCanceled()
 T vgui::FileOpenDialog::OnInputCompleted(KeyValues*)
 T vgui::FileOpenDialog::OnItemSelected()
 T vgui::FileOpenDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::FileOpenDialog::OnListItemSelected()
 T vgui::FileOpenDialog::OnMatchStringSelected()
 T vgui::FileOpenDialog::OnNewFolder()
 T vgui::FileOpenDialog::OnOpen()
 T vgui::FileOpenDialog::OnOpenInExplorer()
 T vgui::FileOpenDialog::OnSelectFolder()
 T vgui::FileOpenDialog::OnTextChanged(KeyValues*)
 T vgui::FileOpenDialog::PassesFilter(vgui::FileData_t*)
 T vgui::FileOpenDialog::PopulateDriveList()
 T vgui::FileOpenDialog::PopulateFileList()
 T vgui::FileOpenDialog::PopulateFileNameSearchHistory()
 T vgui::FileOpenDialog::PostFileSelectedMessage(char const*)
 T vgui::FileOpenDialog::PostMultiFileSelectedMessage()
 T vgui::FileOpenDialog::SetStartDirectory(char const*)
 T vgui::FileOpenDialog::SetStartDirectoryContext(char const*, char const*)
 T vgui::FileOpenDialog::ValidatePath()
 T vgui::FileOpenDialog::~FileOpenDialog()
 T vgui::FileOpenStateMachine::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::FileOpenStateMachine::FileOpenStateMachine(vgui::Panel*, vgui::IFileOpenStateMachineClient*)
 T vgui::FileOpenStateMachine::GetAnimMap()
 T vgui::FileOpenStateMachine::GetKBMap()
 T vgui::FileOpenStateMachine::GetMessageMap()
 T vgui::FileOpenStateMachine::GetPanelClassName()
 T vgui::FileOpenStateMachine::MakeFileWriteableDialog()
 T vgui::FileOpenStateMachine::OnCancelMakeFileWriteable()
 T vgui::FileOpenStateMachine::OnCancelOverwriteFile()
 T vgui::FileOpenStateMachine::OnCancelSaveDocument()
 T vgui::FileOpenStateMachine::OnFileSelected(KeyValues*)
 T vgui::FileOpenStateMachine::OnFileSelectionCancelled()
 T vgui::FileOpenStateMachine::OnMakeFileWriteable()
 T vgui::FileOpenStateMachine::OnMarkNotDirty()
 T vgui::FileOpenStateMachine::OnOverwriteFile()
 T vgui::FileOpenStateMachine::OnPerforceQueryCompleted(KeyValues*)
 T vgui::FileOpenStateMachine::OnSaveFile()
 T vgui::FileOpenStateMachine::OpenFile(char const*, char const*, KeyValues*, char const*, char const*, int)
 T vgui::FileOpenStateMachine::OpenFileDialog()
 T vgui::FileOpenStateMachine::OverwriteFileDialog()
 T vgui::FileOpenStateMachine::SaveFile(KeyValues*, char const*, char const*, int)
 T vgui::FileOpenStateMachine::SetCompletionState(vgui::FileOpenStateMachine::CompletionState_t)
 T vgui::FileOpenStateMachine::WriteFile()
 T vgui::FileOpenStateMachine::~FileOpenStateMachine()
 T vgui::FindOrAddPanelKeyBindingMap(char const*)
 T vgui::FindOrAddPanelMessageMap(char const*)
 T vgui::FocusNavGroup::CanButtonBeDefault(unsigned int)
 T vgui::FocusNavGroup::FindPanelByHotkey(wchar_t)
 T vgui::FocusNavGroup::FocusNavGroup(vgui::Panel*)
 T vgui::FocusNavGroup::GetCurrentDefaultButton()
 T vgui::FocusNavGroup::GetCurrentFocus()
 T vgui::FocusNavGroup::GetDefaultButton()
 T vgui::FocusNavGroup::GetDefaultPanel()
 T vgui::FocusNavGroup::RequestFocusNext(unsigned int)
 T vgui::FocusNavGroup::RequestFocusPrev(unsigned int)
 T vgui::FocusNavGroup::SetCurrentDefaultButton(unsigned int, bool)
 T vgui::FocusNavGroup::SetCurrentFocus(unsigned int, unsigned int)
 T vgui::FocusNavGroup::SetDefaultButton(vgui::Panel*)
 T vgui::FocusNavGroup::SetFocusTopLevel(bool)
 T vgui::FocusNavGroup::~FocusNavGroup()
 T vgui::Frame::Activate()
 T vgui::Frame::ActivateMinimized()
 T vgui::Frame::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Frame::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Frame::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Frame::ApplySettings(KeyValues*)
 T vgui::Frame::ApplySingleSetting(KeyValues*)
 T vgui::Frame::ApplyUserConfigSettings(KeyValues*)
 T vgui::Frame::Close()
 T vgui::Frame::CloseModal()
 T vgui::Frame::DisableFadeEffect()
 T vgui::Frame::DoModal()
 T vgui::Frame::FlashWindow()
 T vgui::Frame::FlashWindowStop()
 T vgui::Frame::Frame(vgui::Panel*, char const*, bool, bool)
 T vgui::Frame::GetAnimMap()
 T vgui::Frame::GetBaseStyleName()
 T vgui::Frame::GetBottomRightSize()
 T vgui::Frame::GetCaptionHeight()
 T vgui::Frame::GetClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetClipToParent() const
 T vgui::Frame::GetCornerSize()
 T vgui::Frame::GetDefaultScreenPosition(int&, int&, int&, int&)
 T vgui::Frame::GetDescription()
 T vgui::Frame::GetDraggerSize()
 T vgui::Frame::GetKBMap()
 T vgui::Frame::GetMessageMap()
 T vgui::Frame::GetPanelClassName()
 T vgui::Frame::GetSettings(KeyValues*)
 T vgui::Frame::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetSysMenu()
 T vgui::Frame::GetUserConfigSettings(KeyValues*)
 T vgui::Frame::GetVar_m_iTitleTextInsetXOverride(vgui::Panel*)
 T vgui::Frame::GetVar_m_iTitleTextInsetYOverride(vgui::Panel*)
 T vgui::Frame::HasUserConfigSettings()
 T vgui::Frame::InternalFlashWindow()
 T vgui::Frame::InternalSetTitle(char const*)
 T vgui::Frame::IsMinimized()
 T vgui::Frame::IsMoveable()
 T vgui::Frame::IsSizeable()
 T vgui::Frame::IsSmallCaption() const
 T vgui::Frame::LayoutProportional(vgui::FrameButton*)
 T vgui::Frame::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::Frame::MoveToCenterOfScreen()
 T vgui::Frame::OnChildAdded(unsigned int)
 T vgui::Frame::OnClose()
 T vgui::Frame::OnCloseFrameButtonPressed()
 T vgui::Frame::OnCommand(char const*)
 T vgui::Frame::OnDialogVariablesChanged(KeyValues*)
 T vgui::Frame::OnFinishedClose()
 T vgui::Frame::OnFrameFocusChanged(bool)
 T vgui::Frame::OnGripPanelMoveFinished()
 T vgui::Frame::OnGripPanelMoved(int, int, int, int)
 T vgui::Frame::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Frame::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Frame::OnKeyFocusTicked()
 T vgui::Frame::OnKeyTyped(wchar_t)
 T vgui::Frame::OnMinimize()
 T vgui::Frame::OnMinimizeToSysTray()
 T vgui::Frame::OnMousePressed(ButtonCode_t)
 T vgui::Frame::OnScreenSizeChanged(int, int)
 T vgui::Frame::OnThink()
 T vgui::Frame::PaintBackground(IVGuiPaintSurface*)
 T vgui::Frame::PerformLayout()
 T vgui::Frame::PlaceUnderCursor()
 T vgui::Frame::SetClipToParent(bool)
 T vgui::Frame::SetCloseButtonVisible(bool)
 T vgui::Frame::SetDeleteSelfOnClose(bool)
 T vgui::Frame::SetMaximizeButtonVisible(bool)
 T vgui::Frame::SetMenuButtonResponsive(bool)
 T vgui::Frame::SetMenuButtonVisible(bool)
 T vgui::Frame::SetMinimizeButtonVisible(bool)
 T vgui::Frame::SetMinimizeToSysTrayButtonVisible(bool)
 T vgui::Frame::SetMoveable(bool)
 T vgui::Frame::SetSizeable(bool)
 T vgui::Frame::SetSmallCaption(bool)
 T vgui::Frame::SetSysMenu(vgui::Menu*)
 T vgui::Frame::SetTitle(char const*, bool)
 T vgui::Frame::SetTitle(wchar_t const*, bool)
 T vgui::Frame::SetTitleBarVisible(bool)
 T vgui::Frame::SetupResizeCursors()
 T vgui::Frame::ShouldLookAtParentForMoreStyles()
 T vgui::Frame::~Frame()
 T vgui::FrameButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameButton::FrameButton(vgui::Panel*, char const*, char const*)
 T vgui::FrameButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameButton::PerformLayout()
 T vgui::FrameButton::SetDisabledLook(bool)
 T vgui::FrameButton::~FrameButton()
 T vgui::FrameSystemButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameSystemButton::FrameSystemButton(vgui::Panel*, char const*)
 T vgui::FrameSystemButton::GetAnimMap()
 T vgui::FrameSystemButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameSystemButton::GetKBMap()
 T vgui::FrameSystemButton::GetMessageMap()
 T vgui::FrameSystemButton::GetPanelClassName()
 T vgui::FrameSystemButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::FrameSystemButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameSystemButton::SetEnabled(bool)
 T vgui::FrameSystemButton::~FrameSystemButton()
 T vgui::GetAnimationController()
 T vgui::GetControlsModuleName()
 T vgui::GetPanelKeyBindingMapDictionary()
 T vgui::GraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::GraphPanel::GetAnimMap()
 T vgui::GraphPanel::GetKBMap()
 T vgui::GraphPanel::GetMessageMap()
 T vgui::GraphPanel::GetPanelClassName()
 T vgui::GraphPanel::GraphPanel(vgui::Panel*, char const*)
 T vgui::GraphPanel::Paint(IVGuiPaintSurface*)
 T vgui::GraphPanel::PerformLayout()
 T vgui::GraphPanel::~GraphPanel()
 T vgui::IImage::PaintTiled(IVGuiPaintSurface*, int, int, int, int, bool, bool)
 T vgui::Image::DrawFilledRect(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawFilledRect(int, int, int, int)
 T vgui::Image::DrawLine(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawLine(int, int, int, int)
 T vgui::Image::DrawOutlinedRect(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawOutlinedRect(int, int, int, int)
 T vgui::Image::DrawPolyLine(IVGuiPaintSurface*, int*, int*, int)
 T vgui::Image::DrawPolyLine(int*, int*, int)
 T vgui::Image::DrawPrintChar(IVGuiPaintSurface*, int, int, wchar_t)
 T vgui::Image::DrawPrintChar(IVGuiPaintSurface*, wchar_t)
 T vgui::Image::DrawPrintChar(int, int, wchar_t)
 T vgui::Image::DrawPrintChar(wchar_t)
 T vgui::Image::DrawPrintText(IVGuiPaintSurface*, int, int, wchar_t const*, int)
 T vgui::Image::DrawPrintText(IVGuiPaintSurface*, wchar_t const*, int)
 T vgui::Image::DrawPrintText(int, int, wchar_t const*, int)
 T vgui::Image::DrawPrintText(wchar_t const*, int)
 T vgui::Image::DrawSetColor(Color)
 T vgui::Image::DrawSetColor(IVGuiPaintSurface*, Color)
 T vgui::Image::DrawSetColor(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawSetColor(int, int, int, int)
 T vgui::Image::DrawSetTextColor(Color)
 T vgui::Image::DrawSetTextColor(IVGuiPaintSurface*, Color)
 T vgui::Image::DrawSetTextColor(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawSetTextColor(int, int, int, int)
 T vgui::Image::DrawSetTextFont(IVGuiPaintSurface*, unsigned long)
 T vgui::Image::DrawSetTextFont(unsigned long)
 T vgui::Image::DrawSetTextPos(IVGuiPaintSurface*, int, int)
 T vgui::Image::DrawSetTextPos(int, int)
 T vgui::Image::DrawSetTexture(IVGuiPaintSurface*, int)
 T vgui::Image::DrawSetTexture(int)
 T vgui::Image::DrawTexturedRect(IVGuiPaintSurface*, int, int, int, int)
 T vgui::Image::DrawTexturedRect(int, int, int, int)
 T vgui::Image::Evict()
 T vgui::Image::GetColor()
 T vgui::Image::GetContentSize(int&, int&)
 T vgui::Image::GetID()
 T vgui::Image::GetNumFrames()
 T vgui::Image::GetPos(int&, int&)
 T vgui::Image::GetSize(int&, int&, bool)
 T vgui::Image::GetTall()
 T vgui::Image::GetWide()
 T vgui::Image::Image()
 T vgui::Image::Paint()
 T vgui::Image::SetBkColor(IVGuiPaintSurface*, Color)
 T vgui::Image::SetColor(Color, IVGuiPaintSurface*)
 T vgui::Image::SetFrame(int)
 T vgui::Image::SetPos(int, int)
 T vgui::Image::SetRotation(int)
 T vgui::Image::SetSize(int, int)
 T vgui::Image::~Image()
 T vgui::ImageList::AddImage(vgui::IImage*)
 T vgui::ImageList::GetImage(int)
 T vgui::ImageList::ImageList(bool)
 T vgui::ImageList::IsValidIndex(int)
 T vgui::ImageList::~ImageList()
 T vgui::ImagePanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ImagePanel::ApplySettings(KeyValues*)
 T vgui::ImagePanel::ApplySingleSetting(KeyValues*)
 T vgui::ImagePanel::GetAnimMap()
 T vgui::ImagePanel::GetDescription()
 T vgui::ImagePanel::GetDrawColor()
 T vgui::ImagePanel::GetImage()
 T vgui::ImagePanel::GetKBMap()
 T vgui::ImagePanel::GetMessageMap()
 T vgui::ImagePanel::GetPanelClassName()
 T vgui::ImagePanel::GetSettings(KeyValues*)
 T vgui::ImagePanel::ImagePanel(vgui::Panel*, char const*)
 T vgui::ImagePanel::OnSizeChanged(int, int)
 T vgui::ImagePanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::ImagePanel::SetDrawColor(Color)
 T vgui::ImagePanel::SetImage(char const*)
 T vgui::ImagePanel::SetImage(vgui::IImage*)
 T vgui::ImagePanel::SettingMessage_m_bScaleImage(bool)
 T vgui::ImagePanel::SettingMessage_m_fScaleAmount(float)
 T vgui::ImagePanel::~ImagePanel()
 T vgui::InputDialog::GetAnimMap()
 T vgui::InputDialog::GetKBMap()
 T vgui::InputDialog::GetMessageMap()
 T vgui::InputDialog::GetPanelClassName()
 T vgui::InputDialog::InputDialog(vgui::Panel*, char const*, char const*, char const*)
 T vgui::InputDialog::PerformLayout(int, int, int, int)
 T vgui::InputDialog::SetMultiline(bool)
 T vgui::InputDialog::WriteDataToKeyValues(KeyValues*, bool)
 T vgui::InputDialog::~InputDialog()
 T vgui::Label::AddImage(vgui::IImage*, int)
 T vgui::Label::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Label::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Label::ApplySettings(KeyValues*)
 T vgui::Label::ApplySingleSetting(KeyValues*)
 T vgui::Label::CalculateHotkey(char const*)
 T vgui::Label::CalculateHotkey(wchar_t const*)
 T vgui::Label::ClearImages()
 T vgui::Label::ComputeAlignment(int&, int&, int&, int&)
 T vgui::Label::DrawDashedLine(IVGuiPaintSurface*, int, int, int, int, int, int)
 T vgui::Label::EnsureImageCapacity(int)
 T vgui::Label::GetAnimMap()
 T vgui::Label::GetBottomAlignPoint()
 T vgui::Label::GetContentSize(int&, int&)
 T vgui::Label::GetDescription()
 T vgui::Label::GetDisabledFgColor1()
 T vgui::Label::GetDisabledFgColor2()
 T vgui::Label::GetFgColor()
 T vgui::Label::GetFont()
 T vgui::Label::GetHotKey()
 T vgui::Label::GetImageAtIndex(int)
 T vgui::Label::GetImageCount()
 T vgui::Label::GetKBMap()
 T vgui::Label::GetMessageMap()
 T vgui::Label::GetPanelClassName()
 T vgui::Label::GetSettings(KeyValues*)
 T vgui::Label::GetSizerMinimumSize(int&, int&)
 T vgui::Label::GetText(char*, int)
 T vgui::Label::GetText(wchar_t*, int)
 T vgui::Label::GetTextImage()
 T vgui::Label::GetTextInset(int*, int*)
 T vgui::Label::GetUnpackStructure() const
 T vgui::Label::HandleAutoSizing()
 T vgui::Label::HasHotkey(wchar_t)
 T vgui::Label::Label(vgui::Panel*, char const*, char const*)
 T vgui::Label::Label(vgui::Panel*, char const*, wchar_t const*)
 T vgui::Label::OnAppearanceChanged(vgui::IAppearance*)
 T vgui::Label::OnDialogVariablesChanged(KeyValues*)
 T vgui::Label::OnHotkeyPressed()
 T vgui::Label::OnMousePressed(ButtonCode_t)
 T vgui::Label::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Label::OnSetText(KeyValues*)
 T vgui::Label::OnSizeChanged(int, int)
 T vgui::Label::Paint(IVGuiPaintSurface*)
 T vgui::Label::PerformLayout()
 T vgui::Label::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::Label::RequestInfo(KeyValues*)
 T vgui::Label::ResetToSimpleTextImage()
 T vgui::Label::SetAssociatedControl(vgui::Panel*)
 T vgui::Label::SetContentAlignment(vgui::Label::Alignment)
 T vgui::Label::SetDisabledFgColor1(Color)
 T vgui::Label::SetDisabledFgColor2(Color)
 T vgui::Label::SetEnabled(bool)
 T vgui::Label::SetFgColor(Color)
 T vgui::Label::SetFont(unsigned long)
 T vgui::Label::SetHotkey(wchar_t)
 T vgui::Label::SetImage(vgui::IImage*, int)
 T vgui::Label::SetImageAtIndex(int, vgui::IImage*, int)
 T vgui::Label::SetImageBounds(int, int, int)
 T vgui::Label::SetImagePreOffset(int, int)
 T vgui::Label::SetText(char const*)
 T vgui::Label::SetText(wchar_t const*, bool)
 T vgui::Label::SetTextColorState(vgui::Label::EColorState)
 T vgui::Label::SetTextImageIndex(int)
 T vgui::Label::SetTextInset(int, int)
 T vgui::Label::SettingMessage_m_bAllCaps(bool)
 T vgui::Label::SettingMessage_m_bAutoTallToContents(bool)
 T vgui::Label::SettingMessage_m_bAutoWideToContents(bool)
 T vgui::Label::SizeToContents()
 T vgui::Label::~Label()
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int)
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int, int, int)
 T vgui::ListPanel::AddItem(KeyValues const*, unsigned int, bool, bool)
 T vgui::ListPanel::AddSelectedItem(int)
 T vgui::ListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListPanel::ApplyItemChanges(int)
 T vgui::ListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListPanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::ListPanel::ClearSelectedItems()
 T vgui::ListPanel::DeleteAllItems()
 T vgui::ListPanel::EnterEditMode(int, int, vgui::Panel*)
 T vgui::ListPanel::FindColumn(char const*)
 T vgui::ListPanel::FirstItem() const
 T vgui::ListPanel::GetAnimMap()
 T vgui::ListPanel::GetCellAtPos(int, int, int&, int&)
 T vgui::ListPanel::GetCellBounds(int, int, int&, int&, int&, int&)
 T vgui::ListPanel::GetCellImage(int, int)
 T vgui::ListPanel::GetCellRenderer(int, int)
 T vgui::ListPanel::GetCellText(int, int, wchar_t*, int)
 T vgui::ListPanel::GetColumnHeaderText(int, char*, int)
 T vgui::ListPanel::GetItem(char const*)
 T vgui::ListPanel::GetItem(int)
 T vgui::ListPanel::GetItemCount()
 T vgui::ListPanel::GetItemCurrentRow(int)
 T vgui::ListPanel::GetItemData(int)
 T vgui::ListPanel::GetItemIDFromRow(int)
 T vgui::ListPanel::GetItemIDFromUserData(unsigned int)
 T vgui::ListPanel::GetItemUserData(int)
 T vgui::ListPanel::GetKBMap()
 T vgui::ListPanel::GetMessageMap()
 T vgui::ListPanel::GetNumColumnHeaders() const
 T vgui::ListPanel::GetPanelClassName()
 T vgui::ListPanel::GetRowsPerPage()
 T vgui::ListPanel::GetSelectedColumn()
 T vgui::ListPanel::GetSelectedItem(int)
 T vgui::ListPanel::GetSelectedItemsCount()
 T vgui::ListPanel::GetSortColumn() const
 T vgui::ListPanel::GetSortColumnEx(int&, int&, bool&) const
 T vgui::ListPanel::GetStartItem()
 T vgui::ListPanel::GetUserConfigSettings(KeyValues*)
 T vgui::ListPanel::HandleAddSelection(int, int, int)
 T vgui::ListPanel::HandleMultiSelection(int, int, int)
 T vgui::ListPanel::HasUserConfigSettings()
 T vgui::ListPanel::IndexItem(int)
 T vgui::ListPanel::InvalidItemID() const
 T vgui::ListPanel::IsInEditMode()
 T vgui::ListPanel::IsItemSelected(int)
 T vgui::ListPanel::IsValidItemID(int)
 T vgui::ListPanel::LeaveEditMode()
 T vgui::ListPanel::ListPanel(vgui::Panel*, char const*)
 T vgui::ListPanel::NextItem(int) const
 T vgui::ListPanel::OnColumnResized(int, int)
 T vgui::ListPanel::OnCreateDragData(KeyValues*)
 T vgui::ListPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListPanel::OnMouseWheeled(int)
 T vgui::ListPanel::OnSetSortColumn(int)
 T vgui::ListPanel::OnSizeChanged(int, int)
 T vgui::ListPanel::OnSliderMoved()
 T vgui::ListPanel::OnToggleColumnVisible(int)
 T vgui::ListPanel::OpenColumnChoiceMenu()
 T vgui::ListPanel::Paint(IVGuiPaintSurface*)
 T vgui::ListPanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::ListPanel::PerformLayout()
 T vgui::ListPanel::RBTreeLessFunc(vgui::ListPanel::IndexItem_t&, vgui::ListPanel::IndexItem_t&)
 T vgui::ListPanel::RemoveAll()
 T vgui::ListPanel::RemoveColumn(int)
 T vgui::ListPanel::RemoveItem(int)
 T vgui::ListPanel::RereadAllItems()
 T vgui::ListPanel::ResizeColumnToContents(int)
 T vgui::ListPanel::ResortColumnRBTree(int)
 T vgui::ListPanel::SetAllowUserModificationOfColumns(bool)
 T vgui::ListPanel::SetColumnHeaderHeight(int)
 T vgui::ListPanel::SetColumnHeaderImage(int, int)
 T vgui::ListPanel::SetColumnHeaderText(int, char const*)
 T vgui::ListPanel::SetColumnHeaderText(int, wchar_t*)
 T vgui::ListPanel::SetColumnHeaderTooltip(int, char const*)
 T vgui::ListPanel::SetColumnSortable(int, bool)
 T vgui::ListPanel::SetColumnTextAlignment(int, int)
 T vgui::ListPanel::SetColumnVisible(int, bool)
 T vgui::ListPanel::SetEmptyListText(char const*)
 T vgui::ListPanel::SetEmptyListText(wchar_t const*)
 T vgui::ListPanel::SetFont(unsigned long)
 T vgui::ListPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListPanel::SetItemDisabled(int, bool)
 T vgui::ListPanel::SetItemVisible(int, bool)
 T vgui::ListPanel::SetMultiselectEnabled(bool)
 T vgui::ListPanel::SetSelectIndividualCells(bool)
 T vgui::ListPanel::SetSelectedCell(int, int)
 T vgui::ListPanel::SetSingleSelectedItem(int)
 T vgui::ListPanel::SetSortColumn(int)
 T vgui::ListPanel::SetSortColumnEx(int, int, bool)
 T vgui::ListPanel::SetSortFunc(int, int (*)(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&))
 T vgui::ListPanel::SetUserData(int, unsigned int)
 T vgui::ListPanel::SortList()
 T vgui::ListPanel::UpdateSelection(ButtonCode_t, int, int, int, int)
 T vgui::ListPanel::~ListPanel()
 T vgui::ListViewItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewItem::GetAnimMap()
 T vgui::ListViewItem::GetKBMap()
 T vgui::ListViewItem::GetMessageMap()
 T vgui::ListViewItem::GetPanelClassName()
 T vgui::ListViewItem::ListViewItem(vgui::Panel*)
 T vgui::ListViewItem::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewItem::OnMousePressed(ButtonCode_t)
 T vgui::ListViewItem::PaintBackground(IVGuiPaintSurface*)
 T vgui::ListViewItem::PerformLayout()
 T vgui::ListViewItem::UpdateImage()
 T vgui::ListViewItem::~ListViewItem()
 T vgui::ListViewPanel::AddItem(KeyValues const*, bool, bool)
 T vgui::ListViewPanel::AddSelectedItem(int)
 T vgui::ListViewPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListViewPanel::ApplyItemChanges(int)
 T vgui::ListViewPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewPanel::ClearSelectedItems()
 T vgui::ListViewPanel::DeleteAllItems()
 T vgui::ListViewPanel::FinishKeyPress(int)
 T vgui::ListViewPanel::GetAnimMap()
 T vgui::ListViewPanel::GetItem(int)
 T vgui::ListViewPanel::GetItemCount()
 T vgui::ListViewPanel::GetItemIDFromPos(int)
 T vgui::ListViewPanel::GetItemsPerColumn()
 T vgui::ListViewPanel::GetKBMap()
 T vgui::ListViewPanel::GetMessageMap()
 T vgui::ListViewPanel::GetPanelClassName()
 T vgui::ListViewPanel::GetSelectedItem(int)
 T vgui::ListViewPanel::GetSelectedItemsCount()
 T vgui::ListViewPanel::InvalidItemID()
 T vgui::ListViewPanel::IsValidItemID(int)
 T vgui::ListViewPanel::ListViewPanel(vgui::Panel*, char const*)
 T vgui::ListViewPanel::OnItemMousePressed(vgui::ListViewItem*, ButtonCode_t)
 T vgui::ListViewPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListViewPanel::OnKeyTyped(wchar_t)
 T vgui::ListViewPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMouseWheeled(int)
 T vgui::ListViewPanel::OnShiftSelect(int)
 T vgui::ListViewPanel::OnSizeChanged(int, int)
 T vgui::ListViewPanel::OnSliderMoved()
 T vgui::ListViewPanel::Paint(IVGuiPaintSurface*)
 T vgui::ListViewPanel::PerformLayout()
 T vgui::ListViewPanel::RemoveItem(int)
 T vgui::ListViewPanel::ScrollToItem(int)
 T vgui::ListViewPanel::SetFont(unsigned long)
 T vgui::ListViewPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListViewPanel::SetSingleSelectedItem(int)
 T vgui::ListViewPanel::SetSortFunc(bool (*)(KeyValues*, KeyValues*))
 T vgui::ListViewPanel::SortList()
 T vgui::ListViewPanel::~ListViewPanel()
 T vgui::MatSystemSurface()
 T vgui::MaterialSystem()
 T vgui::Menu::ActivateItem(int)
 T vgui::Menu::ActivateItemByRow(int)
 T vgui::Menu::AddCascadingMenuItem(char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(vgui::MenuItem*)
 T vgui::Menu::AddScrollBar()
 T vgui::Menu::AddSeparator()
 T vgui::Menu::AddSeparatorAfterItem(int)
 T vgui::Menu::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Menu::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Menu::ClearCurrentlyHighlightedItem()
 T vgui::Menu::CloseOtherMenus(vgui::MenuItem*)
 T vgui::Menu::ComputeFullMenuHeightWithInsets()
 T vgui::Menu::DeleteAllItems()
 T vgui::Menu::ForceCalculateWidth()
 T vgui::Menu::GetActiveItem()
 T vgui::Menu::GetAnimMap()
 T vgui::Menu::GetCurrentlyHighlightedItem()
 T vgui::Menu::GetInvalidMenuID()
 T vgui::Menu::GetItemCount()
 T vgui::Menu::GetItemText(int, char*, int)
 T vgui::Menu::GetItemText(int, wchar_t*, int)
 T vgui::Menu::GetItemUserData(int)
 T vgui::Menu::GetKBMap()
 T vgui::Menu::GetMenuID(int)
 T vgui::Menu::GetMenuItem(int)
 T vgui::Menu::GetMenuItemHeight() const
 T vgui::Menu::GetMenuMode()
 T vgui::Menu::GetMessageMap()
 T vgui::Menu::GetPanelClassName()
 T vgui::Menu::GetTypeAheadMode()
 T vgui::Menu::IsValidMenuID(int)
 T vgui::Menu::LayoutMenuBorder()
 T vgui::Menu::LayoutScrollBar()
 T vgui::Menu::MakeItemsVisibleInScrollRange(int, int)
 T vgui::Menu::Menu(vgui::Panel*, char const*)
 T vgui::Menu::MoveAlongMenuItemList(int, int)
 T vgui::Menu::MoveMenuItem(int, int)
 T vgui::Menu::OnCommand(char const*)
 T vgui::Menu::OnCursorEnteredMenuItem(int)
 T vgui::Menu::OnCursorExitedMenuItem(int)
 T vgui::Menu::OnCursorMoved(int, int)
 T vgui::Menu::OnHotKey(wchar_t)
 T vgui::Menu::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::Menu::OnKeyCodePressed(ButtonCode_t)
 T vgui::Menu::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Menu::OnKeyModeSet()
 T vgui::Menu::OnKeyTyped(wchar_t)
 T vgui::Menu::OnKillFocus()
 T vgui::Menu::OnMenuItemSelected(vgui::Panel*)
 T vgui::Menu::OnMouseWheeled(int)
 T vgui::Menu::OnSliderMoved()
 T vgui::Menu::OnTypeAhead(wchar_t)
 T vgui::Menu::Paint(IVGuiPaintSurface*)
 T vgui::Menu::PerformLayout()
 T vgui::Menu::PlaceContextMenu(vgui::Panel*, vgui::Menu*)
 T vgui::Menu::PositionCascadingMenu()
 T vgui::Menu::PositionRelativeToPanel(vgui::Panel*, vgui::Menu::MenuDirection_e, int, bool)
 T vgui::Menu::RemoveScrollBar()
 T vgui::Menu::SetBgColor(Color)
 T vgui::Menu::SetBorder(vgui::IBorder*)
 T vgui::Menu::SetCurrentlyHighlightedItem(int)
 T vgui::Menu::SetCurrentlySelectedItem(int)
 T vgui::Menu::SetFgColor(Color)
 T vgui::Menu::SetFixedWidth(int)
 T vgui::Menu::SetFont(unsigned long)
 T vgui::Menu::SetItemEnabled(char const*, bool)
 T vgui::Menu::SetItemEnabled(int, bool)
 T vgui::Menu::SetItemVisible(char const*, bool)
 T vgui::Menu::SetItemVisible(int, bool)
 T vgui::Menu::SetMenuItemChecked(int, bool)
 T vgui::Menu::SetMenuItemHeight(int)
 T vgui::Menu::SetNumberOfVisibleItems(int)
 T vgui::Menu::SetTypeAheadMode(vgui::Menu::MenuTypeAheadMode)
 T vgui::Menu::SetUseFallbackFont(bool, unsigned long)
 T vgui::Menu::SetVisible(bool)
 T vgui::Menu::UpdateMenuItem(int, char const*, KeyValues*, KeyValues const*)
 T vgui::Menu::UpdateMenuItem(int, wchar_t const*, KeyValues*, KeyValues const*)
 T vgui::Menu::~Menu()
 T vgui::MenuBar::AddButton(vgui::MenuButton*)
 T vgui::MenuBar::AddMenu(char const*, vgui::Menu*)
 T vgui::MenuBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuBar::GetAnimMap()
 T vgui::MenuBar::GetContentSize(int&, int&)
 T vgui::MenuBar::GetKBMap()
 T vgui::MenuBar::GetMessageMap()
 T vgui::MenuBar::GetPanelClassName()
 T vgui::MenuBar::MenuBar(vgui::Panel*, char const*)
 T vgui::MenuBar::OnCursorEnteredMenuButton(int)
 T vgui::MenuBar::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuBar::OnKeyTyped(wchar_t)
 T vgui::MenuBar::OnMenuClose()
 T vgui::MenuBar::Paint(IVGuiPaintSurface*)
 T vgui::MenuBar::PerformLayout()
 T vgui::MenuBar::~MenuBar()
 T vgui::MenuButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuButton::CanBeDefaultButton()
 T vgui::MenuButton::DoClick()
 T vgui::MenuButton::DrawFocusBorder(int, int, int, int)
 T vgui::MenuButton::GetAnimMap()
 T vgui::MenuButton::GetKBMap()
 T vgui::MenuButton::GetMenu()
 T vgui::MenuButton::GetMessageMap()
 T vgui::MenuButton::GetPanelClassName()
 T vgui::MenuButton::HideMenu()
 T vgui::MenuButton::MenuButton(vgui::Panel*, char const*, char const*)
 T vgui::MenuButton::OnCheckMenuItemCount()
 T vgui::MenuButton::OnCursorEntered()
 T vgui::MenuButton::OnCursorMoved(int, int)
 T vgui::MenuButton::OnHideMenu(vgui::Menu*)
 T vgui::MenuButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuButton::OnKillFocus(KeyValues*)
 T vgui::MenuButton::OnMenuClose()
 T vgui::MenuButton::OnShowMenu(vgui::Menu*)
 T vgui::MenuButton::Paint(IVGuiPaintSurface*)
 T vgui::MenuButton::PerformLayout()
 T vgui::MenuButton::SetMenu(vgui::Menu*)
 T vgui::MenuButton::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::MenuButton::SetOpenOffsetY(int)
 T vgui::MenuButton::~MenuButton()
 T vgui::MenuItem::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuItem::ArmItem()
 T vgui::MenuItem::CanBeDefaultButton()
 T vgui::MenuItem::CloseCascadeMenu()
 T vgui::MenuItem::DisarmItem()
 T vgui::MenuItem::FireActionSignal()
 T vgui::MenuItem::GetAnimMap()
 T vgui::MenuItem::GetBorder(bool, bool, bool, bool)
 T vgui::MenuItem::GetCheckImageSize(int&, int&)
 T vgui::MenuItem::GetContentSize(int&, int&)
 T vgui::MenuItem::GetKBMap()
 T vgui::MenuItem::GetMenu()
 T vgui::MenuItem::GetMessageMap()
 T vgui::MenuItem::GetPanelClassName()
 T vgui::MenuItem::GetParentMenu()
 T vgui::MenuItem::GetUserData()
 T vgui::MenuItem::HasMenu()
 T vgui::MenuItem::Init()
 T vgui::MenuItem::IsCheckable()
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, char const*, vgui::Menu*, bool)
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, wchar_t const*, vgui::Menu*, bool)
 T vgui::MenuItem::OnCursorEntered()
 T vgui::MenuItem::OnCursorExited()
 T vgui::MenuItem::OnCursorMoved(int, int)
 T vgui::MenuItem::OnKeyCodeReleased(ButtonCode_t)
 T vgui::MenuItem::OnKeyModeSet()
 T vgui::MenuItem::OnKillFocus()
 T vgui::MenuItem::OpenCascadeMenu()
 T vgui::MenuItem::Paint(IVGuiPaintSurface*)
 T vgui::MenuItem::PerformLayout()
 T vgui::MenuItem::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::MenuItem::SetChecked(bool)
 T vgui::MenuItem::SetUserData(KeyValues const*)
 T vgui::MenuItem::~MenuItem()
 T vgui::MenuSeparator::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuSeparator::GetAnimMap()
 T vgui::MenuSeparator::GetKBMap()
 T vgui::MenuSeparator::GetMessageMap()
 T vgui::MenuSeparator::GetPanelClassName()
 T vgui::MenuSeparator::MenuSeparator(vgui::Panel*, char const*)
 T vgui::MenuSeparator::Paint(IVGuiPaintSurface*)
 T vgui::MenuSeparator::~MenuSeparator()
 T vgui::MessageBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MessageBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MessageBox::DisableCloseButton(bool)
 T vgui::MessageBox::DoModal(vgui::Frame*)
 T vgui::MessageBox::GetAnimMap()
 T vgui::MessageBox::GetKBMap()
 T vgui::MessageBox::GetMessageMap()
 T vgui::MessageBox::GetPanelClassName()
 T vgui::MessageBox::Init()
 T vgui::MessageBox::MessageBox(char const*, char const*, vgui::Panel*)
 T vgui::MessageBox::OnCommand(char const*)
 T vgui::MessageBox::OnShutdownRequest()
 T vgui::MessageBox::PerformLayout()
 T vgui::MessageBox::SetCancelButtonText(char const*)
 T vgui::MessageBox::SetCancelButtonVisible(bool)
 T vgui::MessageBox::SetCancelCommand(KeyValues*)
 T vgui::MessageBox::SetCommand(KeyValues*)
 T vgui::MessageBox::SetCommand(char const*)
 T vgui::MessageBox::SetOKButtonText(char const*)
 T vgui::MessageBox::SetOKButtonText(wchar_t const*)
 T vgui::MessageBox::SetOKButtonVisible(bool)
 T vgui::MessageBox::ShowWindow(vgui::Frame*)
 T vgui::MessageBox::~MessageBox()
 T vgui::PHandle::Get()
 T vgui::PHandle::Set(vgui::Panel*)
 T vgui::PageTab::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PageTab::ApplySettings(KeyValues*)
 T vgui::PageTab::CanBeDefaultButton()
 T vgui::PageTab::GetAnimMap()
 T vgui::PageTab::GetBorder(bool, bool, bool, bool)
 T vgui::PageTab::GetButtonFgColor()
 T vgui::PageTab::GetDragFailCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PageTab::GetKBMap()
 T vgui::PageTab::GetMessageMap()
 T vgui::PageTab::GetPanelClassName()
 T vgui::PageTab::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PageTab::OnCommand(char const*)
 T vgui::PageTab::OnCreateDragData(KeyValues*)
 T vgui::PageTab::OnCursorEntered()
 T vgui::PageTab::OnCursorExited()
 T vgui::PageTab::OnDragFailed(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PageTab::OnDroppablePanelPaint(IVGuiPaintSurface*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::PageTab::OnMousePressed(ButtonCode_t)
 T vgui::PageTab::OnMouseReleased(ButtonCode_t)
 T vgui::PageTab::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PageTab::OnThink()
 T vgui::PageTab::PageTab(vgui::PropertySheet*, char const*, char const*, char const*, int, vgui::Panel*, bool, long)
 T vgui::PageTab::Paint(IVGuiPaintSurface*)
 T vgui::PageTab::PerformLayout()
 T vgui::PageTab::Resize()
 T vgui::PageTab::SetActive(bool)
 T vgui::PageTab::SetTabWidth(int)
 T vgui::PageTab::~PageTab()
 T vgui::Panel::AddActionSignalTarget(unsigned int)
 T vgui::Panel::AddActionSignalTarget(vgui::Panel*)
 T vgui::Panel::AddKeyBinding(char const*, int, int)
 T vgui::Panel::AddPropertyConverter(char const*, vgui::IPanelAnimationPropertyConverter*)
 T vgui::Panel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Panel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Panel::AddToOverridableColors(Color*, char const*)
 T vgui::Panel::ApplyAutoResizeSettings(KeyValues*)
 T vgui::Panel::ApplyPositioningSettings(KeyValues*)
 T vgui::Panel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Panel::ApplySettings(KeyValues*)
 T vgui::Panel::ApplySingleSetting(KeyValues*)
 T vgui::Panel::ApplySingleSettings(KeyValues*)
 T vgui::Panel::ApplyUserConfigSettings(KeyValues*)
 T vgui::Panel::CallParentFunction(KeyValues*)
 T vgui::Panel::CanStartDragging(int, int, int, int)
 T vgui::Panel::CreateDragData()
 T vgui::Panel::DeletePanel()
 T vgui::Panel::DragDropStartDragging()
 T vgui::Panel::DrawBox(IVGuiPaintSurface*, int, int, int, int, Color, float, bool)
 T vgui::Panel::DrawBox(int, int, int, int, Color, float, bool)
 T vgui::Panel::DrawBoxFade(IVGuiPaintSurface*, int, int, int, int, Color, float, unsigned int, unsigned int, bool, bool)
 T vgui::Panel::DrawBoxFade(int, int, int, int, Color, float, unsigned int, unsigned int, bool, bool)
 T vgui::Panel::DrawHollowBox(IVGuiPaintSurface*, int, int, int, int, Color, float)
 T vgui::Panel::DrawHollowBox(IVGuiPaintSurface*, int, int, int, int, Color, float, int, int)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float, int, int)
 T vgui::Panel::DrawTexturedBox(IVGuiPaintSurface*, int, int, int, int, Color, float)
 T vgui::Panel::DrawTexturedBox(int, int, int, int, Color, float)
 T vgui::Panel::EditKeyBindings()
 T vgui::Panel::ExpandClipRect(int&, int&, int&, int&)
 T vgui::Panel::FillRectSkippingPanel(Color, int, int, int, int, vgui::Panel*)
 T vgui::Panel::FillRectSkippingPanel(IVGuiPaintSurface*, Color, int, int, int, int, vgui::Panel*)
 T vgui::Panel::FindChildByName(char const*, bool)
 T vgui::Panel::FindDropTargetPanel()
 T vgui::Panel::FindDropTargetPanel_R(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, int, int, unsigned int)
 T vgui::Panel::FindSiblingByName(char const*)
 T vgui::Panel::GetAlpha()
 T vgui::Panel::GetAnimMap()
 T vgui::Panel::GetAppearance()
 T vgui::Panel::GetAutoResize()
 T vgui::Panel::GetBaseStyleName()
 T vgui::Panel::GetBgColor()
 T vgui::Panel::GetBorder()
 T vgui::Panel::GetBottomAlignPoint()
 T vgui::Panel::GetBounds(int&, int&, int&, int&)
 T vgui::Panel::GetChild(int)
 T vgui::Panel::GetChildCount()
 T vgui::Panel::GetClassName()
 T vgui::Panel::GetClipRect(int&, int&, int&, int&)
 T vgui::Panel::GetColor(vgui::IAppearance::EColor)
 T vgui::Panel::GetContentSize(int&, int&)
 T vgui::Panel::GetCornerTextureSize(int&, int&, bool)
 T vgui::Panel::GetCurrentKeyFocus()
 T vgui::Panel::GetCursor()
 T vgui::Panel::GetDescription()
 T vgui::Panel::GetDragData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragDropInfo()
 T vgui::Panel::GetDragFailCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragPanel()
 T vgui::Panel::GetDragStartTolerance() const
 T vgui::Panel::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropFrameColor()
 T vgui::Panel::GetDropTarget(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetFgColor()
 T vgui::Panel::GetInset(int&, int&, int&, int&)
 T vgui::Panel::GetKBMap()
 T vgui::Panel::GetKeyBindingsContext() const
 T vgui::Panel::GetKeyBindingsFile() const
 T vgui::Panel::GetKeyBindingsFilePathID() const
 T vgui::Panel::GetLayoutFile()
 T vgui::Panel::GetMessageMap()
 T vgui::Panel::GetMinimumSize(int&, int&)
 T vgui::Panel::GetModuleName()
 T vgui::Panel::GetName()
 T vgui::Panel::GetNavDown(vgui::Panel*)
 T vgui::Panel::GetNavLeft(vgui::Panel*)
 T vgui::Panel::GetNavRight(vgui::Panel*)
 T vgui::Panel::GetNavUp(vgui::Panel*)
 T vgui::Panel::GetPaintBackgroundType()
 T vgui::Panel::GetPaintSize(int&, int&)
 T vgui::Panel::GetPanel()
 T vgui::Panel::GetPanelClassName()
 T vgui::Panel::GetPanelMap()
 T vgui::Panel::GetParent()
 T vgui::Panel::GetParentNames(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T vgui::Panel::GetPinCorner()
 T vgui::Panel::GetPinOffset(int&, int&)
 T vgui::Panel::GetPos(int&, int&)
 T vgui::Panel::GetResizeOffset(int&, int&)
 T vgui::Panel::GetScheme()
 T vgui::Panel::GetSchemeColor(char const*, Color, vgui::IScheme*)
 T vgui::Panel::GetSchemeColor(char const*, vgui::IScheme*)
 T vgui::Panel::GetSettings(KeyValues*)
 T vgui::Panel::GetSize(int&, int&)
 T vgui::Panel::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Panel::GetSizerMinimumSize(int&, int&)
 T vgui::Panel::GetStyleFlags()
 T vgui::Panel::GetStyleNameList()
 T vgui::Panel::GetTabPosition()
 T vgui::Panel::GetTall()
 T vgui::Panel::GetTooltip()
 T vgui::Panel::GetUnpackStructure() const
 T vgui::Panel::GetUserConfigSettings(KeyValues*)
 T vgui::Panel::GetVPanel()
 T vgui::Panel::GetVParent()
 T vgui::Panel::GetVar_m_flAlpha(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId1(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId2(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId3(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId4(vgui::Panel*)
 T vgui::Panel::GetVar_m_nPaintBackgroundType(vgui::Panel*)
 T vgui::Panel::GetWide()
 T vgui::Panel::HandleMouseCode(ButtonCode_t)
 T vgui::Panel::HasFocus()
 T vgui::Panel::HasHotkey(wchar_t)
 T vgui::Panel::HasParent(unsigned int)
 T vgui::Panel::HasUserConfigSettings()
 T vgui::Panel::Init(int, int, int, int)
 T vgui::Panel::InitPropertyConverters()
 T vgui::Panel::InstallMouseHandler(vgui::Panel*)
 T vgui::Panel::InternalApplySettings(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalCursorEntered()
 T vgui::Panel::InternalCursorEnteredChild()
 T vgui::Panel::InternalCursorExited()
 T vgui::Panel::InternalCursorExitedChild()
 T vgui::Panel::InternalCursorMoved(int, int)
 T vgui::Panel::InternalFocusChanged(bool)
 T vgui::Panel::InternalInitDefaultValues(PanelAnimationMap*)
 T vgui::Panel::InternalInvalidateLayout()
 T vgui::Panel::InternalKeyCodePressed(int)
 T vgui::Panel::InternalKeyCodeReleased(int)
 T vgui::Panel::InternalKeyCodeTyped(int)
 T vgui::Panel::InternalKeyFocusTicked()
 T vgui::Panel::InternalKeyTyped(int)
 T vgui::Panel::InternalMouseDoublePressed(int)
 T vgui::Panel::InternalMouseFocusTicked()
 T vgui::Panel::InternalMousePressed(int)
 T vgui::Panel::InternalMouseReleased(int)
 T vgui::Panel::InternalMouseTriplePressed(int)
 T vgui::Panel::InternalMouseWheeled(int)
 T vgui::Panel::InternalMove()
 T vgui::Panel::InternalRequestInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalSetCursor()
 T vgui::Panel::InternalSetInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InvalidateLayout(bool, bool)
 T vgui::Panel::InvalidateStyle()
 T vgui::Panel::IsAutoDeleteSet()
 T vgui::Panel::IsBeingDragged()
 T vgui::Panel::IsBlockingDragChaining() const
 T vgui::Panel::IsBuildGroupEnabled()
 T vgui::Panel::IsBuildModeActive()
 T vgui::Panel::IsBuildModeDeletable()
 T vgui::Panel::IsBuildModeEditable()
 T vgui::Panel::IsConsoleStylePanel() const
 T vgui::Panel::IsCursorNone()
 T vgui::Panel::IsCursorOver()
 T vgui::Panel::IsDragEnabled() const
 T vgui::Panel::IsDropEnabled() const
 T vgui::Panel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::IsEnabled()
 T vgui::Panel::IsFullyVisible()
 T vgui::Panel::IsKeyBoardInputEnabled()
 T vgui::Panel::IsKeyOverridden(ButtonCode_t, int)
 T vgui::Panel::IsKeyRebound(ButtonCode_t, int)
 T vgui::Panel::IsLayoutInvalid()
 T vgui::Panel::IsMouseInputEnabled()
 T vgui::Panel::IsOpaque()
 T vgui::Panel::IsPopup()
 T vgui::Panel::IsProportional()
 T vgui::Panel::IsTriplePressAllowed() const
 T vgui::Panel::IsValidKeyBindingsContext() const
 T vgui::Panel::IsVisible()
 T vgui::Panel::IsWithin(int, int)
 T vgui::Panel::IsWithinTraverse(int, int, bool)
 T vgui::Panel::LocalToScreen(int&, int&)
 T vgui::Panel::LookupBindingByKeyCode(ButtonCode_t, int)
 T vgui::Panel::LookupElementBounds(char const*, int&, int&, int&, int&)
 T vgui::Panel::MakePopup(bool, bool)
 T vgui::Panel::MakeReadyForUse()
 T vgui::Panel::MarkForDeletion()
 T vgui::Panel::MoveToFront()
 T vgui::Panel::NarrowClipRect(int&, int&, int&, int&)
 T vgui::Panel::NavigateDown()
 T vgui::Panel::NavigateFrom()
 T vgui::Panel::NavigateLeft()
 T vgui::Panel::NavigateRight()
 T vgui::Panel::NavigateTo()
 T vgui::Panel::NavigateToChild(vgui::Panel*)
 T vgui::Panel::NavigateUp()
 T vgui::Panel::OnAppearanceChanged(vgui::IAppearance*)
 T vgui::Panel::OnChildAdded(unsigned int)
 T vgui::Panel::OnCommand(char const*)
 T vgui::Panel::OnContinueDragging()
 T vgui::Panel::OnCreateDragData(KeyValues*)
 T vgui::Panel::OnCursorEntered()
 T vgui::Panel::OnCursorEnteredChild()
 T vgui::Panel::OnCursorExited()
 T vgui::Panel::OnCursorExitedChild()
 T vgui::Panel::OnCursorMoved(int, int)
 T vgui::Panel::OnDelete()
 T vgui::Panel::OnDragFailed(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDraggablePanelPaint()
 T vgui::Panel::OnDraggablePanelPaint(IVGuiPaintSurface*)
 T vgui::Panel::OnDropContextHoverHide(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDropContextHoverShow(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDroppablePanelPaint(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnDroppablePanelPaint(IVGuiPaintSurface*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnFinishDragging(bool, ButtonCode_t, bool)
 T vgui::Panel::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnKeyCodePressed(ButtonCode_t)
 T vgui::Panel::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Panel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Panel::OnKeyFocusTicked()
 T vgui::Panel::OnKeyTyped(wchar_t)
 T vgui::Panel::OnKillFocus()
 T vgui::Panel::OnLayoutFileChanged(char const*)
 T vgui::Panel::OnMessage(KeyValues const*, unsigned int)
 T vgui::Panel::OnMouseCaptureLost()
 T vgui::Panel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Panel::OnMouseFocusTicked()
 T vgui::Panel::OnMousePressed(ButtonCode_t)
 T vgui::Panel::OnMouseReleased(ButtonCode_t)
 T vgui::Panel::OnMouseTriplePressed(ButtonCode_t)
 T vgui::Panel::OnMouseWheeled(int)
 T vgui::Panel::OnMove()
 T vgui::Panel::OnNavigateFrom(char const*)
 T vgui::Panel::OnNavigateTo(char const*)
 T vgui::Panel::OnOldMessage(KeyValues*, unsigned int)
 T vgui::Panel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelEnteredDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelExitedDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Panel::OnScreenSizeChanged(int, int)
 T vgui::Panel::OnSetFocus()
 T vgui::Panel::OnSizeChanged(int, int)
 T vgui::Panel::OnStartDragging()
 T vgui::Panel::OnThink()
 T vgui::Panel::OnTick()
 T vgui::Panel::OnUnserialized(CDmxElement*)
 T vgui::Panel::Paint()
 T vgui::Panel::Paint(IVGuiPaintSurface*)
 T vgui::Panel::PaintAppearance()
 T vgui::Panel::PaintAppearance(IVGuiPaintSurface*)
 T vgui::Panel::PaintAppearanceBackground()
 T vgui::Panel::PaintAppearanceBackground(IVGuiPaintSurface*)
 T vgui::Panel::PaintBackground()
 T vgui::Panel::PaintBackground(IVGuiPaintSurface*)
 T vgui::Panel::PaintBorder()
 T vgui::Panel::PaintBorder(IVGuiPaintSurface*)
 T vgui::Panel::PaintBuildOverlay()
 T vgui::Panel::PaintBuildOverlay(IVGuiPaintSurface*)
 T vgui::Panel::PaintTraverse(IVGuiPaintSurface*, bool, bool)
 T vgui::Panel::PaintTraverse(bool, bool)
 T vgui::Panel::Panel()
 T vgui::Panel::Panel(vgui::Panel*)
 T vgui::Panel::Panel(vgui::Panel*, char const*)
 T vgui::Panel::ParentChanged(unsigned int, vgui::Panel*)
 T vgui::Panel::ParentLocalToScreen(int&, int&)
 T vgui::Panel::PerformApplySchemeSettings()
 T vgui::Panel::PerformLayout()
 T vgui::Panel::PinToSibling(char const*, vgui::Panel::PinCorner_e, vgui::Panel::PinCorner_e)
 T vgui::Panel::PostActionSignal(KeyValues*)
 T vgui::Panel::PostChildPaint()
 T vgui::Panel::PostChildPaint(IVGuiPaintSurface*)
 T vgui::Panel::PostMessage(unsigned int, KeyValues*, float)
 T vgui::Panel::PostMessage(vgui::Panel*, KeyValues*, float)
 T vgui::Panel::PostMessageToChild(char const*, KeyValues*)
 T vgui::Panel::PreparePanelMap(vgui::PanelMap_t*)
 T vgui::Panel::QueryInterface(vgui::EInterfaceID)
 T vgui::Panel::RemoveActionSignalTarget(vgui::Panel*)
 T vgui::Panel::Repaint()
 T vgui::Panel::RequestFocus(int)
 T vgui::Panel::RequestFocusNext(unsigned int)
 T vgui::Panel::RequestFocusPrev(unsigned int)
 T vgui::Panel::RequestInfo(KeyValues*)
 T vgui::Panel::RequestInfoFromChild(char const*, KeyValues*)
 T vgui::Panel::ResolveChildSiblingPins()
 T vgui::Panel::ScreenToLocal(int&, int&)
 T vgui::Panel::SetAllowKeyBindingChainToParent(bool)
 T vgui::Panel::SetAlpha(int)
 T vgui::Panel::SetAutoDelete(bool)
 T vgui::Panel::SetAutoResize(vgui::Panel::PinCorner_e, vgui::Panel::AutoResize_e, int, int, int, int)
 T vgui::Panel::SetBgColor(Color)
 T vgui::Panel::SetBlockDragChaining(bool)
 T vgui::Panel::SetBorder(vgui::IBorder*)
 T vgui::Panel::SetBounds(int, int, int, int)
 T vgui::Panel::SetBuildGroup(vgui::BuildGroup*)
 T vgui::Panel::SetBuildModeDeletable(bool)
 T vgui::Panel::SetBuildModeEditable(bool)
 T vgui::Panel::SetContainerRegionRect(int, int, int, int)
 T vgui::Panel::SetCursor(unsigned long)
 T vgui::Panel::SetDragEnabled(bool)
 T vgui::Panel::SetDragSTartTolerance(int)
 T vgui::Panel::SetDropEnabled(bool, float)
 T vgui::Panel::SetEnabled(bool)
 T vgui::Panel::SetFgColor(Color)
 T vgui::Panel::SetInfo(KeyValues*)
 T vgui::Panel::SetKeyBindingsContext(vgui::KeyBindingContextHandle_t)
 T vgui::Panel::SetKeyBoardInputEnabled(bool)
 T vgui::Panel::SetMessageContextId_R(int)
 T vgui::Panel::SetMinimumSize(int, int)
 T vgui::Panel::SetMouseInputEnabled(bool)
 T vgui::Panel::SetName(char const*)
 T vgui::Panel::SetOverridableColor(Color*, Color const&)
 T vgui::Panel::SetPaintAppearanceEnabled(bool)
 T vgui::Panel::SetPaintBackgroundEnabled(bool)
 T vgui::Panel::SetPaintBackgroundType(int)
 T vgui::Panel::SetPaintBorderEnabled(bool)
 T vgui::Panel::SetPaintEnabled(bool)
 T vgui::Panel::SetParent(unsigned int)
 T vgui::Panel::SetParent(vgui::Panel*)
 T vgui::Panel::SetPinCorner(vgui::Panel::PinCorner_e, int, int)
 T vgui::Panel::SetPos(int, int)
 T vgui::Panel::SetPostChildPaintEnabled(bool)
 T vgui::Panel::SetProportional(bool)
 T vgui::Panel::SetScheme(char const*)
 T vgui::Panel::SetScheme(unsigned long)
 T vgui::Panel::SetShowDragHelper(bool)
 T vgui::Panel::SetSilentMode(bool)
 T vgui::Panel::SetSize(int, int)
 T vgui::Panel::SetSkipChildDuringPainting(vgui::Panel*)
 T vgui::Panel::SetStyle(char const*)
 T vgui::Panel::SetTabPosition(int)
 T vgui::Panel::SetTall(int)
 T vgui::Panel::SetTriplePressAllowed(bool)
 T vgui::Panel::SetVisible(bool)
 T vgui::Panel::SetWide(int)
 T vgui::Panel::SetZPos(int)
 T vgui::Panel::ShouldLookAtParentForMoreStyles()
 T vgui::Panel::Think()
 T vgui::Panel::ToHandle() const
 T vgui::Panel::UpdateSiblingPin()
 T vgui::Panel::~Panel()
 T vgui::PanelListPanel::AddItem(vgui::Panel*, vgui::Panel*)
 T vgui::PanelListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PanelListPanel::AdjustPanelPositions()
 T vgui::PanelListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PanelListPanel::ApplySettings(KeyValues*)
 T vgui::PanelListPanel::ComputeVPixelsNeeded()
 T vgui::PanelListPanel::DeleteAllItems()
 T vgui::PanelListPanel::GetAnimMap()
 T vgui::PanelListPanel::GetCellRenderer(int)
 T vgui::PanelListPanel::GetDescription()
 T vgui::PanelListPanel::GetItemLabel(int)
 T vgui::PanelListPanel::GetItemPanel(int)
 T vgui::PanelListPanel::GetKBMap()
 T vgui::PanelListPanel::GetMessageMap()
 T vgui::PanelListPanel::GetPanelClassName()
 T vgui::PanelListPanel::GetSettings(KeyValues*)
 T vgui::PanelListPanel::MoveScrollBarToTop()
 T vgui::PanelListPanel::OnMouseWheeled(int)
 T vgui::PanelListPanel::OnSizeChanged(int, int)
 T vgui::PanelListPanel::OnSliderMoved(int)
 T vgui::PanelListPanel::PanelListPanel(vgui::Panel*, char const*)
 T vgui::PanelListPanel::PerformLayout()
 T vgui::PanelListPanel::RemoveAll()
 T vgui::PanelListPanel::RemoveItem(int)
 T vgui::PanelListPanel::~PanelListPanel()
 T vgui::ProgressBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ProgressBar::ApplySettings(KeyValues*)
 T vgui::ProgressBar::GetAnimMap()
 T vgui::ProgressBar::GetDescription()
 T vgui::ProgressBar::GetKBMap()
 T vgui::ProgressBar::GetMessageMap()
 T vgui::ProgressBar::GetPanelClassName()
 T vgui::ProgressBar::GetProgress()
 T vgui::ProgressBar::GetSettings(KeyValues*)
 T vgui::ProgressBar::OnDialogVariablesChanged(KeyValues*)
 T vgui::ProgressBar::Paint(IVGuiPaintSurface*)
 T vgui::ProgressBar::PaintBackground(IVGuiPaintSurface*)
 T vgui::ProgressBar::PaintSegment(IVGuiPaintSurface*, int&, int&, int, int)
 T vgui::ProgressBar::ProgressBar(vgui::Panel*, char const*)
 T vgui::ProgressBar::SetProgress(float)
 T vgui::ProgressBar::SetSegmentInfo(int, int)
 T vgui::ProgressBar::~ProgressBar()
 T vgui::PropertyDialog::ActivateBuildMode()
 T vgui::PropertyDialog::AddPage(vgui::Panel*, char const*)
 T vgui::PropertyDialog::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::PropertyDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PropertyDialog::ApplyChanges()
 T vgui::PropertyDialog::GetActivePage()
 T vgui::PropertyDialog::GetAnimMap()
 T vgui::PropertyDialog::GetKBMap()
 T vgui::PropertyDialog::GetMessageMap()
 T vgui::PropertyDialog::GetPanelClassName()
 T vgui::PropertyDialog::GetPropertySheet()
 T vgui::PropertyDialog::GetVar_m_iSheetInsetBottom(vgui::Panel*)
 T vgui::PropertyDialog::OnApplyButtonEnable()
 T vgui::PropertyDialog::OnCancel()
 T vgui::PropertyDialog::OnCommand(char const*)
 T vgui::PropertyDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::PropertyDialog::OnOK(bool)
 T vgui::PropertyDialog::PerformLayout()
 T vgui::PropertyDialog::PropertyDialog(vgui::Panel*, char const*)
 T vgui::PropertyDialog::RequestFocus(int)
 T vgui::PropertyDialog::ResetAllData()
 T vgui::PropertyDialog::~PropertyDialog()
 T vgui::PropertyPage::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PropertyPage::GetAnimMap()
 T vgui::PropertyPage::GetKBMap()
 T vgui::PropertyPage::GetMessageMap()
 T vgui::PropertyPage::GetPanelClassName()
 T vgui::PropertyPage::HasUserConfigSettings()
 T vgui::PropertyPage::OnApplyChanges()
 T vgui::PropertyPage::OnKeyCodeTyped(ButtonCode_t)
 T vgui::PropertyPage::OnPageHide()
 T vgui::PropertyPage::OnPageShow()
 T vgui::PropertyPage::OnPageTabActivated(vgui::Panel*)
 T vgui::PropertyPage::OnResetData()
 T vgui::PropertyPage::PropertyPage(vgui::Panel*, char const*)
 T vgui::PropertyPage::SetVisible(bool)
 T vgui::PropertyPage::~PropertyPage()
 T vgui::PropertySheet::AddPage(vgui::Panel*, char const*, char const*, bool, int)
 T vgui::PropertySheet::AddPageDropTab(char const*, vgui::Panel*)
 T vgui::PropertySheet::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::PropertySheet::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PropertySheet::ApplyChanges()
 T vgui::PropertySheet::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PropertySheet::ApplySettings(KeyValues*)
 T vgui::PropertySheet::ChangeActiveTab(int)
 T vgui::PropertySheet::ClearPageDropTab()
 T vgui::PropertySheet::DeletePage(vgui::Panel*)
 T vgui::PropertySheet::DisablePage(char const*)
 T vgui::PropertySheet::EnablePage(char const*)
 T vgui::PropertySheet::FindInsertBeforeTab()
 T vgui::PropertySheet::GetActivePage()
 T vgui::PropertySheet::GetActivePageNum()
 T vgui::PropertySheet::GetActiveTab()
 T vgui::PropertySheet::GetActiveTabTitle(char*, int)
 T vgui::PropertySheet::GetAnimMap()
 T vgui::PropertySheet::GetKBMap()
 T vgui::PropertySheet::GetMessageMap()
 T vgui::PropertySheet::GetNumPages()
 T vgui::PropertySheet::GetPage(int)
 T vgui::PropertySheet::GetPanelClassName()
 T vgui::PropertySheet::GetTab(int)
 T vgui::PropertySheet::GetTabTitle(int, char*, int)
 T vgui::PropertySheet::GetVar_m_bTabFitText(vgui::Panel*)
 T vgui::PropertySheet::GetVar_m_iSpecifiedTabHeight(vgui::Panel*)
 T vgui::PropertySheet::GetVar_m_iSpecifiedTabHeightSmall(vgui::Panel*)
 T vgui::PropertySheet::GetVar_m_iTabXDelta(vgui::Panel*)
 T vgui::PropertySheet::GetVar_m_iTabXIndent(vgui::Panel*)
 T vgui::PropertySheet::HasHotkey(wchar_t)
 T vgui::PropertySheet::HasUserConfigSettings()
 T vgui::PropertySheet::IsDraggableTab() const
 T vgui::PropertySheet::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PropertySheet::IsSmallTabs() const
 T vgui::PropertySheet::LayoutTabs()
 T vgui::PropertySheet::OnApplyButtonEnable()
 T vgui::PropertySheet::OnCommand(char const*)
 T vgui::PropertySheet::OnCurrentDefaultButtonSet(unsigned int)
 T vgui::PropertySheet::OnDefaultButtonSet(unsigned int)
 T vgui::PropertySheet::OnDroppablePanelPaint(IVGuiPaintSurface*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::PropertySheet::OnFindDefaultButton()
 T vgui::PropertySheet::OnKeyCodeTyped(ButtonCode_t)
 T vgui::PropertySheet::OnOpenContextMenu(KeyValues*)
 T vgui::PropertySheet::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::PropertySheet::OnTabPressed(vgui::Panel*)
 T vgui::PropertySheet::OnTextChanged(vgui::Panel*, wchar_t const*)
 T vgui::PropertySheet::OnThink()
 T vgui::PropertySheet::PaintBorder(IVGuiPaintSurface*)
 T vgui::PropertySheet::PerformLayout()
 T vgui::PropertySheet::PropertySheet(vgui::Panel*, char const*, bool)
 T vgui::PropertySheet::RemoveAllPages()
 T vgui::PropertySheet::RemovePage(vgui::Panel*)
 T vgui::PropertySheet::RequestFocus(int)
 T vgui::PropertySheet::RequestFocusNext(unsigned int)
 T vgui::PropertySheet::RequestFocusPrev(unsigned int)
 T vgui::PropertySheet::ResetAllData()
 T vgui::PropertySheet::SetActivePage(vgui::Panel*)
 T vgui::PropertySheet::SetPageEnabled(char const*, bool)
 T vgui::PropertySheet::SetPageTitle(vgui::Panel*, char const*)
 T vgui::PropertySheet::SetShowTabs(bool)
 T vgui::PropertySheet::SetSmallTabs(bool)
 T vgui::PropertySheet::SetTabWidth(int)
 T vgui::PropertySheet::~PropertySheet()
 T vgui::RadioButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RadioButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RadioButton::ApplySettings(KeyValues*)
 T vgui::RadioButton::DoClick()
 T vgui::RadioButton::FindBestRadioButton(int)
 T vgui::RadioButton::GetAnimMap()
 T vgui::RadioButton::GetBorder(bool, bool, bool, bool)
 T vgui::RadioButton::GetDescription()
 T vgui::RadioButton::GetKBMap()
 T vgui::RadioButton::GetMessageMap()
 T vgui::RadioButton::GetPanelClassName()
 T vgui::RadioButton::GetRadioTabPosition()
 T vgui::RadioButton::GetSettings(KeyValues*)
 T vgui::RadioButton::GetStyleFlags()
 T vgui::RadioButton::GetSubTabPosition()
 T vgui::RadioButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RadioButton::OnRadioButtonChecked(int)
 T vgui::RadioButton::OnThink()
 T vgui::RadioButton::RadioButton(vgui::Panel*, char const*, char const*)
 T vgui::RadioButton::SetSelected(bool)
 T vgui::RadioButton::SetSubTabPosition(int)
 T vgui::RadioButton::~RadioButton()
 T vgui::RichText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RichText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichText::ApplySettings(KeyValues*)
 T vgui::RichText::ApplySingleSetting(KeyValues*)
 T vgui::RichText::CopySelected()
 T vgui::RichText::CreateEditMenu()
 T vgui::RichText::CursorToPixelSpace(int, int&, int&)
 T vgui::RichText::CutSelected()
 T vgui::RichText::DrawString(IVGuiPaintSurface*, int, int, vgui::RichText::TRenderState&, unsigned long)
 T vgui::RichText::FinishingURL(int, int)
 T vgui::RichText::GetAnimMap()
 T vgui::RichText::GetContentSize(int&, int&)
 T vgui::RichText::GetDescription()
 T vgui::RichText::GetKBMap()
 T vgui::RichText::GetMessageMap()
 T vgui::RichText::GetPanelClassName()
 T vgui::RichText::GetSettings(KeyValues*)
 T vgui::RichText::GotoWordLeft()
 T vgui::RichText::GotoWordRight()
 T vgui::RichText::LayoutVerticalScrollBarSlider()
 T vgui::RichText::MoveScrollBar(int)
 T vgui::RichText::MoveScrollBarDirect(int)
 T vgui::RichText::OnClickPanel(int)
 T vgui::RichText::OnCursorEntered()
 T vgui::RichText::OnCursorExited()
 T vgui::RichText::OnCursorMoved(int, int)
 T vgui::RichText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RichText::OnKillFocus()
 T vgui::RichText::OnMouseCaptureLost()
 T vgui::RichText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::RichText::OnMouseFocusTicked()
 T vgui::RichText::OnMousePressed(ButtonCode_t)
 T vgui::RichText::OnMouseReleased(ButtonCode_t)
 T vgui::RichText::OnMouseWheeled(int)
 T vgui::RichText::OnSetFocus()
 T vgui::RichText::OnSetText(wchar_t const*)
 T vgui::RichText::OnSizeChanged(int, int)
 T vgui::RichText::OnSliderMoved()
 T vgui::RichText::OnTextClicked(wchar_t const*)
 T vgui::RichText::OnThink()
 T vgui::RichText::OpenEditMenu()
 T vgui::RichText::Paint(IVGuiPaintSurface*)
 T vgui::RichText::PerformLayout()
 T vgui::RichText::PixelToCursorSpace(int, int)
 T vgui::RichText::RecalculateDefaultState(int)
 T vgui::RichText::RecalculateLineBreaks()
 T vgui::RichText::RequestInfo(KeyValues*)
 T vgui::RichText::RichText(vgui::Panel*, char const*)
 T vgui::RichText::SetDrawOffsets(int, int)
 T vgui::RichText::SetFgColor(Color)
 T vgui::RichText::SetText(char const*)
 T vgui::RichText::SetText(wchar_t const*)
 T vgui::RichText::SetVerticalScrollbar(bool)
 T vgui::RichText::SettingMessage__maxCharCount(int)
 T vgui::RichText::SettingMessage_m_bAutoTallToContents(bool)
 T vgui::RichText::UpdateRenderState(int, vgui::RichText::TRenderState&)
 T vgui::RichText::~RichText()
 T vgui::RichTextInterior::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichTextInterior::GetAnimMap()
 T vgui::RichTextInterior::GetKBMap()
 T vgui::RichTextInterior::GetMessageMap()
 T vgui::RichTextInterior::GetPanelClassName()
 T vgui::RichTextInterior::RichTextInterior(vgui::RichText*, char const*)
 T vgui::RichTextInterior::~RichTextInterior()
 T vgui::ScalableImagePanel::ApplySettings(KeyValues*)
 T vgui::ScalableImagePanel::GetAnimMap()
 T vgui::ScalableImagePanel::GetDescription()
 T vgui::ScalableImagePanel::GetKBMap()
 T vgui::ScalableImagePanel::GetMessageMap()
 T vgui::ScalableImagePanel::GetPanelClassName()
 T vgui::ScalableImagePanel::GetSettings(KeyValues*)
 T vgui::ScalableImagePanel::PaintBackground(IVGuiPaintSurface*)
 T vgui::ScalableImagePanel::PerformLayout()
 T vgui::ScalableImagePanel::ScalableImagePanel(vgui::Panel*, char const*)
 T vgui::ScalableImagePanel::SetImage(char const*)
 T vgui::ScalableImagePanel::~ScalableImagePanel()
 T vgui::ScrollBar::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::ScrollBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ScrollBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBar::GetAnimMap()
 T vgui::ScrollBar::GetBaseStyleName()
 T vgui::ScrollBar::GetButton(int)
 T vgui::ScrollBar::GetKBMap()
 T vgui::ScrollBar::GetMessageMap()
 T vgui::ScrollBar::GetPanelClassName()
 T vgui::ScrollBar::GetRange(int&, int&)
 T vgui::ScrollBar::GetRangeWindow()
 T vgui::ScrollBar::GetSlider()
 T vgui::ScrollBar::GetValue()
 T vgui::ScrollBar::GetVar_m_bAutoHideButtons(vgui::Panel*)
 T vgui::ScrollBar::HasFullRange()
 T vgui::ScrollBar::IsVertical()
 T vgui::ScrollBar::OnMouseFocusTicked()
 T vgui::ScrollBar::OnSizeChanged(int, int)
 T vgui::ScrollBar::OnSliderMoved(int)
 T vgui::ScrollBar::OnSliderReleased(int)
 T vgui::ScrollBar::PerformLayout()
 T vgui::ScrollBar::RespondToScrollArrow(int)
 T vgui::ScrollBar::ScrollBar(vgui::Panel*, char const*, bool)
 T vgui::ScrollBar::SendScrollBarSliderReleasedMessage(int)
 T vgui::ScrollBar::SendSliderMoveMessage(int)
 T vgui::ScrollBar::SetButton(vgui::Button*, int)
 T vgui::ScrollBar::SetButtonPressedScrollValue(int)
 T vgui::ScrollBar::SetPaintBackgroundEnabled(bool)
 T vgui::ScrollBar::SetPaintBorderEnabled(bool)
 T vgui::ScrollBar::SetPaintEnabled(bool)
 T vgui::ScrollBar::SetRange(int, int)
 T vgui::ScrollBar::SetRangeWindow(int)
 T vgui::ScrollBar::SetScrollbarButtonsVisible(bool)
 T vgui::ScrollBar::SetSlider(vgui::ScrollBarSlider*)
 T vgui::ScrollBar::SetValue(int)
 T vgui::ScrollBar::UpdateButtonsForImages()
 T vgui::ScrollBar::UpdateSliderImages()
 T vgui::ScrollBar::Validate()
 T vgui::ScrollBar::~ScrollBar()
 T vgui::ScrollBarSlider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBarSlider::GetAnimMap()
 T vgui::ScrollBarSlider::GetBaseStyleName()
 T vgui::ScrollBarSlider::GetKBMap()
 T vgui::ScrollBarSlider::GetMessageMap()
 T vgui::ScrollBarSlider::GetNobPos(int&, int&)
 T vgui::ScrollBarSlider::GetPanelClassName()
 T vgui::ScrollBarSlider::GetRange(int&, int&)
 T vgui::ScrollBarSlider::GetRangeWindow()
 T vgui::ScrollBarSlider::GetStyleFlags()
 T vgui::ScrollBarSlider::GetValue()
 T vgui::ScrollBarSlider::HasFullRange()
 T vgui::ScrollBarSlider::IsMouseOverNob()
 T vgui::ScrollBarSlider::IsSliderVisible()
 T vgui::ScrollBarSlider::IsVertical()
 T vgui::ScrollBarSlider::OnCursorEntered()
 T vgui::ScrollBarSlider::OnCursorExited()
 T vgui::ScrollBarSlider::OnCursorMoved(int, int)
 T vgui::ScrollBarSlider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMousePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMouseReleased(ButtonCode_t)
 T vgui::ScrollBarSlider::Paint(IVGuiPaintSurface*)
 T vgui::ScrollBarSlider::PaintBackground(IVGuiPaintSurface*)
 T vgui::ScrollBarSlider::PerformLayout()
 T vgui::ScrollBarSlider::RecomputeNobPosFromValue()
 T vgui::ScrollBarSlider::RecomputeValueFromNobPos()
 T vgui::ScrollBarSlider::ScrollBarSlider(vgui::Panel*, char const*, bool)
 T vgui::ScrollBarSlider::SendScrollBarSliderMovedMessage()
 T vgui::ScrollBarSlider::SendScrollBarSliderReleasedMessage()
 T vgui::ScrollBarSlider::SetButtonOffset(int)
 T vgui::ScrollBarSlider::SetRange(int, int)
 T vgui::ScrollBarSlider::SetRangeWindow(int)
 T vgui::ScrollBarSlider::SetSize(int, int)
 T vgui::ScrollBarSlider::SetValue(int)
 T vgui::ScrollBarSlider::~ScrollBarSlider()
 T vgui::Slider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Slider::ApplySettings(KeyValues*)
 T vgui::Slider::DrawNob(IVGuiPaintSurface*)
 T vgui::Slider::DrawTickLabels(IVGuiPaintSurface*)
 T vgui::Slider::DrawTicks(IVGuiPaintSurface*)
 T vgui::Slider::EstimateValueAtPos(int, int)
 T vgui::Slider::GetAnimMap()
 T vgui::Slider::GetDescription()
 T vgui::Slider::GetKBMap()
 T vgui::Slider::GetMessageMap()
 T vgui::Slider::GetNobPos(int&, int&)
 T vgui::Slider::GetPanelClassName()
 T vgui::Slider::GetRange(int&, int&)
 T vgui::Slider::GetSettings(KeyValues*)
 T vgui::Slider::GetTrackRect(int&, int&, int&, int&)
 T vgui::Slider::GetValue()
 T vgui::Slider::IsDragOnRepositionNob() const
 T vgui::Slider::IsDragged() const
 T vgui::Slider::OnCursorMoved(int, int)
 T vgui::Slider::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Slider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Slider::OnMousePressed(ButtonCode_t)
 T vgui::Slider::OnMouseReleased(ButtonCode_t)
 T vgui::Slider::OnSizeChanged(int, int)
 T vgui::Slider::Paint(IVGuiPaintSurface*)
 T vgui::Slider::PaintBackground(IVGuiPaintSurface*)
 T vgui::Slider::PerformLayout()
 T vgui::Slider::RecomputeNobPosFromValue()
 T vgui::Slider::RecomputeValueFromNobPos()
 T vgui::Slider::SendSliderDragEndMessage()
 T vgui::Slider::SendSliderDragStartMessage()
 T vgui::Slider::SendSliderMovedMessage()
 T vgui::Slider::SetButtonOffset(int)
 T vgui::Slider::SetDragOnRepositionNob(bool)
 T vgui::Slider::SetInverted(bool)
 T vgui::Slider::SetNumTicks(int)
 T vgui::Slider::SetRange(int, int)
 T vgui::Slider::SetSliderThumbSubRange(bool, int, int)
 T vgui::Slider::SetThumbWidth(int)
 T vgui::Slider::SetTickCaptions(char const*, char const*)
 T vgui::Slider::SetTickCaptions(wchar_t const*, wchar_t const*)
 T vgui::Slider::SetValue(int, bool)
 T vgui::Slider::Slider(vgui::Panel*, char const*)
 T vgui::Slider::~Slider()
 T vgui::Splitter::ApplySettings(KeyValues*)
 T vgui::Splitter::ApplyUserConfigSettings(KeyValues*)
 T vgui::Splitter::EvenlyRespaceSplitters()
 T vgui::Splitter::GetAnimMap()
 T vgui::Splitter::GetKBMap()
 T vgui::Splitter::GetMessageMap()
 T vgui::Splitter::GetPanelClassName()
 T vgui::Splitter::GetSettings(KeyValues*)
 T vgui::Splitter::GetUserConfigSettings(KeyValues*)
 T vgui::Splitter::HasUserConfigSettings()
 T vgui::Splitter::OnSizeChanged(int, int)
 T vgui::Splitter::PerformLayout()
 T vgui::Splitter::RecreateSplitters(int)
 T vgui::Splitter::SetSplitterPosition(int, int)
 T vgui::Splitter::Splitter(vgui::Panel*, char const*, vgui::SplitterMode_t, int)
 T vgui::Splitter::~Splitter()
 T vgui::SplitterChildPanel::GetAnimMap()
 T vgui::SplitterChildPanel::GetKBMap()
 T vgui::SplitterChildPanel::GetMessageMap()
 T vgui::SplitterChildPanel::GetPanelClassName()
 T vgui::SplitterChildPanel::HasUserConfigSettings()
 T vgui::SplitterChildPanel::SplitterChildPanel(vgui::Panel*, char const*)
 T vgui::SplitterChildPanel::~SplitterChildPanel()
 T vgui::SplitterHandle::ApplySchemeSettings(vgui::IScheme*)
 T vgui::SplitterHandle::GetAnimMap()
 T vgui::SplitterHandle::GetKBMap()
 T vgui::SplitterHandle::GetMessageMap()
 T vgui::SplitterHandle::GetPanelClassName()
 T vgui::SplitterHandle::OnCursorMoved(int, int)
 T vgui::SplitterHandle::OnMouseDoublePressed(ButtonCode_t)
 T vgui::SplitterHandle::OnMousePressed(ButtonCode_t)
 T vgui::SplitterHandle::OnMouseReleased(ButtonCode_t)
 T vgui::SplitterHandle::SplitterHandle(vgui::Splitter*, char const*, vgui::SplitterMode_t, int)
 T vgui::SplitterHandle::~SplitterHandle()
 T vgui::TextEntry::AddAnotherLine(int&, int&)
 T vgui::TextEntry::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TextEntry::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextEntry::ApplySettings(KeyValues*)
 T vgui::TextEntry::Backspace()
 T vgui::TextEntry::CompositionString(wchar_t const*)
 T vgui::TextEntry::ConversionModeChanged(int)
 T vgui::TextEntry::CopySelected()
 T vgui::TextEntry::CreateEditMenu()
 T vgui::TextEntry::CursorToPixelSpace(int, int&, int&)
 T vgui::TextEntry::CutSelected()
 T vgui::TextEntry::Delete()
 T vgui::TextEntry::DeleteSelected()
 T vgui::TextEntry::DrawChar(IVGuiPaintSurface*, wchar_t, unsigned long, int, int, int)
 T vgui::TextEntry::DrawCursor(IVGuiPaintSurface*, int, int)
 T vgui::TextEntry::FireActionSignal()
 T vgui::TextEntry::GetAnimMap()
 T vgui::TextEntry::GetBaseStyleName()
 T vgui::TextEntry::GetDescription()
 T vgui::TextEntry::GetDragPanel()
 T vgui::TextEntry::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::GetEditMenu()
 T vgui::TextEntry::GetKBMap()
 T vgui::TextEntry::GetMaximumCharCount()
 T vgui::TextEntry::GetMessageMap()
 T vgui::TextEntry::GetNumLines()
 T vgui::TextEntry::GetPanelClassName()
 T vgui::TextEntry::GetSelectedRange(int&, int&)
 T vgui::TextEntry::GetSettings(KeyValues*)
 T vgui::TextEntry::GetSizerMinimumSize(int&, int&)
 T vgui::TextEntry::GetStartDrawIndex(int&)
 T vgui::TextEntry::GetText(char*, int)
 T vgui::TextEntry::GetText(wchar_t*, int)
 T vgui::TextEntry::GetTextCursorPos()
 T vgui::TextEntry::GetTextLength() const
 T vgui::TextEntry::GetTextRange(char*, int, int)
 T vgui::TextEntry::GetTextRange(wchar_t*, int, int)
 T vgui::TextEntry::GetValueAsFloat()
 T vgui::TextEntry::GetValueAsInt()
 T vgui::TextEntry::GetYStart()
 T vgui::TextEntry::GotoDown()
 T vgui::TextEntry::GotoEndOfLine()
 T vgui::TextEntry::GotoFirstOfLine()
 T vgui::TextEntry::GotoLeft()
 T vgui::TextEntry::GotoRight()
 T vgui::TextEntry::GotoTextEnd()
 T vgui::TextEntry::GotoTextStart()
 T vgui::TextEntry::GotoUp()
 T vgui::TextEntry::GotoWordLeft()
 T vgui::TextEntry::GotoWordRight()
 T vgui::TextEntry::HideIMECandidates()
 T vgui::TextEntry::InsertChar(wchar_t)
 T vgui::TextEntry::InsertString(char const*)
 T vgui::TextEntry::InsertString(wchar_t*)
 T vgui::TextEntry::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::IsEditable()
 T vgui::TextEntry::IsMultiline()
 T vgui::TextEntry::IsTextFullySelected() const
 T vgui::TextEntry::LanguageChanged(int)
 T vgui::TextEntry::LayoutVerticalScrollBarSlider()
 T vgui::TextEntry::MoveCursor(int, int)
 T vgui::TextEntry::NeedsEllipses(unsigned long, int*)
 T vgui::TextEntry::OnCreateDragData(KeyValues*)
 T vgui::TextEntry::OnCursorEntered()
 T vgui::TextEntry::OnCursorExited()
 T vgui::TextEntry::OnCursorMoved(int, int)
 T vgui::TextEntry::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TextEntry::OnKeyFocusTicked()
 T vgui::TextEntry::OnKeyTyped(wchar_t)
 T vgui::TextEntry::OnKillFocus()
 T vgui::TextEntry::OnMouseCaptureLost()
 T vgui::TextEntry::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseFocusTicked()
 T vgui::TextEntry::OnMousePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseReleased(ButtonCode_t)
 T vgui::TextEntry::OnMouseTriplePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseWheeled(int)
 T vgui::TextEntry::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::OnSetFocus()
 T vgui::TextEntry::OnSetState(int)
 T vgui::TextEntry::OnSetText(wchar_t const*)
 T vgui::TextEntry::OnSizeChanged(int, int)
 T vgui::TextEntry::OnSliderMoved()
 T vgui::TextEntry::OpenEditMenu()
 T vgui::TextEntry::Paint(IVGuiPaintSurface*)
 T vgui::TextEntry::PaintBackground(IVGuiPaintSurface*)
 T vgui::TextEntry::Paste()
 T vgui::TextEntry::PerformLayout()
 T vgui::TextEntry::PixelToCursorSpace(int, int)
 T vgui::TextEntry::RecalculateLineBreaks()
 T vgui::TextEntry::RequestInfo(KeyValues*)
 T vgui::TextEntry::ResetCursorBlink()
 T vgui::TextEntry::SaveUndoState()
 T vgui::TextEntry::ScrollRight()
 T vgui::TextEntry::SelectAllText(bool)
 T vgui::TextEntry::SelectCheck(bool)
 T vgui::TextEntry::SelectNoText()
 T vgui::TextEntry::SelectNone()
 T vgui::TextEntry::SendNewLine(bool)
 T vgui::TextEntry::SentenceModeChanged(int)
 T vgui::TextEntry::SetAutoLocalize(bool)
 T vgui::TextEntry::SetAutoProgressOnHittingCharLimit(bool)
 T vgui::TextEntry::SetCatchEnterKey(bool)
 T vgui::TextEntry::SetCatchTabKey(bool)
 T vgui::TextEntry::SetCharAt(wchar_t, int)
 T vgui::TextEntry::SetDisabledBgColor(Color)
 T vgui::TextEntry::SetDrawWidth(int)
 T vgui::TextEntry::SetEditable(bool)
 T vgui::TextEntry::SetEnabled(bool)
 T vgui::TextEntry::SetFont(unsigned long)
 T vgui::TextEntry::SetHorizontalScrolling(bool)
 T vgui::TextEntry::SetMaximumCharCount(int)
 T vgui::TextEntry::SetMultiline(bool)
 T vgui::TextEntry::SetSelectionBgColor(Color const&)
 T vgui::TextEntry::SetSelectionTextColor(Color const&)
 T vgui::TextEntry::SetSelectionUnfocusedBgColor(Color const&)
 T vgui::TextEntry::SetTabSpaces(int)
 T vgui::TextEntry::SetText(char const*)
 T vgui::TextEntry::SetText(wchar_t const*)
 T vgui::TextEntry::SetTextHidden(bool)
 T vgui::TextEntry::SetToFullHeight()
 T vgui::TextEntry::SetToFullWidth()
 T vgui::TextEntry::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextEntry::SetVerticalScrollbar(bool)
 T vgui::TextEntry::SetWrap(bool)
 T vgui::TextEntry::ShowIMECandidates()
 T vgui::TextEntry::TextEntry(vgui::Panel*, char const*)
 T vgui::TextEntry::Undo()
 T vgui::TextEntry::UpdateIMECandidates()
 T vgui::TextEntry::~TextEntry()
 T vgui::TextImage::GetContentSize(int&, int&)
 T vgui::TextImage::GetFont()
 T vgui::TextImage::GetText(char*, int)
 T vgui::TextImage::GetText(wchar_t*, int)
 T vgui::TextImage::GetTextSize(int&, int&)
 T vgui::TextImage::GetUnlocalizedText(char*, int)
 T vgui::TextImage::GetUnlocalizedTextSymbol()
 T vgui::TextImage::Paint(IVGuiPaintSurface*)
 T vgui::TextImage::RecalculateCenterWrapIndents()
 T vgui::TextImage::RecalculateEllipsesPosition()
 T vgui::TextImage::RecalculateNewLinePositions()
 T vgui::TextImage::ResizeImageToContent()
 T vgui::TextImage::SetCenterWrap(bool)
 T vgui::TextImage::SetDrawWidth(int)
 T vgui::TextImage::SetFont(unsigned long)
 T vgui::TextImage::SetSize(int, int)
 T vgui::TextImage::SetText(char const*)
 T vgui::TextImage::SetText(wchar_t const*, bool)
 T vgui::TextImage::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextImage::SetWrap(bool)
 T vgui::TextImage::TextImage(char const*)
 T vgui::TextImage::TextImage(wchar_t const*)
 T vgui::TextImage::~TextImage()
 T vgui::TextTooltip::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextTooltip::HideTooltip()
 T vgui::TextTooltip::PerformLayout()
 T vgui::TextTooltip::SetText(char const*)
 T vgui::TextTooltip::ShowTooltip(vgui::Panel*)
 T vgui::TextTooltip::SizeTextWindow()
 T vgui::TextTooltip::TextTooltip(vgui::Panel*, char const*)
 T vgui::TextTooltip::~TextTooltip()
 T vgui::TileViewPanelEx::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TileViewPanelEx::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TileViewPanelEx::ComputeLayoutInfo()
 T vgui::TileViewPanelEx::GetAnimMap()
 T vgui::TileViewPanelEx::GetFont()
 T vgui::TileViewPanelEx::GetKBMap()
 T vgui::TileViewPanelEx::GetMessageMap()
 T vgui::TileViewPanelEx::GetPanelClassName()
 T vgui::TileViewPanelEx::GetTileOrg(int, int&, int&)
 T vgui::TileViewPanelEx::HitTest(int, int, int&)
 T vgui::TileViewPanelEx::OnMouseWheeled(int)
 T vgui::TileViewPanelEx::OnSizeChanged(int, int)
 T vgui::TileViewPanelEx::OnSliderMoved()
 T vgui::TileViewPanelEx::Paint(IVGuiPaintSurface*)
 T vgui::TileViewPanelEx::PerformLayout()
 T vgui::TileViewPanelEx::SetFont(unsigned long)
 T vgui::TileViewPanelEx::TileViewPanelEx(vgui::Panel*, char const*)
 T vgui::TileViewPanelEx::~TileViewPanelEx()
 T vgui::ToggleButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ToggleButton::CanBeDefaultButton()
 T vgui::ToggleButton::DoClick()
 T vgui::ToggleButton::GetAnimMap()
 T vgui::ToggleButton::GetButtonFgColor()
 T vgui::ToggleButton::GetKBMap()
 T vgui::ToggleButton::GetMessageMap()
 T vgui::ToggleButton::GetPanelClassName()
 T vgui::ToggleButton::OnKeyCodePressed(ButtonCode_t)
 T vgui::ToggleButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ToggleButton::ToggleButton(vgui::Panel*, char const*, char const*)
 T vgui::ToggleButton::~ToggleButton()
 T vgui::ToolWindow::GetToolWindowFactory()
 T vgui::TreeNode::AddChild(vgui::TreeNode*)
 T vgui::TreeNode::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNode::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNode::CalculateVisibleMaxWidth()
 T vgui::TreeNode::ClosePreviousParents(vgui::TreeNode*)
 T vgui::TreeNode::CountVisibleIndex()
 T vgui::TreeNode::CountVisibleNodes()
 T vgui::TreeNode::FindChild(vgui::TreeNode*)
 T vgui::TreeNode::FindItemUnderMouse(int&, int&, int, int&, int, int)
 T vgui::TreeNode::FindNodesInRange_R(CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >&, bool&, bool&, int, int)
 T vgui::TreeNode::GetAnimMap()
 T vgui::TreeNode::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetKBMap()
 T vgui::TreeNode::GetMessageMap()
 T vgui::TreeNode::GetPanelClassName()
 T vgui::TreeNode::HasParent(vgui::TreeNode*)
 T vgui::TreeNode::IsDragEnabled() const
 T vgui::TreeNode::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnCreateDragData(KeyValues*)
 T vgui::TreeNode::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::TreeNode::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNode::OnLabelChanged(KeyValues*)
 T vgui::TreeNode::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNode::OnMousePressed(ButtonCode_t)
 T vgui::TreeNode::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNode::OnMouseWheeled(int)
 T vgui::TreeNode::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnSetFocus()
 T vgui::TreeNode::Paint(IVGuiPaintSurface*)
 T vgui::TreeNode::PaintBackground(IVGuiPaintSurface*)
 T vgui::TreeNode::PerformLayout()
 T vgui::TreeNode::PositionAndSetVisibleNodes(int&, int&, int, int&)
 T vgui::TreeNode::RequestFocus(int)
 T vgui::TreeNode::SelectNextChild(vgui::TreeNode*)
 T vgui::TreeNode::SelectPrevChild(vgui::TreeNode*)
 T vgui::TreeNode::SetBgColor(Color)
 T vgui::TreeNode::SetFgColor(Color)
 T vgui::TreeNode::SetFont(unsigned long)
 T vgui::TreeNode::SetKeyValues(KeyValues*)
 T vgui::TreeNode::SetNodeExpanded(bool)
 T vgui::TreeNode::SetVisible(bool)
 T vgui::TreeNode::StepInto(bool)
 T vgui::TreeNode::StepOut(bool)
 T vgui::TreeNode::StepOver(bool)
 T vgui::TreeNode::TreeNode(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNode::~TreeNode()
 T vgui::TreeNodeDropPanel::GetAnimMap()
 T vgui::TreeNodeDropPanel::GetKBMap()
 T vgui::TreeNodeDropPanel::GetMessageMap()
 T vgui::TreeNodeDropPanel::GetPanelClassName()
 T vgui::TreeNodeDropPanel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::TreeNodeDropPanel(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNodeDropPanel::~TreeNodeDropPanel()
 T vgui::TreeNodeImage::OnCursorMoved(int, int)
 T vgui::TreeNodeImage::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMouseWheeled(int)
 T vgui::TreeNodeImage::~TreeNodeImage()
 T vgui::TreeNodeText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNodeText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNodeText::EnterEditingInPlace()
 T vgui::TreeNodeText::FinishEditingInPlace(bool)
 T vgui::TreeNodeText::GetAnimMap()
 T vgui::TreeNodeText::GetKBMap()
 T vgui::TreeNodeText::GetMessageMap()
 T vgui::TreeNodeText::GetPanelClassName()
 T vgui::TreeNodeText::IsKeyRebound(ButtonCode_t, int)
 T vgui::TreeNodeText::OnCursorMoved(int, int)
 T vgui::TreeNodeText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNodeText::OnKillFocus()
 T vgui::TreeNodeText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseWheeled(int)
 T vgui::TreeNodeText::OnTextChanged()
 T vgui::TreeNodeText::OnTick()
 T vgui::TreeNodeText::PaintBackground(IVGuiPaintSurface*)
 T vgui::TreeNodeText::TreeNodeText(vgui::Panel*, char const*, int, vgui::TreeView*)
 T vgui::TreeNodeText::~TreeNodeText()
 T vgui::TreeView::AddItem(KeyValues*, int)
 T vgui::TreeView::AddSelectedItem(int, bool, bool, bool)
 T vgui::TreeView::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeView::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeView::CanCurrentlyEditLabel(int) const
 T vgui::TreeView::ClearSelection()
 T vgui::TreeView::ExpandItem(int, bool)
 T vgui::TreeView::FindNodesInRange(int, int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::FirstItem() const
 T vgui::TreeView::GenerateChildrenOfNode(int)
 T vgui::TreeView::GenerateContextMenu(int, int, int)
 T vgui::TreeView::GenerateDragDataForItem(int, KeyValues*)
 T vgui::TreeView::GetAnimMap()
 T vgui::TreeView::GetChild(int, int)
 T vgui::TreeView::GetFirstSelectedItem() const
 T vgui::TreeView::GetFont()
 T vgui::TreeView::GetHighestItemID()
 T vgui::TreeView::GetItemCount()
 T vgui::TreeView::GetItemData(int) const
 T vgui::TreeView::GetItemDropContextMenu(int, vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemDropCursor(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemParent(int) const
 T vgui::TreeView::GetKBMap()
 T vgui::TreeView::GetMessageMap()
 T vgui::TreeView::GetNextChildItemIndex(int)
 T vgui::TreeView::GetNumChildren(int)
 T vgui::TreeView::GetPanelClassName()
 T vgui::TreeView::GetPrevChildItemIndex(int)
 T vgui::TreeView::GetRootItemIndex()
 T vgui::TreeView::GetRowHeight()
 T vgui::TreeView::GetSelectedItem(int) const
 T vgui::TreeView::GetSelectedItemCount() const
 T vgui::TreeView::GetSelectedItemData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetSelectedItems(CUtlVector<int, CUtlMemory<int, int> >&) const
 T vgui::TreeView::GetSelectedItemsForDrag(int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::GetVBarInfo(int&, int&, bool&)
 T vgui::TreeView::InvalidItemID() const
 T vgui::TreeView::IsItemDroppable(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::IsItemExpanded(int)
 T vgui::TreeView::IsItemIDValid(int)
 T vgui::TreeView::IsItemSelected(int) const
 T vgui::TreeView::IsLabelBeingEdited() const
 T vgui::TreeView::IsLabelEditingAllowed() const
 T vgui::TreeView::MakeItemVisible(int)
 T vgui::TreeView::ModifyItem(int, KeyValues*)
 T vgui::TreeView::NextItem(int) const
 T vgui::TreeView::OnContextMenuSelection(int)
 T vgui::TreeView::OnItemDropped(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::OnLabelChanged(int, char const*, char const*)
 T vgui::TreeView::OnMousePressed(ButtonCode_t)
 T vgui::TreeView::OnMouseWheeled(int)
 T vgui::TreeView::OnSizeChanged(int, int)
 T vgui::TreeView::OnSliderMoved(int)
 T vgui::TreeView::PerformLayout()
 T vgui::TreeView::RangeSelectItems(int)
 T vgui::TreeView::RemoveAll()
 T vgui::TreeView::RemoveChildrenOfNode(int)
 T vgui::TreeView::RemoveItem(int, bool, bool)
 T vgui::TreeView::RemoveSelectedItem(int)
 T vgui::TreeView::SelectAll()
 T vgui::TreeView::SetAllowLabelEditing(bool)
 T vgui::TreeView::SetBgColor(Color)
 T vgui::TreeView::SetDragEnabledItems(bool)
 T vgui::TreeView::SetFont(unsigned long)
 T vgui::TreeView::SetImageList(vgui::ImageList*, bool)
 T vgui::TreeView::SetItemBgColor(int, Color const&)
 T vgui::TreeView::SetItemFgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionBgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionTextColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionUnfocusedBgColor(int, Color const&)
 T vgui::TreeView::SetLabelEditingAllowed(int, bool)
 T vgui::TreeView::SetSortFunc(bool (*)(KeyValues*, KeyValues*))
 T vgui::TreeView::StartEditingLabel(int)
 T vgui::TreeView::TreeView(vgui::Panel*, char const*)
 T vgui::TreeView::~TreeView()
 T vgui::TreeViewSubPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeViewSubPanel::OnCursorMoved(int, int)
 T vgui::TreeViewSubPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMousePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMouseWheeled(int)
 T vgui::TreeViewSubPanel::~TreeViewSubPanel()
 T vgui::URLLabel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::URLLabel::ApplySettings(KeyValues*)
 T vgui::URLLabel::GetAnimMap()
 T vgui::URLLabel::GetDescription()
 T vgui::URLLabel::GetKBMap()
 T vgui::URLLabel::GetMessageMap()
 T vgui::URLLabel::GetPanelClassName()
 T vgui::URLLabel::GetSettings(KeyValues*)
 T vgui::URLLabel::OnMousePressed(ButtonCode_t)
 T vgui::URLLabel::URLLabel(vgui::Panel*, char const*, char const*, char const*)
 T vgui::URLLabel::~URLLabel()
 T vgui::VGui_InitInterfacesList(char const*, void* (**)(char const*, int*), int)
 T vgui::VGui_InitMatSysInterfacesList(char const*, void* (**)(char const*, int*), int)
 T vgui::VPanelHandle::Get()
 T vgui::VPanelHandle::Set(unsigned int)
 T vgui_drawtree_clear_f()
 T vgui_drawtree_off_f()
 T vgui_drawtree_on_f()
 T void CCallQueueT<CTSQueue<CFunctor*, false> >::QueueCall<CBugUIPanel*, CBugUIPanel, bool, char const*, char const*, bool, CUtlEnvelope<char const*>, CUtlEnvelope<char const*>, bool>(CBugUIPanel*, bool (CBugUIPanel::*)(char const*, char const*, bool), CUtlEnvelope<char const*> const&, CUtlEnvelope<char const*> const&, bool const&)
 T void CCallQueueT<CTSQueue<CFunctor*, false> >::QueueCall<CSaveRestore*, CSaveRestore, void, char const*, int, bool, CUtlEnvelope<char const*>, int, bool>(CSaveRestore*, void (CSaveRestore::*)(char const*, int, bool), CUtlEnvelope<char const*> const&, int const&, bool const&)
 T void CCallQueueT<CTSQueue<CFunctor*, false> >::QueueCall<ISaveRestoreFileSystem*, ISaveRestoreFileSystem, FSAsyncStatus_t, char const*, void const*, int, bool, bool, FSAsyncControl_t__**, CUtlEnvelope<char const*>, void*, int, bool, bool, FSAsyncControl_t__**>(ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*> const&, void* const&, int const&, bool const&, bool const&, FSAsyncControl_t__** const&)
 T void CCallQueueT<CTSQueue<CFunctor*, false> >::QueueCall<ISaveRestoreFileSystem*, ISaveRestoreFileSystem, FSAsyncStatus_t, char const*, void const*, int, bool, bool, FSAsyncControl_t__**, CUtlEnvelope<char const*>, void*, unsigned int, bool, bool, FSAsyncControl_t__**>(ISaveRestoreFileSystem*, FSAsyncStatus_t (ISaveRestoreFileSystem::*)(char const*, void const*, int, bool, bool, FSAsyncControl_t__**), CUtlEnvelope<char const*> const&, void* const&, unsigned int const&, bool const&, bool const&, FSAsyncControl_t__** const&)
 T void CCallQueueT<CTSQueue<CFunctor*, false> >::QueueCall<void, char const*, CUtlEnvelope<char const*> >(void (*)(char const*), CUtlEnvelope<char const*> const&)
 T void CDmxAttribute::SerializeType<CUtlBinaryBlock, CUtlBinaryBlock>(bool&, CUtlBuffer&) const
 T void CDmxAttribute::SerializeType<CUtlString, CUtlString>(bool&, CUtlBuffer&) const
 T void CDmxAttribute::SerializeTypedElement<CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >, CUtlBinaryBlock>(bool&, int, CUtlBuffer&) const
 T void CDmxAttribute::SerializeTypedElement<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlString>(bool&, int, CUtlBuffer&) const
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >, CUtlBinaryBlock>(bool&, CUtlBuffer&)
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlString>(bool&, CUtlBuffer&)
 T void CM_ClipBoxToBrush<false>(TraceInfo_t*, cbrush_t const*)
 T void CM_ClipBoxToBrush<true>(TraceInfo_t*, cbrush_t const*)
 T void CM_TraceToDispList<false, false>(TraceInfo_t*, unsigned short const*, int, float, float)
 T void CM_TraceToDispList<false, true>(TraceInfo_t*, unsigned short const*, int, float, float)
 T void CM_TraceToDispList<true, false>(TraceInfo_t*, unsigned short const*, int, float, float)
 T void CM_TraceToDispList<true, true>(TraceInfo_t*, unsigned short const*, int, float, float)
 T void CM_TraceToDispTree<false>(TraceInfo_t*, CDispCollTree*, float, float)
 T void CM_TraceToDispTree<true>(TraceInfo_t*, CDispCollTree*, float, float)
 T void CM_TraceToLeaf<false>(TraceInfo_t*, int, float, float)
 T void CM_TraceToLeaf<true>(TraceInfo_t*, int, float, float)
 T void SendTable_WritePropList_Guts<false>(SendTable const*, int, bf_write*, int, CUtlVectorFixedGrowable<int, 128ul>*)
 T void SendTable_WritePropList_Guts<true>(SendTable const*, int, bf_write*, int, CUtlVectorFixedGrowable<int, 128ul>*)
 T void SetupArrayProps_R<RecvTable, RecvProp>(RecvTable*)
 T void SetupArrayProps_R<SendTable, SendProp>(SendTable*)
 T void TesselateDisplacement_R<CEngineTesselateHelper>(CEngineTesselateHelper*, CVertIndex const&, int, int)
 T void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*)
 T void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyDecompressionValidator>(snappy::SnappyDecompressionValidator*)
 T void std::__chunk_insertion_sort<unsigned char*, int>(unsigned char*, unsigned char*, int)
 T void std::__final_insertion_sort<CSendTablePrecalc::PropOffset_t*>(CSendTablePrecalc::PropOffset_t*, CSendTablePrecalc::PropOffset_t*)
 T void std::__heap_select<CSendTablePrecalc::PropOffset_t*>(CSendTablePrecalc::PropOffset_t*, CSendTablePrecalc::PropOffset_t*, CSendTablePrecalc::PropOffset_t*)
 T void std::__inplace_stable_sort<unsigned char*>(unsigned char*, unsigned char*)
 T void std::__introsort_loop<CSendTablePrecalc::PropOffset_t*, int>(CSendTablePrecalc::PropOffset_t*, CSendTablePrecalc::PropOffset_t*, int)
 T void std::__merge_adaptive<unsigned char*, int, unsigned char*>(unsigned char*, unsigned char*, unsigned char*, int, int, unsigned char*, int)
 T void std::__merge_sort_loop<unsigned char*, unsigned char*, int>(unsigned char*, unsigned char*, unsigned char*, int)
 T void std::__merge_without_buffer<unsigned char*, int>(unsigned char*, unsigned char*, unsigned char*, int, int)
 T void std::__rotate<unsigned char*>(unsigned char*, unsigned char*, unsigned char*, std::random_access_iterator_tag)
 T void std::__stable_sort_adaptive<unsigned char*, unsigned char*, int>(unsigned char*, unsigned char*, unsigned char*, int)
 T zcalloc(void*, unsigned int, unsigned int)
 T zcfree(void*, void*)
 TelemetrySetLevel
 TelemetryTick
 ThreadGetCurrentId
 ThreadInMainThread
 ThreadInterlockedAssignIf64
 ThreadJoin
 ThreadNanoSleep
 ThreadSetDebugName
 ThreadSleep
 Tier0GenericMiniDumpHandler_SetPreHandlerCallback
 UnregisterAssertionFailureListener
 UtlStringTokenSystem
 V_tier0_stricmp
 Warning
 ZeroMemory
 _DefaultRuneLocale
 _Unwind_Resume
 __CFConstantStringClassReference
 __assert_rtn
 __bzero
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_begin_catch
 __cxa_call_unexpected
 __cxa_end_catch
 __cxa_free_exception
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_throw
 __divdi3
 __dynamic_cast
 __error
 __gxx_personality_v0
 __maskrune
 __moddi3
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __stdinp
 __stdoutp
 __tolower
 __toupper
 __udivdi3
 abort
 accept$UNIX2003
 acos
 alBufferData
 alDeleteBuffers
 alDeleteSources
 alGenBuffers
 alGenSources
 alGetError
 alGetSourcei
 alListener3f
 alSource3f
 alSourcePlay
 alSourceQueueBuffers
 alSourceStop
 alSourceUnqueueBuffers
 alSourcef
 alcCaptureCloseDevice
 alcCaptureOpenDevice
 alcCaptureSamples
 alcCaptureStart
 alcCaptureStop
 alcCloseDevice
 alcCreateContext
 alcDestroyContext
 alcGetContextsDevice
 alcGetCurrentContext
 alcGetError
 alcGetIntegerv
 alcMakeContextCurrent
 alcOpenDevice
 alcSuspendContext
 asin
 atan
 atan2
 atof
 atoi
 atol
 b (anonymous namespace)::CCLCMsg_BaselineAck_descriptor_
 b (anonymous namespace)::CCLCMsg_BaselineAck_reflection_
 b (anonymous namespace)::CCLCMsg_ClientInfo_descriptor_
 b (anonymous namespace)::CCLCMsg_ClientInfo_reflection_
 b (anonymous namespace)::CCLCMsg_ClientMessage_descriptor_
 b (anonymous namespace)::CCLCMsg_ClientMessage_reflection_
 b (anonymous namespace)::CCLCMsg_FileCRCCheck_descriptor_
 b (anonymous namespace)::CCLCMsg_FileCRCCheck_reflection_
 b (anonymous namespace)::CCLCMsg_ListenEvents_descriptor_
 b (anonymous namespace)::CCLCMsg_ListenEvents_reflection_
 b (anonymous namespace)::CCLCMsg_LoadingProgress_descriptor_
 b (anonymous namespace)::CCLCMsg_LoadingProgress_reflection_
 b (anonymous namespace)::CCLCMsg_Move_descriptor_
 b (anonymous namespace)::CCLCMsg_Move_reflection_
 b (anonymous namespace)::CCLCMsg_RespondCvarValue_descriptor_
 b (anonymous namespace)::CCLCMsg_RespondCvarValue_reflection_
 b (anonymous namespace)::CCLCMsg_SplitPlayerConnect_descriptor_
 b (anonymous namespace)::CCLCMsg_SplitPlayerConnect_reflection_
 b (anonymous namespace)::CCLCMsg_VoiceData_descriptor_
 b (anonymous namespace)::CCLCMsg_VoiceData_reflection_
 b (anonymous namespace)::CDemoClassInfo_class_t_descriptor_
 b (anonymous namespace)::CDemoClassInfo_class_t_reflection_
 b (anonymous namespace)::CDemoClassInfo_descriptor_
 b (anonymous namespace)::CDemoClassInfo_reflection_
 b (anonymous namespace)::CDemoConsoleCmd_descriptor_
 b (anonymous namespace)::CDemoConsoleCmd_reflection_
 b (anonymous namespace)::CDemoCustomDataCallbacks_descriptor_
 b (anonymous namespace)::CDemoCustomDataCallbacks_reflection_
 b (anonymous namespace)::CDemoCustomData_descriptor_
 b (anonymous namespace)::CDemoCustomData_reflection_
 b (anonymous namespace)::CDemoFileHeader_descriptor_
 b (anonymous namespace)::CDemoFileHeader_reflection_
 b (anonymous namespace)::CDemoFileInfo_descriptor_
 b (anonymous namespace)::CDemoFileInfo_reflection_
 b (anonymous namespace)::CDemoFullPacket_descriptor_
 b (anonymous namespace)::CDemoFullPacket_reflection_
 b (anonymous namespace)::CDemoPacket_descriptor_
 b (anonymous namespace)::CDemoPacket_reflection_
 b (anonymous namespace)::CDemoSaveGame_descriptor_
 b (anonymous namespace)::CDemoSaveGame_reflection_
 b (anonymous namespace)::CDemoSendTables_descriptor_
 b (anonymous namespace)::CDemoSendTables_reflection_
 b (anonymous namespace)::CDemoStop_descriptor_
 b (anonymous namespace)::CDemoStop_reflection_
 b (anonymous namespace)::CDemoStringTables_descriptor_
 b (anonymous namespace)::CDemoStringTables_items_t_descriptor_
 b (anonymous namespace)::CDemoStringTables_items_t_reflection_
 b (anonymous namespace)::CDemoStringTables_reflection_
 b (anonymous namespace)::CDemoStringTables_table_t_descriptor_
 b (anonymous namespace)::CDemoStringTables_table_t_reflection_
 b (anonymous namespace)::CDemoSyncTick_descriptor_
 b (anonymous namespace)::CDemoSyncTick_reflection_
 b (anonymous namespace)::CDemoUserCmd_descriptor_
 b (anonymous namespace)::CDemoUserCmd_reflection_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_CHeroSelectEvent_descriptor_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_CHeroSelectEvent_reflection_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_CPlayerInfo_descriptor_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_CPlayerInfo_reflection_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_descriptor_
 b (anonymous namespace)::CGameInfo_CDotaGameInfo_reflection_
 b (anonymous namespace)::CGameInfo_descriptor_
 b (anonymous namespace)::CGameInfo_reflection_
 b (anonymous namespace)::CLC_Messages_descriptor_
 b (anonymous namespace)::CMsgQAngle_descriptor_
 b (anonymous namespace)::CMsgQAngle_reflection_
 b (anonymous namespace)::CMsgVector2D_descriptor_
 b (anonymous namespace)::CMsgVector2D_reflection_
 b (anonymous namespace)::CMsgVector_descriptor_
 b (anonymous namespace)::CMsgVector_reflection_
 b (anonymous namespace)::CMsg_CVars_CVar_descriptor_
 b (anonymous namespace)::CMsg_CVars_CVar_reflection_
 b (anonymous namespace)::CMsg_CVars_descriptor_
 b (anonymous namespace)::CMsg_CVars_reflection_
 b (anonymous namespace)::CNETMsg_Disconnect_descriptor_
 b (anonymous namespace)::CNETMsg_Disconnect_reflection_
 b (anonymous namespace)::CNETMsg_File_descriptor_
 b (anonymous namespace)::CNETMsg_File_reflection_
 b (anonymous namespace)::CNETMsg_NOP_descriptor_
 b (anonymous namespace)::CNETMsg_NOP_reflection_
 b (anonymous namespace)::CNETMsg_SetConVar_descriptor_
 b (anonymous namespace)::CNETMsg_SetConVar_reflection_
 b (anonymous namespace)::CNETMsg_SignonState_descriptor_
 b (anonymous namespace)::CNETMsg_SignonState_reflection_
 b (anonymous namespace)::CNETMsg_SplitScreenUser_descriptor_
 b (anonymous namespace)::CNETMsg_SplitScreenUser_reflection_
 b (anonymous namespace)::CNETMsg_StringCmd_descriptor_
 b (anonymous namespace)::CNETMsg_StringCmd_reflection_
 b (anonymous namespace)::CNETMsg_Tick_descriptor_
 b (anonymous namespace)::CNETMsg_Tick_reflection_
 b (anonymous namespace)::CSVCMsgList_GameEvents_descriptor_
 b (anonymous namespace)::CSVCMsgList_GameEvents_event_t_descriptor_
 b (anonymous namespace)::CSVCMsgList_GameEvents_event_t_reflection_
 b (anonymous namespace)::CSVCMsgList_GameEvents_reflection_
 b (anonymous namespace)::CSVCMsgList_UserMessages_descriptor_
 b (anonymous namespace)::CSVCMsgList_UserMessages_reflection_
 b (anonymous namespace)::CSVCMsgList_UserMessages_usermsg_t_descriptor_
 b (anonymous namespace)::CSVCMsgList_UserMessages_usermsg_t_reflection_
 b (anonymous namespace)::CSVCMsg_BSPDecal_descriptor_
 b (anonymous namespace)::CSVCMsg_BSPDecal_reflection_
 b (anonymous namespace)::CSVCMsg_ClassInfo_class_t_descriptor_
 b (anonymous namespace)::CSVCMsg_ClassInfo_class_t_reflection_
 b (anonymous namespace)::CSVCMsg_ClassInfo_descriptor_
 b (anonymous namespace)::CSVCMsg_ClassInfo_reflection_
 b (anonymous namespace)::CSVCMsg_CreateStringTable_descriptor_
 b (anonymous namespace)::CSVCMsg_CreateStringTable_reflection_
 b (anonymous namespace)::CSVCMsg_CrosshairAngle_descriptor_
 b (anonymous namespace)::CSVCMsg_CrosshairAngle_reflection_
 b (anonymous namespace)::CSVCMsg_FixAngle_descriptor_
 b (anonymous namespace)::CSVCMsg_FixAngle_reflection_
 b (anonymous namespace)::CSVCMsg_FullFrameSplit_descriptor_
 b (anonymous namespace)::CSVCMsg_FullFrameSplit_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_descriptor_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_key_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEventList_key_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEventList_reflection_
 b (anonymous namespace)::CSVCMsg_GameEvent_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEvent_key_t_descriptor_
 b (anonymous namespace)::CSVCMsg_GameEvent_key_t_reflection_
 b (anonymous namespace)::CSVCMsg_GameEvent_reflection_
 b (anonymous namespace)::CSVCMsg_GetCvarValue_descriptor_
 b (anonymous namespace)::CSVCMsg_GetCvarValue_reflection_
 b (anonymous namespace)::CSVCMsg_Menu_descriptor_
 b (anonymous namespace)::CSVCMsg_Menu_reflection_
 b (anonymous namespace)::CSVCMsg_PacketEntities_descriptor_
 b (anonymous namespace)::CSVCMsg_PacketEntities_reflection_
 b (anonymous namespace)::CSVCMsg_PacketReliable_descriptor_
 b (anonymous namespace)::CSVCMsg_PacketReliable_reflection_
 b (anonymous namespace)::CSVCMsg_Prefetch_descriptor_
 b (anonymous namespace)::CSVCMsg_Prefetch_reflection_
 b (anonymous namespace)::CSVCMsg_Print_descriptor_
 b (anonymous namespace)::CSVCMsg_Print_reflection_
 b (anonymous namespace)::CSVCMsg_SendTable_descriptor_
 b (anonymous namespace)::CSVCMsg_SendTable_reflection_
 b (anonymous namespace)::CSVCMsg_SendTable_sendprop_t_descriptor_
 b (anonymous namespace)::CSVCMsg_SendTable_sendprop_t_reflection_
 b (anonymous namespace)::CSVCMsg_ServerInfo_descriptor_
 b (anonymous namespace)::CSVCMsg_ServerInfo_reflection_
 b (anonymous namespace)::CSVCMsg_SetPause_descriptor_
 b (anonymous namespace)::CSVCMsg_SetPause_reflection_
 b (anonymous namespace)::CSVCMsg_SetView_descriptor_
 b (anonymous namespace)::CSVCMsg_SetView_reflection_
 b (anonymous namespace)::CSVCMsg_Sounds_descriptor_
 b (anonymous namespace)::CSVCMsg_Sounds_reflection_
 b (anonymous namespace)::CSVCMsg_Sounds_sounddata_t_descriptor_
 b (anonymous namespace)::CSVCMsg_Sounds_sounddata_t_reflection_
 b (anonymous namespace)::CSVCMsg_SplitScreen_descriptor_
 b (anonymous namespace)::CSVCMsg_SplitScreen_reflection_
 b (anonymous namespace)::CSVCMsg_TempEntities_descriptor_
 b (anonymous namespace)::CSVCMsg_TempEntities_reflection_
 b (anonymous namespace)::CSVCMsg_UpdateStringTable_descriptor_
 b (anonymous namespace)::CSVCMsg_UpdateStringTable_reflection_
 b (anonymous namespace)::CSVCMsg_UserMessage_descriptor_
 b (anonymous namespace)::CSVCMsg_UserMessage_reflection_
 b (anonymous namespace)::CSVCMsg_VoiceData_descriptor_
 b (anonymous namespace)::CSVCMsg_VoiceData_reflection_
 b (anonymous namespace)::CSVCMsg_VoiceInit_descriptor_
 b (anonymous namespace)::CSVCMsg_VoiceInit_reflection_
 b (anonymous namespace)::EDemoCommands_descriptor_
 b (anonymous namespace)::ENetworkDisconnectionReason_descriptor_
 b (anonymous namespace)::ESplitScreenMessageType_descriptor_
 b (anonymous namespace)::NET_Messages_descriptor_
 b (anonymous namespace)::SIGNONSTATE_descriptor_
 b (anonymous namespace)::SVC_Messages_descriptor_
 b (anonymous namespace)::VoiceDataFormat_t_descriptor_
 b (anonymous namespace)::protobuf_AssignDescriptors_once_
 b (anonymous namespace)::s_chLastViewedTextureBuffer
 b AddStaticLighting(CBaseLightCache*, Vector const&, unsigned char const*, bool, bool)::tm_fmt
 b Audio_CreateOpenALDevice()::wave
 b Audio_GetEngineVoiceSteam()::s_EngineVoiceSteam
 b Bias(float, float)::lastExponent
 b BindToggle_command
 b CAsyncWavDataCache::AsyncLoadCache(char const*, int, int, bool)::tm_fmt
 b CAsyncWavDataCache::CloseStreamedLoad(int)::tm_fmt
 b CAsyncWavDataCache::CopyDataIntoMemory(char const*, int, int, void*, int, int, int, bool*)::tm_fmt
 b CAsyncWavDataCache::CopyDataIntoMemory(memhandle_t__*&, char const*, int, int, void*, int, int, int, bool*)::tm_fmt
 b CAsyncWavDataCache::CopyStreamedDataIntoMemory(int, void*, int, int, int)::tm_fmt
 b CAsyncWavDataCache::GetDataPointer(memhandle_t__*&, char const*, int, int, void**, int, bool*)::tm_fmt
 b CAsyncWavDataCache::IsDataLoadCompleted(memhandle_t__*, bool*, bool*)::tm_fmt
 b CAsyncWavDataCache::IsStreamedDataReady(int)::tm_fmt
 b CAsyncWavDataCache::OpenStreamedLoad(char const*, int, int, int, int, int, int, unsigned int)::tm_fmt
 b CAsyncWaveData::GetFileName()::sz
 b CAudioDeviceAudioQueue::Init()::first
 b CAudioMixerWave::LoadMixBuffer(channel_t*, int, int*, char*)::tm_fmt
 b CAudioMixerWave::MixDataToDevice_(channel_t*, int, int, int, bool)::tm_fmt
 b CAudioSourceCache::GetInfo(int, bool, CSfxTable*)::tm_fmt
 b CAudioSourceCache::GetInfoByName(char const*)::tm_fmt
 b CAudioSourceCache::RebuildCacheEntry(int, bool, CSfxTable*)::tm_fmt
 b CAudioSourceMP3::IsAsyncLoad()::tm_fmt
 b CAudioSourceMemWave::GetCacheStatus()::tm_fmt
 b CAudioSourceWave::IsAsyncLoad()::tm_fmt
 b CBaseClient::FireGameEvent(IGameEvent*)::tm_fmt
 b CBaseClient::SendSnapshot(CClientFrame*)::tm_fmt
 b CBaseClientState::NETMsg_SetConVar(CNETMsg_SetConVar const&)::tm_fmt
 b CBaseClientState::NETMsg_SignonState(CNETMsg_SignonState const&)::tm_fmt
 b CBaseClientState::NETMsg_StringCmd(CNETMsg_StringCmd const&)::tm_fmt
 b CBaseClientState::NETMsg_Tick(CNETMsg_Tick const&)::tm_fmt
 b CBaseClientState::ProcessConnectionlessPacket(netpacket_t*)::tm_fmt
 b CBaseClientState::RunFrame()::tm_fmt
 b CBaseClientState::SVCMsg_ClassInfo(CSVCMsg_ClassInfo const&)::tm_fmt
 b CBaseClientState::SVCMsg_CreateStringTable(CSVCMsg_CreateStringTable const&)::tm_fmt
 b CBaseClientState::SVCMsg_GameEventList(CSVCMsg_GameEventList const&)::tm_fmt
 b CBaseClientState::SVCMsg_GetCvarValue(CSVCMsg_GetCvarValue const&)::tm_fmt
 b CBaseClientState::SVCMsg_Menu(CSVCMsg_Menu const&)::tm_fmt
 b CBaseClientState::SVCMsg_PacketEntities(CSVCMsg_PacketEntities const&)::tm_fmt
 b CBaseClientState::SVCMsg_Print(CSVCMsg_Print const&)::tm_fmt
 b CBaseClientState::SVCMsg_SendTable(CSVCMsg_SendTable const&)::tm_fmt
 b CBaseClientState::SVCMsg_ServerInfo(CSVCMsg_ServerInfo const&)::tm_fmt
 b CBaseClientState::SVCMsg_SetPause(CSVCMsg_SetPause const&)::tm_fmt
 b CBaseClientState::SVCMsg_UpdateStringTable(CSVCMsg_UpdateStringTable const&)::tm_fmt
 b CBaseServer::CalculateCPUUsage()::lastAvg
 b CBaseServer::CalculateCPUUsage()::s_lastUsage
 b CBaseServer::CalculateCPUUsage()::tm_fmt
 b CBaseServer::CheckTimeouts()::tm_fmt
 b CBaseServer::ProcessSplitScreenDisconnects()::tm_fmt
 b CBaseServer::RecalculateTags()::bRecalculatingTags
 b CBaseServer::RunFrame()::tm_fmt
 b CBaseServer::SendClientMessages(bool)::tm_fmt
 b CBaseServer::SendPendingServerInfo()::tm_fmt
 b CBaseServer::UpdateGameType()::didWarnLength
 b CBaseServer::UpdateGameType()::var
 b CBaseServer::UpdateMasterServer()::bUpdateMasterServers
 b CBaseServer::UpdateMasterServer()::tm_fmt
 b CBaseServer::UpdateUserSettings()::tm_fmt
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::alphaRefCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::originalAlphaRefCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::originalTextureFrameVarCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::originalTextureVarCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::textureFrameVarCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::textureVarCache
 b CBrushBatchRender::DrawOpaqueBrushModel(IClientEntity*, model_t*, Vector const&, bool)::tm_fmt
 b CBudgetHistoryPanel::Paint(IVGuiPaintSurface*)::s_CurrentHeight
 b CBudgetHistoryPanel::Paint(IVGuiPaintSurface*)::s_Rects
 b CBudgetPanelShared::Paint(IVGuiPaintSurface*)::TimerInitialized
 b CBugUIPanel::GetSubmissionURL(int)::url
 b CBugUIPanel::OnSubmit()::ai_strong_optimizations
 b CBugUIPanel::OnSubmit()::host_thread_mode
 b CBugUIPanel::OnSubmit()::skill
 b CBugUIPanel::OnSubmit()::sv_alternateticks
 b CChannelCullList::Initialize(CChannelList&)::tm_fmt
 b CClientState::CheckFileCRCsWithServer()::tm_fmt
 b CClientState::CheckUpdatingSteamResources()::tm_fmt
 b CClientState::ConsistencyCheck(bool)::s_LastConfig
 b CClientState::ConsistencyCheck(bool)::tm_fmt
 b CClientState::FinishSignonState_New()::tm_fmt
 b CClientState::GetCDKeyHash()::szHashedKeyBuffer
 b CClientState::GetClientInterpAmount()::s_cl_interp
 b CClientState::GetClientInterpAmount()::s_cl_interp_ratio
 b CClientState::ReadDeletions(CEntityReadInfo&)::tm_fmt
 b CClientState::RunFrame()::s_bLowPagedPoolMemoryWarning
 b CClientState::RunFrame()::s_flLastWarningTime
 b CClientState::RunFrame()::tm_fmt
 b CClientState::SVCMsg_GameEvent(CSVCMsg_GameEvent const&)::tm_fmt
 b CConPanel::Paint(IVGuiPaintSurface*)::tm_fmt
 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
 b CDebugOverlay::Draw3DOverlays()::previous_servercount
 b CDemoPlayer::WriteTimeDemoResults()::cpu_level
 b CDemoPlayer::WriteTimeDemoResults()::gpu_level
 b CDemoPlayer::WriteTimeDemoResults()::mat_antialias
 b CDemoPlayer::WriteTimeDemoResults()::mat_forceaniso
 b CDemoPlayer::WriteTimeDemoResults()::mat_picmip
 b CDemoPlayer::WriteTimeDemoResults()::mat_vsync
 b CDispCollTree::AABBTree_BuildTreeTrisInSphere_r(Vector const&, float, int, unsigned short*, unsigned short)::tm_fmt
 b CDispCollTree::AABBTree_IntersectAABB(Vector const&, Vector const&)::tm_fmt
 b CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, CBaseTrace*, bool)::tm_fmt
 b CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, RayDispOutput_t&)::tm_fmt
 b CDispCollTree::AABBTree_SweepAABB(Ray_t const&, Vector const&, CBaseTrace*)::tm_fmt
 b CDispCollTree::Cache()::tm_fmt
 b CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)::cache
 b CEngine::Frame()::pSyncReportConVar
 b CEngine::Frame()::s_lastFrequencyTimestamp
 b CEngine::Frame()::tm_fmt
 b CEngineAPI::RunSingleLoop(bool&)::tm_fmt
 b CEngineClient::ForceOpenServerPort()::tv_enable
 b CEngineClient::IsLowViolence()::s_bCheckedSteam
 b CEngineClient::Sound_ExtraUpdate()::tm_fmt
 b CEngineSoundClient::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
 b CEngineSoundClient::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
 b CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
 b CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, unsigned int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
 b CEngineTrace::GetPointContents(Vector const&, int, IHandleEntity**)::tm_fmt
 b CEngineTrace::SetupLeafAndEntityListBox(Vector const&, Vector const&, ITraceListData*)::tm_fmt
 b CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::_counter
 b CEngineTrace::TraceRayAgainstLeafAndEntityList(Ray_t const&, ITraceListData*, unsigned int, ITraceFilter*, CGameTrace*)::tm_fmt
 b CEngineTraceServer::GenerateDotaMapHeightFieldData()::Grid
 b CEngineVGui::DrawKeyFocus()::tm_fmt
 b CEngineVGui::DrawMouseFocus()::tm_fmt
 b CEngineVGui::Paint(PaintMode_t)::tm_fmt
 b CEngineVGui::Simulate()::tm_fmt
 b CEntityReportPanel::MaybeTruncateName(int, char const*)::truncated
 b CEntityReportPanel::Paint(IVGuiPaintSurface*)::tm_fmt
 b CFrameTimer::ComputeFrameVariability()::tm_fmt
 b CFrameTimer::MarkFrame()::accum
 b CFrameTimer::MarkFrame()::last_host_tickcount
 b CFrameTimer::MarkFrame()::m_pCounterNumberOfEntities
 b CGame::UpdateDesktopInformation(SDL_Window*)::sdl_displayindex
 b CGameClient::SetupPackInfo(CFrameSnapshot*)::tm_fmt
 b CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::tm_fmt
 b CGameServer::SendClientMessages(bool)::tm_fmt
 b CHLTVClient::SendSnapshot(CClientFrame*)::tm_fmt
 b CHLTVServer::AddNewDeltaFrame(CClientFrame*)::tm_fmt
 b CHLTVServer::AddNewFrame(CClientFrame*)::tm_fmt
 b CHLTVServer::ConnectRelay(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&)::rate
 b CHLTVServer::ExpandDeltaFrameToFullFrame(CHLTVServer::SHLTVDeltaFrame_t*)::tm_fmt
 b CHLTVServer::FireGameEvent(IGameEvent*)::tm_fmt
 b CHLTVServer::GetRelayAddress()::adr
 b CHLTVServer::RunFrame()::s_bClientStateConnected
 b CHLTVServer::RunFrame()::tm_fmt
 b CHLTVServer::UpdateHibernationState()::s_bHasHibernated
 b CHLTVServer::UpdateTick()::tm_fmt
 b CHostState::State_Run(float)::s_bFirstRunFrame
 b CInstantReplay::GetDemoFile()::s_dummy
 b CL_ApplyAddAngle()::tm_fmt
 b CL_CheckCRCs(char const*)::tm_fmt
 b CL_ExtraMouseUpdate(float)::tm_fmt
 b CL_FireEvents()::tm_fmt
 b CL_InstallAndInvokeClientStringTableCallbacks()::tm_fmt
 b CL_Move(float, bool)::tm_fmt
 b CL_NameCvarChanged(IConVar*, char const*, float)::bPreventRent
 b CL_ProcessPacketEntities(CSVCMsg_PacketEntities const&)::tm_fmt
 b CL_ProcessVoiceData()::tm_fmt
 b CL_ReadPackets(bool)::tm_fmt
 b CL_RunPrediction(PREDICTION_REASON)::tm_fmt
 b CL_TakeSnapshotAndSwap()::flLastTime
 b CLog::FireGameEvent(IGameEvent*)::tm_fmt
 b CLog::Print(char const*)::string
 b CLog::Printf(char const*, ...)::string
 b CM_BoxTrace(Ray_t const&, int, int, bool, CGameTrace&)::tm_fmt
 b CM_BoxTraceAgainstLeafList(Ray_t const&, CTraceListData const&, int, CGameTrace&)::tm_fmt
 b CModelLoader::Map_IsValid(char const*, bool)::s_szBaseMapName
 b CModelLoader::UpdateDynamicModelLoadQueue()::s_LastDynamicLoadTime
 b CModelRender::DrawModelExStaticProp(ModelRenderInfo_t&)::tm_fmt
 b CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4a_t*)::r_shadowlod
 b CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4a_t*)::r_shadowlodbias
 b CModelRender::DrawStaticPropArrayFast(StaticPropRenderInfo_t*, int, bool)::tm_fmt
 b CModelRender::GetBrightestShadowingLightSource(Vector const&, Vector&, Vector&, bool)::colorToGray
 b CModelRender::RecomputeStaticLighting(unsigned short)::tm_fmt
 b CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)::temp
 b CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)::tm_fmt
 b CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)::white
 b CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)::actualLightingState
 b CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)::s_WorldLights
 b CNetSupportImpl::GetServerInfo(INetSupport::ServerInfo_t*)::s_cachedPublicIP
 b CNetworkStringTableContainer::DirectUpdate(int)::tm_fmt
 b CNetworkStringTableContainer::WriteUpdateMessage(CBaseClient*, int, bf_write&, CVarBitVec*)::tm_fmt
 b COM_FormatSeconds(int)::string
 b COM_GetModDirectory()::modDir
 b COM_SetupLogDir(char const*)::pathsetup
 b COcclusionSystem::IsOccluded(Vector const&, Vector const&)::mutex
 b COcclusionSystem::IsOccluded(Vector const&, Vector const&)::tm_fmt
 b COverlayMgr::RenderOverlays(int)::tm_fmt
 b COverlayMgr::RenderOverlaysCombined(int, Vector&, Vector&, Vector&)::tm_fmt
 b CProceduralTexturePanel::Init(int, int, bool)::textureVarCache
 b CProfileHierarchyPanel::ColumnPanels_t::Refresh(KeyValues*)::tm_fmt
 b CProfileHierarchyPanel::PerformLayout()::tm_fmt
 b CProfileHierarchyPanel::SetItemColors(int, Color const&, Color const&)::tm_fmt
 b CProfileHierarchyPanel::SetItemColumnColors(int, int, Color const&, Color const&)::tm_fmt
 b CRC_MapFile(unsigned int*, char const*)::gamedir
 b CRConServer::RunFrame()::s_bHasUseConParm
 b CRender::EndUpdateLightmaps()::threadDlights
 b CRender::EndUpdateLightmaps()::threadFrameCount
 b CRender::EndUpdateLightmaps()::tm_fmt
 b CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblError
 b CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblNormal
 b CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblWarn
 b CSaveRestore::GetSaveDir()::szDirectory
 b CSaveRestore::GetSaveGameMapName(char const*)::mapname
 b CSaveRestore::LoadGameState(char const*, bool)::tm_fmt
 b CSaveRestore::SaveGameSlot(char const*, char const*, bool, bool, char const*, char const*)::tm_fmt
 b CServerPlugin::GameFrame(bool)::tm_fmt
 b CServerRemoteAccess::LookupStringValue(char const*)::s_ReturnBuf
 b CShadowMgr::AddDecalToShadowList(unsigned short, unsigned short)::__executeCount
 b CShadowMgr::ComputeShadowVertices(CShadowMgr::ShadowDecal_t&, VMatrix const*, VMatrix const*, CShadowMgr::ShadowVertexCache_t*)::tm_fmt
 b CShadowMgr::DrawFlashlightDecals(int, bool, float)::tm_fmt
 b CShadowMgr::DrawFlashlightDecalsOnDisplacements(int, CDispInfo**, int, bool)::tm_fmt
 b CShadowMgr::DrawFlashlightDecalsOnSurfaceList(msurface2_t**, int, bool)::tm_fmt
 b CShadowMgr::DrawFlashlightOverlays(int, bool)::tm_fmt
 b CShadowMgr::DrawVolumetrics()::tm_fmt
 b CShadowMgr::EnumerateLeaf(int, int)::tm_fmt
 b CShadowMgr::FlashlightDrawCallback(void (*)(void*), void*)::tm_fmt
 b CShadowMgr::GenerateShadowRenderInfo(IMatRenderContext*, unsigned short, CShadowMgr::ShadowRenderInfo_t&)::tm_fmt
 b CShadowMgr::ProjectAndClipVertices(CShadowMgr::Shadow_t const&, VMatrix const&, VMatrix const*, int, Vector**, ShadowVertex_t***, ShadowClipState_t&)::tm_fmt
 b CShadowMgr::ProjectAndClipVertices(unsigned short, int, Vector**, ShadowVertex_t***)::clip
 b CShadowMgr::ProjectFlashlight(unsigned short, VMatrix const&, int, int const*)::tm_fmt
 b CShadowMgr::ProjectShadow(unsigned short, Vector const&, Vector const&, VMatrix const&, Vector2D const&, int, int const*, float, float, float, Vector const&)::tm_fmt
 b CShadowMgr::RenderFlashlights(bool, bool, VMatrix const*)::tm_fmt
 b CShadowMgr::RenderProjectedTextures(VMatrix const*)::tm_fmt
 b CShadowMgr::RenderShadows(VMatrix const*)::tm_fmt
 b CShadowMgr::SetFlashlightStencilMasks(bool)::tm_fmt
 b CShadowMgr::SetModelShadowState(unsigned short)::tm_fmt
 b CSosOperatorStack::Execute(channel_t*, CScratchPad*)::tm_fmt
 b CSosOperatorSystem::GetSoundOperatorSystem()::s_SoundOperatorSystem
 b CStaticProp::DrawModel(int, RenderableInstance_t const&)::tm_fmt
 b CStaticProp::DrawModelSlow(int, RenderableInstance_t const&)::debugColor
 b CStaticProp::DrawModelSlow(int, RenderableInstance_t const&)::tm_fmt
 b CStaticProp::Init(int, StaticPropLump_t&, model_t*)::nBitchCount
 b CStaticPropMgr::DrawStaticProps(IClientRenderable**, RenderableInstance_t const*, int, bool, bool)::tm_fmt
 b CStaticPropMgr::DrawStaticProps_Fast(IClientRenderable**, RenderableInstance_t const*, int, bool)::tm_fmt
 b CStaticPropMgr::DrawStaticProps_FastPipeline(IClientRenderable**, RenderableInstance_t const*, int, bool)::tm_fmt
 b CStaticPropMgr::DrawStaticProps_Slow(IClientRenderable**, RenderableInstance_t const*, int, bool, bool)::tm_fmt
 b CSteam3Client::RunFrame()::tm_fmt
 b CSteam3Server::RunFrame()::s_fLastRunCallback
 b CSteamID::Render() const::nBuf
 b CSteamID::Render() const::rgchBuf
 b CTextureListPanel::Paint(IVGuiPaintSurface*)::s_nFramesForAllTextures
 b CTextureListPanel::Paint(IVGuiPaintSurface*)::tm_fmt
 b CToolFrameworkInternal::Think(bool)::tm_fmt
 b CUtlMemory<SpewEdicts()::EdictCount_t*, int>::Grow(int)::tm_fmt
 b CUtlSymbol::Initialize()::symbolsInitialized
 b CUtlSymbolTable::AddString(char const*)::tm_fmt
 b CUtlSymbolTable::Find(char const*) const::tm_fmt
 b CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)::tm_fmt
 b CVProfPanel::UpdateVProfTreeEntry(KeyValues*, CVProfNode*, int)::tm_fmt
 b CVideoMode_Common::CenterEngineWindow(void*, int, int)::sdl_displayindex
 b CVideoMode_Common::DrawStartupGraphic()::bChinaClient
 b CVideoMode_Common::DrawStartupGraphic()::szBackgroundName
 b CVoxelHash::EnumerateElementsInBox(int, Voxel_t, Voxel_t, Vector const&, Vector const&, IPartitionEnumerator*)::tm_fmt
 b CVoxelTree::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)::tm_fmt
 b CVoxelTree::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)::tm_fmt
 b CWaveDataStreamAsync::GetFileName()::fn
 b CXboxSystem::GameHasSavegames()::s_bHasSavegames
 b CXboxSystem::GameHasSavegames()::s_bInitialized
 b Cbuf_Execute()::__executeCount
 b Cbuf_Execute()::tm_fmt
 b Cbuf_ExecuteCommand(ECommandTarget_t, CCommand const&, cmd_source_t)::tm_fmt
 b CheckSpecialCheatVars()::mat_picmip
 b CheckVarRange_Generic(ConVar*, int, int)::bInFunction
 b ClientDLL_FrameStageNotify(ClientFrameStage_t)::tm_fmt
 b ClientDLL_ProcessInput()::tm_fmt
 b Cmd_TranslateFileAssociation(char const*)::sz
 b ComputeAmbientFromSphericalSamples(Vector const&, Vector*)::tm_fmt
 b ComputeDynamicLighting(Vector const&, Vector const*, Vector&)::ambientTerm
 b ComputeDynamicLighting(lightcache_t*, LightingState_t&, Vector const&, int, unsigned char const*)::_counter
 b ComputeFogVolumeInfo(FogVolumeInfo_t*)::bComplained
 b ComputeLightStyles(lightcache_t*, LightingState_t&, Vector const&, int, unsigned char const*)::_counter
 b ComputeLightmapColor(msurface2_t*, int, int, bool, Vector&)::messagecount
 b ComputeLightmapFromLightstyle(msurfacelighting_t*, bool, bool, int, bool)::tm_fmt
 b ComputeStaticLightingForCacheEntry(CBaseLightCache*, Vector const&, int, bool)::_counter
 b ComputeStaticLightingForCacheEntry(CBaseLightCache*, Vector const&, int, bool)::tm_fmt
 b ComputeViewMatrix(VMatrix*, Vector const&, QAngle const&)::bDidInit
 b ComputeViewMatrix(VMatrix*, Vector const&, QAngle const&)::baseRotation
 b ConVarRef::Init(char const*, bool)::bFirst
 b Con_ColorPrintf(Color const&, char const*, ...)::autoMutex__
 b DAS_CheckNewRoomDSP()::tm_fmt
 b DecalSurfaceAdd(msurface2_t*, int)::tm_fmt
 b DecalSurfaceDraw(IMatRenderContext*, int, float)::DrawDecals
 b DecalSurfaceDraw(IMatRenderContext*, int, float)::tm_fmt
 b Device_ApplyDSPEffects(int, portable_samplepair_t*, portable_samplepair_t*, portable_samplepair_t*, int)::tm_fmt
 b Device_Mix16Mono(channel_t*, short*, int, int, unsigned int, int, int)::tm_fmt
 b Device_Mix16Stereo(channel_t*, short*, int, int, unsigned int, int, int)::tm_fmt
 b Device_Mix8Mono(channel_t*, char*, int, int, unsigned int, int, int)::tm_fmt
 b Device_Mix8Stereo(channel_t*, char*, int, int, unsigned int, int, int)::tm_fmt
 b Device_MixUpsample(int, int)::tm_fmt
 b Device_SpatializeChannel(int, float*, Vector const&, float, float)::tm_fmt
 b Device_SpatializeChannel(int, int*, int, Vector const&, float, float, int)::tm_fmt
 b DispInfo_BatchDecals(CDispInfo**, int)::tm_fmt
 b DispInfo_BuildPrimLists(int, msurface2_t**, int, bool, CDispInfo**, int&)::tm_fmt
 b DispInfo_DrawDecals(CDispInfo**, int)::tm_fmt
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::alphaRefCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::originalAlphaRefCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::originalTextureFrameVarCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::originalTextureVarCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::textureFrameVarCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::textureVarCache
 b DispInfo_DrawPrimLists(int, ERenderDepthMode)::tm_fmt
 b DispInfo_GetVisibleDispsAndAddOverlayFragmentsToRenderList(int, msurface2_t**, int, CDispInfo**, int&)::tm_fmt
 b DispInfo_RenderListDebug(msurface2_t**, int)::tm_fmt
 b DownloadManager::Queue(char const*, char const*)::tm_fmt
 b DownloadManager::QueueHTTPDownload(char const*, char const*)::tm_fmt
 b DownloadThread(void*)::bDoneInit
 b DrawScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, void*, int, int, float)::tm_fmt
 b EatTextModeKeyPresses()::bFirstRun
 b EngineBitBufErrorHandler(BitBufErrorType, char const*)::errorNames
 b Filter_StringToUserID(char const*)::id
 b FinishAsyncSave()::autoMutex__
 b FullViewColorAdjustment()::tm_fmt
 b GetConsoleLogManager()::object
 b GetFlagString(int)::ret
 b GetPanelAnimationDictionary()::dictionary
 b GetPanelMessageMapDictionary()::dictionary
 b GetPropertyConverters()::g_AnimationPropertyConverters
 b GetSaveMemory()::g_SaveMemory
 b GetSteamUniverse()::s_cachedUniverse
 b GetTimestampString()::string
 b GetUserIDString(USERID_s const&)::idstr
 b HandleExecutionMarker(char const*, char const*)::cnt
 b Host_BeginThreadedSound()::tm_fmt
 b Host_CleanupConVarStringValue(char const*)::clean
 b Host_EndThreadedSound()::tm_fmt
 b Host_Error(char const*, ...)::inerror
 b Host_NewGame(char*, bool, bool, bool, bool, char const*, char const*)::tm_fmt
 b Host_RunFrame(float)::timecount
 b Host_RunFrame(float)::timestart
 b Host_RunFrame(float)::timetotal
 b Host_RunFrame(float)::tm_fmt
 b Host_RunNetworkFrame()::tm_fmt
 b Host_RunNetworkSendQueuedPackets()::tm_fmt
 b Host_ShowIPCCallCount()::s_flLastTime
 b Host_ShowIPCCallCount()::s_nLastFrame
 b Host_ShowIPCCallCount()::s_nLastTick
 b Host_Shutdown()::shutting_down
 b Host_UpdateMapList()::tm_fmt
 b ImageLoader::ComputeBicubicFilterKernel(float, float, float, KernelInfo_t*)::s_pInvKernelCache
 b ImageLoader::ComputeBicubicFilterKernel(float, float, float, KernelInfo_t*)::s_pKernelCache
 b ImageLoader::ComputeNiceFilterKernel(float, float, float, KernelInfo_t*)::s_pInvKernelCache
 b ImageLoader::ComputeNiceFilterKernel(float, float, float, KernelInfo_t*)::s_pKernelCache
 b ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::gamma
 b ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::gammaToLinear
 b InitializeCharacterSets()::s_CharacterSetInitialized
 b InitializeStandardMaterials()::autoMutex__
 b InternalWriteDeltaEntities(CBaseServer*, CBaseClient*, CClientFrame*, CClientFrame*, CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>&, unsigned char*, unsigned int)::tm_fmt
 b KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool (*)(char const*))::tm_fmt
 b KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool)::buf
 b Key_Event(InputEvent_t const&)::dota_dashboard
 b LastSpikeFrame
 b LastSpikeTime
 b LightcacheGetDynamic(Vector const&, LightingState_t&, LightcacheGetDynamic_Stats&, IClientRenderable const*, unsigned int, bool)::_counter
 b LightcacheGetDynamic(Vector const&, LightingState_t&, LightcacheGetDynamic_Stats&, IClientRenderable const*, unsigned int, bool)::tm_fmt
 b MD5_Print(unsigned char*, int)::szReturn
 b MIX_BuildChannelList(CChannelList&)::tm_fmt
 b MIX_MixChannelsToPaintbuffer(CChannelList&, int, int, int, int)::tm_fmt
 b MIX_MixPaintbuffers(int, int, int, int, float)::tm_fmt
 b MIX_MixUpsampleBuffer(CChannelList&, int, int, int, int)::tm_fmt
 b MIX_PaintChannels::tm_fmt
 b MIX_UpsampleAllPaintbuffers(CChannelList&, int, int)::tm_fmt
 b Map_VisCurrentCluster()::visclusterwarningcount
 b Map_VisMark(bool, model_t*)::tm_fmt
 b MaybeReportMissingWav(char const*)::wavErrors
 b Networking_Init(bool)::sbNetworkingIntialized
 b PackEntities_NetworkBackDoor(int, CGameClient**, CFrameSnapshot*)::tm_fmt
 b PackEntities_Normal(CBitVec<2048> const&, CFrameSnapshot*)::tm_fmt
 b ParseTokenFromString(char const**)::buf
 b PreUpdateProfile(float)::history
 b PreUpdateProfile(float)::nCycle
 b R_AddDynamicLights(dlight_t*, msurface2_t*, matrix3x4_t const&, bool, unsigned int)::tm_fmt
 b R_BuildLightMapGuts(dlight_t*, msurface2_t*, matrix3x4_t const&, unsigned int, bool, bool)::tm_fmt
 b R_BuildWorldLists(IWorldRenderList*, WorldListInfo_t*, int, VisOverrideData_t const*, bool, float*)::tm_fmt
 b R_DecalAlloc(int)::bWarningOnce
 b R_DrawBrushModel(IClientEntity*, model_t*, Vector const&, QAngle const&, bool, bool)::tm_fmt
 b R_DrawBrushModel_Override(IClientEntity*, model_t*, Vector const&)::tm_fmt
 b R_DrawSkyBox(float, int)::tm_fmt
 b R_DrawWorldLists(IWorldRenderList*, unsigned long, float)::tm_fmt
 b R_GetVisibleFogVolume(Vector const&, VisibleFogVolumeInfo_t*)::tm_fmt
 b R_LevelInit()::gamedir
 b R_LevelInit()::tm_fmt
 b R_LightVec(Vector const&, Vector const&, bool, Vector&, float*, float*, float*, float*)::_counter
 b R_LoadSkys()::skyname
 b R_RenderDynamicLightmaps(dlight_t*, ICallQueue*, msurface2_t*, matrix3x4_t const&)::tm_fmt
 b R_SetNonAmbientLightingState(int, dworldlight_t**, int*, LightDesc_t*, bool)::tm_fmt
 b R_StudioCheckReinitLightingCache()::tm_fmt
 b R_StudioGetAmbientLightForPoint(int, Vector const&, Vector*, bool, bool*)::tm_fmt
 b RemapPlayerOrMusicVols(channel_t*, int*, bool, bool, float)::tm_fmt
 b SCR_UpdateScreen(bool)::s_bTestedBuildCubemaps
 b SCR_UpdateScreen(bool)::tm_fmt
 b SND_ExecuteUpdateOperators(channel_t*)::tm_fmt
 b SND_GetGain(int, gain_t*, channel_t const*, Vector const&, bool, bool, bool, bool, float, bool, bool)::tm_fmt
 b SND_GetGainObscured(int, gain_t*, channel_t const*, Vector const&, bool, bool, bool, bool, Vector*)::g_drop_prev
 b SND_PickStaticChannel(int, CSfxTable*)::bFirst
 b SND_PickStaticChannel(int, CSfxTable*)::tm_fmt
 b SND_SetSpatialDelays()::tm_fmt
 b SND_Spatialize(channel_t*)::tm_fmt
 b SV_CheatsChanged_f(IConVar*, char const*, float)::dota_tutorial_game
 b SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)::tm_fmt
 b SV_Frame(bool)::tm_fmt
 b SV_PackEntity(int, edict_t*, ServerClass*, CFrameSnapshot*)::tm_fmt
 b SV_ProcessVoice()::tm_fmt
 b SV_Think(bool)::tm_fmt
 b S_CalcOcclusion(int, channel_t*, Vector const&, Vector, float)::g_drop_prev
 b S_ExtraUpdate()::tm_fmt
 b S_LoadSound(CSfxTable*, channel_t*)::tm_fmt
 b S_PrecacheSound(char const*)::tm_fmt
 b S_StartSound_(StartSoundParams_t&)::tm_fmt
 b S_StartSound_Immediate(StartSoundParams_t&)::s_MissingSounds
 b S_StartSound_Immediate(StartSoundParams_t&)::tm_fmt
 b S_Startup()::bFirst
 b S_Update(CAudioState const*)::s_roundrobin
 b S_Update(CAudioState const*)::tm_fmt
 b S_Update_(float)::tm_fmt
 b S_Update_Guts(float)::tm_fmt
 b SendTable_Encode(SendTable const*, int, void const*, int, CUtlMemory<CSendProxyRecipients, int>*)::tm_fmt
 b ServerTagsCleanUp()::s_nNoReentry
 b Shader_AddSurfaceDynamic(CMeshBuilder&, msurface2_t*)::tm_fmt
 b Shader_AddSurfaceDynamicTextureOnly(CMeshBuilder&, msurface2_t*)::tm_fmt
 b Shader_BuildDynamicLightmaps(CWorldRenderList*)::tm_fmt
 b Shader_DrawChains(CWorldRenderList const*, int, bool)::tm_fmt
 b Shader_DrawChainsDynamic(CMSurfaceSortList const&, int, bool)::tm_fmt
 b Shader_DrawChainsStatic(CMSurfaceSortList const&, int, bool)::_counter
 b Shader_DrawChainsStatic(CMSurfaceSortList const&, int, bool)::tm_fmt
 b Shader_DrawDispChain(int, CMSurfaceSortList const&, unsigned long, ERenderDepthMode)::tm_fmt
 b Shader_DrawDispChainDecalsAndOverlays(int, CMSurfaceSortList const&, unsigned long)::tm_fmt
 b Shader_DrawDynamicChain(CMSurfaceSortList const&, surfacesortgroup_t const&, bool)::tm_fmt
 b Shader_DrawSurfaceDynamic(IMatRenderContext*, msurface2_t*)::tm_fmt
 b Shader_DrawSurfaceListStatic(IMatRenderContext*, msurface2_t**, int, int)::tm_fmt
 b Shader_DrawWorldDecalsAndOverlays(CWorldRenderList*, unsigned long, float)::tm_fmt
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::alphaRefCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::originalAlphaRefCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::originalTextureFrameVarCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::originalTextureVarCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::textureFrameVarCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::textureVarCache
 b Shader_SetChainTextureState(IMatRenderContext*, msurface2_t*, IClientEntity*, bool)::tm_fmt
 b Shader_WorldEnd(CWorldRenderList*, unsigned long, float)::tm_fmt
 b Shader_WorldShadowDepthFill(CWorldRenderList*, unsigned long)::tm_fmt
 b Shader_WorldZFill(CWorldRenderList*, unsigned long)::tm_fmt
 b SoundMixersFlush
 b SurfFlagsToSortGroup(msurface2_t*, int)::warningcount
 b Sys_Error_Internal(bool, char const*, char*)::bReentry
 b Sys_InitGame(void* (*)(char const*, int*), char const*, void*, int)::s_pBaseDir
 b Test_LoopCount_command
 b Test_LoopForNumSeconds_command
 b Test_Loop_command
 b Test_RandomChance_command
 b Test_RunFrame_command
 b Test_SendKey_command
 b Test_StartLoop_command
 b Test_StartScript_command
 b Test_WaitForCheckPoint_command
 b Test_Wait_command
 b TheDownloadCache
 b TheDownloadManager
 b ToolLoad
 b ToolUnload
 b TransmitEvents
 b UNSPECIFIED_LOGGING_COLOR
 b UpdateMaterialSystemConfig()::gamedir
 b VGui_DrawHierarchy()::tm_fmt
 b VOX_ParseWordParams(char*, voxword_t*, int)::voxwordDefault
 b V_CheckGamma()::tm_fmt
 b V_RenderVGuiOnly()::tm_fmt
 b V_RenderView()::tm_fmt
 b V_pretifymem(float, int, bool)::current
 b V_pretifymem(float, int, bool)::output
 b V_strcasecmp(char const*, char const*)::tm_fmt
 b V_strncasecmp(char const*, char const*, int)::tm_fmt
 b VacClient::s_DirectoryPtr
 b VacClient::s_cvarMutex
 b VacClient::s_pActiveDirectory
 b VisCache_Build(VisCacheEntry&, worldbrushdata_t const&)::_counter
 b VoiceTweak_EndVoiceTweakMode()::voice_vox
 b Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_chat_bubble_show_volume
 b Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_vox
 b Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_vox_current_peak
 b _Host_ProcessVoice_Server()::tm_fmt
 b _Host_RunFrame(float)::host_remainder
 b _Host_RunFrame(float)::host_remainder_last_frame
 b _Host_RunFrame(float)::last_frame_time
 b _Host_RunFrame(float)::numticks_last_frame
 b _Host_RunFrame(float)::timeLastMemCompact
 b _Host_RunFrame(float)::tm_fmt
 b _Host_RunFrame_Client(bool)::tm_fmt
 b _Host_RunFrame_Input(float, bool)::bFirstFrame
 b _Host_RunFrame_Input(float, bool)::tm_fmt
 b _Host_RunFrame_Render()::tm_fmt
 b _Host_RunFrame_Server(bool)::_counter
 b _Host_RunFrame_Server(bool)::tm_fmt
 b _Host_RunFrame_Server_Async(int)::tm_fmt
 b _Host_RunFrame_Sound()::tm_fmt
 b _V_strcmp(char const*, char const*)::tm_fmt
 b _V_stricmp(char const*, char const*)::tm_fmt
 b _V_strncmp(char const*, char const*, int)::tm_fmt
 b _ZL15s_ShaderConvars.0
 b _ZL15s_ShaderConvars.1
 b _ZL15s_ShaderConvars.2
 b _ZL8ice_sbox.0
 b _ZL8ice_sbox.1
 b _ZL8ice_sbox.2
 b _ZL8ice_sbox.3
 b __g_CClientEngineTools_singleton
 b __g_CDedicatedServerAPI_singleton
 b __g_CServerEngineTools_singleton
 b __g_CVoiceServer_singleton
 b __g_CreateCBlackBoxIBlackBox_reg
 b __g_CreateCClientEngineToolsIClientEngineTools_reg
 b __g_CreateCCvarQueryICvarQuery_reg
 b __g_CreateCDedicatedServerAPIIDedicatedServerAPI_reg
 b __g_CreateCEngineAPIIEngineAPI_reg
 b __g_CreateCEngineClientIVEngineClient_reg
 b __g_CreateCEngineSoundClientIEngineSound_reg
 b __g_CreateCEngineSoundServerIEngineSound_reg
 b __g_CreateCEngineToolIEngineToolFramework_reg
 b __g_CreateCEngineToolIEngineTool_reg
 b __g_CreateCEngineTraceClientIEngineTrace_reg
 b __g_CreateCEngineTraceServerIEngineTrace_reg
 b __g_CreateCEngineUniformRandomStreamIUniformRandomStream_reg
 b __g_CreateCEngineVGuiIEngineVGui_reg
 b __g_CreateCFileLoggingListenerIFileLoggingListener_reg
 b __g_CreateCGameEventManagerIGameEventManager2_reg
 b __g_CreateCGameEventManagerOldIGameEventManager_reg
 b __g_CreateCGameUIFuncsIGameUIFuncs_reg
 b __g_CreateCIVDebugOverlayIVDebugOverlay_reg
 b __g_CreateCIVDebugOverlayIVPhysicsDebugOverlay_reg
 b __g_CreateCKeyValueCacheIKeyValueCache_reg
 b __g_CreateCModelInfoClientIVModelInfoClient_reg
 b __g_CreateCModelInfoServerIVModelInfo_reg
 b __g_CreateCModelRenderIVModelRender_reg
 b __g_CreateCNetSupportImplINetSupport_reg
 b __g_CreateCNetworkStringTableContainerINetworkStringTableContainer_reg
 b __g_CreateCServerEngineToolsIServerEngineTools_reg
 b __g_CreateCServerRemoteAccessIGameServerData_reg
 b __g_CreateCShadowMgrIShadowMgr_reg
 b __g_CreateCSpatialPartitionISpatialPartition_reg
 b __g_CreateCStaticPropMgrIStaticPropMgrClient_reg
 b __g_CreateCStaticPropMgrIStaticPropMgrServer_reg
 b __g_CreateCToolFrameworkInternalIToolFrameworkInternal_reg
 b __g_CreateCUploadGameStatsIUploadGameStats_reg
 b __g_CreateCVEfxIVEfx_reg
 b __g_CreateCVEngineServerIVEngineServer_reg
 b __g_CreateCVProfExportIVProfExport_reg
 b __g_CreateCVRenderViewIVRenderView_reg
 b __g_CreateCVoiceServerIVoiceServer_reg
 b __g_CreateCXboxSystemIXboxSystem_reg
 b _autosave_command
 b _autosavedangerous_command
 b _bugreporter_restart_command
 b _record_command
 b _restart_command
 b addip
 b alias_command
 b asw_engine_finished_building_map_command
 b async_serialize
 b audit_save_in_memory_command
 b autosave_command
 b autosavedangerous_command
 b autosavedangerousissafe_command
 b banid_command
 b banip
 b bench_end_command
 b bench_start_command
 b bench_upload_command
 b benchframe_command
 b bind_command
 b blackbox_dump_command
 b blackbox_record_command
 b box_command
 b budget_command
 b budget_toggle_group_command
 b bug_command
 b bugreporter_console_bytes
 b bugreporter_includebsp
 b bugreporter_snapshot_delay
 b bugreporter_uploadasync
 b bugreporter_username
 b buildcubemaps_command
 b cache_print_command
 b cache_print_lru_command
 b cache_print_summary_command
 b changelevel
 b changelevel2
 b cl_allowdownload
 b cl_allowupload
 b cl_cmdrate_var
 b cl_downloadfilter
 b cl_failremoteconnections
 b cl_flushentitypacket
 b cl_forcepreload
 b cl_fullupdate_command
 b cl_ignorepackets
 b cl_playback_screenshots
 b cl_precacheinfo_command
 b cl_rate_var
 b cl_retire_low_priority_lights
 b cl_show_clientmessage
 b cl_showdemooverlay
 b cl_showents_command
 b cl_showevents
 b cl_singleplayernetworkbackdoor
 b cl_snapshot_subdirname
 b cl_snapshotname
 b cl_snapshotnum
 b cl_soundfile
 b cl_spectator_cmdrate_factor
 b cl_updaterate_var
 b cl_view_command
 b cl_voice_filter
 b cl_voice_team_filter
 b clear
 b clientportany
 b cmd1_command
 b cmd2_command
 b cmd3_command
 b cmd4_command
 b cmd_alias
 b cmd_command
 b cmd_exit
 b colorcorrectionui
 b combine_disp_images_command
 b conPanel
 b con_drawnotify
 b con_enable
 b con_filter_enable
 b con_filter_text
 b con_filter_text_out
 b con_logfile_suffix
 b con_notifytime
 b con_times
 b con_timestamp
 b con_trace
 b connect_command
 b connect_hltv_command
 b connect_splitscreen_command
 b crash_assert
 b crash_command
 b crash_error_command
 b crash_job_command
 b crash_thread_command
 b currentloadedsky
 b cvarlist_command
 b demo_avellimit
 b demo_fastforwardfinalspeed
 b demo_fastforwardramptime
 b demo_fastforwardstartspeed
 b demo_goto_command
 b demo_gototick_command
 b demo_info_command
 b demo_interplimit
 b demo_interpolateview
 b demo_pause_command
 b demo_pauseatservertick
 b demo_quitafterplayback
 b demo_recordcommands
 b demo_resume_command
 b demo_timescale_command
 b demo_togglepause_command
 b demo_usefastgoto
 b demo_writefullupdate_rate
 b demofile_compresspackets_size
 b demolist_command
 b demos_command
 b devshots_nextmap
 b devshots_screenshot_command
 b differences_command
 b disconnect_command
 b display_elapsedtime_command
 b dota_no_vgui
 b dsp_parm
 b dt_ShowPartialChangeEnts
 b dt_ShowSendTableProps
 b dt_UsePartialChangeEnts
 b dti_flush
 b dummySfx
 b dump_file_paths
 b dumpsavedir_command
 b dumpstringtables_command
 b echo_command
 b editor_toggle
 b emptyMapping
 b endmovie_command
 b endshowbudget
 b endshowvprof
 b endvoicerecord
 b envmap_command
 b er_colwidth
 b er_graphwidthfrac
 b er_maxname
 b escape_command
 b exec_command
 b execifexists_command
 b final
 b findflags_command
 b flush_command
 b flush_locked_command
 b fog_enable_water_fog
 b fogui
 b forcebind
 b fps_max_splitscreen
 b fs_printopenfiles_command
 b fs_syncdvddevcache_command
 b fs_warning_level_command
 b gRender
 b g_ASCache
 b g_ActiveSoundsLastUpdate
 b g_AnimatingImagePanel_Helper
 b g_AreaCounter
 b g_AreaFrustum
 b g_AreaRect
 b g_AreaStack
 b g_AsyncWaveDataCache
 b g_BitBufErrorHandler
 b g_BreakSet
 b g_BreakSetIncludingColons
 b g_BugReporter
 b g_BuildCubemaps16BitTexture
 b g_BuildModeDialogMgr
 b g_Button_Helper
 b g_CBitmapImagePanel_Helper
 b g_CTreeViewListControl_Helper
 b g_CVoiceSfx
 b g_CameraTexture
 b g_CheckButton_Helper
 b g_ChildNodeDependencies
 b g_ChildNodeIndexMul
 b g_ChildVerts_17x17
 b g_ChildVerts_5x5
 b g_ChildVerts_9x9
 b g_CircularProgressBar_Helper
 b g_CleanupSymbolTable
 b g_ColorCorrectionTools
 b g_ComboBox_Helper
 b g_ContinuousProgressBar_Helper
 b g_CvarToggleCheckButton_Helper
 b g_CvarUtilities
 b g_DTISendTables
 b g_DebugOverlay
 b g_DecalAllocator
 b g_DecalClipVerts2
 b g_DecalVertCache
 b g_DeferredDepth
 b g_DeferredDiffuse
 b g_DeferredNormal
 b g_DeferredSpecular
 b g_DemoActionManager
 b g_DisplayText
 b g_Divider_Helper
 b g_DragDropCapture
 b g_EdgeVisualization
 b g_EdictFreeTime
 b g_EditablePanel_Helper
 b g_Engine
 b g_EngineTool
 b g_EngineVGuiImp
 b g_EntityReportMgr
 b g_ErrorEdges_17x17
 b g_ErrorEdges_5x5
 b g_ErrorEdges_9x9
 b g_ExecutionMarkers
 b g_ExpandButton_Helper
 b g_FileSystemError
 b g_Filter
 b g_FrameIndex
 b g_FrameMissCount
 b g_FrameSnapshotManager
 b g_FreeEdicts
 b g_FullFrameFBTexture0
 b g_FullFrameFBTexture1
 b g_FullFrameFBTexture2
 b g_Game
 b g_GameLumpDict
 b g_GameLumpFilename
 b g_GraphPanel_Helper
 b g_GroupLRU
 b g_HostTimes
 b g_ImagePanel_Helper
 b g_InitTracker
 b g_KBMgr
 b g_KVMutex
 b g_KeyValues2ErrorStack
 b g_Label_Helper
 b g_LastMixTime
 b g_LastSoundFrame
 b g_ListPanel_Helper
 b g_ListViewPanel_Helper
 b g_LocalPlayerTalkingTimeout
 b g_MainThreadId
 b g_MapListMgr
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_MenuBar_Helper
 b g_MenuButton_Helper
 b g_MenuItem_Helper
 b g_Menu_Helper
 b g_Meshes
 b g_MessageBox_Helper
 b g_ModDirPermissions
 b g_ModelInfoClient
 b g_ModelInfoServer
 b g_ModelLoader
 b g_MouthEnvelope
 b g_MouthOutput
 b g_NetSupport
 b g_OcclusionSystem
 b g_OverlayMgr
 b g_OverridenColorSymbols
 b g_Panel_Helper
 b g_PartialChangeEnts
 b g_PowerInfoInitializer
 b g_PowerInfo_17x17
 b g_PowerInfo_5x5
 b g_PowerInfo_9x9
 b g_PowerOfTwoFBTexture
 b g_ProgressBar_Helper
 b g_ProjectionToOffset
 b g_ProtobufLogHandler
 b g_QuarterSizedFBTexture0
 b g_QuarterSizedFBTexture1
 b g_QuarterSizedFBTexture2
 b g_QuarterSizedFBTexture3
 b g_RCONClient
 b g_RCONServer
 b g_RadioButton_Helper
 b g_RichText_Helper
 b g_SSAOQuarterResDepthAndNormal
 b g_SSAOResultTexture
 b g_ScalableImagePanel_Helper
 b g_ScriptSymbols
 b g_ScrollBar_Helper
 b g_ScrollBar_Horizontal_Helper
 b g_ScrollBar_Vertical_Helper
 b g_SentenceFile
 b g_SerializedEntities
 b g_ServerDTITimer
 b g_ShaderDebug
 b g_SideVertCorners_17x17
 b g_SideVertCorners_5x5
 b g_SideVertCorners_9x9
 b g_SideVerts_17x17
 b g_SideVerts_5x5
 b g_SideVerts_9x9
 b g_Slider_Helper
 b g_SndMergeMethod
 b g_SoundMessages
 b g_SpatialPartition
 b g_SpewHistory
 b g_SpewMutex
 b g_SplitScreenMgr
 b g_SteamAPIContext
 b g_StringTableDictionary
 b g_TeenyFBTexture0
 b g_TeenyFBTexture1
 b g_TeenyFBTexture2
 b g_TempBudgetGroupSpace
 b g_TerrainList
 b g_TextEntry_Helper
 b g_TimeLastMemTest
 b g_TimerLessBudget
 b g_ToggleButton_Helper
 b g_ToolFrameworkInternal
 b g_ToolLoad_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::ToolLoad_Complete
 b g_ToolUnload_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::ToolUnload_Complete
 b g_TotalServerDTICycles
 b g_Tracks
 b g_TreeView_Helper
 b g_TriInfos_17x17
 b g_TriInfos_5x5
 b g_TriInfos_9x9
 b g_URLLabel_Helper
 b g_UploadGameStats
 b g_VProfRecorder
 b g_Vec3DispCollEpsilons
 b g_VertInfo_17x17
 b g_VertInfo_5x5
 b g_VertInfo_9x9
 b g_VirtualTerrain
 b g_VisibleAreas
 b g_VoiceOverdriveDuration
 b g_VoiceWriter
 b g_WaterReflectionTexture
 b g_WaterRefractionTexture
 b g_WhiteSpace
 b g_bConfigCfgExecuted
 b g_bDumpCounters
 b g_bFirstHookTimer
 b g_bInColorPrint
 b g_bInstalledVarChangeCallback
 b g_bLocalPlayerTalkingAck
 b g_bNeedPresetRestore
 b g_bRecursiveRequestToShowTextureList
 b g_bRunningFromPerforce
 b g_bSaveInProgress
 b g_bSoundRebuilt
 b g_bVoiceOverdriveOn
 b g_bVoiceRecording
 b g_benchframe_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::benchframeComplete
 b g_cmapnames
 b g_exec_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::execComplete
 b g_execifexists_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::execifexistsComplete
 b g_fColorPrintf
 b g_fIsDebugPrint
 b g_fLocalPlayerTalkingLastUpdateRealTime
 b g_fVprofCacheMissOnByUI
 b g_fVprofOnByUI
 b g_hfind
 b g_lVprofDeferredFuncs
 b g_listdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::listdemoComplete
 b g_load_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::loadComplete
 b g_nDynamicDecals
 b g_nMovieSamples
 b g_nMovieStartTick
 b g_nStaticDecals
 b g_nTotalEntChanges
 b g_nTotalPropChanges
 b g_nTrees
 b g_nVisibleAreas
 b g_pBudgetPanel
 b g_pBudgetPanelShared
 b g_pBugUI
 b g_pColorCorrectionUI
 b g_pConPanel
 b g_pEncodeCodec
 b g_pEntityReportPanel
 b g_pLoadingProgressDescriptions
 b g_pMapHeader
 b g_pPerfUI
 b g_pSentenceFileList
 b g_pServerDTIFilename
 b g_pStatsFile
 b g_pTextureBudgetPanel
 b g_pTextureListPanel
 b g_pVProfPanel
 b g_pVoiceRecord
 b g_pchSkipName
 b g_pfnDeferredOp
 b g_playdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::playdemoComplete
 b g_rgmapnames
 b g_sProductString
 b g_sVersionString
 b g_sendTableCRCHash
 b g_sv_pure_mode
 b g_szDefferedArg1
 b g_szDefferedArg2
 b g_szMapLoadOverride
 b g_szModSaveContainerDisplayName
 b g_szModSaveContainerName
 b g_timedemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemoComplete
 b g_timedemo_vprofrecord_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemo_vprofrecordComplete
 b g_timedemoquit_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemoquitComplete
 b g_unSteamAppID
 b g_unSteamDedicatedServerAppID
 b g_vox_lastsectorupdate
 b gameui_activate_command
 b gameui_allowescape_command
 b gameui_allowescapetoshow_command
 b gameui_hide_command
 b gameui_preventescape_command
 b gameui_preventescapetoshow_command
 b guard variable for Audio_GetEngineVoiceSteam()::s_EngineVoiceSteam
 b guard variable for CBaseServer::UpdateGameType()::var
 b guard variable for CBaseServer::UpdateMasterServer()::bUpdateMasterServers
 b guard variable for CBudgetHistoryPanel::Paint(IVGuiPaintSurface*)::s_CurrentHeight
 b guard variable for CBudgetHistoryPanel::Paint(IVGuiPaintSurface*)::s_Rects
 b guard variable for CBugUIPanel::OnSubmit()::ai_strong_optimizations
 b guard variable for CBugUIPanel::OnSubmit()::host_thread_mode
 b guard variable for CBugUIPanel::OnSubmit()::skill
 b guard variable for CBugUIPanel::OnSubmit()::sv_alternateticks
 b guard variable for CClientState::ConsistencyCheck(bool)::s_LastConfig
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::cpu_level
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::gpu_level
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::mat_antialias
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::mat_forceaniso
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::mat_picmip
 b guard variable for CDemoPlayer::WriteTimeDemoResults()::mat_vsync
 b guard variable for CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)::cache
 b guard variable for CEngine::Frame()::pSyncReportConVar
 b guard variable for CEngineClient::ForceOpenServerPort()::tv_enable
 b guard variable for CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::_counter
 b guard variable for CFrameTimer::MarkFrame()::m_pCounterNumberOfEntities
 b guard variable for CGame::UpdateDesktopInformation(SDL_Window*)::sdl_displayindex
 b guard variable for CHLTVServer::ConnectRelay(CUtlVector<ns_address, CUtlMemory<ns_address, int> > const&)::rate
 b guard variable for CHLTVServer::GetRelayAddress()::adr
 b guard variable for CInstantReplay::GetDemoFile()::s_dummy
 b guard variable for CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4a_t*)::r_shadowlod
 b guard variable for CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4a_t*)::r_shadowlodbias
 b guard variable for CModelRender::GetBrightestShadowingLightSource(Vector const&, Vector&, Vector&, bool)::colorToGray
 b guard variable for CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)::temp
 b guard variable for CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)::white
 b guard variable for CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)::actualLightingState
 b guard variable for CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)::s_WorldLights
 b guard variable for COcclusionSystem::IsOccluded(Vector const&, Vector const&)::mutex
 b guard variable for CRConServer::RunFrame()::s_bHasUseConParm
 b guard variable for CRender::EndUpdateLightmaps()::threadDlights
 b guard variable for CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblError
 b guard variable for CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblNormal
 b guard variable for CRenderTexturesListViewPanel::RenderTile(IVGuiPaintSurface*, int, int, int)::clrLblWarn
 b guard variable for CShadowMgr::ProjectAndClipVertices(unsigned short, int, Vector**, ShadowVertex_t***)::clip
 b guard variable for CSosOperatorSystem::GetSoundOperatorSystem()::s_SoundOperatorSystem
 b guard variable for CStaticProp::DrawModelSlow(int, RenderableInstance_t const&)::debugColor
 b guard variable for CVideoMode_Common::CenterEngineWindow(void*, int, int)::sdl_displayindex
 b guard variable for CVideoMode_Common::DrawStartupGraphic()::bChinaClient
 b guard variable for CVideoMode_Common::DrawStartupGraphic()::szBackgroundName
 b guard variable for ComputeDynamicLighting(Vector const&, Vector const*, Vector&)::ambientTerm
 b guard variable for ComputeDynamicLighting(lightcache_t*, LightingState_t&, Vector const&, int, unsigned char const*)::_counter
 b guard variable for ComputeLightStyles(lightcache_t*, LightingState_t&, Vector const&, int, unsigned char const*)::_counter
 b guard variable for ComputeStaticLightingForCacheEntry(CBaseLightCache*, Vector const&, int, bool)::_counter
 b guard variable for ComputeViewMatrix(VMatrix*, Vector const&, QAngle const&)::baseRotation
 b guard variable for Con_ColorPrintf(Color const&, char const*, ...)::autoMutex__
 b guard variable for DecalSurfaceDraw(IMatRenderContext*, int, float)::DrawDecals
 b guard variable for EngineBitBufErrorHandler(BitBufErrorType, char const*)::errorNames
 b guard variable for Filter_StringToUserID(char const*)::id
 b guard variable for FinishAsyncSave()::autoMutex__
 b guard variable for GetConsoleLogManager()::object
 b guard variable for GetPanelAnimationDictionary()::dictionary
 b guard variable for GetPanelMessageMapDictionary()::dictionary
 b guard variable for GetPropertyConverters()::g_AnimationPropertyConverters
 b guard variable for GetSaveMemory()::g_SaveMemory
 b guard variable for Host_ShowIPCCallCount()::s_nLastFrame
 b guard variable for Host_ShowIPCCallCount()::s_nLastTick
 b guard variable for InitializeStandardMaterials()::autoMutex__
 b guard variable for Key_Event(InputEvent_t const&)::dota_dashboard
 b guard variable for LightcacheGetDynamic(Vector const&, LightingState_t&, LightcacheGetDynamic_Stats&, IClientRenderable const*, unsigned int, bool)::_counter
 b guard variable for MaybeReportMissingWav(char const*)::wavErrors
 b guard variable for PreUpdateProfile(float)::history
 b guard variable for R_LightVec(Vector const&, Vector const&, bool, Vector&, float*, float*, float*, float*)::_counter
 b guard variable for R_LoadSkys()::skyname
 b guard variable for SV_CheatsChanged_f(IConVar*, char const*, float)::dota_tutorial_game
 b guard variable for S_StartSound_Immediate(StartSoundParams_t&)::s_MissingSounds
 b guard variable for Shader_DrawChainsStatic(CMSurfaceSortList const&, int, bool)::_counter
 b guard variable for VisCache_Build(VisCacheEntry&, worldbrushdata_t const&)::_counter
 b guard variable for VoiceTweak_EndVoiceTweakMode()::voice_vox
 b guard variable for Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_chat_bubble_show_volume
 b guard variable for Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_vox
 b guard variable for Voice_GetCompressedData(char*, int, bool, VoiceFormat_t*, unsigned char*, unsigned int*, unsigned int*)::voice_vox_current_peak
 b guard variable for _Host_RunFrame_Server(bool)::_counter
 b guard variable for g_ToolLoad_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::ToolLoad_Complete
 b guard variable for g_ToolUnload_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::ToolUnload_Complete
 b guard variable for g_benchframe_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::benchframeComplete
 b guard variable for g_exec_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::execComplete
 b guard variable for g_execifexists_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::execifexistsComplete
 b guard variable for g_listdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::listdemoComplete
 b guard variable for g_load_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::loadComplete
 b guard variable for g_playdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::playdemoComplete
 b guard variable for g_timedemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemoComplete
 b guard variable for g_timedemo_vprofrecord_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemo_vprofrecordComplete
 b guard variable for g_timedemoquit_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)::timedemoquitComplete
 b guard variable for status(CCommandContext const&, CCommand const&)::sv_steamdatagramtransport_port
 b guard variable for vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hTall
 b guard variable for vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hWide
 b guard variable for vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hXPos
 b guard variable for vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hYPos
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeyCommand
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeyDefault
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeySelected
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundArmed
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundDepressed
 b guard variable for vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundReleased
 b guard variable for vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyClientInsetXOverride
 b guard variable for vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitle
 b guard variable for vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitleBarVisible
 b guard variable for vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitleFont
 b guard variable for vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b guard variable for vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyBorder
 b guard variable for vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyDrawColor
 b guard variable for vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyFillColor
 b guard variable for vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyFrame
 b guard variable for vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyImage
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyAssociate
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyCenterWrap
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyFont
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyLabelText
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyTextAlignment
 b guard variable for vgui::Label::ApplySingleSetting(KeyValues*)::hKeyWrap
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hBorder
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hGroup
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyEnabled
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyStyle
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyTabPosition
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyVisible
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyZPos
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyboardInputEnabled
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hMouseInputEnabled
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hName
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hNavDown
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hNavLeft
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hNavRight
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hNavUp
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hPaintBackground
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hPaintBorder
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hRoundedCorners
 b guard variable for vgui::Panel::ApplySingleSetting(KeyValues*)::hToolTipText
 b guard variable for vgui::RichText::ApplySingleSetting(KeyValues*)::hKeyFont
 b guard variable for vgui::RichText::ApplySingleSetting(KeyValues*)::hKeyScrollbar
 b heartbeat
 b help_command
 b hideconsole
 b hltvport
 b host_ShowIPCCallCount
 b host_Sleep
 b host_checkheap
 b host_hunklevel
 b host_profile
 b host_runofftime_command
 b host_syncfps
 b host_timescale_dec_command
 b host_timescale_inc_command
 b host_writeconfig_command
 b host_writeconfig_ss_command
 b hostport
 b http_file_exists_command
 b hunk_print_allocations_command
 b ice_sboxes_initialised
 b incrementvar_command
 b instant_replay_enable
 b instant_replay_goto_tick_command
 b instant_replay_history_limit
 b instant_replay_history_limit_low
 b instant_replay_live_command
 b instant_replay_pause_command
 b instant_replay_resume_command
 b instant_replay_skip_command
 b instant_replay_skip_live_command
 b instant_replay_timescale_command
 b instant_replay_togglepause_command
 b jpeg_command
 b jpeg_quality
 b key_findbinding_command
 b key_listboundkeys_command
 b kick_command
 b kickid_command
 b kickid_hltv_command
 b killserver_command
 b lasterrorZ
 b light_crosshair
 b lightbuckets
 b lightcache
 b lightprobe_command
 b lineartoscreen
 b lineartotexture
 b listdemo_command
 b listener_forward
 b listener_up
 b listid_command
 b listip_command
 b listmodels_command
 b load_command
 b log_color
 b log_command
 b log_dumpchannels
 b log_flags
 b log_level
 b log_verbosity
 b logaddress_add_command
 b logaddress_del_command
 b logaddress_delall_command
 b logaddress_list_command
 b m_LargeVertexListMax
 b m_RenderQueueMax
 b m_ShadowDecalsMax
 b m_ShadowSurfacesMax
 b m_ShadowsOnModelsMax
 b m_SmallVertexListMax
 b m_SortOrderIdsMax
 b m_TempVertexCacheMax
 b m_VertexCacheMax
 b map
 b map_background
 b map_commentary
 b map_edit_command
 b map_networkbackdoor
 b map_noareas
 b maps
 b mat_budgets
 b mat_color_projection
 b mat_configcurrent_command
 b mat_crosshair_command
 b mat_crosshair_edit_command
 b mat_crosshair_explorer_command
 b mat_crosshair_printmaterial_command
 b mat_crosshair_reloadmaterial_command
 b mat_debug_command
 b mat_drawTitleSafe
 b mat_edit_command
 b mat_force_tonemap_scale
 b mat_forcedynamic
 b mat_info_command
 b mat_maxframelatency
 b mat_monitorgamma
 b mat_monitorgamma_tv_enabled
 b mat_monitorgamma_tv_exp
 b mat_monitorgamma_tv_range_max
 b mat_monitorgamma_tv_range_min
 b mat_savechanges_command
 b mat_setvideomode_command
 b mat_shadowstate
 b mat_softwareskin
 b mat_suppress_command
 b mat_texture_list
 b mat_texture_list_txlod_command
 b maxplayers_command
 b mem_compact_command
 b mem_dump_command
 b mem_dumpstats
 b mem_eat_command
 b mem_incremental_compact_command
 b mem_periodicdumps
 b mem_test_command
 b mem_test_each_frame
 b mem_test_every_n_seconds
 b mem_test_quiet
 b mem_vcollide_command
 b mem_verify_command
 b memory_command
 b minidump_command
 b minisave_command
 b mod_combiner_info_command
 b mod_dynamicloadpause
 b mod_dynamicloadspew
 b mod_dynamicloadthrottle
 b mod_dynamicmodeldebug_command
 b mod_dynamicunloadtextures
 b mod_dynamicunloadtime
 b mod_forcetouchdata
 b mod_load_showstall
 b mod_touchalldata
 b movie_fixwave_command
 b multvar_command
 b nOldBloomDisable
 b nShowDynamicChannelMax
 b nShowStaticChannelMax
 b net_dumpeventstats_command
 b net_showeventlisteners
 b net_showevents
 b net_showreliablesounds
 b netadr_t::ToString(bool) const::s
 b netadr_t::ToString(bool) const::slot
 b network_connection_token_default
 b next
 b nextdemo_command
 b orig_demo_message
 b pause_command
 b perfui
 b ping_command
 b play
 b playdemo_command
 b playflush
 b playvol
 b print_colorcorrection
 b progress_enable
 b prop_crosshair
 b protobuf_AddDesc_demo_2eproto()::already_here
 b protobuf_AddDesc_netmessages_2eproto()::already_here
 b protobuf_AddDesc_network_5fconnection_2eproto()::already_here
 b protobuf_AddDesc_networkbasetypes_2eproto()::already_here
 b pvsrow
 b r_DrawSpecificStaticProp
 b r_ShowViewerArea
 b r_ambientboost
 b r_ambientfactor
 b r_ambientfraction
 b r_ambientmin
 b r_cleardecals_command
 b r_colorstaticprops
 b r_combined_textures
 b r_decalstaticprops
 b r_dlightvisible
 b r_dlightvisiblethisframe
 b r_drawbatchdecals
 b r_drawclipbrushes
 b r_drawdecals
 b r_drawentities
 b r_drawfuncdetail
 b r_drawleaf
 b r_drawlightcache
 b r_drawlightinfo
 b r_drawlights
 b r_drawmodelstatsoverlaymax
 b r_drawmodelstatsoverlaymin
 b r_drawskybox
 b r_drawstaticprops
 b r_drawtopview
 b r_drawtranslucentworld
 b r_drawworld
 b r_dscale_basefov
 b r_dscale_fardist
 b r_dscale_farscale
 b r_dscale_neardist
 b r_dscale_nearscale
 b r_entity
 b r_eyeglintlodpixels
 b r_eyemove
 b r_eyes
 b r_eyeshift_x
 b r_eyeshift_y
 b r_eyeshift_z
 b r_eyesize
 b r_fastzrejectdisp
 b r_flashlightclip
 b r_flashlightculldepth
 b r_flashlightdrawclip
 b r_flashlightdrawdepth
 b r_flashlightdrawdepthres
 b r_flashlightdrawsweptbbox
 b r_flashlightnodraw
 b r_flashlightrender
 b r_flashlightrendermodels
 b r_flashlightrenderworld
 b r_flashlightscissor
 b r_flashlightupdatedepth
 b r_flex
 b r_flushlod
 b r_frustumcullworld
 b r_itemblinkmax
 b r_itemblinkrate
 b r_lightaverage
 b r_lightcache_invalidate_command
 b r_lightcache_numambientsamples
 b r_lightcachecenter
 b r_lightcachemodel
 b r_lightinterp
 b r_lockpvs
 b r_maxmodeldecal
 b r_maxnewsamples
 b r_maxsampledist
 b r_minnewsamples
 b r_modelwireframedecal
 b r_nohw
 b r_nosw
 b r_novis
 b r_occludermincount
 b r_occlusionspew
 b r_overlayfadeenable
 b r_overlayfademax
 b r_overlayfademin
 b r_overlaypushout
 b r_overlaywireframe
 b r_partition_level
 b r_portalscloseall
 b r_portalsopenall
 b r_printdecalinfo
 b r_proplightingpooling
 b r_queued_decals
 b r_renderoverlayfragment
 b r_screen_size_expansion
 b r_shadowids
 b r_shadowwireframe
 b r_showenvcubemap
 b r_skin
 b r_spray_lifetime
 b r_teeth
 b r_threaded_shadow_clip
 b rcon_address
 b rcon_command
 b recompute_speed
 b record_command
 b reload_command
 b remote_bug_command
 b removeid_command
 b removeip_command
 b reset_gameconvars_command
 b restart_command
 b retry_command
 b rgpparseword
 b rpt_vprof_time
 b sClientVersion
 b sHostVersion
 b sServerVersion
 b s_BraceCharacters
 b s_BreakSet
 b s_BreakpadPassiveAssertionFailureListener
 b s_BuildReverseMap
 b s_CacheMutex
 b s_CheatCodeCommands
 b s_ClientDemoPlayer
 b s_ClientDemoRecorder
 b s_ClientInstantReplay
 b s_CommandBuffer
 b s_CommandBufferMutex
 b s_CvarQuery
 b s_DecalFadeTimeVarCache
 b s_DecalFadeVarCache
 b s_DecalScaleVarCache
 b s_DecalScaleVariationVarCache
 b s_DecalSecondPassVarCache
 b s_DecalSurfaces
 b s_DispDecalFragments
 b s_DispDecals
 b s_DispShadowDecals
 b s_DispShadowFragments
 b s_DotaMapCompressedHeightfieldData
 b s_DotaMapHeightFieldDataFile
 b s_DotaMapHeightFieldIndices
 b s_EmptyConVar
 b s_EngineAPI
 b s_EngineKeyValueCache
 b s_EngineSoundClient
 b s_EngineSoundServer
 b s_EngineTraceClient
 b s_EngineTraceServer
 b s_FatBytes
 b s_FileLoggingListener
 b s_GameEventManager
 b s_GameEventManagerOld
 b s_GameEventTransmitter
 b s_Grayscale
 b s_KeyContext
 b s_LoaderProgress
 b s_LocalNetworkBackdoor
 b s_MapBuffer
 b s_MapFileHandle
 b s_MapHeader
 b s_MapLumpFiles
 b s_MarkStaticPropLightsEnumerator
 b s_ModelRender
 b s_NetworkStringTableClient
 b s_NetworkStringTableServer
 b s_OrthographicCenter
 b s_OrthographicHalfDiagonal
 b s_PVSInfoAllocator
 b s_PartitionMax
 b s_PartitionMin
 b s_PropCache
 b s_Recipients
 b s_ResourcePreloadSound
 b s_SIMDRandContexts
 b s_SaveRestoreFileSystem
 b s_SaveRestoreFileSystemPassthrough
 b s_SavedModelInfo
 b s_ShadowFragmentAllocLock
 b s_ShadowMgr
 b s_SoundPool
 b s_Sounds
 b s_SplitSlot
 b s_StartDirContexts
 b s_StaticPropMgr
 b s_Steam3Client
 b s_Steam3Server
 b s_StudioRenderConfig
 b s_TempVertMemory
 b s_VEngineClient
 b s_VProfListeners
 b s_WingedTestEdgeList
 b s_XboxSystem
 b s_ZeroFields
 b s_bActivateLightSprites
 b s_bAllocatorInitialized
 b s_bBenchframe
 b s_bBuiltBreakSet
 b s_bConfigLightingChanged
 b s_bDotaMapHeightFieldDataInited
 b s_bForceSend
 b s_bIsDedicated
 b s_bIsListenerUnderwater
 b s_bMaterialsInitialized
 b s_bMathlibInitializedGlobalConstructorOnly
 b s_bRegistered
 b s_bRunningWithDebugModules
 b s_bSuppressRebindChecks
 b s_bUseVProjectBinDir
 b s_buffers
 b s_currentSortingColumnTypeIsText
 b s_debug_bits_start
 b s_debug_info_shown
 b s_dota_no_render
 b s_dota_no_simulate
 b s_eTxListPanelRequest
 b s_flIntervalStartTime
 b s_flPreviousHostFramerate
 b s_flRecordingTimestamp_PlatTime
 b s_flThresholdDecayTime
 b s_iAppID
 b s_lastsoundtime
 b s_loadedHeightFieldMap
 b s_minidumpComment
 b s_nCVarFlag
 b s_nConnectionCount
 b s_nDMXContextStackDepth
 b s_nLastSortColumn
 b s_nMapLoadRecursion
 b s_nMaxQueuedGUID
 b s_nMaxVisibleDLightCount
 b s_nRecordingSection
 b s_nRecordingSectionCompressedByteOffset
 b s_nRecordingTimestamp_UncompressedSampleOffset
 b s_nRegistrationCount
 b s_nSoundGuid
 b s_nTempVertCount
 b s_nVisibleDLightCount
 b s_oldsampleOutCount
 b s_pAllStaticProps
 b s_pBrushRenderOverride
 b s_pBudget
 b s_pConnectionRegistration
 b s_pCurrentSortingColumn
 b s_pCurrentSortingListPanel
 b s_pDLightVis
 b s_pDecalDestroyList
 b s_pDotaMapHeightFields
 b s_pDynamicLight
 b s_pFatPVS
 b s_pHTMLFile
 b s_pLightVecModel
 b s_pMap
 b s_pOldHandler
 b s_pProcessUtils
 b s_pSortFunc
 b s_pVProfGraphPanel
 b s_pVertexColor
 b s_pVertexColorIgnoreZ
 b s_pVoxelColor
 b s_pWireframe
 b s_pWireframeIgnoreZ
 b s_pfnDelegateFactory
 b s_pszRebuildStringTableNames
 b s_raddir
 b s_static_p4_factory
 b s_szMapPathName
 b s_szMapPathNameOnDisk
 b save_asyncdelay
 b save_command
 b save_console
 b save_finish_async_command
 b save_huddelayframes
 b screenshot_command
 b setinfo_command
 b setpause_command
 b showconsole
 b singlestep
 b skyboxMaterials
 b snd_async_flush_command
 b snd_async_showmem_command
 b snd_async_showmem_music_command
 b snd_async_showmem_summary_command
 b snd_buildsoundcacheforaddon_command
 b snd_buildsoundcachefordirectory_command
 b snd_disable_mixer_solo
 b snd_dumpclientsounds_command
 b snd_filter
 b snd_getmixer
 b snd_list_mix_groups
 b snd_list_mix_layers
 b snd_list_mixers
 b snd_mergemethod
 b snd_moviefix
 b snd_prefetch_common
 b snd_print_channel_by_guid_command
 b snd_print_channel_by_index_command
 b snd_print_channels_command
 b snd_rebuildaudiocache_command
 b snd_rebuildlocalizedaudiocache_command
 b snd_reload_caches_command
 b snd_restart
 b snd_set_master_volume_command
 b snd_setmixer
 b snd_setmixlayer
 b snd_setmixlayeramount
 b snd_soundmixer_set_trigger_factor
 b snd_updateaudiocache_command
 b snd_writemanifest_command
 b sndplaydelay
 b sound_device_override
 b soundfade
 b soundfade_command
 b soundinfo
 b soundlist
 b speak
 b speaker_config
 b spike_command
 b ss_connect_command
 b ss_disconnect_command
 b ss_map
 b ss_voice_hearpartner
 b star_memory_command
 b startdemos_command
 b startmovie_command
 b startshowbudget
 b startshowvprof
 b startupmenu
 b startvoicerecord
 b stats
 b status(CCommandContext const&, CCommand const&)::sv_steamdatagramtransport_port
 b status_command
 b std::__ioinit
 b steamapicontext
 b stop_command
 b stopdemo_command
 b stopsound
 b stringtable_alwaysrebuilddictionaries
 b stringtable_usedictionaries
 b stringtabledictionary_command
 b stuffcmds_command
 b sv_allowdownload
 b sv_allowupload
 b sv_cacheencodedents
 b sv_contact
 b sv_creationtickcheck
 b sv_debugtempentities
 b sv_delta_entity_buffer_size
 b sv_deltaprint
 b sv_deltatime
 b sv_dump_changelists_stats_command
 b sv_dump_class_info_command
 b sv_dump_class_table_command
 b sv_dump_edicts_command
 b sv_dump_serialized_entities_mem_command
 b sv_enableoldqueries
 b sv_extra_client_connect_time
 b sv_filterban
 b sv_forcepreload
 b sv_instancebaselines
 b sv_log_onefile
 b sv_log_snapshots
 b sv_logbans
 b sv_logecho
 b sv_logfile
 b sv_logflush
 b sv_logsdir
 b sv_maxclientframes
 b sv_maxrate
 b sv_memlimit
 b sv_minrate
 b sv_multiplayer_maxtempentities
 b sv_parallel_packentities
 b sv_parallel_sendsnapshot
 b sv_password
 b sv_pausable
 b sv_pausable_dev
 b sv_pausable_dev_ds
 b sv_precacheinfo_command
 b sv_pure
 b sv_redirect_buffer
 b sv_redirected
 b sv_redirectto
 b sv_replaysdir
 b sv_show_usermessage
 b sv_showtags_command
 b sv_shutdown
 b sv_sound_discardextraunreliable
 b sv_stats
 b sv_temp_baseline_string_table_buffer_size
 b sv_timeout
 b sv_useexplicitdelete
 b sv_voiceenable
 b sys_minidumpexpandedspew
 b sys_minidumpspewlines
 b texturetolinear
 b thread_test_tslist_command
 b thread_test_tsqueue_command
 b threadpool_cycle_reserve_command
 b threadpool_run_tests_command
 b timedemo_command
 b timedemo_end
 b timedemo_start
 b timedemo_vprofrecord_command
 b timedemoquit_command
 b toggle_command
 b toggleconsole
 b togglevoicerecord
 b tv_autoretry
 b tv_chatgroupsize
 b tv_chattimelimit
 b tv_clients_command
 b tv_deltacache
 b tv_demo_starttick
 b tv_dispatchmode
 b tv_enable_delta_frames
 b tv_grouprelaydatareliable
 b tv_grouprelaydataunreliable
 b tv_grouprelaydatavoice
 b tv_maxclients
 b tv_maxrate
 b tv_msg_command
 b tv_nochat
 b tv_overridemaster
 b tv_password
 b tv_record_command
 b tv_relay_command
 b tv_relaypassword
 b tv_retry_command
 b tv_status_command
 b tv_stop_command
 b tv_stoprecord_command
 b tv_timeout
 b tv_window_size
 b ui_volume_max
 b unbind_command
 b unbindall_command
 b unload_all_addons_command
 b unpause_command
 b update_addon_paths_command
 b user_command
 b users_command
 b va(char const*, ...)::curstring
 b va(char const*, ...)::string
 b version_command
 b vgui::AnimatingImagePanel::GetDescription()::buf
 b vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hTall
 b vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hWide
 b vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hXPos
 b vgui::BuildGroup::ApplySettings(KeyValues*, bool)::hYPos
 b vgui::BuildGroup::ApplySettings(KeyValues*, bool)::tm_fmt
 b vgui::BuildGroup::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)::tm_fmt
 b vgui::BuildGroup::LoadSettingsFile(char const*, char const*)::tm_fmt
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeyCommand
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeyDefault
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeySelected
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundArmed
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundDepressed
 b vgui::Button::ApplySingleSetting(KeyValues*)::hKeySoundReleased
 b vgui::Button::GetDescription()::buf
 b vgui::CBitmapImagePanel::GetDescription()::buf
 b vgui::EditablePanel::GetControlString(char const*, char const*)::buf
 b vgui::EditablePanel::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)::tm_fmt
 b vgui::FocusNavGroup::RequestFocusNext(unsigned int)::stack_depth
 b vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyClientInsetXOverride
 b vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitle
 b vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitleBarVisible
 b vgui::Frame::ApplySingleSetting(KeyValues*)::hKeyTitleFont
 b vgui::Frame::GetDescription()::buf
 b vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyBorder
 b vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyDrawColor
 b vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyFillColor
 b vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyFrame
 b vgui::ImagePanel::ApplySingleSetting(KeyValues*)::hKeyImage
 b vgui::ImagePanel::GetDescription()::buf
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyAssociate
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyCenterWrap
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyFont
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyLabelText
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyTextAlignment
 b vgui::Label::ApplySingleSetting(KeyValues*)::hKeyWrap
 b vgui::Label::GetDescription()::buf
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hBorder
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hGroup
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyEnabled
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyStyle
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyTabPosition
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyVisible
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyZPos
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hKeyboardInputEnabled
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hMouseInputEnabled
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hName
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hNavDown
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hNavLeft
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hNavRight
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hNavUp
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hPaintBackground
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hPaintBorder
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hRoundedCorners
 b vgui::Panel::ApplySingleSetting(KeyValues*)::hToolTipText
 b vgui::Panel::GetStyleNameList()::styleClass
 b vgui::Panel::GetStyleNameList()::styleLocal
 b vgui::Panel::GetStyleNameList()::styleLocal2
 b vgui::Panel::GetStyleNameList()::styleNameBase
 b vgui::Panel::InitPropertyConverters()::initialized
 b vgui::Panel::PerformApplySchemeSettings()::tm_fmt
 b vgui::PanelListPanel::GetDescription()::buf
 b vgui::ProgressBar::GetDescription()::buf
 b vgui::RadioButton::GetDescription()::buf
 b vgui::RichText::ApplySingleSetting(KeyValues*)::hKeyFont
 b vgui::RichText::ApplySingleSetting(KeyValues*)::hKeyScrollbar
 b vgui::RichText::GetDescription()::buf
 b vgui::ScalableImagePanel::GetDescription()::buf
 b vgui::Slider::GetDescription()::buf
 b vgui::TextEntry::GetDescription()::buf
 b vgui::URLLabel::GetDescription()::buf
 b vgui::g_MenuMgr
 b vgui::g_szControlsModuleName
 b vgui::s_pAnimationController
 b vgui::vguiButton_UnpackInit::s_pUnpack
 b vgui::vguiLabel_UnpackInit::s_pUnpack
 b vgui::vguiPanel_UnpackInit::s_pUnpack
 b vgui_drawtree
 b vgui_drawtree_bounds
 b vgui_drawtree_draw_selected
 b vgui_drawtree_freeze
 b vgui_drawtree_hidden
 b vgui_drawtree_panelalpha
 b vgui_drawtree_panelptr
 b vgui_drawtree_popupsonly
 b vgui_drawtree_render_order
 b vgui_drawtree_resource
 b vgui_drawtree_scheme
 b vgui_drawtree_visible
 b vgui_drawtree_zpos
 b vgui_dump_panels_command
 b vgui_togglepanel_command
 b violence_ablood
 b violence_agibs
 b violence_hblood
 b violence_hgibs
 b vis
 b viscache
 b voice_overdrive
 b voice_overdrivefadetime
 b voice_writevoices
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b volume
 b vox_reload
 b vprof_adddebuggroup1(CCommandContext const&, CCommand const&)::tm_fmt
 b vprof_adddebuggroup1_command
 b vprof_cachemiss_command
 b vprof_cachemiss_off_command
 b vprof_cachemiss_on_command
 b vprof_child
 b vprof_collapse_all_command
 b vprof_command
 b vprof_counters
 b vprof_counters_show_minmax
 b vprof_dump_counters_command
 b vprof_dump_groupnames_command
 b vprof_dump_oninterval
 b vprof_dump_spikes
 b vprof_dump_spikes_budget_group
 b vprof_dump_spikes_hierarchy
 b vprof_dump_spikes_node
 b vprof_dump_spikes_terse
 b vprof_expand_all_command
 b vprof_expand_group_command
 b vprof_generate_report_AI_command
 b vprof_generate_report_AI_only_command
 b vprof_generate_report_budget_command
 b vprof_generate_report_command
 b vprof_generate_report_hierarchy_command
 b vprof_generate_report_hierarchy_per_frame_and_count_only_command
 b vprof_generate_report_map_load_command
 b vprof_graph
 b vprof_graphheight
 b vprof_graphwidth
 b vprof_named
 b vprof_nodesspike
 b vprof_nodesspike_min
 b vprof_nodesspike_mult
 b vprof_off_command
 b vprof_on_command
 b vprof_parent
 b vprof_playback_average_command
 b vprof_playback_start_command
 b vprof_playback_step_command
 b vprof_playback_stepback_command
 b vprof_playback_stop_command
 b vprof_record_start_command
 b vprof_record_stop_command
 b vprof_remote_start_command
 b vprof_remote_stop_command
 b vprof_report_oninterval
 b vprof_reset_command
 b vprof_reset_peaks_command
 b vprof_siblingnext
 b vprof_siblingprev
 b vprof_to_csv_command
 b vprof_unaccounted_limit
 b vprof_verbose
 b vprof_vtune_group_command
 b vprof_warningmsec
 b vtune_command
 b writeid_command
 b writeip_command
 b xload_command
 b xsave_command
 bind$UNIX2003
 calloc
 ceil
 ceilf
 close$UNIX2003
 connect$UNIX2003
 copyfile
 cos
 cosf
 cosh
 curl_easy_cleanup
 curl_easy_getinfo
 curl_easy_init
 curl_easy_perform
 curl_easy_setopt
 curl_global_init
 d CStaticProp::DrawModelSlow(int, RenderableInstance_t const&)::debugColor
 d Con_DebugLog(char const*, ...)::needTimestamp
 d Host_RunNetworkSendQueuedPackets()::sendqueue_frame
 d Host_ShouldRun()::current_tick
 d ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::lastDstGamma
 d ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::lastSrcGamma
 d ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::lastSrcGamma
 d ImageLoader::g_KernelFunc
 d ImageLoader::g_KernelFuncBicubic
 d ImageLoader::g_KernelFuncNice
 d LeafVisBuild(Vector const&)::last_leaf
 d NotifyHunkBeginMapLoad(char const*)::EstimatedHunkSizes
 d S_PlayVol(CCommand const&)::hash
 d S_Say(CCommand const&)::hash
 d ShowEncodeDeltaWatchInfo(SendTable const*, SendProp const*, bf_read&, int, int)::lastframe
 d VTT for (anonymous namespace)::CaptionGripPanel
 d VTT for (anonymous namespace)::GripPanel
 d VTT for (anonymous namespace)::ScrollBarButton
 d V_CheckGamma()::lastLightmap
 d __g_CGameUIFuncs_singleton
 d __g_CVEfx_singleton
 d bDrawWater
 d bSaveDrawBeams
 d bSaveMatSpecular
 d boolconverter
 d cached_mat_fullbright
 d cached_r_avglight
 d cached_r_lightcache_numambientsamples
 d cached_r_radiosity
 d cached_r_worldlights
 d cl_jpegquality
 d colorconverter
 d construction vtable for vgui::Button-in-(anonymous namespace)::ScrollBarButton
 d construction vtable for vgui::Label-in-(anonymous namespace)::ScrollBarButton
 d efx
 d facingName
 d flatColor
 d flatColorNoAlpha
 d floatconverter
 d fontconverter
 d gSendPropTypeTokenSet
 d gTypeMap
 d g_ColInfo
 d g_ConVarFlags
 d g_DashboardMusicMixTarget
 d g_DashboardMusicMixValue
 d g_EngineSoundServices
 d g_EstFrameTime
 d g_FileAssociations
 d g_FileDownloadFilter
 d g_FileSystemErrorMode
 d g_GlobalCounter
 d g_HostState
 d g_ImageFormatInfo
 d g_OrientationRotations
 d g_PerfTools
 d g_Phonemes
 d g_PhysDefaultObjectParams
 d g_PreserveDSP
 d g_PrintConVarFlags
 d g_Registry
 d g_SvPure2_ProtectedDirs
 d g_VEngineServer
 d g_filters
 d g_flLastPeriodicMemDump
 d g_flPitchScale
 d g_iLastReplacedDynamic
 d g_iQueryCvarCookie
 d g_nCurrentProgressID
 d g_nSaveQueueState
 d g_nSortType
 d g_nSpewLines
 d g_pInterfaceGlobals
 d g_rgDemoTimingTypeNames
 d g_rgDemoTypeNames
 d g_syncReportLevel
 d g_vox_isector
 d g_warn_enable
 d intconverter
 d io
 d jpeg_std_message_table
 d nOldOcclusionVal
 d nSaveLightStyle
 d originaldrawMRMModelsVal
 d p_floatconverter
 d p_intconverter
 d s_DefaultAccessor
 d s_EngineLoggingListener
 d s_EngineRandomStream
 d s_GameEventTypesMap
 d s_GameListenerTypeMap
 d s_LanguageNames
 d s_LastFileLoadingFrom
 d s_MDLCacheNotify
 d s_MaterialProxyFactory
 d s_RenderView
 d s_SteamAppInfo
 d s_ToolBSPTree
 d s_UseL4DVguiHack
 d s_VisualizationColor
 d s_bSortAscending
 d s_bSortAscendingSecondary
 d s_clcommands
 d s_iDuplicateIndex
 d s_nDLLIdentifier
 d s_pColorCorrectionDmxElementNames
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d s_pEdges
 d saveShadows
 d stringconverter
 d textureidconverter
 d typeinfo for (anonymous namespace)::CaptionGripPanel
 d typeinfo for (anonymous namespace)::GripPanel
 d typeinfo for (anonymous namespace)::ScrollBarButton
 d vgui::Panel::OnOldMessage(KeyValues*, unsigned int)::s_bDebugMessages
 d vgui::ScrollBarSlider::Paint(IVGuiPaintSurface*)::styleNameList
 d voxcomma
 d voxperiod
 d vtable for (anonymous namespace)::CaptionGripPanel
 d vtable for (anonymous namespace)::GripPanel
 d vtable for (anonymous namespace)::ScrollBarButton
 d xposconverter
 d yposconverter
 difftime
 dlclose
 dlerror
 dlopen
 dlsym
 dup
 dyld_stub_binder
 exit
 exp
 fclose
 fdopen$UNIX2003
 ferror
 fflush
 fgetc
 fgets
 floor
 floorf
 fmod
 fmodf
 fopen$UNIX2003
 fprintf
 fputs$UNIX2003
 fread
 free
 fseek
 fstat$INODE64
 ftell
 futimes
 fwrite$UNIX2003
 g_ClockSpeed
 g_ClockSpeedMicrosecondsMultiplier
 g_ClockSpeedMillisecondsMultiplier
 g_ClockSpeedSecondsMultiplier
 g_Telemetry
 g_VProfCurrentProfile
 g_VProfNodeSpikeMinimumMs
 g_VProfNodeSpikeMultiplier
 g_VProfNodeSpikeReporting
 g_VProfSignalSpike
 g_dwClockSpeed
 g_nThreadID
 g_pSteamClientGameServer
 g_pThreadPool
 getcwd
 getenv
 gethostbyname
 gethostname
 getpid
 getpwuid
 getrusage
 getuid
 ioctl
 kCFAllocatorDefault
 kCFProxyAutoConfigurationURLKey
 kCFProxyHostNameKey
 kCFProxyPasswordKey
 kCFProxyPortNumberKey
 kCFProxyTypeAutoConfigurationURL
 kCFProxyTypeHTTP
 kCFProxyTypeKey
 kCFProxyTypeNone
 kCFProxyUsernameKey
 listen$UNIX2003
 localtime
 log
 log10
 longjmp
 lseek
 malloc
 memchr
 memcmp
 memcpy
 memmove
 memset
 memset_pattern16
 mkdir
 mktime$UNIX2003
 mstats
 open$UNIX2003
 operator delete(void*)
 operator delete(void*, std::nothrow_t const&)
 operator delete[](void*)
 operator new(unsigned long)
 operator new(unsigned long, std::nothrow_t const&)
 operator new[](unsigned long)
 pclose
 popen$UNIX2003
 posix_memalign
 pow
 powf
 printf
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 putchar
 puts
 qsort
 r .memset_pattern
 r .memset_pattern1
 r CDebugOverlay::AddCoordFrameOverlay(matrix3x4_t const&, float, int (*) [3])::s_defaultColorTable
 r CURRENT_SAVEFILE_HEADER_TAG
 r Float_SkipProp(SendProp const*, bf_read*)::table
 r GetLocalizationSoundDirectories(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*)::localizationPath
 r IntersectRayWithBox(Ray_t const&, VectorAligned const&, VectorAligned const&, VectorAligned const&, CGameTrace*)::signbits
 r NoiseHashIndex(int)::s_permutation
 r S_StartSound(StartSoundParams_t&)::NULL_SOUND
 r TakeCubemapSnapshot(Vector const&, char const*, int, int, bool)::angle0
 r TakeCubemapSnapshot(Vector const&, char const*, int, int, bool)::angle1
 r TakeCubemapSnapshot(Vector const&, char const*, int, int, bool)::engine_cubemap_idx_to_fbm_idx
 r TakeCubemapSnapshot(Vector const&, char const*, int, int, bool)::face_idx
 r VacClient::k_DirectoryUuid
 r VacClient::k_vMutexNameFormat
 r bf_read::ReadBitCoordMP(EBitCoordType)::mul_table
 r bf_read::ReadBitCoordMP(EBitCoordType)::numbits_table
 r bl_order
 r border
 r configuration_table
 r cpdext
 r cpdist
 r cplens
 r cplext
 r crc_table
 r error_coefficients_lut
 r error_sign_lut
 r extra_blbits
 r extra_dbits
 r extra_lbits
 r extra_pool_slop
 r first_pool_slop
 r fixed_td
 r fixed_tl
 r g_SideVertCorners
 r g_SideVertMul
 r g_localBumpBasis
 r g_nRandomValues
 r g_szDefaultScaleformClientMovieName
 r g_szDefaultScaleformCursorName
 r g_szDefaultScaleformMovieName
 r ice_keyrot
 r ice_pbox
 r ice_smod
 r ice_sxor
 r incs
 r inflate_mask
 r protobuf_AssignDesc_demo_2eproto()::CDemoClassInfo_class_t_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoClassInfo_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoConsoleCmd_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoCustomDataCallbacks_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoCustomData_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoFileHeader_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoFileInfo_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoFullPacket_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoPacket_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoSaveGame_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoSendTables_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoStop_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoStringTables_items_t_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoStringTables_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoStringTables_table_t_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoSyncTick_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CDemoUserCmd_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CGameInfo_CDotaGameInfo_CHeroSelectEvent_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CGameInfo_CDotaGameInfo_CPlayerInfo_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CGameInfo_CDotaGameInfo_offsets_
 r protobuf_AssignDesc_demo_2eproto()::CGameInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_BaselineAck_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_ClientInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_ClientMessage_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_FileCRCCheck_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_ListenEvents_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_LoadingProgress_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_Move_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_RespondCvarValue_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_SplitPlayerConnect_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CCLCMsg_VoiceData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_BSPDecal_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ClassInfo_class_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ClassInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_CreateStringTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_CrosshairAngle_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_FixAngle_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_FullFrameSplit_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_descriptor_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_key_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GameEventList_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_GetCvarValue_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Menu_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_PacketEntities_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_PacketReliable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Prefetch_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Print_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SendTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SendTable_sendprop_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_ServerInfo_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SetPause_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SetView_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Sounds_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_Sounds_sounddata_t_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_SplitScreen_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_TempEntities_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_UpdateStringTable_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_VoiceData_offsets_
 r protobuf_AssignDesc_netmessages_2eproto()::CSVCMsg_VoiceInit_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CMsgQAngle_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CMsgVector2D_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CMsgVector_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CMsg_CVars_CVar_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CMsg_CVars_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_Disconnect_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_File_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_NOP_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_SetConVar_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_SignonState_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_SplitScreenUser_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_StringCmd_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CNETMsg_Tick_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsgList_GameEvents_event_t_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsgList_GameEvents_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsgList_UserMessages_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsgList_UserMessages_usermsg_t_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsg_GameEvent_key_t_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsg_GameEvent_offsets_
 r protobuf_AssignDesc_networkbasetypes_2eproto()::CSVCMsg_UserMessage_offsets_
 r pulCRCTable
 r s_DataTypeByteSize
 r s_Dota681MapHeightFieldDataFilename
 r s_DotaMapHeightFieldDataFilename
 r s_DrawWorldListsToSortGroup
 r s_ExtIndices
 r s_MatIndices
 r s_pAttributeSize
 r s_pBoxFaceIndices
 r s_pBoxFaceIndicesInsideOut
 r s_pDeltaIndices
 r s_pFaceEdges
 r s_pSourceIndices
 r s_pszPasswordMessage
 r snappy::char_table
 r snappy::wordmask
 r start_pass_fdctmgr(jpeg_compress_struct*)::aanscalefactor
 r start_pass_fdctmgr(jpeg_compress_struct*)::aanscales
 r std_chrominance_quant_tbl
 r std_huff_tables(jpeg_compress_struct*)::bits_ac_chrominance
 r std_huff_tables(jpeg_compress_struct*)::bits_ac_luminance
 r std_huff_tables(jpeg_compress_struct*)::bits_dc_chrominance
 r std_huff_tables(jpeg_compress_struct*)::bits_dc_luminance
 r std_huff_tables(jpeg_compress_struct*)::val_ac_chrominance
 r std_huff_tables(jpeg_compress_struct*)::val_ac_luminance
 r std_huff_tables(jpeg_compress_struct*)::val_dc_chrominance
 r std_huff_tables(jpeg_compress_struct*)::val_dc_luminance
 r std_luminance_quant_tbl
 r typeinfo name for (anonymous namespace)::CaptionGripPanel
 r typeinfo name for (anonymous namespace)::GripPanel
 r typeinfo name for (anonymous namespace)::ScrollBarButton
 raise
 read$UNIX2003
 realloc
 recv$UNIX2003
 recvfrom$UNIX2003
 rmdir
 sched_yield
 select$DARWIN_EXTSN
 send$UNIX2003
 sendto$UNIX2003
 setjmp
 setlocale
 setsockopt
 sin
 sinf
 sinh
 snprintf
 socket
 sprintf
 sscanf
 stat$INODE64
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::__throw_bad_alloc()
 std::__throw_length_error(char const*)
 std::__throw_logic_error(char const*)
 std::basic_ios<char, std::char_traits<char> >::widen(char) const
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 std::cerr
 std::exception::~exception()
 std::ios_base::Init::Init()
 std::ios_base::Init::~Init()
 std::nothrow
 std::ostream::flush()
 std::ostream::put(char)
 std::set_new_handler(void (*)())
 std::string::_M_leak_hard()
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
 std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
 std::string::_Rep::_M_destroy(std::allocator<char> const&)
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
 std::string::_Rep::_S_empty_rep_storage
 std::string::_Rep::_S_max_size
 std::string::_Rep::_S_terminal
 std::string::append(char const*, unsigned long)
 std::string::append(std::string const&)
 std::string::append(std::string const&, unsigned long, unsigned long)
 std::string::append(unsigned long, char)
 std::string::assign(char const*, unsigned long)
 std::string::assign(std::string const&)
 std::string::compare(char const*) const
 std::string::compare(std::string const&) const
 std::string::compare(unsigned long, unsigned long, std::string const&) const
 std::string::end()
 std::string::erase(unsigned long, unsigned long)
 std::string::find(char, unsigned long) const
 std::string::push_back(char)
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
 std::string::reserve(unsigned long)
 std::string::resize(unsigned long, char)
 std::string::rfind(char, unsigned long) const
 std::string::substr(unsigned long, unsigned long) const
 std::terminate()
 strcasecmp
 strcat
 strchr
 strcmp
 strcpy
 strdup
 strerror$UNIX2003
 strftime$UNIX2003
 strlen
 strncat
 strncmp
 strncpy
 strpbrk
 strrchr
 strstr
 strtod$UNIX2003
 strtof$UNIX2003
 strtok
 strtol
 strtoll
 strtoul
 strtoull
 swprintf
 swscanf
 sysctl
 system$UNIX2003
 t (anonymous namespace)::CaptionGripPanel::CaptionGripPanel(vgui::Frame*, char const*)
 t (anonymous namespace)::CaptionGripPanel::moved(int, int)
 t (anonymous namespace)::CaptionGripPanel::tryToDock(unsigned int, int&, int&)
 t (anonymous namespace)::CaptionGripPanel::~CaptionGripPanel()
 t (anonymous namespace)::GripPanel::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::GripPanel::GripPanel(vgui::Frame*, char const*, int, int)
 t (anonymous namespace)::GripPanel::OnCursorMoved(int, int)
 t (anonymous namespace)::GripPanel::OnMouseCaptureLost()
 t (anonymous namespace)::GripPanel::OnMouseDoublePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::GripPanel::Paint(IVGuiPaintSurface*)
 t (anonymous namespace)::GripPanel::PaintBackground(IVGuiPaintSurface*)
 t (anonymous namespace)::GripPanel::moved(int, int)
 t (anonymous namespace)::GripPanel::~GripPanel()
 t (anonymous namespace)::ScrollBarButton::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::ScrollBarButton::OnMouseFocusTicked()
 t (anonymous namespace)::ScrollBarButton::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::~ScrollBarButton()
 t (anonymous namespace)::protobuf_RegisterTypes(std::string const&)
 t AddDLights(LightingStateInfo_t&, LightingState_t&, Vector const&, int, unsigned char const*, IClientRenderable const*)
 t AddELights(LightingStateInfo_t&, LightingState_t&, Vector const&, int, unsigned char const*, IClientRenderable const*)
 t AddPlaneToList(CUtlVector<cplane_t, CUtlMemory<cplane_t, int> >&, Vector const&, float, int)
 t AddRecvTableR(SendTable*, RecvTable**, int&)
 t AddWorldLightToLightCube(dworldlight_t*, Vector*, Vector const&, float)
 t AddWorldLightToLightingState(dworldlight_t*, CCubeMap<LightShadowZBufferSample_t, 8>*, LightingState_t&, LightingStateInfo_t&, Vector const&, unsigned char const*, bool, bool, bool)
 t AppendPrintf(char*, int, char const*, ...)
 t AscendingSortFunc(void const*, void const*)
 t AudioCallback(void*, OpaqueAudioQueue*, AudioQueueBuffer*)
 t AutoSave_Silent(bool)
 t B_spline_filter(float)
 t BindToggle(CCommandContext const&, CCommand const&)
 t BuildSingleCubemap(char const*, Vector const&, int, bool, char const*, IVTex*, CCubemapCollection*)
 t BuildSpriteLoadName(char const*, char*, int, bool&, bool&)
 t BuildTokenList(char const*, char, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t CCPairLessFunc(ccpair const&, ccpair const&)
 t CL_AllocLightFromArray(dlight_t*, int, int)
 t CL_SoundMessageLessFunc(SoundInfo_t const&, SoundInfo_t const&)
 t CM_GetCollideableTriggerTestBox(ICollideable*, Vector*, Vector*, bool)
 t CM_TestBoxInBrush(TraceInfo_t*, cbrush_t const*)
 t CToolFrameworkInternal_QuitHandler(void*)
 t CVarSortFunc(ConVar* const&, ConVar* const&)
 t CalcColor(SphereCalc_t*, int, Vector const&, unsigned char*)
 t CalcHemisphereColor(SphereCalc_t*, float, float)
 t Callback_SteamAPIWarningMessageHook(int, char const*)
 t ChannelLongestElapsedTimeSortFunc(int const*, int const*)
 t ChannelVolComparator(void const*, void const*)
 t CheckSmallVolumeDifferences(mnode_t*, Vector const&)
 t ClearNodeClientData(CVProfNode*)
 t ComputeAmbientFromAxisAlignedSamples(Vector const&, Vector*)
 t ComputeAmbientFromSphericalSamples(Vector const&, Vector*)
 t ComputeLightmapColor(msurface2_t*, int, int, bool, Vector&)
 t ComputeLightmapFromLightstyle(msurfacelighting_t*, bool, bool, int, bool)
 t ComputeRayBounds(Ray_t const&, Vector&, Vector&)
 t ComputeStaticLightingForCacheEntry(CBaseLightCache*, Vector const&, int, bool)
 t ConCommandBaseLessFunc(ConCommandBase const* const&, ConCommandBase const* const&)
 t ConVarNetworkChangeCallback(IConVar*, char const*, float)
 t Con_LogColorCallback(LoggingChannel_t const*, char const*)
 t Con_LogFlagsCallback(LoggingChannel_t const*, char const*)
 t Con_LogFunctionHelper(CCommand const&, bool (*)(LoggingChannel_t const*, char const*))
 t Con_LogLevelCallback(LoggingChannel_t const*, char const*)
 t Con_LogVerbosityCallback(LoggingChannel_t const*, char const*)
 t CopySendPropsToRecvProps(CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >&, CUtlVector<SendProp const*, CUtlMemory<SendProp const*, int> > const&, CUtlVector<RecvProp const*, CUtlMemory<RecvProp const*, int> >&)
 t CreateColorOp(ColorCorrectionTool_t, CColorOperationList*)
 t Create_AnimatingImagePanel()
 t Create_Button()
 t Create_CBitmapImagePanel()
 t Create_CTreeViewListControl()
 t Create_CheckButton()
 t Create_CircularProgressBar()
 t Create_ContinuousProgressBar()
 t Create_Divider()
 t Create_EditablePanel()
 t Create_ExpandButton()
 t Create_GraphPanel()
 t Create_ImagePanel()
 t Create_Label()
 t Create_ListPanel()
 t Create_ListViewPanel()
 t Create_Menu()
 t Create_MenuBar()
 t Create_MenuButton()
 t Create_MenuItem()
 t Create_Panel()
 t Create_ProgressBar()
 t Create_RadioButton()
 t Create_RichText()
 t Create_ScalableImagePanel()
 t Create_Slider()
 t Create_TextEntry()
 t Create_ToggleButton()
 t Create_TreeView()
 t CubeFace(CMeshBuilder&, Vector, int, int, int, int, float, color32 const&)
 t DataTable_MaybeWriteSendTableBuffer_R(SendTable*, bf_write*)
 t DecalDepthCompare(decallist_t const*, decallist_t const*)
 t DecodeFloat(SendProp const*, bf_read*)
 t DefaultSortFunc(KeyValues*, KeyValues*)
 t DefaultSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t DeltaFloat(float, float)
 t DemoRecord(char const*, bool)
 t DoNothing(CVProfile*)
 t DrawAxes(Vector const&, Vector*, int, Color, CMeshBuilder&)
 t DrawDebugInformation(msurface2_t**, int)
 t DrawExtrusionFace(Vector const&, Vector const&, Vector*, int, int, Color, CMeshBuilder&)
 t DrawLightSprite(dworldlight_t*, float)
 t DrawShadowID(unsigned short, Vector const&)
 t DrawSurfaceID(msurface2_t*, Vector const&)
 t DrawSurfaceIDAsInt(msurface2_t*, Vector const&)
 t EncodeFloat(SendProp const*, float, bf_write*, int)
 t EnumerateLeavesAlongExtrudedRay_R(mnode_t*, Ray_t const&, float, float, ISpatialLeafEnumerator*, int)
 t EnumerateLeavesAlongRay_R(mnode_t*, Ray_t const&, float, float, ISpatialLeafEnumerator*, int)
 t FastSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t FileBrowserSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t FileSystem_AddLoadedSearchPath(CFSSearchPathsInit&, char const*, bool*, bool, char const*, char const*, bool)
 t Filter_Add_f(CCommand const&)
 t Filter_ConvertString(char const*, ipfilter_t*)
 t FindIntersectionAtSurface(msurface2_t*, float, Vector&, LightVecState_t&)
 t FindNeighborCornerVert(CCoreDispInfo*, Vector const&)
 t FmtCommaNumber(char*, unsigned int)
 t FnCreateCDemoActionCDTrackStart()
 t FnCreateCDemoActionCDTrackStop()
 t FnCreateCDemoActionChangePlaybackRate()
 t FnCreateCDemoActionPausePlayback()
 t FnCreateCDemoActionPlayCommands()
 t FnCreateCDemoActionPlaySoundStart()
 t FnCreateCDemoActionScreenFadeStart()
 t FnCreateCDemoActionSkipAhead()
 t FnCreateCDemoActionStopPlayback()
 t FnCreateCDemoActionTextMessageStart()
 t FnCreateCDemoActionZoom()
 t FnCreateEditorCBaseActionCDTrackStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionChangePlaybackRateDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionPauseDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionPlayCommandsDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionPlaySoundStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionScreenFadeStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionSkipAheadDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionStopPlaybackDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionTextMessageStartDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t FnCreateEditorCBaseActionZoomDialog(CDemoEditorPanel*, CBaseDemoAction*, bool)
 t GenerateBoxVertices(Vector const&, QAngle const&, Vector const&, Vector const&, Vector*)
 t GetLocalizationSoundDirectories(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*)
 t GetSoundDirectories(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*, bool)
 t GetSpeakerVol(float, float, float, float, int, int, bool)
 t HLTV_Callback_InstanceBaseline(void*, INetworkStringTable*, int, char const*, void const*)
 t HostTimeScale_ChangeCallback(IConVar*, char const*, float)
 t Host_Background_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Changelevel2_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Changelevel_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Map_Commentary_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Map_Network_Backdoor_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Map_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t Host_Maps_f(CCommandContext const&, CCommand const&)
 t Host_SSMap_f_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t HostnameChanged(IConVar*, char const*, float)
 t ImageLoader::A8ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::ABGR8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::ARGB8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR565ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR888_BLUESCREENToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA10101012ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA4444ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA5551ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRX5551ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRX8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::GenerateBicubicFilter(float, float, float, int, float*, float*)
 t ImageLoader::GenerateNiceFilter(float, float, float, int, float*, float*)
 t ImageLoader::I8ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::IA88ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::R32FloatToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGB888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGB888_BLUESCREENToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA10101012ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA16161616ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToA8(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToABGR8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToARGB8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR565(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR888_BLUESCREEN(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA4444(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA5551(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRX5551(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRX8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToI8(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToIA88(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToR32F(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRG3232F(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGB323232F(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGB888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGB888_BLUESCREEN(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGBA16161616F(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGBA32323232F(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUV88(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUVLX8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUVWQ8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UV88ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UVLX8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UVWQ8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t InitFileData(bool, char const*, char const*, vgui::FileData_t&)
 t InitPowerInfoTriInfos_R(CPowerInfo*, CVertIndex const&, CTriInfo*&, int, int)
 t InitPowerInfo_R(CPowerInfo*, int, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, int)
 t InternalFactory(char const*, int*)
 t InternalWriteDeltaEntities(CBaseServer*, CBaseClient*, CClientFrame*, CClientFrame*, CNetMessagePB<26, CSVCMsg_PacketEntities, 3, true>&, unsigned char*, unsigned int)
 t KickIdOnServer(CCommand const&, CBaseServer*)
 t KilobytesSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t LightIntensityAndDirectionAtPoint(dworldlight_t*, CCubeMap<LightShadowZBufferSample_t, 8>*, Vector const&, int, IHandleEntity*, Vector*)
 t LightIntensityAndDirectionInBox(dworldlight_t*, CCubeMap<LightShadowZBufferSample_t, 8>*, Vector const&, Vector const&, Vector const&, int, Vector*)
 t LightmapLess(msurface2_t* const&, msurface2_t* const&)
 t ListBaseInteger64SortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&, char const*)
 t ListBaseStringSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&, char const*)
 t ListFileAttributesSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t ListFileModifiedSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t ListFileNameSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t ListFileSizeSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t ListFileTypeSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t LoadSaveGame(char const*, bool)
 t MD5Transform(unsigned int*, unsigned int const*)
 t MXR_GetSoundMixer(CCommand const&)
 t MXR_ListMixGroups(CCommand const&)
 t MXR_ListMixLayers(CCommand const&)
 t MXR_ListMixers(CCommand const&)
 t MXR_PrintMixGroups(soundmixer_t*)
 t MXR_SetMixLayer(CCommand const&)
 t MXR_SetMixLayerAmount(CCommand const&)
 t MXR_SetMixLayerTriggerFactor(CCommand const&)
 t MXR_SetSoundMixer(CCommand const&)
 t MapEntity_ParseToken(char const*, char*)
 t MapList_CountMaps(char const*, bool, int&)
 t MapList_ListMaps(char const*, bool, bool, int, int, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t MarkSmallNode(mnode_t*)
 t MatCombinedCallback(IConVar*, char const*, float)
 t MatchRecvPropsToSendProps_R(CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >&, char const*, SendTable*, RecvTable*, bool, bool*)
 t MiniDumpPreMinidumpCallback()
 t ModelInstanceHash(ModelInstanceHashPair_t const&)
 t ModelInstanceHashCompare(ModelInstanceHashPair_t const&, ModelInstanceHashPair_t const&)
 t OnChangeTelemetryDemoEnd(IConVar*, char const*, float)
 t OnChangeTelemetryDemoStart(IConVar*, char const*, float)
 t OnChangeTelemetryFrameCount(IConVar*, char const*, float)
 t OnChangeTelemetryLevel(IConVar*, char const*, float)
 t OnChangeTelemetryPause(IConVar*, char const*, float)
 t OnChangeTelemetryResume(IConVar*, char const*, float)
 t OnChangeTelemetryServer(IConVar*, char const*, float)
 t OnChangeTelemetryZoneFilterVal(IConVar*, char const*, float)
 t OnSndVarChanged(IConVar*, char const*, float)
 t OperationSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t ParsePerforceInfFile(char const*, unsigned long long&)
 t ParseSteamInfFile(char const*, char const*, char const*)
 t ProcessLightmapSample(ProcessLightmapSampleData_t const&, Vector const&, Vector const&, Vector const&, Vector const&, int, int, int, int)
 t ProcessLightmapSampleAlpha(ProcessLightmapSampleData_t const&, Vector const&, Vector const&, Vector const&, Vector const&, int, int, int, int)
 t ProcessLightmapSampleBumped(ProcessLightmapSampleData_t const&, Vector const&, Vector const&, Vector const&, Vector const&, int, int, int, int)
 t R_DecalMaterialSort(decal_t*, msurface2_t*)
 t R_DecalNode(mnode_t*, decalinfo_t*)
 t R_DecalShoot_(IMaterial*, int, model_t const*, Vector const&, Vector const*, int, color32 const&, Vector const*, void*)
 t R_FlowThroughArea(int, Vector const&, CPortalRect const*, VisOverrideData_t const*, float*)
 t R_RecursiveWorldNode(CWorldRenderList*, mnode_t*)
 t R_RenderWorldTopView(CWorldRenderList*, mnode_t*)
 t R_SetNonAmbientLightingState(int, dworldlight_t**, int*, LightDesc_t*, bool)
 t RconAddressChanged_f(IConVar*, char const*, float)
 t RconPasswordChanged_f(IConVar*, char const*, float)
 t ReadMP3FrameHeader(int, MP3FrameHeader*)
 t RecvTable_Init(RecvTable**, int)::CPropVisitor::Visit_R(RecvTable*)
 t RecvTable_Term(bool)::CPropVisitor::Visit_R(RecvTable*)
 t Register_LOG_SND_OPERATORS_Tags(int)
 t Register_LOG_SOUND_OPERATOR_SYSTEM_Tags(int)
 t RenderTexturedRect(vgui::Panel*, IMaterial*, int, int, int, int, int, int)
 t ReslistLogLessFunc(CUtlString const&, CUtlString const&)
 t SV_CheatsChanged_f(IConVar*, char const*, float)
 t SV_MaybeWriteSendTable_R(SendTable*, bf_write&)
 t SV_PackEntity(int, edict_t*, ServerClass*, CFrameSnapshot*)
 t SV_Pure_f(CCommand const&)
 t SV_WriteDeltaHeader(CEntityWriteInfo&, int, int)
 t S_Play(CCommand const&)
 t S_PlayDelay(CCommand const&)
 t S_PlayVol(CCommand const&)
 t S_Say(CCommand const&)
 t S_StartSound_Immediate(StartSoundParams_t&)
 t SaveFileLessFunc(CUtlSymbol const&, CUtlSymbol const&)
 t SaveGame(CCommand const&)
 t SendTable_CalcNextVectorElems(SendTable*)
 t SendTable_GetPropsExcluded(SendTable const*, ExcludeProp*, int&, int)
 t ServerNotifyVarChangeCallback(IConVar*, char const*, float)
 t SetDataTableProxyIndices_R(CSendTablePrecalc*, CSendNode*, CBuildHierarchyStruct*)
 t SetMasterServerKeyValue(ISteamGameServer*, IConVar*)
 t SetNodeFlagBits(mnode_t*)
 t SetRecursiveProxyIndices_R(SendTable*, CSendNode*, int&)
 t Shader_DrawDispChain(int, CMSurfaceSortList const&, unsigned long, ERenderDepthMode)
 t Shader_DrawDynamicChain(CMSurfaceSortList const&, surfacesortgroup_t const&, bool)
 t Shader_WorldEnd(CWorldRenderList*, unsigned long, float)
 t Shader_WorldZFillSurfChain_Single(msurface2_t*, CMeshBuilder&, int&)
 t SortAttributeByName(void const*, void const*)
 t SortSurfacesByLightmapID(msurface2_t**, int)
 t SpewEdicts()::EdictSorter_t::SortEdicts(SpewEdicts()::EdictCount_t* const*, SpewEdicts()::EdictCount_t* const*)
 t StringToTick(char const*)
 t SvPasswordChangeCallback(IConVar*, char const*, float)
 t SvSearchKeyChangeCallback(IConVar*, char const*, float)
 t SvTagsChangeCallback(IConVar*, char const*, float)
 t Sys_LoadLibrary(char const*)
 t Sys_LoadLibraryGuts(char const*)
 t TakeCubemapSnapshot(Vector const&, char const*, int, int, bool)
 t Test_RandomChance(CCommandContext const&, CCommand const&)
 t Test_SendKey(CCommandContext const&, CCommand const&)
 t Test_StartScript(CCommandContext const&, CCommand const&)
 t TextureCVarChangedCallBack(IConVar*, char const*, float)
 t UseDebugMaterial(char const*, ITexture*, CAutoMatSysDebugMode*)
 t VGui_PlaySound(char const*)
 t VGui_RecursePanel(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, int, int, unsigned int, bool)
 t VGui_RecursiveFindPanels(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, unsigned int, char const*)
 t VID_ProcessMovieFrame(MovieInfo_t const&, bool, char const*, int, int, unsigned char*)
 t VOX_BuildVirtualNameList(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
 t VOX_Reload()
 t ValidateIncrementalChanges(SendTable const*, CUtlVectorFixedGrowable<int, 128ul> const&, edict_t*, int, int)
 t VideoModeCompare(void const*, void const*)
 t VideoMode_AdjustForModeChange()
 t WatchDogHandler()
 t WorldLightFromDynamicLight(dlight_t const&, dworldlight_t&)
 t WriteSendTableToCacheBuffer(CUtlBuffer&, CSVCMsg_SendTable const&)
 t __CreateCBlackBoxIBlackBox_interface()
 t __CreateCClientEngineToolsIClientEngineTools_interface()
 t __CreateCCvarQueryICvarQuery_interface()
 t __CreateCDedicatedServerAPIIDedicatedServerAPI_interface()
 t __CreateCEngineAPIIEngineAPI_interface()
 t __CreateCEngineClientIVEngineClient_interface()
 t __CreateCEngineSoundClientIEngineSound_interface()
 t __CreateCEngineSoundServerIEngineSound_interface()
 t __CreateCEngineToolIEngineToolFramework_interface()
 t __CreateCEngineToolIEngineTool_interface()
 t __CreateCEngineTraceClientIEngineTrace_interface()
 t __CreateCEngineTraceServerIEngineTrace_interface()
 t __CreateCEngineUniformRandomStreamIUniformRandomStream_interface()
 t __CreateCEngineVGuiIEngineVGui_interface()
 t __CreateCFileLoggingListenerIFileLoggingListener_interface()
 t __CreateCGameEventManagerIGameEventManager2_interface()
 t __CreateCGameEventManagerOldIGameEventManager_interface()
 t __CreateCGameUIFuncsIGameUIFuncs_interface()
 t __CreateCIVDebugOverlayIVDebugOverlay_interface()
 t __CreateCIVDebugOverlayIVPhysicsDebugOverlay_interface()
 t __CreateCKeyValueCacheIKeyValueCache_interface()
 t __CreateCModelInfoClientIVModelInfoClient_interface()
 t __CreateCModelInfoServerIVModelInfo_interface()
 t __CreateCModelRenderIVModelRender_interface()
 t __CreateCNetSupportImplINetSupport_interface()
 t __CreateCNetworkStringTableContainerINetworkStringTableContainer_interface()
 t __CreateCServerEngineToolsIServerEngineTools_interface()
 t __CreateCServerRemoteAccessIGameServerData_interface()
 t __CreateCShadowMgrIShadowMgr_interface()
 t __CreateCSpatialPartitionISpatialPartition_interface()
 t __CreateCStaticPropMgrIStaticPropMgrClient_interface()
 t __CreateCStaticPropMgrIStaticPropMgrServer_interface()
 t __CreateCToolFrameworkInternalIToolFrameworkInternal_interface()
 t __CreateCUploadGameStatsIUploadGameStats_interface()
 t __CreateCVEfxIVEfx_interface()
 t __CreateCVEngineServerIVEngineServer_interface()
 t __CreateCVProfExportIVProfExport_interface()
 t __CreateCVRenderViewIVRenderView_interface()
 t __CreateCVoiceServerIVoiceServer_interface()
 t __CreateCXboxSystemIXboxSystem_interface()
 t __cxx_global_array_dtor
 t __cxx_global_var_init1
 t __cxx_global_var_init10
 t __cxx_global_var_init100
 t __cxx_global_var_init101
 t __cxx_global_var_init102
 t __cxx_global_var_init104
 t __cxx_global_var_init105
 t __cxx_global_var_init106
 t __cxx_global_var_init107
 t __cxx_global_var_init108
 t __cxx_global_var_init109
 t __cxx_global_var_init11
 t __cxx_global_var_init112
 t __cxx_global_var_init113
 t __cxx_global_var_init114
 t __cxx_global_var_init115
 t __cxx_global_var_init12
 t __cxx_global_var_init127
 t __cxx_global_var_init128
 t __cxx_global_var_init129
 t __cxx_global_var_init13
 t __cxx_global_var_init130
 t __cxx_global_var_init131
 t __cxx_global_var_init132
 t __cxx_global_var_init133
 t __cxx_global_var_init134
 t __cxx_global_var_init135
 t __cxx_global_var_init136
 t __cxx_global_var_init137
 t __cxx_global_var_init138
 t __cxx_global_var_init14
 t __cxx_global_var_init146
 t __cxx_global_var_init147
 t __cxx_global_var_init148
 t __cxx_global_var_init149
 t __cxx_global_var_init15
 t __cxx_global_var_init150
 t __cxx_global_var_init151
 t __cxx_global_var_init152
 t __cxx_global_var_init153
 t __cxx_global_var_init154
 t __cxx_global_var_init155
 t __cxx_global_var_init156
 t __cxx_global_var_init157
 t __cxx_global_var_init158
 t __cxx_global_var_init159
 t __cxx_global_var_init16
 t __cxx_global_var_init160
 t __cxx_global_var_init161
 t __cxx_global_var_init162
 t __cxx_global_var_init163
 t __cxx_global_var_init164
 t __cxx_global_var_init165
 t __cxx_global_var_init166
 t __cxx_global_var_init167
 t __cxx_global_var_init168
 t __cxx_global_var_init169
 t __cxx_global_var_init17
 t __cxx_global_var_init170
 t __cxx_global_var_init171
 t __cxx_global_var_init172
 t __cxx_global_var_init173
 t __cxx_global_var_init174
 t __cxx_global_var_init175
 t __cxx_global_var_init176
 t __cxx_global_var_init177
 t __cxx_global_var_init178
 t __cxx_global_var_init179
 t __cxx_global_var_init18
 t __cxx_global_var_init180
 t __cxx_global_var_init182
 t __cxx_global_var_init183
 t __cxx_global_var_init184
 t __cxx_global_var_init185
 t __cxx_global_var_init19
 t __cxx_global_var_init190
 t __cxx_global_var_init191
 t __cxx_global_var_init192
 t __cxx_global_var_init193
 t __cxx_global_var_init194
 t __cxx_global_var_init195
 t __cxx_global_var_init196
 t __cxx_global_var_init197
 t __cxx_global_var_init198
 t __cxx_global_var_init199
 t __cxx_global_var_init2
 t __cxx_global_var_init20
 t __cxx_global_var_init202
 t __cxx_global_var_init203
 t __cxx_global_var_init204
 t __cxx_global_var_init205
 t __cxx_global_var_init21
 t __cxx_global_var_init212
 t __cxx_global_var_init213
 t __cxx_global_var_init214
 t __cxx_global_var_init215
 t __cxx_global_var_init216
 t __cxx_global_var_init22
 t __cxx_global_var_init226
 t __cxx_global_var_init227
 t __cxx_global_var_init228
 t __cxx_global_var_init229
 t __cxx_global_var_init23
 t __cxx_global_var_init230
 t __cxx_global_var_init231
 t __cxx_global_var_init232
 t __cxx_global_var_init233
 t __cxx_global_var_init234
 t __cxx_global_var_init235
 t __cxx_global_var_init236
 t __cxx_global_var_init237
 t __cxx_global_var_init238
 t __cxx_global_var_init239
 t __cxx_global_var_init24
 t __cxx_global_var_init240
 t __cxx_global_var_init241
 t __cxx_global_var_init242
 t __cxx_global_var_init243
 t __cxx_global_var_init244
 t __cxx_global_var_init245
 t __cxx_global_var_init246
 t __cxx_global_var_init247
 t __cxx_global_var_init248
 t __cxx_global_var_init249
 t __cxx_global_var_init25
 t __cxx_global_var_init250
 t __cxx_global_var_init251
 t __cxx_global_var_init252
 t __cxx_global_var_init253
 t __cxx_global_var_init254
 t __cxx_global_var_init255
 t __cxx_global_var_init256
 t __cxx_global_var_init26
 t __cxx_global_var_init27
 t __cxx_global_var_init28
 t __cxx_global_var_init29
 t __cxx_global_var_init3
 t __cxx_global_var_init30
 t __cxx_global_var_init301
 t __cxx_global_var_init302
 t __cxx_global_var_init303
 t __cxx_global_var_init304
 t __cxx_global_var_init31
 t __cxx_global_var_init32
 t __cxx_global_var_init33
 t __cxx_global_var_init34
 t __cxx_global_var_init346
 t __cxx_global_var_init347
 t __cxx_global_var_init348
 t __cxx_global_var_init349
 t __cxx_global_var_init35
 t __cxx_global_var_init36
 t __cxx_global_var_init37
 t __cxx_global_var_init38
 t __cxx_global_var_init39
 t __cxx_global_var_init4
 t __cxx_global_var_init40
 t __cxx_global_var_init41
 t __cxx_global_var_init42
 t __cxx_global_var_init423
 t __cxx_global_var_init424
 t __cxx_global_var_init425
 t __cxx_global_var_init426
 t __cxx_global_var_init427
 t __cxx_global_var_init43
 t __cxx_global_var_init44
 t __cxx_global_var_init45
 t __cxx_global_var_init46
 t __cxx_global_var_init47
 t __cxx_global_var_init48
 t __cxx_global_var_init49
 t __cxx_global_var_init5
 t __cxx_global_var_init50
 t __cxx_global_var_init51
 t __cxx_global_var_init52
 t __cxx_global_var_init53
 t __cxx_global_var_init54
 t __cxx_global_var_init55
 t __cxx_global_var_init56
 t __cxx_global_var_init57
 t __cxx_global_var_init58
 t __cxx_global_var_init59
 t __cxx_global_var_init6
 t __cxx_global_var_init60
 t __cxx_global_var_init61
 t __cxx_global_var_init62
 t __cxx_global_var_init63
 t __cxx_global_var_init64
 t __cxx_global_var_init65
 t __cxx_global_var_init66
 t __cxx_global_var_init67
 t __cxx_global_var_init68
 t __cxx_global_var_init69
 t __cxx_global_var_init7
 t __cxx_global_var_init70
 t __cxx_global_var_init71
 t __cxx_global_var_init72
 t __cxx_global_var_init73
 t __cxx_global_var_init74
 t __cxx_global_var_init75
 t __cxx_global_var_init76
 t __cxx_global_var_init77
 t __cxx_global_var_init78
 t __cxx_global_var_init79
 t __cxx_global_var_init8
 t __cxx_global_var_init80
 t __cxx_global_var_init81
 t __cxx_global_var_init82
 t __cxx_global_var_init83
 t __cxx_global_var_init84
 t __cxx_global_var_init85
 t __cxx_global_var_init86
 t __cxx_global_var_init87
 t __cxx_global_var_init88
 t __cxx_global_var_init89
 t __cxx_global_var_init9
 t __cxx_global_var_init90
 t __cxx_global_var_init91
 t __cxx_global_var_init92
 t __cxx_global_var_init93
 t __cxx_global_var_init94
 t __cxx_global_var_init95
 t __cxx_global_var_init96
 t __cxx_global_var_init97
 t __cxx_global_var_init98
 t __cxx_global_var_init99
 t _autosave(CCommandContext const&, CCommand const&)
 t _autosavedangerous(CCommandContext const&, CCommand const&)
 t _bugreporter_restart(CCommandContext const&, CCommand const&)
 t _record(CCommandContext const&, CCommand const&)
 t _restart(CCommandContext const&, CCommand const&)
 t access_virt_barray(jpeg_common_struct*, jvirt_barray_control*, unsigned int, unsigned int, int)
 t access_virt_sarray(jpeg_common_struct*, jvirt_sarray_control*, unsigned int, unsigned int, int)
 t add_huff_table(jpeg_compress_struct*, JHUFF_TBL**, unsigned char const*, unsigned char const*)
 t add_pair_to_block(EState*)
 t alias(CCommandContext const&, CCommand const&)
 t alloc_barray(jpeg_common_struct*, int, unsigned int, unsigned int)
 t alloc_large(jpeg_common_struct*, int, unsigned long)
 t alloc_sarray(jpeg_common_struct*, int, unsigned int, unsigned int)
 t alloc_small(jpeg_common_struct*, int, unsigned long)
 t arith_encode(jpeg_compress_struct*, unsigned char*, int)
 t asw_engine_finished_building_map(CCommandContext const&, CCommand const&)
 t audit_save_in_memory(CCommandContext const&, CCommand const&)
 t autosave(CCommandContext const&, CCommand const&)
 t autosavedangerous(CCommandContext const&, CCommand const&)
 t autosavedangerousissafe(CCommandContext const&, CCommand const&)
 t banid(CCommandContext const&, CCommand const&)
 t bell_filter(float)
 t bench_end(CCommandContext const&, CCommand const&)
 t bench_start(CCommandContext const&, CCommand const&)
 t bench_upload(CCommandContext const&, CCommand const&)
 t bind(CCommandContext const&, CCommand const&)
 t blackbox_dump(CCommandContext const&, CCommand const&)
 t blackbox_record(CCommandContext const&, CCommand const&)
 t blackman_filter(float)
 t box(CCommandContext const&, CCommand const&)
 t box_filter(float)
 t bsPutUInt32(EState*, unsigned int)
 t budget(CCommandContext const&, CCommand const&)
 t budget_toggle_group(CCommandContext const&, CCommand const&)
 t bug(CCommandContext const&, CCommand const&)
 t buildcubemaps(CCommandContext const&, CCommand const&)
 t bzopen_or_bzdopen(char const*, int, char const*, int)
 t cache_print(CCommandContext const&, CCommand const&)
 t cache_print_lru(CCommandContext const&, CCommand const&)
 t cache_print_summary(CCommandContext const&, CCommand const&)
 t catmull_rom_filter(float)
 t cl_fullupdate(CCommandContext const&, CCommand const&)
 t cl_precacheinfo(CCommandContext const&, CCommand const&)
 t cl_showents(CCommandContext const&, CCommand const&)
 t cl_view(CCommandContext const&, CCommand const&)
 t cmd(CCommandContext const&, CCommand const&)
 t cmd1(CCommandContext const&, CCommand const&)
 t cmd2(CCommandContext const&, CCommand const&)
 t cmd3(CCommandContext const&, CCommand const&)
 t cmd4(CCommandContext const&, CCommand const&)
 t cmyk_ycck_convert(jpeg_compress_struct*, unsigned char**, unsigned char***, unsigned int, int)
 t combine_disp_images(CCommandContext const&, CCommand const&)
 t compress_data(jpeg_compress_struct*, unsigned char***)
 t compress_first_pass(jpeg_compress_struct*, unsigned char***)
 t compress_output(jpeg_compress_struct*, unsigned char***)
 t connect(CCommandContext const&, CCommand const&)
 t connect_hltv(CCommandContext const&, CCommand const&)
 t connect_splitscreen(CCommandContext const&, CCommand const&)
 t crash(CCommandContext const&, CCommand const&)
 t crash_error(CCommandContext const&, CCommand const&)
 t crash_job(CCommandContext const&, CCommand const&)
 t crash_thread(CCommandContext const&, CCommand const&)
 t curlHeaderFn(void*, unsigned long, unsigned long, void*)
 t curlWriteFn(void*, unsigned long, unsigned long, void*)
 t cvarlist(CCommandContext const&, CCommand const&)
 t default_bzalloc(void*, int, int)
 t default_bzfree(void*, void*)
 t demo_goto(CCommandContext const&, CCommand const&)
 t demo_gototick(CCommandContext const&, CCommand const&)
 t demo_info(CCommandContext const&, CCommand const&)
 t demo_pause(CCommandContext const&, CCommand const&)
 t demo_resume(CCommandContext const&, CCommand const&)
 t demo_timescale(CCommandContext const&, CCommand const&)
 t demo_togglepause(CCommandContext const&, CCommand const&)
 t demolist(CCommandContext const&, CCommand const&)
 t demos(CCommandContext const&, CCommand const&)
 t devshots_screenshot(CCommandContext const&, CCommand const&)
 t differences(CCommandContext const&, CCommand const&)
 t disconnect(CCommandContext const&, CCommand const&)
 t display_elapsedtime(CCommandContext const&, CCommand const&)
 t dumpsavedir(CCommandContext const&, CCommand const&)
 t dumpstringtables(CCommandContext const&, CCommand const&)
 t echo(CCommandContext const&, CCommand const&)
 t emit_dht(jpeg_compress_struct*, int, int)
 t emit_dqt(jpeg_compress_struct*, int)
 t emit_eobrun(huff_entropy_encoder*)
 t emit_message(jpeg_common_struct*, int)
 t emit_restart(jpeg_compress_struct*, int)
 t emit_restart_e(huff_entropy_encoder*, int)
 t emit_sof(jpeg_compress_struct*, JPEG_MARKER)
 t empty_output_buffer(jpeg_compress_struct*)
 t encode_mcu(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_AC_first(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_AC_refine(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_DC_first(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_DC_refine(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_gather(jpeg_compress_struct*, short (**) [64])
 t encode_mcu_huff(jpeg_compress_struct*, short (**) [64])
 t endmovie(CCommandContext const&, CCommand const&)
 t envmap(CCommandContext const&, CCommand const&)
 t error_exit(jpeg_common_struct*)
 t escape(CCommandContext const&, CCommand const&)
 t fallbackSort(unsigned int*, unsigned int*, unsigned int*, int, int)
 t findflags(CCommandContext const&, CCommand const&)
 t finish_pass(jpeg_compress_struct*)
 t finish_pass_gather(jpeg_compress_struct*)
 t finish_pass_huff(jpeg_compress_struct*)
 t finish_pass_master(jpeg_compress_struct*)
 t flush(CCommandContext const&, CCommand const&)
 t flush_locked(CCommandContext const&, CCommand const&)
 t format_message(jpeg_common_struct*, char*)
 t forward_DCT(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, short (*) [64], unsigned int, unsigned int, unsigned int)
 t forward_DCT_float(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, short (*) [64], unsigned int, unsigned int, unsigned int)
 t free_pool(jpeg_common_struct*, int)
 t fs_printopenfiles(CCommandContext const&, CCommand const&)
 t fs_syncdvddevcache(CCommandContext const&, CCommand const&)
 t fs_warning_level(CCommandContext const&, CCommand const&)
 t fullsize_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t fullsize_smooth_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t g_ToolLoad_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_ToolUnload_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_benchframe_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_exec_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_execifexists_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_listdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_load_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_playdemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_timedemo_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_timedemo_vprofrecord_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t g_timedemoquit_CompletionFunc(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 t gameui_activate(CCommandContext const&, CCommand const&)
 t gameui_allowescape(CCommandContext const&, CCommand const&)
 t gameui_allowescapetoshow(CCommandContext const&, CCommand const&)
 t gameui_hide(CCommandContext const&, CCommand const&)
 t gameui_preventescape(CCommandContext const&, CCommand const&)
 t gameui_preventescapetoshow(CCommandContext const&, CCommand const&)
 t gaussian_filter(float)
 t global constructors keyed to a
 t grayscale_convert(jpeg_compress_struct*, unsigned char**, unsigned char***, unsigned int, int)
 t h2v1_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t h2v2_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t h2v2_smooth_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t handle_compress(bz_stream*)
 t help(CCommandContext const&, CCommand const&)
 t host_runofftime(CCommandContext const&, CCommand const&)
 t host_timescale_dec(CCommandContext const&, CCommand const&)
 t host_timescale_inc(CCommandContext const&, CCommand const&)
 t host_writeconfig(CCommandContext const&, CCommand const&)
 t host_writeconfig_ss(CCommandContext const&, CCommand const&)
 t http_file_exists(CCommandContext const&, CCommand const&)
 t hunk_print_allocations(CCommandContext const&, CCommand const&)
 t incrementvar(CCommandContext const&, CCommand const&)
 t init_destination(jpeg_compress_struct*)
 t instant_replay_goto_tick(CCommandContext const&, CCommand const&)
 t instant_replay_live(CCommandContext const&, CCommand const&)
 t instant_replay_pause(CCommandContext const&, CCommand const&)
 t instant_replay_resume(CCommandContext const&, CCommand const&)
 t instant_replay_skip(CCommandContext const&, CCommand const&)
 t instant_replay_skip_live(CCommandContext const&, CCommand const&)
 t instant_replay_timescale(CCommandContext const&, CCommand const&)
 t instant_replay_togglepause(CCommandContext const&, CCommand const&)
 t int_downsample(jpeg_compress_struct*, jpeg_component_info*, unsigned char**, unsigned char**)
 t jpeg(CCommandContext const&, CCommand const&)
 t jpeg_gen_optimal_table(jpeg_compress_struct*, JHUFF_TBL*, long*)
 t jpeg_make_c_derived_tbl(jpeg_compress_struct*, int, int, c_derived_tbl**)
 t kaiser_filter(float)
 t key_findbinding(CCommandContext const&, CCommand const&)
 t key_listboundkeys(CCommandContext const&, CCommand const&)
 t kick(CCommandContext const&, CCommand const&)
 t kickid(CCommandContext const&, CCommand const&)
 t kickid_hltv(CCommandContext const&, CCommand const&)
 t killserver(CCommandContext const&, CCommand const&)
 t lanczos12_filter(float)
 t lanczos3_filter(float)
 t lanczos4_filter(float)
 t lanczos6_filter(float)
 t lightprobe(CCommandContext const&, CCommand const&)
 t listid(CCommandContext const&, CCommand const&)
 t listip(CCommandContext const&, CCommand const&)
 t listmodels(CCommandContext const&, CCommand const&)
 t log(CCommandContext const&, CCommand const&)
 t logaddress_add(CCommandContext const&, CCommand const&)
 t logaddress_del(CCommandContext const&, CCommand const&)
 t logaddress_delall(CCommandContext const&, CCommand const&)
 t logaddress_list(CCommandContext const&, CCommand const&)
 t mainGtU(unsigned int, unsigned int, unsigned char*, unsigned short*, unsigned int, int*)
 t map_edit(CCommandContext const&, CCommand const&)
 t mat_configcurrent(CCommandContext const&, CCommand const&)
 t mat_crosshair(CCommandContext const&, CCommand const&)
 t mat_crosshair_edit(CCommandContext const&, CCommand const&)
 t mat_crosshair_explorer(CCommandContext const&, CCommand const&)
 t mat_crosshair_printmaterial(CCommandContext const&, CCommand const&)
 t mat_crosshair_reloadmaterial(CCommandContext const&, CCommand const&)
 t mat_debug(CCommandContext const&, CCommand const&)
 t mat_edit(CCommandContext const&, CCommand const&)
 t mat_info(CCommandContext const&, CCommand const&)
 t mat_savechanges(CCommandContext const&, CCommand const&)
 t mat_setvideomode(CCommandContext const&, CCommand const&)
 t mat_suppress(CCommandContext const&, CCommand const&)
 t mat_texture_list_txlod(CCommandContext const&, CCommand const&)
 t maxplayers(CCommandContext const&, CCommand const&)
 t mem_compact(CCommandContext const&, CCommand const&)
 t mem_dump(CCommandContext const&, CCommand const&)
 t mem_eat(CCommandContext const&, CCommand const&)
 t mem_incremental_compact(CCommandContext const&, CCommand const&)
 t mem_test(CCommandContext const&, CCommand const&)
 t mem_vcollide(CCommandContext const&, CCommand const&)
 t mem_verify(CCommandContext const&, CCommand const&)
 t memory(CCommandContext const&, CCommand const&)
 t minidump(CCommandContext const&, CCommand const&)
 t minisave(CCommandContext const&, CCommand const&)
 t mitchell_filter(float)
 t mod_combiner_info(CCommandContext const&, CCommand const&)
 t mod_dynamicmodeldebug(CCommandContext const&, CCommand const&)
 t movie_fixwave(CCommandContext const&, CCommand const&)
 t multvar(CCommandContext const&, CCommand const&)
 t net_dumpeventstats(CCommandContext const&, CCommand const&)
 t nextdemo(CCommandContext const&, CCommand const&)
 t null_convert(jpeg_compress_struct*, unsigned char**, unsigned char***, unsigned int, int)
 t null_method(jpeg_compress_struct*)
 t output_message(jpeg_common_struct*)
 t pass_startup(jpeg_compress_struct*)
 t pause(CCommandContext const&, CCommand const&)
 t per_scan_setup(jpeg_compress_struct*)
 t ping(CCommandContext const&, CCommand const&)
 t pre_process_context(jpeg_compress_struct*, unsigned char**, unsigned int*, unsigned int, unsigned char***, unsigned int*, unsigned int)
 t pre_process_data(jpeg_compress_struct*, unsigned char**, unsigned int*, unsigned int, unsigned char***, unsigned int*, unsigned int)
 t prepare_for_pass(jpeg_compress_struct*)
 t process_data_simple_main(jpeg_compress_struct*, unsigned char**, unsigned int*, unsigned int)
 t quadratic_approx_filter(float)
 t quadratic_interp_filter(float)
 t quadratic_mix_filter(float)
 t r_cleardecals(CCommandContext const&, CCommand const&)
 t r_lightcache_invalidate(CCommandContext const&, CCommand const&)
 t r_printdecalinfo_f()
 t rcon(CCommandContext const&, CCommand const&)
 t realize_virt_arrays(jpeg_common_struct*)
 t record(CCommandContext const&, CCommand const&)
 t recordingCallback(void*, unsigned long*, AudioTimeStamp const*, unsigned long, unsigned long, AudioBufferList*)
 t reload(CCommandContext const&, CCommand const&)
 t remote_bug(CCommandContext const&, CCommand const&)
 t removeid(CCommandContext const&, CCommand const&)
 t removeip(CCommandContext const&, CCommand const&)
 t request_virt_barray(jpeg_common_struct*, int, int, unsigned int, unsigned int, unsigned int)
 t request_virt_sarray(jpeg_common_struct*, int, int, unsigned int, unsigned int, unsigned int)
 t reset_error_mgr(jpeg_common_struct*)
 t reset_gameconvars(CCommandContext const&, CCommand const&)
 t restart(CCommandContext const&, CCommand const&)
 t retry(CCommandContext const&, CCommand const&)
 t rgb_gray_convert(jpeg_compress_struct*, unsigned char**, unsigned char***, unsigned int, int)
 t rgb_ycc_convert(jpeg_compress_struct*, unsigned char**, unsigned char***, unsigned int, int)
 t rgb_ycc_start(jpeg_compress_struct*)
 t save(CCommandContext const&, CCommand const&)
 t save_finish_async(CCommandContext const&, CCommand const&)
 t screenshot(CCommandContext const&, CCommand const&)
 t select_scan_parameters(jpeg_compress_struct*)
 t self_destruct(jpeg_common_struct*)
 t sep_downsample(jpeg_compress_struct*, unsigned char***, unsigned int, unsigned char***, unsigned int)
 t setinfo(CCommandContext const&, CCommand const&)
 t setpause(CCommandContext const&, CCommand const&)
 t snd_async_flush(CCommandContext const&, CCommand const&)
 t snd_async_showmem(CCommandContext const&, CCommand const&)
 t snd_async_showmem_music(CCommandContext const&, CCommand const&)
 t snd_async_showmem_summary(CCommandContext const&, CCommand const&)
 t snd_buildsoundcacheforaddon(CCommandContext const&, CCommand const&)
 t snd_buildsoundcachefordirectory(CCommandContext const&, CCommand const&)
 t snd_dumpclientsounds(CCommandContext const&, CCommand const&)
 t snd_print_channel_by_guid(CCommandContext const&, CCommand const&)
 t snd_print_channel_by_index(CCommandContext const&, CCommand const&)
 t snd_print_channels(CCommandContext const&, CCommand const&)
 t snd_rebuildaudiocache(CCommandContext const&, CCommand const&)
 t snd_rebuildlocalizedaudiocache(CCommandContext const&, CCommand const&)
 t snd_reload_caches(CCommandContext const&, CCommand const&)
 t snd_set_master_volume(CCommandContext const&, CCommand const&)
 t snd_updateaudiocache(CCommandContext const&, CCommand const&)
 t snd_writemanifest(CCommandContext const&, CCommand const&)
 t soundfade(CCommandContext const&, CCommand const&)
 t spike(CCommandContext const&, CCommand const&)
 t ss_connect(CCommandContext const&, CCommand const&)
 t ss_disconnect(CCommandContext const&, CCommand const&)
 t star_memory(CCommandContext const&, CCommand const&)
 t start_pass(jpeg_compress_struct*, int)
 t start_pass_coef(jpeg_compress_struct*, J_BUF_MODE)
 t start_pass_downsample(jpeg_compress_struct*)
 t start_pass_fdctmgr(jpeg_compress_struct*)
 t start_pass_huff(jpeg_compress_struct*, int)
 t start_pass_main(jpeg_compress_struct*, J_BUF_MODE)
 t start_pass_prep(jpeg_compress_struct*, J_BUF_MODE)
 t startdemos(CCommandContext const&, CCommand const&)
 t startmovie(CCommandContext const&, CCommand const&)
 t status(CCommandContext const&, CCommand const&)
 t stop(CCommandContext const&, CCommand const&)
 t stopdemo(CCommandContext const&, CCommand const&)
 t stringtabledictionary(CCommandContext const&, CCommand const&)
 t stuffcmds(CCommandContext const&, CCommand const&)
 t sv_ShutDown()
 t sv_dump_changelists_stats(CCommandContext const&, CCommand const&)
 t sv_dump_class_info(CCommandContext const&, CCommand const&)
 t sv_dump_class_table(CCommandContext const&, CCommand const&)
 t sv_dump_edicts(CCommandContext const&, CCommand const&)
 t sv_dump_serialized_entities_mem(CCommandContext const&, CCommand const&)
 t sv_precacheinfo(CCommandContext const&, CCommand const&)
 t sv_showtags(CCommandContext const&, CCommand const&)
 t tent_filter(float)
 t term_destination(jpeg_compress_struct*)
 t thread_test_tslist(CCommandContext const&, CCommand const&)
 t thread_test_tsqueue(CCommandContext const&, CCommand const&)
 t threadpool_cycle_reserve(CCommandContext const&, CCommand const&)
 t threadpool_run_tests(CCommandContext const&, CCommand const&)
 t toggle(CCommandContext const&, CCommand const&)
 t tv_clients(CCommandContext const&, CCommand const&)
 t tv_msg(CCommandContext const&, CCommand const&)
 t tv_name_changed_f(IConVar*, char const*, float)
 t tv_record(CCommandContext const&, CCommand const&)
 t tv_relay(CCommandContext const&, CCommand const&)
 t tv_retry(CCommandContext const&, CCommand const&)
 t tv_status(CCommandContext const&, CCommand const&)
 t tv_stop(CCommandContext const&, CCommand const&)
 t tv_stoprecord(CCommandContext const&, CCommand const&)
 t tv_title_changed_f(IConVar*, char const*, float)
 t unbind(CCommandContext const&, CCommand const&)
 t unbindall(CCommandContext const&, CCommand const&)
 t unload_all_addons(CCommandContext const&, CCommand const&)
 t unpause(CCommandContext const&, CCommand const&)
 t update_addon_paths(CCommandContext const&, CCommand const&)
 t user(CCommandContext const&, CCommand const&)
 t users(CCommandContext const&, CCommand const&)
 t version(CCommandContext const&, CCommand const&)
 t vgui_dump_panels(CCommandContext const&, CCommand const&)
 t vgui_togglepanel(CCommandContext const&, CCommand const&)
 t void CM_RecursiveHullCheckImpl<false>(TraceInfo_t*, int, float, float, Vector const&, Vector const&)
 t void CM_RecursiveHullCheckImpl<true>(TraceInfo_t*, int, float, float, Vector const&, Vector const&)
 t void ImageLoader::ConvertFromATIxN<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int, bool)
 t void ImageLoader::ConvertFromDXT1<BGR565_t>(unsigned char const*, BGR565_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGR888_t>(unsigned char const*, BGR888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA4444_t>(unsigned char const*, BGRA4444_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA5551_t>(unsigned char const*, BGRA5551_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<RGB888_t>(unsigned char const*, RGB888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<RGBA8888_t>(unsigned char const*, RGBA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA4444_t>(unsigned char const*, BGRA4444_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA5551_t>(unsigned char const*, BGRA5551_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<RGBA8888_t>(unsigned char const*, RGBA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<BGR565_t>(unsigned char const*, BGR565_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<BGR888_t>(unsigned char const*, BGR888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<RGB888_t>(unsigned char const*, RGB888_t*, int, int)
 t void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)
 t vprof(CCommandContext const&, CCommand const&)
 t vprof_Impl()
 t vprof_adddebuggroup1(CCommandContext const&, CCommand const&)
 t vprof_cachemiss(CCommandContext const&, CCommand const&)
 t vprof_cachemiss_Impl()
 t vprof_cachemiss_off(CCommandContext const&, CCommand const&)
 t vprof_cachemiss_off_Impl()
 t vprof_cachemiss_on(CCommandContext const&, CCommand const&)
 t vprof_cachemiss_on_Impl()
 t vprof_collapse_all(CCommandContext const&, CCommand const&)
 t vprof_dump_counters(CCommandContext const&, CCommand const&)
 t vprof_dump_groupnames(CCommandContext const&, CCommand const&)
 t vprof_expand_all(CCommandContext const&, CCommand const&)
 t vprof_expand_group(CCommandContext const&, CCommand const&)
 t vprof_generate_report(CCommandContext const&, CCommand const&)
 t vprof_generate_report_AI(CCommandContext const&, CCommand const&)
 t vprof_generate_report_AI_Impl()
 t vprof_generate_report_AI_only(CCommandContext const&, CCommand const&)
 t vprof_generate_report_AI_only_Impl()
 t vprof_generate_report_Impl()
 t vprof_generate_report_budget(CCommandContext const&, CCommand const&)
 t vprof_generate_report_budget_Impl()
 t vprof_generate_report_hierarchy(CCommandContext const&, CCommand const&)
 t vprof_generate_report_hierarchy_Impl()
 t vprof_generate_report_hierarchy_per_frame_and_count_only(CCommandContext const&, CCommand const&)
 t vprof_generate_report_hierarchy_per_frame_and_count_only_Impl()
 t vprof_generate_report_map_load(CCommandContext const&, CCommand const&)
 t vprof_generate_report_map_load_Impl()
 t vprof_off(CCommandContext const&, CCommand const&)
 t vprof_off_Impl()
 t vprof_on(CCommandContext const&, CCommand const&)
 t vprof_on_Impl()
 t vprof_playback_average(CCommandContext const&, CCommand const&)
 t vprof_playback_start(CCommandContext const&, CCommand const&)
 t vprof_playback_step(CCommandContext const&, CCommand const&)
 t vprof_playback_stepback(CCommandContext const&, CCommand const&)
 t vprof_playback_stop(CCommandContext const&, CCommand const&)
 t vprof_record_start(CCommandContext const&, CCommand const&)
 t vprof_record_stop(CCommandContext const&, CCommand const&)
 t vprof_remote_start(CCommandContext const&, CCommand const&)
 t vprof_remote_stop(CCommandContext const&, CCommand const&)
 t vprof_reset(CCommandContext const&, CCommand const&)
 t vprof_reset_Impl()
 t vprof_reset_peaks(CCommandContext const&, CCommand const&)
 t vprof_reset_peaks_Impl()
 t vprof_to_csv(CCommandContext const&, CCommand const&)
 t vprof_vtune_group(CCommandContext const&, CCommand const&)
 t vtune(CCommandContext const&, CCommand const&)
 t write_file_header(jpeg_compress_struct*)
 t write_file_trailer(jpeg_compress_struct*)
 t write_frame_header(jpeg_compress_struct*)
 t write_marker_byte(jpeg_compress_struct*, int)
 t write_marker_header(jpeg_compress_struct*, int, unsigned int)
 t write_scan_header(jpeg_compress_struct*)
 t write_tables_only(jpeg_compress_struct*)
 t writeid(CCommandContext const&, CCommand const&)
 t writeip(CCommandContext const&, CCommand const&)
 t xload(CCommandContext const&, CCommand const&)
 t xsave(CCommandContext const&, CCommand const&)
 tan
 tanf
 tanh
 time
 typeinfo for std::exception
 tzset
 ungetc
 unlink
 uuid_generate
 vsnprintf
 vswprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 vtune
 wcschr
 wcscmp
 wcscpy
 wcslen
 wcsncat
 wcsncmp
 wcsncpy
 wcsstr
 wcstof
 wcstol
 write$UNIX2003
