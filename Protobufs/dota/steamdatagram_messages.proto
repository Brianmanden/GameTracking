option cc_generic_services = false;

enum ESteamDatagramMsgID {
	k_ESteamDatagramMsg_RouterPingRequest = 1;
	k_ESteamDatagramMsg_RouterPingReply = 2;
	k_ESteamDatagramMsg_GameserverPingRequest = 3;
	k_ESteamDatagramMsg_GameserverPingReply = 4;
	k_ESteamDatagramMsg_GameserverSessionRequest = 5;
	k_ESteamDatagramMsg_GameserverSessionEstablished = 6;
	k_ESteamDatagramMsg_NoSession = 7;
	k_ESteamDatagramMsg_Diagnostic = 8;
	k_ESteamDatagramMsg_DataClientToRouter = 9;
	k_ESteamDatagramMsg_DataRouterToServer = 10;
	k_ESteamDatagramMsg_DataServerToRouter = 11;
	k_ESteamDatagramMsg_DataRouterToClient = 12;
}

message CMsgSteamDatagramRouterPingReply {
	optional fixed32 client_timestamp = 1;
	repeated fixed32 latency_datacenter_ids = 2 [packed = true];
	repeated uint32 latency_ping_ms = 3 [packed = true];
	optional fixed32 your_public_ip = 4;
	optional fixed32 server_time = 5;
	optional fixed64 challenge = 6;
	optional uint32 seconds_until_shutdown = 7;
	optional fixed32 client_challenge = 8;
}

message CMsgSteamDatagramGameserverPing {
	optional uint32 client_session = 1;
	optional fixed64 client_steam_id = 2;
	optional fixed32 client_timestamp = 3;
	optional fixed32 router_timestamp = 4;
	optional uint32 router_gameserver_latency = 5;
}

message CMsgSteamDatagramGameServerAuthTicket {
	optional fixed32 time_expiry = 1;
	optional fixed64 authorized_steam_id = 2;
	optional fixed32 authorized_public_ip = 3;
	optional fixed64 gameserver_steam_id = 4;
	optional fixed64 gameserver_net_id = 5;
	optional bytes signature = 6;
}

message CMsgSteamDatagramGameserverSessionRequest {
	optional .CMsgSteamDatagramGameServerAuthTicket ticket = 1;
	optional fixed32 challenge_time = 3;
	optional fixed64 challenge = 4;
	optional fixed32 client_challenge = 5;
}

message CMsgSteamDatagramGameserverSessionEstablished {
	optional fixed32 client_challenge = 1;
	optional fixed32 session_cookie = 2;
	optional fixed64 gameserver_steam_id = 3;
	optional uint32 seconds_until_shutdown = 4;
}

message CMsgSteamDatagramNoSession {
	optional uint32 session_cookie = 1;
	optional fixed32 your_public_ip = 2;
	optional fixed32 server_time = 3;
	optional fixed64 challenge = 4;
	optional uint32 seconds_until_shutdown = 5;
}

message CMsgSteamDatagramDiagnostic {
	optional uint32 severity = 1;
	optional string text = 2;
}

message CMsgSteamDatagramDataCenterState {
	message Server {
		optional string address = 1;
		optional uint32 ping_ms = 2;
	}

	message DataCenter {
		optional string code = 1;
		repeated .CMsgSteamDatagramDataCenterState.Server server_sample = 2;
	}

	repeated .CMsgSteamDatagramDataCenterState.DataCenter data_centers = 1;
}

