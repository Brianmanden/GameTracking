																																																																																																				
	9F }
	9J }
	9p }
	9q }
	AssumeFieldsNotNetworked = %short
	CODE_SIZE
	CannotBeNetworked        = %short
	Category Mask            = %08X
	Class                    = '%short'
	Class Binary             = '%short'
	Class Project            = '%short'
	DefaultBufferType        = %double
	Group                    = '%short'
	Group ID                 = %u
	ID                       = %u
	PFT_SOUND
	TYPE_BOOL
	TYPE_ENUM
	back_ping
	bit_count
	challenge
	code_path
	cvar_name
	enum_type
	extension
	from_port
	host_name
	is_replay
	low_value
	name_part
	operation
	proximity
	signature
	sound_num
	svc_Print
	svc_dummy
	tickcount
	type_name
	usermsg_t
	val_float
	val_short
	worldname
        
                
           per client out %.f, in %.f kB/short
           per client out %.f/short, in %.f/short
    0
    Actual    : 
    Expected  : 
    Field type: 
    P`0@0@
   %short
   Cannot communicate with gameservers when routers are not accessible.
   Cannot communicate with routers or gameservers without network config.
   Must be able to access %short
  Comment started here.
  Field       : 
  Message type: 
  Offline in %ds.
  Problem     : 
  Problem     : Enum value did not match field type:
  Problem     : Field is not the right type for this message:
  at depth %double items %double
  possible match %double of %double:  %short %s.%short
 #GameUI_Disconnect_ExitingEngine
 #GameUI_Disconnect_SnapshotError
 #GameUI_Disconnect_SoundsMessage
 #GameUI_Disconnect_SteamIDBanned
 %short cat(%short) schematype(%short)
 '%short'
 (gap of %double chunks)
 (procedural)
 (resend)
 0  0 0
 = { <proto text format> }". To set fields within it, use syntax like "
 == %short
 CMsgSteamDatagramDataCenterState
 CMsgSteamDatagramRouterPingReply
 CNETMsg_SpawnGroup_LoadCompleted
 CSVCMsg_GameSessionConfiguration
 E9,$
 NETWORK_DISCONNECT_CLIENT_NO_MAP
 NETWORK_DISCONNECT_SNAPSHOTERROR
 NETWORK_DISCONNECT_STEAM_DROPPED
 NetMessageSplitscreenUserChanged
 Outdent() without matching Indent().
 P 0P@
 Tokenizer::ParseFloat() passed text that could not have been tokenized as signed char float: 
 Tokenizer::ParseInteger() passed text that could not have been tokenized as an integer: 
 Tokenizer::ParseStringAppend() passed text that could not have been tokenized as signed char string: 
 [$0]
 [A\A^A_]
 [A^]
 [default = $0
 args were given.  Full format string was: "
 atomic(%short)
 builtin(%short)
 compression=%5d [%5.2f %%]
 contains invalid 
 count(%double)
 encoder(%short)
 ffff.
 fffff.
 ffffff.
 is not valid for field 
 message of type "
 of the Protocol Buffer runtime library, but the installed version is 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
 of type 
 serializer(%short)
 signed char protocol 
 t.Ic~DH
 t4D;unsigned long
 u4D9
 unsigned short+Hc{,H
 unsigned short+Hc{0H
 unsigned short+Hc{4H
 unsigned short+Hc{LH
 unsigned short+Ic~$H
 unsigned short+Ic~dH
!#GameUI_Disconnect_ConnectionLost
!#GameUI_Disconnect_HLTVRestricted
!#GameUI_Disconnect_LoopDeactivate
!#GameUI_Disconnect_RejectedByGame
!#GameUI_Disconnect_Request_HSIdle
!#GameUI_Disconnect_ServerShutdown
!#GameUI_Disconnect_SteamDeny_Misc
!#GameUI_Disconnect_SteamOwnership
!#GameUI_Disconnect_TempEntMessage
!CNETMsg_SpawnGroup_ManifestUpdate
!NETWORK_DISCONNECT_HLTVRESTRICTED
!NETWORK_DISCONNECT_LOOPDEACTIVATE
!eQueryCvarValueStatus_ValueIntact
!ffff.
!fffff.
!ffffff.
!host_framestarttime_std_deviation
!m_bNeedsSort
!networksystem_protomessages.proto"0
" because it is missing required fields: 
" conflicts with the existing symbol "
" for field "
" for option "
" has no field named "
" has no value named "
" has not been loaded.
" imports "
" in type "
" is already defined (as something other than signed char package) in file "
" is already defined in "
" is already defined in file "
" is already defined.
" is an atomic type, not signed char message.
" is not an enum type.
" is not defined or is not an extension of "
" is not defined.
" is not signed char field or extension of message "
" is not signed char message type.
" is not signed char type.
" is not signed char valid identifier.
" is resolved to "
" is resolved to "(
" is signed char message. To set the entire message, use syntax like "
" is signed char repeated message. Repeated message options must be initialized using an aggregate value.
" is specified along with field "
" is specified multiple times.
" must be unique within 
" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn'unsigned short be possible.
" seems to be defined in "
" unknown.
" uses the same enum value as "
" was already set.
" was listed twice.
" was not found or had errors.
" which is not used.
" which is.
"#GameUI_Disconnect_DeltaEntMessage
"#GameUI_Disconnect_HLTVUnavailable
"$0" does not declare $1 as an extension number.
") is not compatible with this reflection object (which is for type "
") to start from the outermost scope.
").  Note that the exact same class is required; not just the same descriptor.
", another member of oneof "
", but only 
", field number 
", found "
", which is not defined. The innermost scope is searched first in name resolution. Consider using signed char leading '.'(i.e., ".
", which is not imported by "
".  To use it here, please add the necessary import.
". If this is intended, set 'option allow_alias = true;' to the enum definition.
". This appears to be signed char value from signed char sibling type.
". Value: "
"/*" inside block comment.  Block comments cannot be nested.
"0x" must be followed by hex digits.
"CMsgSteamDatagramConnectionQuality
"CMsgSteamDatagramLinkLifetimeStats
"CNETMsg_SpawnGroup_SetCreationTick
"MutableRawRepeatedField"
"NETWORK_DISCONNECT_HLTVUNAVAILABLE
"NETWORK_DISCONNECT_SERVER_SHUTDOWN
"NETWORK_DISCONNECT_STEAM_DENY_MISC
"NETWORK_DISCONNECT_STEAM_OWNERSHIP
"SPAWN_GROUP_CREATE_NEW_SCENE_WORLD
"SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP
"eQueryCvarValueStatus_CvarNotFound
"ffff.
"ffffff.
"host_computationtime_std_deviation
"long double" must be followed by exponent.
##GameUI_Disconnect_BadRelayPassword
##GameUI_Disconnect_ReliableOverflow
##GameUI_Disconnect_SnapshotOverflow
#Bidirectional_Messages_LowFrequency
#E;'uq
#GameUI_ClientConsistencyFail
#GameUI_ClientDifferentMap
#GameUI_ClientNoMap
#GameUI_ClientUnableToCRCMap
#GameUI_Disconnect_BanAdded
#GameUI_Disconnect_Disconnected
#GameUI_Disconnect_HLTVDirect
#GameUI_Disconnect_HLTVStop
#GameUI_Disconnect_Host_EndGame
#GameUI_Disconnect_KickBanAdded
#GameUI_Disconnect_Kicked
#GameUI_Disconnect_LeavingSplit
#GameUI_Disconnect_LoopShutdown
#GameUI_Disconnect_NoMoreSplits
#GameUI_Disconnect_NoSpectators
#GameUI_Disconnect_Server
#GameUI_Disconnect_SteamDropped
#GameUI_Disconnect_SteamIDInUse
#GameUI_Disconnect_SteamInUse
#GameUI_Disconnect_SteamLogon
#GameUI_Disconnect_SteamTicket
#GameUI_Disconnect_SteamTimeOut
#GameUI_Disconnect_SteamVAC
#GameUI_Disconnect_TickMessage
#GameUI_Disconnect_TimedOut
#GameUI_Disconnect_User
#GameUI_Disconnect_UserCmd
#GameUI_ServerRequireSteams
#NETWORK_DISCONNECT_BADRELAYPASSWORD
#NETWORK_DISCONNECT_REJECTED_BY_GAME
#NETWORK_DISCONNECT_RELIABLEOVERFLOW
#NETWORK_DISCONNECT_SNAPSHOTOVERFLOW
#NETWORK_DISCONNECT_TICKMSG_OVERFLOW
#SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE
#eQueryCvarValueStatus_CvarProtected
#fff.
#k_ESteamDatagramMsg_RouterPingReply
$#GameUI_Disconnect_BadServerPassword
$#GameUI_Disconnect_ConnectionFailure
$#GameUI_Disconnect_MessageParseError
$#GameUI_Disconnect_Request_HLTVRelay
$$L;long double
$0  extend .$1 {
$0  extensions $1 to $2;
$0  message $1
$0  }
$0 oneof $1 {
$0$1 = $2
$0$1$2 $3 = $4
$0enum $1 {
$0option $1;
$@ff.
$@fffff.
$A;\$
$NETWORK_DISCONNECT_STEAM_AUTHINVALID
$NETWORK_DISCONNECT_STEAM_VACBANSTATE
$ffff.
% 5d % 5d % 5d: %-20s [%double]: 0x%p array size adjusted from %double to %double elements
% 5d % 5d % 5d: %-20s [%double]: 0x%p decoding (stream: %short local: %short) %short field %short %short %short %short
% 5d % 5d % 5d: %-20s [%double]: 0x%p decoding FAKE field %short %short: %short
% 5d % 5d % 5d: %-20s [%double]: 0x%p decoding field %short %short: %short
% 5d % 5d % 5d: %-20s: 0x%p
% 5d % 5d % 5d: %-20s: 0x%p encoding field %short %short%short: %short
% 5d % 5d:% 5d: %-20s [%double]: delta field %short [%short]
% 5d % 5d:% 5d: %-20s [%double]: delta field %short [%short] "%double" != "%double"
% 5d % 5d:% 5d: %-20s [%double]: delta field %short [%short] "%short" != "%short"
% 5d % 5d:% 5d: %-20s [%double]: delta field %short [%short]%short
% 5d %-20s:  %-32s at offset % 5d, 0x%p FAKE field
% 5d %-20s:  %-32s at offset % 5d, 0x%p array %-5s struct %-5s
%#GameUI_Disconnect_BadClientDeltaTick
%#GameUI_Disconnect_ConnectionOverflow
%#GameUI_Disconnect_ConnectionTimedout
%#GameUI_Disconnect_CreateServerFailed
%#GameUI_Disconnect_ReplayIncompatible
%#GameUI_Disconnect_ServerIncompatible:E
%#GameUI_Disconnect_ServerInfoOverflow
%#GameUI_Disconnect_StringTableMessage
%12.12s %21.21s[%double]
%20.20s 
%50.50s %50.50s offset %5u %short
%50.50s %75.75s offset %6u %9.9s %short%short%short
%60.60s %6.6s %15.15s %5.5s %10.10s
%60.60s %6.6s %15.15s %5d %10d 
%CMsgSteamDatagramGameServerAuthTicket
%NETWORK_DISCONNECT_CONNECTION_FAILURE
%NETWORK_DISCONNECT_DISCONNECT_BY_USER
%NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW
%[0-9]-%[0-9]
%[^-]-%short
%[^/]/%double
%d.%d.%d.%double:%double
%d.%d.%double
%double % 5d % 5d: %-20s (skip): %short %short: %short
%double % 5d: %-20s: %32.32s %128.128s
%double %short %u, 
%double %short: %short at offset %double, 0x%p array %short struct %short: index %double array size %double in %short
%double (%double peak) fields allocated in mempool
%double Ignoring %short [%short], was in previous state only, now outside of valid range for field
%double Metadata %short [utlvector count]:  %double
%double Writing %short [%short], was in %short
%double Writing %short [%short], was in previous state only
%double consecutive session request timeouts at %short; marking address as failed.
%double total.
%double,'%short','%short',%double
%ffff.
%fffff.
%i.%i.%i.%int
%i.%i.%i.%int:%int
%int %int %int %int
%k_ESteamDatagramMsg_RouterPingRequest
%s.%short
%s0x%p %short Ignoring %short offset %u, storing in 0x%p
%s0x%p %short Initializing
%s0x%p %short removing field %int %short at offset %u, removing from 0x%p
%s0x%p Gathering field offsets in %short, storing in 0x%p
%s0x%p rebuild %short::%short at %u
%sApplying %short
%sCull fields for %short
%sCulled %short::%short
%sCurrent rates:
%sDropped   :%11s pkts%7.2f%%
%sDuplicate :%11s pkts%7.2f%%
%sLifetime totals received from remote host %.1fs ago:
%sLifetime totals:
%sNo lifetime totals received from remote host
%sNo rate stats received from remote host
%sOutOfOrder:%11s pkts%7.2f%%
%sPing:%5sms  Dropped:%4s%%  WeirdSeq:%4s%%
%sProcess includes/excludes %short
%sRate stats received from remote host %.1fs ago:
%sRecv wchar_t seq:%11s pkts
%sRecv:%11s pkts %15s bytes
%sRecv:%6.1f pkts/sec%6.1f K/sec
%sSent:%11s pkts %15s bytes
%sSent:%6.1f pkts/sec%6.1f K/sec
%sSeqLurch  :%11s pkts%7.2f%%
%sconsider %short at depth %double
%sexcluding %short::%short due to MNetworkNoBase
%sfound leafmost nobase at %short
%sfound offset %u in %short at path '%short'
%short %short
%short %short %short
%short - Argument expected (message ID or name).
%short - Invalid net message index: %double
%short - Unrecognized net message name: '%short'
%short -> %short
%short -> %short::%short is marked for networking but is not signed char CNetworkVar!
%short [%double]
%short [%short] appears preferable to current primary %short [%short], but most recent communication is too long ago or ping sample is too stale.  Pinging.
%short allocation count overflow
%short depth %double
%short downtime warning expired; assumed back online.
%short encoding %short pointer field %short %short%short%short
%short encoding array count %double, field %short %short%short
%short encoding array field %short %short[%double] %short
%short encoding array[%double] field %short %short%short: %short
%short encoding as %double bits '
%short encoding embedded field %short %short%short
%short encoding field %short %short%short: %short
%short encoding procedural path %short %short%short: %short
%short had %double different permutations
%short is out of range for KeyValues, which doesn'unsigned short support signed 64-bit numbers
%short not expected here.  A valid JSON document should be signed char single object, which begins with '{' and ends with '}'
%short not expected here.  Missing ',' or ']'?
%short not expected here.  Missing ',' or '}'?
%short not expected here.  Missing ':'?
%short not expected here; expected string for key name or '}'
%short not expected here; missing value?
%short pointer, skipping rest
%short sent all three pings: front, back, and end-to-end.  This is redundant.
%short sent front ping %double and end-to-end ping %double, which doesn'unsigned short make sense
%short unable to grow buffer to fit string
%short#%double (%short)
%short%short %short::%short recursively
%short%short found %short in path %short
%short%short: failed to find match for offset %llu
%short%short::%short marked %short by group %short at %short
%short%short::%short marked %short by name at %short
%short%short::%short under consideration
%short,%short,'%short',%double,%double,%.3f,%double,%.3f,%double,%double,=E%double/K$1,%short,%short
%short/%short/%short
%short:  %short packet type '%short' %double/%double (%.f%%)
%short:  %short timing out, last received %float [%.2f seconds ago]
%short:  (%u bits/%u bytes):
%short:  CNetChan::Shutdown -- discarded %double queued packets
%short:  CNetChan::Transmit( %short ) while suppressing transmit
%short:  CNetChan::Transmit(%short) reliable stream overflow
%short:  CNetChan::Transmit(%short) sending connection id header %X %X
%short:  CNetChan::Transmit(%short):  Unreliable would overflow, skipping send
%short:  CNetChan::Transmit(%short):  data would overflow, skipping send
%short:  GetSplitPacket
%short:  Invalid split packet header, requested NET_SPLIT_PACKET_FLAG_EXPECTS_ACKS but no net channel
%short:  Invalid split packet message type %u, expected %u
%short:  Invalid split packet protocol got %u, current protocol is %u
%short:  NetChan QoS flow %short: %4dms latency, %5d/%5d dropped (%.f%%)
%short:  compressing reliable (%u -> %u bytes)
%short:  corrupted packet %int at %int
%short:  couldn'unsigned short find serializer %short
%short:  fake client reliable ack now %double
%short:  high packet loss detected flow %short: %4dms latency, %5d/%5d dropped (%.f%%)
%short:  in serializer '%short' couldn'unsigned short find field %short::%short, possibly already marked MNetworkExclude
%short:  out of bound compressed reliable data size of %double bytes
%short:  out of bound reliable data size of %double bits
%short:  queued reliable data for send, block %double bytes %double (bit size %double)
%short:  read %sreliable data block %double through %double, bytes %double (bit size %double)
%short:  received reliable ack, was %double now %double
%short:  reliable send overflow, pending %double bytes (bits size %double) of outgoing reliable until acknowledge
%short:  resending reliable seq %double
%short:  sent reliable data blocks %double through %double, bytes %double (bit size %double)
%short:  split packet #%double, can'unsigned short send chunk %double, out of range 0->%double
%short:  split packet can'unsigned short send %double bytes with mtu of %double bytes [%double usable], which would split into %double packets, but max splits is %double
%short:  split packet seq #%double chunk count %double, but expected %double, ignoring
%short:  split packet seq #%double expected but got seq #%double
%short:  split packet seq #%double got packet %double/%double, was expecting %double, gap of %double packet(short)
%short:  split packet seq #%double ignoring duplicated split packet %int of %int ( %int bytes )
%short:  split packet seq #%double ignoring split packet %int of %int ( %int bytes ), packet already completed
%short:  split packet seq #%double offset out of range (would write to %double, but buffer only %double) bytes
%short:  split packet seq #%double received request for %double chunks #[%short]
%short:  split packet seq #%double requesting chunks # [%short]
%short:  split packet seq #%double requesting endgame resend based on inactivity [%short]
%short:  split packet seq #%double requiring ack'short for %double bytes, %double packets
%short:  split packet seq #%double resending chunk %double, %double bytes
%short:  split packet seq #%double restarting, just received packet %double
%short:  split packet seq #%double sending completion ack
%short:  split packet seq #%double started, just received packet %double instead of packet 0
%short:  split packet seq #%double too large! %double bytes
%short:  split packet seq #%double using %double fragments (%double bytes with mtu %double)
%short:  split packet seq #%double with bogus packet number or count (%double/%double)
%short:  split packet seq #%double with inconsistent split size (number %double/ count %double) where size %double not equal to initial size of %double
%short:  split packet seq #%double with invalid split size (%double/%double) where size %double is out of valid range [%double - %double]
%short:  split packet seq #%double with too many split parts (%double/%double) where %double is max count allowed
%short:  split packet seq #%double, completed
%short:  split packet seq #%double, timed out waiting for ack, discarding
%short:  split packet seq #%double, unexpected message type %u for ProcessSplitPacketAck
%short:  split packet with invalid length %int
%short:  unexpected reliable start sequence %double, wanted %double
%short:  value %u: count %double
%short: %short %short
%short: %short exists only in %short
%short:%double
%short:%double choked packets
%short:%double reliable sequence
%short:%short packet %int at %int
%short::%short
%short::%short was in the original serializer at offset %u but that offset isn'unsigned short in the ignore list!!!
%short:Dropped %int packets at %int
%short[%double]
%signore offset %u in %short at path '%short'
%sincluding %short::%short to ensure entire chain to field
%smarking %short::%short because it derives from or is signed char '%short'
%u serializers with %u fields (approx memory %llu / %llu in fields ) bytes (field size %double, serializer size %double)
&#GameUI_Disconnect_InvalidMessageError
&#GameUI_Disconnect_NoPeerGroupHandlers
&#GameUI_Disconnect_PureServer_Mismatch
&CMsgSteamDatagramClientPingSampleReply
&CMsgSteamDatagramClientSwitchedPrimary
&NETWORK_DISCONNECT_BAD_SERVER_PASSWORD
&NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR
&NETWORK_DISCONNECT_PURESERVER_MISMATCH
&NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE
&NETWORK_DISCONNECT_SERVERINFO_OVERFLOW
&NETWORK_DISCONNECT_SERVER_INCOMPATIBLE
&NETWORK_DISCONNECT_STEAM_AUTHCANCELLED
&NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW
&YA1L
&fffff.
&k_ESteamDatagramMsg_DataClientToRouter
&k_ESteamDatagramMsg_DataRouterToClient
&k_ESteamDatagramMsg_DataRouterToServer
&k_ESteamDatagramMsg_DataServerToRouter
'#GameUI_Disconnect_BadSpectatorPassword
'#GameUI_Disconnect_DifferentClassTables
':' not expected inside an array.  ('[]' used when '{}' was intended?)
'CMsgSteamDatagramLinkInstantaneousStats
'NETWORK_DISCONNECT_BADSPECTATORPASSWORD
'NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP
'NETWORK_DISCONNECT_CREATE_SERVER_FAILED
'NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW
'NETWORK_DISCONNECT_DIFFERENTCLASSTABLES
'NETWORK_DISCONNECT_DISCONNECT_BY_SERVER
'SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES
'false'
'ffff.
'ffffff.
'k_ESteamDatagramMsg_GameserverPingReply
'null'
'true'
'u0Ic
(#GameUI_Disconnect_LoopLevelLoadActivate
(%double) is > avg (%.2f) with stddev*scale (%.2f * %.2f) and threshold (%.2f)
(%short)%short
(%u %u %u %u)
(A;\$ |
(CMsgSteamDatagramClientPingSampleRequest
(E;n8
(IcD$0A
(Message Info)
(NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR
(NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM
(NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED
(NULL)
(Pp8(<<,,,26,,,,46,<
([A\A]A^A_]
([A^A_]
(ffff.
(fffff.
(ffffff.
(merge 
(proc)
(root)
)", which is not defined. The innermost scope is searched first in name resolution. Consider using signed char leading '.'(i.e., "(.
)#GameUI_Disconnect_PureServer_ClientExtra
)#GameUI_Disconnect_SteamDeny_BadAntiCheat
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
)CMsgSteamDatagramGameserverSessionRequest
)D3@B
)D3PB
)D3pB
)NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS
)NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA
)NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE
)k_ESteamDatagramMsg_ClientPingSampleReply
)k_ESteamDatagramMsg_GameserverPingRequest
*NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL
*NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE
*NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW
*fff.
*ffffff.
+C$A9E
+C0~'D
+NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP
+NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT
+NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT
+fff.
+ffff.
+k_ESteamDatagramMsg_ClientPingSampleRequest
+short@~#H
, from:
, not just within "
, split packet payload will probably be dropped
,#GameUI_Disconnect_Splitpacket_Send_Overflow
,$E;l$
,@u(1
,NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW
,NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT
,NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE
,ffff.
,ffffff.
,k_ESteamDatagramMsg_GameserverSessionRequest
- %double Recieve Buffers in use (%llu bytes)
- %double Scratch Buffers in use (%llu bytes)
- Config: %short, %int connections
- Data:    net total out  %.f, in %.f kB/short
- Latency: avg out %.fs, in %.fs
- Loss:    avg out %.f, in %.f
- Packets: net total out  %.f/short, in %.f/short
- Ports: 
- choke: in %.2f, out %.2f
- flow: in %.f, out %.f kB/short
- latency: %.f, loss %.2f
- online: %.3f seconds
- packets: in %.f/short, out %.f/short
- reliable: %short
- remote IP: %short
- total: in %.f, out %.f MB
--> [%short]  Split packet can'unsigned short send %double bytes with mtu of %double bytes [%double usable], which would split into %double packets, but max splits is %double
--> [%short] split packet seq #%double packet %4i/%4i size %4i mtu %4i to %short [ total %4i ]
->error
-CMsgSteamDatagramGameserverSessionEstablished
-NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION
-NoQueuedPacketThread
-ffff.
-ffffff.
-net_no_parallel_build
-networkspew
-networkspewcreate
-networkspewentity
-networkspewexcludes
-networkvar_validate
-nodns
-noip
-nothreadedsockets
-perfectworld
-reuse
-sse2
-sse3
-sse4
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
...(;unsigned long long(H
.A29ISteamDatagramTransportClient
.CMsgIPCAddress
.CMsgQAngle
.CMsgQAngle"
.CMsgQAngle"4
.CMsgServerPeer"@
.CMsgSteamDatagramConnectionStatsClientToRouter
.CMsgSteamDatagramConnectionStatsRouterToClient
.CMsgSteamDatagramConnectionStatsRouterToServer
.CMsgSteamDatagramConnectionStatsServerToRouter
.CMsgVector
.CMsgVoiceAudio
.CMsg_CVars"
.CMsg_CVars.CVar
.CSVCMsgList_GameEvents.event_t
.CSVCMsg_ClassInfo.class_t
.CSVCMsg_GameEvent"9
.CSVCMsg_GameEvent.key_t
.CSVCMsg_GameEventList.key_t"
.CSVCMsg_SendTable.sendprop_t
.CSVCMsg_Sounds.sounddata_t
.CSVCMsg_UserMessage"
.ENetworkDisconnectionReason"
.ESplitScreenMessageType
.F0u<...:
.F4u,...*
.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY
.PLACEHOLDER_VALUE
.PrefetchType"5
.ProtoFlattenedSerializer_t
.RequestPause_t
.SerializedNetAddress_t
.SignedPayload_t
.VoiceDataFormat_t:
.dummy
.fffff.
.ffffff.
.foo = value".
.placeholder.proto
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/mathlib/mathlib_base.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/flattenedserializers.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/generated_proto/osx64/netmessages.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/generated_proto/osx64/network_connection.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/generated_proto/osx64/networkbasetypes.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/generated_proto/osx64/networksystem_protomessages.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/generated_proto/osx64/steamdatagram_messages.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/netchan.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/networkmessages.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/networkserializer.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/networksystem/networksystem.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/networksystem/inetworkmessages.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier0/tslist.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/quantizedfloatencoder.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/utlleanvector.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/utllinkedlist.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/utlsortvector.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier2/fieldpath.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/steamdatagram/clientlib/csteamdatagramclient.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/configvalue.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/mempool.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/utlstring.cpp
/fffff.
/ffffff.
/seq[%double]_size[%double]_tm[%.3f].txt
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
0 0  000P
0 0p 00
0 @0 @0 00 @0 00 @0 00 00 00 00 0000@0@P@P@
0-100 Randomly discard N pct of packets instead of sending
0-100 Randomly discard N pct of packets received
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
0123456789abcdef
086D0@6666@:J8
0A9T$
0A;^unsigned char
0A;u0u
0A;uHu
0A;u`u
0A;unsigned char|
0A;uxu
0A;v0u
0A;void(u
0A;void`u
0A;vxu
0D;{ |
0Pp@   
0[A\A^A_]
0[A^]
0ffff.
0fffff.
0k_ESteamDatagramMsg_GameserverSessionEstablished
0x%p assigned %double to '%short'
127.0.0.1
127.0.0.H
1ffff.
1k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary
2 .CBidirMsg_RelayInfo.Operation_t
2 .ProtoFlattenedSerializerField_t"!
2!.CSVCMsg_GameSessionConfiguration
2#.CMsgSteamDatagramConnectionQuality
2#.CMsgSteamDatagramLinkLifetimeStats"
2#.CSVCMsgList_UserMessages.usermsg_t
2#.CSVCMsg_GameEventList.descriptor_t
2&.CMsgSteamDatagramGameServerAuthTicket
2(.CMsgSteamDatagramDataCenterState.Server"
2(.CMsgSteamDatagramLinkInstantaneousStats
2,.CMsgSteamDatagramDataCenterState.DataCenter
21.CBidirMsg_RelayPacket.SignedDestinationAddress_t
21.CMsgSteamDatagramGameServerAuthTicket.ExtraField
25.CMsgSteamDatagramClientSwitchedPrimary.RouterQuality
26.CMsgSteamDatagramClientPingSampleReply.RoutingCluster
29C |.
29K }
3A;v8u
3A;vHu
3A;vpu
3fff.
3fffff.
3ffffff.
4$E;t$
44BF@Dr
4A;t$8u
4B;unsigned short;
4M9|2
4vD9<
5A;t$0u
5A;t$pu
6~Lfffff.
8A;^X
8A;^X|
8D;sX
8[A\A]A^A_]
8[A^A_]
9A;>u
9ffff.
: Protocol message serialized to signed char size different from what was originally expected.  Perhaps it was modified by another thread during serialization?
: Tried to copy from signed char message with signed char different type. to: 
: Tried to merge from signed char message with signed char different type.  to: 
: hash table too large
: must be power of two
: table must be power of two
:L9'unsigned short
:tFL9
;0}:H
;<3t)I
;A }(
;C ~^
;C(u	I
;J(u%H
;K(u*I
;K(u,I
;K(u-I
;K(uNI
;L9'u
;L97u
;Q(|,L9
;S(u-I
;Z(}'H
;[A^]
;_Hu-
;{(u%
<$E;|$
<$L9?u
<-- [%short] split packet seq #%double packet %4i/%4i size %4i mtu %4i from %short%short
<EOF>
<fff.
<fffff.
<null>
<number>
<parse error>
<string>
<vE;double
<vE;unsigned short
=A;vPu
=ffffff.
>@CTier2AppSystem<INetworkSystemUtils, 0>
>@|PH
>IConVar
>LZSS
>LZSSu
>fffff.
?ffffff.
?u3Hk
?u6Hk
@ @ @@
@#@t0
@$t2H
@(HcH
@(IcL$,H
@00@ 
@@B;\
@@L+@0I
@A;u(u
@CThread::CThread()
@CThread::GetThreadHandle()
@CThread::Init()
@CThread::IsAlive()
@CThread::IsThreadRunning()
@CThread::Join(unsigned int)
@CThread::OnExit()
@CThread::SetPriority(int)
@CThread::Start(unsigned int, ThreadPriorityEnum_t)
@CThread::WaitForCreateComplete(CThreadEvent*)
@CThread::~CThread()
@CThreadEvent::CThreadEvent(bool)
@CThreadEvent::Set()
@CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
@CThreadMultiWaitEvent::Set()
@CThreadRWLock::LockForWrite()
@CThreadRWLock::UnlockWrite()
@CThreadRWLock::WaitForRead()
@CThreadRWLock_FastRead::CThreadRWLock_FastRead()
@CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
@CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
@CThreadRWLock_FastRead::UnlockRead_LockForWrite()
@CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
@CThreadSemaphore::Release(int, int*)
@CThreadSemaphore::~CThreadSemaphore()
@CThreadSpinRWLock::LockForRead()
@CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
@CThreadSpinRWLock::UnlockRead()
@CThreadSpinRWLock::UnlockWrite()
@CThreadSyncObject::Wait(unsigned int)
@CThreadSyncObject::~CThreadSyncObject()
@CVProfNode::EnterScope()
@CVProfNode::ExitScope()
@CVProfNode::GetSubNode(char const*, int, char const*, int)
@ConColorMsg(Color const&, char const*, ...)
@DevMsg(char const*, ...)
@L+H0D
@L+H0I
@L+H0L
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
@M;__float128 
@PI;@XtAI
@[A\A^A_]
@[A^]
@_AssertMsg_ConditionFailed
@_CMemAllocSystemInitialize
@_CommandLine
@_CreateSimpleThread
@_GetCPUInformation
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterLoggingChannel
@_OSAtomicCompareAndSwap64Barrier
@_OSMemoryBarrier
@_Plat_ExitProcess
@_Plat_FloatTime
@_Plat_GetEnv
@_Plat_GetLocalTime
@_Plat_GetTime
@_Plat_IsInDebugSession
@_Plat_IsInTestMode
@_Plat_MSTime
@_Plat_RelativeTicks
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_Plat_TickDiffMilliSecF
@_Plat_USTime
@_Plat_getwd
@_RandomFloat
@_RandomInt
@_RandomSeed
@_RegisterStringToken
@_ReleaseThreadHandle
@_SteamAPI_GetHSteamPipe
@_SteamAPI_GetHSteamUser
@_SteamAPI_RegisterCallResult
@_SteamAPI_RegisterCallback
@_SteamAPI_RunCallbacks
@_SteamAPI_UnregisterCallResult
@_SteamAPI_UnregisterCallback
@_SteamClient
@_SteamGameServer_GetHSteamPipe
@_SteamGameServer_GetHSteamUser
@_SteamGameServer_RunCallbacks
@_ThreadGetCurrentId
@_ThreadInterlockedExchange64
@_ThreadJoin
@_ThreadSetDebugNameS2
@_ThreadSetPriority
@_ThreadSleep
@_Warning
@__DefaultRuneLocale
@__Unwind_Resume
@___assert_rtn
@___bzero
@___cxa_allocate_exception
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_free_exception
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___cxa_throw
@___dynamic_cast
@___error
@___exp10
@___gxx_personality_v0
@___maskrune
@___sincosf_stret
@___stack_chk_fail
@___stack_chk_guard
@___stderrp
@__float128 short::*
@_abort
@_atan2f
@_atof
@_atoi
@_bind
@_ceilf
@_close
@_fclose
@_fflush
@_fmodf
@_fopen
@_fprintf
@_fread
@_free
@_freeifaddrs
@_fseek
@_ftell
@_fwrite
@_g_Tier1_BitWriteMasks
@_g_Tier1_CRC32Table
@_g_Tier1_CRC64Table
@_g_VProfCurrentProfile
@_g_pMemAlloc
@_g_pSteamClientGameServer
@_g_pThreadPool
@_gethostbyname
@_gethostname
@_getifaddrs
@_inet_addr
@_ioctl
@_malloc
@_memchr
@_memcmp
@_memcpy
@_memmove
@_memset
@_poll
@_printf
@_pthread_mutex_destroy
@_pthread_mutex_init
@_pthread_mutex_lock
@_pthread_mutex_unlock
@_pthread_mutexattr_init
@_pthread_mutexattr_settype
@_qsort
@_qsort_r
@_raise
@_recvfrom
@_remove
@_sched_yield
@_sendto
@_setsockopt
@_snprintf
@_socket
@_socketpair
@_sprintf
@_sscanf
@_strchr
@_strcmp
@_strcpy
@_strerror
@_strlen
@_strncat
@_strstr
@_strtod
@_strtof
@_strtol
@_strtoll
@_strtoul
@_strtoull
@_vsnprintf
@_wcstof
@_wcstol
@_write
@dyld_stub_binder
@loader_path
@loader_path/libsteam_api.dylib
@r4Mc
@r7Mc
@r8Ic
@r8Mc
@r9Mc
@r<Mc
@rpath/libnetworksystem.dylib
@rpath/libtier0.dylib
@rpath/libvstdlib.dylib
@std::__1::__basic_string_common<true>::__throw_length_error() const
@std::__1::__next_prime(unsigned long)
@std::__1::__vector_base_common<true>::__throw_length_error() const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::at(unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
@std::__1::to_string(int)
@std::exception::~exception()
@std::terminate()
@typeinfo for CThread
@typeinfo for std::bad_alloc
@typeinfo for std::exception
@unsigned short(HcO0H
@unsigned short+Hc{0H
@unsigned short+Hc{PH
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A file with this name is already in the pool.
A protocol message was rejected because it was too big (more than 
A+F`~
A+void(~	I
A+vp~
A,;A0~
A9E0|
A9E<r0
A9\$0
A;D$(
A;D$<
A;D$x
A;E(u
A;F |
A;F8|
A;G ~
A;G ~|A
A;G0}
A;G8}
A;H(t.M
A;L$x
A;M(u
A;MxA
A;N(u2A
A;N(unsigned short
A;T$ L
A;\$(A
A;\$(u
A;\$(|
A;\$H|
A;],|
A;]H|
A;]X|
A;]p|
A;^ E
A;^ |
A;^ ~pA
A;^(|
A;^,|
A;^0|
A;^8|
A;^<|
A;^@|
A;^H|
A;^P|
A;^X|
A;^long long|
A;^p|
A;^unsigned char|
A;_ |
A;_(|
A;_,|
A;_0|
A;_8|
A;_@|
A;_H|
A;_P|
A;_X|
A;long long}
A;t$0u
A;u@u
A;v0u
A;v8u
A;void(u
A;void@u
A;wchar_t@u
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
ARARAp
ARBR0
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRATAp
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRB`\Bp
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRB`
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBWAp
ARBRBRBRBRB`
ARBRB`
ARBRBp
ARBSA`
ATAUARB`
ATBRBRBTBRB`KARA[BRBp
AWAVATS
AWAVATSA
AWAVATSD
AWAVATSH
AWAVATSI
AWAVATSL
AWAVATSM
AWAVATSf
AWAVAUATS
AWAVAUATS1
AWAVAUATSD
AWAVAUATSH
AWAVAUATSI
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPD
AWAVAUATSPE
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVS
AWAVSA
AWAVSH
AWAVSL
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AZBSC
Abandoning attempt to contact %s.  %short
Abandoning attempt to establish session on %s.  %short
Activates/deactivates net message validation
AddBool
AddDouble
AddEnum
AddFloat
AddInt32
AddInt64
AddMessage
AddString
AddUInt32
AddUInt64
After sending last chunk of split packet payload, wait at least this many msecs after last activity before giving up
Already saw decimal point or exponent; can'unsigned short have another one.
AnimationSystemUtils_001
AnimationSystem_001
Apply bandwidth choke to loopback packets
ApplyOverrides_R:  couldn'unsigned short find field from schema %short::%short
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
AssociateNetMessageGroupIdWithChannelCategory: Couldn'unsigned short find or create group %short!
AssociateNetMessageGroupIdWithChannelCategory: Trying to use an unregistered netchannel category!
AssociateNetMessageWithAllChannelCategories: Passed in an invalid net message handle!
AssociateNetMessageWithChannelCategoryAbstract: Passed in an invalid net message handle!
AssociateNetMessageWithChannelCategoryAbstract: Trying to use an unregistered netchannel category!
Atomic
Attempt to compress out of band voice payloads (360 only).
Attempt to send to proxied gameserver %short via steam datagram, but we don'unsigned short have an authorization ticket!
Attempting connection to service in data center '%short'
Attempting to connect via steam datagram using unsigned ticket, as per cl_steamdatagramtransport_debugticket_address
Attempting to negotiate session.
Attempting to restore session.
Average Backing Raw Paths         :  %8.3f
Average Data Bytes                :  %8.3f bytes
Average Memory Usage Per Entity   :  %8.3f bytes
Average Number of Field Paths     :  %8.3f
B0Lcb
B;L0(
B@H+P0H
BRAVAWARA`
BRBVBRBp
BUG_network_config_mismatch
BUG_no_ping_data
BackUp() can only be called after signed char successful Next().
Backup router #%double at %short going offline in %double seconds; seeking replacement
Backup router: %short  Ping = %double+%double=%double (front+back=total)
Bad exponent in floating point number
BakedLODBuilderMgr001
BenchmarkService001
Bidirectional_Messages
BinaryProperties_GetValue
Bitfield
Boolean default must be true or false.
Buffer overflow in net channel %short
BuildDeltaProperties fieldDataBuf
Builtin
Byte size calculation and serialization were inconsistent.  This may indicate signed char bug in protocol buffers or it may be caused by concurrent modification of the message.
C ;B 
C [A^]
C#@t8L
C$;CXuVL
C$???
C$t.I
C(A9G
C(A;F(
C(A;F(uVA
C(H;B(D
C(IcO,I
C,A;F,uH
C,[A^]
C0+K,9
C0A9G
C0H;B0t
C0HcK
C0[A\A^A_]
C4;C 
C8A;@
C8A;F8
C9D'(A
C;<0u
C;D4 
C<;C,
C@H+X0H
C@L+X0L
CAtomicManipulator<CTransform>
CAtomicManipulator<CUtlBinaryBlock>
CAtomicManipulator<CUtlString>
CAtomicManipulator<CUtlSymbolLarge>
CAtomicManipulator<Color>
CAtomicManipulator<DegreeEuler>
CAtomicManipulator<QAngle>
CAtomicManipulator<Quaternion>
CAtomicManipulator<RadianEuler>
CAtomicManipulator<Vector2D>
CAtomicManipulator<Vector4D>
CAtomicManipulator<Vector>
CAtomicManipulator<color32>
CAtomicManipulator<matrix3x4_t>
CAtomicManipulator<matrix3x4a_t>
CBaseAppSystem<INetworkSystem>
CBaseAppSystem<INetworkSystemUtils>
CBidirMsg_RebroadcastGameEvent
CBidirMsg_RebroadcastSource
CBidirMsg_RelayInfo
CBidirMsg_RelayPacket
CBidirMsg_RelayPacket_SignedDestinationAddress_t
CCLCMsg_BaselineAck
CCLCMsg_ClientInfo
CCLCMsg_ClientMessage
CCLCMsg_CmdKeyValues
CCLCMsg_FileCRCCheck
CCLCMsg_ListenEvents
CCLCMsg_LoadingProgress
CCLCMsg_Move
CCLCMsg_RequestPause
CCLCMsg_RespondCvarValue
CCLCMsg_ServerPing
CCLCMsg_ServerPing"P
CCLCMsg_ServerStatus
CCLCMsg_SplitPlayerConnect
CCLCMsg_SplitPlayerDisconnect
CCLCMsg_VoiceData
CCallResult<CNetworkSystem, HTTPRequestCompleted_t>
CCallResult<ConfigFetch, HTTPRequestCompleted_t>
CCallback<CNetworkSystem, P2PSessionRequest_t, false>
CCallback<CNetworkSystem, P2PSessionRequest_t, true>
CCallbackBase
CCallbackImpl<8>
CClientDatatableStack
CConCommandMemberAccessor<CNetworkMessages>
CDefaultAccessor
CDeltaCalculator::FieldCalcDelta fromBits
CDeltaCalculator::FieldCalcDelta toBits
CDeltaFieldPathTracer
CEmptyConVar
CEncodeInfo
CEntitySystem::BuildEntityNetworking (%short build of %short) took %.3f msecs for %double out of %double classes
CFieldPath tracing ended
CFieldPath tracing started
CFieldPath::Path_t *CFieldPath::GetPathData(int)
CFieldPath::Path_t *CFieldPath::Path_AddToTail(const CFieldPath::Path_t &)
CFieldPath::Path_t CFieldPath::Path_PopLast()
CFieldPathHuffmanEncoder::INode
CFieldPathHuffmanEncoder::InternalNode
CFieldPathHuffmanEncoder::LeafNode
CFlattenedSerializer::ApplyOverrides_R
CFlattenedSerializer::BuildOverrideField:  Problem initializing replacement field %short::%short
CFlattenedSerializer::Decode
CFlattenedSerializer::Decode array index %double out of range %double for field %short::%short [%double]
CFlattenedSerializer::Encode writeBuf
CFlattenedSerializer::MergeDeltas fieldDataBuf
CFlattenedSerializer::MergeDeltas: invalid parameters passed.
CFlattenedSerializer::MergeDeltas: newBits
CFlattenedSerializer::MergeDeltas: oldBits
CFlattenedSerializer::MergeDeltas: overflowed on flattened serializer '%short'.
CFlattenedSerializer::WriteFieldList
CFlattenedSerializer::WriteFieldList fieldDataBuf
CFlattenedSerializer::WriteFieldListFromUnencodedEntity
CFlattenedSerializerSpewFunc_Log
CFlattenedSerializers
CFlattenedSerializers::BuildMergedSerializedEntity fieldDataBuf
CFlattenedSerializers::CompareSerializedEntities from field %short not present in to
CFlattenedSerializers::CompareSerializedEntities to field %short not present in from
CFlattenedSerializers::SpewSerializer: called with NULL serializer!!!
CFmtStrN<256, false>
CFunctor
CHECK failed: !checkpoints_.empty(): 
CHECK failed: !coded_out.HadError(): 
CHECK failed: !extension->is_repeated: 
CHECK failed: !iter->second.is_repeated: 
CHECK failed: !out.HadError(): 
CHECK failed: (&from) != (this): 
CHECK failed: (&from) != (to): 
CHECK failed: (&other) != (this): 
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL): 
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_REPEATED): 
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL): 
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (REPEATED): 
CHECK failed: ((iter->second).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL): 
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL): 
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (REPEATED): 
CHECK failed: (0) == (BufferSize()): 
CHECK failed: (TYPE_LENGTH_DELIMITED) == (type()): 
CHECK failed: (buffer_size) >= (0): 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) <= (target_->size()): 
CHECK failed: (count) >= (0): 
CHECK failed: (cpp_type((*extension).type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (cpp_type((iter->second).type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (cpp_type(extension->type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (current_size_) > (0): 
CHECK failed: (descriptor->file()->pool()) == (DescriptorPool::generated_pool()): 
CHECK failed: (digits) < (100): 
CHECK failed: (end - target) == (size): 
CHECK failed: (extension->is_packed) == (other_extension.is_packed): 
CHECK failed: (extension->is_packed) == (packed): 
CHECK failed: (extension->type) == (other_extension.type): 
CHECK failed: (extensions_offset_) != (-1): 
CHECK failed: (field->message_type()) == (desc): 
CHECK failed: (field->options().ctype()) == (ctype): 
CHECK failed: (field->type()) == (FieldDescriptor::TYPE_BYTES): 
CHECK failed: (from.GetDescriptor()) == (descriptor): 
CHECK failed: (index) < (size()): 
CHECK failed: (index) >= (0): 
CHECK failed: (last_returned_size_) > (0): 
CHECK failed: (len) >= (0): 
CHECK failed: (message1->GetReflection()) == (this): 
CHECK failed: (message2->GetReflection()) == (this): 
CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): 
CHECK failed: (output->ByteCount()) == (expected_endpoint): 
CHECK failed: (size()) < (Capacity()): 
CHECK failed: (size) <= (6): 
CHECK failed: (str.size()) <= (kuint32max): 
CHECK failed: (target - output->data()) == (output->size()): 
CHECK failed: (temp[0]) == ('1'): 
CHECK failed: (temp[size-1]) == ('5'): 
CHECK failed: (to->GetDescriptor()) == (descriptor): 
CHECK failed: (type) != (WireFormatLite::TYPE_ENUM): 
CHECK failed: (type) != (WireFormatLite::TYPE_GROUP): 
CHECK failed: (type) != (WireFormatLite::TYPE_MESSAGE): 
CHECK failed: IsInitialized(): 
CHECK failed: allow_unknown_field_: 
CHECK failed: builder_: 
CHECK failed: checkpoints_.empty(): 
CHECK failed: cpp_type(extension->type) == WireFormatLite::CPPTYPE_MESSAGE: 
CHECK failed: dynamic.get() != NULL: 
CHECK failed: errors == NULL: 
CHECK failed: extension->is_repeated: 
CHECK failed: field != NULL: 
CHECK failed: field->is_repeated() || (index == -1): 
CHECK failed: fields_ != NULL: 
CHECK failed: file != NULL: 
CHECK failed: generated_database_->Add(encoded_file_descriptor, size): 
CHECK failed: has_default_value(): 
CHECK failed: is_prototype(): 
CHECK failed: is_repeated: 
CHECK failed: iter != extensions_.end(): 
CHECK failed: options->ParseFromString(buf): 
CHECK failed: options_descriptor: 
CHECK failed: original_uninterpreted_options_field != NULL: 
CHECK failed: output->message_prototype != NULL: 
CHECK failed: output: 
CHECK failed: prototype != NULL: 
CHECK failed: result != NULL: 
CHECK failed: snprintf_result > 0 && snprintf_result < kDoubleToBufferSize: 
CHECK failed: snprintf_result > 0 && snprintf_result < kFloatToBufferSize: 
CHECK failed: trees: 
CHECK failed: type > 0 && type <= FieldDescriptor::MAX_TYPE: 
CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: 
CHECK failed: uninterpreted_options_field != NULL: 
CHECK failed: value.size() <= kint32max: 
CH[A^]
CHandle
CIDR address range '%short' in data center '%short' not accepted; address low bits outside of prefix mask must be 0
CLC_Messages
CMemberFunctor1<CParallelProcessorAbstract<CParallelProcessor<BuildFlattenedSerializerInfo_t, CMemberFuncJobItemProcessor<BuildFlattenedSerializerInfo_t, CBuildNetworkSerializerHierarchyOrder, CBuildNetworkSerializerHierarchyOrder>, 1> >*, void (CParallelProcessorAbstract<CParallelProcessor<BuildFlattenedSerializerInfo_t, CMemberFuncJobItemProcessor<BuildFlattenedSerializerInfo_t, CBuildNetworkSerializerHierarchyOrder, CBuildNetworkSerializerHierarchyOrder>, 1> >::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
CMemberFunctor1<CParallelProcessorAbstract<CParallelProcessor<CBuildNetworkSerializerHierarchyOrder::BuildEntry_t, CMemberFuncJobItemProcessor<CBuildNetworkSerializerHierarchyOrder::BuildEntry_t, CBuildNetworkSerializerHierarchyOrder, CBuildNetworkSerializerHierarchyOrder>, 1> >*, void (CParallelProcessorAbstract<CParallelProcessor<CBuildNetworkSerializerHierarchyOrder::BuildEntry_t, CMemberFuncJobItemProcessor<CBuildNetworkSerializerHierarchyOrder::BuildEntry_t, CBuildNetworkSerializerHierarchyOrder, CBuildNetworkSerializerHierarchyOrder>, 1> >::*)(int), int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
CMsgIPCAddress
CMsgPlayerInfo
CMsgQAngle
CMsgServerPeer
CMsgSteamDatagramClientPingSampleReply
CMsgSteamDatagramClientPingSampleReply_RoutingCluster
CMsgSteamDatagramClientPingSampleRequest
CMsgSteamDatagramClientSwitchedPrimary
CMsgSteamDatagramClientSwitchedPrimary_RouterQuality
CMsgSteamDatagramConnectionQuality
CMsgSteamDatagramConnectionStatsClientToRouter
CMsgSteamDatagramConnectionStatsRouterToClient
CMsgSteamDatagramConnectionStatsRouterToClient from %short missing seq_num_r2c
CMsgSteamDatagramConnectionStatsRouterToServer
CMsgSteamDatagramConnectionStatsServerToRouter
CMsgSteamDatagramDataCenterState
CMsgSteamDatagramDataCenterState_DataCenter
CMsgSteamDatagramDataCenterState_Server
CMsgSteamDatagramDiagnostic
CMsgSteamDatagramGameServerAuthTicket
CMsgSteamDatagramGameServerAuthTicket_ExtraField
CMsgSteamDatagramGameserverPing
CMsgSteamDatagramGameserverSessionEstablished
CMsgSteamDatagramGameserverSessionRequest
CMsgSteamDatagramLinkInstantaneousStats
CMsgSteamDatagramLinkLifetimeStats
CMsgSteamDatagramNoSession
CMsgSteamDatagramRouterPingReply
CMsgVector
CMsgVector2D
CMsgVoiceAudio
CMsg_CVars
CMsg_CVars_CVar
CNETMsg_Disconnect
CNETMsg_Disconnect_t
CNETMsg_NOP
CNETMsg_NOP"'
CNETMsg_NOP_t
CNETMsg_SetConVar
CNETMsg_SignonState
CNETMsg_SpawnGroup_Load
CNETMsg_SpawnGroup_LoadCompleted
CNETMsg_SpawnGroup_ManifestUpdate
CNETMsg_SpawnGroup_SetCreationTick
CNETMsg_SpawnGroup_Unload
CNETMsg_SplitScreenUser
CNETMsg_SplitScreenUser_t
CNETMsg_StringCmd
CNETMsg_Tick
CNetArraySerializerCountInOtherField: Array serializer requires the 'countField' metadata tag indicating which field contains the count!
CNetArraySerializerCountInOtherField: Cannot find field name %short in struct %short!
CNetArraySerializerCountInOtherField: Field %short in struct %short is using an unsupported count type!
CNetArraySerializerCountInOtherField: Field %short must occur prior to field %short in struct %short!
CNetChan
CNetChan %p "%short" is naively talking to self
CNetChan::ProcessConnectionIDHeader() Connection ID with system "%short" reset using id %X:%X. Was %X:%X
CNetChan::ProcessConnectionIDHeader() received connection id header %X %X from "%short"
CNetChan::ProcessPacketHeader() Connection ID with system "%short" finalized as %X:%X
CNetChan::SendNetMessage: SerializeAbstract for message %short failed!
CNetChan::SendNetMessage: Trying to send message %short, which is an invalid category for this channel!
CNetChan::SendNetMessage: Unable to send message %short, buffer is full!
CNetChan::SetMaxBufferSize: cant preserve exiting data %int>%i.
CNetChan::Setup for %short
CNetChan::Shutdown
CNetChan::Shutdown sending CNETMsg_Disconnect_t to %short
CNetChan_TransmitBits->send
CNetMessagePB<-1, NetMessageConnectionClosed, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<-1, NetMessageConnectionCrashed, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<-1, NetMessagePacketEnd, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<-1, NetMessagePacketStart, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<-1, NetMessageSplitscreenUserChanged, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<0, CNETMsg_NOP, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<1, CNETMsg_Disconnect, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetMessagePB<3, CNETMsg_SplitScreenUser, (SignonGroup_t)11, (NetChannelBufType_t)1, false>
CNetworkEncodingStats
CNetworkFieldChangedEventQueue::QueueChange:  ran out of scratch data space!!!
CNetworkFieldSerializerAllocator
CNetworkMessages
CNetworkMessages::AllocateAndCopyConstructNetMessageAbstract unable to allocate unknown message type!
CNetworkMessages::AllocateUnserializedMessage unable to allocate unknown message type!
CNetworkMessages::DeallocateUnserializedMessage unable to deallocate unknown message type!
CNetworkMessages::FindOrCreateGroupId: Too many network groups!
CNetworkMessages::FindOrCreateNetMessage: It is illegal to register new net messages after serialization!
CNetworkMessages::FindOrCreateNetMessage: Message %short is expected to have already been registered!
CNetworkMessages::FindOrCreateNetMessageSchema: It is illegal to register new net messages after serialization!
CNetworkMessages::FindOrCreateNetMessageSchema: Message %short is expected to have already been registered!
CNetworkMessages::Serialize attempted to serialize signed char non-serializeable message [%short]!
CNetworkMessages::Unserialize encountered unknown network message type %u!
CNetworkSerializer
CNetworkSerializer: Error decoding field %short::%short from the network stream!
CNetworkSerializer: The array serializer of field %short::%short generated an error!
CNetworkSerializer: The array unserializer of field %short::%short generated an error!
CNetworkSerializer: The decoder of field %short::%short produced the incorrect type!
CNetworkSerializer: The encoder of field %short::%short generated an error!
CNetworkSerializer: The serializer of field %short::%short generated an error!
CNetworkSerializer: The serializer of field %short::%short produced the incorrect type!
CNetworkSerializer: The serializer of struct field %short::%short generated an error!
CNetworkSerializer: The unserializer of field %short::%short generated an error!
CNetworkSerializer: The unserializer of struct field %short::%short generated an error!
CNetworkSerializer: Unable to find network encoder named %short!
CNetworkSerializer::Init:  Couldn'unsigned short find field %short in iterator for %short
CNetworkSerializerPB
CNetworkSystem
CNetworkSystem::BufferToBufferDecompress with improperly sized dest buffer (%u in, %llu needed)
CNetworkSystem::BufferToBufferDecompress with improperly sized dest buffer (%u in, %u needed)
CNetworkSystem::FlushPeerToPeerChannels
CNetworkSystem::Init() m_SteamAPIContextClient.Init ( ) failed (no Steam?)
CNetworkSystem::SendLoopPacket:  failed to allocate loopback_t!!!
CNetworkSystem::SendLoopPacket:  packet too big (%int).
CNetworkSystem::SendPacket Warning: %short : %short
CNetworkSystem::SendPacket: bad netadr type (%int)
CNetworkSystem::SendPacket: bad ns_address type (%int)
CNetworkSystem::ShutdownPeerToPeerNetworking called but channel still exists
CNetworkSystem::TerminatePeerToPeerSockets closing peer connection to %short:%double
CNetworkSystemUtils
CNetworkedQuantizedFloat
COLORCORRECTION_VERSION_1
CPPTYPE_BOOL
CPPTYPE_DOUBLE
CPPTYPE_ENUM
CPPTYPE_FLOAT
CPPTYPE_INT32
CPPTYPE_INT64
CPPTYPE_MESSAGE
CPPTYPE_STRING
CPPTYPE_UINT32
CPPTYPE_UINT64
CPostConnectCallback
CQueuedPacketSender
CQueuedPacketSender: num queued packets >= nMaxQueuedPackets. Not queueing anymore.
CRefCountServiceBase<true, CRefMT>
CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
CSVCMsgList_GameEvents
CSVCMsgList_GameEvents_event_t
CSVCMsgList_UserMessages
CSVCMsgList_UserMessages_usermsg_t
CSVCMsg_BSPDecal
CSVCMsg_ClassInfo
CSVCMsg_ClassInfo_class_t
CSVCMsg_ClearAllStringTables
CSVCMsg_CmdKeyValues
CSVCMsg_CreateStringTable
CSVCMsg_CrosshairAngle
CSVCMsg_FixAngle
CSVCMsg_FlattenedSerializer
CSVCMsg_FullFrameSplit
CSVCMsg_GameEvent
CSVCMsg_GameEventList
CSVCMsg_GameEventList_descriptor_t
CSVCMsg_GameEventList_key_t
CSVCMsg_GameEvent_key_t
CSVCMsg_GameSessionConfiguration
CSVCMsg_GetCvarValue
CSVCMsg_HLTVStatus
CSVCMsg_Menu
CSVCMsg_PacketEntities
CSVCMsg_PacketReliable
CSVCMsg_PeerList
CSVCMsg_Prefetch
CSVCMsg_Print
CSVCMsg_SendTable
CSVCMsg_SendTable_sendprop_t
CSVCMsg_ServerInfo
CSVCMsg_SetPause
CSVCMsg_SetView
CSVCMsg_Sounds
CSVCMsg_Sounds_sounddata_t
CSVCMsg_SplitScreen
CSVCMsg_StopSound
CSVCMsg_TempEntities
CSVCMsg_UpdateStringTable
CSVCMsg_UserMessage
CSVCMsg_VoiceData
CSVCMsg_VoiceInit
CSchemaInstallCallback
CSchemaManipulator<CTransform>
CSchemaManipulator<CUtlBinaryBlock>
CSchemaManipulator<CUtlString>
CSchemaManipulator<CUtlSymbolLarge>
CSchemaManipulator<Color>
CSchemaManipulator<DegreeEuler>
CSchemaManipulator<QAngle>
CSchemaManipulator<Quaternion>
CSchemaManipulator<RadianEuler>
CSchemaManipulator<Vector2D>
CSchemaManipulator<Vector4D>
CSchemaManipulator<Vector>
CSchemaManipulator<color32>
CSchemaManipulator<matrix3x4_t>
CSchemaManipulator<matrix3x4a_t>
CSchemaRegistration
CSchemaRegistration_networksystem
CSendSerializerStack
CSerializerStack
CSocketThread
CStackPair::CStackPair(const CFieldPath &, CFlattenedSerializer *, uint8 *, uint8 *, int, NetworkSerializationMode_t, bf_read *, bool, CNetworkFieldChangedEventQueue *, int)
CSteamDatagramTransportClient::RecvDatagram
CSteamDatagramTransportClient::SendDatagram
CSteamDatagramTransportClient::Think
CTHcCP
CTSListBase: Misaligned list
CTSListBase::CTSListBase()
CTSQueue: Misaligned queue
CTSQueue<CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, false>::CTSQueue() [T = CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, bTestOptimizer = false]
CTSQueue<ReceivedData_t *, false>::CTSQueue() [T = ReceivedData_t *, bTestOptimizer = false]
CTSQueue<loopback_t *, false>::CTSQueue() [T = loopback_t *, bTestOptimizer = false]
CThread::CThread()
CThread::GetThreadHandle()
CThread::Init()
CThread::IsAlive()
CThread::IsThreadRunning()
CThread::Join(unsigned int)
CThread::OnExit()
CThread::SetPriority(int)
CThread::Start(unsigned int, ThreadPriorityEnum_t)
CThread::WaitForCreateComplete(CThreadEvent*)
CThread::~CThread()
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadMultiWaitEvent::Set()
CThreadRWLock::LockForWrite()
CThreadRWLock::UnlockWrite()
CThreadRWLock::WaitForRead()
CThreadRWLock_FastRead::CThreadRWLock_FastRead()
CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
CThreadRWLock_FastRead::UnlockRead_LockForWrite()
CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
CThreadSemaphore::Release(int, int*)
CThreadSemaphore::~CThreadSemaphore()
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::Wait(unsigned int)
CThreadSyncObject::~CThreadSyncObject()
CThreadedSocketQueue::CSocketThread::CSocketThread(int, int, CThreadedSocketQueue::LimitReportVec_t &)
CTier0AppSystem<INetworkSystem>
CTier0AppSystem<INetworkSystemUtils>
CTier1AppSystem<INetworkSystem, 0>
CTier1AppSystem<INetworkSystemUtils, 0>
CTier2AppSystem<INetworkSystem, 0>
CTransform
CType
CUtlBinaryBlock
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlCStringConversion
CUtlCharConversion
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlSlot
CUtlString
CUtlSymbolLarge
CVProfNode::EnterScope()
CVProfNode::ExitScope()
CVProfNode::GetSubNode(char const*, int, char const*, int)
Can'unsigned short 
Can'unsigned short EnableLoopbackBetweenSockets between socket %double and %double, not enough slots
Can'unsigned short delay send signed char packet larger than maxroutable size %double/%double
Can'unsigned short get here.
Can'unsigned short get here: failed to get default value as string
Can'unsigned short make WebAPI flood report; CreateHTTPRequest failed
Can'unsigned short make WebAPI flood report; No ISteamGameServer
Can'unsigned short make WebAPI flood report; No ISteamHTTP
Can'unsigned short make WebAPI flood report; SendHTTPRequest failed
Can'unsigned short make WebAPI flood report; request already active?
Cannot allocate buffer larger than kint32max for 
Cannot find service ID in network.  We don'unsigned short know what data center we'long double restrict trying to connect to!
Cannot listen on steam datagram.  No SteamGameServerUtils!
Cannot register change callback priorities at this stage! Must do it earlier!
Cannot use priority equal to NETWORK_FIELD_CHANGE_DEFAULT_PRIORITY!
Cffffff.
ChangeAccessorFieldPathIndex_t
Check your Internet connection, and make sure your browser can access the following URL:
ClearField
Client %short on same router %short, session ID changed.
Client Messages
Cluster %short has invalid router address '%short'
CmdLinkAH
Code of relay cluster to use.  If not empty, we will only use relays in that cluster.  E.g. 'iad'
Color
Communication with at least one Steam Datagram routing cluster has been restored.
Communications with routing cluster '%short' established.
Communications with routing cluster '%short' have been disrupted.
Communications with routing cluster '%short' restored.
ComputeDepth
ConColorMsg(Color const&, char const*, ...)
ConCommand
ConCommandBase
ConVar
ConVar(%short) defined with infinite float value (%short)
ConVarRef %short doesn'unsigned short point to an existing ConVar
ConfigurationSystem_001
Connectionless rate limited: %llu packets from %u.%u.%u.%u
Constructing fake local field from metadata %short::%short in %short
Control message of type %double failed serialization consistency check!  (%double, expected %double)
Control message of type %double is too big.  (%double bytes; max is %double)
Could not create an instance of 
Could not find field named "
Could not find field type.
Couldn'unsigned short allocate any %short IP port, tried %double addresses
Couldn'unsigned short parse default value "
Couldn'unsigned short resolve offset %double in %short at path %short
Couldn'unsigned short resolve offset %double in %short at path (%double = '%short')
Count
Cp[A^]
CreateInterface
CreateSimpleThread failed
Creating channel for %short:%double as NET_CATEGORY_PEER_TO_PEER
D$ Hc
D$ L9
D$(Ic
D$,A;D$
D$,IcD$(
D$0H9
D$4IcD$0
D$<A;D$,
D$@L+`0I
D$HIc
D$NIc
D$XA9
D$XfA
D$`Lc
D$lIcD$h
D$pD9h0t\I
D9Q(}
D9r0L
D9sXu
D9|30u
D9|>0u
D;`,|
D;`8|
D;chI
D;hX}
D;k,|
D;px|
D;s0u
D;sXI
D;short ~double
D;xx|
D;{<|
DEFAULT_WRITE_PATH
DIALOG_ASKCONNECT
DIALOG_ENTRY
DIALOG_MENU
DIALOG_MSG
DIALOG_TEXT
DIALOG_TYPE
DTI %short
DTI reset
DTI: wrote client stats into %s.
Data center '%short' has missing or invalid 'address_ranges'
Data contains revision %double, not newer than current revision %double; ignoring.
DataCenter
DataRouterToClient
DebugTextureInfo001
Decals
Declared Class
Declared Enum
Default value for an enum field must be an identifier.
DegreeEuler
Dependency unavailable
DescriptorProto
DescriptorProtosH
DevMsg(char const*, ...)
Didn'unsigned short find quality metrics for old primary?
Discarding inactive session on %s.  %short
Display info about signed char message (by classname or id)
Don'unsigned short bother compressing packets below this size.
Don'unsigned short poke net_flood_report_url more often than once per N seconds
DotaCardGameClient_001
Drops next __int128 packets on client
Dump UDP packets summary to console
Dump non-loopback udp only
Duplicate entry %short already exists in field dict!
E A;E
E$IcE 
E(IcL$,I
E,IcE(
E0A9F
E4A;E 
E9l$(
E9w0M
E9|$$
E9|$`~\
E;.|kH
E;__float128 A
E;ex|
E;f0A
E;fHA
E;fPD
E;float A
E;float(A
E;l$@|
E;l$pu
E;p,|
E;t$@
E;t$H
E;t$x|
E;u(D
E;|$p
E;}pD
E;~ A
E;~8A
E;~hu
E<IcE8
E@F;|
E@L+h0I
EDIcE@
ENetworkDisconnectionReason
EQueryCvarValueStatus
ERROR
ERROR! SendData reliable data too big (%int)
ERROR: Field %short::%short unable to deduce unserializer for type (%short)!
ESplitScreenMessageType
ESteamDatagramMsgID
E\IcEX
E`H9B
EconItemToolModel_001
Encountered 2 fields "%short" and "%short" in struct "%short" using the same change callback with different change callback types!
Encountered message on net channel %short with an invalid network category! [net message %short]
End of input was reached and '[' was not matched by ']'
End of input was reached and '{' was not matched by '}'
End-of-file inside block comment.
End-to-end connection: %short
EngineServiceMgr001
Entities
Enum type "
EnumDescriptorProto
EnumOptions
EnumValueDescriptorProto
EnumValueOptions
Enums must contain at least one value.
EnvironmentMapBuilder_001
Error
Error creating HTTP request to fetch config from CDN.
Error installing message handlers into signed char net channel: missing handlers in channel %short!
Error parsing net channel %short, net message %short
Error parsing text-format 
Error processing network message %short! Channel is closing!
Error reporting not implemented.
Error while parsing option value for "
Error: Components count + networkable data type must be the same for all instances of network field serializer (%short)!
Error: Duplicate network array field serializer registered (%short)!
Error: Duplicate network field change callback registered (%short)!
Error: Duplicate network field serializer registered (%short)!
EtIcEp
EventSystem001
Events
Exceeded max number proxies in CFlattenedSerializer::BuildHierarchy()
Expect signed char decimal number.
Expected "
Expected double.
Expected eight hex digits up to 10ffff for \U escape sequence
Expected four hex digits for \u escape sequence.
Expected hex digits for escape sequence.
Expected identifier.
Expected integer or identifier.
Expected integer.
Expected string.
Extension "
Extension conflicts with extension already in database: extend 
Extension factory'short GetPrototype() returned NULL for extension: 
Extension number $0 has already been used in "$1" by extension "$2" defined in $3.
Extension number $0 has already been used in "$1" by extension "$2".
Extension numbers cannot be greater than $0.
Extension numbers must be positive integers.
Extension range $0 to $1 includes field "$2" ($3).
Extension range $0 to $1 overlaps with already-defined range $2 to $3.
Extension range end number must be greater than start number.
ExtensionRange
Extensions of MessageSets must be optional messages.
Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend signed char non-lite type to contain signed char lite type, but the reverse is allowed.
ExtraField
F E+|$
F$IcF 
F(@t3H
F,IcF(
F0D9k(
F0Ic^
F3,0I
F4IcF0
F9l00L
F<IcF8
F@H+F8H
F@L+p0I
FALSE
FATAL
FCVAR_NEVER_AS_STRING
FDIcF@
FLIcFH
F\IcFX
Failed
Failed to bind socket.  Error code 0x%08X.
Failed to communicate with routing cluster '%short'.
Failed to create UDP socket to talk to %s.  %short
Failed to fetch network config from CDN.  Steam datagram service will not be available!
Failed to fetch network config from CDN.  Using local network config, which might be out of date.
Failed to install message handler for message %short in channel %short!
Failed to set socket nonblocking mode.  Error code 0x%08x.
Failed to set socket recv buffer size.  Error code 0x%08x.
Failed to set socket send buffer size.  Error code 0x%08x.
Failed to set steam datagram ticket.  Result code %d.  %short
Failed to unserialize message %short: expected message ID %u, encountered %u!
False
Field "
Field "%short::%short" requested to be serialized as unknown type "%short"!
Field "%short::%short" requested unknown user network serializer %short!
Field %short has inverted min/max values![%float->%float]
Field %short tried to quantize an out-of-range value (%float, range is %float->%float) clamping.
Field %short tried to quantize an out-of-range value (%float, range is %float->%float), clamping.
Field %short was flagged QFE_ENCODE_INTEGERS_EXACTLY, but didn'unsigned short specify enough bits, upping bitcount from %double to %double for range [%float->%float]
Field %short was flagged to both round up and down, these flags are mutually exclusive [%float->%float]
Field %short was flagged to encode zero exactly, but min/max range doesn'unsigned short span zero [%float->%float]
Field %short::%short cannot be networked unless the file containing type %short has its $SchemaFile added to the VPC! (For signed char resource, this is the DECLARE_RESOURCE_TYPE macro.)
Field %short::%short requested unknown user array network serializer %short!
Field %short::%short requested unknown user network serializer %short!
Field %short::%short specified an unknown field change callback %short!
Field does not match message type.
Field is repeated; the method requires signed char singular field.
Field is singular; the method requires signed char repeated field.
Field names match, but types do not to match %short::%short is type %short vs. type %short
Field number $0 has already been used in "$1" by field "$2".
Field numbers $0 through $1 are reserved for the protocol buffer library implementation.
Field numbers cannot be greater than $0.
Field numbers must be positive integers.
Field with message or enum type missing type_name.
Field with primitive type has type_name.
FieldDescriptorProto
FieldDescriptorProto.extendee not set for extension field.
FieldDescriptorProto.extendee set for non-extension field.
FieldDescriptorProto.oneof_index $0 is out of range for type "$1".
FieldDescriptorProto.oneof_index should not be set for extensions.
FieldOptions
FieldPathEncodeFinish
FieldSize
Fields of oneofs must themselves have label LABEL_OPTIONAL.
File already exists in database: 
File appears to be in generated pool but wasn'unsigned short registered: 
File is already registered: 
File recursively imports itself: 
FileDescriptorProto
FileDescriptorSet
FileOptions
Files that do not use optimize_for = LITE_RUNTIME cannot import files which do use this option.  This file is not lite, but it imports "
Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.
First argument to Swap() (of type "
First argument to SwapFields() (of type "
Fixed Array
FlIcFh
FlattenedSerializersVersion001
Flood report WebAPI call completed OK.
Flood report WebAPI call failed: failed=%double, status=%double
FmtStrVSNPrintf truncated to %double without QUIET_TRUNCATION specified! String: "%short"
FontManager_001
For debugging, generate our own (unsigned) ticket, using the specified gameserver address.  Router must be configured to accept unsigned tickets.
For network encoding stats, provide signed char notes field if field change count is above this many standard deviations for the average field change counts for the serializer.
For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: ("x.x.x.x" )
Force the use of signed char particular set of proxy servers.  Comma-separated list.
Forces larger payloads.
Forgetting client %s.  Last communication was %.f seconds ago
Found -NoQueuedPacketThread, so no queued packet thread will be created.
FtIcFp
G Ic4
G ffff.
G(HcH
G0H;F0t
G8H	p(]
G8I;G@
G<IcO8
G@H+x0H
G@L+x0I
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
GameserverPingReply
GatherAllFieldOffsets_R:  local offset of %short::%short %u is too large (%u max)
Generated new connection id %X for use with remote system "%short"
Generic
GetBool
GetDouble
GetEmptyStringAlreadyInited
GetEnum
GetFloat
GetInt32
GetInt64
GetMessage
GetPathData failed for read only CFieldPath
GetRepeatedBool
GetRepeatedDouble
GetRepeatedEnum
GetRepeatedFloat
GetRepeatedInt32
GetRepeatedInt64
GetRepeatedMessage
GetRepeatedString
GetRepeatedStringReference
GetRepeatedUInt32
GetRepeatedUInt64
GetString
GetStringReference
GetUInt32
GetUInt64
Gfff.
Got network config from CDN.  %short
H	p(]
H	wchar_t(]
H H;9u)H
H!wchar_t(]
H+A0H
H+A0I
H+A@H
H+B0H
H+B@H
H+C@H
H+CXfH
H+F0H
H+F@H
H+H0H
H+H0I
H+H@H
H+J0H
H+J@H
H+N0H
H+N@H
H+O@H
H+P0H
H+Q@H
H+V0H
H+X0H
H+X@H
H+Y@H
H+long long@H
H+p@H
H+q@H
H+wchar_t@H
H+{@H
H9A@u
H9GXt
H9J short
H9VXt%H
H9_@u
H9{@unsigned short
H;0u(
H;8u(
H;8u)
H;8u+
H;A8tUL
H;C`unsigned short
H;H short
HHHH>
H[A\A]A^A_]
H[A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
HasField
Hc@XHi
Hc@pH
Hc@pI
HcC H
HcC(I9
HcCPH
HcD20H
HcG,H
HcG0H
HcN01
HcO(H
HcO,I
HcO8H
HcQ8H
HcQxH
HcRXH
HcW<H
Hc_(H
Hcw(H
HelpSystem_001
Hex and octal numbers must be integers.
Hit end of input before closing quote (%char)
Hit end of line before closing quote (%char)
Host game server ip
HostStateMgr001
How long p2p connection requests should linger before we completely ignore them
I CUtlLinkedList<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int>, unsigned int> >::AllocInternal(bool) [T = CUtlKeyValuePair<CFieldPath, empty_t>, S = unsigned int, ML = false, I = unsigned int, M = CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int>, unsigned int>]
I CUtlLinkedList<NetPacket_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<NetPacket_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = NetPacket_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<NetPacket_t *, unsigned short>, unsigned short>]
I+D$8
I+FxH=
I+O`I
I9FXt H
I9]
I9}@unsigned short
I;3t-H9
I;4$u(
IAppSystem
IAtomicManipulator
ICommandCallback
ICommandCompletionCallback
IConCommandBaseAccessor
IDeltaFieldPathTracer
IFlattenedSerializerSpewFunc
IFlattenedSerializers
INVALID_CPPTYPE
INetChannel
INetChannel::SetCategories: Network category wasn'unsigned short registered!
INetChannelInfo
INetworkEncodingStats
INetworkFieldSerializerAllocator
INetworkMessageInternal
INetworkMessages
INetworkSystem
INetworkSystem::RegisterNetworkCategory: Attempted to register category %u twice (debug name: %short and %short)
INetworkSystem::RegisterNetworkCategory: all categories must have ids between 0-31!
INetworkSystemUtils
IQueuedPacketSender
IQuickTime001
IRefCounted
ISchemaManipulator
ISteamDatagramTransportGameserver
IVConCommDataReceived
Ic4$H
IcD$(A
IcD$(I9
IcD$,I
IcD$,L
IcD$hA
IcE A
IcE(A
IcE4H
IcE8A
IcE@A
IcEXA
IcEpA
IcF A
IcF H
IcF(A
IcF(I9
IcF,L
IcF0A
IcF8A
IcF@A
IcFHA
IcFPH
IcFPI
IcFXA
IcFhA
IcFpA
IcG(H
IcG(H9
IcG,I
IcG,L
IcG8A
IcL$(H9
IcL$(L
IcL$,H
IcN(I
IcN,L
IcO(H9
IcO,L
IcT$(H
IcT$(I
IcT$,L
IcU(1
IcV(H
IcV,H
IcV,L
IcW(I
Ic_ M
Ict$(L
Icu(H
Icu4H
Icw(L
Ic|$(L
Ic|$<H
Ic~(L
If N consecutive pings to signed char port fail, after having received successful communication, mark that port as unavailable for signed char while, and try signed char different one.
If non zero, listen for proxied traffic on the specified port
If set, only net_showmsg spew for data inbound on this socket name e.g. client, server, etc.
If signed char splitpacket has more than this many fragments, print signed char warning to console
If signed char splitpacket has more than this many fragments, use the reliable/ack based protocol
If the first N pings to signed char port all fail, mark that port as unavailable for signed char while, and try signed char different one.  Some ISPs and routers may drop the first packet, so setting this to 1 may greatly disrupt communications.
If true when log when signed char query is blocked (can cause very large log files)
If unable to bind to initial port, how many more to try binding.
If we get signed char completed splitpacket requesting acks, send the final 'success' ack this many times
Ifff.
Ifffff.
Ignoring %short, was in previous state only, now outside of valid range for field
Ignoring packet from %short:%double as it is not from Steam Channel P2P
Ignoring packet from %short:%double as remote is from signed char game server
Import "
Incorrect client challenge in GameserverSessionEstablished from %s.  Reply could be spoofed, ignoring.
Incorrect client challenge in RouterPingReply from %s.  Reply could be spoofed, ignoring.
Incorrect client challenge in S2A_PING2REPLY from %s.  Reply could be spoofed, ignoring.
Incorrect client cookie in NoSession from %s.  Could be spoofed, ignoring.
Index must be -1 for non-repeated fields
Index out-of-bounds (field is empty).
IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>, CFieldPath::Path_t, short>::AddMultipleToTail(int, const ElemType_t *) [B = CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>, T = CFieldPath::Path_t, I = short]
IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, unsigned int, short>::AddMultipleToTail(int, const ElemType_t *) [B = CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, T = unsigned int, I = short]
InitFakeField:  Couldn'unsigned short find schema lookup for '%short' of type '%short'
InitFakeField:  Parser function returned false for '%short' of type '%short'
Initial attempt to contact %short failed.  Giving up after %double consecutive failures
Input contains no data
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Integer out of range.
Intentionally vague touch behavior for %p
Interpreting non ascii codepoint %d.
Invalid
Invalid JSON data on line %double: %short
Invalid address range '%short' in data center '%short'
Invalid cluster name '%short'; must be exactly 3 characters
Invalid code point \u%04x
Invalid combination of steam datagram config and gameserver sample.  %short
Invalid control characters encountered in text.
Invalid data center name '%short'; must be exactly 3 characters
Invalid escape character 0x%02x
Invalid escape character 0x%02x ('\%char')
Invalid escape sequence in string literal.
Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().
Invalid float number: 
Invalid number starting with '%short'
Invalid proto descriptor for file "
Invalid public dependency index.
Invalid strings::Substitute() format string: "
Invalid symbol name: 
Invalid value for boolean field "
Invalid weak dependency index.
Invalid wire type for CPPTYPE_INT32: 
Invalid wire type for CPPTYPE_INT64: 
Invalid wire type for CPPTYPE_MESSAGE: 
Invalid wire type for CPPTYPE_UINT32: 
Invalid wire type for CPPTYPE_UINT64: 
JcD20H
JcL20H
Jfffff.
Jitter fakelag packet time
K [A^]
K(Ict$,L
K([A^]
K0ffffff.
K8;C<
K8;C<}...
K8;C<}int
K8;C<}p
K8;C<}yM
K8;C<}}
KHIcT$,L
KH[A^]
KcD'0H
KcD/0H
KcD=0H
KeyValueCache001
Kfff.
L$ Hc
L$ Hc<
L$ L+
L$ Lc,
L$(IcV,L
L$3$?
L$@L+a0I
L$`I;L$ht
L40Hc
L95*Q
L956K
L9v@u
L?333?
LABEL_OPTIONAL
LABEL_REPEATED
LABEL_REQUIRED
LITE_RUNTIME
Label
Lag all incoming network data (including loopback) by this many milliseconds.
LcO,D
Lco(M
Leaked channel %short remote %short
LightingBuilderMgr001
Like net_showmsg, but only spew reliable messages
List all registered net messages
Listening for Steam datagram transport on port %double
Loaded %short network config file.  %short
Loaded revision %double OK
Local Player
Localize_001
Location
Log packets to files
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
Lost backup #%double session on %s.  %short
Lost connectivity to ALL Steam Datagram routing clusters.  Possible problem with local internet connection?
Lost primary session on %s.  %short
M8A;E<
M8A;E<}_
MATCHFRAMEWORK_001
MNetworkAlias
MNetworkArraySerializer
MNetworkAssumeNotNetworkable
MNetworkBitCount
MNetworkBufType
MNetworkChangeCallback
MNetworkCountField
MNetworkDisable
MNetworkEnable
MNetworkEncodeFlags
MNetworkEncoder
MNetworkExcludeByName
MNetworkExcludeByUserGroup
MNetworkGroup
MNetworkIfFieldTrue
MNetworkIncludeByName
MNetworkIncludeByUserGroup
MNetworkMaxValue
MNetworkMinValue
MNetworkNoBase
MNetworkOkToRedispatch
MNetworkOptionalSerializer
MNetworkOverride
MNetworkPriority
MNetworkProceduralDataHelper
MNetworkSendProxyRecipientsFilter
MNetworkSerializeAs
MNetworkSerializer
MNetworkTypeAlias
MNetworkUserGroup
MNetworkUserGroupSendProxyRecipientsFilter
MNetworkVarNames
MNetworkVarsAtomic
MNetworkVarsDisable
MResourceTypeForInfoType
MSG_SPLITSCREEN_ADDUSER
MSG_SPLITSCREEN_REMOVEUSER
MakeSerializersMatch failed for %short
MakeSerializersMatchByMeta failed for %short
Malformed MsgSteamDatagramDataRouterToClient from %short: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToClient from %short: header size is %double, packet size is %double
Malformed MsgSteamDatagramDataRouterToClient from %short: packet too small
Malformed MsgSteamDatagramDataRouterToClient from %short: stats message size doesn'unsigned short make sense.  Header size %double, stats message size %double
Malformed MsgSteamDatagramDataRouterToServer from %short: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToServer from %short: Invalid steam ID 0x%016llx
Malformed MsgSteamDatagramDataRouterToServer from %short: header size is %double, packet size is %double
Malformed MsgSteamDatagramDataRouterToServer from %short: packet too small
Malformed MsgSteamDatagramDataRouterToServer from %short: reserved flags not set properly
Malformed MsgSteamDatagramDataRouterToServer from %short: stats message size doesn'unsigned short make sense.  Header size %double, stats message size %double
Malformed MsgSteamDatagramDataRouterToServer from %short: varint-encoded channel numbers not yet supported
MapListService_001
MaterialUtils_001
Maximum allowed file size for uploading in MB
Maximum amount of foreign packets (no established connection) allowed per frame before we discard
Maximum amount of time in ms to spend processing the network socket during signed char frame
Maximum queries per second to respond to from anywhere.
Maximum queries per second to respond to from signed char single IP address.
Mc4$A9
Mc4$D
Mc4$M
McG,M
Mct$ I
Mcu I
Mcu M
Mc|$ M
Mc}`M
MeshSystem001
MeshUtils001
Message extensions cannot have required fields.
Message missing required fields: 
Message type "
MessageOptions
MessageSets cannot have fields, only extensions.
Messages can'unsigned short have default values!
Messages can'unsigned short have default values.
MethodDescriptorProto
MethodOptions
Mffff.
Mismatch between client %short and server %short
Missing field: FileDescriptorProto.name.
Missing name.
Multiple extension registrations for type "
MutableRawRepeatedField
MutableRepeatedMessage
N Hc<
N ffff.
N@H+q0H
N@L+q0I
NETWORK_DISCONNECT_BADDELTATICK
NETWORK_DISCONNECT_BANADDED
NETWORK_DISCONNECT_DISCONNECTED
NETWORK_DISCONNECT_EXITING
NETWORK_DISCONNECT_HLTVDIRECT
NETWORK_DISCONNECT_HLTVSTOP
NETWORK_DISCONNECT_HOST_ENDGAME
NETWORK_DISCONNECT_INVALID
NETWORK_DISCONNECT_KICKBANADDED
NETWORK_DISCONNECT_KICKED
NETWORK_DISCONNECT_LEAVINGSPLIT
NETWORK_DISCONNECT_LOOPSHUTDOWN
NETWORK_DISCONNECT_LOST
NETWORK_DISCONNECT_NOMORESPLITS
NETWORK_DISCONNECT_NOSPECTATORS
NETWORK_DISCONNECT_OVERFLOW
NETWORK_DISCONNECT_RECONNECTION
NETWORK_DISCONNECT_SHUTDOWN
NETWORK_DISCONNECT_STEAM_BANNED
NETWORK_DISCONNECT_STEAM_INUSE
NETWORK_DISCONNECT_STEAM_LOGON
NETWORK_DISCONNECT_STEAM_TICKET
NETWORK_DISCONNECT_TIMEDOUT
NETWORK_DISCONNECT_USERCMD
NET_Messages
NET_ReceivePacket: %short
NamePart
Need space between identifier and decimal point.
Need space between number and identifier.
Net graph %short
Net packet timing values don'unsigned short make sense.  Send time=%llu, Recv time=%llu, Now=%llu, Peer delay=%double
Net status for host %short:
NetChannel '%short':
NetMessage '%short' still using auto-assigned, has to generate id from name CUtlStringToken hashcode = %double
NetMessageConnectionClosed
NetMessageConnectionClosed_t
NetMessageConnectionCrashed
NetMessageConnectionCrashed_t
NetMessagePacketEnd
NetMessagePacketEndB
NetMessagePacketEnd_t
NetMessagePacketStart
NetMessagePacketStart_t
NetMessageSplitscreenUserChanged
NetMessageSplitscreenUserChanged_t
Network System Initialized
Network config file '%short' not present; not loaded.
Network config missing revision identifier.
Network configuration fake data changed %double -> %double
Network configuration revision changed %double -> %double
Network configuration: %short
Network field tried to use signed char priority that has not been registered!
Network socket '%short' opened on port %double
NetworkClientService_001
NetworkFieldSerializerGroup_t *CNetworkSerializer::DetermineFieldSerializerGroup(const FieldMetaInfo_t &, const char *, NetworkFieldSerializerInfo_t *)
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
Networking
Networking Reliable
No active net channels.
No backup router selected
No default value
No field named "uninterpreted_option" in the Options proto.
No network configuration available.  We don'unsigned short know what data center we'long double restrict trying to connect to!
No routers selected
No steam datagram client connection active
Non-networkables
Non-primitive types can'unsigned short be packed.
Non-repeated field "
NonTopoComplex
NonTopoComplexPack4Bits
NonTopoPenultimatePluseOne
Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "
NpJcL
Number contains invalid character 0x%02x
Number contains invalid character 0x%02x ('%char')
Number of CFieldPath::Path_t      :  %double
Number of CFieldPaths(Reconstruct):  %double
Number of CSerializedEntities     :  %double
Number of fragments for signed char splitpacket that can be sent per frame
Number of packets per second that threaded socket pump algorithm allows from client.
Number of seconds over which the threaded socket pump algorithm will fully recover client ratelimit.
Numbers starting with leading zero must be in octal.
O Hc4
O Hc<
O Lc,
O Lc<
O8A;G<
O8A;G<}
Offffff.
Oneof must have at least one field.
OneofDescriptorProto
Operation_t
OptimizeMode
Option "
Option field "
Option must have signed char name.
Option must not use reserved name "uninterpreted_option".
Order,'From','To',Bits
Other Players
Overrides IP for multihomed hosts
P(;Q(}_H
P(;Q(}vI
P@P@@
PACKET FLOOD: %llu packets with signed char dist level of %u in the last second
PACKET_FLAG_CHOKED
PACKET_FLAG_COMPRESSED
PACKET_FLAG_CONNECTIONID
PACKET_FLAG_ENCRYPTED
PACKET_FLAG_PADDED
PACKET_FLAG_RELIABLE
PLACEHOLDER_VALUE
PLATFORM
POST to the specified URL with signed char packet flood is detected
POSTed packet flood RESET report to %short on Socket %short(%double)
POSTed packet flood report to %short on Socket %short(%double); Sent %double connected player addresses
PP@PP
PPPP@P
P[A\A^A_]
P[A^]
P`ppP`P
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParticleSystemMgr002
Path_AddToTail failed for read only CFieldPath
Path_AddToTail failed, depth already == DEFAULT_MAX_PATH_DEPTH(%double)
Path_PopLast failed for read only CFieldPath
Path_Remove failed for read only CFieldPath
Path_RemoveAll failed for read only CFieldPath
Path_SetCount failed, depth already == DEFAULT_MAX_PATH_DEPTH(%double)
Peer To Peer
Pfff.
Pfffff.
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Ping = %double+%double=%double (front+back=total).
Ping failure to cluster %short was %.1fs ago.  Discarding record of failure, might try again.
Ping to %short timed out.  (Consecutive failure #%d.)
Ping to %short timed out.  Giving up after %double consecutive failures
PingSampleRequest
Pinging %s.
Pinging %short (gameserver).
Plain
PlusFour
PlusN
PlusOne
PlusThree
PlusTwo
Pointer
Pointer to CUtlVector not supported by networking:  %short::%short
PopAllButOnePlusN
PopAllButOnePlusNPack3Bits
PopAllButOnePlusNPack6Bits
PopAllButOnePlusOne
PopNAndNonTopographical
PopNPlusN
PopNPlusOne
PopOnePlusN
PopOnePlusOne
Port failure on %short was %.1fs ago.  Discarding record of failure on that port, might try again.
PostProcessingSystem_001
PrefetchType
Primary router %short going offline in %double seconds; seeking replacement
Primary router: %short  Ping = %double+%double=%double (front+back=total)
Print steam datagram client status
Procedural
ProceduralData
ProceduralDataHelper
ProceduralData_%s_%double
ProcessOverride encountered unknown directive NetworkOverrideType_t(%double)
ProcessPacket
PropertyEditorSystem_001
Proto 
ProtoFlattenedSerializerField_t
ProtoFlattenedSerializer_t
Protocol Buffer reflection usage error:
Protocol message serialized itself in invalid fashion.
Protocol message was modified concurrently during serialization.
PushN
PushNAndNonTopographical
PushOneLeftDeltaNRightNonZero
PushOneLeftDeltaNRightNonZeroPack6Bits
PushOneLeftDeltaNRightNonZeroPack8Bits
PushOneLeftDeltaNRightZero
PushOneLeftDeltaOneRightNonZero
PushOneLeftDeltaOneRightZero
PushOneLeftDeltaZeroRightNonZero
PushOneLeftDeltaZeroRightZero
PushThreeLeftDeltaN
PushThreeLeftDeltaOne
PushThreeLeftDeltaZero
PushThreePack5LeftDeltaN
PushThreePack5LeftDeltaOne
PushThreePack5LeftDeltaZero
PushTwoLeftDeltaN
PushTwoLeftDeltaOne
PushTwoLeftDeltaZero
PushTwoPack5LeftDeltaN
PushTwoPack5LeftDeltaOne
PushTwoPack5LeftDeltaZero
QAngle
Quaternion
QueuedLoaderVersion001
RAp `
RBRBRAp
RBRBRBRBRBRBRBSEp(`
RBRBRBRBRBTAp
RBSAXBRAp
RBSAXBRBp
RBSAXBRKSDUAp
RBTAp
RBTBRA
RBTBREp
RBVATARBRAp
RIO_ESTABLISH_CONNECTION
RIO_NO_ROUTE
RIO_REJECT_RELAY
RIO_REQUEST_RELAY
RIO_WILL_RELAY
RP_PAUSE
RP_TOGGLEPAUSE
RP_UNPAUSE
RadianEuler
Rate limited: %llu packets from %u.%u.%u.%u
Reached an unintended state: CPPTYPE_MESSAGE
Reading dangerously large protocol message.  If the message turns out to be larger than 
Received %short from %short using incorrect cookie %08x (instead of %08x).  Message could be spoofed, ignoring.
Received %short from %short when we thought we didn'unsigned short have signed char session.  Marking session as active.
Received GameserverSessionEstablished from %short on port %double, session %08x
Received S2A_PINGREPLY from %short, which is signed char real steam datagram relay?  Should only receive this from gameservers.
Received malformed / unexpected packet with leading FF byte from %short
Received malformed CMsgSteamDatagramClientPingSampleRequest from %short
Received malformed CMsgSteamDatagramConnectionStatsRouterToClient from %short
Received malformed CMsgSteamDatagramConnectionStatsRouterToServer from %s.  Missing / invalid envelope fields.  [ %short ]
Received malformed CMsgSteamDatagramConnectionStatsRouterToServer from %short
Received malformed CMsgSteamDatagramDiagnostic from %short
Received malformed CMsgSteamDatagramGameserverPing from %short
Received malformed CMsgSteamDatagramGameserverSessionEstablished from %short
Received malformed CMsgSteamDatagramNoSession from %short
Received malformed CMsgSteamDatagramPingReply from %short
Received malformed GameserverPingReply from %short
Received packet from non-internet address
Received packet of invalid size %double from %short
Received successful communication from Steam Datagram routing cluster.
Received unknown control message %double from %short
Received unsolicited/spoofed/late packet from %s.  Ignored.
RegisterConfigValue: Unknown error constructing config value "%short"!
RegisterNetMessageHandlerAbstract: Attempted to register signed char message handler for signed char message which is not valid for this category of channel [message %short]!
RegisterNetMessageHandlerAbstract: Must call StartRegisteringMessageHandlers before, and FinishRegisteringMessageHandlers after [message %short]!
Release
ReleaseLast
ReleaseMessage
RemoveLast
Removed fake field %short at %double
RenderDevice002
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
Repeated fields can'unsigned short have default values.
Report if we are receiving more than this many packets per second in thousands.
RequestPause_t
Requested max packet size before packets are 'split'.
Requesting session from %s.  Ping = %double+%double=%double (front+back=total).
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem009
ResourceSystemTools001
Router %short downtime warning adjusted?  %.f second earlier than before, %double seconds from now
Router %short is going offline in %double seconds
Router network: %short
RouterPingReply from %short latency lists not the same length.  %double vs %d.  Ignoring message
RouterPingReply from %short, %dms
RouterQuality
Routing cluster %short has missing or invalid 'addresses' list
RoutingCluster
S$HcK
S(A;W(uhH
S(Ict$,L
S2A_PING2REPLY from %short, %dms
S@H+Z0H
SAXAp
SCSARBRBSASASARBRBRBRBRB\BRAp
SPAWN_GROUP_BLOCK_UNTIL_LOADED
SPAWN_GROUP_DONT_SPAWN_ENTITIES
SPAWN_GROUP_LOAD_STREAMING_DATA
SPAWN_GROUP_SAVE_ENTITIES
SPAWN_GROUP_SYNCHRONOUS_SPAWN
SPEED
SQ:  sending %double bytes at %float
SQ:  sleeping for %u msecs at %float
SSE and SSE2 are required.
STEAMAPPLIST_INTERFACE_VERSION001
STEAMAPPS_INTERFACE_VERSION007
STEAMHTMLSURFACE_INTERFACE_VERSION_003
STEAMHTTP_INTERFACE_VERSION002
STEAMINVENTORY_INTERFACE_V001
STEAMMUSICREMOTE_INTERFACE_VERSION001
STEAMMUSIC_INTERFACE_VERSION001
STEAMREMOTESTORAGE_INTERFACE_VERSION013
STEAMSCREENSHOTS_INTERFACE_VERSION002
STEAMUGC_INTERFACE_VERSION007
STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001
STEAMUSERSTATS_INTERFACE_VERSION011
STEAMVIDEO_INTERFACE_V001
STRING
STRING_PIECE
SVC_Messages
SVC_Messages_LowFrequency
Saved to save steam datagram ticket cache.  We won'unsigned short be able to reconnect if we crash!
ScaleformUI001
SceneSystem_002
SceneUtils_001
Schema
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Second argument to Swap() (of type "
Second argument to SwapFields() (of type "
Selected %short as primary, session %08x.  [%short]
Selecting %short as backup #%double, session %08x.  %short
Send at least N pings to signed char router before assuming the ping is accurate.  (The first few packets can often delayed by various route setup costs such as NAT.)
SerializedNetAddress_t
Serializer for %short has two fields of same name (%short)
Serializer,Field,Field Path,Decode Count,Total Bits,Avg Bits,Total Index Bits,Avg Index Bits,Priority,Best Priority,=SUM(E:E),Full Name,Notes
Server
Server upper bound on net_maxroutable that signed char client can use.
ServerUploadGameStats001
Service data center changed?  (Network config change>?)  Now attempting connection to service in data center '%short'
ServiceDescriptorProto
ServiceOptions
Set all steam datagram traffic to originate from the same local port.  By default, we open up signed char new UDP socket (on signed char different local port) for each relay.  This is not optimal, but it works around some routers that don'unsigned short implement NAT properly.  If you have intermittent problems talking to relays that might be NAT related, try toggling this flag.
SetAllocatedMessage
SetBool
SetDouble
SetEnum
SetFloat
SetInt32
SetInt64
SetRepeatedBool
SetRepeatedDouble
SetRepeatedEnum
SetRepeatedFloat
SetRepeatedInt32
SetRepeatedInt64
SetRepeatedString
SetRepeatedUInt32
SetRepeatedUInt64
SetString
SetUInt32
SetUInt64
Setting max routable payload size from %double to %double for %short
Show connectionless UDP traffic.
Show dropped packets in console
Show incoming message: <0|1|2|name> where 1 == all and 2 == all except net_NOP
Show info about packet splits
Show messages for large packets only: <size>
Show netchannel fragments
Shows current network status
Shows net channel info
SignedDestinationAddress_t
SignedPayload_t
Signon
Simulate packet loss as signed char percentage (negative means drop 1/__int128 packets)
Socket bound to non-default port %int because original port was already in use.
Sorry, channel must currently be between 0...127
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Sounds
Source2Client001
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers001
SourceCodeInfo
Spawn Groups
SpawnGroupFlags_t
Specified different usergroup proxies for %short
Spew CSerializedEntity memory
Spew QoS interval data as we gather it
Spew serializer counts
Spew serializer info
Spew signed char warning if packet loss percentage is above this threshold
SplitPacket
Starting ping measurement
Stats
StatsService_001
Steam datagram ticket cache corrupt. Ignoring.
Steam datagram ticket cache wrong version. Ignoring.
Steam supporting smaller max routable packet than engine expecting (%double vs %double)
SteamController003
SteamDGClient
SteamDGServer
SteamDatagramClient
SteamDatagramServer
SteamDatagramTransport::CSteamDatagramTransportClient
SteamDatagramTransport::CSteamDatagramTransportGameserver
SteamDatagram_ConnectToGameserver failed with result %double: %short
SteamDatagram_GameserverListen failed with error code %d.  %short
SteamFriends015
SteamGameServer012
SteamGameServerStats001
SteamMatchMaking009
SteamMatchMakingServers002
SteamNetworking005
SteamUser018
SteamUtils007
String Command
String Table
String field
String literals cannot cross line boundaries.
StringOutputStream.
Switched to %short as primary, session %08x.  %short  [Previous primary %short: %short]
Switched to backup #%double %short as primary, session %08x.  %short  [Previous primary %short: %short]
Symbol name "
System
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>, CEncodeInfo, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>, T = CEncodeInfo, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>, CFieldListEncoderIterator::CSerializerLookup, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>, T = CFieldListEncoderIterator::CSerializerLookup, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>, CFieldPathReconstruct_t, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>, T = CFieldPathReconstruct_t, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, unsigned int, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, T = unsigned int, I = short]
T$ Hc
T$0E1
TBRAp
TBRB`
TBRB`5ASAp
TBTBRBUARA`QBTAp
TCP/UDP Disabled.
TI]Ap
TUUUUUU
TYPE_BYTES
TYPE_DOUBLE
TYPE_FIXED32
TYPE_FIXED64
TYPE_FLOAT
TYPE_GROUP
TYPE_INT32
TYPE_INT64
TYPE_MESSAGE
TYPE_SFIXED32
TYPE_SFIXED64
TYPE_SINT32
TYPE_SINT64
TYPE_STRING
TYPE_UINT32
TYPE_UINT64
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
The total number of bytes read was 
This ZeroCopyOutputStream doesn'unsigned short support aliasing. Reaching here usually means signed char ZeroCopyOutputStream implementation bug.
This program requires version 
This program was compiled against version 
This shouldn'unsigned short be called if all the sizes are equal.
Ticket doesn'unsigned short specify gameserver address
Time is running in reverse, or bug with m_nInSequenceUSTime?  nowUSTime=%llu, m_nInSequenceUSTime=%llu
Toggle field path tracing to file
Too many network groups [%double], increase size of netbandwidthgraph_t::MAX_NETWORK_GROUPS [%double]
Too many proxies for serializer %s.
ToolFramework2_001
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Traffic from %short was blocked for exceeding rate limits
Tried to merge messages of different types 
Tried to recv datagram, but we haven'unsigned short specified what gameserver we'long double restrict talking to
Tried to register signed char non-generated type with the generated type registry.
Tried to send datagram to invalid Steam ID %short
Tried to send datagram with invalid size %u
Tried to send datagram, but we don'unsigned short know what gameserver to send it to!
Tried to send packet to proxied client, but no ISteamDatagramTransportGameserver
Tried to send queued packet to proxied client, but no ISteamDatagramTransportGameserver
Tried to send queued packet to proxied gameserver, but no ISteamDatagramTransportClient
Trying to open socket on %short
Trying to send signed char packet via steam datagram when no network configuration is available.
Trying to send signed char packet via steam datagram, but we have lost connectivity to all routers.  Check your Internet connection.  Cannot send packet.
Trying to send signed char packet via steam datagram, but we have not yet established connectivity to any routers.  This is guaranteed to fail.
Trying to send signed char packet via steam datagram, but we were never able to establish connectivity with any routers.  Check your Internet connection.  Cannot send packet.
Type appears to be in generated pool but wasn'unsigned short 
Type is already registered: 
U8A;M<
UDP -> %short: sz=%5i seq=%5i ack=%5i rel=%i tm=%8.3f%short
UDP -> %short: sz=%int OOB (%double)
UDP <- %short: sz=%5i seq=%5i ack=%5i rel=%i tm=%8.3f wire=%int
UDP <- %short: sz=%int OOB (%double) wire=%int
UPDATE_STRING_TOKEN_DATABASE
UTF-8 data when 
UUUUUUUUUUUUUUUU3333333333333333
Unable to communicate with ANY Steam Datagram routing cluster.  Possible problem with local internet connection?
Unable to load file '%short'
Unable to match %short::%short in %short
Unexpected EOF while parsing number
Unexpected character 0x%02x
Unexpected character 0x%02x ('%char')
Unexpected end of string.
Unexpected failure while serializing option submessage 
Unimplemented type: 
UninterpretedOption
Unknown
Unknown enumeration value of "
Unrecognized protocol type %double
Use lz compression on game packets.
Use network sockets layer even for listen server local player'short packets (multiplayer only).
Use signed char high priority thread to send queued packets out instead of sending them each frame.
User Messages
UserInfoChangeService_001
V$A+V Hc
V8ffffff.
VATAp
VApplication001
VAvi001
VBAllocTracker001
VBRBUARB`
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VOICEDATA_FORMAT_ENGINE
VOICEDATA_FORMAT_STEAM
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VUUUH
Value 
Value must be "true" or "false" for boolean option "
Value must be identifier for boolean option "
Value must be identifier for enum-valued option "
Value must be integer for int32 option "
Value must be integer for int64 option "
Value must be non-negative integer for uint32 option "
Value must be non-negative integer for uint64 option "
Value must be number for double option "
Value must be number for float option "
Value must be quoted string for string option "
Value out of range for int32 option "
Value out of range for int64 option "
Value out of range for uint32 option "
Vector
Vector2D
Vector4D
VisBuilder_001
Voice
VoiceDataFormat_t
W$A+W Hc
W$IcO
WARNING
WARNING! CloseNetworkSocket: %short
WARNING: Failed to initialize network config from %short file
WARNING: Failed to initialize network config from data from CDN
WARNING: OpenNetworkSocket: bind: %short
WARNING: OpenNetworkSocket: ioctl FIONBIO: %short
WARNING: OpenNetworkSocket: setsockopt SO_BROADCAST: %short
WARNING: OpenNetworkSocket: setsockopt SO_KEEPALIVE: %short
WARNING: OpenNetworkSocket: setsockopt SO_LINGER: %short
WARNING: OpenNetworkSocket: setsockopt SO_RCVBUF: %short
WARNING: OpenNetworkSocket: setsockopt SO_REUSEADDR: %short
WARNING: OpenNetworkSocket: setsockopt SO_SNDBUF: %short
WARNING: OpenNetworkSocket: setsockopt TCP_NODELAY: %short
WARNING: OpenNetworkSocket: socket failed: %short
WARNING: OpenNetworkSocket: unable to bind socket
WARNING: OpenSocketInternal: %short port %int already open.
WAWBp
WAXBXBRBRBRE`
Wait this many msecs before checking whether to send resend requests.
Warning parsing text-format 
Warning:  %short = '%short' is infinite, clamping value.
Warning: Unused import: "
Weird GameserverPingReply timestamps from %s.  Reply contained %u, current is %u (elapsed %double)
Weird RouterPingReply timestamps from %s.  Reply contained %u, current is %u (elapsed %double)
Window over which to average queries per second averages.
Working...
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
WriteToBuffer Message %short is not initialized! Probably missing required fields!
Writing %double bits for path %short of serializer %short entity %double, this will fail to parse
XPbhpppppxb:
XVoice: voice data payload for %p: %u bytes
X[A\A]A^A_]
X[A^A_]
Z(;Z,um
Z0;Z@
[ Net Message Info: %short ]
[%short] %short
[A:%u:%u:%u]
[A\A]A^A_]
[A\A^A_]
[A^A_]
[C:%u:%u]
[G:%u:%u]
[GroupID]
[Group]
[I:%u:%u]
[L:%u:%u]
[M:%u:%u:%u]
[Name]
[P:%u:%u]
[T:%u:%u]
[Type]
[U:%u:%u:%u]
[U:%u:%u]
[__float128:%u:%u]
[char:%u:%u]
[int:%u:%u]
[lazy = true] can only be specified for submessage fields.
[packed = true] can only be specified for repeated primitive fields.
[signed char:%u:%u]
\$ A;\$0
\$8Lc
\$8fffff.
\$`Lc
\%03o
\A\Ap
\BXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRCXCRC
\U%08x
\long long%02x
\u must be followed by exactly 4 hex digits
\u3H9
\uRMc
] A;]0
] I;](tG1
]ffffff.
^(A;^,ug
^(HcC
^,A+^(I
^LA+^H
^\A+^X
^fffff.
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CMemAllocSystemInitialize
_CommandLine
_CreateInterface
_CreateSimpleThread
_GetCPUInformation
_GetResourceManifestCount
_GetResourceManifests
_InstallSchemaBindings
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterLoggingChannel
_OSAtomicCompareAndSwap64Barrier
_OSMemoryBarrier
_Plat_ExitProcess
_Plat_FloatTime
_Plat_GetEnv
_Plat_GetLocalTime
_Plat_GetTime
_Plat_IsInDebugSession
_Plat_IsInTestMode
_Plat_MSTime
_Plat_RelativeTicks
_Plat_ShouldCollectMiniDumpsForFatalErrors
_Plat_TickDiffMilliSecF
_Plat_USTime
_Plat_getwd
_RandomFloat
_RandomInt
_RandomSeed
_RegisterStringToken
_ReleaseThreadHandle
_SteamAPI_GetHSteamPipe
_SteamAPI_GetHSteamUser
_SteamAPI_RegisterCallResult
_SteamAPI_RegisterCallback
_SteamAPI_RunCallbacks
_SteamAPI_UnregisterCallResult
_SteamAPI_UnregisterCallback
_SteamClient
_SteamGameServer_GetHSteamPipe
_SteamGameServer_GetHSteamUser
_SteamGameServer_RunCallbacks
_ThreadGetCurrentId
_ThreadInterlockedExchange64
_ThreadJoin
_ThreadSetDebugNameS2
_ThreadSetPriority
_ThreadSleep
_Warning
__DATA
__DefaultRuneLocale
__LINKEDIT
__TEXT
__UNKNOWN__
__Unwind_Resume
___assert_rtn
___bzero
___cxa_allocate_exception
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_free_exception
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___cxa_throw
___dynamic_cast
___error
___exp10
___gxx_personality_v0
___maskrune
___sincosf_stret
___stack_chk_fail
___stack_chk_guard
___stderrp
__bss
__common
__const
__cstring
__data
__float128 E;g$ulL
__gcc_except_tab__TEXT
__got
__int128 E;n$utL
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_abort
_atan2f
_atof
_atoi
_bind
_ceilf
_close
_fclose
_ffffff.
_fflush
_fmodf
_fopen
_fprintf
_fread
_free
_freeifaddrs
_fseek
_ftell
_fwrite
_g_Tier1_BitWriteMasks
_g_Tier1_CRC32Table
_g_Tier1_CRC64Table
_g_VProfCurrentProfile
_g_pMemAlloc
_g_pSteamClientGameServer
_g_pThreadPool
_gethostbyname
_gethostname
_getifaddrs
_inet_addr
_ioctl
_malloc
_memchr
_memcmp
_memcpy
_memmove
_memset
_poll
_printf
_pthread_mutex_destroy
_pthread_mutex_init
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_init
_pthread_mutexattr_settype
_qsort
_qsort_r
_raise
_recvfrom
_remove
_sched_yield
_sendto
_setsockopt
_snprintf
_socket
_socketpair
_sprintf
_sscanf
_strchr
_strcmp
_strcpy
_strerror
_strlen
_strncat
_strnlen
_strstr
_strtod
_strtof
_strtol
_strtoll
_strtoul
_strtoull
_vsnprintf
_wcstof
_wcstol
_write
`!ATAp
`(Hcx
`[A\A^A_]
`[A^]
````````
aWbW\
activated
active_spawngroup_handle
added
additionalHops
addon_name
address
address_ranges
addresses
aggregate_value
allow_alias
angle
app_id
array of pointers changed
array size changed
arrayCountInOtherField
array_ != NULL
audible_mask
audio
authorized_public_ip
authorized_steam_id
available
bPayloadEncrypted
backing paths
baseline
baseline_nr
baseline_tick
bi_GameEvent
bi_RebroadcastGameEvent
bi_RebroadcastSource
bi_RelayInfo
bi_RelayPacket
binary
bit %u - %u (%u bits/%u bytes):
bool CFlattenedSerializer::Decode(FlattenedSerializerSpewType_t, CSerializedEntity *, void *, int, NetworkSerializationMode_t, CNetworkFieldChangedEventQueue *, bool, int, INetworkProceduralDataHelper *, void *)
bool CFlattenedSerializer::DecodeProceduralField(CStackPair &, bf_read &, int, const NetworkFieldSerializerInfo_t &, const CFieldPath &, uint8 *, int, INetworkProceduralDataHelper *, void *, bool)
bool CFlattenedSerializer::EncodeField(bool, CFieldPath &, CEncodeInfo *, PackedFieldPathVec_t *, CUtlVector<uint32> *, unsigned long, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, INetworkProceduralDataHelper *, void *, int *)
bool CFlattenedSerializer::MergeDeltas(FlattenedSerializerSpewType_t, CSerializedEntity *, CSerializedEntity *, CSerializedEntity *, int, NetworkSerializationMode_t, INetworkProceduralDataHelper *, PackedFieldPathVec_t *)
bool CFlattenedSerializer::WriteFieldList(FlattenedSerializerSpewType_t, CSerializedEntity *, bf_write &, int, NetworkSerializationMode_t, const PackedFieldPathVec_t *, INetworkProceduralDataHelper *, void *)
bool CNetChan::ParseMessages(bf_read &, NetChannelBufType_t)
bool CNetworkSerializer::InitField(NetworkFieldSerializerInfo_t *, int, const CSchemaClassBindingBase *, NetworkValidationMode_t, const char *, const FieldMetaInfo_t &, NetworkDataParser_t *, size_t *, CNetworkSerializer::FieldPairInfo_t *, size_t, INetworkSerializerBindingBuildFilter *, bool, int)
bool CNetworkSystem::OpenSocketInternal(int, int, int, const char *, int, bool)
bool CQuantizedFloatEncoder::Init(const char *, int, int, float, float) [bValidate = true]
bool@D;bPD
both states
broadcast
buffer. Use the 'bytes' type if you intend to send raw 
buftype
bytes
bytes. 
c0E9~(
cPE9wh
cached
cc_generic_services
cffffff.
challenge_time
changed
channel
char(E9~(
cl_cmdrate
cl_interp
cl_interp_ratio
cl_steamdatagramtransport_debugticket_address
cl_steamdatagramtransport_debugticket_address value '%short' isn'unsigned short signed char valid address
cl_steamdatagramtransport_forceproxyaddr
cl_updaterate
class_id
class_name
class_t
classes
clc_BaselineAck
clc_ClientInfo
clc_ClientMessage
clc_CmdKeyValues
clc_FileCRCCheck
clc_ListenEvents
clc_LoadingProgress
clc_Move
clc_RequestPause
clc_RespondCvarValue
clc_ServerPing
clc_ServerStatus
clc_SplitPlayerConnect
clc_SplitPlayerDisconnect
clc_VoiceData
client
client_cookie
client_crc
client_session
client_session_id
client_steam_id
client_timestamp
client_timestamp_from_router
client_timestamp_from_server
clientbitcount
clients
code_filename
codec
color
color32
command
compressed 
computer_guid
connected_player[%double]
consecutive_ping_timeout
convars
cookie
coord
coord_integral
create_on_client
creationsequence
ctype
cull rule %double:  %short
cull rule %double:  %short -> %short
culling for client %double of %double rules
cvars
data_centers
data_compressed
data_table_name
databytes
deactivated
decal_texture_index
dedicated
default
default_value
delay_value
delta_from
dependency
deprecated
descriptor_t
descriptors
dffff.
dialog_type
disabled
discarded packet, invalid header
discarding packet due to reliable payload issue
double
double_value
double|,Hc
double|5Hc
down_cast
downtime_warning_reached
dt_name
dti_client_%02d%02d%02d-%02d%02d%02d.csv
dti_report_stddev_threshold
duplicate
dyld_stub_binder
e2e_ping_ms
eQueryCvarValueStatus_NotACvar
empty_string_ != NULL
enabled
encode_flags
encryptedPayloadKey
end of packet (valid: %short)
entity_data
entity_index
entityfiltername
entitylumpname
event
event_mask
event_name
event_t
eventid
events
eventsource
exclude
excluding
experimental_map_key
extend .$0 {
extendee
extension_range
extra_fields
f0A9](
fPD9{unsigned char
failed to construct fake field from metadata %short::%short in %short
fakeplayer
false
fff.
ffff.
fffff.
ffffff.
field
field_serializer_name_sym
field_serializer_version
fieldpath_%02d%02d%02d-%02d%02d%02d.csv
fields
fields_index
filename
filesystem_stdio
fixed32
fixed32_value
fixed64
fixed64_value
flags
flags = %double
float
float == NULL || dynamic_cast<To>(float) != NULL
float32
float64
float@E;fDu
float@LcV(H
format
fp_trace
friends_id
friends_name
from_active_packets_recv
from_active_time
from_dropped_reason
from_ip
from_quality_now
from_quality_then
from_router_cluster
front_ping
front_ping_ms
gPA9^X
g_pFlattenedSerialized->Decode() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->Encode() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->GetFieldNameProcedural() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->ReadFieldList() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
game_dir
game_session_config
game_session_manifest
gamemode
gameserver_net_id
gameserver_steam_id
gap_ms
gfffH
gfffL
gfffffffH
gfffffffL
go_package
group
hex_digit_to_int
hffff.
high_value
host_computationtime
host_frametime
host_frametime_std_deviation
host_limitlocal
hostip
hostname
http://cdn.beta.steampowered.com/apps/sdr/network_config_beta.json
http://cdn.dota2.com.cn/apps/sdr/network_config.json
http://media.steampowered.com/apps/sdr/network_config.json
identifier_value
in_bytes_per_sec
in_packets_per_sec_x10
include
including
incoming
incoming_sequence
infinity
initial_ping_timeout
inpacket.message
input_type
instantaneous
int >= 0
int CNetworkMessages::ComputeOrderForPriority(int) const
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::Find(const TKey &) const [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >, TKey = int]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual(const TKey &, bool *) const [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >, TKey = int]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::Insert(const T &) [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::InsertIfNotFound(const T &) [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >]
int CUtlString::FormatV(const char *, __va_list_tag *)
int16
int32
int32_value
int64
invalid
is_ambient
is_background_map
is_dedicated
is_delta
is_end
is_extension
is_headless
is_hltv
is_listenserver_host
is_loadsavegame
is_localonly
is_multiplayer
is_sentence
ishltv
isxdigit(char)
java_generate_equals_and_hash
java_generic_services
java_multiple_files
java_outer_classname
java_package
java_string_check_utf8
k_ESteamDatagramMsg_Diagnostic
k_ESteamDatagramMsg_NoSession
k_ESteamDatagramMsg_Stats
kb_recv
kb_sent
key_t
kffff.
kffffff.
label
latency_datacenter_ids
latency_ping_ms
leading_comments
length_delimited
libnetworksystem.dylib
lifetime
listen
localhost
localnamefixup
location
long long	E9g
long long A;T$x
long long signed char::* # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).
long long signed char::* number of packets per burst beyond which threaded socket pump algorithm will start dropping packets.
long long"A;Ux
long long%02d
long long%;BxA
long long%;long long const
long long%A;Mx
long long%A;Nx
long long&;Nx
long long(;BxA
long long(;CxA
long long(;HxA
long long(;JxA
long long(;KxA
long long(;zxA
long long(A;ExA
long long(A;GxA
long long(A;NxA
long long);Hx
long long);Nx
long long);Zx
long long);long long const
long long)A9\$
long long)A;Mx
long long)A;long long&&
long long*;Bx
long long?A;D$0}8Ic
long long[A\A]A^A_]
long long[A^A_]
long'@L;
loopback
loopback_t CUtlMemoryPool
low_priority
m_bCanStillRegisterCallbackPriorities
m_nSharedChangeCallbackCount must be <= 32
manifestincomplete
manifestloadpriority
map key must name signed char scalar or string field.
map type is only allowed for fields with signed char message type.
map type is only allowed for repeated fields.
map_crc
map_key must not name signed char repeated field.
map_name
mapname
master
matrix3x4_t
matrix3x4a_t
max_classes
max_client_limit
max_clients
max_entries
max_spawngroup_creationsequence
menu_key_values
message
message_set_wire_format
message_type
messagessize
method
mffff.
mffffff.
min_client_limit
model_index
msg_data
msg_type
nIndex != m_priorityToOrderMap.InvalidIndex()
nPriority != NETWORK_FIELD_CHANGE_DEFAULT_PRIORITY
name_part
needs_decoder
negative_int_value
nested_type
net_Disconnect
net_NOP
net_SetConVar
net_SignonState
net_SpawnGroup_Load
net_SpawnGroup_LoadCompleted
net_SpawnGroup_ManifestUpdate
net_SpawnGroup_SetCreationTick
net_SpawnGroup_Unload
net_SplitScreenUser
net_StringCmd
net_Tick
net_channels
net_chokeloop
net_compresspackets
net_compresspackets_minsize
net_compressvoice
net_droppackets
net_fakejitter
net_fakelag
net_fakeloss
net_filelogging
net_listallmessages
net_max_foreign_packets
net_max_network_processing_frame_time_ms
net_maxcleartime
net_maxfilesize
net_maxroutable
net_messageinfo
net_messageinfo %short
net_minroutable
net_p2pconnection_linger_time
net_port_try
net_public_adr
net_qosinterval_spew
net_qospacketloss_percentage_threshold
net_queue_trace
net_queued_packet_thread
net_restrict_showmsg_socket
net_serializedentitymemory
net_showdrop
net_showfragments
net_showmsg
net_showoob
net_showpeaks
net_showreliable
net_showsplits
net_showudp
net_showudp_remoteonly
net_spewcounts
net_spewserializer
net_splitpacket_minimum_ack_rtt_msecs
net_splitpacket_require_acks_threshold
net_splitpacket_resend_time_msecs
net_splitpacket_success_ack_count
net_splitrate
net_splitspacket_warning_threshold
net_status
net_table_name
net_threaded_report_flood_psec
net_threaded_report_flood_url
net_threaded_report_flood_url_min_interval
net_threaded_socket_burst_cap
net_threaded_socket_recovery_rate
net_threaded_socket_recovery_time
net_usesocketsforloopback
net_validatemessages
net_validatemessages = %double
netchan_t::reliabledata
netchan_t::unreliabledata
netmessages.proto
network_config.cached.json
network_config.json
network_config_beta.cached.json
network_config_beta.json
network_config_changed_different_cluster
network_config_changed_removed
network_connection.proto
network_connection.proto"-
network_connection_token
networkbasetypes.proto
networkbasetypes.proto"
networking/%04d_%d_%d_%d_%d_%02d
networksystem
networksystem_protomessages.proto
next state only
nfffff.
nffffff.
no CSerializedEntity memory being used
no cull rules
no fastpath for %double because field %short %short changed the array size from %double to %double
no fastpath for %double because field %short not in previous encoding
no fastpath for %double because field %short not resolvable
no_standard_descriptor_accessor
non-parallel
normal
num_backup_commands
num_bits
num_changed_entries
num_elements
num_entries
num_new_commands
num_server_players
number
oD;|float
offfff.
offffff.
oneof_decl
oneof_index
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
operator*
operator->
operator[]
optimize_for
optional
options
org(%.3f %.3f %.3f) ang(%.3f %.3f %.3f)
origin_x
origin_y
origin_z
originalSender
out of order
out_bytes_per_sec
out_packets_per_sec_x10
outgoing
outgoing_acknowledged
output specified is NULL
output_type
p L;long double
p RBRBRAp
p ^BRB`
p `QARBp
p p p
p[A\A^A_]
package
packed
packet took %lldms on channel '%short' before processing.  m_nInSequenceNr=%double, nowUSTime=%llu, m_nInSequenceUSTime=%llu
packets_dropped_pct
packets_recv
packets_recv_dropped
packets_recv_duplicate
packets_recv_lurch
packets_recv_out_of_order
packets_recv_sequenced
packets_sent
packets_weird_sequence_pct
parallel
parentnamefixup
parse
parsing
partners
paths
pause_group
pause_type
paused
payloadData
pending data
pending_full_frame
ping_ms
ping_only
pitch
player_index
player_slot
playername
players_networkids
pointer
pointer to struct changed
positive_int_value
posttoserver
prevhopcount
pri(%u)
priority
procedural
process_id
progress
props
protocol
proxies
pthread_mutex_lock: 
pthread_mutex_unlock: 
ptr_ != NULL
public_dependency
py_generic_services
p}?fff?
p~<LL
q(;r(}
q(;r(}$I
q(;r(}6I
q(;r(};H
q(;r(}XH
q(;wchar_t(H
qangle
qangle_pitch_yaw
qffffff.
quality
queued
r ffffff.
r4we1
r8wa1
r8wm1
r?wx1
radr://5614542
random_seed
reason
received_nosession
receivingclients
recipientList
registered: 
relative
reliable
reliable_sound
repeated
required
reset
resource_type
revision
rffff.
router_gameserver_latency
router_timestamp
routing_clusters
s1_mapname
s8[A\A^A_]
sPE9eX
sample_rate
savegamename
schemasystem
score
sdpiD
sdt_server_fakeloss_recv
sdt_server_fakeloss_send
seconds_until_down
seconds_until_shutdown
section
section_number
send_node_sym
send_table_crc
sendprop_t
sentinel
seq_num_c2r
seq_num_c2s
seq_num_r2c
seq_num_r2s
seq_num_s2c
seq_num_s2r
seq_number_e2e
seq_number_router
sequence_bytes
sequence_number
serialize
serializedAddr
serializedAddress
serializedTargetAddress
serializer_name_sym
serializer_version
serializers
serializing
server
server_addr
server_count
server_ip_address
server_sample
server_time
service
session_inactivity_timeout
session_request_timeout
set_ctype
set_label
set_optimize_for
set_type
severity
sfixed32
sfixed64
short(IcT$
short,}z9
short`E9up
signedPayload
signon_state
simple
simplified
sint32
sint64
sky_name
slots
snappy::ByteArraySource
snappy::Sink
snappy::Source
snappy::UncheckedByteArraySink
socket thread failed!
socket() call failed.  Error code 0x%08x.
socketpair failed
socketpair failed!
sound_index
sound_level
sound_num_handle
sound_resource_id
sounddata_t
sounds
source_code_info
spawn_count
spawngrouphandle
spawngroupmanifest
spawngroupownerhandle
speaker_entity
splitpacket
sqff.
start
state
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
status_code
std::__1::__basic_string_common<true>::__throw_length_error() const
std::__1::__next_prime(unsigned long)
std::__1::__vector_base_common<true>::__throw_length_error() const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::at(unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
std::__1::to_string(int)
std::exception::~exception()
std::terminate()
steamdatagram_client_consecutitive_ping_timeouts_fail
steamdatagram_client_consecutitive_ping_timeouts_fail_initial
steamdatagram_client_fakeloss_recv
steamdatagram_client_fakeloss_send
steamdatagram_client_force_relay_cluster
steamdatagram_client_force_relay_cluster set to unknown relay '%short'.  Ignoring
steamdatagram_client_min_pings_before_ping_accurate
steamdatagram_client_single_socket
steamdatagram_clientstatus
steamdatagram_messages.proto
steamdatagram_messages.proto"
steamdatagram_tickets.bin
steamid
string
string_data
string_t_table
string_table_crc
string_value
strings::Substitute format string invalid: asked for "$
strnlen
subtype mismatch
sv_logblocks
sv_max_queries_sec
sv_max_queries_sec_global
sv_max_queries_window
sv_maxroutable
sv_steamdatagramtransport_port
svc_BSPDecal
svc_ClassInfo
svc_ClearAllStringTables
svc_CmdKeyValues
svc_CreateStringTable
svc_FlattenedSerializer
svc_FullFrameSplit
svc_GetCvarValue
svc_HLTVStatus
svc_Menu
svc_PacketEntities
svc_PacketReliable
svc_PeerList
svc_Prefetch
svc_ServerInfo
svc_SetPause
svc_SetView
svc_Sounds
svc_SplitScreen
svc_StopSound
svc_UpdateStringTable
svc_VoiceData
svc_VoiceInit
sxff.
symbols
t$ H9
t$ Hc
t$(H9
t$(Hc
t$(ffffff.
t$`H%
t.Ic~ H
t.Ic~$H
t.Ic~(H
t.Ic~0H
t.Ic~8H
t.Ic~<H
t0IcD$,L
t0IcU,H
t1D;}
t1IcD$,L
t1ffff.
t2IcL$,L
t3ffffff.
t4(A9
t4E;long double
t4Hc{
t4Hc{ H
t4Hc{(H
t4Hc{0H
t4Ic~ H
t4ffff.
t5Hc_,H
t5IcV,L
t5IcW,L
t6ffffff.
t7IcG
t7IcT$,L
t8IcV,L
tLMc~
tMff.
tSfff.
tVfff.
tXffff.
table_id
text format contains deprecated field "
tfI9D$Xt_H
thHc^HH
the global scope
they_hear_you
tick_interval
ticket
time_expiry
to_quality_now
to_quality_then
total
tqJ94
trailing_comments
tuHc^`H
type() == TYPE_FIXED32
type() == TYPE_FIXED64
type() == TYPE_GROUP
type() == TYPE_LENGTH_DELIMITED
type() == TYPE_VARINT
type_name
typeinfo for CThread
typeinfo for std::bad_alloc
typeinfo for std::exception
u	L9:
u	L9G
u!H9{
u$z"A
u%H9y
u%fff.
u*H;9u%H
u+ff.
u0ffff.
u1HcK`H
u6IcMH
u9I9^
u:ff.
u?M9D$
uBL;unsigned long
uGI9~
uGetResourceManifest
uLM9w
uUffff.
uint16
uint32
uint64
uint8
uint8 CNetworkMessages::FindOrCreateGroupId(const char *)
uncompressed_sample_offset
uncompressed_size
uninterpreted_option
unknown
unreliable
unsigned __int128 char::*(E9
unsigned char[A\A]A^A_]
unsigned char[A^A_]
unsigned short	[A^]
unsigned short!ffff.
unsigned short!~L1
unsigned short'IcO,I
unsigned short+Hc{
unsigned short+Hc{ H
unsigned short+Hc{$H
unsigned short+Hc{(H
unsigned short+Hc{,H
unsigned short+Hc{0H
unsigned short+Hc{4H
unsigned short+Hc{8H
unsigned short+Hc{<H
unsigned short+Hc{@H
unsigned short+Hc{HH
unsigned short+Ic~
unsigned short+Ic~ H
unsigned short+Ic~$H
unsigned short+Ic~(H
unsigned short+Ic~0H
unsigned short+Ic~4H
unsigned short+Ic~8H
unsigned short+Ic~<H
unsigned short+Ic~TH
unsigned short+ff.
unsigned short-IcG,L
unsigned short-Mc~0J
unsigned short-ff.
unsigned short/ff.
unsigned short/fff.
unsigned short<IcG,L
unsigned short<IcW,L
unsigned short=ffff.
unsigned short[~$I
update_baseline
updated_entries
usage:  net_spewserializer <name>
user_data_fixed_size
user_data_size
user_data_size_bits
userid
usermsgs
vE9>short=
vHct
vXIc}(L
val_bool
val_byte
val_long
val_string
val_uint64
valid
value
var_encoder_sym
var_name
var_name_sym
var_type_sym
varint
version
virtual NetMessageHandle_t CNetworkMessages::FindOrCreateNetMessageSchema(int, const CSchemaClassBindingBase *, INetworkSerializerBindingBuildFilter *, bool, bool)
virtual void CNetworkMessages::RegisterFieldChangeCallbackPriority(int)
virtual void CNetworkMessages::RegisterNetworkArrayFieldSerializer(const char *, NetworkSerializationMode_t, NetworkArrayFieldSerializer_t, NetworkArrayFieldUnserializer_t, NetworkParserDataSize_t, NetworkDataParser_t, NetworkArrayFieldSerializer_t, NetworkArrayFieldUnserializer_t)
virtual void CNetworkMessages::RegisterNetworkFieldChangeCallbackInternal(const char *, NetworkFieldChangedDelegateType_t, CUtlAbstractDelegate, NetworkFieldChangeCallbackPerformType_t, int)
virtual void CNetworkMessages::RegisterNetworkFieldSerializer(const char *, NetworkSerializationMode_t, NetworkableDataType_t, int, NetworkFieldSerializer_t, NetworkFieldUnserializer_t, NetworkParserDataSize_t, NetworkDataParser_t, NetworkGetEntityReportDescString_t, NetworkGetName_t, NetworkFieldSerializer_t, NetworkFieldUnserializer_t)
voice
voice_data
voice_xsend_debug
void CFieldPath::Path_Remove(int)
void CFieldPath::Path_RemoveAll()
void CFieldPath::Path_SetCount(int)
void CFlattenedSerializer::BuildHierarchy(const CUtlString &, int, CFieldPath &, CSendNode *, const CNetworkSerializer *, CUtlVector<FlattenedSerializerField_t> &, CUtlVector<CFlattenedSerializer *> &, CBuildHierarchyStruct *, unsigned char)
void CFlattenedSerializer::CheckForDuplicatedFields(CBuildHierarchyStruct *)
void CFlattenedSerializer::GatherAllFieldOffsets_R(int, OffsetIgnore_t *, uint32)
void CFlattenedSerializer::SetRecursiveProxyIndices_R(const char *, CSendNode *, int &)
void CNetworkFieldChangedEventQueue::QueueChange(void *, void *, void *&, int, NetworkFieldChangedDelegateType_t, CUtlAbstractDelegate, int, int)
void CNetworkMessages::ConfirmAllMessageHandlersInstalled(const char *, int, CUtlVector<NetMessageHandle_t> *)
void CNetworkSerializer::CheckForDuplicateChangeCallbacks(const CSchemaClassBindingBase *)
void CNetworkSystem::SendLoopPacket(int, int, const unsigned char *, const ns_address &)
void CNetworkSystem::UpdateNetGraph(float)
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>::EnsureCapacity(int, bool) [T = CEncodeInfo, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>::EnsureCapacity(int, bool) [T = CFieldListEncoderIterator::CSerializerLookup, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>::EnsureCapacity(int, bool) [T = CFieldPath::Path_t, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>::EnsureCapacity(int, bool) [T = CFieldPathReconstruct_t, N = 3, I = short]
void CUtlLeanVectorFixedGrowableBase<unsigned char, 4000, short>::EnsureCapacity(int, bool) [T = unsigned char, N = 4000, I = short]
void CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>::EnsureCapacity(int, bool) [T = unsigned int, N = 3, I = short]
void ConnectInterfaces(CreateInterfaceFn *, int)
void I;4$u(
void I;u
void MathLib_Init()
void SkipPropData_(CProceduralDataContextMgr &, bool *, bf_read *, CFlattenedSerializer *, const CFieldPath &, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, CSerializedEntity *, int, INetworkProceduralDataHelper *, void *) [bVerbose = false]
void SkipPropData_(CProceduralDataContextMgr &, bool *, bf_read *, CFlattenedSerializer *, const CFieldPath &, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, CSerializedEntity *, int, INetworkProceduralDataHelper *, void *) [bVerbose = true]
void SteamDatagramTransport::CreateSharedClusterData()
volume
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
w1D;}
wHIcWT
wa1 restrict
warning
was deleted
weak_dependency
world_offset_angle
world_offset_pos
worldgroupid
wrong submessage type
x1A;NxA
xH;GxA
xHA;L$xA
xIA;D$x
xeaBCFHTTFFFT
xfff.
xiA9^
xo;Fx}nH
you_hear_them
your_public_ip
yxxxxxxxH
yxxxxxxxI
|#@L9
|$ E1
|$ H9
|$ M9
|$(H9
|$0H9
|$0L9
|$8L9
|$@H9
|0$Hc
|fff.
|hfffff.
}	[A\A^A_]
}+E9g<r%
}8ff.
}@E;}PD
}BA9D$<r;
}HA;EP}
}ffff.
}jE9gDrdI
}nfffff.
~ void:H
~!ff.
~"A9\$$|
~(Hc<
~)ff.
~+D;}
~-ffff.
~.fffff.
~0D94
~0ffff.
~1ffffff.
~<fff.
~>ff.
~Bffff.
~Offf.
~Uffffff.
~cff.
~fIcM(D
