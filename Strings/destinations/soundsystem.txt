			Beat:	%float
			Sequence:	%short
		End Beat: %float
		Instrument: %short
		loops: %short
	 dspmix %1.2f : distmix %1.2f : lvol %1.2f : cvol %1.2f : rvol %1.2f : rlvol %1.2f : rrvol %1.2f
	 long long: %4f unsigned long long: %4f ...: %4f
	DSP: %float
	LVL: %float
	MUTE: %float
	Refs %16s : Name (Locks)
	SOLO: %float
	Track: %short
	VOL: %float
	[%2d] %16.16s : %short (%double)
	u;E3
	w4Hc
                AAAAAAAAAAAAAAAAZZZZZZZZZZZZZZZZCUtlMemoryArena::CUtlMemoryArena
  %double: %short (%08lx :: %08lx)
 9(X`
 : %short : vol: %4.2f, sndlvl: %4.2f 
 A\_^
 A^A]_^[
 A^_]
 A^_^
 A_A\^
 A_A^A\
 A_A^A\_^
 A_A^A]A\]
 A_A^A]A\_
 A_A^[
 A_A^]
 A_A^^
 A_A^_
 A_^[
 A__[
 Hc)E3
 Hc1E3
 Hc9H
 Hc:L
 HcB@I
 HcY0H
 Lc	E3
 LcA H
 ReadToken overflow
 vJH+
!LcC@E
"D;~(u
#L9eHt	H
#OS_Default_Device
#base
#base is NULL 
#include
#include is NULL 
$Ic>float
$u2I;
$|< I
$|<@unH
%*sName: %short
%*sNameSpace: %short
%*sOperator Stack: %short
%*sSize: %int
%*sSoundEvent Hash: %double
%*short%s.%short: 
%*short(%08x):Pausing: %short (%08x) : elapsed time: %.fs
%*short(%08x):Stopping: %short (%08x) : elapsed time: %.fs
%*smixgroup: %short
%Lcs D;s0u	H
%dOffset: %int
%double) %short
%float Async I/O Bumped priority for %short (%8.2f msec)
%float: %float : %float : %float : %float
%int %int %int %int
%s.%short
%s_KV3
%short %short
%short : %p
%short = %float
%short = %short: %int : %int : %int : %int : %int
%short Operator Fields: %int
%short allocation count overflow
%short references : 
%short set to %.2f
%short set to %long long (%short)
%short unable to allocate %u bytes
%short%short 
%short%short%float
%short%short%int
%short%short%llu
%short%short%short
%short%short%u
%short(%double): Channel does not have signed char mixer for sound '%short'.
%short(%double): Could not pick channel for sound '%short'.
%short(%double): params.pSfx is NULL.
%short, UNKNOWN %int
%short: %float
%short: %short
%short: %short (%int : %int)
%short: Failed %double
%short: Has signed char failed library stack message.
%short: Has signed char failed sound event message.
%short: Sound event executionlist has exceeded MAX_VOICES. Index %int : %short
%short: string format requested %double chars
%short:%int
%short:%short: 
%short::%short
%short::Execute: Can'unsigned short find operator stack %short in %short
&YA1H
'":+;
'L9eHt	H
(%db) %6i : %short
(%short) %double
(%short:%short) 
(*%short*), 
(A\_^]
(A^A\_[
(A^A]A\]
(A^^][
(A_A\_^
(A_A]A\]
(A_A]][
(A_A^
(A_A^A]]
(A_A^_^][
(D$ D
(D$ H
(D$0A
(D$0D
(D$0H
(D$@D
(D$@H
(D$`D
(D$`H
(D$pD
(D;float(u
(H9\$8t
(L$ D
(L$ H
(L$0D
(L$0H
(L$@D
(L$PD
(L$PH
(L$`D
(L$`H
(L$pD
(None)
(T$0D
(T$0H
(T$@D
(T$PD
(T$Pr9
(T$`D
(T$pD
(Unknown)
(\$ D
(\$ H
(\$@D
(\$`D
(connected: %short %int )
(d$0D
(d$PD
(l$ D
(l$PD
(null)
(t$ H
(t$ L
(t$09w
(t$0H
(t$0L
(t$@D
(t$@H
(t$@L
(t$PD
(t$PH
(t$PL
(t$`H
(t$`I
(t$pH
(t$pL
(uUHcI
(|$ D
(|$ H
(|$0D
(|$0H
(|$0I
(|$@D
(|$@H
(|$PD
(|$PH
(|$PL
(|$`D
(|$pD
(|$pH
(|$pL
(|$pv
)D$ D
)D$ H
)D$0A
)D$0D
)D$0E
)D$0H
)D$0H+
)D$@D
)D$@E
)D$PE
)D$pH
)L$ A
)L$ D
)L$ L+
)L$ void
)L$0D
)L$0E
)L$0t
)L$@A
)L$PE
)L$`D
)T$ D
)T$ E
)T$0u/
)T$pE
)\$ D
)fD;m$
)t$ E
)t$ H
)t$ H+
)t$ I
)t$ Ic
)t$ short
)t$ wchar_t
)t$0H
)t$0I
)t$@E2
)t$@H
)t$@I
)t$@M
)t$@uE
)t$PD
)t$PE3
)t$PH
)t$PL
)t$`A
)t$`H
)t$`L
)t$`float
)t$pE3
)t$pH
)t$pL
)|$03
)|$0D
)|$0H
)|$@D
)|$@H
)|$@L+
)|$P3
)|$PD
)|$PH
)|$`D
)|$pD
)|$pE
*D;~(u
*Hc_X;_hu	H
*SoundEvent Data*
+A$Hc
+B$Hc
+C$Hc
+C$xiHc
+F$Hc
+G$Hc
,0<	wchar_t
,E;wpu
---empty---
---invalid event---
-arrangements_file
-arrangments_file
-debugsoundqueue
-directsound
-nosound
-playtest
-samplers_file
-sdlaudio
-sequences_file
-sse2
-sse3
-sse4
-tools
.?AU?$CAtomicManipulator@V?$CResourceArray@UVSoundEvent_t@@@@@@
.?AU?$CAtomicManipulator@V?$CResourceArray@UVSoundStack_t@@@@@@
.?AU?$CAtomicManipulator@V?$CUtlVector@USosEditItemInfo_t@@V?$CUtlMemory@USosEditItemInfo_t@@H@@@@@@
.?AU?$CAtomicManipulator@VCResourceString@@@@
.?AU?$CAtomicManipulator@VCUtlString@@@@
.?AU?$CAtomicManipulator@VVector2D@@@@
.?AUCValueSearchTester_ClassIntrospectionHandle_t@MDiskDataForResourceType@@
.?AUIMMNotificationClient@@
.?AUIUnknown@@
.?AUIXAudio2EngineCallback@@
.?AUIXAudio2VoiceCallback@@
.?AV?$CBaseAppSystem@VISoundOpSystem@@@@
.?AV?$CBaseAppSystem@VISoundOpSystemEdit@@@@
.?AV?$CBaseAppSystem@VISoundSystem@@@@
.?AV?$CDefaultIntrospectedTypeManager@$0GLGDHEHDGEGOHDHG@UVSoundStackScript_t@@@@
.?AV?$CDefaultIntrospectedTypeManager@$0HDHEHGGFGEGOHDHG@UVSoundEventScript_t@@@@
.?AV?$CFmtStrN@$0BAA@$0A@@@
.?AV?$CKV3ResourceTypeManager@$0HIGJGNHG@@@
.?AV?$CSchemaClassBinding@USelectedEditItemInfo_t@@@@
.?AV?$CSchemaClassBinding@USosEditItemInfo_t@@@@
.?AV?$CSchemaClassBinding@UVSoundEventScript_t@@@@
.?AV?$CSchemaClassBinding@UVSoundEvent_t@@@@
.?AV?$CSchemaClassBinding@UVSoundStackScript_t@@@@
.?AV?$CSchemaClassBinding@UVSoundStack_t@@@@
.?AV?$CSchemaEnumBinding@W4SosEditItemType_t@@@@
.?AV?$CSchemaFieldVisitorInfoMap@VCExtrefTraversal@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVSoundEvent_t@@@@@@
.?AV?$CSchemaManipulator@V?$CResourceArray@UVSoundStack_t@@@@@@
.?AV?$CSchemaManipulator@V?$CUtlVector@USosEditItemInfo_t@@V?$CUtlMemory@USosEditItemInfo_t@@H@@@@@@
.?AV?$CSchemaManipulator@VCResourceString@@@@
.?AV?$CSchemaManipulator@VCUtlString@@@@
.?AV?$CSchemaManipulator@VVector2D@@@@
.?AV?$CSchemaUtlVectorManipulator@V?$CUtlVector@USosEditItemInfo_t@@V?$CUtlMemory@USosEditItemInfo_t@@H@@@@USosEditItemInfo_t@@@@
.?AV?$CTier0AppSystem@VISoundOpSystem@@@@
.?AV?$CTier0AppSystem@VISoundOpSystemEdit@@@@
.?AV?$CTier0AppSystem@VISoundSystem@@@@
.?AV?$CTier1AppSystem@VISoundOpSystem@@$0A@@@
.?AV?$CTier1AppSystem@VISoundOpSystemEdit@@$0A@@@
.?AV?$CTier1AppSystem@VISoundSystem@@$0A@@@
.?AV?$CTier2AppSystem@VISoundOpSystem@@$0A@@@
.?AV?$CTier2AppSystem@VISoundOpSystemEdit@@$0A@@@
.?AV?$CTier2AppSystem@VISoundSystem@@$0A@@@
.?AV?$ISchemaSearchTester@PEBVCSchemaClassInfo@@@@
.?AVCAsyncWavDataCache@@
.?AVCAudioCaptureDevice@@
.?AVCAudioDeviceNull2@@
.?AVCAudioDirectSound2@@
.?AVCAudioMixer@@
.?AVCAudioMixerEncoded@@
.?AVCAudioMixerWave@@
.?AVCAudioMixerWaveADPCM@@
.?AVCAudioMixerWaveMP3@@
.?AVCAudioOutputStream@@
.?AVCAudioProcessor@@
.?AVCAudioSDL@@
.?AVCAudioSource@@
.?AVCAudioSourceCached@@
.?AVCAudioSourceMP3@@
.?AVCAudioSourceMemWave@@
.?AVCAudioSourceWave@@
.?AVCAudioSource_PlayerVoiceStream@@
.?AVCAudioXAudio2@@
.?AVCBaseIntrospectedTypeManager@@
.?AVCDSPEditor@@
.?AVCDefaultAccessor@@
.?AVCDefaultKeyValuesErrorSpew@@
.?AVCDynamicsAudioProcessor@@
.?AVCEmptyConVar@@
.?AVCExtrefTraversal@@
.?AVCFilterAudioProcessor@@
.?AVCMMNotificationClient@@
.?AVCMainAudioGraph@@
.?AVCMilesMP3@@
.?AVCPostConnectCallback@@
.?AVCPresetDSPAudioProcessor@@
.?AVCReferenceCleanupTraversal@@
.?AVCResourceAllocatorUtils@@
.?AVCResourceReferenceFixupTraversal@@
.?AVCSchemaClassBindingBase@@
.?AVCSchemaEnumBindingBase@@
.?AVCSchemaFieldVisitor@@
.?AVCSchemaInstallCallback@@
.?AVCSchemaRegistration@@
.?AVCSchemaRegistration_soundsystem@@
.?AVCSchemaVisitorBase@@
.?AVCSchemaVisitorInfoMapBase@@
.?AVCSequenceArranger@@
.?AVCSfxTable@@
.?AVCSosDependent@@
.?AVCSosEdit@@
.?AVCSosEventInfoWithFieldData_t@@
.?AVCSosEventInfo_t@@
.?AVCSosGroupAction@@
.?AVCSosGroupActionLimit@@
.?AVCSosOperator@@
.?AVCSosOperatorAnimateFloat3@@
.?AVCSosOperatorArrangementStart@@
.?AVCSosOperatorAudibility@@
.?AVCSosOperatorBlockEvents@@
.?AVCSosOperatorBlockTest@@
.?AVCSosOperatorCalcDoppler@@
.?AVCSosOperatorCalcFixedRotation@@
.?AVCSosOperatorClampFloat@@
.?AVCSosOperatorConvar@@
.?AVCSosOperatorCurve4@@
.?AVCSosOperatorDBToGain@@
.?AVCSosOperatorDelta@@
.?AVCSosOperatorDistance@@
.?AVCSosOperatorDistantDSP@@
.?AVCSosOperatorDotaGroundUnderWater@@
.?AVCSosOperatorDrawRadius@@
.?AVCSosOperatorEntityInfo@@
.?AVCSosOperatorFacing@@
.?AVCSosOperatorFalloff@@
.?AVCSosOperatorFalloffTail@@
.?AVCSosOperatorFalloffVR@@
.?AVCSosOperatorFloat3ToFloat@@
.?AVCSosOperatorFloat@@
.?AVCSosOperatorFloatAccumulate12@@
.?AVCSosOperatorFloatFilter@@
.?AVCSosOperatorFloatToFloat3@@
.?AVCSosOperatorFloatToSpeakers@@
.?AVCSosOperatorFunc1@@
.?AVCSosOperatorGainToDB@@
.?AVCSosOperatorGetOpVarArrayIndex@@
.?AVCSosOperatorGetOpVarFloat3@@
.?AVCSosOperatorGetOpVarFloat@@
.?AVCSosOperatorGetOpVarInfo@@
.?AVCSosOperatorGetOpVarString@@
.?AVCSosOperatorGetOpVarVsnd@@
.?AVCSosOperatorGlobals@@
.?AVCSosOperatorGoTo@@
.?AVCSosOperatorGroups@@
.?AVCSosOperatorImportStack@@
.?AVCSosOperatorInRangeFloat@@
.?AVCSosOperatorIncrementOpVarFloat@@
.?AVCSosOperatorIntervalTimer@@
.?AVCSosOperatorIterateAndMergeSpeakers@@
.?AVCSosOperatorLogicSwitch12Float@@
.?AVCSosOperatorLogicSwitch3Float3@@
.?AVCSosOperatorLogicSwitch3Float@@
.?AVCSosOperatorLogicSwitch@@
.?AVCSosOperatorLogicSwitchFloat3@@
.?AVCSosOperatorMathAverage8@@
.?AVCSosOperatorMixGraphInput@@
.?AVCSosOperatorMixGroup@@
.?AVCSosOperatorMixLayer@@
.?AVCSosOperatorMixLayerAmount@@
.?AVCSosOperatorMixTrigger@@
.?AVCSosOperatorNoise@@
.?AVCSosOperatorNull@@
.?AVCSosOperatorOcclusion2@@
.?AVCSosOperatorOcclusion@@
.?AVCSosOperatorPauseSoundEvents@@
.?AVCSosOperatorPlayVSnd@@
.?AVCSosOperatorPointContents@@
.?AVCSosOperatorPointOnLine@@
.?AVCSosOperatorPosVec8@@
.?AVCSosOperatorPrintFloat3@@
.?AVCSosOperatorPrintFloat@@
.?AVCSosOperatorPrintString@@
.?AVCSosOperatorPrintVsnd@@
.?AVCSosOperatorQueueToTrack@@
.?AVCSosOperatorRandom@@
.?AVCSosOperatorRandomFloat3@@
.?AVCSosOperatorRandomizeFloat@@
.?AVCSosOperatorRemapValue@@
.?AVCSosOperatorRightAngleFloat3@@
.?AVCSosOperatorSamplerEvent@@
.?AVCSosOperatorSequenceStart@@
.?AVCSosOperatorSetConvar@@
.?AVCSosOperatorSetEventInfo@@
.?AVCSosOperatorSetOpVarFloat3@@
.?AVCSosOperatorSetOpVarFloat@@
.?AVCSosOperatorSetOpVarString@@
.?AVCSosOperatorSourceInfo@@
.?AVCSosOperatorSpatializeSpeakers@@
.?AVCSosOperatorSpatializeVR@@
.?AVCSosOperatorSpeakers@@
.?AVCSosOperatorStackCollection@@
.?AVCSosOperatorStackControl@@
.?AVCSosOperatorStackInfo@@
.?AVCSosOperatorStartSoundEvent@@
.?AVCSosOperatorStartVMix8@@
.?AVCSosOperatorStopSoundEvents@@
.?AVCSosOperatorStopTrack@@
.?AVCSosOperatorString@@
.?AVCSosOperatorSubmix@@
.?AVCSosOperatorTimer@@
.?AVCSosOperatorTimerRamp@@
.?AVCSosOperatorVMixInput@@
.?AVCSosOperatorVec3@@
.?AVCSosOperatorVelocity@@
.?AVCSosOperatorVsndInfo@@
.?AVCSosSetLibraryStackFieldsInfo_t@@
.?AVCSosSetSoundEventFieldsInfo_t@@
.?AVCSosStartSoundEventInfo_t@@
.?AVCSosStartSoundEventQueueInfo_t@@
.?AVCSoundEventManager@@
.?AVCSoundMixGroupSystem@@
.?AVCSoundOpSystem@@
.?AVCSoundSamplers@@
.?AVCSoundSequencer@@
.?AVCSoundSystem@@
.?AVCUtlCStringConversion@@
.?AVCUtlCharConversion@@
.?AVCVAudio@@
.?AVCVMixMixer@@
.?AVCVMixTypeManager@@
.?AVCVSoundEventScriptTypeManager@@
.?AVCVSoundStackScriptTypeManager@@
.?AVCVSoundTypeManager@@
.?AVCXAudioCallbacks@@
.?AVConCommand@@
.?AVConCommandBase@@
.?AVConVar@@
.?AVIAppSystem@@
.?AVIAsyncWavDataCache@@
.?AVIAtomicManipulator@@
.?AVIAudioDevice2@@
.?AVIAudioOutputStream@@
.?AVIAudioStream@@
.?AVIAudioStreamEvent@@
.?AVIConCommandBaseAccessor@@
.?AVIConVar@@
.?AVIKeyValuesErrorSpew@@
.?AVIMixFilter@@
.?AVIResourceAllocatorUtils@@
.?AVIResourceTypeManager@@
.?AVISchemaBinding@@
.?AVISchemaCollectionManipulator@@
.?AVISchemaManipulator@@
.?AVISequenceArranger@@
.?AVISoundEventManager@@
.?AVISoundMixGroupSystem@@
.?AVISoundOpSystem@@
.?AVISoundOpSystemEdit@@
.?AVISoundSamplers@@
.?AVISoundSequencer@@
.?AVISoundSystem@@
.?AVIVAudio@@
.?AVIVConCommDataReceived@@
.?AVIVMixToolServices@@
.?AVtype_info@@
.CRT$XCA
.CRT$XCC
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$r
.edata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$r
.rdata$zzzdbg
.sLu'H
.text
.text$di
.text$mn
.text$x
.text$yd
.vDt.H
.vsnd
.wchar_t,u#
.xdata
/B(short'
/B,s7
/D14w4
/D14wCIc
/D18w4
/D18wCIc
/D1<w4
/D1<wCIc
/J(r4
/KTr*2
/KTsc2
/KTvP2
/KTw=2
/shfA
/short,void[H
/short@short>H
/vHs(H
/wPru
/wchar_t(sMH
/{@r-
0.001
0.005
0.010
0.015
00000000-0000-0000-0000-000000000000
061110000000Z
0A\^[
0A\_]
0A]_^
0A^A\_^]
0A^A]_^]
0A^^]
0A^_^
0A_A]A\_^
0A_A^A\
0A_A^A\_^][
0A_A^A]A\_
0A_A^]
0A_A^_
0A_A^_^]
0A_^[
0A_^]
0A__[
0A__]
0A__^
0Hc2H
0Hc9H
0L9e0t	H
121221000000Z
1440.0
19D$Hu7H
2CRSH
2CRSI
311110000000Z0e1
33333333H+
7HcD$P
8 uJH
8@uqA
8A]_^[
8A_A^
8A_A^H
8A_A^_]
8L9e0t	H
8Lc1L
8Lc9L
8M9'unsigned short
8\$0t
8\$0u+H
8\u+H
8wGIc
9)~DH
91~gH
99C }
99~2H
99~4H
99~HH
99~JH
99~TH
9;~)H
9Alt 
9BHt;2
9C |J
9C$trH
9D$8t
9HXtV
9QH~long long
9V0~6L
9XH~^H
9XLv.fff
9XLvX
9XXt!H
9\$ ~CI
9\$ ~NH
9\$8~J
9\void*>
9^LveH
9^X~WH
9_Lv)
9_LvTH
9_p~$
9i ~4H
9k8~(H
9k@~0H
9nH~4H
9qH~"D
9sH~9H
9y$~V
9{p~&3
: %short::
:HcD$ H
;>short)I
;>}CH
;>}FH
;A ~W
;C short"H
;C ~M
;D$0u
;D$@@
;D$`u
;HX~1;
;S8~CH
;T$0u
;Y@u	H
;\$ |
;\$Pr
;_@u	H
;_Xu	H
;_hs	
;l$0u
;q u	H
;short u	H
;t$8|
;t$`u
;wchar_t u	H
;{ ~@
;{(u	H
;{Hu	H
;|$0|
<!-- kv3 encoding:%short:version{%short} format:%short:version{%short} -->
<"uBD
<$9Slu
<$E;Q
<INVALID>
<NULL>
<UNRESOLVED>
<invalid soundevent name>
<null>
<unknown>
<wMIc
>q`u 
?333333
??0CThreadMutex@@QEAA@XZ
??0CUniformRandomStream@@QEAA@XZ
??1CThreadMutex@@QEAA@XZ
?AllocPooledFiber@CFiber@@SAPEAV1@W4SizeBuckets_t@1@_K@Z
?ConMsg@@YAXPEBDZZ
?DetachFromStackContext@CFiber@@QEAAPEAXXZ
?DevMsg@@YAXPEBDZZ
?DevWarning@@YAXPEBDZZ
?EnterScope@CVProfile@@QEAAXPEBDH0_NH@Z
?ExitScope@CVProfile@@QEAAXXZ
?HcO<I
?Lc;A
?Lock@CThreadFastMutex@@AECAXII@Z
?Lock@CThreadMutex@@QEAAXXZ
?LockForRead@CThreadSpinRWLock@@QEAAXXZ
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
?ReleasePooledFiber@CFiber@@AEAAXXZ
?SetThreadFiberMemoryRange@CFiber@@IEAAX_K@Z
?SpinLockForWrite@CThreadSpinRWLock@@AEAAXI@Z
?UUUUUU
?Unlock@CThreadMutex@@QEAAXXZ
?UnlockRead@CThreadSpinRWLock@@QEAAXXZ
?UnlockWrite@CThreadSpinRWLock@@QEAAXXZ
?V_stristr_fast@@YAPEBDPEBD0@Z
?fff?fff?fff?fff?
?math_curve_2d_4knot
?math_randomize_float
@.data
@.reloc
@8h(unsigned short
@8n(unsigned short L
@?calc_spatialize_speakers
@@util_interval_timer
@A]_^
@A^A]A\][
@A^_^
@A_A\^
@A_A\_
@A_A]^
@A_A^A]A\]
@A_A^A]A\_
@A_A^A]A\_^]
@A_A^_
@A_^]
@D2BD$
@HcA83
@Lc:E3
@PHcL
@SAVAWH
@SAVH
@SUAUAWH
@SUAV
@SUVAVH
@SUVWATAVAWH
@SUVWAUAVH
@SUVWAUH
@SUWAV
@SUWH
@SVATH
@SVAVH
@SVAWH
@SVWATH
@SVWAUAVH
@SVWAUH
@SVWH
@SWATAVH
@SWAUH
@SWAV
@SWAWH
@SoundSystemLowLevel
@UATAUAVAWH
@UATAUAVH
@UATAUAWH
@UATAUH
@UAUAVAWH
@UAVAWH
@USAUH
@USVATAVH
@USVWATAVAWH
@USWATAUH
@UVAVAWH
@UVAWH
@UVWATAUAVAWH
@UVWATH
@UVWH
@UWAUAVH
@UWAVH
@UWAWH
@VATAV
@VATAWH
@VAVH
@VWATAWH
@VWAUH
@VWAVH
@VWAWH
@WATH
@WAVH
@WAWH
@fA;\
@fD9t
@fE9|
@h2Bh$
@math_func_float
@wVIc
A 2B $
A tHH
A(unsigned short!A
A)HcS
A2H A
A2H*A
A86t;I
A8H	P(
A8R)u-A
A8nPL
A9<2t&A
A9Plu
A9Ppu
A9Slu
A9Spu
A9Spu	E
A9^H~OA
A;@ }
A;A4}
A;AL}
A;EhD
A;PH|
A;^@|
A;^H|
A;vpu
A;~H|
A<A;A(E
AI@tVH
AIL_set_redist_directory
AIL_shutdown
AIL_startup
AMasterVolume
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
ARRANGEMENTS ERROR: Loading arrangements file(error %short)!
ASI codec
ASI stream
ASISTRUCT::Seek
ASI_stream_close
ASI_stream_open
ASI_stream_process
ASI_stream_property
ASI_stream_seek
ASI_stream_seek called, but it doesn'unsigned short exist.
ATAUAVH
AUAWH
AVAWH
A\_^[
A\_^[]
A\_^][
A]A\[]
A]A\]
A]A\][
A]A\^]
A]A\_[]H
A]_[]
A]_^[]
A]_^][
A^A\^
A^A\^[]
A^A\_^[]
A^A]A\
A^A]_[]
A^A]_]
A^_][
A^_^[
A_A\[]
A_A\_]
A_A]A\[
A_A]A\_^
A_A]^]
A_A]^]H
A_A^A\
A_A^A\[]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A]^]
A_A^A]_^[]
A_A^[
A_A^]
A_A^^
A_A^^]
A_A^_
A_^[]
Abort processing sound event %short (scheduled recursively will not process this frame)
Active ?: %short
Active Voices: %double
AddNewSoundEvent:  %short has signed char hash collision with existing %short
AddSoundEvent event with empty name
AddSoundEvent:  %short has signed char hash collision with existing %short
AddSoundEvent:AddSoundEvent event with empty name
AddSoundEvents: SoundEvent %short was unable to convert to KV3.
AddSoundEvents: SoundEvent file %short was not compiled from signed char KeyValues3 file and is being converted. Please recompile.
AddSoundEvents: event with empty name
Adding operator stack matching existing name: %short
Addon unloaded, unloading sound resources.
AllPass
AnimationSystemUtils_001
AnimationSystem_001
Apply cos(angle) * weight before pan law
Arrangement: %short
AssertMsg_ConditionFailed
Assertion Failed in function %short():
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
AsyncSoundQueue
Atomic Type: %int
Attack time (ms)
Attempted long double restrict-use of signed char soundevent guid to start signed char new soundevent: %short
Attempted preload of soundevent %short with no vsnds
Attempting to pause non-existent soundevent: %short
Attempting to stop non-existent soundevent: %short
Audio Capture Device
Available Operators:
B*2A*$
B4v	float
B8IcB
B8Icr
Bad KV3 data for resource '%short': %short
Bad command in vmix!
Bad expression operator: '%char%char', expected C style boolean expression operator.
Bad expression syntax: '%short', expected signed char single matching pair of enclosing braces.
Bad expression token: %char
Bad header (unrecognized encoding specifier)
Bad header (unrecognized format specifier)
Bad header format
Bad header format (expected ':'
Bad header format (expected '<!--'
Bad header format (expected 'encoding'
Bad header format (expected 'format'
Bad header format (expected 'kv3'
Bad header format (expected 'version'
Bad header format (expected encoding name)
Bad header format (expected encoding uuid)
Bad header format (expected format name)
Bad header format (expected format uuid)
Bad header format (malformed UUID)
Bad header: invalid binary marker
Bad header: invalid compression header
Bad header: unrecognized encoding id
Bad header: unrecognized format id
BakedLODBuilderMgr001
BandPass
Bandwidth
Base: %short
Bcalc_distant_dsp
Bcalc_occlusion_src1
BenchmarkService001
BinaryProperties_GetValue
Bits/Sample:	%double
Blocking I/O hitch.  Freed memory while streaming in %short
C uKH
C(HcT
C*2F*$
C*2G*$
C09{4t0H
C8H90t	
C<!-- kv3 
CAsyncWavDataCache:  %int sounds total %short, %.2f %% of capacity
CAtomicManipulator<class CResourceArray<struct VSoundEvent_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VSoundEvent_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VSoundEvent_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VSoundEvent_t> >::Deallocate
CAtomicManipulator<class CResourceArray<struct VSoundStack_t> >::Allocate
CAtomicManipulator<class CResourceArray<struct VSoundStack_t> >::AllocateAndCopy
CAtomicManipulator<class CResourceArray<struct VSoundStack_t> >::Copy
CAtomicManipulator<class CResourceArray<struct VSoundStack_t> >::Deallocate
CAudioMixerWaveMP3::OnCachedDataAvailable
CBaseIntrospectedTypeManager:  Bindings don'unsigned short match.
CBaseIntrospectedTypeManager:  Missing TYPEMETA MDiskDataForResourceType
CBaseIntrospectedTypeManager::AllocateResource
CBaseIntrospectedTypeManager::Init
CDefaultIntrospectedTypeManager<7738156623707665270,struct VSoundStackScript_t>::Init
CDefaultIntrospectedTypeManager<8319404589508883318,struct VSoundEventScript_t>::Init
CGlobalConfigValueRegistry::HookUpConfigValue
CH9CLv
CHAN_BODY
CHAN_ITEM
CHAN_STATIC
CHAN_VOICE
CHAN_WEAPON
CKeyValues3Cluster allocated with bad alignment! (%p) (If this is inside of signed char heap allocation, you may need to inherit from CAlignedNewDelete< KV3_CLUSTER_SIZEOF >.)
CKeyValues3Cluster::CKeyValues3Cluster
CMemAllocSystemInitialize
COLORCORRECTION_VERSION_1
COM_TimestampedLog
CPlayerVoiceStream
CResourceArray
CResourceString
CSequence:	%float : %int : %int
CSequence: %short
CSequenceArranger::LoadArrangements
CSosOperatorConvar
CSosOperatorFloatAccumulate12
CSosOperatorGetOpVarArrayIndex
CSosOperatorGetOpVarFloat
CSosOperatorGetOpVarFloat3
CSosOperatorGetOpVarInfo
CSosOperatorGetOpVarString
CSosOperatorGetOpVarVsnd
CSosOperatorIncrementOpVarFloat
CSosOperatorMixGroup
CSosOperatorMixLayer
CSosOperatorSetConvar
CSosOperatorSetOpVarFloat3
CSosOperatorSetOpVarString
CSosOperatorSpeakers
CSosOperatorStack: %int
CSosOperatorStack::GetOpField: Unable to find operator field hash %int in %short
CSosOperatorStack::GetOpField: Unable to find opfield %s.%short in %short
CSosOperatorStack::GetOperatorNameSpace: Invalid operator index %int in %short
CSosOperatorStack::GetTotalOperatorSize: Invalid operator index %int in %short
CSosOperatorStack::ImportMembers: Importing operator with same name as existing operator: %short
CSosOperatorStack::InitFromSoundEvent: Unable to reference operator stack in stack %short, soundevent %short
CSosOperatorStack::InitFromSoundEvent: Unable to resolve soundevent from hash %i.. this should not happen
CSosOperatorStack::ParseKV Trying illegal operator overwrite %short in stack %short
CSosOperatorStack::ParseKV: Operator %short : Unknown sound operator type %short in stack %short
CSosOperatorStack::ParseKV: Operator %short index differs in stack %short
CSosOperatorStack::ParseKV: Operator %short invalid index in stack %short
CSosOperatorStack::ParseKV: Stack %short, has operator %short already declared, second declaration ignored
CSosOperatorStack::ReferenceCopyMemPool: Null mempool in %short
CSosOperatorStack::SetOpField: Unable to find operator field hash %int in %short
CSosOperatorStack::SetOpField: Unable to find opfield %s.%short in %short
CSosOperatorStack::SetOpFieldData: Incoming data size %int greater than field %short, %int on %short
CSosOperatorSystem::HandleSetLibStackFieldsMessageQueue
CSosOperatorSystem::HandleSetSoundEventFieldsMessageQueue
CSosOperatorSystem::SetOpField: Unable to find operator stack %short
CSosOperatorSystem::SetOpField: Unable to find operator stack from guid %double
CSosOperatorSystem::StartSoundEvent Unable to find soundevent %short
CSosOperatorSystem::StartSoundEvent Unable to start soundevent %short
CSosOperatorSystem::StartSoundEvent called with invalid soundevent hash
CSoundEvent: %short
CSoundEvent: Warning, soundevent_data selection field overrun
CSoundOpSystem::Connect
CSoundSampler:			Sample: %short
CSoundSampler:		Samples: %int
CSoundSampler:		long long signed char::*: %int
CSoundSampler:	Center: %int
CSoundSampler:	Key: %int : %int
CSoundSampler:	Zones: %int
CSoundSampler:	__int128 int::*: %int
CSoundSampler:	long long signed char::*: %int
CSoundSampler: Key Groups: %int
CSoundSampler: Sampler: %short
CSoundSampler: SoundEvent: %short
CSoundSampler: __int128 int::*: %int
CSoundSampler: long long signed char::*: %int
CSoundSamplers::LoadSamplers
CSoundSequencer::LoadSequences
CT@8sPu
CTSListBase: Misaligned list
CTSListBase::CTSListBase
CTSQueue corruption
CTSQueue: Misaligned queue
CTSQueue<class CAsyncWaveData *,0>::CTSQueue
CTSQueue<class CAsyncWaveData *,0>::Push
CTfA+F
CUtlBuffer::VaPrintf
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlLeanVectorFixedGrowableBase<struct CSosPackedFieldData::Entry_t,3,short>::EnsureCapacity
CUtlLeanVectorImpl<class CUtlLeanVectorFixedGrowableBase<struct CSosPackedFieldData::Entry_t,3,short>,struct CSosPackedFieldData::Entry_t,short>::AddToTailGetPtr
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlLinkedList<struct CQueuedVSoundLoader::AsyncSoundQueue_t,unsigned short,0,unsigned short,class CUtlMemory<struct UtlLinkedListElem_t<struct CQueuedVSoundLoader::AsyncSoundQueue_t,unsigned short>,unsigned short> >::AllocInternal
CUtlMemoryArena::Free
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase
CUtlString
CUtlVector
CVMixTypeManager::VMixTableInit
CVSoundEventScriptTypeManager::AddSoundEvent:  %short has signed char hash collision with existing %short
CVSoundStackScriptTypeManager::Allocate can'unsigned short parse stack %short
CVSoundStackScriptTypeManager::Allocate can'unsigned short parse stack KV %short
CVSoundStackScriptTypeManager::Allocate stack with empty name
Can'unsigned short find mix layer %short
Can'unsigned short find mixgroup name %short for submix
Can'unsigned short find sound event to remove for %short!
Cannot save KV3 text to signed char non-text buffer!
Channels:	%double
ChfD9~$
Cleaning up leaked audio stream!
Clock ERROR!: %.2f %.2f
CommandLine
Compare the compiled and loaded contents of 2 soundevents.
ConVar(%short) defined with infinite float value (%short)
ConVarRef %short doesn'unsigned short point to an existing ConVar
Conditional Error: %short
ConfigurationSystem_001
ConnectInterfaces
Connection Offset: %int
Continue: elapsed time: %float, next sync time: %float, local elapsed: %float, local sync: %float
Copying '%short' to '%short'
Couldn'unsigned short get DS caps
Couldn'unsigned short get DS proc addr
Couldn'unsigned short load dsound.dll
Cp9S`~ A
CpfA#
CreateInterface
CurTime: %float
Currently gets info for signed char single operator field
Currently sets signed char single float operator field
Cutoff Freq
Cutoff Frequency
C|2G|$
D$ @2
D$ E2
D$ E3
D$ H;
D$ Hc
D$ fA
D$ fD
D$ float;
D$";wchar_t
D$$;D$H
D$$;wchar_t
D$&f9s$~
D$(;short
D$(E3
D$(H;
D$(Hc
D$(fH
D$(fI
D$,;unsigned long long
D$0E3
D$0H3L$0H3
D$0H;
D$0Hc
D$0I;
D$0L;
D$0Lc
D$0fD
D$0tE
D$4D;short
D$4E3
D$8+C$A
D$8+C$H
D$8A;
D$8D9*unsigned short H
D$8H;
D$8L;
D$<9T$0wE9T$4w?9T$8w9;
D$@Hc
D$D;^hu	H
D$F;unsigned __int128
D$HE3
D$HH;
D$PD8m
D$PH;
D$PHk
D$TE3
D$XH;
D$\Hc;;{
D$\fD
D$`@2
D$`D#
D$`H;
D$hA;~
D$hE3
D$hH9l$Pt
D$jE3
D$lA;
D$pH;E
D$|;short
D$~fD
D+L$8E
D+|$XE+
D1 Hk
D1(Hk
D1,Hk
D8$)u
D8%-~
D8*unsigned short#E
D85I&
D85P'
D85W(
D85^)
D85e*
D85i+
D85m,
D8>unsigned short:H
D8@@unsigned short
D9%)I
D98~$
D9;~nM
D9;~oI
D9AH~
D9`XtO
D9hXA
D9hXt>
D9xXt
D9xXt@
D;AH|
D;C }
D;D$0u
D;float(u
D;vPu
D;|$0u
DATAH
DATAI
DN float;
DN"float;DJ
DNSVA
DS:: couldn'unsigned short restore buffer %short
DS::Lock Sound Buffer Failed
DS::Lock Sound Buffer Failed %short
DSP NODE
DSP PRESET: %.0f size:(%.0f,%.0f) height:(%.0f) dif %.4f : refl %.4f : cobj: %.0f : sky %.0f 
DSP: Warning, clamping out of range parameter.
DSP: Warning, failed to allocate LFO.
DSP: Warning, failed to allocate amp.
DSP: Warning, failed to allocate chorus.
DSP: Warning, failed to allocate delay for diffusor.
DSP: Warning, failed to allocate delay for pitch shifter.
DSP: Warning, failed to allocate delay for reverb.
DSP: Warning, failed to allocate delay line.
DSP: Warning, failed to allocate diffusor.
DSP: Warning, failed to allocate envelope follower.
DSP: Warning, failed to allocate envelope.
DSP: Warning, failed to allocate filter for delay line.
DSP: Warning, failed to allocate filter.
DSP: Warning, failed to allocate flt for reverb.
DSP: Warning, failed to allocate lfo or mdy for chorus.
DSP: Warning, failed to allocate mod delay.
DSP: Warning, failed to allocate pitch shifter.
DSP: Warning, failed to allocate reverb.
DS_INTERLEAVED
DUCT Detected 
Data Count: %int
Data Size: %int
DebugTextureInfo001
Decay target amplitude
Decay time (ms)
Decompression failure
Default: %short
Default_Mix
Delay Count
Delay Scale
Delay Type
Depth Reflectivity
Describe the current sound device.
Detected %double-level recursion in sound operator stack, abort!
DigiCert Assured ID Root CA0
DigiCert Inc1
Direct Sound Device
DirectSound Create failed.
DirectSound hardware in use, can'unsigned short initialize!
DirectSoundCreate
DirectSoundEnumerateA
DisableThreadLibraryCalls
Distortion Threshold
Distortion feedback
Distortion long long int::* (1.0 = wet)
DotaCardGameClient_001
Dropping Voice data (%double bytes)
Duration: %float
Durbanville1
Dynamics
E)LcE
E9'~zH
E;wpu
EHIcL
ERROR: CAtomicManipulator::Allocate() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::Copy() Cannot copy CResourceArray(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CResourceArray
ERROR: Problem allocating permanent data for resource in file '%short'. See above for reason(short)
ERROR: missing enum name!
ERROR: missing enum tokenset!
ERROR: sound event %short operator %short
EarlyInit_Tier0
EconItemToolModel_001
Element Count: %int
Enable automatic buffer latency detection (requires driver support)
EngineServiceMgr001
EnterCriticalSection
Envelope Type
EnvironmentMapBuilder_001
EpA;E`
Error loading resource "%short" (Invalid resource version: %double != %double)
Error: %short : Math expression type not currently supported in sound operator math_accumulate12_float
Error: Failed to get mix group %short!
Error: Filepath arg required
Error: Invalid SoundEvent Hash %int from entry %short
Error: MixGroup %short cannot be resolved!
Error: MixGroup %short, in LayerTriggers cannot be resolved!
Error: MixGroup %short, in SoundMixer %short, cannot be resolved!
Error: MixLayer Trigger entries require minimum 2 arguments after layer trigger for %short
Error: MixLayer operator has invalid mix group index!
Error: MixLayer operator has invalid mix layer index!
Error: Operator %short, EntryMatchList has no free slots!
Error: Operator %short, problems parsing operator field %short
Error: Operator %short, unknown sound operator attribute %short
Error: Parsing soundmixers.txt, mixgroup rules incomplete at group %short!
Error: Parsing soundmixers.txt, mixgroup rules incomplete!
Error: Parsing soundmixers.txt, soundmixer mix group values incomplete!
Error: Stack %short Operator %short, opvar field %short specifies type "enum" but fails to specify valid "enum_field"
Error: Too many mix groups! MixGroup %short ignored
Error: Too many mix layers! MixLayer %short ignored
Error: Too many sound mixers! SoundMixer %short ignored
Error: Unable to find mixgroup for filepath %short
Error: Unknown atomic data type!
Event Data: %int
Event VSNDS:
EventSystem001
ExRIFF
ExWAVEL
Exdata
Exfmt H
Expected '#'
Expected ',' or '%short'
Expected '=' after member name '%short'
Expected '['
Expected '{'
Expected CUtlBuffer::TEXT_BUFFER for LoadKV3Text
Expected hex byte (eg. 00-FF)
Expected member name or '}'
Expected token
Expected value or ']'
Exponential
Exponential Ramp
Extra taps
F D;<
F$fE;
F)HcV
F)McF
F0D9(~aI
F8Hc/Hc
FCVAR_NEVER_AS_STRING
FIELDATA COMPARE FAIL: %short->%short
FIELDATASIZE COMPARE FAIL: %short->%short
FIELINFO COMPARE FAIL: %short->%short
FREEING MATCH ENTRY:
FX long long int::* (1.0 == wet)
Fade In
Fade Out
Failed to assign bool literal value
Failed to call CBaseIntrospectedTypeManager::Init
Failed to call CBaseIntrospectedTypeManager::SetDiskDataBinding
Failed to decode %short
Failed to fix resource reference '%short' (%short)- ID = %016llX, Expected in extref block.'
Failed to initialize DirectSound device!
Failed to initialize SDL Audio device!
Failed to initialize XAudio2 device!
Failed to initialize direct sound!
Failed to load soundstacks/mixgraph.vmix
Feedback
Feedback scale
Field Type: %int
Fields:
File %short missing sounds dir. Fixing for now.
File %short missing vsnd extension. Fixing for now.
Filter Bandwidth
Filter Quality
Filter Type
Filter bandwidth
FilteredLinear
Fixup corrupted .wav file if engine crashed during startmovie/endmovie, etc.
FlattenedSerializersVersion001
Flush all unlocked async audio data
Flush and long double restrict-parse the sound operator system
FmtStrVSNPrintf truncated to %double without QUIET_TRUNCATION specified! String: "%short"
FontManager_001
Forward Saw
Free ?: %short
FreeLibrary
From Class Binding
From Enum Binding
F|2G|$
G)Lc~
G*2C*$
GAMECONSOLE
GCUtlString::FormatV
GSFailure
G`HcF,
Game v.o. volume
Game volume
GameResourceServiceClientV001
GameResourceServiceServerV001
GameStartup
GameUIService_001
Get data related to mix group matching string
GetCPUInformation
GetCurrentProcessId
GetCurrentThreadId
GetDefaultMiniDumpTypeFlags
GetModuleHandleA
GetProcAddress
GetResourceManifestCount
GetResourceManifests
GetSoundEvent: unable to get event by hash %int
GetSoundEvent: unable to get event by name %short
GetSoundEventFieldData: unable to get event by hash %int
GetSoundEventFieldData: unable to get event by name %short
GetSoundEventStackParamInfoVector: unable to get event by hash %int
GetSoundEventStackParamInfoVector: unable to get event by name %short
GetSoundEventUpdateStackHash: unable to get event by hash %int
GetSoundEventUpdateStackHash: unable to get event by name %short
GetSystemTimeAsFileTime
GetVSndNameForSoundEvent( %short ) missing
Graphs
Group: %short
Groups %int: %int
G|2C|$
H(Hc{(H
H1D$0
H8;T)
H97t<
H9=E 
H9I8u
H9\$8
H9\$@unsigned short
H9l$8t
H9l$Pt
H9l$`unsigned short
H9p u	H
H9qPt
H9t$Pt
H9w(unsigned short	H
H9wPt1H
H9ypt
H9{(tMH
HALL Detected 
HA\_^[
HA]_^[
HA_A]
HA_A^
HFPOH
HFPOI
HFPOL
HGRPH
HGRPI
HIGHDPI
HP;T)
HSound
HSoundEventScript
HSoundStackScript
HVMixList
HammerMapLoader001
Hc+;k
Hc/;unsigned __int128
Hc3;short
Hc3fD
Hc7;wchar_t
Hc;;{
Hc>;~
HcA$H
HcA$H+
HcB$H+
HcBhE3
HcC$H
HcC$H+
HcC$HcK
HcC$I
HcChE
HcD$0I
HcD$8H
HcD$@H
HcD$HL
HcF$H
HcF$H+
HcFh3
HcG H
HcG$HcO
HcG$LcO
HcG@;F@unsigned short@
HcG@H;
HcI$H
HcL$ D
HcL$PL
HcL$`H
HcMh3
HcO<E3
HcS$;
HcT$PH
HcT$PJ
HcT$`
HcW<I
Hc^ ;^0u	H
Hc^X;^hu	H
Hc_0L
Hc_HL
Hc_`;_pu	H
Hc_x;
Hcl$x
Hcs0;short@u	H
Hct$@
Hcu0A
HcwH;wXu	H
HcwX;whu	H
Hcwp;
HcwtL
Hc{ ;{0u	H
Hc{8H
Hc{8L
Hc}@;}Pu
Height Reflectivity
HelpSystem_001
HighPass
HostStateMgr001
I A+I
ID of the sound device to use
IMSVA
IMSVuMI
IPH9{H
IQuickTime001
IXMSE
Ic6A;void
Ic<$A;|$
Ic@ wchar_t
Ic@4w
IcHpH;
IcPXL
Icu`D
If set to 1, report all sounds stopped with S_StopSound().
If set to 1, report more error found when playing sounds.
If set to 1, show all incoming updates to vmix inputs.
IfE9d
IfG9|
Incorrect sampling rate in %short (mp3 frames are at %dHz, .vsnd file has %dHz)
Input %short: %.3f
Input %short: %long long
Input channels
Input file types
Input sample rate
Input sample width
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Intentionally vague touch behavior for %p
Invalid data for member '%short'
Invalid data.
Invalid field type %short for field %short
Invalid header
Invalid member name '%short'
InvokeMiniDumpHandler
Is Oneshot
J A2H 
J*A2H*
JDA2HD
JhA2Hh
K*2O*
K8H9)t7
KCLBH
KCRTH
KERNEL32.dll
KV Conditional Evaluation Error
KeyValueCache001
KeyValues Error: %short in file %short
KeyValues::ParseIncludedKeys: Couldn'unsigned short load included keyvalue file %short
KeyValuesSystem
L$ +t$pH
L$ E3
L$ Hc
L$ I+
L$ SUATAUAVH
L$ SVWH
L$ USVWAUAVAWH
L$ UVH
L$ UVWH
L$ VWAVH
L$ WH
L$ fI
L$";unsigned __int128
L$(H+
L$0H;L$H
L$0fD
L$0u	
L$8@2
L$8H+
L$8I+
L$8fD
L$:;{8u	H
L$:float;long long
L$@A+
L$@E;l$
L$@H1D$0
L$HLc
L$Hw%
L$PIc
L$PLc
L$Pu	H;
L$V;^
L$\fD;
L$`9O
L$`;O
L$`D;D$h
L$`E3
L$`u	
L$hF9
L97u:H
L9d$Pt
L9d$Xt
L9d$`unsigned short
L9d$ht
L9d$xt
L9e unsigned short	H
L9e(unsigned short	H
L9eHt	H
L9l$ unsigned short
L9l$Pt
L9l$`unsigned short
L9t$@unsigned short
L9ugt	H
L9x0ui
L9{Pu
L9|$ht
L9|$xt
LD$fB
LFO Type
LINUX
LK$H9=9
LOG Fade in
LOG fade out
LOG_GENERAL
LOWVIOLENCE
LX0E3
LayerTriggers
Lc;D;{
Lc@0E
Lc@HE
LcC$A;
LcCPH
LcH0E
LcKTHc
LcT$XE3
LcXHE
Lca(H
Lct$ L
Lct$0H
Lcu 3
Lcv8D;vHu
Lc{(D;{8u	H
LeaveCriticalSection
LightingBuilderMgr001
Line %double at "%short": %short
Line %double: %short
Line %double: Invalid value "%short"
Linear
List all available midi sequences
List all available samplers
List all available sequence arrangments
List all available soundevents
List all available soundevents using specified stack name
List all known sounds.
List all mix groups to dev console.
List all mix layers to dev console.
List all mixers to dev console.
LoadFromBuffer: expected '{', found '%short'
LoadLibraryA
LoadVMixList
Localize_001
LoggingSystem_AddTagToChannel
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_RegisterLoggingChannel
LowPass
Lowpass4Tap
M8HcF
MASK_WATER
MATCHFRAMEWORK_001
MDiskDataForResourceType
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MResourceTypeForInfoType
MResourceVersion
MSS_alloc_info
MSS_free_info
MXR_LoadAllSoundMixers
Main Output
MapListService_001
Match Entity Index: %int
Match Event Hash: %int
Match Event Name: %short
Match Event Type: %int
Match SubString ?: %short
MaterialUtils_001
MathLib_Init
Mc4$E;t$
McA<I
McF@M;
McFh3
McK@E
McS@E
Mcu`I
Medium
MeshSystem001
MeshUtils001
Minimum input block size
MixGroup %short:
MixGroup %short: %float : %float : %float : %float : %float 
MixGroups
MixLayer triggered %short:
MixLayers
MixLayers %short:
ModelDocCommandSystem001
Modulation Depth
Modulation Frequency
Music volume
N*2K*
NEW DSP NODE: size:(%.0f,%.0f) height:(%.0f) dif %.4f : refl %.4f : cobj: %.0f : sky %.0f 
NOTE OFF: %u : %float
NOTE ON: %u : %float : %short
NTROL
NULL m_pSfx
NavSystem001
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
Newline in string literal
No DirectSound driver installed
Num Match groups: %int
O$9X0
O*2K*
OPEN SIDED OUTDOOR AREA Detected 
OUTSIDE ALLEY Detected 
OUTSIDE COURTYARD Detected 
OUTSIDE STREET Detected 
Octaves shifted
Operator Error: Event %short: %short
Operator Field: %short
Operator Field: %short = 
Operator Index: %int
Operator Stack: %short
Output channels
Output file types
Output sample rate
Output sample width
O|2K|
O|2N|
P(Hc{
P(LcF
P(LcO
P8t'H
P@L9}
PARAM COUNT COMPARE FAIL: %short->%short
PARAMDATA COMPARE FAIL: %short->%short : %short
PARAMINFO COMPARE FAIL: %short->%short
PA]_^][
PA^A]A\_]
PA_A^A\_[
PA_A^A\_[H
PA_A^^
PA_A^_^]
POSIX
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
Parameters: mix group name, [vol, mute, solo], value
Parameters: mix group name, layer name, [vol, mute, solo], value, amount
Parameters: mix layer name, mix group name, trigger amount
Parameters: mixer name, mix amount
Parsing LayerTriggers:
Parsing MixGroups:
Parsing MixLayers:
Parsing SoundMixers:
ParticleSystemMgr002
Peak Amplitude
Performing fixup on '%short'
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Plain
Plain4Tap
Plat_DebugPrint
Plat_ExitProcess
Plat_FloatTime
Plat_GetComputerName
Plat_GetEnv
Plat_GetLocalTime
Plat_GetOSType
Plat_GetProcAddresses
Plat_IsHighDPI
Plat_IsInDebugSessionRaw
Plat_LoadCOM
Plat_LoadSDL
Plat_RelativeTicks
Plat_RequireCOM
Plat_RequireSDL
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_UUIDFromString
Plat_UUIDToString
Plat_VirtualAlloc
Plat_VirtualFree
Plat_WindowToOsSpecificHandle
Play signed char note from signed char specified sampler
Play signed char sound at signed char specified volume.
Play signed char sound.
PlaySoundA
Position
PostProcessingSystem_001
PresetDSP
Print the data associated with the specified soundevent.
Prints signed char list of currently available operators
Prints signed char list of currently available stacks
Prints signed char list of currently cached strings
Prints signed char master list of currently exposed variables
Prints the current stack execution list
Prints the current state of the groups system
Prints the current state of tool properties.
Prints the sizes of relevant sos classes.
ProcessSoundEvent:  %short unable to get referenced stack %s. Soundevent deleted and removed.
ProcessSoundEvent: %short field %short has more elements than stack %short has allocated and the field is not specified as soundevent_data. Element count constrained.
ProcessSoundEvent: %short field %short has signed char different number of atomic elements than the field data type. Skipping
ProcessSoundEvent: %short found field %short with "data_type" during conversion comparison, which is no longer supported. Please add "soundevent_data" to stack %short
ProcessSoundEvent: %short unable to find field name %short either in public or event data on stack %s.
ProcessSoundEvent: %short unable to get "base" sound event %short
ProcessSoundEvent: %short unable to get referenced stack %s. Soundevent deleted and removed.
ProcessSoundEvent: Sound Event %short field %short data count doesn'unsigned short match field type.
ProcessSoundEvent: Sound Event %short field %short illegal empty array detected.
PropertyEditorSystem_001
PurgeAndDeleteAll: Deleting orphaned CSoundEvent pointer for %short via shutdown
QPA8Q
QueryPerformanceCounter
Queue sound '%short'
Queue took %float msec to drain
Queued: elapsed time: %float, next sync time: %float, length: %float
QueuedLoaderVersion001
RESOURCE_TYPE_SOUND
RESOURCE_TYPE_SOUNDEVENTSCRIPT
RESOURCE_TYPE_SOUNDSTACKSCRIPT
RESOURCE_TYPE_VMIX_LIST
RIB_find_files_provider
RIB_free_provider_library
RIB_request_interface
ROOM Detected 
RXMSE
Random
Random Modulation
RandomFloat
RandomInt
Rate:		%double
RecursiveLoadFromBuffer:  got EOF instead of keyname
RecursiveLoadFromBuffer:  got NULL key
RecursiveLoadFromBuffer:  got conditional between key and value
RecursiveLoadFromBuffer:  got empty keyname
RecursiveLoadFromBuffer:  got } in key
RecursiveLoadFromBuffer:  recursion overflow
Reference dB at snd_refdist
Reference distance for snd_refdb
RegisterConfigValue: Unknown error constructing config value "%short"!
RegisterStringToken
Release
Release time (ms)
Reload soundmixers.txt file.
Remove all soundevents
Remove the specified soundevent
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
Resolve the inputs and execute one specified operator from signed char specified stack
Resource %short
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
Retry launching after completion.
Reverb Depth ms
Reverb Height ms
Reverb Width ms
RtlUnwindEx
SATAUAWH
SATAUH
SAVAWH
SDL Audio
SDL Audio Device
SDNSH
SEQUNCER ERROR: Loading samplers file(error %short)!
SEQUNCER ERROR: Loading sequences file(error %short)!
SOS PRINT FLOAT3: %short: %float, %float, %float
SOS PRINT FLOAT: %short: %float
SOS PRINT STRING: %short: %short
SOS_EDIT_ITEM_TYPE_FIELD
SOS_EDIT_ITEM_TYPE_LIBRARYSTACKS
SOS_EDIT_ITEM_TYPE_OPERATOR
SOS_EDIT_ITEM_TYPE_SOUNDEVENT
SOS_EDIT_ITEM_TYPE_SOUNDEVENTS
SOS_EDIT_ITEM_TYPE_STACK
SOUNDEVENT COMPARE SUCCESS: %short->%short
SPRGH
SPSVA
SPSVu6H
SSE and SSE2 are required.
STACK COMPARE FAIL: %short->%short
SUATAUH
SUATAWH
SUAVH
SUVATAVH
SUVWATAUAVAWH
SUVWATAVAWH
SUVWATH
SUVWAVAWH
SVATH
SVAUH
SVAVH
SVWATH
SVWAUH
SVWAVH
SWATAVAWH
S_ClearBuffer: DS: couldn'unsigned short restore buffer
S_ClearBuffer: DS::Lock Sound Buffer Failed
S_FindName
S_FindName: NULL name
S_Init( finish )
S_StartSound
S_StartSound: %short Stopped.
S_StartSound: Failed to load sound '%short', file probably missing from disk/repository
S_StopChannelUnlocked
S_UpdateVoicesPerFrame
Sampling rate error on %s. Header: %double, mp3: %double
ScaleformUI001
SceneSystem_002
SceneUtils_001
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
SelectedEditItemInfo_t
ServerUploadGameStats001
Set an input mix value
Set coop level failed
Set input %short to %short on graph %short
Set named Mixgroup of current mixer to mix vol, mute, solo.
Set named Mixgroup of named mix layer to mix vol, mute, solo.
Set named mix layer / mix group, trigger amount.
Set named mix layer mix amount.
SetDataFromKV3: Unrecognized KV3 type on field %s.
Sets the tempo of the specified track
Sets the transposition of the specified track
Setting MixLayer %short
Setting MixLayer %short : mix %float
Setting Mixer %short: MixGroup %short: %short : %float
Show async memory stats
Show async memory stats for just non-streamed music
Show brief async memory stats
Show sounds location in world
Size in bytes
SndOperators
SndToolHelp
SosBaseDataTypeDef_t: %int
SosEditItemInfo_t
SosEditItemType_t
SosOpFieldInfo_t: %int
SosOpFieldInfo_t::GetValue: index %int out of range on %short
SosOpFieldInfo_t::SetValue: index %int out of range on %short
SosOpFieldInfo_t::ValueToString: Unable to find ENUM match for %int on %short
SosOpFieldInfo_t::ValueToString: Unable to find ENUM tokenset on %short
Sound
Sound DSP: Failed to lock.
Sound DSP: preset failed to init.
Sound Disabled
Sound Disabled.
Sound Initialization: Finish, Sampling Rate: %int
Sound merge method (0 == sum and clip, 1 == max, 2 == avg).
Sound system not started
Sound volume
SoundEvent %short, input_entity_index %int was valid but no longer is
SoundEvent_error
SoundMixer %short:
SoundMixers
SoundOpSystem001
SoundOpSystemEdit001
SoundOperatorSystem
SoundService_001
SoundStack %short unable to find imported stack %short
SoundSystem
SoundSystem001
Soundevent param overwrites: %short:
Soundlog file %short is read-only!!
SoundsystemVMixLoader
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2SDLDefaultDevice
Source2Server001
Source2ServerSerializers002
Specifies the exponent for the pan xfade from phone to phone if the "exp" pan law is being used.
Specifies the exponent for the pan xfade from speaker to speaker if the "exp" pan law is being used.
Specifies the position  (in degrees) of the virtual rear left/right headphones.
Specifies the position (in degrees) of the virtual front left/right headphones.
Specifies the position (in degrees) of the virtual front left/right speakers.
Specifies the position (in degrees) of the virtual rear left/right speakers.
Spew data about the list of block entries.
Spew message to console any time async sound loading blocks on file int/o.
Spew stream pool failures.
Spew streaming info ( 0=Off, 1=streams, 2=buffers
Square Wave
Stack %short: Unable to connect input to specified field: %short
Stack Collection:
Stack Execution List:
Stack Shutdown: Stack: %short : Operator: %short
Stack execution list overflow!
Stack: %short
Start the specified sequence
StartTime: %float
Starting verification of Steam Game Cache.
Starts signed char specified soundevent
StatsService_001
Stop signed char note from signed char specified sampler
StopTime: %float
Stopping All Sounds...
Stopping sound.
Stopping: Channel:%2d %short
Stops all soundevents currently on the execution list
Stops signed char specified soundevent
Stops the specified track
String Count: %int
Sustain target amplitude
Sustain time (ms)
Sync Track: %short
T$ ;{
T$ E3
T$"fD
T$(Hc
T$(fI
T$0;S void
T$0A;
T$0E3
T$0Hi
T$0Hk
T$0fD
T$4fD
T$8+G$A
T$8+G$H
T$;H+
T$@+G$A
T$@Lc
T$HE3
T$HH;
T$PE3
T$PHc
T$PLc
T$`Lc
T$p;unsigned __int128(|
T$pD8
T$pfD
TUNNEL Detected 
TVESH
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
Thawte Certification1
Thawte Timestamping CA0
Thawte1
The soundsystem requires the filesystem to run!
ThreadInterlockedExchange64
ThreadSleep
Threshold dB
Timed ?: %short
TlsGetValue
TlsSetValue
Tokenset: %p
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
ToolsStartupPreGame
Total Size: %int
Total Stack Fields mem: %int
Total Stack Fields: %int
Total Stack Pool unsigned long long double::*: %int
Total Stack Ref Fields: %int
Total Stack unsigned long long double::* Usage(ish): %int : %ik
Total Stacks: %int
Total USED Stack Fields mem: %int
Total USED Stack Fields: %int
Total USED Stack Pool unsigned long long double::*: %int
Total USED Stack Ref Fields: %int
Total USED Stack unsigned long long double::* Usage(ish): %int : %ik
Total USED Stacks: %int
Total long long int::* Groups Rules: %int
Total long long int::* Layers: %int
Total: %.2f MB
Triangle
Type Name: %short
TypeManager
U8HcF
UATAUAVAW
UATAUAVAWH
UATAUAVAWI
UAVAW
UAVAWH
UPDATE_STRING_TOKEN_DATABASE
USATAUI
USATAVAWH
USATAWH
USAVH
USVAWH
USVWATAUAVAWH
USVWATAVAWH
USVWATAVH
USVWATH
USVWAUAVAWH
USVWAUH
USWATAVAWH
USWAUAVH
USWAUH
UUUUUUUUL
UVATAUH
UVAUAVAWH
UVAUAWH
UVAVH
UVAWH
UVWATAUAVAWH
UVWATAVH
UVWAUAVH
UVWAVAWH
UWATAUAVH
UWATAVAWH
UWATAWH
UWATH
UWAVAWH
UWAWI
Unable to detect XAudio2 devices
Unable to find soundevent: %short
Unable to load sound system data.
Unexpected end of file
Unknown
Unknown field type %short for field %short
Unknown track name %short, will not play voice %short
Unrecognized flag name '%short'
Unrecognized type '%double'
Unserialization Error: %short
Unsupported text encoding id.
Unsupported version %double for resource '%short' (Expected %double)
Update SoundEvent: %short
UpdateSoundEvents: event with empty name
Usage:  playdelay delay_in_msec (negative to skip ahead) soundname
Usage:  snd_compare_soundevents soundevent1 soundevent2
Usage:  snd_print_soundevent <soundeventname>
Usage:  snd_remove_soundevent <soundeventname>
Usage:  snd_sos_get_operator_field <stackname> <operator> <field>
Usage:  snd_sos_print_exec_list
Usage:  snd_sos_print_operator_stack <stackname>
Usage:  snd_sos_resolve_execute_operator <stackname> <operator>
Usage:  snd_sos_set_operator_field <stackname> <operator> <field> <index> <float>
Usage:  snd_sos_start_soundevent <eventname>
Usage:  snd_sos_stop_soundevent_guid <guid>
Usage:  snd_sos_stop_soundevent_index <index>
Usage: movie_fixwave wavname
Used stack: %short
UserInfoChangeService_001
V8t H
V8t"H
VATAWH
VAUAWH
VAVAWH
VApplication001
VAudioInit (MSS)-finish
VAudioInit (MSS)-start
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VERTICAL SHAFT Detected 
VE]*+
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VHc/A
VLVSH
VMDLLIB001
VMIX: Unknown filter type for DSP:%short
VMIX: Unknown processor type %short (name %short)
VMaterialSystem2_001
VMediaFoundation001
VMixEditTool001
VMixStartup
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VSNDVEC COMPARE FAIL: %short->%short
VSNDVEC COMPARE SIZE FAIL: %short->%short
VScript
VScriptDbg
VScriptManager010
VSoundEventScript_t
VSoundEvent_t
VSoundStackScript_t
VSoundStack_t
VStringTokenSystem001
VUUUH
VWATAVAWH
VWAVH
VWAWH
V_FixDoubleSlashes
V_FixSlashes
V_GetErrno
V_GetFileExtension
V_ParseToken
V_SetErrno
V_TokenWaiting
V_UTF16ToUTF8
V_UTF8ToUTF16
V_acosf
V_asinf
V_atan2
V_atan2f
V_atanf
V_atod
V_atof
V_atoi
V_atoi64
V_atoui64
V_cos
V_cosf
V_coshf
V_expf
V_fmodf
V_log
V_log10f
V_logf
V_powf
V_pretifymem
V_qsort
V_qsort_s
V_sinf
V_sinhf
V_snprintf
V_sscanf
V_stricmp_fast
V_strlower_fast
V_strtod
V_strtoi64
V_strtok
V_strtoui64
V_tan
V_tanf
V_tanhf
V_vsnprintf
V_vsnprintfRet
V_vsnprintfSize
Value Operator Offset: %int
Value Stack Offset: %int
Vector2D
VeryHigh
VisBuilder_001
Voice overflow, voice count == MAX_CHANNELS
Voice volume
Volume of sounds in tools (e.g. Hammer, SFM)
WARNING: Attempting to import existing public field %short in stack %short
WARNING: Attempting to set fields on signed char stopped sound
WARNING: Could not find schema data for helper class for resource type %lld '%short'. (Missing MDiskDataForResourceType metadata or schema data isn'unsigned short loaded?)
WARNING: Invalid vsnd version '%double' for file: %short
WARNING: Missing data block for file: %short
WARNING: Missing introspection manifest for file: %short
WARNING: Multiple classes registered as disk data for resource type %lld '%short'. (Should only have one class MDiskDataForResourceType - %double listed above.)
WARNING: Problems encounted with external references in resource '%short'. See above for reason(short)
WATAUAVAWH
WAVAW
WAVAWH
WIN32
WINDOWS
WINMM.dll
WINXP
Wait: elapsed time: %float, next sync time: %float, local elapsed: %float, local sync: %float, length: %float, num loops: %int
Warning
Warning:  %short = '%short' is infinite, clamping value.
Warning: %short (error %short)!
Warning: Can'unsigned short find sos strings file: %short!
Warning: Failed to get mix layer %short!
Warning: Unable to acquire convar value: %short
Warning: Unable to set convar value: %short
Warning: cannot sync to soundevent %short on track %short, because it has no start/end points defined
Warning: sos_start_soundevent unable to read opvar %short for passing from event %short
Warning: track_queue: No track name specified on %short, playing without track features
WaveFixupTmpFile( '%short' ) failed to open file for editing
Western Cape1
Width Reflectivity
Windows DirectSound
Won'unsigned short age handle!
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
XA^A]_^][
XA_A\][
XA_A]][
XAudio2 Device
XAudio2 Sound Device: %short
XAudio2 failed to initialize
XAudio2_7.dll
XB r!
XIMSE
Xaudio2 Error %long long
Xaudio2 Voice Error %long long
YL$(D
[%short] %short : src %double : channel %double : %double dB : vol %.2f : time %.3f
[Disk class %double/%double] Name = '%short'; Project = '%short'; Binary = '%short'
[Sound] %short("%short") called. %short
\$ Hc
\$ UAVAWH
\$ UH
\$ UVWAVM
\$ UVWH
\$ VH
\$ WH
\$ unsigned short-H
\$(E2
\$(E3
\$,D;float
\$09-
\$0D;
\$0Hc
\$0Hk
\$0I;
\$0fD
\$0t 
\$0u)H
\$8;>
\$8Hc
\$@A^_^]
\$@Hc
\$@float;
\$@unsigned short 
\$HE3
\$PE3
\$VIc
\$`Hc
\$`Hk
\$`Ic
\$`fD
\$`unsigned short 
\$hA+
\$pHc
\Hc^(;^8u
\McS@E
\\fileserver\User\Morasky\L4Dsoundlogs\%s_%short
\fileserver\User\Morasky\L4Dsoundlogs\
\unsigned short* 
]8Hc~
]8LcN
]P;u@u
_ u!H
_V_DefaultExtension
_V_ExtractFileExtension
_V_SetExtension
_V_StripExtension
_V_strncat
_V_strncpy
_V_strnicmp_fast
_V_wcsncpy_bytes
__UNKNOWN__
__float128 A9W
_editor_
_field_properties
_fixed
_operator_properties
_stack_properties
_system_properties
`.rdata
`?fff?
`A\_^[]
`A]A\[
`A]^[
`A^A\^][
`A_A\^
`A_A^A\_^][
accumulate_indexed_speakers
actions
adsp_alley_min
adsp_courtyard_min
adsp_debug
adsp_door_height
adsp_duct_min
adsp_hall_min
adsp_low_ceiling
adsp_opencourtyard_min
adsp_openspace_min
adsp_openstreet_min
adsp_openwall_min
adsp_room_min
adsp_street_min
adsp_tunnel_min
adsp_wall_height
advanced
anim_type
apply
arrangement_start
array_selection_type
attachment
attack
attackTime
auto_connect_public_fields
backward
bandwidth
base_operator
block_equal_priority
branch_entindex
branch_eventtype
branch_soundevent
calc_angles_facing
calc_audibility
calc_closest_point_on_line
calc_distance
calc_distant_dsp
calc_falloff
calc_falloff_curve
calc_falloff_vr
calc_occlusion_src1
calc_occlusion_src2
calc_segment
calc_spatialize_VR
calc_spatialize_speakers
center
channels
char:\buildslave\destinations_staging_win64\build\src\interfaces\interfaces.cpp
char:\buildslave\destinations_staging_win64\build\src\kv3lib\keyvalues3.cpp
char:\buildslave\destinations_staging_win64\build\src\mathlib\mathlib_base.cpp
char:\buildslave\destinations_staging_win64\build\src\public\resourcefile\introspectedtypemanager.h
char:\buildslave\destinations_staging_win64\build\src\public\resourcefile\resourcestream.h
char:\buildslave\destinations_staging_win64\build\src\public\tier0\tslist.h
char:\buildslave\destinations_staging_win64\build\src\public\tier1\utlleanvector.h
char:\buildslave\destinations_staging_win64\build\src\public\tier1\utllinkedlist.h
char:\buildslave\destinations_staging_win64\build\src\resourcefile\introspectedtypemanager.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\Retail\win64\soundsystem.pdb
char:\buildslave\destinations_staging_win64\build\src\soundsystem\mp3_miles.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_dma.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_mixgroups.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_op_sys\sos_system.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_op_sys\sos_vmidi_samplers.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_op_sys\sos_vmidi_sequencer.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\snd_wave_mixer_mp3.cpp
char:\buildslave\destinations_staging_win64\build\src\soundsystem\vmix.cpp
char:\buildslave\destinations_staging_win64\build\src\tier1\configvalue.cpp
char:\buildslave\destinations_staging_win64\build\src\tier1\mempool.cpp
char:\buildslave\destinations_staging_win64\build\src\tier1\utlbuffer.cpp
char:\buildslave\destinations_staging_win64\build\src\tier1\utlmemoryarena.cpp
char:\buildslave\destinations_staging_win64\build\src\tier1\utlstring.cpp
check_event_data
circle
circle_bounce
clamp_range
command
construction_stack
convar
convar_get
convar_set
core.voip
core_update_default
count
cplayervoice
crossfade ms
ctrl_switch12_float
ctrl_switch3_float
ctrl_switch3_float3
ctrl_switch_float
ctrl_switch_float3
curve_type
d$ D+
d$ E3
d$ fC
d$0E+
d$0E3
d$HE3
d$Hff
d$PE3
d$XE+
d$XE3
d$`E3
d$`E;
d$hE2
d$hE3
d$ht	H
d$xMc
dBCompressionThreshold
dBKneeWidth
dBLimiterGain
dBLimiterThreshold
dBNoiseGateThreshold
data_type
dbGain
db_min
db_mixdrop
debug.solo
default
default_to_max
delay count
denominator
display_category
display_game
display_group
distance
dota2
dota_ground_under_water
double unsigned __int128::* Depth
double unsigned __int128::* Frequency
double unsigned __int128::* Glide (ms)
double unsigned __int128::* Glide Time
double unsigned __int128::* Rate
double unsigned __int128::* Rate (Hz)
double unsigned __int128::* rate
dsound.dll
dsp: %.2f 
dsp_automatic
dsp_db_min
dsp_db_mixdrop
dsp_dist_max
dsp_dist_min
dsp_mix_max
dsp_mix_min
dsp_off
dsp_presets
dsp_vol_2ch
dsp_vol_4ch
dsp_vol_5ch
dsp_volume
duration
econ_replacement
effectname
encoding
end_beat
enum_field
equal
error
event_name
event_type
events
execute_once
exit_if_blocked
f3D$@float#
fA;_,sif
fD9I(u	
fD9l$r
fD9tB u
fE94(unsigned short/E
fE;Z$|
fE;Z$}
fF;|!
facing
false
fff?fff?
ffffff
field
field_override
filter
float
float2
float3
float4
float6
float8
float;A"short
float;o$|&
float_max_speakers
floor
force_direction
format
forward
frequency
function
g_VProfCurrentProfile
g_mastermixlayer:
g_pCurrentFiberTL
g_pMemAlloc
g_pScheduledFunctions
game_entity_info
game_get_point_contents
game_get_source_info
generic
get_system_globals
global
graphName
greater_than
greater_than_or_equal
groups
hA_A]][
hA_A^A\_[]
hA_A^_^][
hHc1H
import_public_opvars
import_stack
index
index %int = %int guid : %int dependents 
input
input %short received updated value from processor %double (%long long)
input0
input1
input10
input11
input12
input2
input3
input4
input5
input6
input7
input8
input9
inputName
inputSubmix0
inputSubmix1
inputValue0
inputValue1
input_
input_0
input_1
input_2
input_X1
input_X2
input_X3
input_X4
input_Y1
input_Y2
input_Y3
input_Y4
input_active
input_add_dependent
input_angles
input_animation_pct
input_arrangement
input_atten
input_center_position
input_channel
input_class_name
input_clear_dependencies
input_clear_selection
input_count
input_curve_amount
input_data1
input_data2
input_default_local_position
input_default_world_position
input_delay
input_distance
input_distance_max
input_distance_min
input_distance_scalar
input_distant_exp
input_distant_max
input_distant_min
input_doppler_factor
input_doppler_observer_scale
input_duration
input_end_value
input_entity_index
input_entry_count
input_event_guid
input_event_type
input_execute
input_fade_out
input_field_name
input_float3_center
input_float3_end
input_float3_start
input_folliage_loss
input_force_end_value
input_force_start_value
input_get_parent
input_global_forward
input_goto_end
input_goto_head
input_goto_operator
input_group_name
input_index
input_interval
input_is_player
input_level
input_line_end
input_line_start
input_listener_forward
input_listener_index
input_listener_left
input_listener_position
input_listener_up
input_map_max
input_map_min
input_master_volume
input_max
input_max_events
input_max_loop_count
input_max_velocity
input_memory_type
input_min
input_mixgroups
input_name
input_near_max
input_near_min
input_observer_position
input_operator_name
input_pause
input_pitch
input_pos
input_position
input_position1
input_position2
input_position_0
input_position_1
input_position_2
input_position_3
input_position_4
input_position_5
input_position_6
input_position_7
input_priority
input_quantize
input_radius
input_radius_max
input_radius_min
input_rand_max
input_rand_min
input_rear_stereo_scale
input_restart_time
input_rotation_angle
input_sampler
input_scalar
input_size
input_soundlevel
input_source_position
input_spawn_oneshots
input_speaker_volumes
input_spread_max
input_spread_max_value
input_spread_min
input_spread_min_value
input_stack_name
input_start
input_start1
input_start2
input_start3
input_start4
input_start5
input_start6
input_start7
input_start8
input_start_value
input_stop
input_switch
input_switch_offset
input_sync_field_name
input_sync_track_name
input_tail_max
input_tail_min
input_trace_interval
input_track1
input_track2
input_track3
input_track4
input_track5
input_track6
input_track7
input_track8
input_track_name
input_trigger
input_update_opvar_args
input_use_namespace
input_use_parent_seed
input_vsnd
input_vsnd1
input_vsnd2
input_vsnd3
input_vsnd4
input_vsnd5
input_vsnd6
input_vsnd7
input_vsnd8
input_x
input_y
input_z
instrument
invalid stack
invalid_bone
invalid_hitbox
invalid_vsnd
invert
invert_match
invert_scale
itemKVString
itemName
itemPos
itemType
itemTypeName
j0t	H
key_groups
l$ 9Q
l$ AVH
l$ D9l$0|LH
l$ LcI
l$ VAV
l$ VAVAWH
l$ VH
l$ VWATAUAWH
l$ VWATH
l$ VWAWH
l$ WATAWH
l$ WH
l$(E3
l$(Hcl$HH
l$0A+
l$0A^^
l$0E3
l$0Hc
l$0Hi
l$0I;
l$0Ic
l$0f;
l$2fD
l$8;{hu	H
l$8@8
l$8Hc
l$8HcG
l$8fA;
l$8fE;
l$@9)
l$@E3
l$@u!L
l$HfA
l$Pt8
l$`E3
l$`Hc
l$`Lc
l$hE3
l$hHc_HL
left_front
left_rear
left_up
length
lerp_bounce
less_than
less_than_or_equal
level
limit
limiterRatio
linear
localPlayer
locked
log10
long double _^]
long long	HcK
long long	HcQ
long long	IcI
long long ATAVAWH
long long AVH
long long UATAUAVAWH
long long int::* (1.0 = wet)
long long!;A0}
long long";A0}
long long'A;C`}!Hc
long long'HcK
long long);A0}$H
long long+HcI
long long+HcK
long long,IcB
long long/;A0}*H
long long:;A0}5H
long long;-0\
long long;5d3
long long@;C0};H
long long[;\$ }UH
long long`HcB
lvl: %.2f 
m_EditItems
m_EditorPreview
m_GameData
m_MixCommands
m_OperatorsKV
m_PreviewInputs
m_PreviewTweak
m_Processors
m_SoundEvents
m_SoundName
m_SoundStacks
m_StackKV
m_StackName
m_Submixes
m_controlInputs
m_controlPoints
m_curves
m_nGraphOutputChannels
m_nameInputs
m_pStream
m_values
make_vertical
mask_type
match_all
match_duration_type
match_entity
match_event_duration
match_event_name
match_event_type
match_rules
match_soundevent_substring
match_substring
match_this_event
math_accumulate12_float
math_animate_float3
math_average8_float
math_calc_doppler
math_calc_fixed_rotation
math_clamp_float
math_curve_2d_4knot
math_db_to_gain
math_delta
math_filter_float
math_float
math_float3
math_func_float
math_gain_to_db
math_inrange_float
math_perlin_noise
math_random_float
math_random_float3
math_randomize_float
math_remap_float
math_right_angle_float3
math_speakers
math_string
math_velocity
max_note
max_output
max_soundevents
max_velocity_db
measures
min_note
min_output
min_velocity_db
mixDownRule
mix_input
mix_max
mix_min
mixgroup
mixlayer
movie_fixwave
movie_fixwave: File '%short' does not exist
ms Delay
ms Delay (tap 1)
ms Delay (tap 2)
ms Delay (tap 3)
ms delay max
ms delay min
ms of mod depth
mss64.dll
music
mute: %.2f
nOffset < m_nAllocationSize
nT$Xf
nTries < 10000000
named
no stack mem
noise_type
normalize_spread
normalize_trig
not_equal
note out of sampler range
nullfield
numerator
oD$ H
oD$ fH
oD$0L
oL$@A
oL$xA
oO0fI
occlusion_db_loss
operator
operator_arg_field
operator_field_display
operator_field_display_bool
operator_field_display_decibel
operator_field_display_decibel_level
operator_field_display_distance
operator_field_display_entity_index
operator_field_display_event_type
operator_field_display_float
operator_field_display_float_atten
operator_field_display_float_positive
operator_field_display_int
operator_field_display_none
operator_field_display_token
operator_field_display_vsnd
operator_override
operator_stacks
operator_variables
opvar_get_float
opvar_get_float3
opvar_get_info
opvar_get_random_array_index
opvar_get_string
opvar_get_vsnd
opvar_increment_float
opvar_set_float
opvar_set_float3
opvar_set_string
out of voice sources, won'unsigned short lipsync %short
output
outputSubmix
output_
output_0
output_1
output_2
output_above
output_angles
output_below
output_dependencies
output_dsp
output_duration
output_elapsed_time
output_element_count
output_ent_dormant
output_entity_classname
output_entity_index
output_entity_is_player
output_event_finished
output_events_matching
output_float
output_goto_count
output_host_elapsed_time
output_id_deleted
output_interval_elapsed
output_interval_not_elapsed
output_is_blocked
output_is_selected_by_local_player
output_last_note
output_level
output_listener_count
output_listener_forward
output_listener_front
output_listener_is_underwater
output_listener_left
output_listener_position
output_listener_up
output_max_index
output_mixgroups
output_opvar_elements
output_opvar_exists
output_pos
output_position
output_position_x
output_position_y
output_position_z
output_rear
output_snd_gain_convar
output_snd_gamesound_convar
output_snd_gamevoice_convar
output_snd_musicvolume_convar
output_snd_voip_convar
output_stop_elapsed_time
output_stopped
output_success
output_time_to_next_syncpoint
output_time_to_start
output_unstopped
output_velocity
output_velocity_vector
output_velocity_vector_x
output_velocity_vector_y
output_velocity_vector_z
output_velocity_xy
output_vgraph_finished
output_vgraph_playing
output_volume
output_vsnd_finished
output_vsnd_looping
output_vsnd_playing
pA^^[
pA_A^A]_^[]
pA_A^[
parallel filters
paramName
parameter
params
pass_opvar_args
perlin
playback_type
playvol
preload_vsnds
preview.editor
preview.editor.000
preview.editor.001
priority_override
processor
processor.setparameter
processor_type
processors
public
public.
public.%short
public.attack
public.end_point
public.pitch
public.release
public.sample
public.start_point
public.volume
purecall
qCAudioDirectSound2::SNDDMA_InitInterleaved
qN8gu
r#@8}
r+float;o$}%
r@33333su@
random
random_exclusive
random_weighted
ratio
reference_operator
reference_stack
release
releaseTime
reserve_array
resource
resourcesystem
right_down
right_front
right_rear
rmsTime
round
round_to_int
sH9S8~
sampler_event
scripts/arrangements.kv3
scripts/samplers.kv3
scripts/sequences.kv3
scripts/soundmixers.txt
send%double
sendOperator
send_type
sequence
sequence_index
sequence_name
sequencer_start
slerp
slerp_bounce
snd_async_flush
snd_async_showmem
snd_async_showmem_music
snd_async_showmem_summary
snd_async_spew_blocking
snd_async_stream_fail
snd_async_stream_spew
snd_autodetect_latency
snd_compare_KV_convert
snd_compare_soundevents
snd_delay_sound_shift
snd_disable_mixer_duck
snd_disable_mixer_solo
snd_duckerattacktime
snd_duckerreleasetime
snd_duckerthreshold
snd_ducktovolume
snd_dump_filepaths
snd_dump_filepaths: Wrote %short
snd_envelope_rate
snd_filter
snd_front_headphone_position
snd_front_stereo_speaker_position
snd_front_surround_speaker_position
snd_gain
snd_gain_max
snd_gain_min
snd_gamevoicevolume
snd_gamevolume
snd_getmixer
snd_headphone_pan_exponent
snd_headphone_pan_radial_weight
snd_list
snd_list_soundevents
snd_list_soundevents_by_stack
snd_max_same_sounds
snd_max_same_weapon_sounds
snd_mergemethod
snd_mix_async
snd_mix_minframetime
snd_mixahead
snd_mixer_master_dsp
snd_mixer_master_level
snd_musicvolume
snd_mute_losefocus
snd_occlusion_debug
snd_op_test_convar
snd_print_arrangements
snd_print_samplers
snd_print_sequences
snd_print_soundevent
snd_print_soundevent %short
snd_rear_headphone_position
snd_rear_stereo_speaker_position
snd_rear_surround_speaker_position
snd_refdb
snd_refdist
snd_remove_all_soundevents
snd_remove_soundevent
snd_report_stop_sound
snd_report_verbose_error
snd_samplers_play_note
snd_samplers_stop_note
snd_sequence_set_track_bpm
snd_sequence_set_track_transpose
snd_sequence_start
snd_sequence_stop_track
snd_sequencer_show_events
snd_sequencer_show_quantize_queue
snd_sequencer_start <sequence> [<track>] [<sampler>] [<quantize value>] [<quantize type>] [<seek>] [<synctrack>] 
snd_setmixer
snd_setmixlayer
snd_showclassname
snd_showstart
snd_sos_default_update_stack
snd_sos_flush_operators
snd_sos_get_operator_field_info
snd_sos_list_operator_updates
snd_sos_opvar_debug
snd_sos_print_class_sizes
snd_sos_print_field_references
snd_sos_print_full_field_info
snd_sos_print_groups
snd_sos_print_operator_stack
snd_sos_print_operators
snd_sos_print_stack_exec_list
snd_sos_print_stack_list
snd_sos_print_strings
snd_sos_print_tool_properties
snd_sos_resolve_execute_operator
snd_sos_set_operator_field
snd_sos_set_operator_field_by_guid
snd_sos_show_block_debug
snd_sos_show_client_rcv
snd_sos_show_entry_match_free
snd_sos_show_groups_debug
snd_sos_show_groups_match_free
snd_sos_show_operator_event_and_stack
snd_sos_show_operator_event_filter
snd_sos_show_operator_field_filter
snd_sos_show_operator_init
snd_sos_show_operator_not_executing
snd_sos_show_operator_operator_filter
snd_sos_show_operator_parse
snd_sos_show_operator_pause_entry
snd_sos_show_operator_prestart
snd_sos_show_operator_shutdown
snd_sos_show_operator_start
snd_sos_show_operator_stop_entry
snd_sos_show_operator_updates
snd_sos_show_queuetotrack
snd_sos_show_soundevent_param_overwrite
snd_sos_show_track_list
snd_sos_soundevent_filter
snd_sos_start_soundevent
snd_sos_stop_all_soundevents
snd_sos_stop_soundevent_guid
snd_sos_stop_soundevent_index
snd_sos_test_soundmessage
snd_sos_use_case_sensitive_soundevents
snd_soundmixer
snd_soundmixer_flush
snd_soundmixer_list_mix_groups
snd_soundmixer_list_mix_layers
snd_soundmixer_list_mixers
snd_soundmixer_set_trigger_factor
snd_soundmixer_setmixlayer_amount
snd_soundmixer_version
snd_stereo_speaker_pan_exponent
snd_stereo_speaker_pan_radial_weight
snd_store_filepaths
snd_surround_speaker_pan_exponent
snd_surround_speaker_pan_radial_weight
snd_toolvolume
snd_visualize
snd_vmix_show_input_updates
snd_voipvolume
sndplaydelay
solo: %.2f 
soloname
sos_goto
sos_import_stack
sound
sound/
sound_device_override
soundevent
soundevent_block
soundevent_block_test
soundevent_control
soundevent_data
soundevent_get_info
soundevent_groups
soundevent_limiter
soundevent_name
soundevent_pause
soundevent_set_info
soundevent_start
soundevents/soundevents_manifest.vrman
soundevents/soundevents_manifest_tools.vrman
soundinfo
soundlist
soundlog_%i_%i_%i_%i_%02i.txt
soundmixer_get_mixgroup
soundmixer_set_mixlayer
soundmixer_set_mixlayer_amount
soundmixer_set_trigger
sounds
sounds/
sounds/%s_%llu.vsnd
sounds/%short
sounds\
soundstacks/mixgraph.vmix
soundstacks/sosgroups.txt
soundstacks/sosstrings.txt
soundstacks/soundstacks_manifest.vrman
soundsystem
soundsystem.dll
sparse_convolution
spawn_orphans
speaker_config
start
stop_oldest
stopped_includes_dependencies
stopsound
string
string_token
strings
submix_name
sync_track
t$ ;C ~
t$ @2
t$ ATAVAWH
t$ AVH
t$ AWH
t$ Hc
t$ UWAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(E3
t$(fD
t$0E3
t$0H;
t$0Hc
t$0Hc1D
t$0Hc2
t$0Hc7
t$0HcK
t$0Hcs ;s0u	H
t$0Hk
t$0M;
t$0fD
t$4E3
t$8E3
t$8H9w(unsigned short	H
t$8Hc
t$8fD;
t$8~0H
t$@D9t$h
t$@E+
t$@E2
t$@E3
t$@Hc
t$@Hi
t$@Lc
t$@fD
t$@fE;
t$D8@ unsigned short
t$HE3
t$HLc
t$HcA
t$Hfff
t$LE3
t$LfD
t$McJh3
t$PE3
t$PH;D$h
t$PHc
t$PLc
t$PfD
t$Pt 
t$XHcD$HL
t$XLc
t$Xt	H
t$`D8
t$`E3
t$`fA
t$`float;
t$pA;_
t$pIc6
t.@8+unsigned short)
t.@88t)
t.@8>unsigned short)
t0@8(unsigned short)@8hXt
t1HcCdHcKTH+
t1HcS8
t7@8(unsigned short/@8
t7HcC$HcK
t88\$0u
tEHc}
tT;H,uOH
tTLc&
tVD8(tQ
tXfff
taD9A
taLc3f
taLc;
tcH9_
td@80t_
td@80t_H
teA9z
tier0.dll
time slice ms
to+K$3
total preset slots used: %double 
track
track_name
track_queue
track_stop
tracks
u)D9I0u
u,HcO<I
u.fE;
u3fD;
u6LcH
u8H9u
u98D$`u;H
u9Hc
uAHc{
uDHcE
uKHcN
uR8KTt
uT<0uP
uVHc;A
uVL9q
uZLcK
ueHcA
ugLcC 3
uint32
uint64
unknown
unknown error
unsigned short	H9(
unsigned short @82t
unsigned short HcK
unsigned short!@8+unsigned short
unsigned short!HcS
unsigned short!fD;
unsigned short"D8 unsigned short
unsigned short"HcI
unsigned short#LcC
unsigned short'fE;
unsigned short(HcC$HcK
unsigned short)Lc[hE3
unsigned short*@80t%
unsigned short*HcP`3
unsigned short*Lc@`3
unsigned short+HcC$LcC
unsigned short/HcC$HcK
unsigned short?Hc{8;{Hu
unsigned short]Lc3
update_stack
use_world_position
util_draw_radius
util_elements_float3
util_float_to_speakers
util_interval_timer
util_null
util_pack_float3
util_pos_vec8
util_print_float
util_print_float3
util_print_string
util_print_vsnd
util_timer
util_timer_ramp
v8A;t$
value
velocity_zones
version
vgraph_name
vmixH
vmixL
vmix_mixgraph_input
vmix_mixgraph_send
vmix_start_vmix_8track has empty vsnd string
vmix_start_vsnd: %short Voice count >= MAX_VOICES, aborting starting vsnd %short
vmix_voicegraph_input
vmix_voicegraph_start_8track
vmix_vsnd_info
vmix_vsnd_start
vmix_vsnd_start has empty vsnd string
voiceList
voice_fadeouttime
voice_loopback
voice_minimum_gain
voice_scale
voice_steal
voice_threshold
voice_threshold_delay
void S_Init( start )
void*fff
vol: %.2f 
volume
vpcft
vsndH
vsnd_c
vsnd_files
vsndevts
vsndevtsH
vsndstck
vsndstckH
vsndstckI
vstdlib.dll
w8fD;
wEfD;
wLfA;
wchar_t char::*`D
wchar_t char::*`Ik
weights_field_name
www.digicert.com1$0"
x$;A0}
x.;C })Hc
x.HcA
x1E;A0}+I
x3IcC
x7D;W }1
x9;A0}4H
xE;|$
xEHcW@L;
xHHcC
xMHcQ
xP;A0}KH
xQHcK
xSD;A0}MIc
xUHcC
xUIcI
xULcE@M;
xY;A0}TH
xZIcI
xbHcL$hH;
xeHcT$Pf
xfade
xnIcHpH;
xoHcH
xqIcHpH;
xuJE3
y.Hc_
yA9u	
z8v	float
zxuvA
{P9kH|AH
{X9K$
{}[]=, 	
|"@Hc
|$ A+
|$ ATAUAVAWHcq
|$ ATAVAWH
|$ AVAWH
|$ AVAWL
|$ AVH
|$ AVL
|$ AW
|$ AWH
|$ E3
|$ H=vpcft	H
|$ Hc
|$ Hcy
|$ Hi
|$ Mc
|$ UATAUAVAWH
|$(A^
|$(A_
|$(Hc;
|$0;_Xu	H
|$0A+
|$0D9}
|$0H;
|$0Hc
|$0Hcy
|$0Hc{
|$0Mk
|$0fff
|$0tOH
|$0u0
|$8E3
|$8Hc
|$8Hcy
|$8f;
|$8fD
|$8t&3
|$8u	A
|$@A_A^A]A\
|$@D8~
|$@H+
|$@Hc
|$@Hc9f
|$@Hc;
|$@Hc>
|$@Hcyp;
|$@fD;
|$@ff
|$HE+
|$HHc
|$Ht&HcK
|$Iu&Hc
|$PE3
|$PHc
|$PHc;;{
|$PHc{@$
|$PLc
|$XE3
|$Xfff
|$`A+
|$`A;
|$hE3
|$lHc
|$pE3
|$xHi
|JD8d
}#fA;R&wchar_t
}%;Q$
}*fE;S&wchar_t#fE;
}0H;}8
}8L9}
}<D;OT
}=LcD$ 
}?fD;K
}LD;UT
}LfD;C
}NLcL$ 
}W;r$
}XD;D$|
}_Icv`D
}_fA;
}afA;
}fD;@$
~ fff
~*fff
~+Lc@
~-LcP
~08\t
~CSosOperatorSystem: Deleting orphaned CSosOperatorStack pointer for %short via shutdown
~Zfff
~yHc/A
