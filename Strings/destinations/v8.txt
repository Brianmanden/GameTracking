							
									
										
												
														
																					
																										
																											
																																										
		C(H
		__int128,H
	;HcP(
	A	N(H
	HcI 
	IcKH
	Lci 
	unsigned short+wchar_t)L
	unsigned short-wchar_t+
      
                  ...
             %double: %3d 0x%02x
            %short
           value(): %unsigned __int128
        ff
        type: 
      !
      $
      %
      &
      '
      (
      )
      *
      +
      ,
      -
      .
      ...
      /
      0
      1
      2
      3
      4
      5
      6
      7
      8
      9
      :
      ;
      <
      =
      >
      ?
      @
      A
      B
      C
      D
      E
      F
      G
      H
      I
      J
      K
      L
      M
      N
      O
      P
      Q
      R
      S
      T
      U
      V
      W
      X
      Y
      Z
      [
      \"
      \\
      ^
      _
      __float128
      __int128
      `
      bool
      char
      double
      float
      int
      k
      long
      long double
      long long
      nested @0x%08llx: [field #%double] <- 
      object @0x%08llx: [field #%double] <- 
      p
      q
      r
      short
      signed char
      skipping object 
      u
      unsigned __int128
      unsigned char
      unsigned int
      unsigned long
      unsigned long long
      unsigned short
      void
      wchar_t
      {
      |
      }
      ~
     #
     \__int128
     \r
     \u000b
     \u000e
     \unsigned short
     ]
    0x%08llx: 
    0x%08llx: [top + %double] <- 
    0x%08llx: [top + %double] <- %lld ; %short (%short)
    0x%08llx: [top + %double] <- %llu ; uint %short (%short)
    0x%08llx: [top + %double] <- %long double ; %short
    0x%08llx: [top + %double] <- %long double ; [sp + %double]
    0x%08llx: [top + %double] <- 0x%08llx ; %short 
    0x%08llx: [top + %double] <- 0x%08llx ; allocated receiver
    0x%08llx: [top + %double] <- 0x%08llx ; argc (%double)
    0x%08llx: [top + %double] <- 0x%08llx ; args*
    0x%08llx: [top + %double] <- 0x%08llx ; args.arguments
    0x%08llx: [top + %double] <- 0x%08llx ; args.arguments %short
    0x%08llx: [top + %double] <- 0x%08llx ; args.length
    0x%08llx: [top + %double] <- 0x%08llx ; args.length %short
    0x%08llx: [top + %double] <- 0x%08llx ; caller'short fp
    0x%08llx: [top + %double] <- 0x%08llx ; caller'short pc
    0x%08llx: [top + %double] <- 0x%08llx ; code object
    0x%08llx: [top + %double] <- 0x%08llx ; context
    0x%08llx: [top + %double] <- 0x%08llx ; context (adaptor sentinel)
    0x%08llx: [top + %double] <- 0x%08llx ; function
    0x%08llx: [top + %double] <- 0x%08llx ; function (construct sentinel)
    0x%08llx: [top + %double] <- 0x%08llx ; function (stub failure sentinel)
    0x%08llx: [top + %double] <- 0x%08llx; context
    0x%08llx: [top + %double] <- 0x%08llx; function
    0x%08llx: [top + %u] <- 0x%08llx ; caller'short fp
    0x%08llx: [top + %u] <- 0x%08llx ; caller'short pc
    0x%08llx: [top + %u] <- 0x%08llx ; code object
    0x%08llx: [top + %u] <- 0x%08llx ; context
    0x%08llx: [top + %u] <- 0x%08llx ; function (%short sentinel)
    execute string in V8
    fillcolor="#999999"
    label="{{#
    run JavaScript scripts in file1, file2, ..., filek
    run an interactive JavaScript shell
    run the new debugging shell
    shape="record"
    skipping object 
    style="diagonals"
    style="filled"
    style="filled" 
    style="rounded"
  ** Aborting compilation for 
  ** Compilation queue full, will retry optimizing 
  ** Compiler thread did %.2f%% useful work
  ** Flushed concurrent recompilation queues.
  ** Marking 
  ** Queued 
  // actual arguments
  // expression stack (top to bottom)
  // heap-allocated locals
  // not passed to callee
  // stack-allocated locals
  DEAD_INPUT [
  [%02d] : %unsigned __int128
  checkmaps-table @%double: %short #%double 
  concentrate="true"
  d8 [options]
  d8 [options] --shell [file1 file2 ... filek]
  d8 [options] file1 file2 ... filek
  default: 
  field %double: 
  migration slots buffer: %double
  node [fontsize=8,height=0.25]
  overlap="false"
  page %p slots buffer: %double
  rankdir="BT"
  ranksep="1.2 equally"
  remove S%double
  replace L%double -> void%double
  shell [options]
  shell [options] --shell [file1 file2 ... filek]
  shell [options] -long double string
  shell [options] file1 file2 ... filek
  skipping non existing property initialization store
  splines="true"
  subgraph cluster_BasicBlock
  translating 
  translating %short => StubFailureTrampolineStub, height=%double
  translating %short stub => height=%u
  translating arguments adaptor => height=%double
  translating construct stub => height=%double
  unreachable
  var 
 !"#$%&''(()))*+,,,,,,-....]
 !"#$%&'()*+AAAAAAAAAAA,AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-./////////////AAA0AAAAAA1AAA2A34444444566666667777777777777777777777777777777789999999AAAAA:;A<=======>???????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 "%short"
 "B%double"
 "dead"
 "dom-loop-succ"
 "double_stack:%double"
 "osr"
 "stack:%double"
 #%double / 
 #%double# %p: 
 %8.3f ms / %4.1f %% 
 %9u bytes / %4.1f %%
 %double %double
 %double M
 %p -> %p
 '%char'
 (%char->%char%short) 
 (%short) 
 ((%short+%short=%short)->(%short+%short=%short))#%short @ %p]
 (+ %.f ms in %double steps since last GC)
 (+ %.f ms in %double steps since start of marking, biggest step %.f ms)
 (Array)
 (OSR entry)
 (SharedFunctionInfo %p)
 (configurable)
 (loop header)
 (mapped to index 
 (opt #%double) @%double, FP to SP delta: %double]
 (osr ast id %double)]
 (pop 
 (read-only)
 (simple)
 (transition map 
 (with transition)
 (write-barrier)
 + %double]
 + %double] <-
 - age: %double]
 - took %0.3f ms]
 - took %0.3f, %0.3f, %0.3f ms]
 -> ID
 / %llx]
 9C0u
 9D$P
 9D$Ps9HcT$PI
 9D$Ps:H
 9D$Ps;H
 9D$Ps;HcD$PH
 9D$Ps;HcT$PI
 9D$\
 9D$`unsigned short}3
 9L$h
 9|$pu+D
 ; duplicate of object #%double
 ; literal
 ; object (length = %double, is_args = %double)
 == "%short" then B%double else B%double
 => node=%double, height=%double
 @%double => node=%double, pc=0x%08llx, state=%short, alignment=%short, took %0.3f ms]
 @8t$0u?H
 A)H8H
 A9N(unsigned short 
 A\^]
 A\_^
 A]][
 A^A\]
 A^A\_
 A^A]A\^[
 A^A]A\_[
 A^A]]
 A^A]^
 A^A]_
 A^][
 A^^[
 A^^]
 A^^]H
 A^_[
 A^_]
 A^_^
 A^_^H
 A^_^][
 A_A\[
 A_A\]
 A_A\_
 A_A\_^]
 A_A]A\^]
 A_A]A\_[
 A_A]A\_]
 A_A]A\_^
 A_A^A\
 A_A^A\][
 A_A^A\^]
 A_A^A\_]
 A_A^A\_^
 A_A^A\_^][
 A_A^A]
 A_A^A]A\[
 A_A^A]A\]
 A_A^A]A\^
 A_A^A]A\_
 A_A^A]A\_^]
 A_A^A]^]
 A_A^[
 A_A^]
 A_A^^
 A_A^^H
 A_A^_
 A_A^_][
 A_A^_^[
 A_A^_^]
 A_][
 A_^[
 A_^]
 A__[
 A__]
 A__^
 D2GxD
 Dead block replaced with B%double
 Hc)H
 HcA$
 HcA,E3
 HcA4
 HcA8E2
 HcA<
 HcA@H
 HcAT
 HcA\
 HcAd
 HcAdH
 HcAhH
 HcAt
 HcL$`;
 HcY 
 HcitE3
 Hcqd3
 Hcq|H
 Hct$PMc
 I;N(u
 I;V(u
 LcA H
 LcA,H
 LcQL
 LcqtE3
 Lct$`Mc
 LcydE3
 Lcz\E3
 [%double, %double[
 [%short]
 [DISABLED]
 [dead]
 [false]
 [hir:
 [noOSE]
 [true]
 \a
 \b
 \c
 \d
 \e
 \f
 \u0001
 \u0002
 \u0003
 \u0004
 \u0005
 \u0006
 \u0007
 \u000f
 \u0010
 \u0011
 \u0012
 \u0013
 \u0014
 \u0015
 \u0016
 \u0017
 \u0018
 \u0019
 _^]H
 allow-undefined-as-nan
 array
 as it has already been optimized.
 at %short:%double
 at <unknown>:%double
 at <unknown>:<unknown>
 at AST id %double]
 at OSR AST id %double
 base: ((
 because: %short]
 changes 
 changes[
 check_hole
 copy-to B%double
 depends on 
 for concurrent OSR at %d.
 for concurrent optimization.
 for concurrent recompilation.
 for recompilation, reason: %short
 function
 goto (
 graph printed to file 
 index 
 is ready for install and entry at AST id %double]
 kill-all int%double
 kill-elements int%double
 kill-elements-kind int%double
 kill-maps int%double
 kill-osr int%double
 later.
 length 
 maps
 merge-to B%double
 offset 
 pop 
 pos:
 process L%double field %double (unsigned __int128%double)
 process S%double field %double (unsigned __int128%double) = void%double
 push 
 reg_exp
 spec_object
 tDE3
 then B%double else B%double
 took 
 truncating-int32
 truncating-smi
 type:
 u&A;
 unsigned short	E3
 unsigned short>D9
 uses:
 using Turbofan
 using allocation site 
 value = 
 values)
 var[
 with %smap %p
 }uL;S
 ~LE3
!!!INVALID CONSTRUCTOR!!!
!!!INVALID MAP!!!
!!!INVALID POINTER!!!
!!!INVALID SHARED ON CONSTRUCTOR!!!
!!signed char);
!(%DebugGetProperty(signed char,builtins.promiseStatus)===(void 0));
!(N[X]===(void 0))){
!DefineObjectProperty(signed char,bool,char,true)){
!IsRetry()
!NodeProperties::IsTyped(node)
!NodeProperties::IsValueEdge(it.edge()) || (*it)->opcode() == IrOpcode::kProjection || (*it)->opcode() == IrOpcode::kParameter
!OperatorProperties::HasControlOutput(node->op())
!OperatorProperties::HasEffectOutput(node->op())
!OperatorProperties::HasValueOutput(node->op())
!SameValue(c.getValue(),g.getValue())){
!This program cannot be run in DOS mode.
!\$0!\$(!\$ L
!c.className||(c.className()!='global');
!compiled_code_->is_turbofanned()
!deferred_objects_[deferred_object_index].is_arguments()
!disposed_
!g.isNull()&&e.isUndefined();
!handle_.is_null()
!heap_object->IsHashTable()
!heap_object->IsJSGlobalProxy() && !heap_object->IsGlobalObject()
!heap_object->IsMap()
!instr->CheckChangesFlag(kMaps)
!is_default()
!isolate()->serializer_enabled()
!it.done() && (it.frame()->fp() == thread_local_.last_fp_)
!platform_
!root->IsNull()
!shared_info.is_null()
!string.is_null()
!strong_gc_subroot_names_.is_empty()
!t$(H!t$ I
!this.hasGetter()&&!this.hasSetter());
!value->IsPushArguments()
" doesn'unsigned short contain name:string property");
"%short",
"<dummy>"
"E",2.7182818284590452354,
"EPSILON",%_MathPow(2,-52)
"Enclosing function is now incompatible. "+
"LN10",2.302585092994046,
"LN2",0.6931471805599453,
"LOG10E",0.4342944819032518,
"LOG2E",1.4426950408889634,
"MAX_SAFE_INTEGER",%_MathPow(2,53)-1,
"MAX_VALUE",1.7976931348623157e+308,
"MIN_SAFE_INTEGER",-%_MathPow(2,53)+1,
"MIN_VALUE",5e-324,
"NEGATIVE_INFINITY",-(1/0),
"NaN",$NaN,
"No corresponding function in new script found";
"PI",3.1415926535897932,
"POSITIVE_INFINITY",(1/0),
"SQRT1_2",0.7071067811865476,
"SQRT2",1.4142135623730951
"Script became damaged");
"Text diff overlaps with function boundary";
"] => ["+br+"]";
"__defineGetter__",ObjectDefineGetter,
"__defineSetter__",ObjectDefineSetter,
"__lookupGetter__",ObjectLookupGetter,
"__lookupSetter__",ObjectLookupSetter
"abs",MathAbs,
"acos",MathAcosJS,
"acosh",MathAcosh,
"anchor",StringAnchor,
"args_count: %double"
"asin",MathAsinJS,
"asinh",MathAsinh,
"atan",MathAtanJS,
"atan2",MathAtan2JS,
"atanh",MathAtanh,
"backtrace":a.backtraceRequest_,
"big",StringBig,
"bind",FunctionBind,
"blink",StringBlink,
"bold",StringBold,
"break":a.breakRequest_,
"cbrt",MathCbrt,
"ceil",MathCeil,
"changebreakpoint":a.changeBreakPointRequest_,
"changelive":a.changeLiveRequest_,
"charAt",StringCharAt,
"charCodeAt",StringCharCodeAt,
"clearbreakpoint":a.clearBreakPointRequest_,
"clearbreakpointgroup":a.clearBreakPointGroupRequest_,
"clz32",MathClz32,
"concat",StringConcat,
"concat",char("concat",ArrayConcatJS),
"concat",char("concat",ArrayConcatJS,1),
"configurable_",
"continue":a.continueRequest_,
"cos",MathCos,
"cosh",MathCosh,
"create",ObjectCreate,
"decodeURI",URIDecode,
"decodeURIComponent",URIDecodeComponent,
"defineProperties",ObjectDefineProperties,
"defineProperty",ObjectDefineProperty,
"disconnect":a.disconnectRequest_,
"edges":[
"encodeURI",URIEncode,
"encodeURIComponent",URIEncodeComponent
"enumerable_",
"escape",URIEscapeJS,
"eval",GlobalEval
"evaluate":a.evaluateRequest_,
"every",char("every",ArrayEvery,1),
"exp",MathExp,
"expm1",MathExpm1
"filter",char("filter",ArrayFilter,1),
"fixed",StringFixed,
"flags":a.debuggerFlagsRequest_,
"floor",MathFloor,
"fontcolor",StringFontcolor,
"fontsize",StringFontsize,
"for",SymbolFor,
"forEach",char("forEach",ArrayForEach,1),
"frame":a.frameRequest_,
"freeze",ObjectFreezeJS,
"fromCharCode",StringFromCharCode
"fround",MathFroundJS,
"gc":a.gcRequest_,
"getGet",function PropertyDescriptor_GetGetter(){
"getOwnPropertyDescriptor",ObjectGetOwnPropertyDescriptor,
"getOwnPropertyNames",ObjectGetOwnPropertyNames,
"getOwnPropertySymbols",ObjectGetOwnPropertySymbols
"getPrototypeOf",ObjectGetPrototypeOf,
"getSet",function PropertyDescriptor_GetSetter(){
"getValue",function PropertyDescriptor_GetValue(){
"get_",
"hasConfigurable",function PropertyDescriptor_HasConfigurable(){
"hasConfigurable_",
"hasEnumerable",function PropertyDescriptor_HasEnumerable(){
"hasEnumerable_",
"hasGetter",function PropertyDescriptor_HasGetter(){
"hasGetter_",
"hasOwnProperty",ObjectHasOwnProperty,
"hasSetter",function PropertyDescriptor_HasSetter(){
"hasSetter_"
"hasValue",function PropertyDescriptor_HasValue(){
"hasValue_",
"hasWritable",function PropertyDescriptor_HasWritable(){
"hasWritable_",
"hypot",MathHypot,
"imul",MathImul,
"indexOf",StringIndexOfJS,
"indexOf",char("indexOf",ArrayIndexOf),
"indexOf",char("indexOf",ArrayIndexOf,1),
"is",ObjectIs,
"isArray",ArrayIsArray
"isConfigurable",function PropertyDescriptor_IsConfigurable(){
"isEnumerable",function PropertyDescriptor_IsEnumerable(){
"isExtensible",ObjectIsExtensible,
"isFinite",GlobalIsFinite,
"isFinite",NumberIsFinite,
"isFrozen",ObjectIsFrozen,
"isInteger",NumberIsInteger,
"isNaN",GlobalIsNaN,
"isNaN",NumberIsNaN,
"isPrototypeOf",ObjectIsPrototypeOf,
"isSafeInteger",NumberIsSafeInteger,
"isSealed",ObjectIsSealed,
"isWritable",function PropertyDescriptor_IsWritable(){
"italics",StringItalics,
"iterator",symbolIterator,
"join",char("join",ArrayJoin),
"keyFor",SymbolKeyFor
"keys",ObjectKeys,
"lastIndexOf",StringLastIndexOfJS,
"lastIndexOf",char("lastIndexOf",ArrayLastIndexOf,1),
"link",StringLink,
"listbreakpoints":a.listBreakpointsRequest_,
"localeCompare",StringLocaleCompareJS,
"log",MathLog,
"log10",MathLog10,
"log1p",MathLog1p,
"log2",MathLog2,
"lookup":a.lookupRequest_,
"map",char("map",ArrayMap,1),
"match",StringMatchJS,
"max",MathMax,
"min",MathMin,
"nodes":[
"normalize",StringNormalizeJS,
"parseFloat",GlobalParseFloat
"parseFloat",GlobalParseFloat,
"parseInt",GlobalParseInt,
"pop",char("pop",ArrayPop),
"pow",MathPow,
"preventExtensions",ObjectPreventExtension,
"propertyIsEnumerable",ObjectPropertyIsEnumerable,
"push",char("push",ArrayPush)
"push",char("push",ArrayPush),
"push",char("push",ArrayPush,1),
"random",MathRandom,
"reduce",char("reduce",ArrayReduce,1),
"reduceRight",char("reduceRight",ArrayReduceRight,1)
"references":a.referencesRequest_,
"replace",StringReplace,
"restartframe":a.restartFrameRequest_,
"reverse",char("reverse",ArrayReverse),
"round",MathRound,
"scope":a.scopeRequest_,
"scopes":a.scopesRequest_,
"scripts":a.scriptsRequest_,
"seal",ObjectSeal
"search",StringSearch,
"setConfigurable",
"setEnumerable",function PropertyDescriptor_SetEnumerable(signed char){
"setGet",function PropertyDescriptor_SetGetter(signed char){
"setPrototypeOf",ObjectSetPrototypeOf,
"setSet",function PropertyDescriptor_SetSetter(signed char){
"setValue",function PropertyDescriptor_SetValue(signed char){
"setWritable",function PropertyDescriptor_SetWritable(signed char){
"set_",
"setbreakpoint":a.setBreakPointRequest_,
"setexceptionbreak":a.setExceptionBreakRequest_,
"setvariablevalue":a.setVariableValueRequest_,
"shift",char("shift",ArrayShift),
"sign",MathSign,
"sin",MathSin,
"sinh",MathSinh,
"slice",StringSlice,
"slice",char("slice",ArraySlice,2),
"small",StringSmall,
"snapshot":{
"some",char("some",ArraySome,1),
"sort",char("sort",ArraySort),
"source":a.sourceRequest_,
"splice",char("splice",ArraySplice)
"splice",char("splice",ArraySplice,2),
"split",StringSplitJS,
"sqrt",MathSqrt,
"strike",StringStrike,
"strings":[
"sub",StringSub,
"substr",StringSubstr,
"substring",StringSubstring,
"sup",StringSup
"suspend":a.suspendRequest_,
"tan",MathTan,
"tanh",MathTanh,
"threads":a.threadsRequest_,
"title":"
"toExponential",NumberToExponentialJS,
"toFixed",NumberToFixedJS,
"toLocaleLowerCase",StringToLocaleLowerCase,
"toLocaleString",NumberToLocaleString,
"toLocaleString",ObjectToLocaleString,
"toLocaleString",char("toLocaleString",ArrayToLocaleString),
"toLocaleUpperCase",StringToLocaleUpperCase,
"toLowerCase",StringToLowerCaseJS,
"toPrecision",NumberToPrecisionJS
"toString",BooleanToString,
"toString",FunctionToString
"toString",NumberToString,
"toString",ObjectToString,
"toString",StringToString,
"toString",SymbolToString,
"toString",char("toString",ArrayToString),
"toString",function PropertyDescriptor_ToString(){
"toUpperCase",StringToUpperCaseJS,
"trace_function_infos":[
"trace_tree":[
"trim",StringTrimJS,
"trimLeft",StringTrimLeft,
"trimRight",StringTrimRight,
"trunc",MathTrunc,
"unescape",URIUnescapeJS,
"unscopables",symbolUnscopables
"unshift",char("unshift",ArrayUnshift,1),
"use strict";
"v8flag":a.v8FlagsRequest_,
"valueOf",BooleanValueOf
"valueOf",NumberValueOf,
"valueOf",ObjectValueOf,
"valueOf",StringValueOf,
"valueOf",SymbolValueOf
"value_",
"version":a.versionRequest_,
"writable_",
#   Expected: %int
#   Expected: %p
#   Found: %int
#   Found: %p
#   Value: %int
#   Value: %p
# Fatal error in %short
#%double %short is required by #%double %short as %short%short
#%double %short is used by #%double %short as %short%short
#%double (%short) cannot fold into #%double (%short)
#%double (%short) cannot fold into #%double (%short) due to size: %double
#%double (%short) cannot fold into #%double (%short), can'unsigned short estimate total allocation size
#%double (%short) cannot fold into #%double (%short), crosses basic blocks
#%double (%short) cannot fold into #%double (%short), different basic blocks
#%double (%short) cannot fold into #%double (%short), different spaces
#%double (%short) cannot fold into #%double (%short), dynamic allocation size in dominator
#%double (%short) cannot fold into #%double (%short), dynamic size value does not dominate target allocation
#%double (%short) cannot fold into #%double (%short), new space hoisting
#%double (%short) escapes redefinition #%double (%short) @%double
#%double (%short) escapes through #%double (%short) @%double
#%double (%short) folded into #%double (%short)
#%double (%short) is being captured
#%double (%short) out of bounds at #%double (%short) @%double
#%double / 
#%double Phi is not truncating Int32 because of #%double %short
#%double Phi is not truncating Smi because of #%double %short
#%double Phi is used by real #%double %short as %short
#B0;B,u
#C0;C,u
#C@;C<uB
#C@;C<uE
#C@;C<uF
#C@;C<uH
#C@;C<uIA
#C@;C<uID
#C@;C<uLH
#F@;F<
#F@;F<t9H
#F@;F<tZH
#F@;F<uI
#F@;F<uNA
#F@;F<unsigned short
#F@;F<unsigned short{H
#G0;G,u
#G@;G<uG
#G@;G<uPD
#H0;H,u
#fD9M
$!<!H
$!<!tGH
$!<!u
$!<!u	H
$!<!unsigned short@H
$'<'t4
$'<'tW
$Error
$EvalError
$H9y'
$Object.defineProperty(unsigned char,"constructor",
$RangeError
$ReferenceError
$SyntaxError
$TypeError
$URIError
$`<@A
$`<@u)
$}"Ic
%.f ms
%24s: %long long
%33s     (%.f times slower than full code gen)
%33s %8.3f ms           %7.3f kB allocated
%33s %8.3f ms           %9u bytes
%33s %8.3f ms / %4.1f %% 
%4d:%*short
%5d: 
%8.0f ms: 
%AddNamedProperty($Array.prototype,"constructor",$Array,2);
%AddNamedProperty($Array.prototype,symbolUnscopables,signed char,
%AddNamedProperty($Boolean.prototype,"constructor",$Boolean,2);
%AddNamedProperty($Function.prototype,"constructor",$Function,2);
%AddNamedProperty($Number.prototype,"constructor",$Number,2);
%AddNamedProperty($Object.prototype,"constructor",$Object,2);
%AddNamedProperty($String.prototype,"constructor",$String,2);
%AddNamedProperty($Symbol.prototype,"constructor",$Symbol,2);
%AddNamedProperty(bool,"configurable",a.isConfigurable(),0);
%AddNamedProperty(bool,"enumerable",a.isEnumerable(),0);
%AddNamedProperty(bool,"get",a.getGet(),0);
%AddNamedProperty(bool,"set",a.getSet(),0);
%AddNamedProperty(bool,"value",a.getValue(),0);
%AddNamedProperty(bool,"writable",a.isWritable(),0);
%AddNamedProperty(double,bool[__float128],
%AddNamedProperty(double,unsigned char,int,2|4|1);
%AddNamedProperty(global,"Infinity",(1/0),signed char);
%AddNamedProperty(global,"Math",$Math,2);
%AddNamedProperty(global,"NaN",$NaN,signed char);
%AddNamedProperty(global,"undefined",(void 0),signed char);
%AddNamedProperty(signed char,long double,__float128,bool);
%AddNamedProperty(signed char,long double,__float128,char);
%AddPropertyForTemplate(signed char,int,long,k);
%Apply(InternalArray.prototype.concat,
%Break();
%ChangeBreakOnException(Debug.ExceptionBreak.Caught,double);
%ChangeBreakOnException(Debug.ExceptionBreak.Caught,false);
%ChangeBreakOnException(Debug.ExceptionBreak.Uncaught,double);
%ChangeBreakOnException(Debug.ExceptionBreak.Uncaught,false);
%CheckExecutionState(this.break_id_);
%CheckIsBootstrapping();
%ClearBreakPoint(break_point);
%ClearBreakPoint(break_points[bool]);
%ClearStepping();
%CollectGarbage
%CollectGarbage(char);
%D9y 
%DebugConstructedBy
%DebugSetScriptSource(this.script_,signed char);
%DefineAccessorPropertyUnchecked(signed char,bool,char,double,2);
%DefineAccessorPropertyUnchecked(signed char,bool,char,null,2);
%DefineAccessorPropertyUnchecked(signed char,bool,k,long,int);
%DefineApiAccessorProperty(signed char,int,unsigned long,unsigned __int128,q);
%DefineDataPropertyUnchecked(signed char,bool,unsigned int,int);
%DeleteProperty(signed char,bool,0);
%FinishArrayPrototypeSetup($Array.prototype);
%Fix(signed char);
%FunctionMarkNameShouldPrintAsAnonymous(double);
%FunctionRemovePrototype(__float128);
%FunctionRemovePrototype(char);
%FunctionRemovePrototype(double);
%FunctionSetInstanceClassName(MathConstructor,'Math');
%FunctionSetLength(int,unsigned char);
%FunctionSetName(__float128,long double);
%FunctionSetName(char,bool);
%FunctionSetName(double,bool);
%FunctionSetPrototype($Array,new $Array(0));
%FunctionSetPrototype($Boolean,new $Boolean(false));
%FunctionSetPrototype($Number,new $Number(0));
%FunctionSetPrototype($String,new $String());
%FunctionSetPrototype($Symbol,new $Object());
%FunctionSetPrototype(signed char,unsigned char);
%GetIndexedInterceptorElementNames(this.value_);
%GetNamedInterceptorPropertyNames(signed char);
%GetNamedInterceptorPropertyNames(this.value_);
%GetScopeDetails(a.break_id_,
%HasElement(signed char,this):%HasProperty(signed char,%ToName(this));
%InternalSetPrototype($Math,$Object.prototype);
%InternalSetPrototype(char,signed char);
%InternalSetPrototype(double,null);
%InternalSetPrototype(int,l.prototype);
%LiveEditFunctionSetScript(
%LiveEditFunctionSetScript(E.info,A);
%LiveEditFunctionSetScript(E.shared_function_info,(void 0));
%LiveEditFunctionSourceUpdated(E.raw_array);
%LiveEditPatchFunctionPositions(E.raw_array,
%LiveEditReplaceFunctionCode(T.raw_array,
%LiveEditReplaceRefToNestedFunction(
%LiveEditReplaceScript(script,new_source,null);
%MoveArrayContents(int,unsigned char);
%MoveArrayContents(unsigned char,signed char);
%MoveArrayContents(unsigned int,unsigned short);
%NormalizeElements(char);
%NormalizeElements(double);
%NormalizeElements(int);
%NormalizeElements(signed char);
%NormalizeElements(this);
%NormalizeElements(unsigned int);
%ObjectFreeze(signed char);
%OptimizeObjectForAddingMultipleProperties($Number.prototype,8);
%OptimizeObjectForAddingMultipleProperties(double,long double);
%OptimizeObjectForAddingMultipleProperties(signed char,b.length>>1);
%OptimizeObjectForAddingMultipleProperties(signed char,c.length>>1);
%PreventExtensions(signed char);
%SetCode($Boolean,BooleanConstructor);
%SetCode($Function,FunctionConstructor);
%SetCode($Number,NumberConstructor);
%SetCode($Object,ObjectConstructor);
%SetCode($String,StringConstructor);
%SetCode($Symbol,SymbolConstructor);
%SetCode(signed char,__float128);
%SetDebugEventListener(signed char,bool);
%SetDisableBreak(!this.value);
%SetFlags(char);
%SetFunctionBreakPoint(signed char,__float128,unsigned int);
%SetInlineBuiltinFlag(MathCeil);
%SetInlineBuiltinFlag(MathCos);
%SetInlineBuiltinFlag(MathRandom);
%SetInlineBuiltinFlag(MathSin);
%SetNativeFlag($Object);
%SetNativeFlag(__float128);
%SetNativeFlag(char);
%SetNativeFlag(double);
%SetNativeFlag(int);
%SetPrototype(signed char,bool);
%SetPrototype(this,signed char);
%StringIndexOf(bool,'$',0)<0){
%ToFastProperties(double);
%ToFastProperties(signed char);
%ToPrimitive(signed char,1);
%ToPrimitive(this,1);
%_CallFunction(char,function(k,long){return k-long;},ArraySort);
%_CallFunction(k,unsigned int,int,char,signed char);
%_CallFunction(k,unsigned long,int,signed char,char);
%_CallFunction(signed char,SymbolToString):((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char));
%_CallFunction(this,BOOLEAN_TYPE,signed char,ValueMirror);
%_CallFunction(this,CONTEXT_TYPE,Mirror);
%_CallFunction(this,FRAME_TYPE,Mirror);
%_CallFunction(this,FUNCTION_TYPE,signed char,ValueMirror);
%_CallFunction(this,INTERNAL_PROPERTY_TYPE,Mirror);
%_CallFunction(this,NULL_TYPE,null,ValueMirror);
%_CallFunction(this,NUMBER_TYPE,signed char,ValueMirror);
%_CallFunction(this,PROPERTY_TYPE,Mirror);
%_CallFunction(this,SCOPE_TYPE,Mirror);
%_CallFunction(this,SCRIPT_TYPE,Mirror);
%_CallFunction(this,STRING_TYPE,signed char,ValueMirror);
%_CallFunction(this,SYMBOL_TYPE,signed char,ValueMirror);
%_CallFunction(this,UNDEFINED_TYPE,(void 0),ValueMirror);
%_CallFunction(this,bool||OBJECT_TYPE,signed char,char,ValueMirror);
%_CallFunction(this,signed char,ERROR_TYPE,ObjectMirror);
%_CallFunction(this,signed char,FUNCTION_TYPE,ObjectMirror);
%_CallFunction(this,signed char,GENERATOR_TYPE,ObjectMirror);
%_CallFunction(this,signed char,MAP_TYPE,ObjectMirror);
%_CallFunction(this,signed char,Mirror);
%_CallFunction(this,signed char,ObjectMirror);
%_CallFunction(this,signed char,PROMISE_TYPE,ObjectMirror);
%_CallFunction(this,signed char,REGEXP_TYPE,ObjectMirror);
%_CallFunction(this,signed char,SET_TYPE,ObjectMirror);
%_CallFunction(this,signed char,bool,long double);
%_CallFunction(unsigned short,function(unsigned char,wchar_t){
%_OneByteSeqStringSetChar(P,N[P],__float128);
%_OneByteSeqStringSetChar(double,signed char,char);
%_OneByteSeqStringSetChar(unsigned char++,37,R);
%_OneByteSeqStringSetChar(unsigned char++,K.charCodeAt(O+1),R);
%_OneByteSeqStringSetChar(unsigned char++,K.charCodeAt(O+2),R);
%_OneByteSeqStringSetChar(unsigned char++,bool,R);
%_OneByteSeqStringSetChar(unsigned char++,signed char,R);
%_SetValueOf(this,((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char)));
%_SetValueOf(this,ToBoolean(signed char));
%_SetValueOf(this,bool);
%_SubString(bool,char[3],char[4]);
%_SubString(bool,r,char[(3+(long+1))]);
%_SubString(char,0,__float128[3]))+
%_SubString(char,__float128[4],c.length)
%_SubString(char,__float128[4],c.length);
%_TwoByteSeqStringSetChar(unsigned char++,(A&0x3ff)+0xdc00,__float128);
%_TwoByteSeqStringSetChar(unsigned char++,(A>>10)+0xd7c0,__float128);
%_TwoByteSeqStringSetChar(unsigned char++,37,S);
%_TwoByteSeqStringSetChar(unsigned char++,A,__float128);
%_TwoByteSeqStringSetChar(unsigned char++,K.charCodeAt(O),S);
%_TwoByteSeqStringSetChar(unsigned char++,K.charCodeAt(O-1),S);
%_TwoByteSeqStringSetChar(unsigned char++,bool,S);
%_TwoByteSeqStringSetChar(unsigned char++,signed char,S);
%_TwoByteSeqStringSetChar(unsigned char,signed char,__float128);
%cell_value
%double %short
%double %short maps { 
%double / 
%double,%double,
%double: %unsigned __int128
%elements
%length
%lld ; %short (%short)
%lld ; [sp + %double] (%short)
%lld ; [sp + %double] (uint %short)
%lld ; uint %short (%short)
%llx %long long %.*short
%long double ; %short
%long double ; [sp + %double]
%p [%short]: %double (%.2f%%) %double (%.2f%%) %double (%.2f%%) %double (%.2f%%) %short
%p [%short]: %double (%.2f%%) free %short
%p [%short]: %double bytes live (unswept)
%s.dot
%s.json
%short "%short"
%short "B%double"
%short %.f (%.f) -> %.f (%.f) MB, 
%short %d000
%short %double
%short / %lld entries
%short / %short
%short,"%short"
%short,%double
%short,%double,
%short,%lld
%short,%short,
%short,%short,%double,
%short,%short,-2,
%short:%int: %short
&&(%_CallFunction(Q,T,ObjectHasOwnProperty))){
&HcGL
'" evaluating "'+double+'"');
'"message":"Internal error: '+%ToString(long double)+'"}';
'"request_seq":'+a.seq+','+
'"success":false,'+
'"type":"response",'+
'... (length: '+this.length()+')';
'H;N@t3f
'H;N@taH;NHt
'H;N@u
'H;N@unsigned short*H;NHt
'H;V@t9f
'H;V@u
'L;F@t5
'L;F@u
'Object.prototype.__defineGetter__: Expecting function');
'Object.prototype.__defineSetter__: Expecting function');
'be the global object from which eval originated');
'incompatible_method_receiver',["Symbol.prototype.toString",this]);
'incompatible_method_receiver',["Symbol.prototype.valueOf",this]);
(!c.hasConfigurable()||
(!c.hasEnumerable()||
(!c.hasGetter()||
(!c.hasSetter()||
(!c.hasValue()||
(!c.hasWritable()||
(%_CallFunction(Q,T,ObjectHasOwnProperty))){
(%_ClassOf(signed char)==='Boolean')){
(%_ClassOf(this)==='Function')){
(%_IsSmi(%IS_VAR(char))?char:ToNumber(char));
(%_IsSmi(%IS_VAR(double))?double:ToNumber(double));
(%short builtin)
(%short code)
((0.01<signed char&&signed char<1e9)||
((__float128===(void 0))||IsDataDescriptor(__float128)))){
((k>>>0)===k)){
((kMath[38+2])
((kMath[38+4])
((kMath[47+2])
((this.propertyType()==PropertyType.Callbacks)&&
((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char)));
() {}
(*it)->opcode() == IrOpcode::kIfTrue || (*it)->opcode() == IrOpcode::kIfFalse
(-1e9<signed char&&signed char<-0.01))){
(0) < (delta)
(=%dS)
(=%short)
(=invalid_double_reg#%double)
(=invalid_double_reg#%double|R)
(=invalid_reg#%double)
(=invalid_reg#%double|R)
(A\_^[
(A^A]A\[
(A^A]A\_
(A^A]A\_^[
(A^A]_^][
(A^_^[
(A_A\_[
(A_A]A\[
(A_A]A\_
(A_A]][
(A_A^
(A_A^A\[
(A_A^A]A\
(A_A^A]A\^]
(A_A^A]A\_^][
(A_A^^[
(A__][
(Bootstrapper)
(Builtins)
(Compilation cache)
(D$ A
(D$ H
(D$ H%
(D$ Hc
(D$ I
(D$ L
(D$ float
(D$03
(D$0A
(D$0H
(D$0L
(D$0M
(D$0f
(D$@D
(D$@H
(D$@I
(D$@L
(D$@M
(D$@float
(D$PD
(D$PH
(D$PL
(D$Pf
(D$`float
(D$pH
(D$pf
(Debugger)
(Eternal handles)
(Extensions)
(External strings)
(Function context is corrupt)
(Function context is outside heap)
(GC roots)
(Global handles)
(Handle scope)
(HcD$(H
(HcztH
(Internal string)
(Internalized strings)
(IsGenericDescriptor(char)&&
(Isolate)
(L$ H
(L$ float
(L$03
(L$0H
(L$0f
(L$@D
(L$Pf
(LcatL
(N[Y]===(void 0))){
(NullValue)
(OperatorProperties::GetValueOutputCount(input->op())) > (index + 1)
(OperatorProperties::GetValueOutputCount(input->op())) > (index)
(Relocatable)
(Smi roots)
(String::kMaxLength) >= (str.length())
(Strong roots)
(T$0H
(Thread manager)
(UndefinedValue)
(V8 API)
(_^][
(aW.status!=a.UNCHANGED);
(aW.status==a.DAMAGED);
(adapted) 
(aka 
(anonymous function)
(args(
(arguments_length_offset) >= (0)
(array->length()) > (index)
(back pointer)
(bool==0||bool==10)){
(c.hasEnumerable()&&
(char-.0*(signed char-(__float128*__float128/(__float128+char)-unsigned __int128)));
(closure)
(code deopt data)
(code for %short)
(code relocation info)
(code type cache)
(concatenated string)
(construct stub code for %short)
(construct stub code)
(context data)
(context func. result caches)
(context norm. map cache)
(context)
(default code cache)
(dependent code)
(double in char)&&(char[double]!=-1);
(double>__float128*4);
(function bindings)
(function literals)
(function scope info)
(function(){
(garbage collector)
(hidden properties)
(id) >= (0)
(idle)
(index) < (ComputeParametersCount())
(index) < (array->length())
(index) >= (0)
(jsframe_count) > (inlined_jsframe_index)
(jsframe_index) < (deoptimizer->jsframe_count())
(map descriptors)
(mapped to index 
(mirror.isValue()||mirror.isScript()||mirror.isContext())){
(nested)
(object elements)
(object properties)
(param_count) >= (0)
(program)
(prototype transitions
(root)
(runtime context)
(script line ends)
(see below) (%short)]
(shared function info)
(sliced string)
(stability-check)
(t$ 3
(t$ H
(t$ L
(t$ r
(t$0H
(t$0I
(t$0L
(t$@A
(t$@H
(t$@I
(t$@unsigned short"H
(t$PH
(t$PI
(t$`H
(t$`I
(t$`L
(t$pH
(t$pI
(the hole)
(this.argumentCount()+this.localCount())*kFrameDetailsNameValueSize;
(this.options_.maxStringLength===(void 0))){
(this=
(this=%unsigned __int128
(transition array)
(type) < (kBailoutTypesWithCodeEntry)
(typeof(bool)==='string')&&
(u&A;
(unresolved function)
(void 0),2|4);
(|$ 3
(|$ H
(|$03
(|$0D
(|$0H
(|$@H
(|$@I
(|$PD
(|$`D
(|$pE
) >> 
) changes 
) id{
) then B%double else B%double
))))));
)))));
))));
))*unsigned long;
),$Array(
)7A)6Hc
)D$ 3
)D$ ;
)D$ H
)D$ H;
)D$ L
)D$ L;
)D$ float
)D$ u
)D$0A
)D$0A;
)D$0H
)D$0L
)D$0fH
)D$@D
)D$@H
)D$@L
)D$@fI
)D$PD
)D$PL
)D$PfH
)D$`L
)D$pI
)D$pL
)D$pfH
)HcI0H
)IcFpL
)L$0H
)L$0I
)L$@D
)L$`float
)T$0I
)T$@A
)T$PA
)T$PfH
)fD;A
)t$ @
)t$ E
)t$ H
)t$ H;
)t$ I
)t$ L
)t$0A
)t$0A+
)t$0B
)t$0E
)t$0H
)t$0Hc
)t$0I
)t$@A
)t$@H
)t$@I
)t$PH
)t$PI
)t$PL
)t$`D
)t$`E
)t$`H
)t$`L
)t$pD
)t$pH
)t$pM
)|$ H
)|$ I
)|$0D
)|$0H
)|$0I
)|$@A
)|$@H
)|$PI
)|$`H
)|$pH
*;{P|
*;}L|
*O8fI
+(%_IsSmi(%IS_VAR(bool))?bool:%NumberToInteger(ToNumber(bool)))*60000
+(%_IsSmi(%IS_VAR(char))?char:%NumberToInteger(ToNumber(char)))*1000
+(%_IsSmi(%IS_VAR(double))?double:%NumberToInteger(ToNumber(double)));
++ Unobserved store S%double overwritten by S%double
+BD+B
+FD+F
+IcL$
+NORMALIZATION_FORMS.join(', ')+'.');
+O@H+
+\$HH
+__float128*(kMath[19+10]
+__float128*(kMath[19+3]
+__float128*(kMath[19+4]
+__float128*(kMath[19+5]
+__float128*(kMath[19+6]
+__float128*(kMath[19+9]
+__float128*kMath[19+11]
+__float128*kMath[19+12]
+bool*(kMath[7+2]
+bool*(kMath[7+3]
+bool*kMath[7+5]
+char*(kMath[13+1]
+char*(kMath[13+2]
+char*(kMath[13+4]
+char*kMath[13+5]
+int*(kMath[13+1]
+int*(kMath[13+2]
+int*(kMath[13+4]
+int*(kMath[7+2]
+int*(kMath[7+3]
+int*kMath[13+5]
+int*kMath[7+5]
+u1Hc
+unsigned __int128*((kMath[38+1])
+unsigned __int128*((kMath[38+3])
+unsigned __int128*((kMath[38+5])
+unsigned __int128*(kMath[38+6])
+unsigned long*((kMath[47+1])
+unsigned long*((kMath[47+3])
+unsigned long*(kMath[47+4])
, "%unsigned __int128") then B%double else B%double
, AST id %double]
, ICs with typeinfo: %double/%double (%double%%)
, depends on 
, generic ICs: %double/%double (%double%%)
, id=
, not enough type info: %double/%double (%double%%)]
, reason: %short]
,"control":
,"edge_count":
,"index":
,"label":"
,"meta":
,"node_count":
,"opcode":"
,"rankInputs":[
,"rankInputs":[0,
,"rankInputs":[0]
,"rankWithInput":[
,"target":
,"trace_function_count":
,"type":"
,"uid":
,0<	wchar_t
,0<	wchar_t:
,1,"%short%short"
,1,symbol("%short" hash %long long)
,1,symbol(hash %long long)
,X< wchar_t
,miss
,overflow
-- Might remove store S%double
-- Observed store S%double by load L%double
-- Observed stores at I%double (%short might GC)
-- Observed stores at I%double (%short might deoptimize)
-- Observed stores at I%double (GVN flags of %short)
--- %short timing results:
--- END ---
--- FUNCTION SOURCE (
--------- short unsigned __int128 u r char long double   char unsigned __int128 double long double ---------
-----------------------------------------
---------------------------------------------------
-----------------------------------------------------------
--------------------------------------------------------------------------------
--always-opt
--deopt-every-__int128-times=13
--prepare-always-opt --max-inlined-source-size=999999 --max-inlined-nodes=999999 --max-inlined-nodes-cumulative=999999 --noalways-opt
-@8|$,
-Infinity
-trunc
-u1Hc
-|"<.~
. Loop changes 
...(__float128,A);
...=int+((unsigned int-int)>>1);
...=r(unsigned char,int,unsigned int);
...>u<H
..\..\src\accessors.cc
..\..\src\api.cc
..\..\src\assembler.cc
..\..\src\bootstrapper.cc
..\..\src\compiler.cc
..\..\src\compiler\ast-graph-builder.cc
..\..\src\compiler\js-inlining.cc
..\..\src\compiler\verifier.cc
..\..\src\debug.cc
..\..\src\deoptimizer.cc
..\..\src\execution.cc
..\..\src\extensions\trigger-failure-extension.cc
..\..\src\flags.cc
..\..\src\global-handles.cc
..\..\src\heap-snapshot-generator.cc
..\..\src\heap\heap.cc
..\..\src\heap\incremental-marking.cc
..\..\src\heap\mark-compact.cc
..\..\src\heap\spaces.cc
..\..\src\heap\store-buffer.cc
..\..\src\hydrogen-check-elimination.cc
..\..\src\hydrogen.cc
..\..\src\i18n.cc
..\..\src\ic\ic.cc
..\..\src\isolate.cc
..\..\src\lithium-allocator.cc
..\..\src\lithium.cc
..\..\src\liveedit.cc
..\..\src\log.cc
..\..\src\lookup.cc
..\..\src\objects.cc
..\..\src\parser.cc
..\..\src\runtime\runtime-debug.cc
..\..\src\runtime\runtime-liveedit.cc
..\..\src\runtime\runtime-typedarray.cc
..\..\src\runtime\runtime.cc
..\..\src\scanner-character-streams.cc
..\..\src\serialize.cc
..\..\src\snapshot-common.cc
..\..\src\v8.cc
..\..\src\x64\assembler-x64.cc
..\..\src\x64\codegen-x64.cc
..\..\src\x64\macro-assembler-x64.cc
.5*^"
.5*}!
.9]Ptz
.Compile volatile
.Execute volatile
.GROW
.HcT$@H
.IGNORE_OOB
.code_entry = 
.entry>
.for.
.generator_object
.iterator
.module
.pdata
.result
.text
.tgH
/	D9v
/%Xc!
/* anonymous */
/* unresolved */ 
/* warning: 'function' was not on the heap */ 
/* warning: 'function' was not signed char heap object */ 
/* warning: function'short map was not on the heap */ 
/* warning: function'short map was not signed char valid map */ 
/* warning: no JSFunction object or function name found */ 
/-fX!
// no expression found - inconsistent frame?
// optimized frame
// warning: missing context slot - inconsistent frame?
// warning: no context found - inconsistent frame?
//////////
//////////////////////////////////////////////////////////////
/5$U!
/5O| 
/5jc!
/9]0~H
/=Ad!
/=D`!
/=`unsigned __int128!
/=bo!
/=doublecomplex !
/L;__int128`
/tmp/__v8_gc__
/tmp/perf-%d.map
0123456789ABCDEF
0123456789abcdefghijklmnopqrstuvwxyz
0A\_^][
0A]_^
0A]_^][
0A^A\[
0A^A\^][
0A^A\_
0A^A\_^]
0A^A]A\_^
0A^A]_
0A^][
0A^^[
0A^^]
0A^^]H
0A^_[
0A^_]
0A^_^
0A^_^][
0A_A\]
0A_A]A\][
0A_A]A\_[
0A_A]A\_^][
0A_A^A\
0A_A^A\I
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^][
0A_A^A]
0A_A^A]A\]
0A_A^A]A\^][
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0A_A^A]_^
0A_A^A]_^][
0A_A^[
0A_A^]
0A_A^^
0A_A^_
0A_A^_^]
0A_][
0A_^]
0A__[
0A__]
0A__^
0A__^][
0D;X,
0HcA(H
0HcAD
0HcAl
0HcA|
0HcD$(H
0Ic@0
0_^]H
0u&A;
0x%08llx ; %short 
0x%08llx ; [sp + %double] 
0x%llx
11eU%
2Gx$@2Gx$
2|1);
3.30.0 (candidate)
32 bit value in register is not zero-extended
333333
39~long~*float
3@8ugt
3HcE4
3HcW0D
4$Ic>
4.t^H
6	GGH
65,66,67,68,69,70];
7H;F`t3H;Fht
7H;F`u
7HcK0H
8+yPH
80tVD
8A\_][
8A\_^[
8A^A\_^][
8A^A]
8A^A]_[
8A^^][
8A^_^[
8A_A\_[
8A_A\_^][
8A_A]A\[
8A_A^
8A_A^A\[
8A_A^A\_][
8A_A^A]A\^[
8A_A^A]A\_^][
8A_A^][
8A_A^^]
8A_A^_[
8A_A^_^][
8A_^][
8D$ u
8D$8t
8D$XuUH
8F8tH
8F8tM
8G8t7
8HciTH
8I+^ I+~
8IcG<H
8L;L$8}
8UXt$@
8VPuIH
8XPu>
8\$@unsigned short
8\$Pu;
8\$PuK
8\$YD
8\$`u%
8\$`u*
8\$`ueH
8\$`unsigned short
8]@u/H
8_PuCH
8_StD8_PuOH
8_^][
8u&A;
8|32:
9(u)L
98t3I
9=#$+
9A$~yH
9A(|,
9AD~\D
9AH}#
9C(|%;
9C(|)
9C@}/H
9D$(u
9D$@unsigned short
9D$D}
9Gx~ 
9Gx~(
9L$(|
9L$(}5
9L$(}:
9L$(}?ff
9L$(}YH
9L$(}ZH
9L$0|
9L$0}]
9L$@|
9L$@}-HcT$HL
9L$L}
9L$P~r
9L$hL
9Od~ I
9P,~*H
9Q`uGD
9X,~.H
9Y$~,
9Y4~+3
9Y4~EH
9Y4~HH
9Y4~QH
9YD~TH
9YL~3A
9Yx~ float
9Yx~'H
9Yx~*
9\$0H
9\$@ttH
9\$@unsigned short(L
9]0~-3
9]D~13
9]double~,H
9^,~23
9^X~$I
9^dtI
9_D~0A
9_L~5L
9_x~&
9iL~KL
9i\~^H
9kL~^H
9k|~&H
9n,~p
9qx~!ff
9sP~9f
9sX~2H
9s\~33
9s\~H3
9sd~r3
9st~;L
9t$P~.8\$vt(H
9t$P~98\$vt3H
9uL~IL
9y$~KH
9y,~[H
9y4~[H
9y<~CH
9yd~YL
9{8~6H
9{L~,
9{\~%
9{\~)3
9{\~*
9{\~,H
9{\~-H
9{long~2L
9{long~4L
9{|~rL
9|$(},H
9|$8vcA
9|$Ht
9}4~QH
9}\~0
: is code optimizable: %short, is debugger enabled: %short]
:%FunctionGetName(signed char);
:%StringToNumber(signed char);
:%ToString(%ToPrimitive(bool,0));
:%ToString(%ToPrimitive(signed char,0));
:%double:%double",
:%short->%short 
:(long double?'function* ':'function ');
:A9yL
:__int128 -> DEAD_INPUT
:__int128 -> ID
:short [color=transparent, 
:u1Hc
;.L
;0r*A
;0r.A
;9w%H
;;; -------------------- Jump table --------------------
;;; <@%double,#%double> %short
;;; <@%double,#%double> -------------------- B%double (unreachable/replaced) --------------------
;;; <@%double,#%double> -------------------- B%double%short --------------------
;;; <@%double,#%double> -------------------- Deferred %short --------------------
;;; Allocate local context
;;; Build frame
;;; Deferred code
;;; Destroy frame
;;; End allocate local context
;;; Restore clobbered callee double registers
;;; Safepoint table.
;;; Save clobbered callee double registers
;;; deoptimize at 
;=jhA
;Cu1f9K
;D$du
;F } H
;H;}`
;Jd}7
;T$8H
;T$<}
;UoscHcF
;Z,}>Hc
;\$p|
;]ws^
;_@}ZH
;k\}0I
;long double<euKH
;short\}7I
;t$0}S
;unsigned __int128|}&I
;|$8A
;|$HA
<	u=H
< tD<	unsigned short@
<$HcD$lH
<%sa%short 
<(vIA
<0r^H
<8u/L
<>|{}
<AccessCheckInfo>
<AccessorPair>
<AliasedArgumentsEntry>
<AllocationMemento>
<AllocationSite>
<AuHH
<AuIH
<AuRH
<Box>
<BreakPointInfo>
<ByteArray[
<CallHandlerInfo>
<Code: 
<CodeCache>
<DebugInfo>
<DeclaredAccessorDescriptor>
<DeclaredAccessorInfo>
<ExecutableAccessorInfo>
<ExternalFloat32Array[
<ExternalFloat64Array[
<ExternalInt16Array[
<ExternalInt32Array[
<ExternalInt8Array[
<ExternalUint16Array[
<ExternalUint32Array[
<ExternalUint8Array[
<ExternalUint8ClampedArray[
<FixedArray[
<FixedDoubleArray[
<FixedFloat32Array[
<FixedFloat64Array[
<FixedInt16Array[
<FixedInt32Array[
<FixedInt8Array[
<FixedUint16Array[
<FixedUint32Array[
<FixedUint8Array[
<FixedUint8ClampedArray[
<Foreign>
<FreeSpace[
<FunctionTemplateInfo>
<InterceptorInfo>
<Invalid Source>
<Invalid String>
<Invalid map>
<IufL
<JS %sObject
<JS Array[%u]>
<JS Function
<JS Function 
<JS Generator>
<JS Module>
<JS RegExp>
<JS WeakMap>
<JS WeakSet>
<JSFunctionProxy>
<JSMessageObject>
<JSProxy>
<Map(elements=
<MutableNumber: 
<No Source>
<NoCache>Stub
<Number: 
<ObjectTemplateInfo>
<Odd Oddball>
<Other heap object (
<PolymorphicCodeCache>
<Script>
<SharedFunctionInfo 
<SharedFunctionInfo>
<SignatureInfo>
<String[%u]: 
<String[%u]\: 
<Symbol: 
<TypeFeedbackInfo>
<TypeSwitchInfo>
<Very long string[%u]>
<^wbH
<error>
<false>
<freezing call trap>
<null>
<symbol>
<the hole(nan)>
<the hole>
<true>
<undefined>
<unknown>
<}wXH
=== Stress deopt counter: %u
==== Details ================================================
==== JS stack trace =========================================
==== Key         ============================================
=====================
=LUUUUU
=init_const
=init_const_legacy
=init_let
=init_var
>HcFd
?%_NumberToString(bool)
?%_NumberToString(signed char)
?'anonymous'
?(long double?'*':'')
?:u*H
?:u\H
?=uLH
????????I;
?@8{Pu
?DataViewSetFloat32
?Debug.BreakPositionAlignment.Statement:bool;
?Debug.BreakPositionAlignment.Statement:opt_position_alignment;
?no reason
?void<y5
?wZtP
?{}:Instantiate(unsigned int);
@ %z8
@$HcJ
@'HcA
@.data
@.reloc
@.rsrc
@/HcA
@7HcA
@7I9@7u	3
@8-(3J
@8-l2J
@83t'
@83tZH
@85d]*
@87tuH
@8=short<J
@8H;H u
@8L;H u
@8h!L
@8i unsigned short
@8i8t;D
@8i@u.H
@8k$u
@8kPu0H
@8kPub
@8l$8t
@8l$`
@8nPu\H
@8o$u
@8o8tDA
@8p u
@8r tNH
@8sPt
@8sPu
@8sPu!H
@8sRu
@8sStW@8sPubH
@8t$1t#@8
@8t$8t
@8t$@unsigned short
@8t$p
@8t$pu$H
@8w$u
@8wRu
@8x:u
@8y unsigned short
@8y1t
@8{Pu
@8{unsigned short*
@8|$,
@8|$0
@8|$AH
@8|$`
@8|unsigned char@
@8~$u
@8~8t
@8~@u
@8~Pu
@@wx@
@A\_[
@A^A\]
@A^A\_
@A^A\_^]
@A^A][
@A^A]^
@A^A]_][
@A^][
@A^^]
@A^_]
@A^_^
@A^_^[]
@A^_^][
@A_A\]
@A_A\^
@A_A]A\
@A_A]A\^[H
@A_A]A\_[
@A_A]A\_]
@A_A]A\_^
@A_A][
@A_A]^
@A_A]_][
@A_A]_^[
@A_A^A\
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A\_^][
@A_A^A]
@A_A^A]A\^
@A_A^A]A\_
@A_A^A]A\_^[
@A_A^A]A\_^]
@A_A^A]_^
@A_A^A]_^][
@A_A^[
@A_A^]
@A_A^^
@A_A^_
@A_A^_^[
@A_A^_^]
@A_][
@A__[
@A__^][
@HHcHHH
@HcAlH
@Hc\$p
@Ic@,
@LHcHLA
@LcYd@2
@SATAUAVAWH
@SATAUAVH
@SATAUAWH
@SATAVAWH
@SATAWH
@SATH
@SAUAVH
@SAUAWH
@SAUH
@SAVAWH
@SAVH
@SAWH
@SUATAVAWH
@SUAUAVAWH
@SUAUAWH
@SUAUH
@SUAVAWH
@SUAVH
@SUAWH
@SUVATAVH
@SUVAVH
@SUVAWH
@SUVH
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWATH
@SUVWAUAVAWH
@SUVWAUH
@SUVWAVAWH
@SUVWAVH
@SUVWAWH
@SUVWH
@SUWATH
@SUWAUAVH
@SUWAUAWH
@SUWAVAWH
@SUWAVH
@SUWH
@SVATAUAVH
@SVATAUAWH
@SVAVH
@SVAWH
@SVWATAUAVAWH
@SVWATAWH
@SVWATH
@SVWAUAWH
@SVWAVAWH
@SVWAVH
@SVWH
@SVWLc
@SWATAUAWH
@SWATAWH
@SWATH
@SWAUAVH
@SWAVH
@SWAWH
@UATAUAVAWH
@UATAV
@UATAVAWH
@UATAWH
@UAUAVH
@UAVAWH
@UAVH
@UAWH
@USATAVAWH
@USATAWH
@USVATAUAVAWH
@USVAVH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAUH
@USVWATAVAWH
@USVWATAVH
@USVWATAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@USWATAUAVAWH
@USWATAUAVH
@USWATAVAWH
@USWH
@UVATAUAVH
@UVATAUAWH
@UVATAUH
@UVATAVAWH
@UVAVAWH
@UVAVH
@UVAWH
@UVWATAUAVAW
@UVWATAUAVAWH
@UVWATAWH
@UVWAUAVH
@UVWAVAWH
@UVWAWH
@UVWH
@UWATAUH
@UWATAVAWH
@UWAVH
@VATH
@VAUAVH
@VAUH
@VAVAWH
@VAVH
@VAWH
@VWATAVAWH
@VWAUAWH
@VWAUH
@VWAVH
@VWAWH
@WATAUAVAWH
@WATAUAVH
@WATAUAWH
@WATH
@WAUAVH
@WAUH
@WAVAWH
@WAWH
@XH;Bxt
@_^]H
@hHcH
@hHcH$H
@long@8iPu9
@long@8iPu@
@lu>A
@luA@
@u&A;
@ubHcF4
@wx@
A D;A
A H+A
A H+A(H
A H;G
A HcQ,;P$}
A HcQ,H
A LcBtJ
A builtin from the snapshot
A call IC from the snapshot
A file to write the raw context snapshot bytes to. (mksnapshot only)
A file to write the raw snapshot bytes to. (mksnapshot only)
A filename with extra code to be included in the snapshot (mksnapshot only)
A keyed load IC from the snapshot
A keyed store IC from the snapshot
A load IC from the snapshot
A store IC from the snapshot
A stub from the snapshot
A#@0A
A#@0A;@,u
A#F@A
A#F@A;F<uMD
A(;B(u*
A(HcQ4H
A(HcR
A(this,0,ac);
A(unsigned char,K,unsigned int);
A(unsigned char,int,J);
A+N,A
A,9A0
A0	0H
A09(u
A0D9 u
A0D90u
A0E90u
A3@C%
A49A0u0
A8.tML
A81t@@8r
A86t[L
A8>t.M
A8>tKA
A8D9h
A8Hcx
A8I;Q0~
A8L$H
A8Lcx
A8h@u:
A8v	unsigned short
A8xTt
A8y<H
A9F$~
A9F0|';
A9Q`D
A9]double~33
A9^,~83
A9^@|unsigned __int128
A9^D~UI
A9^L~
A9nL~
A9o,~jE3
A9o,~t3
A9oL~
A9o\~z3
A9v,~tH
A9wD~JE3
A9xDu
A9}@~pM
A9~L~(
A;A\|
A;Ad~
A;B<|
A;BD|
A;F$|
A;P$|
A;P4|
A;PD|
A;Q4|
A;U\|
A;Wd|
A;Z(|
A;]double|
A;^,|
A;^D|
A;^L|
A;_<|
A;_\|
A;double volatile|
A;nD|
A;unsigned __int128,|
A;unsigned __int128\|
A;unsigned long@|
A;vd|
A;void,|
A;wD|
A;wchar_t,|
A;wchar_t\}+H
A;~4|
A=%LiveEditReplaceScript(script,new_source,
A=(D<<12)+(E<<6)+H;
A=(D<<18)+(E<<12)+(H<<6)+J;
A=(D<<6)+E;
A=(void 0);
A@HcH
AArch64 instruction statistics log file.
AArch64 instruction statistics logging period.
ACCESSOR_PAIR_TYPE
ACCESS_CHECK_INFO_TYPE
AD9A@u
ADHcA
AHcGdA;
ALIASED_ARGUMENTS_ENTRY_TYPE
ALLOCATION_MEMENTO_TYPE
ALLOCATION_SITE_TYPE
API call returned invalid object
API fatal error handler returned after process out of memory
APPLY_PREPARE
ARROW
ASSIGN
ASSIGN_ADD
ASSIGN_BIT_AND
ASSIGN_BIT_OR
ASSIGN_BIT_XOR
ASSIGN_DIV
ASSIGN_MOD
ASSIGN_MUL
ASSIGN_SAR
ASSIGN_SHL
ASSIGN_SHR
ASSIGN_SUB
ATAUAVAWH
ATAUAVH
ATAUAWH
ATAVAWH
AUAVAWH
AUAVH
AVAILABLE_FOR_PATCH:1,
AVAWH
AWH;E
AXL9x
A]A\_][
A]A\_^[]
A^A\[]
A^A\]
A^A\^]
A^A\_
A^A\_^[]
A^A\_^]
A^A]A\[]
A^A]A\^[]
A^A]A\^]
A^A]A\_^[]
A^A]_]
A^A]_^[]
A^A]_^]
A^^[]
A^_[]
A^_^[]
A^_^]
A^_^][
A_A\[]
A_A\_^[]
A_A\_^]
A_A]A\_^[]
A_A][]
A_A^A\
A_A^A\I
A_A^A\[]
A_A^A\]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]A\]
A_A^A]A\^
A_A^A]A\^[]
A_A^A]A\^]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A]^[
A_A^A]^][
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^]
A_A^^]
A_A^_
A_A^_[
A_A^_^[]
A_A^_^]
A_A^_^][
A_^[]
A__^]
AbnormalExit
Abort
AbortJS
AccessArgumentsAt
Accessors::ArgumentsIteratorGetter
Accessors::ArgumentsIteratorSetter
Accessors::ArrayLengthGetter
Accessors::ArrayLengthSetter
Accessors::FunctionArgumentsGetter
Accessors::FunctionArgumentsSetter
Accessors::FunctionCallerGetter
Accessors::FunctionCallerSetter
Accessors::FunctionLengthGetter
Accessors::FunctionLengthSetter
Accessors::FunctionNameGetter
Accessors::FunctionNameSetter
Accessors::FunctionPrototypeGetter
Accessors::FunctionPrototypeSetter
Accessors::ScriptColumnOffsetGetter
Accessors::ScriptColumnOffsetSetter
Accessors::ScriptCompilationTypeGetter
Accessors::ScriptCompilationTypeSetter
Accessors::ScriptContextDataGetter
Accessors::ScriptContextDataSetter
Accessors::ScriptEvalFromFunctionNameGetter
Accessors::ScriptEvalFromFunctionNameSetter
Accessors::ScriptEvalFromScriptGetter
Accessors::ScriptEvalFromScriptPositionGetter
Accessors::ScriptEvalFromScriptPositionSetter
Accessors::ScriptEvalFromScriptSetter
Accessors::ScriptIdGetter
Accessors::ScriptIdSetter
Accessors::ScriptLineEndsGetter
Accessors::ScriptLineEndsSetter
Accessors::ScriptLineOffsetGetter
Accessors::ScriptLineOffsetSetter
Accessors::ScriptNameGetter
Accessors::ScriptNameSetter
Accessors::ScriptSourceGetter
Accessors::ScriptSourceMappingUrlGetter
Accessors::ScriptSourceMappingUrlSetter
Accessors::ScriptSourceSetter
Accessors::ScriptSourceUrlGetter
Accessors::ScriptSourceUrlSetter
Accessors::ScriptTypeGetter
Accessors::ScriptTypeSetter
Accessors::StringLengthGetter
Accessors::StringLengthSetter
AdHcAd;A
AdHcydH
Add live range %double to active
Add live range %double to inactive
Add live range %double to unhandled at %double
Add live range %double to unhandled at start
Add live range %double to unhandled unsorted at end
Add to live range %double interval [%double %double[
Add to live range %double use position %double
AddElement
AddNamedProperty
AddPropertyForTemplate
AfterCompile:5,
AlignedAlloc
Alignment marker expected
All spaces,         used: %6lld KB, available: %6lld KB, committed: %6lld KB
Allocate
AllocateBlockContext
AllocateHeapNumber
AllocateInNewSpace
AllocateInTargetSpace
Allocating fixed reg for op %double
Allocation failed - process out of memory
Allocation is not double aligned
AllocationSite requested no inlining.
AllocationSite(%p): (created, found, ratio) (%double, %double, %float) %short => %short
AllocationSite: JSArray %p boilerplate %short updated %short->%short
AllocationSite: JSArray %p site updated %short->%short
AllowJavascriptExecution::IsAllowed(isolate)
Always deopt
An IC handler from the snapshot
Analyzing block B%double
Analyzing block B%double%short
Analyzing data-flow in B%double
AoH;C`
Apply
ApplyArguments
ApplySingleChunkPatch:ApplySingleChunkPatch
Arguments
Arguments object value in signed char test context
ArgumentsAccessStub
ArgumentsAccessStub_
ArgumentsAdaptorTrampoline
ArgumentsElements
ArgumentsLength
ArgumentsObject
Arguments_string
Array
Array boilerplate creation failed
Array index constant value too big
Array(
Array.prototype
Array::New
ArrayBuffer
ArrayBuffer already externalized
ArrayBufferAllocator might only be set once
ArrayBufferGetByteLength
ArrayBufferInitialize
ArrayBufferIsView
ArrayBufferNeuter
ArrayBufferSliceImpl
ArrayBufferViewGetByteLength
ArrayBufferViewGetByteOffset
ArrayCode
ArrayConcat
ArrayConcatJS
ArrayConstructor
ArrayConstructorStub
ArrayElements
ArrayLengths
ArrayMirror.prototype.indexedPropertiesFromRange=function(opt_from_index,
ArrayMirror.prototype.length=function(){
ArrayNArgumentsConstructorStub
ArrayNoArgumentConstructorStub
ArrayPop
ArrayPush
ArrayShift
ArraySingleArgumentConstructorStub
ArraySlice
ArraySplice
ArrayUnshift
ArrayValues
Assembler::GrowBuffer
Assert("Unreachable",false);
Assert(N==I.length);
Assert(aK==aJ.length);
Assert(aX.status!=a.DAMAGED,
Assert(false,"Cannot translate position in changed area");
Assigning blocked reg %short to live range %double
Assigning free reg %short to live range %double
Assigning preferred reg %short to live range %double
Assignment to LOOKUP variable
Assignment to arguments
Assignment to let variable before initialization
Assignment to parameter in arguments object
Assignment to parameter, function uses arguments object
AsyncTaskEvent.prototype.id=function(){
AsyncTaskEvent.prototype.name=function(){
AsyncTaskEvent.prototype.type=function(){
AsyncTaskEvent:8,
Attempt to print stack while printing stack (double fault)
Attempt to use undefined cache
AuthA
AvailableLocalesOf
Average per kB source
B	$ A
B	$ E
B 8A u
B 9A u
B 9A u>
B 9A unsigned short
B H9A u
B H9A u:
B u(H
B"f9A"u
B$9A$u
B$9A$u6
B%double checkmaps-table %short from B%double:
B%double checkmaps-table merged with B%double table:
B%double | B%double on 
B(9A(u
B(9A(u*H
B(H9A(u
B(tGB
B(u(H
B09A0u2
B0D9 u
B0D98u
B0u(H
B0u=Lc
B88XttIH
B89A8u
B8u(H
B@9A@u*H
B@u(H
BHu(H
BINARY_OP_IC
BIT_AND
BIT_NOT
BIT_OR
BIT_XOR
BL$(A
BLOCKED_ACTIVE_GENERATOR:7
BLOCKED_ON_ACTIVE_STACK:2,
BLOCKED_ON_OTHER_STACK:3,
BLOCKED_UNDER_GENERATOR:6,
BLOCKED_UNDER_NATIVE_CODE:4,
BOX_TYPE
BREAK
BREAK_POINT_INFO_TYPE
BUILTIN
BX+X(+X$
BX;X$}
BYTE_ARRAY_TYPE
B^(I;
B`9A`unsigned short
B`9F`u
B`H9A`u
BackRefSer
BackRefSerWithSkip
BackRefSkipDistance
BackingStoreFields
Backtracking from block B%double to block bool%double
Bad value context for arguments object value
Bad value context for arguments value
Bailed out due to dependency change
Bailout was not prepared
BasicJSONStringify
BeforeCompile:4,
Begin HeapObjectsMap::UpdateHeapObjectsMap. map has %double entries.
Begin compiling method 
BeginPerformSplice
BeginPerformSplice(signed char);
BeginPerformSplice(this);
BinaryOpICStub
BinaryOpICWithAllocationSiteStub
BinaryOpWithAllocationSiteStub
BinaryStub_GenerateFloatingPointCode
Bitwise
Block:5};
BlockEntry
BoE3AoA
Boolean
Boolean(disable_break),
BooleanMirror.prototype.toText=function(){
BooleanNot
BooleanObject::BooleanValue
BooleanObject::New
BooleanToNumber
Boolean_string
Booleanize
Both registers were smis in SelectNonSmi
BoundFunctionGetBindings
BoundsCheck
BoundsCheckBaseIndexInformation
Bp9Apu
BpH9Apu
Branch
Break
BreakEvent.prototype.breakPointsHit=function(){
BreakEvent.prototype.eventType=function(){
BreakEvent.prototype.func=function(){
BreakEvent.prototype.sourceColumn=function(){
BreakEvent.prototype.sourceLine=function(){
BreakEvent.prototype.sourceLineText=function(){
BreakEvent.prototype.toJSONProtocol=function(){
BreakForCommand:9};
BreakIteratorAdoptText
BreakIteratorBreakType
BreakIteratorCurrent
BreakIteratorFirst
BreakIteratorNext
BreakPoint.prototype.active=function(){
BreakPoint.prototype.condition=function(){
BreakPoint.prototype.disable=function(){
BreakPoint.prototype.enable=function(){
BreakPoint.prototype.func=function(){
BreakPoint.prototype.hit_count=function(){
BreakPoint.prototype.ignoreCount=function(){
BreakPoint.prototype.isTriggered=function(signed char){
BreakPoint.prototype.number=function(){
BreakPoint.prototype.script_break_point=function(){
BreakPoint.prototype.setCondition=function(signed char){
BreakPoint.prototype.setIgnoreCount=function(signed char){
BreakPoint.prototype.source_position=function(){
BreakPosition:1
Bt9Atu
Buffer
Builtin
Builtins::ArgumentsAdaptorTrampoline
Builtins::ArrayCode
Builtins::ArrayConcat
Builtins::ArrayPop
Builtins::ArrayPush
Builtins::ArrayShift
Builtins::ArraySlice
Builtins::ArraySplice
Builtins::ArrayUnshift
Builtins::CallConstructStub_DebugBreak
Builtins::CallConstructStub_Recording_DebugBreak
Builtins::CallFunctionStub_DebugBreak
Builtins::CallICStub_DebugBreak
Builtins::CompareNilIC_DebugBreak
Builtins::CompileLazy
Builtins::CompileOptimized
Builtins::CompileOptimizedConcurrent
Builtins::EmptyFunction
Builtins::FrameDropper_LiveEdit
Builtins::FunctionApply
Builtins::FunctionCall
Builtins::GeneratorPoisonPill
Builtins::HandleApiCall
Builtins::HandleApiCallAsConstructor
Builtins::HandleApiCallAsFunction
Builtins::HandleApiCallConstruct
Builtins::Illegal
Builtins::InOptimizationQueue
Builtins::InternalArrayCode
Builtins::InterruptCheck
Builtins::JSConstructEntryTrampoline
Builtins::JSConstructStubApi
Builtins::JSConstructStubGeneric
Builtins::JSEntryTrampoline
Builtins::KeyedLoadIC_DebugBreak
Builtins::KeyedLoadIC_Generic
Builtins::KeyedLoadIC_Initialize
Builtins::KeyedLoadIC_Miss
Builtins::KeyedLoadIC_PreMonomorphic
Builtins::KeyedLoadIC_String
Builtins::KeyedStoreIC_DebugBreak
Builtins::KeyedStoreIC_Generic
Builtins::KeyedStoreIC_Generic_Strict
Builtins::KeyedStoreIC_Initialize
Builtins::KeyedStoreIC_Initialize_Strict
Builtins::KeyedStoreIC_Megamorphic
Builtins::KeyedStoreIC_Megamorphic_Strict
Builtins::KeyedStoreIC_Miss
Builtins::KeyedStoreIC_PreMonomorphic
Builtins::KeyedStoreIC_PreMonomorphic_Strict
Builtins::KeyedStoreIC_SloppyArguments
Builtins::LoadIC_DebugBreak
Builtins::LoadIC_Getter_ForDeopt
Builtins::LoadIC_Miss
Builtins::MakeOctogenarianCodeYoungAgainEvenMarking
Builtins::MakeOctogenarianCodeYoungAgainOddMarking
Builtins::MakeQuadragenarianCodeYoungAgainEvenMarking
Builtins::MakeQuadragenarianCodeYoungAgainOddMarking
Builtins::MakeQuinquagenarianCodeYoungAgainEvenMarking
Builtins::MakeQuinquagenarianCodeYoungAgainOddMarking
Builtins::MakeSeptuagenarianCodeYoungAgainEvenMarking
Builtins::MakeSeptuagenarianCodeYoungAgainOddMarking
Builtins::MakeSexagenarianCodeYoungAgainEvenMarking
Builtins::MakeSexagenarianCodeYoungAgainOddMarking
Builtins::MarkCodeAsExecutedOnce
Builtins::MarkCodeAsExecutedTwice
Builtins::NotifyDeoptimized
Builtins::NotifyLazyDeoptimized
Builtins::NotifySoftDeoptimized
Builtins::NotifyStubFailure
Builtins::NotifyStubFailureSaveDoubles
Builtins::OnStackReplacement
Builtins::OsrAfterStackCheck
Builtins::PlainReturn_LiveEdit
Builtins::Return_DebugBreak
Builtins::Slot_DebugBreak
Builtins::StackCheck
Builtins::StoreIC_DebugBreak
Builtins::StoreIC_Miss
Builtins::StoreIC_Setter_ForDeopt
Builtins::StrictModePoisonPill
Builtins::StringConstructCode
Bv(H;
B|9A|tL3
C 9C(|#;
C 9C(|%;
C 9C(|'
C 9C(|)
C D;C
C H+C
C H+C(H
C H;C0s[H+C
C HcK0H
C(A9F(u
C(I9C
C,9C(
C,A9v
C,D;C(r 
C/J9D'/
C0HcK0
C4+C0
C49C0u
C49C0uMH
C49C0uWH
C49C0u[H
C49C0|/
C8D9<(u
C8H;(tfH
C8HcK0;H
C:\Windows\Temp\serdes
C<9C8
C@9C8|
C@9C8}float
C@H90t%H
C@H98t%H
C@H9G
CALCULATE_ENTRY_ADDRESS
CALL_AND_RETRY_LAST
CALL_FUNCTION_PROXY
CALL_FUNCTION_PROXY_AS_CONSTRUCTOR
CALL_HANDLER_INFO_TYPE
CALL_IC
CALL_NON_FUNCTION
CALL_NON_FUNCTION_AS_CONSTRUCTOR
CATCH
CDHcN8
CDIcN8
CELL_SPACE
CELL_TYPE
CEntryStub
CH;P,|
CHANGED:"changed",
CHECK(%short) failed
CHECK_EQ(%short, %short) failed
CHECK_NE(%short, %short) failed
CLASS
CODE_CACHE_TYPE
CODE_SPACE
CODE_TYPE
COLON
COMMA
COMPARE
COMPARE_IC
COMPARE_NIL_IC
CONDITIONAL
CONST
CONSTANT_POOL_ARRAY_TYPE
CONS_ONE_BYTE_STRING_TYPE
CONS_STRING_TYPE
CONTINUE
CPU profiler sampling interval in microseconds
CXH9(unsigned short
CXH98t
CXH9CPt
CXH9CPt!float
CXH9CPt"
CXH9CPt%ff
CXH9CPt&fff
CXH9CPu
CXH9FXt
CXH;G
CXH;{Xt
CXHc8H
C`H9A
C`H;{`H
Call to signed char JavaScript runtime function
CallApiFunctionStub
CallApiGetterStub
CallConstructStub
CallConstructStub_DebugBreak
CallConstructStub_Recording_DebugBreak
CallDebugBreak
CallDebugPrepareStepIn
CallFunction
CallFunctionStub
CallFunctionStub_Args
CallFunctionStub_DebugBreak
CallIC
CallIC (custom handler)
CallICStub
CallICStub_DebugBreak
CallIC_ArrayStub
CallInitialize
CallJSFunction
CallMegamorphic
CallMiss
CallNew
CallNewArray
CallNormal
CallPreMonomorphic
CallRuntime
CallStub
CallWithDescriptor
Callback
Calls
Cannot create signed char handle without signed char HandleScope
Cannot exit non-entered context
Cannot find required extension
Cannot open file %short for writing.
Cannot translate position in changed area
CanonicalizeLanguageTag
CapturedObject
Catch:4,
CdHc{double;{
Cell for 
Cell space,         used: %6lld KB, available: %6lld KB, committed: %6lld KB
Change
ChangeBitToBool
ChangeBoolToBit
ChangeBreakOnException
ChangeFloat32ToFloat64
ChangeFloat64ToInt32
ChangeFloat64ToTagged
ChangeFloat64ToUint32
ChangeInt32ToFloat64
ChangeInt32ToInt64
ChangeInt32ToTagged
ChangeTaggedToFloat64
ChangeTaggedToInt32
ChangeTaggedToUint32
ChangeUint32ToFloat64
ChangeUint32ToTagged
ChangeUint32ToUint64
Changing #%double %short representation %short -> %short based on %short
CharAt
CharFromCode
Check icache flushes in ARM and MIPS simulator
CheckDateCacheCurrent();
CheckExecutionState
CheckHeapObject
CheckInstanceType
CheckIsBootstrapping
CheckMapValue
CheckMaps
CheckMaps #%double at B%double narrowed
CheckSmi
CheckStackActivations(void,change_log);
CheckValue
Checking instruction int
Circular extension dependency
ClampToUint8
Class literal
Class(
ClassGetSourceCode
ClassOfTestAndBranch
ClearBreakPoint
ClearFunctionTypeFeedback
ClearStepping
Closure:3,
Code generation failed
Code generation from strings disallowed for this context
Code object not properly patched
Code space,         used: %6lld KB, available: %6lld KB, committed: %6lld KB
Code::FUNCTION
Code::MakeCodeYoung
Code::MarkCodeAsExecuted
Code::OPTIMIZED_FUNCTION
CodeRange
CodeStub
CodeStub key
CollectDamaged(p);
CollectDamaged(q.children[r]);
CollectGarbage
CollectNew(p.unmatched_new_nodes);
CollectNew(unsigned short[r].children);
CollectStackTrace
Collected %double evacuation candidates for space %short
CommandProcessorResolveValue:DebugCommandProcessor.resolveValue_
Committing semi space failed.
Compact code space on full incremental collections
Compact code space on full non-incremental collections
CompareGeneric
CompareHoleAndBranch
CompareICStub
CompareMap
CompareMap #%double for #%double at B%double can'unsigned short be eliminated: ambiguous set of maps
CompareMinusZeroAndBranch
CompareNilICStub
CompareNilIC_DebugBreak
CompareNumericAndBranch
CompareObjectEqAndBranch
CompareStrings:CompareStrings,
CompileError:6,
CompileEvent.prototype.eventType=function(){
CompileEvent.prototype.script=function(){
CompileEvent.prototype.toJSONProtocol=function(){
CompileForOnStackReplacement
CompileLazy
CompileLoadInitialize
CompileLoadPreMonomorphic
CompileOptimized
CompileOptimizedConcurrent
CompileStoreGeneric
CompileStoreInitialize
CompileStoreMegamorphic
CompileStorePreMonomorphic
CompileString
Compiled: %double functions with %double byte source size in %fms.
Compiler::EnsureDeoptimizationSupport(info)
Compiling method %short using hydrogen
Compiling stub %short using hydrogen
Compound assignment to lookup slot
Concurrent recompilation has been disabled for tracing.
ConfigureTemplateInstance
ConfigureTemplateInstance(__float128,signed char);
ConfigureTemplateInstance(unsigned long,signed char);
Constant
Constant global variable assignment
Constant length outside of valid inlining range.
Constant(
ConstructDouble
Context
Context specialized
Context(
Context-allocated arguments
Context::New
ContextMirror.prototype.data=function(){
ContextSlots
Control flow range infer %double %short %double
Copy buffers overlap
CopyErrorPositionToDetails(long double,unsigned int);
Could not convert to ArrayBuffer
Could not convert to ArrayBufferView
Could not convert to BooleanObject
Could not convert to DataView
Could not convert to Float32Array
Could not convert to Float64Array
Could not convert to Int16Array
Could not convert to Int32Array
Could not convert to Int8Array
Could not convert to NumberObject
Could not convert to StringObject
Could not convert to SymbolObject
Could not convert to TypedArray
Could not convert to Uint16Array
Could not convert to Uint32Array
Could not convert to Uint8Array
Could not convert to Uint8ClampedArray
Could not convert to array
Could not convert to date
Could not convert to external
Could not convert to function
Could not convert to name
Could not convert to number
Could not convert to object
Could not convert to promise
Could not convert to promise resolver
Could not convert to regular expression
Could not convert to string
Could not convert to symbol
Could not find code for optimized function
Could not generate +0.0
Could not generate -0.0
Counters::alive_after_last_gc
Counters::arguments_adaptors
Counters::array_function_native
Counters::array_function_runtime
Counters::bounds_checks_eliminated
Counters::bounds_checks_hoisted
Counters::call_const
Counters::call_const_fast_api
Counters::call_const_interceptor
Counters::call_const_interceptor_fast_api
Counters::call_global_inline
Counters::call_global_inline_miss
Counters::call_initialize_stubs
Counters::call_megamorphic_stubs
Counters::call_miss
Counters::call_normal_stubs
Counters::call_premonomorphic_stubs
Counters::cell_space_bytes_available
Counters::cell_space_bytes_committed
Counters::cell_space_bytes_used
Counters::code_space_bytes_available
Counters::code_space_bytes_committed
Counters::code_space_bytes_used
Counters::code_stubs
Counters::compilation_cache_hits
Counters::compilation_cache_misses
Counters::constructed_objects
Counters::constructed_objects_runtime
Counters::contexts_created_by_snapshot
Counters::contexts_created_from_scratch
Counters::cow_arrays_converted
Counters::cow_arrays_created_runtime
Counters::cow_arrays_created_stub
Counters::elements_to_dictionary
Counters::enum_cache_hits
Counters::enum_cache_misses
Counters::fast_new_closure_install_optimized
Counters::fast_new_closure_total
Counters::fast_new_closure_try_optimized
Counters::for_in
Counters::gc_compactor_caused_by_oldspace_exhaustion
Counters::gc_compactor_caused_by_promoted_data
Counters::gc_compactor_caused_by_request
Counters::gc_last_resort_from_handles
Counters::gc_last_resort_from_js
Counters::global_handles
Counters::inlined_copied_elements
Counters::keyed_call_generic_lookup_cache
Counters::keyed_call_generic_lookup_dict
Counters::keyed_call_generic_slow
Counters::keyed_call_generic_slow_load
Counters::keyed_call_generic_smi_dict
Counters::keyed_call_generic_smi_fast
Counters::keyed_call_miss
Counters::keyed_load_external_array_slow
Counters::keyed_load_generic_lookup_cache
Counters::keyed_load_generic_slow
Counters::keyed_load_generic_smi
Counters::keyed_load_generic_symbol
Counters::keyed_load_miss
Counters::keyed_load_polymorphic_stubs
Counters::keyed_store_external_array_slow
Counters::keyed_store_polymorphic_stubs
Counters::lo_space_bytes_available
Counters::lo_space_bytes_committed
Counters::lo_space_bytes_used
Counters::load_miss
Counters::map_space_bytes_available
Counters::map_space_bytes_committed
Counters::map_space_bytes_used
Counters::math_acos
Counters::math_asin
Counters::math_atan
Counters::math_atan2
Counters::math_exp
Counters::math_floor
Counters::math_log
Counters::math_pow
Counters::math_round
Counters::math_sqrt
Counters::megamorphic_stub_cache_misses
Counters::megamorphic_stub_cache_probes
Counters::megamorphic_stub_cache_updates
Counters::memory_allocated
Counters::named_load_global_stub
Counters::named_store_global_inline
Counters::named_store_global_inline_miss
Counters::negative_lookups
Counters::negative_lookups_miss
Counters::new_space_bytes_available
Counters::new_space_bytes_committed
Counters::new_space_bytes_used
Counters::normalized_maps
Counters::number_of_symbols
Counters::number_to_string_native
Counters::number_to_string_runtime
Counters::objs_since_last_full
Counters::objs_since_last_young
Counters::old_data_space_bytes_available
Counters::old_data_space_bytes_committed
Counters::old_data_space_bytes_used
Counters::old_pointer_space_bytes_available
Counters::old_pointer_space_bytes_committed
Counters::old_pointer_space_bytes_used
Counters::pc_to_code
Counters::pc_to_code_cached
Counters::property_cell_space_bytes_available
Counters::property_cell_space_bytes_committed
Counters::property_cell_space_bytes_used
Counters::props_to_dictionary
Counters::regexp_entry_native
Counters::regexp_entry_runtime
Counters::runtime_profiler_ticks
Counters::script_wrappers
Counters::soft_deopts_executed
Counters::soft_deopts_inserted
Counters::soft_deopts_requested
Counters::stack_interrupts
Counters::store_buffer_compactions
Counters::store_buffer_overflows
Counters::store_normal_hit
Counters::store_normal_miss
Counters::string_add_make_two_char
Counters::string_add_native
Counters::string_add_runtime
Counters::string_add_runtime_ext_to_one_byte
Counters::string_compare_native
Counters::string_compare_runtime
Counters::string_ctor_cached_number
Counters::string_ctor_calls
Counters::string_ctor_conversions
Counters::string_ctor_gc_required
Counters::string_ctor_string_value
Counters::string_table_capacity
Counters::sub_string_native
Counters::sub_string_runtime
Counters::total_compile_size
Counters::total_compiled_code_size
Counters::total_eval_size
Counters::total_full_codegen_source_size
Counters::total_load_size
Counters::total_parse_size
Counters::total_preparse_skipped
Counters::total_preparse_symbols_skipped
Counters::total_stubs_code_size
Counters::write_barriers_dynamic
Counters::write_barriers_static
Counters::zone_segment_bytes
CpuFeatures::FlushICache
CpuProfiler::is_profiling
Create graph
CreateAllocationSiteStub
CreateApiFunction
CreateArrayLiteral
CreateArrayLiteralStubBailout
CreateBreakIterator
CreateCollator
CreateDate
CreateDateTimeFormat
CreateGlobalPrivateOwnSymbol
CreateJSFunctionProxy
CreateJSGeneratorObject
CreateJSProxy
CreateNumberFormat
CreateObjectLiteral
CreatePrivateOwnSymbol
CreatePrivateSymbol
CreateSymbol
D	&Hc
D	3Hc
D	3Ic
D	6Hc
D	7Hc
D	B(H
D!l$h3
D$ 	A
D$ 	D
D$ 	E3
D$ *!
D$ A9L
D$ A;
D$ D8
D$ E3
D$ E;
D$ H#
D$ H+
D$ H9
D$ H9AXu
D$ H9D$ u
D$ H9D$(
D$ H9l$ ulE3
D$ H9l$ unsigned short
D$ H9t$ ufE3
D$ H9t$ unsigned short
D$ H;
D$ Hc
D$ HcC
D$ HcF
D$ HcFd
D$ HcN
D$ HcQ$H
D$ I;
D$ Ic
D$ K!
D$ L9
D$ L9L$ unsigned short
D$ Lc
D$ LcD$8H
D$ fH
D$ fI
D$ tN
D$ x.
D$!<	tr
D$(A9h
D$(A;
D$(E3
D$(E;
D$(H%
D$(H+
D$(H9D$(
D$(H9T$(
D$(H;
D$(H;C@short
D$(H;G@short
D$(Hc
D$(HcAtH
D$(HcB
D$(HcD$`H
D$(HcF
D$(I;
D$(Ic
D$(L;
D$(L;t$8
D$(fH
D$(tN
D$,M;
D$,t0H
D$,unsigned short&H
D$,unsigned short'I
D$,unsigned short(H
D$,unsigned short)H
D$,unsigned short)I
D$,unsigned short*I
D$,unsigned short-H
D$,unsigned short-I
D$,unsigned short:I
D$,unsigned short=I
D$0		
D$0			
D$0*!
D$0+A
D$0,D
D$0<	w0
D$0A+
D$0D9L
D$0D;
D$0DD
D$0E3
D$0H%
D$0H+
D$0H+D$@H
D$0H+D$xH
D$0H9
D$0H9D$0t
D$0H;
D$0H;A@short
D$0H;C@short
D$0H;C@sr
D$0H;G@short
D$0Hc
D$0HcA
D$0HcAD
D$0HcH
D$0HcS
D$0I;
D$0Ic
D$0K!
D$0L9
D$0L;
D$0LcM
D$0M;
D$0M;p
D$0NA
D$0Na
D$0t<H
D$0tR
D$0u(D
D$0uA
D$1D8|$1
D$2A;
D$4	=
D$8-1
D$89B
D$8A;
D$8D9eH
D$8D;
D$8E+
D$8E3
D$8H+
D$8H+D$@H
D$8H98u
D$8H9L$8u
D$8H9\$(
D$8H;
D$8H;C@short
D$8H;F@short
D$8H;G@short
D$8H=
D$8Hc
D$8HcE
D$8I+
D$8I;
D$8Ic
D$8L9
D$8LcT$@L
D$8fH
D$8ff
D$8fff
D$8tR
D$<Hc
D$<unsigned short)H
D$<unsigned short,I
D$@	@
D$@9X
D$@;X
D$@B9T
D$@D8x@u7H
D$@D9?}
D$@D;
D$@E3
D$@E;
D$@H%
D$@H+
D$@H90u$L
D$@H9D$@u
D$@H9D$@unsigned short=
D$@H;
D$@H;A@short
D$@H;C@short
D$@H;E@short
D$@H;F@short
D$@H;G@short
D$@Hc
D$@HcH
D$@I;
D$@K!
D$@L;
D$@L;D$Hu
D$@L;T$h
D$@L;U
D$@Lc
D$@MH
D$@N!
D$@t5L
D$@u	
D$@unsigned short,
D$@unsigned short-H
D$DD9T$X
D$DHcAl
D$H			
D$H				
D$H9x
D$H;long long
D$HA+
D$HD9 }
D$HE3
D$HH%
D$HH+D$8H
D$HH+D$PH
D$HH9
D$HH;
D$HH;C@short
D$HH;G@short
D$HHcC
D$HHcH
D$HL;
D$HfH
D$Hff
D$Hu	D
D$HuoH
D$L	H
D$L0A
D$LQJ
D$P%H
D$P*!
D$P9Y
D$PA;
D$PD9`
D$PE3
D$PH+D$XH
D$PH;
D$PH;A@short
D$PH;C@short
D$PH;F@short
D$PH;G@short
D$PHc
D$PHcD$hH
D$PHcSxH
D$PI;
D$PI;F@short
D$PIc
D$PIcP
D$PIcP$H
D$PK!
D$PL+ChD
D$PL+ChH
D$PL9t$Pt
D$PL;
D$PN1
D$Pff
D$Q+H
D$X;(t.H
D$X;(t3H
D$XD+
D$XE3
D$XH+
D$XH;
D$XH;C@short
D$XHc
D$XHcx
D$XI;
D$XIcF,H
D$XL9L$Xt
D$XuoH
D$ZHcC
D$\Hc
D$`%H
D$`)1
D$`A8t$
D$`A;
D$`D87A
D$`D;
D$`D;short
D$`E3
D$`H#
D$`H;
D$`H;A@short
D$`H;C@short
D$`H;E@short
D$`H;G@short
D$`Hc
D$`HcH
D$`Hcw
D$`I;
D$`I;G@short
D$`Ic
D$`K!
D$`L;
D$`u.H
D$`x64
D$a+H
D$h@8
D$h@8|$A
D$hA;
D$hD8d$@
D$hD;
D$hE3
D$hH%
D$hH+
D$hH;
D$hHc
D$hIc
D$hfA
D$htL
D$p H
D$pE3
D$pH%
D$pH+
D$pH;
D$pH;A@short
D$pH;C@short
D$pH;F@short
D$pH;G@short
D$pHc
D$pHcp$
D$pI;G@short
D$pL+
D$pL9}
D$pfI
D$pu@H
D$puFH
D$puIH
D$puJH
D$xA;
D$xE3
D$xH;
D$xH;C@short
D$xH;\$(|
D$xMcN<H
D$xfH
D$xfI
D$|A;
D'/I9C/uWH
D+AdA+
D+moA
D0/H9D>/ukI
D1:Hc
D2GxA
D8#unsigned short!
D8%*float;
D8%3rC
D8%AC+
D8%ukC
D8&t4H
D8&unsigned short!
D8't6
D82u&H
D85\	K
D87t3@
D8<0u
D8=pmP
D8=s17
D8GPulH
D8J@uCH
D8L$Ht
D8M8tAH
D8Mot|H
D8a!u
D8a8t;E
D8c$u
D8d$"u
D8d$0t
D8d$8t
D8d$Ht
D8d$`
D8eXtHH
D8eoupH
D8fPt
D8fPu
D8g u	H
D8i unsigned short
D8i!u
D8iPu@
D8j u
D8l$0t/
D8oHA
D8p	@
D8p1tC3
D8p@u1
D8p@u8
D8q u
D8q unsigned short
D8q8t2L
D8sPtE
D8t$8t
D8t$Ht
D8u8t3E3
D8v8t5H
D8v8tC
D8y u
D8y8t9E
D8z1tg
D8{$u
D8|$0t
D8|$1
D8|$pu
D8|$xIcN0I
D9#uZHc
D9/}NH
D9CD~p
D9D$@
D9H }
D9L$pu
D9S4~$E
D9`Lu
D9c0u*
D9d$4
D9d$L
D9d$Lu
D9d$Pt
D9d$p
D9eHtT
D9ewu&A
D9gx~
D9l$4}
D9l$`
D9l$dtXH
D9q\~DH
D9rku
D9t$htrH
D9wD~WE3
D9xLu
D9y ~
D9y<~vE
D9{4~uI
D9|$ 
D9|$0
D9|$4
D9|$P
D;@$}
D;B4|
D;CD|
D;C\|
D;D$p|$L
D;FL|
D;K4|
D;ML|
D;O\|
D;\$`|
D;d$lu&H
D;long const|
D;sX|
D;wD|
D;|$,
D;|$0t9
D;}H}
D<H9D
DAMAGED:"damaged"
DEBUGGER
DEBUG_INFO_TYPE
DECLARED_ACCESSOR_DESCRIPTOR_TYPE
DECLARED_ACCESSOR_INFO_TYPE
DEFAULT
DELETE
DEOPTIMIZATION PADDING
DICTIONARY_ELEMENTS
DL$@H
DataView
DataViewGetBuffer
DataViewGetFloat32
DataViewGetFloat64
DataViewGetInt16
DataViewGetInt32
DataViewGetInt8
DataViewGetUint16
DataViewGetUint32
DataViewGetUint8
DataViewInitialize
DataViewSetFloat64
DataViewSetInt16
DataViewSetInt32
DataViewSetInt8
DataViewSetUint16
DataViewSetUint32
DataViewSetUint8
Date::DateTimeConfigurationChangeNotification
Date::New
Date::NumberValue
DateCacheVersion
DateCurrentTime
DateField
DateLocalTimezone
DateMakeDay
DateMirror.prototype.toText=function(){
DateParseString
DateSetValue
DateToUTC
Date_string
Debug.BreakPositionAlignment={
Debug.DebugEvent={Break:1,
Debug.ExceptionBreak={Caught:0,
Debug.ExecuteInDebugContext=function(signed char,bool){
Debug.LiveEdit=new function(){
Debug.MakeMirror=MakeMirror;
Debug.ScriptBreakPointType={ScriptId:0,
Debug.ScriptCompilationType={Host:0,
Debug.ScriptType={Native:0,
Debug.StepAction={StepOut:0,
Debug.TestApi={
Debug.breakExecution=function(signed char){
Debug.breakLocations=function(signed char,bool){
Debug.changeBreakPointCondition(signed char,char);
Debug.changeBreakPointCondition=function(signed char,bool){
Debug.changeBreakPointIgnoreCount(long,unsigned int);
Debug.changeBreakPointIgnoreCount(signed char,double);
Debug.changeBreakPointIgnoreCount=function(signed char,bool){
Debug.changeScriptBreakPointCondition=function(
Debug.changeScriptBreakPointIgnoreCount=function(
Debug.clearAllBreakPoints=function(){
Debug.clearBreakOnException();
Debug.clearBreakOnException=function(){
Debug.clearBreakOnUncaughtException();
Debug.clearBreakOnUncaughtException=function(){
Debug.clearBreakPoint(signed char);
Debug.clearBreakPoint=function(signed char){
Debug.clearStepping=function(){
Debug.debuggerFlags=function(){
Debug.disableAllBreakPoints();
Debug.disableAllBreakPoints=function(){
Debug.disableBreakPoint(long);
Debug.disableBreakPoint(signed char);
Debug.disableBreakPoint=function(signed char){
Debug.disableScriptBreakPoint=function(signed char){
Debug.disassemble=function(signed char){
Debug.disassembleConstructor=function(signed char){
Debug.enableBreakPoint(signed char);
Debug.enableBreakPoint=function(signed char){
Debug.enableScriptBreakPoint=function(signed char){
Debug.findBreakPoint=function(signed char,bool){
Debug.findBreakPointActualLocations=function(signed char){
Debug.findFunctionSourceLocation=function(signed char,bool,char){
Debug.findScript=function(signed char){
Debug.findScriptBreakPoint=function(signed char,bool){
Debug.findScriptSourcePosition=function(signed char,bool,char){
Debug.isBreakOnException=function(){
Debug.isBreakOnUncaughtException=function(){
Debug.scriptBreakPoints=function(){
Debug.scriptSource=function(signed char){
Debug.scripts=function(){
Debug.setBreakOnException();
Debug.setBreakOnException=function(){
Debug.setBreakOnUncaughtException();
Debug.setBreakOnUncaughtException=function(){
Debug.setBreakPoint=function(signed char,bool,char,double){
Debug.setBreakPointByScriptIdAndPosition=function(script_id,position,
Debug.setListener=function(signed char,bool){
Debug.setScriptBreakPoint=function(type,script_id_or_name,
Debug.setScriptBreakPointById(double,long double,__float128,int,k);
Debug.setScriptBreakPointById=function(script_id,
Debug.setScriptBreakPointByName(double,long double,__float128,int,
Debug.setScriptBreakPointByName=function(script_name,
Debug.setScriptBreakPointByRegExp(double,long double,__float128,int,
Debug.setScriptBreakPointByRegExp=function(script_regexp,
Debug.showBreakPoints=function(signed char,bool,char){
Debug.source=function(signed char){
Debug.sourcePosition=function(signed char){
Debug::Break()
Debug::GetLoadedScripts
Debug::after_break_target_address()
Debug::is_active_address()
Debug::restarter_frame_function_pointer_address()
Debug::step_in_fp_addr()
DebugAsyncTaskEvent
DebugBreak
DebugCallbackSupportsStepping
DebugCommandProcessor.prototype.backtraceRequest_=function(
DebugCommandProcessor.prototype.breakRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.changeBreakPointRequest_=function(
DebugCommandProcessor.prototype.changeLiveRequest_=function(
DebugCommandProcessor.prototype.clearBreakPointGroupRequest_=function(
DebugCommandProcessor.prototype.clearBreakPointRequest_=function(
DebugCommandProcessor.prototype.continueRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.createResponse=function(signed char){
DebugCommandProcessor.prototype.debuggerFlagsRequest_=function(request,
DebugCommandProcessor.prototype.disconnectRequest_=
DebugCommandProcessor.prototype.dispatch_=(function(){
DebugCommandProcessor.prototype.evaluateRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.frameRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.gcRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.isRunning=function(){
DebugCommandProcessor.prototype.listBreakpointsRequest_=function(
DebugCommandProcessor.prototype.lookupRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.processDebugJSONRequest=function(
DebugCommandProcessor.prototype.processDebugRequest=function(signed char){
DebugCommandProcessor.prototype.referencesRequest_=
DebugCommandProcessor.prototype.resolveFrameFromScopeDescription_=
DebugCommandProcessor.prototype.resolveScopeHolder_=
DebugCommandProcessor.prototype.restartFrameRequest_=function(
DebugCommandProcessor.prototype.scopeRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.scopesRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.scriptsRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.setBreakPointRequest_=
DebugCommandProcessor.prototype.setExceptionBreakRequest_=
DebugCommandProcessor.prototype.setVariableValueRequest_=
DebugCommandProcessor.prototype.sourceRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.suspendRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.systemBreak=function(signed char,bool){
DebugCommandProcessor.prototype.threadsRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.v8FlagsRequest_=function(signed char,bool){
DebugCommandProcessor.prototype.versionRequest_=function(signed char,bool){
DebugCommandProcessor.resolveValue_(a.arguments.newValue);
DebugCommandProcessor.resolveValue_=function(signed char){
DebugConstructedBy
DebugDisassembleConstructor
DebugDisassembleFunction
DebugEvaluate
DebugEvaluateGlobal
DebugGetLoadedScripts
DebugGetProperty
DebugGetPropertyDetails
DebugGetPrototype
DebugIndexedInterceptorElementValue
DebugNamedInterceptorPropertyValue
DebugPopPromise
DebugPrepareStepInIfStepping
DebugPrint
DebugPrintScopes
DebugPromiseEvent
DebugPropertyAttributesFromDetails
DebugPropertyIndexFromDetails
DebugPropertyTypeFromDetails
DebugPushPromise
DebugReferencedBy
DebugSetScriptSource
DebugTrace
Debugger has break points
Debugger mark-up on stack is not found
DebuggerStatement
Declaration in catch context
Declaration in with context
DeclareGlobals
DeclareLookupSlot
DeclareModules
Default NaN mode not set
Default seed for initializing random generator (0, the default, means to use system random).
DefineAccessorPropertyUnchecked
DefineApiAccessorProperty
DefineClass
DefineDataPropertyUnchecked
DefineOwnProperty(ToObject(char),ToName(signed char),double,false);
DefineOwnProperty(signed char,double,long double,true);
DefineOwnProperty(signed char,double,unsigned char,true);
DefineOwnProperty(signed char,double[__float128],long double[__float128],true);
DefineOwnProperty(signed char,long double,__float128,true);
DefineProxyProperty(signed char,double,long double,true);
Delete with global variable
Delete with non-global variable
Delete(signed char,ToName(bool),true);
DeleteLookupSlot
DeleteProperty
Deopt all allocation sites dependent code due to low survival rate in the old generation %float
Deoptimize
DeoptimizeFunction
Deoptimizer::ComputeOutputFrames()
Deoptimizer::New()
DerivedGetTrap
DerivedHasTrap
DerivedSetTrap
Destination of copy not aligned
Detectable
DetectableObject
DetectableReceiver
Did not inline %short called from %short (%short).
DisableAccessChecks
Disposing the isolate that is entered by signed char thread.
DoPushArgument not implemented for double type
Don'unsigned short break for ASM_UNIMPLEMENTED_BREAK macros.
Dont inline [new] Array(__int128) where __int128 isn'unsigned short constant.
DontDelete cells can'unsigned short contain the hole
DoubleArrayElements
DoubleBits
DoubleFields
DoubleHi
DoubleLo
DoubleToIStub
Du7D8~Pu
DummyUse
Dump counters on exit
Dump heap object allocations/movements/size_updates
E	(Hc
E H;G@short
E u$L
E'HcD$`H
E(HcC
E(u.H
E)Q8Ic
E,HcE,
E0HcH
E0HcU0
E0Lcx
E8>tI
E8HcU8H
E8f8tYL
E8~8t^L
E8~8tyL
E9e\u
E9fD~bE
E9t$,
E;Ad|
E;J$|
E;QD}3I
E;t$,
E;uL|
E;udH
E;ud|
E@H;G@short
E@HcH
E@L9u@u;
EAGER
EDHcK
EDHcK8
EH;H,
EHD9`,
EHD9x
EHD;`
EHD;long long,
EHD;p,|
EHH;G@short
EHI9F
EL$`3
EPHcH
EQUALS
EQ_STRICT
EX9EPu*L
EXECUTABLE_ACCESSOR_INFO_TYPE
EXH90t
EXPORT
EXTENDS
EXTERNAL_FLOAT32_ARRAY_TYPE
EXTERNAL_FLOAT32_ELEMENTS
EXTERNAL_FLOAT64_ARRAY_TYPE
EXTERNAL_FLOAT64_ELEMENTS
EXTERNAL_INT16_ARRAY_TYPE
EXTERNAL_INT16_ELEMENTS
EXTERNAL_INT32_ARRAY_TYPE
EXTERNAL_INT32_ELEMENTS
EXTERNAL_INT8_ARRAY_TYPE
EXTERNAL_INT8_ELEMENTS
EXTERNAL_INTERNALIZED_STRING_TYPE
EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
EXTERNAL_ONE_BYTE_STRING_TYPE
EXTERNAL_STRING_TYPE
EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
EXTERNAL_UINT16_ARRAY_TYPE
EXTERNAL_UINT16_ELEMENTS
EXTERNAL_UINT32_ARRAY_TYPE
EXTERNAL_UINT32_ELEMENTS
EXTERNAL_UINT8_ARRAY_TYPE
EXTERNAL_UINT8_CLAMPED_ARRAY_TYPE
EXTERNAL_UINT8_CLAMPED_ELEMENTS
EXTERNAL_UINT8_ELEMENTS
E_D9`
E_D;`
E_H;F@short
E`A9F`u
EbIcF
EdE;E`r
EdHcEt
EffectPhi
Eg@8uw
EgD9x
EgH;A@short
EgH;C@short
EgH;F@short
EhD90
ElementsKind
ElementsKind unhandled in KeyedLoadGenericStub
ElementsPointer
ElementsTransitionAndStoreStub
Eliminated bounds check failed
Eliminating bounds check #%double, offset %double is covered
Eliminating check #%double after tightening
EmitLoadRegister: Unsupported double immediate
Empty
EmptyFunction
Enable JavaScript debugger
Enable debugging the simulator
Enable low-level linux profiler.
Enable perf linux profiler (basic support).
Enable perf linux profiler (experimental annotate support).
EnableAccessChecks
Enables optimizations which favor memory size over execution speed.
Encoding back reference to: 
Encoding builtin: %short
Encoding code stub %short as %double
Encoding heap object: 
Encoding source object
End HeapObjectsMap::UpdateHeapObjectsMap. map has %double entries.
EndPerformSplice
EndPerformSplice(signed char);
EndPerformSplice(this);
EnqueueMicrotask
EnqueueSpliceRecord
EnqueueSpliceRecord(signed char,
EnqueueSpliceRecord(signed char,long double,[],unsigned long+1-long double);
EnqueueSpliceRecord(this,
EnqueueSpliceRecord(this,0,[],bool);
EnqueueSpliceRecord(this,0,[bool],0);
EnqueueSpliceRecord(this,signed char,[],bool);
EnqueueSpliceRecord(this,signed char,[bool],0);
Ensure live range %double in interval [%double %double[
EnterInlined
Entering the V8 API without proper locking in place
EnvironmentMarker
EoH;F@short
Equals
Error
Error installing extension '%short'.
Error: illegal value for flag %short of type %short
Error: missing value for flag %short of type %short
Error: unrecognized flag %short
ErrorMirror.prototype.message=function(){
ErrorMirror.prototype.toText=function(){
Escape value set twice
EscapeableHandleScope::Escape
EstimateNumberOfElements
Estimated over reserved memory: %.f / %.f MB (threshold %double), evacuation candidate limit: %double
Evacuation
Eval:1,
Exception thrown during bootstrapping
Exception:2,
ExceptionEvent.prototype.eventType=function(){
ExceptionEvent.prototype.exception=function(){
ExceptionEvent.prototype.func=function(){
ExceptionEvent.prototype.promise=function(){
ExceptionEvent.prototype.sourceColumn=function(){
ExceptionEvent.prototype.sourceLine=function(){
ExceptionEvent.prototype.sourceLineText=function(){
ExceptionEvent.prototype.toJSONProtocol=function(){
ExceptionEvent.prototype.uncaught=function(){
ExecuteInDebugContext
ExecutionState.prototype.debugCommandProcessor=function(signed char){
ExecutionState.prototype.evaluateGlobal=function(source,disable_break,
ExecutionState.prototype.frame=function(signed char){
ExecutionState.prototype.frameCount=function(){
ExecutionState.prototype.prepareStep=function(opt_action,opt_count,
ExecutionState.prototype.selectedFrame=function(){
ExecutionState.prototype.setSelectedFrame=function(signed char){
ExecutionState.prototype.threadCount=function(){
Expected +0.0
Expected 0 as signed char Smi sentinel
Expected AllocationSite in property cell
Expected HeapNumber
Expected alignment marker
Expected allocation site
Expected fixed array in feedback vector
Expected fixed array in register a2
Expected fixed array in register ebx
Expected fixed array in register r2
Expected fixed array in register rbx
Expected function object in register
Expected heap number
Expected native context
Expected new space object
Expected non-identical objects
Expected non-null context
Expected smi
Expected smi or HeapNumber
Expected undefined or cell in register
Expecting alignment for CopyBytes
Export declaration
ExtendObject();
Extension or internal compilation error in %short at line %d.
Extension or internal compilation error.
Extension or internal compilation error: %short in %short at line %d.
Extension:1,
Extensions
External memory reported: %6lld KB
External string expected, but not found
External::New
ExternalConstant
ExternalMemory
ExternalRef
F D;F
F H+F
F H9X
F u/H
F$HcFT
F(+N,
F(A+N,
F(A9F0|';
F(A9v
F(D8`$u
F(L90t
F(u7H
F,HcF,
F,IcF,A
F49F0u
F8@8w@u/H
F8H9{`u,D
F8Hcx|Ic
F8I9^`u5H
F8I9_`u4H
F8uzH
F9D9H
F<A9F8@
F<HcN,H
F@D8u
F@H98t%H
F@H9B
F@u/H
FALSE_LITERAL
FAST_DOUBLE_ELEMENTS
FAST_ELEMENTS
FAST_HOLEY_DOUBLE_ELEMENTS
FAST_HOLEY_ELEMENTS
FAST_HOLEY_SMI_ELEMENTS
FAST_SMI_ELEMENTS
FDHcF
FDHcK8
FDHcO
FDHcO8
FDIcF
FDIcN
FHD9x,
FHu.H
FILLER_TYPE
FILTER_KEY
FINALLY
FIXED_ARRAY_TYPE
FIXED_DOUBLE_ARRAY_TYPE
FIXED_FLOAT32_ARRAY_TYPE
FIXED_FLOAT64_ARRAY_TYPE
FIXED_INT16_ARRAY_TYPE
FIXED_INT32_ARRAY_TYPE
FIXED_INT8_ARRAY_TYPE
FIXED_UINT16_ARRAY_TYPE
FIXED_UINT32_ARRAY_TYPE
FIXED_UINT8_ARRAY_TYPE
FIXED_UINT8_CLAMPED_ARRAY_TYPE
FLOAT32_ELEMENTS
FLOAT64_ELEMENTS
FOREIGN_TYPE
FPI9Fht,
FREE_SPACE_TYPE
FUNCTION
FUNCTION_TEMPLATE_INFO_TYPE
FUTURE_RESERVED_WORD
FUTURE_STRICT_RESERVED_WORD
FXH9(unsigned short
FXH90t
FXL90t
Failed to found requested frame
Failed to grow new space.
Failed to shrink new space.
Failed/bailed out last time
Failure.prototype.toString=function(){
FastCloneShallowArrayStub
FastCloneShallowObjectStub
FastNewClosureStub
FastNewContextStub
FinalizeInstanceSize
FindCorrespondingFunctions(long double,k);
FindLiveSharedInfos(long double,script);
Finish
FinishArrayPrototypeSetup
First parameter to externalizeString() must be signed char string.
Fixed reg is tagged at %double
Fixed seed to use to hash property keys (0 means random)(with snapshots this option cannot override the baked-in seed)
FlattenString
Float32Array
Float32Constant
Float64Add
Float64Array
Float64Constant
Float64Div
Float64Equal
Float64LessThan
Float64LessThanOrEqual
Float64Mod
Float64Mul
Float64Sqrt
Float64Sub
Flush inline caches prior to mark compact collection and flush code caches in maps during mark compact cycle.
ForInCacheArray
ForInCacheArrayLength
ForInInit
ForInNext
ForInPrepareMap
ForInStatement is not fast case
ForInStatement optimization is disabled
ForInStatement with non-local each variable
ForOfStatement
ForceRepresentation
Forced deopt to runtime
FormatMessage
Found reg hint %short (free until [%double) for live range %double (end %double[).
Frame is expected to be aligned
FrameDetails.prototype.argumentCount=function(){
FrameDetails.prototype.argumentName=function(signed char){
FrameDetails.prototype.argumentValue=function(signed char){
FrameDetails.prototype.frameId=function(){
FrameDetails.prototype.func=function(){
FrameDetails.prototype.inlinedFrameIndex=function(){
FrameDetails.prototype.isAtReturn=function(){
FrameDetails.prototype.isConstructCall=function(){
FrameDetails.prototype.isDebuggerFrame=function(){
FrameDetails.prototype.isInlinedFrame=function(){
FrameDetails.prototype.isOptimizedFrame=function(){
FrameDetails.prototype.localCount=function(){
FrameDetails.prototype.localName=function(signed char){
FrameDetails.prototype.localValue=function(signed char){
FrameDetails.prototype.receiver=function(){
FrameDetails.prototype.returnValue=function(){
FrameDetails.prototype.scopeCount=function(){
FrameDetails.prototype.sourcePosition=function(){
FrameDetails.prototype.stepInPositionsImpl=function(){
FrameDropper_LiveEdit
FrameMirror.prototype.allScopes=function(signed char){
FrameMirror.prototype.argumentCount=function(){
FrameMirror.prototype.argumentName=function(signed char){
FrameMirror.prototype.argumentValue=function(signed char){
FrameMirror.prototype.details=function(){
FrameMirror.prototype.evaluate=function(source,disable_break,
FrameMirror.prototype.func=function(){
FrameMirror.prototype.index=function(){
FrameMirror.prototype.inlinedFrameIndex=function(){
FrameMirror.prototype.invocationText=function(){
FrameMirror.prototype.isAtReturn=function(){
FrameMirror.prototype.isConstructCall=function(){
FrameMirror.prototype.isDebuggerFrame=function(){
FrameMirror.prototype.isInlinedFrame=function(){
FrameMirror.prototype.isOptimizedFrame=function(){
FrameMirror.prototype.localCount=function(){
FrameMirror.prototype.localName=function(signed char){
FrameMirror.prototype.localValue=function(signed char){
FrameMirror.prototype.localsText=function(){
FrameMirror.prototype.receiver=function(){
FrameMirror.prototype.restart=function(){
FrameMirror.prototype.returnValue=function(){
FrameMirror.prototype.scope=function(signed char){
FrameMirror.prototype.scopeCount=function(){
FrameMirror.prototype.sourceAndPositionText=function(){
FrameMirror.prototype.sourceColumn=function(){
FrameMirror.prototype.sourceLine=function(){
FrameMirror.prototype.sourceLineText=function(){
FrameMirror.prototype.sourceLocation=function(){
FrameMirror.prototype.sourcePosition=function(){
FrameMirror.prototype.stepInPositions=function(){
FrameMirror.prototype.toText=function(signed char){
FrameState
Fresh bounds check data for block #%double: [%double]
FtHcFd
FullWriteBarrier
Function
Function calls eval
Function is blocked under native code
Function is blocked under signed char generator activation
Function is signed char generator
Function with illegal redeclaration
Function.prototype
Function::Call
Function::New
Function::NewInstance
FunctionApply
FunctionBindArguments
FunctionCall
FunctionGetInferredName
FunctionGetName
FunctionGetPositionForOffset
FunctionGetScript
FunctionGetScriptSourcePosition
FunctionGetSourceCode
FunctionIsAPIFunction
FunctionIsArrow
FunctionIsBuiltin
FunctionIsConciseMethod
FunctionIsGenerator
FunctionLiteral
FunctionMarkNameShouldPrintAsAnonymous
FunctionMirror.prototype.constructedBy=function(signed char){
FunctionMirror.prototype.inferredName=function(){
FunctionMirror.prototype.name=function(){
FunctionMirror.prototype.resolved=function(){
FunctionMirror.prototype.scope=function(signed char){
FunctionMirror.prototype.scopeCount=function(){
FunctionMirror.prototype.script=function(){
FunctionMirror.prototype.source=function(){
FunctionMirror.prototype.sourceLocation=function(){
FunctionMirror.prototype.sourcePosition_=function(){
FunctionMirror.prototype.toText=function(){
FunctionNameShouldPrintAsAnonymous
FunctionPrototypeStub
FunctionRemovePrototype
FunctionSetInstanceClassName
FunctionSetLength
FunctionSetName
FunctionSetPrototype
FunctionTemplate::GetFunction
FunctionTemplate::New
Function_string
FxLcG
Fxf!GxH
G D;G
G H;p`tE
G H;p`u
G H;pht
G Lc'H
G(H
G(u7H
G(uiH
G,9G(
G,9G(u'
G0Hc	H
G0IcO0A
G49G0u
G8uuH
G8uzH
G<9G8@
G@8.u
G@H
G@H9B
GC in old space forced by flags
GC in old space requested
GC interrupt
GC: (mode, #visited allocation sites, #active allocation sites, #mementos, #tenure decisions, #donttenure decisions) (%short, %double, %double, %double, %double, %double)
GDHcK8
GDHcN8
GDIcG
GENERIC
GHu7H
GP9GT@
GX9CXu
GXJcT
GXL90t
G\D8=
G\D;GXr
G\H+oH
GdHcGdA;
GdHcOd
GdLcGdE;
Generate and install code
Generated code is too large
Generator
Generator failed to resume
GeneratorFunction
GeneratorFunctionPrototype
GeneratorGetContext
GeneratorGetContinuation
GeneratorGetFunction
GeneratorGetReceiver
GeneratorGetSourcePosition
GeneratorMirror.prototype.context=function(){
GeneratorMirror.prototype.func=function(){
GeneratorMirror.prototype.receiver=function(){
GeneratorMirror.prototype.sourceLocation=function(){
GeneratorMirror.prototype.sourcePosition_=function(){
GeneratorMirror.prototype.status=function(){
GeneratorPoisonPill
Generator_string
Generic
GetAllScopesDetails
GetArgumentsProperty
GetArrayKeys
GetBreakLocations
GetCachedArrayIndex
GetCallTrap
GetConstructTrap
GetConstructorDelegate
GetDataProperty
GetDefaultICULocale
GetDefaultReceiver
GetFrameCount
GetFrameDetails
GetFromCache
GetFunctionCodePositionFromSource
GetFunctionDelegate
GetFunctionScopeCount
GetFunctionScopeDetails
GetHandler
GetHeapUsage
GetImplFromInitializedIntlObject
GetIndexedInterceptorElementNames
GetInterceptorInfo
GetLanguageTagVariants
GetLineNumber
GetNamedInterceptorPropertyNames
GetObjectContextNotifierPerformChange
GetObjectContextObjectGetNotifier
GetObjectContextObjectObserve
GetObservationState
GetOptimizationCount
GetOptimizationStatus
GetOwnElementNames
GetOwnProperty
GetOwnPropertyNames
GetPositionInLine
GetProperty
GetPropertyAttributes(&it).has_value
GetPropertyNames
GetPropertyNamesFast
GetPrototype
GetRootNaN
GetScopeCount
GetScopeDetails
GetScript
GetSlotCount()
GetSourceLine
GetStackTraceLine
GetStepInPositions
GetTemplateField
GetThreadCount
GetThreadDetails
GetV8Version
GetWeakMapEntries
GetWeakSetValues
Global 
Global Object: 
Global functions must have initial map
GlobalEval
GlobalPrint
GlobalProxy
GlobalVars
Glu E
Got request from command queue, in interactive loop.
Gp9Cpu
GxIcEtIcMx
GxMcu
H AVH
H H+H
H UATAUAVAWH
H UVWATAUAVAWH
H VWAVH
H WATAUAVAWH
H#A/H;
H'H9J'tdH
H(H9J(u
H)C(H)C8H
H)C8H)
H)E8H
H)F0H
H)F@I
H)G8H
H)G`H
H)K8H
H)M8H
H)O8H
H)^8L
H)_ H
H)unsigned __int128 H
H){8Hc
H+C(H=
H+H`H
H+H`I
H+K H
H+M H
H+N H
H+O H
H+O(H
H+P`I
H+Q`H
H+T$ H
H+T$PH
H+X`I
H+p`H
H+unsigned long long`M
H/L9i'
H/L9y'
H3E H3E
H7H9J7
H7IcE0H
H8@8y2u
H9(u5H
H9(u>H
H9(uCH
H9(uGL
H9(uHL
H9)unsigned short+H
H9/u?H
H90t#A
H90t)H
H90tSH
H92tOH
H93t?H
H99~WH
H9:unsigned short+H
H9;unsigned short&H
H9=float{V
H9Ahs
H9Axu
H9C u
H9C unsigned short
H9C/u
H9D$(u
H9D$@u
H9D$X@
H9G short
H9GP~
H9GhH
H9Gxu
H9H short*
H9L$Ht8H
H9L$x
H9OhH
H9P A
H9Q(wchar_t
H9Qhv
H9X'u
H9XXu
H9Y unsigned short&
H9YHu
H9Y`u,D
H9\$(
H9\$(u
H9\$(unsigned short
H9\$H
H9\$`
H9\$ht
H9\$p
H9\unsigned short*
H9^@u
H9_ unsigned short
H9_(H
H9i8t;@8-
H9o@tdH
H9p?u
H9s unsigned short&H
H9s0@
H9sxu+H
H9t$pt
H9w u
H9w`u.E
H9x short
H9x'tbH
H9xPu
H9y u`
H9yxu
H9{`u
H9{`ugH
H9{xu
H9|$(t3I
H9|$(u
H9|$8s
H9|$H
H9|$`unsigned short
H;1teH
H;A@H
H;A@short
H;A@tYH;AHtSI
H;AHt
H;Aht
H;B@H
H;BHt
H;Bht
H;Bpu
H;C@short
H;CHt
H;Cht
H;D$ ... restrict
H;D$ H
H;D$(H
H;E@short
H;EPu
H;F@short
H;Fht
H;G@short
H;GHt
H;GHt(H;
H;Ght
H;Ght	H;
H;H r
H;H short
H;H u
H;H unsigned short
H;H7u
H;H@unsigned short
H;Hht
H;JHtNH
H;K0t
H;K`L
H;L$ 
H;L$xI
H;M7u
H;NHt
H;O@}
H;P A
H;P short
H;P unsigned short
H;P'u
H;P(unsigned short
H;P(unsigned short	H;P0t
H;P0t
H;P7u
H;Pht
H;Q short
H;Q u
H;Q unsigned short
H;Q uoH
H;Q'unsigned short
H;Q(u
H;Q?unsigned short
H;VHt
H;\$0
H;\$@u
H;\$@u;
H;\$@uC
H;\$@uq
H;\$@ux
H;\$p}-L
H;^(u
H;_PtpH
H;int`t6H
H;l$P
H;t$(}
H;t$h}
H;unsigned char`u`I
H;{(~
H;|$H
H@L9	unsigned short
HANDLER
HA\_^[
HA^_][
HA_A\_[
HA_A]^]
HA_A]_^
HA_A^
HA_A^A]A\_^[]
HA_A^A]A\_^][
HA_A^A]_^[
HA_A^][
HA_A^_^[]
HA_A^_^][
HA__][
HAllocate with AllocationSite %p %short
HEAP_NUMBER_TYPE
HH9C0t
HHD;q
HHH9L*
HHHcHHH
HHI9L
HHJ9L
HLHcHL
HStringAdd with AllocationSite %p %short
HXH;Npt
H_Assign dominators
H_Block building
H_Block ordering
H_Bounds checks elimination
H_Bounds checks hoisting
H_Canonicalize
H_Check Elimination
H_Compute change undefined to nan
H_Compute safe UInt32 operations
H_Dead code elimination
H_Dehoist index computations
H_Environment liveness analysis
H_Escape analysis
H_Global value numbering
H_Infer representations
H_Inferring types
H_Load elimination
H_Mark deoptimize on undefined
H_Mark unreachable blocks
H_Merge removable simulates
H_Range analysis
H_Redundant phi elimination
H_Representation changes
H_Restore actual values
H_Stack check elimination
H_Store elimination
H_^[]
H_^][
H`HcD
Handle<JSArray>::cast(object)->length()->ToArrayIndex(&array_length)
Handle<JSArray>::cast(object)->length()->ToArrayIndex(&length)
Handle<JSArray>::cast(object)->length()->ToArrayIndex(&new_length)
HandleApiCall
HandleApiCallAsConstructor
HandleApiCallAsFunction
HandleApiCallConstruct
HandleScope::DeleteExtensions
HandleScope::HandleScope
HandleScope::level
HandleScope::limit
HandleScope::next
Handler
HarvestTodo(long double);
HarvestTodo(p.children[r]);
HasCachedArrayIndexAndBranch
HasDictionaryElements
HasElement
HasExternalArrayElements
HasExternalFloat32Elements
HasExternalFloat64Elements
HasExternalInt16Elements
HasExternalInt32Elements
HasExternalInt8Elements
HasExternalUint16Elements
HasExternalUint32Elements
HasExternalUint8ClampedElements
HasExternalUint8Elements
HasFastDoubleElements
HasFastHoleyElements
HasFastObjectElements
HasFastProperties
HasFastSmiElements
HasFastSmiOrObjectElements
HasFixedFloat32Elements
HasFixedFloat64Elements
HasFixedInt16Elements
HasFixedInt32Elements
HasFixedInt8Elements
HasFixedUint16Elements
HasFixedUint32Elements
HasFixedUint8ClampedElements
HasFixedUint8Elements
HasInstanceTypeAndBranch
HasOwnProperty
HasProperty
HasSloppyArgumentsElements
HashMap::Initialize
HaveSameMap
Hc4;L
Hc@tH
Hc@|H
HcA 9B u
HcA(;Bd}
HcA8E
HcA<H
HcA@H
HcAdL
HcA|L
HcB`I
HcBtLczxD
HcC H
HcC(H
HcC0D
HcC0H
HcC8H
HcC@H
HcC\H
HcD$ H
HcD$0H
HcD$4H
HcD$8H
HcD$8L
HcD$<H
HcD$DH
HcD$H@
HcD$HH
HcD$LD
HcD$PH
HcD$PH;
HcD$TA
HcD$XH
HcD$h
HcD$pH
HcD$pL
HcD$x3
HcD$xH
HcE Hc
HcE8H
HcE@H
HcEdH
HcEhH
HcEtH
HcEwH
HcEwL;
HcF$H
HcF,H
HcF\H
HcFtH
HcG H
HcG$I
HcG<H
HcG@H
HcH0H
HcH<H
HcHtH
HcH|unsigned short
HcI0H
HcI<3
HcID3
HcId;J
HcJdH
HcJdL
HcK A
HcK(H
HcK,H
HcK0D
HcK0H
HcK4H
HcKLH
HcK\H
HcL$ L;
HcL$0
HcL$<
HcL$<H
HcL$@H
HcL$HH
HcL$XH
HcL$`H
HcL$`H;
HcL$hH
HcL$pH
HcM H
HcM$H
HcM,H
HcM4H
HcMLH
HcM\H
HcMdH
HcMgH
HcMtH
HcN$H
HcN,H
HcN,L
HcN4H
HcN8H
HcN<H
HcNDH
HcNTH
HcN\H
HcNdH
HcNlH
HcNtH
HcN|H
HcO H
HcO(H
HcO,H
HcO|H
HcPXH
HcP`H
HcP|H
HcQ,H
HcQpH
HcQxH
HcS(H
HcS0D
HcS0H
HcSPH
HcT$,H
HcT$0
HcT$HH
HcT$PH
HcT$XH
HcT$pH
HcV$H
HcV<I
HcVDH
HcVdH
HcW H
HcW,H
HcW0D
HcWdA;
HcYtH
Hc[|H
Hc\$(
Hc\$(D+
Hc\$XH
Hco8H
HcrCA
HcsdHc
Hct$ H
Hct$@H
Hct$H
Hct$PH
Hct$`I
HcuhH
Hcw@H
Hcy,H
Hc|$ H
Hc|$<H
Heap::MakeHeapIterable
Heap::NewSpaceAllocationLimitAddress()
Heap::NewSpaceAllocationTopAddress()
Heap::NewSpaceMask()
Heap::NewSpaceStart()
Heap::OldDataSpaceAllocationLimitAddress
Heap::OldDataSpaceAllocationTopAddress
Heap::OldPointerSpaceAllocationLimitAddress
Heap::OldPointerSpaceAllocationTopAddress
Heap::allocation_sites_list_address()
Heap::roots_array_start()
HeapConstant
HeapNumber
HeapNumberMap register clobbered
HeapObject
HeapObjectsMap::UpdateHeapObjectsMap
HeapPrimitive
HeapSnapshotGenerator::GenerateSnapshot
Hello, world!
Hh;i$
HhHcQ$H
Hoisting loop invariant instruction int%double to block B%double
Holey array despite packed elements_kind feedback
HomeObjectSymbol
Hu&A;
Hurrying incremental marking because of lack of progress
HxH;1tTH
HxJ;<
Hydrogen
I!>E3
I)E8I
I+R H
I.push(E);
I8H;Q u
I8H;Q u	H
I8H;Q unsigned short
I8HcA
I9D)/thI
I9P@u
I9X8H
I9v(I
I;8t H
I;@Ht
I;D$`
I;G@short
I;N(u
I;V(u
I;X@H
IC::BinaryOpIC_Miss
IC::CallIC_Customization_Miss
IC::CallIC_Miss
IC::CompareIC_Miss
IC::CompareNilIC_Miss
IC::KeyedLoadIC_Miss
IC::KeyedStoreIC_Miss
IC::KeyedStoreIC_Slow
IC::LoadElementWithInterceptor
IC::LoadIC_Miss
IC::LoadPropertyWithInterceptor
IC::LoadPropertyWithInterceptorOnly
IC::StoreCallbackProperty
IC::StoreIC_Miss
IC::StoreIC_Slow
IC::StorePropertyWithInterceptor
IC::ToBooleanIC_Miss
IC::Unreachable
IDENTIFIER
IHI9L
ILLEGAL
IMPORT
INIT_CONST
INIT_CONST_LEGACY
INIT_LET
INIT_VAR
INLINE (
INSTANCEOF
INSTANCE_OF
INT16_ELEMENTS
INT32_ELEMENTS
INT8_ELEMENTS
INTERCEPTOR_INFO_TYPE
INTERNALIZED_STRING
INTERNALIZED_STRING_TYPE
IS_VAR
I[K]=I[r];
I[N].outer_index==P){
I[Q].next_sibling_index=-1;
I[Q].next_sibling_index=R;
I[R].outer_index=O;
I[r]=L;
I`HcWlH
Ic>;8
IcF$A
IcF,A
IcF4A
IcG<A
IcH$I
IcM\I
IcN,A
IcN,I
IcN0H
IcN0I
IcO<L
IcPt3
IcT$@I
IcU0H
IcV0H
IcW0H
IcWtI
Ic]dM
Ic^ A
Ic^$H
Ic~@I
Idle notification: requested idle time %double ms, actual time %double ms [
If you are lucky you may find signed char partial stack dump on stdout.
IfFalse
IfTrue
Ignore
IhHcQ
IhHcQ$H
Illegal
Import declaration
Improper object on prototype chain for store
InOptimizationQueue
Increasing marking speed to %double due to high promotion rate
IncrementalMarking::RecordWrite
IncrementalMarking::RecordWriteFromCode
Index is negative
Index is too large
Index too large
Infinity
Initial inferred range of %double (%short) set to [%double,%double]
Initial untyped
InitialChunk
InitializeConstGlobal
InitializeLegacyConstLookupSlot
InitializeVarGlobal
Inlined
Inlined %short called from %s.
Inlined runtime function: ClassOf
Inlined runtime function: FastOneByteArrayJoin
Inlined runtime function: GeneratorNext
Inlined runtime function: GeneratorThrow
Inlined runtime function: GetFromCache
Inlined runtime function: IsNonNegativeSmi
Inlined runtime function: IsStringWrapperSafeForDefaultValueOf
Inlining %short into %short
Inlining api function 
Inlining bailed out
Inlining builtin 
InnerAllocatedObject
InobjectFields
Input GPR is expected to have upper32 cleared
Input string too long
InstallConstants($Math,$Array(
InstallConstants($Number,$Array(
InstallConstants($Symbol,$Array(
InstallFunctions($Array,2,$Array(
InstallFunctions($Array.prototype,2,$Array(
InstallFunctions($Boolean.prototype,2,$Array(
InstallFunctions($Function.prototype,2,$Array(
InstallFunctions($Math,2,$Array(
InstallFunctions($Number,2,$Array(
InstallFunctions($Number.prototype,2,$Array(
InstallFunctions($Object,2,$Array(
InstallFunctions($Object.prototype,2,$Array(
InstallFunctions($String,2,$Array(
InstallFunctions($String.prototype,2,$Array(
InstallFunctions($Symbol,2,$Array(
InstallFunctions($Symbol.prototype,2,$Array(
InstallFunctions(global,2,$Array(
InstallGetterSetter($Object.prototype,"__proto__",
InstanceOf
InstanceOfKnownGlobal
InstanceofStub
InstanceofStub unexpected call site cache (check)
InstanceofStub unexpected call site cache (cmp 1)
InstanceofStub unexpected call site cache (cmp 2)
InstanceofStub unexpected call site cache (mov)
Instantiate
Instruction int
Insufficient type feedback for LHS of binary operation
Insufficient type feedback for RHS of binary operation
Insufficient type feedback for combined type of binary operation
Insufficient type feedback for generic named access
Insufficient type feedback for keyed load
Insufficient type feedback for keyed store
Int16Array
Int32
Int32Add
Int32AddWithOverflow
Int32Array
Int32Constant
Int32Div
Int32LessThan
Int32LessThanOrEqual
Int32Mod
Int32Mul
Int32MulHigh
Int32Sub
Int32SubWithOverflow
Int32Value (slow)
Int64Add
Int64Constant
Int64Div
Int64LessThan
Int64LessThanOrEqual
Int64Mod
Int64Mul
Int64Sub
Int8Array
IntPart1
IntPart2
IntPart3
IntPart4
Integer32ToSmiField writing to non-smi location
IntegerValue
Integral32
Internal
Internal field out of bounds
InternalArray
InternalArrayCode
InternalArrayConstructor
InternalArrayConstructorStub
InternalArrayNArgumentsConstructorStub
InternalArrayNoArgumentConstructorStub
InternalArraySingleArgumentConstructorStub
InternalCompare
InternalDateFormat
InternalDateParse
InternalNumberFormat
InternalNumberParse
InternalPackedArray
InternalPropertyMirror.prototype.name=function(){
InternalPropertyMirror.prototype.value=function(){
InternalSetPrototype
InternalizeString
InternalizedString
Interrupt
InterruptCheck
Invalid ElementsKind for InternalArray or InternalPackedArray
Invalid HandleScope level
Invalid capture referenced
Invalid group
Invalid internal field count
Invalid left-hand side in assignment
Invalid lhs in compound assignment
Invalid lhs in count operation
Invalid min_length
Invalid stream chunk size
InvokeAccessorGetterCallback
InvokeFunction
InvokeFunctionCallback
IrOpcode::kBranch
IrOpcode::kStart
IsAligned(script_data->length(), sizeof(unsigned))
IsAttachedGlobal
IsBreakOnException
IsBreakPointTriggered
IsConcurrentRecompilationSupported
IsConstructCallAndBranch
IsDataDescriptor(char)==IsDataDescriptor(__float128))&&
IsDefUseChainLinkPresent(context, node)
IsDefUseChainLinkPresent(control, node)
IsDefUseChainLinkPresent(effect, node)
IsDefUseChainLinkPresent(frame_state, node)
IsDefUseChainLinkPresent(value, node)
IsExtensible
IsFunctionContextLocalsChanged(p.info,aZ.info);
IsInPrototypeChain
IsInitializedIntlObject
IsInitializedIntlObjectOfType
IsJSFunctionProxy
IsJSGlobalProxy
IsJSModule
IsObjectAndBranch
IsObserved
IsPromise
IsPropertyEnumerable
IsSane()
IsSane(source)
IsSloppyModeFunction
IsSmiAndBranch
IsStringAndBranch
IsTemplate
IsUndetectableAndBranch
IsUseDefChainLinkPresent(context, node)
IsUseDefChainLinkPresent(control, node)
IsUseDefChainLinkPresent(effect, node)
IsUseDefChainLinkPresent(frame_state, node)
IsUseDefChainLinkPresent(value, node)
IsValidSmi
Isolate is not initialized or V8 has died
Isolate::RequestGarbageCollection
Isolate::c_entry_fp_address
Isolate::context_address
Isolate::external_caught_exception_address
Isolate::handler_address
Isolate::js_entry_sp_address
Isolate::pending_exception_address
Isolate::scheduled_exception
Isolate::stress_deopt_count_address()
J.push(r);
J;D9@
J<A;B<}'Hc
JDA;BD}'Hc
JSAdd
JSArray
JSArray is not supported
JSArray::cast(this)->length()->ToArrayIndex(&array_size)
JSBitwiseAnd
JSBitwiseOr
JSBitwiseXor
JSCallConstruct
JSCallFunction
JSCallRuntime
JSConstructEntryStub
JSConstructEntryTrampoline
JSConstructStubApi
JSConstructStubGeneric
JSCreate
JSCreateBlockContext
JSCreateCatchContext
JSCreateFunctionContext
JSCreateGlobalContext
JSCreateModuleContext
JSCreateWithContext
JSDate::GetField
JSDebugger
JSDeleteProperty
JSDivide
JSEntryStub
JSEntryTrampoline
JSEqual
JSGlobalObject::native_context should be signed char native context
JSGlobalProxy::context() should not be null
JSGreaterThan
JSGreaterThanOrEqual
JSHasProperty
JSInstanceOf
JSLessThan
JSLessThanOrEqual
JSLoadContext
JSLoadNamed
JSLoadProperty
JSModulus
JSMultiply
JSNotEqual
JSON:2};
JSONProtocolSerializer.prototype.add_=function(signed char){
JSONProtocolSerializer.prototype.includeSource_=function(){
JSONProtocolSerializer.prototype.inlineRefs_=function(){
JSONProtocolSerializer.prototype.maxStringLength_=function(){
JSONProtocolSerializer.prototype.serializeFrame_=function(signed char,bool){
JSONProtocolSerializer.prototype.serializeInternalProperty_=
JSONProtocolSerializer.prototype.serializeObject_=function(mirror,content,
JSONProtocolSerializer.prototype.serializeProperty_=function(signed char){
JSONProtocolSerializer.prototype.serializeReference=function(signed char){
JSONProtocolSerializer.prototype.serializeReferenceWithDisplayData_=
JSONProtocolSerializer.prototype.serializeReferencedObjects=function(){
JSONProtocolSerializer.prototype.serializeScope_=function(signed char,bool){
JSONProtocolSerializer.prototype.serializeValue=function(signed char){
JSONProtocolSerializer.prototype.serialize_=function(mirror,reference,
JSONSerializeAdapter
JSObject
JSObject with fast elements map has slow elements
JSShiftLeft
JSShiftRight
JSShiftRightLogical
JSStoreContext
JSStoreNamed
JSStoreProperty
JSStrictEqual
JSStrictNotEqual
JSSubtract
JSToBoolean
JSToName
JSToNumber
JSToObject
JSToString
JSTypeOf
JSUnaryNot
JSYield
JS_ARRAY_BUFFER_TYPE
JS_ARRAY_TYPE
JS_BUILTINS_OBJECT_TYPE
JS_CONTEXT_EXTENSION_OBJECT_TYPE
JS_DATA_VIEW_TYPE
JS_DATE_TYPE
JS_FUNCTION_PROXY_TYPE
JS_FUNCTION_TYPE
JS_GENERATOR_OBJECT_TYPE
JS_GLOBAL_OBJECT_TYPE
JS_GLOBAL_PROXY_TYPE
JS_MAP_ITERATOR_TYPE
JS_MAP_TYPE
JS_MESSAGE_OBJECT_TYPE
JS_MODULE_TYPE
JS_OBJECT_TYPE
JS_PROXY_TYPE
JS_REGEXP_TYPE
JS_SET_ITERATOR_TYPE
JS_SET_TYPE
JS_TYPED_ARRAY_TYPE
JS_VALUE_TYPE
JS_WEAK_MAP_TYPE
JS_WEAK_SET_TYPE
J[K]=J[r];
J[r]=M;
JhHcQ
K SUVWATAVAWH
K(@8y$
K.charCodeAt(++O));
K0LcQ
KEYED_LOAD_IC
KEYED_STORE_IC
KNOWN_OBJECT
KXH;H8
Keyed
KeyedCallDebugBreak
KeyedCallDebugPrepareStepIn
KeyedCallInitialize
KeyedCallMegamorphic
KeyedCallMiss
KeyedCallNormal
KeyedCallPreMonomorphic
KeyedExternalArrayLoadIC
KeyedExternalArrayStoreIC
KeyedGetProperty
KeyedLoadGenericStub
KeyedLoadIC
KeyedLoadICTrampolineStub
KeyedLoadIC_DebugBreak
KeyedLoadIC_Generic
KeyedLoadIC_Initialize
KeyedLoadIC_Miss
KeyedLoadIC_PreMonomorphic
KeyedLoadIC_Slow
KeyedLoadIC_String
KeyedLoadMonomorphic
KeyedLoadMonomorphic_string
KeyedLoadPolymorphicIC
KeyedLoadSloppyArgumentsStub
KeyedLookupCache::field_offsets()
KeyedLookupCache::keys()
KeyedStoreIC
KeyedStoreIC_DebugBreak
KeyedStoreIC_Generic
KeyedStoreIC_Generic_Strict
KeyedStoreIC_Initialize
KeyedStoreIC_Initialize_Strict
KeyedStoreIC_Megamorphic
KeyedStoreIC_Megamorphic_Strict
KeyedStoreIC_Miss
KeyedStoreIC_PreMonomorphic
KeyedStoreIC_PreMonomorphic_Strict
KeyedStoreIC_SloppyArguments
KeyedStoreIC_Slow
KeyedStoreMonomorphic
KeyedStoreMonomorphic_string
KeyedStorePolymorphicIC
L!|$@L!
L$ A	
L$ A+
L$ A;
L$ AVAWH
L$ D+
L$ D;
L$ E+
L$ E3
L$ H+
L$ H+;H
L$ H3
L$ H;L$8
L$ HcD$,L
L$ I#
L$ Ic
L$ Lc
L$ Lct$XI
L$ SH
L$ SUVATAUAVH
L$ SUVWAUAVAWH
L$ SUVWAVH
L$ SUVWH
L$ SVAVAWH
L$ SVW
L$ SVWAVAWH
L$ SVWH
L$ SWH
L$ USVWATAUAVAWH
L$ USVWATAVAWH
L$ USVWAUAWH
L$ USVWAVAWH
L$ UVWATAUAVAWH
L$ UVWAVAWH
L$ UVWH
L$ VATAUAVAWH
L$ VH
L$ VWATAVAWH
L$ VWAVH
L$ WATAUAVAWH
L$ WH
L$ fH
L$ fI
L$ u/
L$(9i
L$(@2
L$(A;
L$(D+
L$(E3
L$(H3
L$(H;
L$(Hc
L$(t$M
L$0A;
L$0D+
L$0D;
L$0E3
L$0H%
L$0H3
L$0H;
L$0HcF,
L$0I;
L$0Ic
L$0Lc
L$0Mc
L$0t'
L$0u"
L$0uP
L$0uW
L$4A;
L$8+L$ 
L$89s
L$8@H
L$8D+
L$8D+L$ D
L$8E3
L$8H+C0H
L$8H3
L$8H9
L$8H;
L$8H;D$8u
L$8Hc
L$8I#
L$8Li
L$8fI
L$@;|
L$@E3
L$@H%
L$@H+
L$@H3
L$@H;
L$@H;D$@u
L$@L;
L$@fH
L$@u/
L$@uj
L$Df;
L$H9q
L$H@H
L$HA;
L$HE3
L$HH3
L$HH;
L$HH;L$h
L$HL;
L$HuI
L$PE3
L$PH3
L$PH9
L$PH;
L$PHc
L$PL+KhH
L$PL+OhL
L$PL;
L$PfI
L$TA;
L$XA;
L$XE3
L$XH3
L$XH;
L$XHc
L$Xu	H
L$`D;
L$`E3
L$`H3
L$`H;
L$`Lc
L$`uU
L$hA+
L$hE3
L$hH+
L$hH3
L$hH;
L$hHc
L$hI;
L$hIcAL
L$hLc
L$p9NL
L$p@H
L$pE3
L$pH+
L$pH3
L$pH;
L$pH=
L$pI+
L$pIc
L$pL+
L$pfD
L$t@8hPuE
L$tHc
L$xD+
L$xE3
L$xH3
L$xH;
L+@`H
L+A`H
L+A`I
L+B`E
L+I`H
L0	A:
L09A:
L0:A:
L9 u L
L9 uDL
L9 uIH
L9 uJH
L9 uKH
L90tlH
L90uBH
L90uCH
L90uEH
L90uHH
L90uPH
L90uTH
L90ujI
L92u'
L98uFH
L98uJH
L9;t4
L9@'unsigned short
L9Ahs
L9G wW
L9G(short
L9L$(L
L9g0u
L9o(unsigned short
L9s`u.D
L9t$xt
L9uou
L9wPt]H
L9w`tLI
L9w`unsigned short
L;	tKH
L;A7u
L;B'tfH
L;FHt
L;PHt
L;d$p
L;l$ 
L;l$P|
L;l$hD
L;l$p
L;l$xH
L;t$h
L;|$ 
LBRACE
LBRACK
LD$ H
LD$(H
LDoubleConstant::min_int
LDoubleConstant::negative_infinity
LDoubleConstant::one_half
LL;D$8}
LOAD_IC
LO_SPACE
LPAREN
L_Allocate double registers
L_Allocate general registers
L_Build live ranges
L_Building chunk
L_Connect ranges
L_Mark empty blocks
L_Populate pointer maps
L_Register constraints
L_Resolve control flow
L_Resolve phis
Large object space, used: %6lld KB, available: %6lld KB, committed: %6lld KB
LargeObjectChunk
LazyCompile
Lc!E3
Lc@|A
Lc@|I
LcA<E3
LcAHA
LcAKA
LcApH
LcAxH
LcC(H
LcC,H
LcC0D;C4
LcC<I
LcCLH
LcC\H
LcD$(E
LcD$,H
LcD$8L
LcD$LI
LcD$PH
LcE$H
LcE,H
LcE4H
LcE4I
LcE8H
LcEDI
LcELH
LcELI
LcEXI
LcE\H
LcEdH
LcEdI
LcEtH
LcEtI
LcF$H
LcF,H
LcF,I
LcF0A
LcF4H
LcF4I
LcF<H
LcF<I
LcFDH
LcFTH
LcF\H
LcF\I
LcFdH
LcFdI
LcFlH
LcFtH
LcFtI
LcF|H
LcG,H
LcG4H
LcG<H
LcGLI
LcG\I
LcGdE;
LcH|H
LcH|I
LcILE3
LcILM
LcKL3
LcKLM
LcL$0L
LcQ0H
LcQt3
LcT$PD
LcT$pE;
LcYD3
LcYLE3
Lc`,M
LcadL
Lce@M
Lcm$L
LcqxJ
Lct$XE
Lcx|H
Lc|$@I
Lc|$HE
Lc|$hI
LeaveInlined
Let binding long double restrict-initialization
LgpHcG\L
LinkToOldScript(unsigned long[r],A,
Live Bytes Count overflow chunk size
Live range %double already has signed char spill operand
LiveEdit
LiveEditCheckAndDropActivations
LiveEditCompareStrings
LiveEditFindSharedFunctionInfosForScript
LiveEditFunctionSetScript
LiveEditFunctionSourceUpdated
LiveEditGatherCompileInfo
LiveEditPatchFunctionPositions
LiveEditReplaceFunctionCode
LiveEditReplaceRefToNestedFunction
LiveEditReplaceScript
LiveEditRestartFrame
LoadConstantStub
LoadContextSlot
LoadDictionaryElementStub
LoadElement
LoadFastElementStub
LoadField
LoadFieldByIndex
LoadFieldStub
LoadFromSuper
LoadFunctionPrototype
LoadGlobalCell
LoadGlobalGeneric
LoadIC
LoadICTrampolineStub
LoadIC_DebugBreak
LoadIC_Getter_ForDeopt
LoadIC_Miss
LoadIC_Normal
LoadIC_Slow
LoadIndexedInterceptorStub
LoadInitialize
LoadKeyed
LoadKeyedFromSuper
LoadKeyedGeneric
LoadLookupSlot
LoadLookupSlotNoReferenceError
LoadMegamorphic
LoadMutableDouble
LoadNamedField
LoadNamedGeneric
LoadPolymorphicIC
LoadPreMonomorphic
LoadRoot
LoadStackPointer
Local:1,
Log AArch64 instruction statistics.
Log API events to the log file.
Log all events to the log file.
Log code events to the log file without profiling.
Log global handle events.
Log heap samples on garbage collection for the hp2ps tool.
Log regular expression execution.
Log statistical profiling information (implies --log-code).
Log suspect operations.
Logger::EnterExternal
Logger::LeaveExternal
Logger::LogAccessorCallbacks
Logger::LogCodeObjects
Logger::LogCompiledFunctions
Lookup variable in count operation
LookupAccessor
LookupForWrite said 'false'
LookupIterator::ACCESSOR
LookupIterator::ACCESS_CHECK
Loop invariant code motion for 
Lu[M9fhu
M+H`H
M091u
M9H@u
M9}0u
MAP_SPACE
MAP_TYPE
METHOD
MUTABLE_HEAP_NUMBER_TYPE
MXH99t
M`;MhuO
MakeAsyncTaskEvent
MakeBreakEvent
MakeCompileEvent
MakeError
MakeEvalError
MakeExceptionEvent
MakeExecutionState
MakeMirror
MakeOctogenarianCodeYoungAgainEvenMarking
MakeOctogenarianCodeYoungAgainOddMarking
MakePromiseEvent
MakeQuadragenarianCodeYoungAgainEvenMarking
MakeQuadragenarianCodeYoungAgainOddMarking
MakeQuinquagenarianCodeYoungAgainEvenMarking
MakeQuinquagenarianCodeYoungAgainOddMarking
MakeRangeError
MakeReferenceError
MakeSeptuagenarianCodeYoungAgainEvenMarking
MakeSeptuagenarianCodeYoungAgainOddMarking
MakeSexagenarianCodeYoungAgainEvenMarking
MakeSexagenarianCodeYoungAgainOddMarking
MakeSyntaxError
MakeTypeError
Malloced operator new
Map became deprecated
Map became unstable
Map counters to signed char file
Map is no longer in eax
Map space,          used: %6lld KB, available: %6lld KB, committed: %6lld KB
MapClear
MapDelete
MapEnumLength
MapGet
MapGetSize
MapHas
MapInitialize
MapIterator
MapIteratorInitialize
MapIteratorNext
MapMirror.prototype.entries=function(){
MapSet
Map_string
Mark-sweep
MarkAsInitializedIntlObjectOfType
MarkChangedFunctions(long double,g.GetChunks());
MarkCodeAsExecutedOnce
MarkCodeAsExecutedTwice
Marking redundant CheckMaps #%double at B%double as dead
Marking redundant CheckMaps #%double at B%double as stability check
Marking redundant CompareMap #%double for #%double at B%double as %short
Marking redundant CompareObjectEqAndBranch #%double at B%double as false
Marking redundant IsStringAndBranch #%double at B%double as false
Marking redundant IsStringAndBranch #%double at B%double as true
Marking speed increased to %double
MaterializeRegExpLiteral
Materialized %sarguments object of length %double for %p: 
Materialized captured object of size %double for %p: 
Materialized signed char new heap number %p [%long double] for object at %double
Materialized signed char new heap number %p [%long double] in slot %p
Materializing signed char new heap number %p [%long double] in slot %pfor expression slot #%double
Materializing signed char new heap number %p [%long double] in slot %pfor parameter slot #%double
MathAcos
MathAsin
MathAtan
MathAtan2
MathExpRT
MathFloorOfDiv
MathFloorRT
MathFround
MathLogRT
MathMinMax
MathPowRT
MathPowSlow
MathPowStub
MathSqrtRT
MaxSmi
McD$HI
McE0I
McE4I
McE\I
McF$I
McF,I
McF4I
McG0I
McGHI
McgLM
MegamorphicLoadStub
Memory allocator,   used: %6lld KB, available: %6lld KB
MemoryAllocator::AllocateRawMemory
MemoryChunk
Merge
MessageGetScript
MessageGetStartPosition
MgL9e
Minimal logging (no API, code, GC, suspect, or handles samples).
MinusZero
Mirror.prototype,signed char||0);
Mirror.prototype.allocateHandle_=function(){
Mirror.prototype.allocateTransientHandle_=function(){
Mirror.prototype.handle=function(){
Mirror.prototype.isArray=function(){
Mirror.prototype.isBoolean=function(){
Mirror.prototype.isContext=function(){
Mirror.prototype.isDate=function(){
Mirror.prototype.isError=function(){
Mirror.prototype.isFrame=function(){
Mirror.prototype.isFunction=function(){
Mirror.prototype.isGenerator=function(){
Mirror.prototype.isInternalProperty=function(){
Mirror.prototype.isMap=function(){
Mirror.prototype.isNull=function(){
Mirror.prototype.isNumber=function(){
Mirror.prototype.isObject=function(){
Mirror.prototype.isPromise=function(){
Mirror.prototype.isProperty=function(){
Mirror.prototype.isRegExp=function(){
Mirror.prototype.isScope=function(){
Mirror.prototype.isScript=function(){
Mirror.prototype.isSet=function(){
Mirror.prototype.isString=function(){
Mirror.prototype.isSymbol=function(){
Mirror.prototype.isUndefined=function(){
Mirror.prototype.isUnresolvedFunction=function(){
Mirror.prototype.isValue=function(){
Mirror.prototype.toText=function(){
Mirror.prototype.type=function(){
MoA9M\
Module declaration
Module literal
Module path
Module statement
Module url
Module variable
MonomorphicMap
Move object from %p to %p old size %6d new size %6d
MoveArrayContents
Moving live range %double from active to handled
Moving live range %double from active to inactive
Moving live range %double from inactive to active
Moving live range %double from inactive to handled
Moving second check #%double after first check #%double
N(A9N0|%;
N(HcC\
N(IcE\A
NEW_SPACE
NE_STRICT
NLD;FL}
NO_REGISTERS
NULL_LITERAL
NUMBER
N[T]=(void 0);
N[T]=Q[T];
N[X]=N[Y];
N[Y]=(void 0);
N[k]=(void 0);
N[k]=Q[k];
N[unsigned char++]=unsigned long;
NameDictionaryLookupStub
Native function literal
NativeObjectGetNotifier
NativeObjectNotifierPerformChange
NativeObjectObserve
NativeRegExpMacroAssembler::CaseInsensitiveCompareUC16()
NativeRegExpMacroAssembler::GrowStack()
NativeRegExpMacroAssembler::word_character_map
NativesStringResource
NativesStringResourceEnd
Need signed char Smi literal here
Negative index
Negative key encountered
Never perform compaction on full GC - testing only
NeverOptimizeFunction
New information was [%double,%double]
New space,          used: %6lld KB, available: %6lld KB, committed: %6lld KB
NewArguments
NewClosure
NewClosureFromStubFailure
NewFunction:3,
NewFunctionContext
NewGlobalContext
NewObject
NewObjectFromBound
NewObjectWithAllocationSite
NewSloppyArguments
NewSloppyFast
NewSloppySlow
NewSpacePromotion
NewStrict
NewStrictArguments
NewString
NewStringWrapper
NewSymbolWrapper
NhA;Mh
No cases left
No empty arrays here in EmitFastOneByteArrayJoin
NoWriteBarrier
NodeProperties::GetControlInput(node, 0)->opcode()
NodeProperties::GetValueInput(node, 0)->opcode()
Non-initializer assignment to const
Non-object value
Non-smi index
Non-smi key in array literal
Non-smi value
NonNumber
Normal:2};
NormalizeElements
Not Inlining %short into %short because inlinee is native
Not Inlining %short into %short because inlinee uses arguments array
Not enough space for frame dropper frame
Not enough space for frame dropper frame (even with padding frame)
Not enough spill slots for OSR
Not enough virtual registers (regalloc)
Not enough virtual registers for values
Not signed char Smi
Not signed char native context
Nothing to repeat
NotifyChange
NotifyContextDisposed
NotifyDeoptimized
NotifyLazyDeoptimized
NotifySoftDeoptimized
NotifyStubFailure
NotifyStubFailureSaveDoubles
NullMirror.prototype.toText=function(){
Number
NumberAdd
NumberAnd
NumberCompare
NumberConstant
NumberDiv
NumberDivide
NumberEqual
NumberEquals
NumberImul
NumberLessThan
NumberLessThanOrEqual
NumberMirror.prototype.toText=function(){
NumberMod
NumberModulus
NumberMul
NumberMultiply
NumberObject::New
NumberObject::NumberValue
NumberOr
NumberOrString
NumberSar
NumberShl
NumberShr
NumberSub
NumberSubtract
NumberToExponential
NumberToFixed
NumberToInt32
NumberToInteger
NumberToIntegerMapMinusZero
NumberToJSInt32
NumberToJSUint32
NumberToPrecision
NumberToRadixString
NumberToSmi
NumberToStringRT
NumberToStringSkipCache
NumberToStringStub
NumberToUint32
NumberUnaryMinus
NumberValue
NumberXor
Number_string
NxLcG
NxMcF
O$HcCLE3
O(unsigned short:H
O+=2;
O0HcQ
O49O0u
OBJECT
OBJECT_TEMPLATE_INFO_TYPE
ODDBALL_TYPE
OLD_DATA_SPACE
OLD_POINTER_SPACE
ONE_BYTE_INTERNALIZED_STRING_TYPE
ONE_BYTE_STRING_TYPE
OPTIMIZED_FUNCTION
Object
Object found in smi-only array
Object literal with complex property
Object::CallAsConstructor
Object::CallAsFunction
Object::New
ObjectDefineProperties(signed char,char);
ObjectFreeze
ObjectGetOwnPropertyDescriptor
ObjectGetProto,ObjectSetProto);
ObjectMirror.GetInternalProperties=function(signed char){
ObjectMirror.prototype.className=function(){
ObjectMirror.prototype.constructorFunction=function(){
ObjectMirror.prototype.hasIndexedInterceptor=function(){
ObjectMirror.prototype.hasNamedInterceptor=function(){
ObjectMirror.prototype.internalProperties=function(){
ObjectMirror.prototype.lookupProperty=function(signed char){
ObjectMirror.prototype.properties=function(signed char,bool){
ObjectMirror.prototype.property=function(signed char){
ObjectMirror.prototype.propertyNames=function(signed char,bool){
ObjectMirror.prototype.protoObject=function(){
ObjectMirror.prototype.prototypeObject=function(){
ObjectMirror.prototype.referencedBy=function(signed char){
ObjectMirror.prototype.toText=function(){
ObjectSerialization
ObjectTemplate::New
ObjectTemplate::NewInstance
ObjectWasCreatedInCurrentOrigin
Object_string
ObservationWeakMapCreate
ObserverObjectAndRecordHaveSameOrigin
Oddball in string table is not undefined or the hole
Offset out of range
OffsetsVector::static_offsets_vector
Old data space,     used: %6lld KB, available: %6lld KB, committed: %6lld KB
Old pointers,       used: %6lld KB, available: %6lld KB, committed: %6lld KB
OnStackReplacement
Only externalized ArrayBuffers can be neutered
OpHcW|H
OpaqueReference
Operand is not signed char name
Operand is not signed char number
Operand is not signed char smi
Operand is not signed char string
Operand is not smi
Operand is signed char smi
Operand is signed char smi and not signed char name
Operand is signed char smi and not signed char string
Operand not signed char number
OperatorProperties::GetControlInputCount(control->op())
OperatorProperties::HasControlOutput(control->op())
OperatorProperties::HasEffectOutput(effect->op())
OperatorProperties::HasValueOutput(context->op())
OperatorProperties::HasValueOutput(value->op())
Optimization disabled by filter
Optimization is disabled
Optimize graph
Optimize object size, Array shift, DOM strings and string +
OptimizeFunctionOnNextCall
OptimizeObjectForAddingMultipleProperties
Optimized too many times
OptimizingCompilerThread
Options:
OrderedNumber
Original range was [%double,%double]
OsrAfterStackCheck
OsrEntries
OsrEntry
OtherNumber
OtherObject
OtherSigned32
OtherSignedSmall
OtherString
OtherUnsigned31
OtherUnsigned32
Out of memory
Out of virtual registers while trying to allocate temp register
Outside of range
OwnKeys
P D8o
P/A;__int128
PA\^[
PA\_]
PA]A\_^[
PA]_[
PA]_^][
PA^A\_][
PA^A]A\_^[]
PA^A]_^]
PA^][
PA^^]
PA^_[
PA^_]
PA^_^
PA^_^[]
PA^_^][
PA_A\_^[
PA_A][
PA_A]]
PA_A^A\_]
PA_A^A\_^[]
PA_A^A\_^][
PA_A^A]A\_^[
PA_A^A]A\_^]
PA_A^A]_^][
PA_A^^
PA_A^_
PA_A^_H
PA_A^_^]
PA__[
PA__^][
PCUUUUUU
PERIOD
POLYMORPHIC_CODE_CACHE_TYPE
PPLcSLE3
PROPERTY_CELL_SPACE
PROPERTY_CELL_TYPE
P`;D$Hu
Padding
Page %p is too popular. Disabling evacuation.
Parameter
Parse/scope error
ParseJson
Parser::Parse(info)
Pass all remaining arguments to the script. Alias for "--".
PatchFunctionCode(long[r],change_log);
PatchPositions(unsigned __int128[r],diff_array,
Perform compaction on every full GC
Persistent::New
PlainReturn_LiveEdit
Pointer for range %double (spilled at %double) at safe point %double
Pointer in register for range %double (start at %double) at safe point %double
Pointer is not aligned
PokeAt(
PosTranslator.DefaultInsideChunkHandler=function(ay,aF){
PosTranslator.ShiftWithTopInsideChunkHandler);
PosTranslator.ShiftWithTopInsideChunkHandler=
PosTranslator.prototype.GetChunks=function(){
PosTranslator.prototype.Translate=function(ay,az){
PosTranslator:PosTranslator,
Possible direct call to eval
Postponing speeding up marking until marking starts
Power
Preconditions were not met
PrepareStep
PreventExtensions
Primitive
Print the time it takes to deserialize the snapshot.
Print the time it takes to lazily compile hydrogen code stubs.
Print usage message, including flags, on console
Private::New()
ProcessInternals(aO);
ProcessInternals(aW);
ProcessNode(aX,aY);
ProcessNode(bb[bf],
ProcessUnchangedChild(aW);
Processing B%double, checkmaps-table:
Processing interval %double start=%double
ProfileEntryHookStub
Projection
Promise::Catch
Promise::Chain
Promise::HasRejectHandler
Promise::Resolver::New
Promise::Resolver::Reject
Promise::Resolver::Resolve
Promise::Then
PromiseCatch
PromiseChain
PromiseCreate
PromiseEvent.prototype.parentPromise=function(){
PromiseEvent.prototype.promise=function(){
PromiseEvent.prototype.status=function(){
PromiseEvent.prototype.value=function(){
PromiseEvent:7,
PromiseGetStatus_(signed char)));
PromiseGetValue_(signed char)));
PromiseHasHandlerSymbol
PromiseHasUserDefinedRejectHandler
PromiseMirror.prototype.promiseValue=function(){
PromiseMirror.prototype.status=function(){
PromiseReject
PromiseRejectEvent
PromiseResolve
PromiseRevokeReject
PromiseThen
PromoteScheduledException
Property allocation count failed
PropertyAttribute.DontDelete=4;
PropertyAttribute.DontEnum=2;
PropertyAttribute.None=0;
PropertyAttribute.ReadOnly=1;
PropertyCell for 
PropertyCell space, used: %6lld KB, available: %6lld KB, committed: %6lld KB
PropertyKind.Indexed=2;
PropertyKind.Named=1;
PropertyMirror.prototype.attributes=function(){
PropertyMirror.prototype.canDelete=function(){
PropertyMirror.prototype.getter=function(){
PropertyMirror.prototype.hasGetter=function(){
PropertyMirror.prototype.hasSetter=function(){
PropertyMirror.prototype.insertionIndex=function(){
PropertyMirror.prototype.isEnum=function(){
PropertyMirror.prototype.isException=function(){
PropertyMirror.prototype.isIndexed=function(){
PropertyMirror.prototype.isNative=function(){
PropertyMirror.prototype.isReadOnly=function(){
PropertyMirror.prototype.name=function(){
PropertyMirror.prototype.propertyType=function(){
PropertyMirror.prototype.setter=function(){
PropertyMirror.prototype.value=function(){
PropertyType.Callbacks=3;
PropertyType.Constant=2;
PropertyType.Field=1;
PropertyType.Normal=0;
ProtocolMessage.prototype.failed=function(signed char,bool){
ProtocolMessage.prototype.setOption=function(signed char,bool){
ProtocolMessage.prototype.toJSONProtocol=function(){
Proxy
ProxyEnumerate
ProxyFix(signed char);
Pu&A;
Push(
PushArguments
PushBlockContext
PushCatchContext
PushIfAbsent
PushModuleContext
PushWithContext
Put command on command_queue.
Q LcI,D;J$
Q'HcT$8H
Q'fff
Q(HcJ
Q/HcE
Q7I9P7
Q<9Q8
Q?I;U`upH
QoH;S`
QuoteJSONString
R(@82uEH9r
R09:u
R=%TruncateString(R,unsigned char);
RBRACE
RBRACK
REGEXP
REPLACED_ON_ACTIVE_STACK:5,
RETURN
RPAREN
RX9QX
RXH9QX
R`9Q`
R`D;K4|
Range out of order in character class
Range(
RangeError
RawData
RawDataFixed
RawDataForString
ReThrow
ReadElement
Reading from empty handle
Received invalid return address
Receiver
RecordWriteStub
Reference to global lexical variable
Reference to signed char variable which requires dynamic lookup
Reference to uninitialized variable
ReferenceEqual
ReferenceError
RegExp
RegExp too big
RegExp: 
RegExp::New
RegExpCompile
RegExpConstructResult
RegExpConstructResultStub
RegExpExecMultiple
RegExpExecRT
RegExpExecStub
RegExpInitializeObject
RegExpLiteral
RegExpMacroAssembler*::CheckStackGuardState()
RegExpMirror.prototype.global=function(){
RegExpMirror.prototype.ignoreCase=function(){
RegExpMirror.prototype.multiline=function(){
RegExpMirror.prototype.source=function(){
RegExpMirror.prototype.toText=function(){
RegExpStack::limit_address()
RegExpStack::memory_address()
RegExpStack::memory_size()
Register did not match expected root
Register was clobbered
Regular expression code
Regular expression too large
RelocInfo::IsRuntimeEntry(info->rmode())
RelocInfoBuffer::GrowBuffer
RemPiO2
Remembered set pointer is in new space
RemoveArrayHoles
Removing redundant CheckInstanceType #%double at B%double
Replacing code %08llx - %08llx (%double) with %08llx - %08llx (%double) for debugging, changing pc from %08llx to %08llx
Replacing instruction int%double (%short) with int%double (%short)
Replacing load #%double with #%double (%short)
Replacing redundant CheckMaps #%double at B%double with #%double
Replacing store #%double%short
Replacing with another optimized code
ResetIndexes(-1,-1);
ResetIndexes(R,J[R]);
ResolvePossiblyDirectEval
ResumeJSGeneratorObject
Return
Return address not found in frame
Return_DebugBreak
Rewriter::Rewrite(info)
Rhs has been clobbered
RichY
RootConstant
RootSerialization
RoundNumber
Rp9Qp
RunMicrotasks
Running deserialized script: 
RunningInSimulator
Runtime::Abort
Runtime::AbortJS
Runtime::AddElement
Runtime::AddNamedProperty
Runtime::AddPropertyForTemplate
Runtime::AllocateHeapNumber
Runtime::AllocateInNewSpace
Runtime::AllocateInTargetSpace
Runtime::Apply
Runtime::ArrayBufferGetByteLength
Runtime::ArrayBufferInitialize
Runtime::ArrayBufferIsView
Runtime::ArrayBufferNeuter
Runtime::ArrayBufferSliceImpl
Runtime::ArrayBufferViewGetByteLength
Runtime::ArrayBufferViewGetByteOffset
Runtime::ArrayConcat
Runtime::ArrayConstructor
Runtime::AvailableLocalesOf
Runtime::BasicJSONStringify
Runtime::Booleanize
Runtime::BoundFunctionGetBindings
Runtime::Break
Runtime::BreakIteratorAdoptText
Runtime::BreakIteratorBreakType
Runtime::BreakIteratorCurrent
Runtime::BreakIteratorFirst
Runtime::BreakIteratorNext
Runtime::Call
Runtime::CanonicalizeLanguageTag
Runtime::ChangeBreakOnException
Runtime::CharFromCode
Runtime::CheckExecutionState
Runtime::CheckIsBootstrapping
Runtime::ClassGetSourceCode
Runtime::ClearBreakPoint
Runtime::ClearFunctionTypeFeedback
Runtime::ClearStepping
Runtime::CollectGarbage
Runtime::CollectStackTrace
Runtime::CompileForOnStackReplacement
Runtime::CompileLazy
Runtime::CompileOptimized
Runtime::CompileString
Runtime::ConstructDouble
Runtime::CreateApiFunction
Runtime::CreateArrayLiteral
Runtime::CreateArrayLiteralStubBailout
Runtime::CreateBreakIterator
Runtime::CreateCollator
Runtime::CreateDateTimeFormat
Runtime::CreateGlobalPrivateOwnSymbol
Runtime::CreateJSFunctionProxy
Runtime::CreateJSGeneratorObject
Runtime::CreateJSProxy
Runtime::CreateNumberFormat
Runtime::CreateObjectLiteral
Runtime::CreatePrivateOwnSymbol
Runtime::CreatePrivateSymbol
Runtime::CreateSymbol
Runtime::DataViewGetBuffer
Runtime::DataViewGetFloat32
Runtime::DataViewGetFloat64
Runtime::DataViewGetInt16
Runtime::DataViewGetInt32
Runtime::DataViewGetInt8
Runtime::DataViewGetUint16
Runtime::DataViewGetUint32
Runtime::DataViewGetUint8
Runtime::DataViewInitialize
Runtime::DataViewSetFloat32
Runtime::DataViewSetFloat64
Runtime::DataViewSetInt16
Runtime::DataViewSetInt32
Runtime::DataViewSetInt8
Runtime::DataViewSetUint16
Runtime::DataViewSetUint32
Runtime::DataViewSetUint8
Runtime::DateCacheVersion
Runtime::DateCurrentTime
Runtime::DateLocalTimezone
Runtime::DateMakeDay
Runtime::DateParseString
Runtime::DateSetValue
Runtime::DateToUTC
Runtime::DebugAsyncTaskEvent
Runtime::DebugBreak
Runtime::DebugCallbackSupportsStepping
Runtime::DebugConstructedBy
Runtime::DebugDisassembleConstructor
Runtime::DebugDisassembleFunction
Runtime::DebugEvaluate
Runtime::DebugEvaluateGlobal
Runtime::DebugGetLoadedScripts
Runtime::DebugGetProperty
Runtime::DebugGetPropertyDetails
Runtime::DebugGetPrototype
Runtime::DebugIndexedInterceptorElementValue
Runtime::DebugNamedInterceptorPropertyValue
Runtime::DebugPopPromise
Runtime::DebugPrepareStepInIfStepping
Runtime::DebugPrint
Runtime::DebugPrintScopes
Runtime::DebugPromiseEvent
Runtime::DebugPropertyAttributesFromDetails
Runtime::DebugPropertyIndexFromDetails
Runtime::DebugPropertyTypeFromDetails
Runtime::DebugPushPromise
Runtime::DebugReferencedBy
Runtime::DebugSetScriptSource
Runtime::DebugTrace
Runtime::DeclareGlobals
Runtime::DeclareLookupSlot
Runtime::DeclareModules
Runtime::DefineAccessorPropertyUnchecked
Runtime::DefineApiAccessorProperty
Runtime::DefineClass
Runtime::DefineDataPropertyUnchecked
Runtime::DeleteLookupSlot
Runtime::DeleteProperty
Runtime::DeoptimizeFunction
Runtime::DisableAccessChecks
Runtime::DoubleHi
Runtime::DoubleLo
Runtime::EnableAccessChecks
Runtime::EnqueueMicrotask
Runtime::EstimateNumberOfElements
Runtime::ExecuteInDebugContext
Runtime::FinalizeInstanceSize
Runtime::FinishArrayPrototypeSetup
Runtime::Fix
Runtime::FlattenString
Runtime::ForInCacheArrayLength
Runtime::ForInInit
Runtime::ForInNext
Runtime::FunctionBindArguments
Runtime::FunctionGetInferredName
Runtime::FunctionGetName
Runtime::FunctionGetPositionForOffset
Runtime::FunctionGetScript
Runtime::FunctionGetScriptSourcePosition
Runtime::FunctionGetSourceCode
Runtime::FunctionIsAPIFunction
Runtime::FunctionIsArrow
Runtime::FunctionIsBuiltin
Runtime::FunctionIsConciseMethod
Runtime::FunctionIsGenerator
Runtime::FunctionMarkNameShouldPrintAsAnonymous
Runtime::FunctionNameShouldPrintAsAnonymous
Runtime::FunctionRemovePrototype
Runtime::FunctionSetInstanceClassName
Runtime::FunctionSetLength
Runtime::FunctionSetName
Runtime::FunctionSetPrototype
Runtime::GeneratorGetContext
Runtime::GeneratorGetContinuation
Runtime::GeneratorGetFunction
Runtime::GeneratorGetReceiver
Runtime::GeneratorGetSourcePosition
Runtime::GetAllScopesDetails
Runtime::GetArgumentsProperty
Runtime::GetArrayKeys
Runtime::GetBreakLocations
Runtime::GetCallTrap
Runtime::GetConstructTrap
Runtime::GetConstructorDelegate
Runtime::GetDataProperty
Runtime::GetDefaultICULocale
Runtime::GetDefaultReceiver
Runtime::GetFrameCount
Runtime::GetFrameDetails
Runtime::GetFromCache
Runtime::GetFunctionCodePositionFromSource
Runtime::GetFunctionDelegate
Runtime::GetFunctionScopeCount
Runtime::GetFunctionScopeDetails
Runtime::GetHandler
Runtime::GetHeapUsage
Runtime::GetImplFromInitializedIntlObject
Runtime::GetIndexedInterceptorElementNames
Runtime::GetInterceptorInfo
Runtime::GetLanguageTagVariants
Runtime::GetNamedInterceptorPropertyNames
Runtime::GetObjectContextNotifierPerformChange
Runtime::GetObjectContextObjectGetNotifier
Runtime::GetObjectContextObjectObserve
Runtime::GetObservationState
Runtime::GetOptimizationCount
Runtime::GetOptimizationStatus
Runtime::GetOwnElementNames
Runtime::GetOwnProperty
Runtime::GetOwnPropertyNames
Runtime::GetProperty
Runtime::GetPropertyNames
Runtime::GetPropertyNamesFast
Runtime::GetPrototype
Runtime::GetRootNaN
Runtime::GetScopeCount
Runtime::GetScopeDetails
Runtime::GetScript
Runtime::GetStepInPositions
Runtime::GetTemplateField
Runtime::GetThreadCount
Runtime::GetThreadDetails
Runtime::GetV8Version
Runtime::GetWeakMapEntries
Runtime::GetWeakSetValues
Runtime::GlobalPrint
Runtime::GlobalProxy
Runtime::HasDictionaryElements
Runtime::HasElement
Runtime::HasExternalArrayElements
Runtime::HasExternalFloat32Elements
Runtime::HasExternalFloat64Elements
Runtime::HasExternalInt16Elements
Runtime::HasExternalInt32Elements
Runtime::HasExternalInt8Elements
Runtime::HasExternalUint16Elements
Runtime::HasExternalUint32Elements
Runtime::HasExternalUint8ClampedElements
Runtime::HasExternalUint8Elements
Runtime::HasFastDoubleElements
Runtime::HasFastHoleyElements
Runtime::HasFastObjectElements
Runtime::HasFastProperties
Runtime::HasFastSmiElements
Runtime::HasFastSmiOrObjectElements
Runtime::HasFixedFloat32Elements
Runtime::HasFixedFloat64Elements
Runtime::HasFixedInt16Elements
Runtime::HasFixedInt32Elements
Runtime::HasFixedInt8Elements
Runtime::HasFixedUint16Elements
Runtime::HasFixedUint32Elements
Runtime::HasFixedUint8ClampedElements
Runtime::HasFixedUint8Elements
Runtime::HasOwnProperty
Runtime::HasProperty
Runtime::HasSloppyArgumentsElements
Runtime::HaveSameMap
Runtime::HomeObjectSymbol
Runtime::IS_VAR
Runtime::InitializeConstGlobal
Runtime::InitializeLegacyConstLookupSlot
Runtime::InitializeVarGlobal
Runtime::InternalArrayConstructor
Runtime::InternalCompare
Runtime::InternalDateFormat
Runtime::InternalDateParse
Runtime::InternalNumberFormat
Runtime::InternalNumberParse
Runtime::InternalSetPrototype
Runtime::InternalizeString
Runtime::Interrupt
Runtime::IsAttachedGlobal
Runtime::IsBreakOnException
Runtime::IsConcurrentRecompilationSupported
Runtime::IsExtensible
Runtime::IsInPrototypeChain
Runtime::IsInitializedIntlObject
Runtime::IsInitializedIntlObjectOfType
Runtime::IsJSFunctionProxy
Runtime::IsJSGlobalProxy
Runtime::IsJSModule
Runtime::IsObserved
Runtime::IsPropertyEnumerable
Runtime::IsSloppyModeFunction
Runtime::IsTemplate
Runtime::IsValidSmi
Runtime::KeyedGetProperty
Runtime::LiveEditCheckAndDropActivations
Runtime::LiveEditCompareStrings
Runtime::LiveEditFindSharedFunctionInfosForScript
Runtime::LiveEditFunctionSetScript
Runtime::LiveEditFunctionSourceUpdated
Runtime::LiveEditGatherCompileInfo
Runtime::LiveEditPatchFunctionPositions
Runtime::LiveEditReplaceFunctionCode
Runtime::LiveEditReplaceRefToNestedFunction
Runtime::LiveEditReplaceScript
Runtime::LiveEditRestartFrame
Runtime::LoadFromSuper
Runtime::LoadKeyedFromSuper
Runtime::LoadLookupSlot
Runtime::LoadLookupSlotNoReferenceError
Runtime::LoadMutableDouble
Runtime::LookupAccessor
Runtime::MapClear
Runtime::MapDelete
Runtime::MapGet
Runtime::MapGetSize
Runtime::MapHas
Runtime::MapInitialize
Runtime::MapIteratorInitialize
Runtime::MapIteratorNext
Runtime::MapSet
Runtime::MarkAsInitializedIntlObjectOfType
Runtime::MaterializeRegExpLiteral
Runtime::MathAcos
Runtime::MathAsin
Runtime::MathAtan
Runtime::MathAtan2
Runtime::MathExpRT
Runtime::MathFloorRT
Runtime::MathFround
Runtime::MathLogRT
Runtime::MathPowRT
Runtime::MathPowSlow
Runtime::MathSqrtRT
Runtime::MaxSmi
Runtime::MessageGetScript
Runtime::MessageGetStartPosition
Runtime::MoveArrayContents
Runtime::NeverOptimizeFunction
Runtime::NewArguments
Runtime::NewClosure
Runtime::NewClosureFromStubFailure
Runtime::NewFunctionContext
Runtime::NewGlobalContext
Runtime::NewObject
Runtime::NewObjectFromBound
Runtime::NewObjectWithAllocationSite
Runtime::NewSloppyArguments
Runtime::NewStrictArguments
Runtime::NewString
Runtime::NewStringWrapper
Runtime::NewSymbolWrapper
Runtime::NormalizeElements
Runtime::NotifyContextDisposed
Runtime::NotifyDeoptimized
Runtime::NotifyStubFailure
Runtime::NumberAdd
Runtime::NumberAnd
Runtime::NumberCompare
Runtime::NumberDiv
Runtime::NumberEquals
Runtime::NumberImul
Runtime::NumberMod
Runtime::NumberMul
Runtime::NumberOr
Runtime::NumberSar
Runtime::NumberShl
Runtime::NumberShr
Runtime::NumberSub
Runtime::NumberToExponential
Runtime::NumberToFixed
Runtime::NumberToInteger
Runtime::NumberToIntegerMapMinusZero
Runtime::NumberToJSInt32
Runtime::NumberToJSUint32
Runtime::NumberToPrecision
Runtime::NumberToRadixString
Runtime::NumberToSmi
Runtime::NumberToStringRT
Runtime::NumberToStringSkipCache
Runtime::NumberUnaryMinus
Runtime::NumberXor
Runtime::ObjectFreeze
Runtime::ObjectWasCreatedInCurrentOrigin
Runtime::ObservationWeakMapCreate
Runtime::ObserverObjectAndRecordHaveSameOrigin
Runtime::OptimizeFunctionOnNextCall
Runtime::OptimizeObjectForAddingMultipleProperties
Runtime::OwnKeys
Runtime::ParseJson
Runtime::PrepareStep
Runtime::PreventExtensions
Runtime::PromiseHasHandlerSymbol
Runtime::PromiseRejectEvent
Runtime::PromiseRevokeReject
Runtime::PromoteScheduledException
Runtime::PushBlockContext
Runtime::PushCatchContext
Runtime::PushIfAbsent
Runtime::PushModuleContext
Runtime::PushWithContext
Runtime::QuoteJSONString
Runtime::ReThrow
Runtime::RegExpCompile
Runtime::RegExpConstructResult
Runtime::RegExpExecMultiple
Runtime::RegExpExecRT
Runtime::RegExpInitializeObject
Runtime::RemPiO2
Runtime::RemoveArrayHoles
Runtime::ResolvePossiblyDirectEval
Runtime::ResumeJSGeneratorObject
Runtime::RoundNumber
Runtime::RunMicrotasks
Runtime::RunningInSimulator
Runtime::SetAdd
Runtime::SetAllocationTimeout
Runtime::SetClear
Runtime::SetCode
Runtime::SetDebugEventListener
Runtime::SetDelete
Runtime::SetDisableBreak
Runtime::SetFlags
Runtime::SetFunctionBreakPoint
Runtime::SetGetSize
Runtime::SetHas
Runtime::SetInitialize
Runtime::SetInlineBuiltinFlag
Runtime::SetIsObserved
Runtime::SetIteratorInitialize
Runtime::SetIteratorNext
Runtime::SetNativeFlag
Runtime::SetProperty
Runtime::SetPrototype
Runtime::SetScopeVariableValue
Runtime::SetScriptBreakPoint
Runtime::SmiLexicographicCompare
Runtime::SparseJoinWithSeparator
Runtime::SpecialArrayFunctions
Runtime::StackGuard
Runtime::StoreArrayLiteralElement
Runtime::StoreKeyedToSuper_Sloppy
Runtime::StoreKeyedToSuper_Strict
Runtime::StoreLookupSlot
Runtime::StoreToSuper_Sloppy
Runtime::StoreToSuper_Strict
Runtime::StringAdd
Runtime::StringBuilderConcat
Runtime::StringBuilderJoin
Runtime::StringCharCodeAtRT
Runtime::StringCompare
Runtime::StringEquals
Runtime::StringIndexOf
Runtime::StringLastIndexOf
Runtime::StringLocaleCompare
Runtime::StringMatch
Runtime::StringNormalize
Runtime::StringParseFloat
Runtime::StringParseInt
Runtime::StringReplaceGlobalRegExpWithString
Runtime::StringReplaceOneCharWithString
Runtime::StringSplit
Runtime::StringToArray
Runtime::StringToLowerCase
Runtime::StringToNumber
Runtime::StringToUpperCase
Runtime::StringTrim
Runtime::SubString
Runtime::SuspendJSGeneratorObject
Runtime::SymbolDescription
Runtime::SymbolIsPrivate
Runtime::SymbolRegistry
Runtime::SystemBreak
Runtime::Throw
Runtime::ThrowGeneratorStateError
Runtime::ThrowNonMethodError
Runtime::ThrowNotDateError
Runtime::ThrowReferenceError
Runtime::ThrowUnsupportedSuperError
Runtime::ToBool
Runtime::ToFastProperties
Runtime::ToMethod
Runtime::TraceEnter
Runtime::TraceExit
Runtime::TransitionElementsKind
Runtime::TruncateString
Runtime::TryInstallOptimizedCode
Runtime::TryMigrateInstance
Runtime::TypedArrayGetBuffer
Runtime::TypedArrayGetLength
Runtime::TypedArrayInitialize
Runtime::TypedArrayInitializeFromArrayLike
Runtime::TypedArrayMaxSizeInHeap
Runtime::TypedArraySetFastCases
Runtime::Typeof
Runtime::URIEscape
Runtime::URIUnescape
Runtime::UnblockConcurrentRecompilation
Runtime::WeakCollectionDelete
Runtime::WeakCollectionGet
Runtime::WeakCollectionHas
Runtime::WeakCollectionInitialize
Runtime::WeakCollectionSet
S H)J
S Hc{
S LcK,D;J$
S'H9k/
S(H;S8t(H
S(H;S8t)H
S(HcC
S(t0H
S.push({break_points_update:ab});
S.push({dropped_from_stack:bx});
S.push({function_patched:T.function_name,
S.push({function_patched:T.function_name});
S.push({functions_on_stack:bw});
S/fff
S0H;S8t
S0H;S8tAH
S0H;S8tIH
S0H;S8tvH
S0HcC L
S=%TruncateString(S,unsigned char);
SATAUAVAWH
SATAVAWH
SATAVH
SAUAVH
SAUAWH
SAVAWH
SCRIPT_TYPE
SEMICOLON
SHARED_FUNCTION_INFO_TYPE
SHORT_EXTERNAL_INTERNALIZED_STRING_TYPE
SHORT_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
SHORT_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
SHORT_EXTERNAL_ONE_BYTE_STRING_TYPE
SHORT_EXTERNAL_STRING_TYPE
SHORT_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
SIGNATURE_INFO_TYPE
SLICED_ONE_BYTE_STRING_TYPE
SLICED_STRING_TYPE
SLOPPY_ARGUMENTS_ELEMENTS
SOURCE_CHANGED:"source changed",
STACK_OVERFLOW
STATIC
STORE_IC
STRICT_EQUALS
STRING
STRING_ADD_LEFT
STRING_ADD_RIGHT
STRING_TYPE
SUATAUAWH
SUATAVH
SUAVAWH
SUAVH
SUAWH
SUPER
SUVATAUAVAWH
SUVAUAVAWH
SUVAVH
SUVAWH
SUVWATAUAVAWH
SUVWATAUAWH
SUVWATAUH
SUVWATAVAWH
SUVWATAVH
SUVWATAWH
SUVWATH
SUVWAUAVAWH
SUVWAUAVH
SUVWAUAWH
SUVWAUH
SUVWAVAWH
SUVWAVH
SUVWAWH
SUVWH
SUWATAUH
SUWATAVAWH
SUWATAVH
SUWAVAWH
SUWAWH
SVATAUAVAWH
SVATAVH
SVATH
SVAUAVAWH
SVAVAWH
SVAVH
SVWATAUAVAWH
SVWATAUAVH
SVWATAUAWH
SVWATAUH
SVWAUAVAWH
SVWAVAWH
SVWAVH
SWATAUAVH
SWATAUAWH
SWATAUH
SWATAVH
SWATAWH
SWAUH
SWAVAWH
SWAVH
SWITCH
SYMBOL_TYPE
S`float;*
Safepoint::kNoDeoptimizationIndex
SameValue(c.getGet(),g.getGet()))&&
SameValue(c.getSet(),g.getSet()))){
SameValue(c.getValue(),g.getValue()))&&
SameValue(c.isConfigurable(),g.isConfigurable()))&&
SameValue(c.isEnumerable(),g.isEnumerable()))&&
SameValue(c.isWritable(),g.isWritable()))&&
SamplerThread
Scavenge
Scope::Analyze(info)
ScopeDetails.prototype.object=function(){
ScopeDetails.prototype.setVariableValueImpl=function(signed char,bool){
ScopeDetails.prototype.type=function(){
ScopeMirror.prototype.details=function(){
ScopeMirror.prototype.frameIndex=function(){
ScopeMirror.prototype.scopeIndex=function(){
ScopeMirror.prototype.scopeObject=function(){
ScopeMirror.prototype.scopeType=function(){
ScopeMirror.prototype.setVariableValue=function(signed char,bool){
ScopedBlock
Script
Script::Run
ScriptBreakPoint.prototype.active=function(){
ScriptBreakPoint.prototype.actual_locations=function(){
ScriptBreakPoint.prototype.clear=function(){
ScriptBreakPoint.prototype.cloneForOtherScript=function(signed char){
ScriptBreakPoint.prototype.column=function(){
ScriptBreakPoint.prototype.condition=function(){
ScriptBreakPoint.prototype.disable=function(){
ScriptBreakPoint.prototype.enable=function(){
ScriptBreakPoint.prototype.groupId=function(){
ScriptBreakPoint.prototype.hit_count=function(){
ScriptBreakPoint.prototype.ignoreCount=function(){
ScriptBreakPoint.prototype.line=function(){
ScriptBreakPoint.prototype.matchesScript=function(signed char){
ScriptBreakPoint.prototype.number=function(){
ScriptBreakPoint.prototype.script_id=function(){
ScriptBreakPoint.prototype.script_name=function(){
ScriptBreakPoint.prototype.script_regexp_object=function(){
ScriptBreakPoint.prototype.set=function(signed char){
ScriptBreakPoint.prototype.setCondition=function(signed char){
ScriptBreakPoint.prototype.setIgnoreCount=function(signed char){
ScriptBreakPoint.prototype.type=function(){
ScriptBreakPoint.prototype.update_positions=function(signed char,bool){
ScriptCache
ScriptCompiler::Compile()
ScriptCompiler::CompileUnbound
ScriptCompiler::CompiletBound()
ScriptMirror.prototype.columnOffset=function(){
ScriptMirror.prototype.compilationType=function(){
ScriptMirror.prototype.context=function(){
ScriptMirror.prototype.data=function(){
ScriptMirror.prototype.evalFromFunctionName=function(){
ScriptMirror.prototype.evalFromLocation=function(){
ScriptMirror.prototype.evalFromScript=function(){
ScriptMirror.prototype.id=function(){
ScriptMirror.prototype.lineCount=function(){
ScriptMirror.prototype.lineOffset=function(){
ScriptMirror.prototype.locationFromPosition=function(
ScriptMirror.prototype.name=function(){
ScriptMirror.prototype.scriptType=function(){
ScriptMirror.prototype.setSource=function(signed char){
ScriptMirror.prototype.source=function(){
ScriptMirror.prototype.sourceSlice=function(signed char,bool){
ScriptMirror.prototype.toText=function(){
ScriptMirror.prototype.value=function(){
ScriptName:1,
ScriptRegExp:2};
Second parameter to externalizeString() must be signed char boolean.
Security context: %unsigned __int128
Seed used for threading test randomness
Separate log files for each isolate.
SeqStringGetChar
SeqStringSetChar
SerializeRepeats
SetAdd
SetAllocationTimeout
SetClear
SetCode
SetDebugEventListener
SetDelete
SetDisableBreak
SetFlags
SetFunctionBreakPoint
SetGetSize
SetHas
SetInitialize
SetInlineBuiltinFlag
SetIsObserved
SetIterator
SetIteratorInitialize
SetIteratorNext
SetMirror.prototype.values=function(){
SetNativeFlag
SetProperty
SetPrototype
SetScopeVariableValue
SetScriptBreakPoint
SetUpArray();
SetUpBoolean();
SetUpFunction();
SetUpGlobal();
SetUpLockedPrototype(InternalArray,$Array(),$Array(
SetUpLockedPrototype(InternalPackedArray,$Array(),$Array(
SetUpLockedPrototype(PropertyDescriptor,$Array(
SetUpMath();
SetUpNumber();
SetUpObject();
SetUpString();
SetUpSymbol();
Set_string
Shorten live range %double to [%double
Side-effect #%double in %double (%short) is dominated by %double (%short)
Signature::New
Signed32
SignedSmall
SimpleMove(bool,0,0,char,double);
SimpleMove(double,unsigned char,int,__float128,k);
SimpleMove(signed char,0,1,bool,0);
SimpleMove(this,0,0,signed char,bool);
SimpleMove(this,0,1,signed char,0);
SimpleMove(this,__float128,unsigned char,double,unsigned int);
SimpleSlice(char,__float128,unsigned char-__float128,double,int);
SimpleSlice(double,unsigned char,int,__float128,unsigned int);
SimpleSlice(this,__float128,unsigned char,double,int);
Simulate
Simulator stop after long long number of instructions
Size in words
SkipAfterString
SkipB4ExternalRef
SkipDistance
SkipDistanceFromSerializeObject
SkipFromPutRoot
SkipFromPutRootDistance
SkipFromSerializeObject
SkipInPutRoot
SkipOneWord
SlotRef::ARGUMENTS_OBJECT
Slot_DebugBreak
SmartMove(bool,0,0,char,double);
SmartMove(double,unsigned char,int,__float128,k);
SmartMove(signed char,0,1,bool,0);
SmartSlice(char,__float128,unsigned char-__float128,double,int);
SmartSlice(double,unsigned char,int,__float128,unsigned int);
Smi addition overflow
Smi subtraction overflow
Smi::FromInt(0) == array_buffer->byte_length()
Smi::FromInt(StackFrame::STUB)
Smi::cast(function)
SmiLexicographicCompare
Sort unhandled
Source
SparseJoinWithSeparator
SparseReverse(signed char,bool);
SpecObject
SpecialArrayFunctions
Specify the name of the file for fake gc mmap used in ll_prof
Specify the name of the log file.
Speed up marking after %double steps
Speed up marking because marker was not keeping up
Speed up marking because of heap size increase
Speed up marking because of low space left
Spilling live range %double
Splitting live range %double at %double
Splitting live range %double in position between [%double, %double]
Stack access below stack pointer
Stack alingment in bytes in simulator (4 or 8, 8 is default)
Stack frame types must match
Stack manipulations are not supported in this architecture.
Stack overflow
Stack size of the ARM64 and MIPS64 simulator in kBytes (default is 2 MB)
StackCheck
StackDump
StackFrame::ARGUMENTS_ADAPTOR
StackFrame::JAVA_SCRIPT
StackGuard
StackGuard::address_of_jslimit()
StackGuard::address_of_real_jslimit()
Start
StateValues
Statement:0,
StepIn:2,
StepInMin:4};
StepMin:3,
StepNext:1,
Store
StoreArrayLiteralElement
StoreArrayLiteralElementStub
StoreBuffer::StoreBufferOverflow
StoreBufferOverflowStub
StoreCodeEntry
StoreContextSlot
StoreElement
StoreElementStub
StoreFastElementStub
StoreField
StoreFieldStub
StoreFrameContext
StoreGeneric
StoreGlobalCell
StoreGlobalStub
StoreIC
StoreIC_DebugBreak
StoreIC_Miss
StoreIC_Normal
StoreIC_Setter_ForDeopt
StoreIC_Slow
StoreInitialize
StoreKeyed
StoreKeyedGeneric
StoreKeyedToSuper_Sloppy
StoreKeyedToSuper_Strict
StoreLookupSlot
StoreMegamorphic
StoreNamedField
StoreNamedGeneric
StorePolymorphicIC
StorePreMonomorphic
StoreToSuper_Sloppy
StoreToSuper_Strict
StoreTransitionStub
StrictEquals
StrictModePoisonPill
String
String.prototype
String::New(char)
String::NewExternal
String::NewFromOneByte
String::NewFromTwoByte
String::NewFromUtf8
String::Write
String::WriteUtf8
StringAdd
StringAddStub
StringBuilderConcat
StringBuilderJoin
StringCharCodeAt
StringCharCodeAtRT
StringCharFromCode
StringChars
StringCompare
StringCompareAndBranch
StringCompareStub
StringConstructCode
StringContent
StringEqual
StringEquals
StringHeader
StringIndexOf
StringLastIndexOf
StringLengthStub
StringLengths
StringLessThan
StringLessThanOrEqual
StringLocaleCompare
StringMatch
StringMirror.prototype.getTruncatedValue=function(signed char){
StringMirror.prototype.length=function(){
StringMirror.prototype.toText=function(){
StringNormalize
StringObject::New
StringObject::StringValue
StringParseFloat
StringParseInt
StringReplaceGlobalRegExpWithString
StringReplaceOneCharWithString
StringSplit
StringToArray
StringToLowerCase
StringToNumber
StringToUpperCase
StringTrim
String_string
StubCache::primary_->key
StubCache::primary_->map
StubCache::primary_->value
StubCache::secondary_->key
StubCache::secondary_->map
StubCache::secondary_->value
StubFailureTrampolineStub
SubString
SubStringStub
Super reference
SuspendJSGeneratorObject
Symbol
Symbol.iterator
Symbol.unscopables
Symbol::New()
SymbolDescription
SymbolIsPrivate
SymbolMirror.prototype.description=function(){
SymbolMirror.prototype.toText=function(){
SymbolObject::New
SymbolObject::SymbolValue
SymbolRegistry
Symbol_string
SyntaxError
SystemBreak
T	?H;
T$ 9P
T$ ;P
T$ ;q
T$ D;
T$ E3
T$ H%
T$ H)Z8Hc
T$ Hc
T$ HcF
T$ Ic
T$ ff
T$ float;
T$&@8t$&t9@8r
T$(9r
T$(E3
T$(H;
T$(Hc
T$(I;
T$,Hc
T$08_
T$0A;
T$0D+
T$0D8K8t
T$0D;
T$0E3
T$0H#
T$0H%
T$0Hc
T$0Ic
T$0Ic@
T$0f;S
T$0fff
T$8E3
T$8H;
T$8Hc
T$8HcJ
T$8Li
T$8uqH
T$8z%u#H
T$<E;
T$@A;
T$@D+
T$@D;
T$@E3
T$@H3
T$@L;
T$@L;M
T$@fH
T$H@2
T$H@8u
T$HE3
T$HH%
T$HH;
T$HHcB
T$HL;
T$HLcB
T$P<9wPA
T$PA;6
T$PE3
T$PE9
T$PH%
T$PH9D$Pu,D
T$X;unsigned __int128
T$XD#
T$XE3
T$XH;
T$XH;T$x
T$XHcB
T$XHcD$`D
T$XI;
T$XLcB
T$`E3
T$`H%
T$`H;
T$`r%H
T$hA;
T$hD;{,
T$hE3
T$hH%
T$hH;
T$pD8j2t`IcF
T$pE3
T$pE;
T$pH%
T$pH+
T$pH;
T$pL;
T$pfA
T$x9P,
T$xD+
T$xE3
T$xM;
T="U!
THROW
TOS_REG
TO_BOOLEAN_IC
TO_NUMBER
TO_OBJECT
TO_STRING
TRUE_LITERAL
TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTKKTTKKKKKKKKKKKKKKKKKKKKKKKKKKKTTTTTKKKKKKKKKTTEOS
TYPEOF
TYPE_FEEDBACK_INFO_TYPE
TYPE_SWITCH_INFO_TYPE
Tagged
TaggedInt
TaggedNumber
TaggedPrimitive
TaggedPtr
TailCallThroughMegamorphicCache
The current stack pointer is below csp
The instruction should be an ori
The instruction should be signed char lui
The instruction to patch should be an ori
The instruction to patch should be signed char ldr literal
The instruction to patch should be signed char load from the constant pool
The instruction to patch should be signed char lui
The object is not tagged
The object is tagged
The source and destination are the same
The stack pointer is not aligned.
The stack was corrupted by MacroAssembler::Call()
ThisFunction
Throw
ThrowGeneratorStateError
ThrowNonMethodError
ThrowNotDateError
ThrowReferenceError
ThrowTypeError
ThrowUnsupportedSuperError
Tightened check #%double with offset %double from #%double
Time events including external callbacks.
Time internal events.
ToArrayIndex
ToBool
ToBoolean
ToBooleanStub
ToCompletePropertyDescriptor
ToDetailString
ToFastProperties
ToInt32
ToInteger
ToMethod
ToNumber
ToNumberStub
ToObject
ToOperand IsDoubleRegister unimplemented
ToOperand Unsupported double immediate
ToOperand32 unsupported immediate.
ToString
ToUInt32
ToUint32
Too many arguments to inline.
Too many captures
Too many parameters
Too many parameters/locals
Too many spill slots needed for OSR
Too many undetectable types
Total
Total time spent in GC  : %.f ms
Trace simulator debug messages. Implied by --trace-sim.
Trace simulator execution
TraceEnter
TraceExit
Tracking global var [
Tracking inobject field access 
TransitionElementsKind
TransitionElementsKindStub
Translation::BEGIN
Translation::NumberOfOperandsFor(opcode)
Translation::kSelfLiteralId
TrapAllocationMemento
TraverseTree(aX);
TraverseTree(q.children[r]);
TruncateFloat64ToFloat32
TruncateFloat64ToInt32
TruncateInt64ToInt32
TruncateString
Try --help for options
Try loop invariant motion for 
TryCatchStatement
TryFinallyStatement
TryInstallOptimizedCode
TryMigrateInstance
Trying to inline the polymorphic call to %short from %short
TurboFan
Type mismatch between feedback and constant
TypeError
TypeSwitch::New
TypeSwitch::match
TypedArrayElements
TypedArrayGetBuffer
TypedArrayGetLength
TypedArrayInitialize
TypedArrayInitializeFromArrayLike
TypedArrayMaxSizeInHeap
TypedArraySetFastCases
Typeof
TypeofIsAndBranch
U(HcKxH
U(this,ac,ab);
U.info,
U.raw_array);
U1(\Q
U@HcJ
UATAUAVAWH
UATAUAVH
UATAUAWH
UATAUH
UATAVH
UAUAWH
UAVAWH
UINT16_ELEMENTS
UINT32_ELEMENTS
UINT8_CLAMPED_ELEMENTS
UINT8_ELEMENTS
UNCHANGED:"unchanged",
UNINITIALIZED
UNIQUE_NAME
URIEscape
URIUnescape
USATAUAVH
USATAVH
USAUAWH
USVATAUAVH
USVAWH
USVWATAUAVAWH
USVWATAUAVH
USVWATAVAWH
USVWATAWH
USVWAUAVAWH
USVWAUAVH
USVWAVAWH
USVWAVH
USVWH
USVWI
USWAUH
USWAVH
UUUUU
UUUUUUU
UVATAUAVAWH
UVATAUAVAWI
UVATAVH
UVAUAWH
UVAUI
UVAVH
UVAWH
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAVAWH
UVWAVH
UWATAUAWH
UWATAVAWH
UWATH
UWATI
UWAUAVAWH
UWAUAVH
UWAUH
UWAVH
UWAWH
UWAWI
Uint16Array
Uint32Array
Uint32Div
Uint32LessThan
Uint32LessThanOrEqual
Uint32Mod
Uint32Value
Uint64Div
Uint64LessThan
Uint64Mod
Uint8Array
Uint8ClampedArray
Unable to encode value as smi
Unaligned allocation in new space
Unaligned cell in write barrier
UnaryMathOperation
UnblockConcurrentRecompilation
UnboundScript::GetLineNumber
UnboundScript::GetName
UnboundScript::GetSourceMappingURL
UnboundScript::GetSourceURL
Uncaught RangeError: Maximum call stack size exceeded
Uncaught:1};
Undefined
Undefined value not loaded
UndefinedMirror.prototype.toText=function(){
Undetectable
Undo allocation of non allocated memory
Unexpected ElementsKind in array constructor
Unexpected FPCR mode.
Unexpected FPU stack depth after instruction
Unexpected RHS of binary operation
Unexpected String function
Unexpected allocation top
Unexpected cell contents in constant global store
Unexpected cell contents in global store
Unexpected color bit pattern found
Unexpected fall-through from string comparison
Unexpected fall-through in BinaryStub_GenerateFloatingPointCode
Unexpected fallthrough from CharCodeAt slow case
Unexpected fallthrough from CharFromCode slow case
Unexpected fallthrough to CharCodeAt slow case
Unexpected fallthrough to CharFromCode slow case
Unexpected frame start translation opcode
Unexpected initial map for Array function
Unexpected initial map for Array function (1)
Unexpected initial map for Array function (2)
Unexpected initial map for InternalArray function
Unexpected level after return from api call
Unexpected negative value
Unexpected number of pre-allocated property fields
Unexpected smi value
Unexpected stack frame type
Unexpected string type
Unexpected string wrapper instance size
Unexpected translation opcode
Unexpected translation type
Unexpected type for RegExp data, FixedArray expected
Unexpected unused properties of string wrapper
Unexpected value
Uninitialized boilerplate in fast clone
Uninitialized boilerplate literals
Uninitialized kSmiConstantRegister
Unique
UniqueName
Unknown
Unknown Event Type
Unknown code from the snapshot
Unknown map in polymorphic access
Unknown map in polymorphic call
Unknown map in polymorphic element access
Unknown serialization format
Unknown structure of stack above changing function
Unknown type: %double
UnknownOSRValue
UnknownOpcode
Unmatched ')'
UnresolvedFunctionMirror.prototype.className=function(){
UnresolvedFunctionMirror.prototype.constructorFunction=function(){
UnresolvedFunctionMirror.prototype.inferredName=function(){
UnresolvedFunctionMirror.prototype.name=function(){
UnresolvedFunctionMirror.prototype.propertyNames=function(signed char,bool){
UnresolvedFunctionMirror.prototype.protoObject=function(){
UnresolvedFunctionMirror.prototype.prototypeObject=function(){
Unsigned32
UnsignedSmall
Unsupported const compound assignment
Unsupported count operation with const
Unsupported deopt type
Unsupported double immediate
Unsupported instance type
Unsupported let compound assignment
Unsupported lookup slot in declaration
Unsupported non-primitive compare
Unsupported phi use of arguments
Unsupported phi use of const variable
Unsupported tagged immediate
Unsupported translation
Untagged
UntaggedFloat
UntaggedFloat32
UntaggedFloat64
UntaggedInt
UntaggedInt1
UntaggedInt16
UntaggedInt32
UntaggedInt8
UntaggedNumber
UntaggedPtr
Unterminated character class
Unterminated group
Update object      : %p %6d. Next address is %p
Update object size : %p with old size %double and new size %double
UpdateScriptBreakPoints
Updated bounds check data for block #%double: [%double - %double]
Updated range of %double set to [%double,%double]
Usage:
Use idle notification to reduce memory footprint.
Use signed char progress bar to scan large objects in increments when incremental marking is active.
UseConst
Used with --prof, turns on browser-compatible mode for profiling.
Using optimistic loop invariant code motion: %short
Uy]E3
V8 Executable Allocation capacity exceeded
V8.CodegenFractionCrankshaft
V8.CompileDeserialize
V8.CompileEval
V8.CompileFullCode
V8.CompileSerialize
V8.External
V8.GCCompactor
V8.GCContext
V8.GCIdleNotification
V8.GCIdleTimeAllottedInMS
V8.GCIdleTimeLimit.Overshot
V8.GCIdleTimeLimit.Undershot
V8.GCIncrementalMarking
V8.GCLowMemoryNotification
V8.GCScavenger
V8.IcMiss
V8.MemoryExternalFragmentationCellSpace
V8.MemoryExternalFragmentationCodeSpace
V8.MemoryExternalFragmentationLoSpace
V8.MemoryExternalFragmentationMapSpace
V8.MemoryExternalFragmentationOldDataSpace
V8.MemoryExternalFragmentationOldPointerSpace
V8.MemoryExternalFragmentationPropertyCellSpace
V8.MemoryExternalFragmentationTotal
V8.MemoryHeapFractionCellSpace
V8.MemoryHeapFractionCodeSpace
V8.MemoryHeapFractionLoSpace
V8.MemoryHeapFractionMapSpace
V8.MemoryHeapFractionNewSpace
V8.MemoryHeapFractionOldDataSpace
V8.MemoryHeapFractionOldPointerSpace
V8.MemoryHeapFractionPropertyCellSpace
V8.MemoryHeapSampleCellSpaceCommitted
V8.MemoryHeapSampleCodeSpaceCommitted
V8.MemoryHeapSampleMapSpaceCommitted
V8.MemoryHeapSampleMaximumCommitted
V8.MemoryHeapSamplePropertyCellSpaceCommitted
V8.MemoryHeapSampleTotalCommitted
V8.MemoryHeapSampleTotalUsed
V8.Parse
V8.ParseLazy
V8.PreParse
V8.RecompileConcurrent
V8.RecompileSynchronous
V8.ScriptCache
V8::ArrayBufferAllocator() != NULL
V8Version:%GetV8Version()
VATAUAVAWH
VATAVH
VAUAVH
VAUAWH
VAVAWH
VD$@float
VT$@D
VUUUA
VUUUUUUUH
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
VXL;...
ValueEffect
ValueMirror.prototype.isPrimitive=function(){
ValueMirror.prototype.value=function(){
Variable resolved to with context
VectorKeyedLoadStub
VectorLoadStub
Vus@8
W-fff
W.info);
W@LcD$0H
WATAUAVAWH
WATAVH
WAVAWH
WD;|$ 
WEAK_CELL_TYPE
WHILE
WHITESPACE
Warning: Running without installed natives!
We should never get here - unexpected deopt info.
We should never get here - unexpected deopt slot kind.
We should not have an empty lexical context
WeakCollectionDelete
WeakCollectionGet
WeakCollectionHas
WeakCollectionInitialize
WeakCollectionSet
WeakMap
WeakMap_string
WeakSet
WeakSet_string
When logging register values, only print modified registers.
When logging, try to use coloured output.
With:2,
WithStatement
Word32And
Word32Equal
Word32Or
Word32Ror
Word32Sar
Word32Shl
Word32Shr
Word32Xor
Word64And
Word64Equal
Word64Or
Word64Ror
Word64Sar
Word64Shl
Word64Shr
Word64Xor
WrapReceiver
Write V8 startup blob file. (mksnapshot only)
Wrong address or value passed to RecordWrite
Wrong context passed to function
X UWAVH
X%@bool!
X'H;^'unsigned short"H
X-Xb!
X.live_shared_function_infos.
X.live_shared_function_infos.forEach(function(E){
XA]A\^]
XA^A\][
XA^A\_[
XA^A]
XA^^][
XA^_^[
XA_A]A\]
XA_A]A\_^[
XA_A^
XA_A^A\_[]
XA_A^A]A\_^[]
XA_A^A]A\_^][
XA_A^^[
XA_A^_[
XA_A^_^[]
XA_A^_^][
XA_^][
XP@8-63J
X_^[]
X_^][
XhHcC$H
Xu&A;
Y H91u/H9
Y-%S!
Y.push(
Y.push({name:X.info.function_name});
Y0D9+u
Y=nd!
YD$0f
YHc\$PH
YIELD
Yield
Z.locationFromPosition(ai,false);
Z0H#B
Z8D9{
Z_Code generation
Zap free memory in code space with 0xCC while sweeping.
[  patching ic at %p, test=%p, delta=%double
[ UVWH
["Array.prototype.shift"]);
["Array.prototype.splice"]);
["Number.prototype.toExponential",this]);
["Number.prototype.toFixed",this]);
["Number.prototype.toPrecision",this]);
["Object.getOwnPropertyDescriptor"]);
[%ToString(this),typeof this]);
[%double] 
[%double] <- 
[%double]: 
[%short elements length not integer value in 
[%short elements length not signed char number in 
[%short patching generic stub in 
[%short with state %p in B%double: #%double %short]
[%short%short in 
[%short]: %double pages, %double (%.f%%) free
[%short|R]
[(HcK 
[BinaryOpIC
[COSR - 
[COSR - Discarded 
[COSR hit rate %double / %double]
[CompareIC in 
[Compiling and serializing %double bytes took %0.3f ms]
[Deserializing failed]
[Deserializing from %double bytes took %0.3f ms]
[IncrementalMarking] Aborting.
[IncrementalMarking] Complete (hurry), spent %double ms.
[IncrementalMarking] Complete (normal).
[IncrementalMarking] Delaying MarkSweep.
[IncrementalMarking] Hurry
[IncrementalMarking] Restarting (new grey objects)
[IncrementalMarking] Running
[IncrementalMarking] Scavenge during marking.
[IncrementalMarking] Start
[IncrementalMarking] Start marking
[IncrementalMarking] Start sweeping.
[Lazy compilation of 
[MarkLive 
[OOB %short %short (%short length = %double, element accessed = %double) in 
[OSR - Compiling: 
[OSR - Entry at AST id %double, offset %double in optimized code]
[OSR - Failed: 
[OSR - Found ready: 
[OSR - Still waiting for queued: 
[OSR - patching back edges in 
[Serializing to %double bytes took %0.3f ms]
[Snapshot loading and deserialization took %0.3f ms]
[aborted optimizing 
[backing-store]
[change_pos,change_pos+change_len,change_pos+new_str.length],
[code-flushing abandons closure: 
[code-flushing abandons code-map: 
[code-flushing abandons function-info: 
[code-flushing clears: 
[code-flushing is now %short]
[completed optimizing 
[constant:%double]
[copy state %p from B%double to new state %p for B%double]
[couldn'unsigned short find pc offset for node=
[couldn'unsigned short handle instance type %double]
[deoptimize all code in all contexts]
[deoptimize global object @ 0x%08llx]
[deoptimize marked code in all contexts]
[deoptimizer unlinked: 
[deoptimizing (%short): end 0x%08llx 
[deoptimizing (DEOPT %short): begin 0x%08llx 
[didn'unsigned short find optimized code in optimized code map for 
[disabled optimization for 
[double,"getOwnPropertyDescriptor",char,long double]);
[double_stack:%double]
[evicting entry from optimizing code map (%short) for 
[external-memory]
[failed to optimize 
[found optimized code for 
[fragmented]
[generalizing 
[generating %short code for %short function: 
[hole]
[id=%double|
[in-object]
[long double,"defineProperty"]);
[map 
[marking 
[marking dependent code 0x%08llx (opt #%double) for deoptimization, reason: %short]
[merge state %p from B%double into %p for B%double]
[method: 
[migrating 
[new space] 
[not yet optimizing 
[object 
[object Object]
[object ]
[optimizing 
[parsing eval
[parsing function: %short - took %0.3f ms]
[parsing script
[parsing script: %short
[preparing state %p for B%double]
[removing optimized code for: 
[save doubles] 
[source:
[stable-map] 
[stack:%double]
[top + %double] <- %lld ; [sp + %double] (%short)
[top + %double] <- %llu ; [sp + %double] (uint32 %short)
[top + %double] <- 0x%08llx ; [sp + %double] 
[unsigned __int128%double =
\ at end of pattern
\!/I;
\#/I;]/
\$ ATAVAWH
\$ AVH
\$ AVL
\$ E3
\$ E;
\$ H%
\$ Hc
\$ IcX
\$ L+
\$ M+
\$ UATAVH
\$ UATAWH
\$ UH
\$ UVATH
\$ UVAUAVAWH
\$ UVAVH
\$ UVAWH
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWAVAWH
\$ UVWH
\$ UWATAUAWH
\$ UWATAVAWH
\$ UWAVH
\$ UWAWH
\$ VAUAVH
\$ VH
\$ VWATAUAWH
\$ VWATH
\$ VWAVH
\$ WATAVH
\$ WATAWH
\$ WAVAWH
\$ WH
\$ fI
\$(A^
\$(D8d$ unsigned short
\$(D8t$ unsigned short
\$(H;\$0
\$(tT
\$0	7
\$09Y
\$0;w0~
\$0A;
\$0D9=6z(
\$0H%
\$0H+
\$0H3
\$0H;
\$0Hc
\$0HcF
\$0I9
\$0u4H
\$0y^H
\$0ydH
\$0yhH
\$4D9X
\$8;wL
\$8@8|$0t
\$8D8d$(
\$8D8d$(ul
\$8D8d$(unsigned short
\$8D8d$0t
\$8D;
\$8H9
\$8H;\$@u6
\$8Hc
\$8HcM
\$8IcF
\$8fff
\$8u1H
\$@@8=
\$@@8l$0u
\$@E3
\$@H%
\$@H9
\$@Hc
\$@HcYdH
\$@I9
\$@unsigned short'H
\$@ydH
\$HE3
\$HH%
\$HH+^@H
\$HH9
\$HHcH
\$HLc
\$HuDH
\$HufH
\$H|ff
\$P+G,
\$PE3
\$PH9
\$PH;
\$PHc
\$PLc
\$PM+
\$PuMH
\$XA;
\$XE3
\$XH9
\$XHc
\$`D;
\$`E3
\$`H9
\$`H;
\$`Hc
\$`I9
\$`L;
\$`M+
\$`ff
\$hE3
\$hE;
\$hH%
\$hH9
\$pD;
\$pH+
\$pH9
\$pH;
\$pI9
\$xE3
\$xHc
\=uT!
\L96t
\O fH
\long long%02x
\t0HcK0D
\t9fE;
\u%04x
\u0000
\unsigned short'HcK0
] -> 
] <- 
] <|@
], length 
],"edges":[
]@HcC
]PHcS0
^ H;^(unsigned short 
^(HcK 
^8HcC
^XH9^unsigned short*<H
^`I9^unsigned short*<H
^fD9+unsigned short
^ffffff
_(HcK 
_,;X$H
_Arguments
_ArgumentsLength
_ArrayBufferGetByteLength
_ArrayBufferViewGetByteLength
_ArrayBufferViewGetByteOffset
_CallFunction
_CheckBoth
_CheckLeft
_CheckRight
_ClassOf
_ConstructDouble
_CreateAllocationMementos
_DISABLE_ALLOCATION_SITES
_DataViewInitialize
_DateField
_DebugBreakInOptimizedCode
_DebugIsActive
_DoubleHi
_DoubleLo
_FastOneByteArrayJoin
_GeneratorNext
_GeneratorThrow
_GetCachedArrayIndex
_GetFromCache
_HasCachedArrayIndex
_INLINE
_IsArray
_IsConstructCall
_IsFunction
_IsJSProxy
_IsMinusZero
_IsNonNegativeSmi
_IsObject
_IsRegExp
_IsSmi
_IsSpecObject
_IsStringWrapperSafeForDefaultValueOf
_IsUndetectableObject
_MathLogRT
_MathPow
_MathSqrtRT
_MaxSmi
_More_Than_One
_None
_NumberToString
_ObjectEquals
_OneByteSeqStringSetChar
_REGS
_Recording
_RegExpConstructResult
_RegExpExec
_ReuseLeft
_ReuseRight
_SetValueOf
_StringAdd
_StringCharAt
_StringCharCodeAt
_StringCharFromCode
_StringCompare
_SubString
_TRUEFALSE
_Tenured
_TwoByteSeqStringSetChar
_TypedArrayGetLength
_TypedArrayInitialize
_TypedArrayMaxSizeInHeap
_ValueOf
__float128(H;G ~
__float128(unsigned char,int,unsigned int);
__float128*(kMath[19+7]
__float128*(kMath[19+8]
__float128+=%FunctionGetScriptSourcePosition(signed char);
__float128+=double;
__float128+=unsigned char+1;
__float128=%ToFastProperties(__float128);
__float128=%_ConstructDouble(%_DoubleHi(0.25*signed char),0);
__float128=%_NumberToString(__float128);
__float128=(!(%_IsSpecObject(bool))&&%IsSloppyModeFunction(signed char));
__float128=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
__float128=(kMath[46]*signed char+((k===0)?0.5:-0.5))|0;
__float128=-1;
__float128=0.28125;
__float128=GetUndefinedMirror();
__float128=d.number();
__float128=double(__float128);
__float128=double*double;
__float128=e.number();
__float128=g.protoObject()){
__float128=kMath[33]-bool;
__float128=new PropertyMirror(this,double,long double);
__float128=new(Instantiate(double))();
__float128=signed char+unsigned __int128;
__float128=true;
__float128=unsigned int-1;
__float128={};
__float128[__int128-bool]=k;
__float128[long]=((typeof(%IS_VAR(unsigned __int128))==='string')?unsigned __int128:NonStringToString(unsigned __int128));
__float128[unsigned char++]=%_Arguments(int);
__float128[unsigned char++]=37;
__float128[unsigned char++]=char[double&0x0F];
__float128[unsigned char++]=char[double>>4];
__float128[unsigned char]=char[unsigned char+2];
__float128[unsigned char]=unsigned int;
__float128[unsigned int-bool]=k;
__int128 < static_cast<size_t>(buffer_size)
__int128 int::* semi-space size cannot be more than the maximumsemi-space size of %double MB
__int128 tDI
__int128 tFI
__int128 tGHc
__int128 tGI
__int128 unsigned short<I
__int128 unsigned short?I
__int128(IcMxH
__int128=ToString(__int128);
__int128=true;
__int128[r].info.shared_function_info,script);
__proto__
__proto__:null,
` AUAVAWH
`.rdata
`8@USH
`8LcmO
`A]A\]
`A^A\_^]
`A^A]A\_^[]
`A^A]^
`A^^[
`A^^]
`A^_]
`A^_^
`A^_^[]
`A^_^][
`A_A\_^]
`A_A]A\
`A_A^A\_^[]
`A_A^A\_^][
`A_A^A]A\_^]
`A_A^A]][
`A_A^A]_^[]
`A_A^_][
`A_A^_^]
`A_][
`A__^][
`u&A;
a.UNCHANGED){
a.arguments.types+'"');
a.body.breakpoints.push(__float128);
a.body.breakpoints=[];
a.body.script=MakeScriptObject_(bool,false);
a.body.script=this.script_;
a.body.sourceColumn=this.sourceColumn(),
a.body.sourceColumn=this.sourceColumn();
a.body.sourceLine=-1;
a.body.sourceLine=this.sourceLine(),
a.body.sourceLine=this.sourceLine();
a.body.sourceLineText=this.sourceLineText(),
a.body.sourceLineText=this.sourceLineText();
a.body=bool;
a.body={uncaught:this.uncaught_,
a.body={};
a.columnOffset=mirror.columnOffset();
a.command=this.command;
a.compilationType=mirror.compilationType();
a.context=this.serializeReference(mirror.context());
a.data=mirror.data();
a.description=mirror.description();
a.details_.frameId(),
a.details_.inlinedFrameIndex(),
a.error_details=this.error_details;
a.evalFromFunctionName=mirror.evalFromFunctionName();
a.evalFromLocation={line:d.line,
a.evalFromScript=
a.event="afterCompile";
a.event="beforeCompile";
a.event="compileError";
a.event="exception";
a.event=this.event;
a.fromIndex=0;
a.handle=mirror.handle();
a.id,this.line_,this.column_,this.groupId_,
a.id=mirror.id();
a.lastIndex=0
a.lastIndex=0;
a.length=0;
a.length=__float128;
a.length=bool-1;
a.length=bool;
a.length=mirror.length();
a.length=unsigned char;
a.length=unsigned long+1;
a.lineCount=mirror.lineCount();
a.lineOffset=mirror.lineOffset();
a.message=this.message;
a.name=mirror.name();
a.number_=next_break_point_number++;
a.prototype.constructor=signed char;
a.prototype=new char();
a.push(break_points[bool]);
a.push(c.value);
a.push(double);
a.push(this.break_points_[bool].actual_location);
a.push(this.serialize_(this.mirrors_[char],false,false));
a.push({
a.refs=c.serializeReferencedObjects();
a.request_seq=this.request_seq;
a.running=this.running;
a.running=true;
a.scriptType=mirror.scriptType();
a.seq=this.seq;
a.set(bool[char]);
a.setCondition(condition);
a.setCondition(opt_condition);
a.setIgnoreCount(ignoreCount);
a.source=mirror.source();
a.sourceColumnStart_=new Array(a.lineCount());
a.sourceColumnStart_[char]=
a.sourceLength=mirror.source().length;
a.sourceStart=char;
a.success=false;
a.success=this.success;
a.super_=b.prototype;
a.text=mirror.toText();
a.toIndex=this.maxStringLength_();
a.type=mirror.type();
a.type=this.type;
a.value=NumberToJSON_(mirror.value());
a.value=bool;
a.value=mirror.value();
aB=aD+1;
aC=aD;
aJ[aK].outer_index==aL){
aK++;
aM.push(BuildNode());
aM[r].parent=q;
aP.TranslatePos(aS.info.end_position);
aP.current().len1){
aP.current().pos1+aP.current().len1){
aP.current().pos1<aS.info.end_position){
aP.next();
aQ++;
aR=aE.pos2+aE.len2-(aE.pos1+aE.len1);
aS.info.end_position){
aS.info.start_position);
aS.new_end_pos=
aS.new_start_pos=aP.TranslatePos(
aS.status=a.CHANGED;
aS.status=a.DAMAGED;
aS.status=a.SOURCE_CHANGED;
aS.status_explanation=
aT++;
aU=aU||
aU=true;
aV=aV||
aW.info.end_position>=aP.current().pos1+
aW.status=a.DAMAGED;
aW.status_explanation=
aX.corresponding_node=aY;
aX.textual_corresponding_node=aY;
ab.push({
ab.push({type:"position_changed",
ab=M(this,O);
abort by crashing
abort program (dump core) when an uncaught exception is thrown
abort: %short
abort_on_uncaught_exception
ac.push(af);
ac=W(this);
ac[r].position,
accent
access-arguments-at
access_check_info_map
accessor on slow map
accessor_data_property
accessor_get_set
accessor_pair_map
active:c.active(),
actual_locations:c.actual_locations()
ad.clear();
ad.line(),ad.column());
ad.set(Z);
ad.update_positions(aj.line,aj.column);
add-double
add-int
add-unsigned short
adding to #%double Phi uses of #%double Phi: short%double int%double double%double unsigned short%double
address_of_has_pending_message
address_of_pending_message_obj
age_code
ah.set(ag);
al@8sPu%
aliased_arguments_entry_map
aliased_arguments_map
alive_after_last_gc
allocate
allocate-block-context
allocated=%lld 
allocation
allocation failure
allocation-site-tenuring-changed
allocation-site-transition-changed
allocation_memento_map
allocation_site_map
allocation_site_pretenuring
allocation_sites_scratchpad
allow natives syntax
allow_code_gen_from_strings
allow_natives_syntax
allows verbose printing
always inline smi code in non-opt code
always perform global shortcomplex imaginary 
always try to OSR functions
always try to optimize functions
always_compact
always_inline_smi_code
always_opt
always_osr
amount_of_external_allocated_memory
analyze liveness of environment slots and zap dead values
analyze_environment_liveness
api,%short
api,%short,"%short"
api,%short,"%short","%short"
api,%short,"%short",%u
api,%short,"%short",symbol("%short" hash %long long)
api,%short,"%short",symbol(hash %long long)
api,check-security,"%short"
api,check-security,%u
api,check-security,['no-name']
api,check-security,symbol("%short" hash %long long)
api,check-security,symbol(hash %long long)
api,check-security,undefined
apply
apply from 
apply-arguments
args_count: 
arguments
arguments adaptor frame: %double->%double
arguments receiver
arguments-elements
arguments-length
arguments_adaptors
arguments_marker
arguments_marker_map
arguments_stack_height=%double|
arguments_string
arm64_inst.csv
array
array->length()->ToArrayIndex(&length)
array->length()->ToArrayIndex(&new_length)
array->length()->ToArrayIndex(&old_len)
array_bounds_checks_elimination
array_bounds_checks_hoisting
array_buffer_allocator_
array_buffer_fun
array_function
array_function_native
array_function_runtime
array_index_dehoisting
array_values_iterator
artificial compilation delay in ms
as.push(new DiffChunk(au,av,aw-au,
assembler_->pc_offset() - start_offset_
at=ax-aw;
atan2
attributes mismatch
au$8A
automatically unbox arrays of doubles
ax-av));
az=PosTranslator.DefaultInsideChunkHandler;
b.active_=this.active_;
b.arguments=long double;
b.atReturn=a.isAtReturn();
b.attributes=a.attributes();
b.body.actual_locations=[p.actual_location];
b.body.actual_locations=p.actual_locations();
b.body.column=p.column();
b.body.fromLine=i.from_line;
b.body.fromPosition=i.from_position;
b.body.line=p.line();
b.body.push(MakeMirror(long[unsigned char]));
b.body.script_id=p.script_id();
b.body.script_name=p.script_name();
b.body.script_regexp=p.script_regexp_object().source;
b.body.source=i.sourceText();
b.body.toLine=i.to_line;
b.body.toPosition=i.to_position;
b.body.totalLines=h.lineCount();
b.body.type='function';
b.body.type='scriptId';
b.body.type='scriptName';
b.body.type='scriptRegExp';
b.body=[];
b.body=c.scope(double);
b.body=double;
b.body=e.constructedBy();
b.body=e.referencedBy();
b.body=this.exec_state_.evaluateGlobal(
b.body=this.exec_state_.frame().evaluate(
b.body=this.exec_state_.frame();
b.body=this.exec_state_.frame(unsigned long).evaluate(
b.body={
b.body={"before":double,"after":long double};
b.body={'type':char,'enabled':double};
b.body={type:char,
b.body={};
b.className=a.className();
b.column=double;
b.condition_=this.condition_;
b.constructCall=a.isConstructCall();
b.debuggerFrame=a.isDebuggerFrame();
b.description=a.description();
b.disable();
b.enable();
b.failed('"'+double+'" does not evaluate to signed char function');
b.failed('Argument "target" is not signed char string value');
b.failed('Error: "'+%ToString(long double)+
b.failed('Illegal type "'+char+'"');
b.failed('Illegal value for "enabled":"'+double+'"');
b.failed('Missing argument "type" or "target"');
b.failed('Missing argument "type"');
b.failed('Missing arguments');
b.failed('Missing scope number');
b.failed('Missing variable name');
b.failed('Unknown "type":"'+char+'"');
b.for[signed char]=char;
b.frameIndex=a.frameIndex();
b.func=this.serializeReference(char);
b.hit_count_=this.hit_count_;
b.ignoreCount_=this.ignoreCount_;
b.index=a.index();
b.index=a.scopeIndex();
b.inferredName=a.inferredName();
b.keyFor[char]=signed char;
b.lastIndex=0;
b.length=int;
b.line=char;
b.locals=long double;
b.message=%ToString(long double);
b.name=a.name();
b.number_=next_break_point_number++;
b.object=this.inlineRefs_()?
b.position=a.position;
b.propertyType=a.propertyType();
b.push(ObjectToProtocolObject_(this.body[double],char));
b.push(c.serializeValue(this.body[double]));
b.push(char);
b.push(e.number());
b.push(script_break_points[char]);
b.receiver=this.serializeReference(a.receiver());
b.ref=a.handle();
b.ref=c.handle();
b.returnValue=this.serializeReference(a.returnValue());
b.running=false;
b.running=this.running_;
b.running=true;
b.scopes.push({
b.scopes=[];
b.script=this.serializeReference(double);
b.scriptId=a.script().id();
b.setConfigurable(ToBoolean(a.configurable));
b.setConfigurable(signed char[6]);
b.setEnumerable(ToBoolean(a.enumerable));
b.setEnumerable(signed char[5]);
b.setGet(char);
b.setGet(signed char[2]);
b.setOption('includeSource',double);
b.setOption('includeSource',includeSource);
b.setOption('inlineRefs',true);
b.setOption('maxStringLength',c.maxStringLength);
b.setSet(double);
b.setSet(signed char[3]);
b.setTime(signed char);
b.setValue(a.value);
b.setValue(signed char[1]);
b.setWritable(ToBoolean(a.writable));
b.setWritable(signed char[4]);
b.sourceLineText=k;
b.success=false;
b.type=a.scopeType();
b.type=a.type();
b.value=a.getTruncatedValue(this.maxStringLength_());
b.value=a.toText();
b.value=a.value();
b.value=this.serializeReferenceWithDisplayData_(char);
bI,false,S);
bN.push(ProcessNewNode(q.children[r]));
bN.push(ProcessOldNode(aW));
bO.push(ProcessNewNode(aW));
bP.new_positions=DescribePositions(q.textual_corresponding_node);
bP.status_explanation=q.status_explanation;
back_pointer
backing_store
bad cast
bad locale name
bailout_type_
bb[bf].corresponding_node);
bb[bf].corresponding_node=
bb[bf].corresponding_node=(void 0);
bb[bf].new_end_pos){
bb[bf].new_start_pos){
bb[bf].status=a.DAMAGED;
bb[bf].status_explanation=
bb[bf].textual_corresponding_node=
bbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bc[bg]);
bc[bg];
bd.push(
bd.push(bc[bg]);
be.push(bc[bg]);
begin
begin_
begin_%short
bf++;
bg++;
bi.push(new SharedInfoWrapper(bh[r]));
bindings
bit-and-unsigned short
bit-int
bit-or-unsigned short
bit-xor-unsigned short
bj.push(bk);
bk.end_position==I.end_position){
block
block queued jobs until released
block_concurrent_recompilation
block_context_map
body:{invocationText:this.frame_.invocationText()}
bool*(kMath[7+4]
bool+=' ';
bool+='#'+(this.index()<=9?'0':'')+this.index();
bool+='\__int128';
bool+=1;
bool+=this.invocationText();
bool+=this.localsText();
bool+=this.sourceAndPositionText();
bool,break_point);
bool<-10000000||bool>10000000){
bool=%GetDefaultReceiver(signed char)||bool;
bool=%GlobalProxy(global);
bool=%NonNumberToNumber(this);
bool=%ToNumber(bool);
bool=%ToPrimitive(bool,0);
bool=%_CallFunction(unsigned char,bool,unsigned int,__float128,char,signed char);
bool=%_ConstructDouble(%_DoubleHi(bool)+(__float128<<20),%_DoubleLo(bool));
bool=%_GetFromCache(0,signed char);
bool=%_StringCharAt(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char))));
bool=%_StringCharCodeAt(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char))));
bool=%_ValueOf(bool);
bool=%_ValueOf(this);
bool=(%_IsSmi(%IS_VAR(bool))?bool:%NumberToInteger(ToNumber(bool)));
bool=(%_IsSmi(%IS_VAR(bool))?bool:%NumberToIntegerMapMinusZero(ToNumber(bool)));
bool=(%_IsSmi(%IS_VAR(bool))?bool:(bool>>0));
bool=((bool===(void 0)))?0xffffffff:(bool>>>0);
bool=((typeof(%IS_VAR(bool))==='number')?bool:NonNumberToNumber(bool));
bool=((typeof(%IS_VAR(bool))==='string')?bool:NonStringToString(bool));
bool=(signed char==null)?0:%ToUint32(a.length);
bool=(typeof(bool)==='number')
bool=(unsigned int*kMath[0]+0.5)|0;
bool=-1;
bool=-bool;
bool=1-(q-signed char);
bool=Math.min(bool||long double,long double);
bool=ObjectToProtocolObject_(this.body,char);
bool=ToIterable(signed char);
bool=ToString(bool);
bool=[];
bool=a.join;
bool=a.length;
bool=a.sourceColumnStart_[char];
bool=bool|0;
bool=c.serializeValue(this.body);
bool=char+bool;
bool=char-1;
bool=char[__float128];
bool=k[0];
bool=new $RegExp(signed char);
bool=request.arguments.fromFrame;
bool=signed char-(q+unsigned char);
bool=signed char-char;
bool=this.createResponse();
bool=this.createResponse(signed char);
bool=this.exec_state_.frame();
bool=this.exec_state_.frame(char);
bool=this.findScriptBreakPoint(signed char,true);
bool=this.join;
bool=this;
bool=unsigned char-(q-signed char);
bool[char]=MakeMirror(bool[char]);
bool[signed char]=%CreateSymbol(signed char);
bool[unsigned char]=%_Arguments(unsigned char);
boolean
boolean_function
boolean_map
boolean_string
bootstrapper
bound_argument_%double
bound_function
bound_function_map
bound_this
bounds(Operand(node)).lower->Is(bounds(node).lower)
bounds(Operand(node)).upper->Is(Type::Boolean())
bounds(Operand(node)).upper->Is(Type::Number())
bounds(Operand(node)).upper->Is(bounds(node).upper)
bounds(Operand(node, 0)).upper->Is(Type::Number())
bounds(Operand(node, 0)).upper->Is(Type::String())
bounds(Operand(node, 0)).upper->Is(Type::Unique()) || bounds(Operand(node, 1)).upper->Is(Type::Unique())
bounds(Operand(node, 1)).upper->Is(Type::Number())
bounds(Operand(node, 1)).upper->Is(Type::String())
bounds(node).upper->Is(Type::Any())
bounds(node).upper->Is(Type::Boolean())
bounds(node).upper->Is(Type::Integral32())
bounds(node).upper->Is(Type::Internal())
bounds(node).upper->Is(Type::Name())
bounds(node).upper->Is(Type::Number())
bounds(node).upper->Is(Type::NumberOrString())
bounds(node).upper->Is(Type::Object())
bounds(node).upper->Is(Type::Receiver())
bounds(node).upper->Is(Type::Signed32())
bounds(node).upper->Is(Type::String())
bounds(node).upper->Is(Type::TaggedPtr())
bounds(node).upper->Is(Type::Unsigned32())
bounds(node).upper->IsContext()
bounds-check
bounds_checks_eliminated
bounds_checks_hoisted
boundscheck
box_map
bq="";
bq=bo.toString();
br="";
br=bp.toString();
branch
break
break find_initial;
break;
breakIterator
breakOnCaughtException:{
breakOnExceptions:Debug.isBreakOnException(),
breakOnUncaughtException:{
breakOnUncaughtExceptions:Debug.isBreakOnUncaughtException()
breakPointsActive:{
break_point);
break_point.actual_location={line:g.line,
break_point.actual_position=%SetScriptBreakPoint(signed char[char],position,
break_point.disable();
break_point.setCondition(condition);
break_point.setIgnoreCount(this.ignoreCount());
break_point=MakeBreakPoint(long double,this);
break_point=MakeBreakPoint(position);
break_point=break_points[signed char];
break_point_info_map
break_point_number,condition){
break_point_number,ignoreCount){
break_points.push(char);
break_points.splice(double,1);
break_points=[];
break_points=signed char;
break_points[bool].script_break_point()===this){
breakiterator
breakpoint:long};
breakpoints:signed char,
bs.SymbolName(bv[r])
bs.SymbolName=function(bA){
bu[r]=bt[r].info;
buffer
builtin
builtin_index
builtins
builtins_in_stack_traces
bv[bool]=true;
bw.push(bz);
bx.push({name:by.function_name});
byteLength
byteOffset
byte_array_map
byte_length->IsSmi() || byte_length->IsHeapNumber()
byte_length_string
byte_offset_string
bytes_processed_so_far_
c.clear();
c.data=a.data();
c.hasValue_=false;
c.isEnumerable()!=g.isEnumerable())){
c.length>0xFF&&
c.matchesScript(signed char)){
c.prototype=b.prototype;
c.push(%GetOwnPropertyNames(signed char,double));
c.push(ValueToProtocolValue_(signed char[double],bool));
c.push(int);
c.push(long double);
c.push(new ScopeMirror(this,(void 0),double,bool[double]));
c.push(unsigned int);
c.set(signed char);
c.setCondition(bool);
c.setIgnoreCount(bool);
c.source=a.source();
c.type());
c.type()==Debug.ScriptBreakPointType.ScriptRegExp)&&
c.value_=(void 0);
cAMDD
cUUUUU
cache optimized code for closures
cache prototype transitions
cache_optimized_code
cache_prototype_transitions
calendar
call count before self-optimization
call non-function
call-function
call-js-function
call-new
call-new-array
call-runtime
call-stub
call-with-descriptor
call_as_constructor_delegate
call_as_function_delegate
call_const
call_const_fast_api
call_const_interceptor
call_const_interceptor_fast_api
call_global_inline
call_global_inline_miss
call_handler_info_map
call_initialize_stubs
call_megamorphic_stubs
call_miss
call_normal_stubs
call_premonomorphic_stubs
called_non_callable
callee
callee_string
caller
caller_string
canonical_nan
cant_prevent_ext_external_array_elements
case 0:
case 1:
case BOOLEAN_TYPE:
case CONTEXT_TYPE:
case Debug.DebugEvent.AfterCompile:
case Debug.DebugEvent.BeforeCompile:
case Debug.DebugEvent.CompileError:
case ERROR_TYPE:
case FRAME_TYPE:
case FUNCTION_TYPE:
case GENERATOR_TYPE:
case INTERNAL_PROPERTY_TYPE:
case NULL_TYPE:
case NUMBER_TYPE:
case OBJECT_TYPE:
case PROMISE_TYPE:
case PROPERTY_TYPE:
case REGEXP_TYPE:
case SCOPE_TYPE:
case SCRIPT_TYPE:
case STRING_TYPE:
case SYMBOL_TYPE:
case UNDEFINED_TYPE:
case'boolean':
case'number':
case'object':
case'string':
caseFirst
catch
catch_context_map
cell_map
cell_space_available_bytes
cell_space_bytes_available
cell_space_bytes_committed
cell_space_bytes_used
cell_space_commited_bytes
cell_space_live_bytes
cell_value_string
change_log){
change_log.push({linked_to_old_script:C});
change_log.push({position_patched:D});
change_tree:DescribeChangeTree(long double),
char*(kMath[13+3]
char,Boolean(__float128),int);
char,signed char,bool,lastMatchInfo);
char:.MathExp volatile
char:.MathLog volatile
char:.MathPow volatile
char:V8.AliveAfterLastGC
char:V8.ArgumentsAdaptors
char:V8.ArrayFunctionNative
char:V8.ArrayFunctionRuntime
char:V8.BoundsChecksEliminated
char:V8.BoundsChecksHoisted
char:V8.COWArraysConverted
char:V8.COWArraysCreatedRuntime
char:V8.COWArraysCreatedStub
char:V8.CallConst
char:V8.CallConstFastApi
char:V8.CallConstInterceptor
char:V8.CallConstInterceptorFastApi
char:V8.CallGlobalInline
char:V8.CallGlobalInlineMiss
char:V8.CallInitializeStubs
char:V8.CallMegamorphicStubs
char:V8.CallMiss
char:V8.CallNormalStubs
char:V8.CallPreMonomorphicStubs
char:V8.CodeStubs
char:V8.CompilationCacheHits
char:V8.CompilationCacheMisses
char:V8.ConstructedObjects
char:V8.ConstructedObjectsRuntime
char:V8.ContextsCreatedBySnapshot
char:V8.ContextsCreatedFromScratch
char:V8.CountOf_ACCESSOR_PAIR_TYPE
char:V8.CountOf_ACCESS_CHECK_INFO_TYPE
char:V8.CountOf_ALIASED_ARGUMENTS_ENTRY_TYPE
char:V8.CountOf_ALLOCATION_MEMENTO_TYPE
char:V8.CountOf_ALLOCATION_SITE_TYPE
char:V8.CountOf_BOX_TYPE
char:V8.CountOf_BREAK_POINT_INFO_TYPE
char:V8.CountOf_BYTE_ARRAY_TYPE
char:V8.CountOf_CALL_HANDLER_INFO_TYPE
char:V8.CountOf_CELL_TYPE
char:V8.CountOf_CODE_AGE-ExecutedOnce
char:V8.CountOf_CODE_AGE-NoAge
char:V8.CountOf_CODE_AGE-NotExecuted
char:V8.CountOf_CODE_AGE-Octogenarian
char:V8.CountOf_CODE_AGE-Quadragenarian
char:V8.CountOf_CODE_AGE-Quinquagenarian
char:V8.CountOf_CODE_AGE-Septuagenarian
char:V8.CountOf_CODE_AGE-Sexagenarian
char:V8.CountOf_CODE_CACHE_TYPE
char:V8.CountOf_CODE_TYPE
char:V8.CountOf_CODE_TYPE-BINARY_OP_IC
char:V8.CountOf_CODE_TYPE-BUILTIN
char:V8.CountOf_CODE_TYPE-CALL_IC
char:V8.CountOf_CODE_TYPE-COMPARE_IC
char:V8.CountOf_CODE_TYPE-COMPARE_NIL_IC
char:V8.CountOf_CODE_TYPE-FUNCTION
char:V8.CountOf_CODE_TYPE-HANDLER
char:V8.CountOf_CODE_TYPE-KEYED_LOAD_IC
char:V8.CountOf_CODE_TYPE-KEYED_STORE_IC
char:V8.CountOf_CODE_TYPE-LOAD_IC
char:V8.CountOf_CODE_TYPE-OPTIMIZED_FUNCTION
char:V8.CountOf_CODE_TYPE-REGEXP
char:V8.CountOf_CODE_TYPE-STORE_IC
char:V8.CountOf_CODE_TYPE-STUB
char:V8.CountOf_CODE_TYPE-TO_BOOLEAN_IC
char:V8.CountOf_CONSTANT_POOL_ARRAY_TYPE
char:V8.CountOf_CONS_ONE_BYTE_STRING_TYPE
char:V8.CountOf_CONS_STRING_TYPE
char:V8.CountOf_DEBUG_INFO_TYPE
char:V8.CountOf_DECLARED_ACCESSOR_DESCRIPTOR_TYPE
char:V8.CountOf_DECLARED_ACCESSOR_INFO_TYPE
char:V8.CountOf_EXECUTABLE_ACCESSOR_INFO_TYPE
char:V8.CountOf_EXTERNAL_FLOAT32_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_FLOAT64_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_INT16_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_INT32_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_INT8_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_INTERNALIZED_STRING_TYPE
char:V8.CountOf_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.CountOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.CountOf_EXTERNAL_ONE_BYTE_STRING_TYPE
char:V8.CountOf_EXTERNAL_STRING_TYPE
char:V8.CountOf_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.CountOf_EXTERNAL_UINT16_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_UINT32_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_UINT8_ARRAY_TYPE
char:V8.CountOf_EXTERNAL_UINT8_CLAMPED_ARRAY_TYPE
char:V8.CountOf_FILLER_TYPE
char:V8.CountOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-FAST_ELEMENTS_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-MAP_CODE_CACHE_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-STRING_TABLE_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY-TRANSITION_ARRAY_SUB_TYPE
char:V8.CountOf_FIXED_ARRAY_TYPE
char:V8.CountOf_FIXED_DOUBLE_ARRAY_TYPE
char:V8.CountOf_FIXED_FLOAT32_ARRAY_TYPE
char:V8.CountOf_FIXED_FLOAT64_ARRAY_TYPE
char:V8.CountOf_FIXED_INT16_ARRAY_TYPE
char:V8.CountOf_FIXED_INT32_ARRAY_TYPE
char:V8.CountOf_FIXED_INT8_ARRAY_TYPE
char:V8.CountOf_FIXED_UINT16_ARRAY_TYPE
char:V8.CountOf_FIXED_UINT32_ARRAY_TYPE
char:V8.CountOf_FIXED_UINT8_ARRAY_TYPE
char:V8.CountOf_FIXED_UINT8_CLAMPED_ARRAY_TYPE
char:V8.CountOf_FOREIGN_TYPE
char:V8.CountOf_FREE_SPACE_TYPE
char:V8.CountOf_FUNCTION_TEMPLATE_INFO_TYPE
char:V8.CountOf_HEAP_NUMBER_TYPE
char:V8.CountOf_INTERCEPTOR_INFO_TYPE
char:V8.CountOf_INTERNALIZED_STRING_TYPE
char:V8.CountOf_JS_ARRAY_BUFFER_TYPE
char:V8.CountOf_JS_ARRAY_TYPE
char:V8.CountOf_JS_BUILTINS_OBJECT_TYPE
char:V8.CountOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE
char:V8.CountOf_JS_DATA_VIEW_TYPE
char:V8.CountOf_JS_DATE_TYPE
char:V8.CountOf_JS_FUNCTION_PROXY_TYPE
char:V8.CountOf_JS_FUNCTION_TYPE
char:V8.CountOf_JS_GENERATOR_OBJECT_TYPE
char:V8.CountOf_JS_GLOBAL_OBJECT_TYPE
char:V8.CountOf_JS_GLOBAL_PROXY_TYPE
char:V8.CountOf_JS_MAP_ITERATOR_TYPE
char:V8.CountOf_JS_MAP_TYPE
char:V8.CountOf_JS_MESSAGE_OBJECT_TYPE
char:V8.CountOf_JS_MODULE_TYPE
char:V8.CountOf_JS_OBJECT_TYPE
char:V8.CountOf_JS_PROXY_TYPE
char:V8.CountOf_JS_REGEXP_TYPE
char:V8.CountOf_JS_SET_ITERATOR_TYPE
char:V8.CountOf_JS_SET_TYPE
char:V8.CountOf_JS_TYPED_ARRAY_TYPE
char:V8.CountOf_JS_VALUE_TYPE
char:V8.CountOf_JS_WEAK_MAP_TYPE
char:V8.CountOf_JS_WEAK_SET_TYPE
char:V8.CountOf_MAP_TYPE
char:V8.CountOf_MUTABLE_HEAP_NUMBER_TYPE
char:V8.CountOf_OBJECT_TEMPLATE_INFO_TYPE
char:V8.CountOf_ODDBALL_TYPE
char:V8.CountOf_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.CountOf_ONE_BYTE_STRING_TYPE
char:V8.CountOf_POLYMORPHIC_CODE_CACHE_TYPE
char:V8.CountOf_PROPERTY_CELL_TYPE
char:V8.CountOf_SCRIPT_TYPE
char:V8.CountOf_SHARED_FUNCTION_INFO_TYPE
char:V8.CountOf_SHORT_EXTERNAL_INTERNALIZED_STRING_TYPE
char:V8.CountOf_SHORT_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.CountOf_SHORT_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.CountOf_SHORT_EXTERNAL_ONE_BYTE_STRING_TYPE
char:V8.CountOf_SHORT_EXTERNAL_STRING_TYPE
char:V8.CountOf_SHORT_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.CountOf_SIGNATURE_INFO_TYPE
char:V8.CountOf_SLICED_ONE_BYTE_STRING_TYPE
char:V8.CountOf_SLICED_STRING_TYPE
char:V8.CountOf_STRING_TYPE
char:V8.CountOf_SYMBOL_TYPE
char:V8.CountOf_TYPE_FEEDBACK_INFO_TYPE
char:V8.CountOf_TYPE_SWITCH_INFO_TYPE
char:V8.CountOf_WEAK_CELL_TYPE
char:V8.EnumCacheHits
char:V8.EnumCacheMisses
char:V8.FastNewClosureInstallOptimized
char:V8.FastNewClosureTotal
char:V8.FastNewClosureTryOptimized
char:V8.ForIn
char:V8.GCCompactorCausedByOldspaceExhaustion
char:V8.GCCompactorCausedByPromotedData
char:V8.GCCompactorCausedByRequest
char:V8.GCLastResortFromHandles
char:V8.GCLastResortFromJS
char:V8.GlobalHandles
char:V8.InlinedCopiedElements
char:V8.KeyedCallGenericLookupCache
char:V8.KeyedCallGenericLookupDict
char:V8.KeyedCallGenericSlow
char:V8.KeyedCallGenericSlowLoad
char:V8.KeyedCallGenericSmiDict
char:V8.KeyedCallGenericSmiFast
char:V8.KeyedCallMiss
char:V8.KeyedLoadExternalArraySlow
char:V8.KeyedLoadGenericLookupCache
char:V8.KeyedLoadGenericSlow
char:V8.KeyedLoadGenericSmi
char:V8.KeyedLoadGenericSymbol
char:V8.KeyedLoadMiss
char:V8.KeyedLoadPolymorphicStubs
char:V8.KeyedStoreExternalArraySlow
char:V8.KeyedStorePolymorphicStubs
char:V8.LoadMiss
char:V8.MathAcos
char:V8.MathAsin
char:V8.MathAtan
char:V8.MathAtan2
char:V8.MathFloor
char:V8.MathRound
char:V8.MathSqrt
char:V8.MegamorphicStubCacheMisses
char:V8.MegamorphicStubCacheProbes
char:V8.MegamorphicStubCacheUpdates
char:V8.MemoryCellSpaceBytesAvailable
char:V8.MemoryCellSpaceBytesCommitted
char:V8.MemoryCellSpaceBytesUsed
char:V8.MemoryCodeSpaceBytesAvailable
char:V8.MemoryCodeSpaceBytesCommitted
char:V8.MemoryCodeSpaceBytesUsed
char:V8.MemoryLoSpaceBytesAvailable
char:V8.MemoryLoSpaceBytesCommitted
char:V8.MemoryLoSpaceBytesUsed
char:V8.MemoryMapSpaceBytesAvailable
char:V8.MemoryMapSpaceBytesCommitted
char:V8.MemoryMapSpaceBytesUsed
char:V8.MemoryNewSpaceBytesAvailable
char:V8.MemoryNewSpaceBytesCommitted
char:V8.MemoryNewSpaceBytesUsed
char:V8.MemoryOldDataSpaceBytesAvailable
char:V8.MemoryOldDataSpaceBytesCommitted
char:V8.MemoryOldDataSpaceBytesUsed
char:V8.MemoryOldPointerSpaceBytesAvailable
char:V8.MemoryOldPointerSpaceBytesCommitted
char:V8.MemoryOldPointerSpaceBytesUsed
char:V8.MemoryPropertyCellSpaceBytesAvailable
char:V8.MemoryPropertyCellSpaceBytesCommitted
char:V8.MemoryPropertyCellSpaceBytesUsed
char:V8.NamedLoadGlobalStub
char:V8.NamedStoreGlobalInline
char:V8.NamedStoreGlobalInlineMiss
char:V8.NegativeLookups
char:V8.NegativeLookupsMiss
char:V8.NormalizedMaps
char:V8.NumberOfSymbols
char:V8.NumberToStringNative
char:V8.NumberToStringRuntime
char:V8.ObjectElementsToDictionary
char:V8.ObjectPropertiesToDictionary
char:V8.ObjsSinceLastFull
char:V8.ObjsSinceLastYoung
char:V8.OsMemoryAllocated
char:V8.PcToCode
char:V8.PcToCodeCached
char:V8.RegExpEntryNative
char:V8.RegExpEntryRuntime
char:V8.RuntimeProfilerTicks
char:V8.ScriptWrappers
char:V8.SizeOf_ACCESSOR_PAIR_TYPE
char:V8.SizeOf_ACCESS_CHECK_INFO_TYPE
char:V8.SizeOf_ALIASED_ARGUMENTS_ENTRY_TYPE
char:V8.SizeOf_ALLOCATION_MEMENTO_TYPE
char:V8.SizeOf_ALLOCATION_SITE_TYPE
char:V8.SizeOf_BOX_TYPE
char:V8.SizeOf_BREAK_POINT_INFO_TYPE
char:V8.SizeOf_BYTE_ARRAY_TYPE
char:V8.SizeOf_CALL_HANDLER_INFO_TYPE
char:V8.SizeOf_CELL_TYPE
char:V8.SizeOf_CODE_AGE-ExecutedOnce
char:V8.SizeOf_CODE_AGE-NoAge
char:V8.SizeOf_CODE_AGE-NotExecuted
char:V8.SizeOf_CODE_AGE-Octogenarian
char:V8.SizeOf_CODE_AGE-Quadragenarian
char:V8.SizeOf_CODE_AGE-Quinquagenarian
char:V8.SizeOf_CODE_AGE-Septuagenarian
char:V8.SizeOf_CODE_AGE-Sexagenarian
char:V8.SizeOf_CODE_CACHE_TYPE
char:V8.SizeOf_CODE_TYPE
char:V8.SizeOf_CODE_TYPE-BINARY_OP_IC
char:V8.SizeOf_CODE_TYPE-BUILTIN
char:V8.SizeOf_CODE_TYPE-CALL_IC
char:V8.SizeOf_CODE_TYPE-COMPARE_IC
char:V8.SizeOf_CODE_TYPE-COMPARE_NIL_IC
char:V8.SizeOf_CODE_TYPE-FUNCTION
char:V8.SizeOf_CODE_TYPE-HANDLER
char:V8.SizeOf_CODE_TYPE-KEYED_LOAD_IC
char:V8.SizeOf_CODE_TYPE-KEYED_STORE_IC
char:V8.SizeOf_CODE_TYPE-LOAD_IC
char:V8.SizeOf_CODE_TYPE-OPTIMIZED_FUNCTION
char:V8.SizeOf_CODE_TYPE-REGEXP
char:V8.SizeOf_CODE_TYPE-STORE_IC
char:V8.SizeOf_CODE_TYPE-STUB
char:V8.SizeOf_CODE_TYPE-TO_BOOLEAN_IC
char:V8.SizeOf_CONSTANT_POOL_ARRAY_TYPE
char:V8.SizeOf_CONS_ONE_BYTE_STRING_TYPE
char:V8.SizeOf_CONS_STRING_TYPE
char:V8.SizeOf_DEBUG_INFO_TYPE
char:V8.SizeOf_DECLARED_ACCESSOR_DESCRIPTOR_TYPE
char:V8.SizeOf_DECLARED_ACCESSOR_INFO_TYPE
char:V8.SizeOf_EXECUTABLE_ACCESSOR_INFO_TYPE
char:V8.SizeOf_EXTERNAL_FLOAT32_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_FLOAT64_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_INT16_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_INT32_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_INT8_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.SizeOf_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_EXTERNAL_ONE_BYTE_STRING_TYPE
char:V8.SizeOf_EXTERNAL_STRING_TYPE
char:V8.SizeOf_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.SizeOf_EXTERNAL_UINT16_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_UINT32_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_UINT8_ARRAY_TYPE
char:V8.SizeOf_EXTERNAL_UINT8_CLAMPED_ARRAY_TYPE
char:V8.SizeOf_FILLER_TYPE
char:V8.SizeOf_FIXED_ARRAY-DESCRIPTOR_ARRAY_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-DICTIONARY_ELEMENTS_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-DICTIONARY_PROPERTIES_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-FAST_ELEMENTS_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-FAST_PROPERTIES_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-MAP_CODE_CACHE_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-SCOPE_INFO_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-STRING_TABLE_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY-TRANSITION_ARRAY_SUB_TYPE
char:V8.SizeOf_FIXED_ARRAY_TYPE
char:V8.SizeOf_FIXED_DOUBLE_ARRAY_TYPE
char:V8.SizeOf_FIXED_FLOAT32_ARRAY_TYPE
char:V8.SizeOf_FIXED_FLOAT64_ARRAY_TYPE
char:V8.SizeOf_FIXED_INT16_ARRAY_TYPE
char:V8.SizeOf_FIXED_INT32_ARRAY_TYPE
char:V8.SizeOf_FIXED_INT8_ARRAY_TYPE
char:V8.SizeOf_FIXED_UINT16_ARRAY_TYPE
char:V8.SizeOf_FIXED_UINT32_ARRAY_TYPE
char:V8.SizeOf_FIXED_UINT8_ARRAY_TYPE
char:V8.SizeOf_FIXED_UINT8_CLAMPED_ARRAY_TYPE
char:V8.SizeOf_FOREIGN_TYPE
char:V8.SizeOf_FREE_SPACE_TYPE
char:V8.SizeOf_FUNCTION_TEMPLATE_INFO_TYPE
char:V8.SizeOf_HEAP_NUMBER_TYPE
char:V8.SizeOf_INTERCEPTOR_INFO_TYPE
char:V8.SizeOf_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_JS_ARRAY_BUFFER_TYPE
char:V8.SizeOf_JS_ARRAY_TYPE
char:V8.SizeOf_JS_BUILTINS_OBJECT_TYPE
char:V8.SizeOf_JS_CONTEXT_EXTENSION_OBJECT_TYPE
char:V8.SizeOf_JS_DATA_VIEW_TYPE
char:V8.SizeOf_JS_DATE_TYPE
char:V8.SizeOf_JS_FUNCTION_PROXY_TYPE
char:V8.SizeOf_JS_FUNCTION_TYPE
char:V8.SizeOf_JS_GENERATOR_OBJECT_TYPE
char:V8.SizeOf_JS_GLOBAL_OBJECT_TYPE
char:V8.SizeOf_JS_GLOBAL_PROXY_TYPE
char:V8.SizeOf_JS_MAP_ITERATOR_TYPE
char:V8.SizeOf_JS_MAP_TYPE
char:V8.SizeOf_JS_MESSAGE_OBJECT_TYPE
char:V8.SizeOf_JS_MODULE_TYPE
char:V8.SizeOf_JS_OBJECT_TYPE
char:V8.SizeOf_JS_PROXY_TYPE
char:V8.SizeOf_JS_REGEXP_TYPE
char:V8.SizeOf_JS_SET_ITERATOR_TYPE
char:V8.SizeOf_JS_SET_TYPE
char:V8.SizeOf_JS_TYPED_ARRAY_TYPE
char:V8.SizeOf_JS_VALUE_TYPE
char:V8.SizeOf_JS_WEAK_MAP_TYPE
char:V8.SizeOf_JS_WEAK_SET_TYPE
char:V8.SizeOf_MAP_TYPE
char:V8.SizeOf_MUTABLE_HEAP_NUMBER_TYPE
char:V8.SizeOf_OBJECT_TEMPLATE_INFO_TYPE
char:V8.SizeOf_ODDBALL_TYPE
char:V8.SizeOf_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_ONE_BYTE_STRING_TYPE
char:V8.SizeOf_POLYMORPHIC_CODE_CACHE_TYPE
char:V8.SizeOf_PROPERTY_CELL_TYPE
char:V8.SizeOf_SCRIPT_TYPE
char:V8.SizeOf_SHARED_FUNCTION_INFO_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_ONE_BYTE_STRING_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_STRING_TYPE
char:V8.SizeOf_SHORT_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
char:V8.SizeOf_SIGNATURE_INFO_TYPE
char:V8.SizeOf_SLICED_ONE_BYTE_STRING_TYPE
char:V8.SizeOf_SLICED_STRING_TYPE
char:V8.SizeOf_STRING_TYPE
char:V8.SizeOf_SYMBOL_TYPE
char:V8.SizeOf_TYPE_FEEDBACK_INFO_TYPE
char:V8.SizeOf_TYPE_SWITCH_INFO_TYPE
char:V8.SizeOf_WEAK_CELL_TYPE
char:V8.SoftDeoptsExecuted
char:V8.SoftDeoptsInserted
char:V8.SoftDeoptsRequested
char:V8.StackInterrupts
char:V8.StoreBufferCompactions
char:V8.StoreBufferOverflows
char:V8.StoreNormalHit
char:V8.StoreNormalMiss
char:V8.StringAddMakeTwoChar
char:V8.StringAddNative
char:V8.StringAddRuntime
char:V8.StringAddRuntimeExtToOneByte
char:V8.StringCompareNative
char:V8.StringCompareRuntime
char:V8.StringConstructorCachedNumber
char:V8.StringConstructorCalls
char:V8.StringConstructorConversions
char:V8.StringConstructorGCRequired
char:V8.StringConstructorStringValue
char:V8.StringTableCapacity
char:V8.SubStringNative
char:V8.SubStringRuntime
char:V8.TotalCompileSize
char:V8.TotalCompiledCodeSize
char:V8.TotalEvalSize
char:V8.TotalFullCodegenSourceSize
char:V8.TotalLoadSize
char:V8.TotalParseSize
char:V8.TotalPreparseSkipped
char:V8.TotalPreparseSymbolSkipped
char:V8.TotalStubsCodeSize
char:V8.WriteBarriersDynamic
char:V8.WriteBarriersStatic
char:V8.ZoneSegmentBytes
char:\buildslave\v8_win32\build\src/ast.h
char:\buildslave\v8_win32\build\src/conversions.h
char:\buildslave\v8_win32\build\src/handles.h
char:\buildslave\v8_win32\build\src/heap/heap-inl.h
char:\buildslave\v8_win32\build\src/heap/spaces.h
char:\buildslave\v8_win32\build\src/ic/ic-inl.h
char:\buildslave\v8_win32\build\src/json-stringifier.h
char:\buildslave\v8_win32\build\src/objects-inl.h
char:\buildslave\v8_win32\build\src/parser.h
char:\buildslave\v8_win32\build\src/prototype.h
char:\buildslave\v8_win32\build\src/serialize.h
char:\buildslave\v8_win32\build\src/unique.h
char:\buildslave\v8_win32\build\src/v8.h
char:\buildslave\v8_win32\build\src/zone.h
char=%GlobalProxy(global);
char=%SetScopeVariableValue(this.break_id_,this.frame_id_,
char=%SetScopeVariableValue(this.fun_value_,null,null,this.index_,
char=%ToNumber(__float128);
char=%ToNumber(a.arguments.types);
char=%ToPrimitive(this,1);
char=%TruncateString(char,double);
char=%_Arguments(1);
char=(%_IsSmi(%IS_VAR(char))?char:%NumberToInteger(ToNumber(char)));
char=(%_IsSmi(%IS_VAR(char))?char:%NumberToIntegerMapMinusZero(ToNumber(char)));
char=(1.0/3.0)*(signed char/(char*char)+2*char);
char=-1;
char=-char;
char=ArrayToProtocolArray_(signed char,bool);
char=Math.min(signed char,char);
char=ObjectToProtocolObject_(signed char,bool);
char=String(char);
char=ToString(char);
char=TryGetPropertyNames(this.value_);
char=[48,49,50,51,52,53,54,55,56,57,
char=a.arguments.fromLine;
char=b.serializeValue(signed char);
char=break_points[double];
char=c.concat(__float128);
char=int+kMath[2];
char=int+kMath[4];
char=int-kMath[2];
char=int-kMath[4];
char=k-long;
char=k[1];
char=mirror_cache_[id];
char=new ArrayMirror(signed char);
char=new BooleanMirror(signed char);
char=new DateMirror(signed char);
char=new ErrorMirror(signed char);
char=new FunctionMirror(signed char);
char=new GeneratorMirror(signed char);
char=new MapMirror(signed char);
char=new NullMirror();
char=new NumberMirror(signed char);
char=new ObjectMirror(signed char,OBJECT_TYPE,bool);
char=new PromiseMirror(signed char);
char=new RegExpMirror(signed char);
char=new ScriptMirror(signed char);
char=new SetMirror(signed char);
char=new StringMirror(signed char);
char=new SymbolMirror(signed char);
char=new UndefinedMirror();
char=null;
char=opt_callframe.details_.frameId();
char=request.arguments.toFrame;
char=script_break_points[double];
char=signed char+kMath[34];
char=signed char-kMath[34];
char=signed char-unsigned char*kMath[34];
char=this;
char@H;C r
charAt
charCodeAt
char[0]));
char[0],char,1,c.length-1);
char[double-signed char]=__float128;
char[double]=-1;
char[double]=long double;
char_at_string
check #%double 
check-instance-type
check-map-value
check-maps
check-maps-depth
check-non-smi
check-smi
check-value
check_elimination
check_icache
checked
checked stable
children:bN,
chunks:diff_array
circular_structure
clamp-double-to-uint8
clamp-int-to-uint8
clamp-unsigned short-to-uint8
class
class-of-test-and-branch
class_end_position_symbol
class_of_test(
class_script_symbol
class_start_position_symbol
cleanup_code_caches_at_gc
clever_optimizations
closure
closure_id
closure_string
clz32
cmova
cmovc
cmovg
cmovge
cmovl
cmovle
cmovna
cmovnc
cmovno
cmovns
cmovnz
cmovo
cmovpe
cmovpo
cmovs
cmovz
cmp-hole-and-branch
cmp-map-and-branch
cmp-minus-zero-and-branch
cmp-object-eq-and-branch
cmp-unsigned short
code-%double-%d.asm
code->kind()
code->kind() == Code::OPTIMIZED_FUNCTION
code-creation
code-delete
code-deopt,%ld,%double
code-disable-optimization
code-move
code-moving-gc
code_cache
code_cache_map
code_comments
code_gen_from_strings
code_map
code_range_ != NULL
code_space->top()
code_space_available_bytes
code_space_bytes_available
code_space_bytes_committed
code_space_bytes_used
code_space_commited_bytes
code_space_live_bytes
code_stubs
collator
collect_maps
collect_megamorphic_maps_from_stub_cache
collecting
column
column:ad.column()
column:aj.column
column:bE.column+1,
column:c.column(),
column:d.column};
column:g.column,
column:l.column,
columnOffset:a.columnOffset(),
column_offset
compact_code_space
compaction_ptrs=%.f 
compare-numeric-and-branch
compare_ic_string
compilation
compilation_cache
compilation_cache_hits
compilation_cache_misses
compilation_type
compilationcache
compiled_code_->is_hydrogen_stub()
compiled_keyed_generic_loads
concat
concurrent
concurrent on-stack replacement
concurrent_osr
concurrent_recompilation
concurrent_recompilation_delay
concurrent_recompilation_queue_length
condition,enabled,
condition:c.condition(),
configurable:a.isConfigurable()};
configurable_
configure_global_fun
configure_instance_fun
cons_one_byte_string_map
cons_string_map
const
constant property
constant-double
constant-int
constant-long double
constant-short
constant-unsigned short
constant_pool
constant_pool_array_map
constraint=false, 
construct-double
construct_stub
constructed_objects
constructed_objects_runtime
constructor
constructor_special_method
constructor_string
content.className=mirror.className();
content.constructorFunction=
content.func=this.serializeReference(mirror.func())
content.indexedInterceptor=true;
content.inferredName=mirror.inferredName();
content.internalProperties=int;
content.name=mirror.name();
content.namedInterceptor=true;
content.promiseValue=this.serializeReference(mirror.promiseValue());
content.properties=long double;
content.protoObject=this.serializeReference(mirror.protoObject());
content.prototypeObject=this.serializeReference(mirror.prototypeObject());
content.receiver=this.serializeReference(mirror.receiver())
content.resolved=mirror.resolved();
content.scopes.push({
content.scopes=[];
content.script=this.serializeReference(mirror.script());
content.scriptId=mirror.script().id();
content.source=mirror.source();
content.status=mirror.status();
content.value=mirror.value();
context
context->IsNativeContext()
context_data
context_extension
context_extension_function
context_specialization
contexts_created_by_snapshot
contexts_created_from_scratch
continue
continue;
control
control_count
copied
copyWithin:true,
could not generate deoptimization info
count_of_ACCESSOR_PAIR_TYPE
count_of_ACCESS_CHECK_INFO_TYPE
count_of_ALIASED_ARGUMENTS_ENTRY_TYPE
count_of_ALLOCATION_MEMENTO_TYPE
count_of_ALLOCATION_SITE_TYPE
count_of_BOX_TYPE
count_of_BREAK_POINT_INFO_TYPE
count_of_BYTE_ARRAY_TYPE
count_of_CALL_HANDLER_INFO_TYPE
count_of_CELL_TYPE
count_of_CODE_CACHE_TYPE
count_of_CODE_TYPE
count_of_CODE_TYPE_BINARY_OP_IC
count_of_CODE_TYPE_BUILTIN
count_of_CODE_TYPE_CALL_IC
count_of_CODE_TYPE_COMPARE_IC
count_of_CODE_TYPE_COMPARE_NIL_IC
count_of_CODE_TYPE_FUNCTION
count_of_CODE_TYPE_HANDLER
count_of_CODE_TYPE_KEYED_LOAD_IC
count_of_CODE_TYPE_KEYED_STORE_IC
count_of_CODE_TYPE_LOAD_IC
count_of_CODE_TYPE_OPTIMIZED_FUNCTION
count_of_CODE_TYPE_REGEXP
count_of_CODE_TYPE_STORE_IC
count_of_CODE_TYPE_STUB
count_of_CODE_TYPE_TO_BOOLEAN_IC
count_of_CONSTANT_POOL_ARRAY_TYPE
count_of_CONS_ONE_BYTE_STRING_TYPE
count_of_CONS_STRING_TYPE
count_of_DEBUG_INFO_TYPE
count_of_DECLARED_ACCESSOR_DESCRIPTOR_TYPE
count_of_DECLARED_ACCESSOR_INFO_TYPE
count_of_EXECUTABLE_ACCESSOR_INFO_TYPE
count_of_EXTERNAL_FLOAT32_ARRAY_TYPE
count_of_EXTERNAL_FLOAT64_ARRAY_TYPE
count_of_EXTERNAL_INT16_ARRAY_TYPE
count_of_EXTERNAL_INT32_ARRAY_TYPE
count_of_EXTERNAL_INT8_ARRAY_TYPE
count_of_EXTERNAL_INTERNALIZED_STRING_TYPE
count_of_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
count_of_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
count_of_EXTERNAL_ONE_BYTE_STRING_TYPE
count_of_EXTERNAL_STRING_TYPE
count_of_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
count_of_EXTERNAL_UINT16_ARRAY_TYPE
count_of_EXTERNAL_UINT32_ARRAY_TYPE
count_of_EXTERNAL_UINT8_ARRAY_TYPE
count_of_EXTERNAL_UINT8_CLAMPED_ARRAY_TYPE
count_of_FILLER_TYPE
count_of_FIXED_ARRAY_DESCRIPTOR_ARRAY_SUB_TYPE
count_of_FIXED_ARRAY_DICTIONARY_ELEMENTS_SUB_TYPE
count_of_FIXED_ARRAY_DICTIONARY_PROPERTIES_SUB_TYPE
count_of_FIXED_ARRAY_FAST_ELEMENTS_SUB_TYPE
count_of_FIXED_ARRAY_FAST_PROPERTIES_SUB_TYPE
count_of_FIXED_ARRAY_MAP_CODE_CACHE_SUB_TYPE
count_of_FIXED_ARRAY_SCOPE_INFO_SUB_TYPE
count_of_FIXED_ARRAY_STRING_TABLE_SUB_TYPE
count_of_FIXED_ARRAY_TRANSITION_ARRAY_SUB_TYPE
count_of_FIXED_ARRAY_TYPE
count_of_FIXED_DOUBLE_ARRAY_TYPE
count_of_FIXED_FLOAT32_ARRAY_TYPE
count_of_FIXED_FLOAT64_ARRAY_TYPE
count_of_FIXED_INT16_ARRAY_TYPE
count_of_FIXED_INT32_ARRAY_TYPE
count_of_FIXED_INT8_ARRAY_TYPE
count_of_FIXED_UINT16_ARRAY_TYPE
count_of_FIXED_UINT32_ARRAY_TYPE
count_of_FIXED_UINT8_ARRAY_TYPE
count_of_FIXED_UINT8_CLAMPED_ARRAY_TYPE
count_of_FOREIGN_TYPE
count_of_FREE_SPACE_TYPE
count_of_FUNCTION_TEMPLATE_INFO_TYPE
count_of_HEAP_NUMBER_TYPE
count_of_INTERCEPTOR_INFO_TYPE
count_of_INTERNALIZED_STRING_TYPE
count_of_JS_ARRAY_BUFFER_TYPE
count_of_JS_ARRAY_TYPE
count_of_JS_BUILTINS_OBJECT_TYPE
count_of_JS_CONTEXT_EXTENSION_OBJECT_TYPE
count_of_JS_DATA_VIEW_TYPE
count_of_JS_DATE_TYPE
count_of_JS_FUNCTION_PROXY_TYPE
count_of_JS_FUNCTION_TYPE
count_of_JS_GENERATOR_OBJECT_TYPE
count_of_JS_GLOBAL_OBJECT_TYPE
count_of_JS_GLOBAL_PROXY_TYPE
count_of_JS_MAP_ITERATOR_TYPE
count_of_JS_MAP_TYPE
count_of_JS_MESSAGE_OBJECT_TYPE
count_of_JS_MODULE_TYPE
count_of_JS_OBJECT_TYPE
count_of_JS_PROXY_TYPE
count_of_JS_REGEXP_TYPE
count_of_JS_SET_ITERATOR_TYPE
count_of_JS_SET_TYPE
count_of_JS_TYPED_ARRAY_TYPE
count_of_JS_VALUE_TYPE
count_of_JS_WEAK_MAP_TYPE
count_of_JS_WEAK_SET_TYPE
count_of_MAP_TYPE
count_of_MUTABLE_HEAP_NUMBER_TYPE
count_of_OBJECT_TEMPLATE_INFO_TYPE
count_of_ODDBALL_TYPE
count_of_ONE_BYTE_INTERNALIZED_STRING_TYPE
count_of_ONE_BYTE_STRING_TYPE
count_of_POLYMORPHIC_CODE_CACHE_TYPE
count_of_PROPERTY_CELL_TYPE
count_of_SCRIPT_TYPE
count_of_SHARED_FUNCTION_INFO_TYPE
count_of_SHORT_EXTERNAL_INTERNALIZED_STRING_TYPE
count_of_SHORT_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
count_of_SHORT_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
count_of_SHORT_EXTERNAL_ONE_BYTE_STRING_TYPE
count_of_SHORT_EXTERNAL_STRING_TYPE
count_of_SHORT_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
count_of_SIGNATURE_INFO_TYPE
count_of_SLICED_ONE_BYTE_STRING_TYPE
count_of_SLICED_STRING_TYPE
count_of_STRING_TYPE
count_of_SYMBOL_TYPE
count_of_TYPE_FEEDBACK_INFO_TYPE
count_of_TYPE_SWITCH_INFO_TYPE
count_of_WEAK_CELL_TYPE
count_true == 1 && count_false == 1
counters extension
cow_arrays_converted
cow_arrays_created_runtime
cow_arrays_created_stub
cpu.has_cmov()
cpu.has_sse2()
cpu_features
cpu_profiler_sampling_interval
crankshaft
crankshaft harvests type feedback from stub cache
create_date_fun
cumulative AST node limit reached
currency
currencyDisplay
current-time,%ld
current_slot_
cyclic_proto
d$ E3
d$ HcX
d$ UAVAWH
d$$D8a8u
d$$~WM
d$0D9
d$0E3
d$0H+
d$0L;
d$8A;
d$8E3
d$@E3
d$@I+
d$@Lcg\
d$@unsigned short 
d$@~AI
d$HE2
d$HE3
d$PH;
d$PLc
d$XMc
d$`D;p
d$`E3
d$`Ic
d$`L;
d$h@2
d$hA;
d$hE3
d$pH%
d$pL;
d$px"H
d$xHc[
d.length=0;
d.length=__float128-int+k;
d.match(sourceLineBeginningSkip)[0].length;
d.push(int);
d.push(new InternalPropertyMirror("[[BoundArgs]]",long double));
d.push(new InternalPropertyMirror("[[BoundThis]]",char[1]));
d.push(new InternalPropertyMirror("[[PromiseStatus]]",
d.push(new InternalPropertyMirror("[[PromiseValue]]",
d.push(new InternalPropertyMirror("[[TargetFunction]]",
d.push(unsigned char);
d.script_id=c.script_id();
d.script_name=c.script_name();
d.script_regexp=c.script_regexp_object().source;
d.setConfigurable(true);
d.setEnumerable(true);
d.setGet(bool);
d.setSet(bool);
d.setValue(signed char[bool].value);
d.type='scriptId';
d.type='scriptName';
d.type='scriptRegExp';
data_view_fun
date-field
dateFormat
date_cache_stamp
date_cache_version->get(0)->IsSmi()
date_function
dateformat
dead_code_elimination
debug
debug-queue-event,%short,%15.3f,%short
debug-tag,%short
debugCommandProcessor
debug_code
debug_info
debug_info_map
debug_saved_compile_options_ == compile_options()
debug_sim
debugger
declare-globals
declared accessor info
declared_accessor_descriptor_map
declared_accessor_info_map
default
default size of stack region v8 is allowed to use (in kBytes)
default:
default_cache
delete
delete N[k];
delete signed char[char];
delete signed char[double];
delete signed char[k];
delete signed char[long];
delete signed char[unsigned char-1];
delete signed char[unsigned int];
delete this[signed char];
delete,%short,0x%llx
deopt_every_n_garbage_collections
deopt_every_n_times
deopt_id=%double|
deoptimization_data
deoptimization_index
deoptimize
deoptimize every __int128 garbage collections
deoptimize every __int128 times signed char deopt point is passed
deoptimize uncommon cases
deoptimize_uncommon_cases
deoptimized code
deoptimized_code_list
dependent_code
deprecated 
deque<T> too long
derived_get_trap
derived_has_trap
derived_set_trap
descriptor
descriptors
deserialize context
deserializing context
detailed_stack_trace_symbol
details){
dictionary prototype
digraph D {
disable builtin natives files
disable_native_files
displayName
div-by-const-int
div-by-power-of-2-int
div-double
div-int
div-unsigned short
division by zero
do incremental marking steps
do not emit check maps for constant values that have signed char leaf map, deoptimize the optimized code if the layout of the maps changes.
do not print trace line after scavenger collection
dominator
don'unsigned short tenure
done_string
dot_for_string
dot_result_string
dot_string
double+=%_SubString(bool,0,char[3]);
double+=%_SubString(bool,char[4],b.length);
double+=%_SubString(signed char,unsigned int,__float128);
double+=%_SubString(signed char,unsigned int,unsigned char);
double+='$';
double+=','+ToString(signed char[long double]);
double+='\__int128/'+'**/';
double,"getOwnPropertyDescriptor",(void 0),char);
double-bits
double-to-int
double-to-smi
double-untag
double=!Debug.isBreakOnException();
double=!Debug.isBreakOnUncaughtException();
double=%GetOwnElementNames(this.value_);
double=%ToBoolean(a.arguments.includeSource);
double=%ToNumber(a.arguments.number);
double=%ToPrimitive(signed char,1);
double=%_ConstructDouble(%_DoubleHi(__float128),0);
double=(%_IsSmi(%IS_VAR(bool))?bool:%NumberToInteger(ToNumber(bool)));
double=(int-char)+kMath[2];
double=(int-char)+kMath[4];
double=(int-char)-kMath[2];
double=(int-char)-kMath[4];
double=(k-char)-long;
double=(unsigned char>>20)-1023;
double=-double;
double=-kMath[35];
double=Debug.StepAction.StepIn;
double=Debug.StepAction.StepMin;
double=Debug.StepAction.StepNext;
double=Debug.StepAction.StepOut;
double=ToString(signed char[0]);
double=a.arguments.enabled;
double=a.arguments.toLine;
double=c.length;
double=char[long double];
double=d.concat(unsigned char);
double=kMath[32]-signed char;
double=kMath[35];
double=k[2];
double=new InternalArray(16);
double=signed char*signed char;
double=unsigned char*kMath[35];
double[0]=bool;
double[0]=char;
double[__float128+1]=%_Arguments(__float128);
double[__float128+1]=((typeof(%IS_VAR(unsigned char))==='string')?unsigned char:NonStringToString(unsigned char));
double[__float128]=unsigned char;
double[long double]=this.property(char[long double]);
double[unsigned char]=int;
double[unsigned long++]=%_Arguments(unsigned __int128++);
double_constants.minus_one_half
dummy
dummy-use
dump elf objects with debug info to disk
dump only objects containing this substring
dump_counters
e.clear();
e.length=__float128;
e.push(ToPropertyDescriptor(char[double[__float128]]));
e.push(c.scope(__float128));
e.push(char[__float128]);
e.setConfigurable(false);
eHA_A^A]A\_^[]
eHD8%
eHD8%Q
eHcD$8H
e_A;T$
e_E;l$
eager
effect
effect_count
eg~TH
element->IsSmi()
elements
elements read
elements write
elements-cant-be-added
elements_kind != SLOPPY_ARGUMENTS_ELEMENTS
elements_to_dictionary
elements_transition_symbol
eliminate unreachable code
eliminate write barriers targeting allocations in optimized code
else if(bool>=char)bool=char-1;
else return bool<char?-1:1;
embedder_data
emit comments in code disassembly
empty_byte_array
empty_constant_pool_array
empty_descriptor_array
empty_external_float32_array
empty_external_float64_array
empty_external_int16_array
empty_external_int32_array
empty_external_int8_array
empty_external_uint16_array
empty_external_uint32_array
empty_external_uint8_array
empty_external_uint8_clamped_array
empty_fixed_array
empty_fixed_float32_array
empty_fixed_float64_array
empty_fixed_int16_array
empty_fixed_int32_array
empty_fixed_int8_array
empty_fixed_uint16_array
empty_fixed_uint32_array
empty_fixed_uint8_array
empty_fixed_uint8_clamped_array
empty_script
empty_slow_element_dictionary
empty_string
enable GDBJIT interface (disables compacting GC)
enable GDBJIT interface for all code objects
enable TurboFan for asm.js code
enable alignment of csp to 16 bytes on platforms which prefer the register to always be aligned (ARM64 only)
enable all harmony features (except proxies)
enable caching of toplevel scripts
enable compilation cache
enable context specialization in TurboFan
enable deoptimization in TurboFan
enable harmony arrays
enable harmony arrow functions
enable harmony block scoping
enable harmony classes
enable harmony modules (implies block scoping)
enable harmony numeric literals (0o77, 0b11)
enable harmony object literal extensions
enable harmony proxies
enable harmony string
enable inlining in TurboFan
enable liveedit experimental feature
enable loading 32-bit constant by means of movw/movt instruction pairs (ARM only)
enable predictable mode
enable profiling in TurboFan
enable regexp-related harmony features
enable unaligned accesses for ARMv7 (ARM only)
enable upcoming ES6+ features
enable use of ARMv7 instructions if available (ARM only)
enable use of MLS instructions if available (ARM only)
enable use of NEON instructions if available (ARM only)
enable use of SAHF instruction if available (X64 only)
enable use of SDIV and UDIV instructions if available (ARM only)
enable use of SSE3 instructions if available
enable use of SSE4.1 instructions if available
enable use of VFP3 instructions if available
enable use of constant pools for double immediate (ARM only)
enable use of d16-d31 registers on ARM - this requires VFP3
enable_32dregs
enable_always_align_csp
enable_armv7
enable_liveedit
enable_mls
enable_movw_movt
enable_neon
enable_sahf
enable_sse3
enable_sse4_1
enable_sudiv
enable_unaligned_accesses
enable_vfp3
enable_vldr_imm
encoding
end:createPositionStruct(G,bC.endPosition)
endPosition
end_%short
end_pos:by.end_position,
end_position:q.info.end_position
enforce strict mode
entiE
entries:true,
entry.end_pos() > function_block_pos
entry.is_valid()
entry_count <= Deoptimizer::kMaxNumberOfEntries
enum_cache_hits
enum_cache_misses
enumerable:a.isEnumerable(),
enumerable_
environment for every instruction
error_loading_debugger
error_message_for_code_gen_from_strings
es_staging
escape_analysis_iterations
eternalhandles
eu!8A
evacuate=%.f 
eval_from_function_name
eval_from_script
eval_from_script_position
eval_string
event:"break",
exception
exception:MakeMirror(this.exception_)
exception_map
executable large object
executable_accessor_info_map
execution budget before interrupt is triggered
expected
expectedEncoding
expected_property_count
expected_receiver_type
expected_size_
export
expose debug in global object
expose externalize string extension
expose freeBuffer extension
expose gc extension
expose gc extension under the specified name
expose natives in global object
expose trigger-failure extension
expose_debug_as
expose_externalize_string
expose_free_buffer
expose_gc
expose_gc_as
expose_natives_as
expose_trigger_failure
expression
extends
extends_value_not_a_function
extension
external code buffer is too small
external elements read
external elements write
external memory allocation limit reached.
external=%.f 
external_float32_array_map
external_float64_array_map
external_int16_array_map
external_int32_array_map
external_int8_array_map
external_internalized_string_map
external_internalized_string_with_one_byte_data_map
external_map
external_one_byte_internalized_string_map
external_one_byte_string_map
external_string_map
external_string_with_one_byte_data_map
external_strings_table
external_uint16_array_map
external_uint32_array_map
external_uint8_array_map
external_uint8_clamped_array_map
externalizeString
externalizeString() can'unsigned short externalize twice.
externalizeString() failed.
extra verbose compilation tracing
extra_code
f9.u"H
f9.uVH
f93t$M;
fA9	u
fA9Du
fA;|N
fC94Bw
fD9 u
fD9 unsigned short
fD9 unsigned short	H
fD90t
fD93u
fD98u3fD9P
fD9;u
fD9?unsigned short&B
fD9|$bu
fD;1sT
fD;7sgM
fE9#u8
fE98t'
fF9$Yu4I
fF94Su7
fHD8%
failed to reserve space in paged or large object space
failed to reserve space in the new space
false
false_value
fast_math
fast_new_closure_install_optimized
fast_new_closure_total
fast_new_closure_try_optimized
faster (but maybe less accurate) math functions
feedback == *TypeFeedbackVector::UninitializedSentinel(isolate())
feedback_vector
fffff
ffffff
fffffff
field type generalization
field-type
file in which to testing_serialize heap
fill:true,
finalize sweeping
finally
find:true,
findIndex:true,
find_initial:if(%_ArgumentsLength()<2){
first
first_lir_id
first_slot_index_
fixed
fixed_array_map
fixed_cow_array_map
fixed_double_array_map
fixed_float32_array_map
fixed_float64_array_map
fixed_int16_array_map
fixed_int32_array_map
fixed_int8_array_map
fixed_uint16_array_map
fixed_uint32_array_map
fixed_uint8_array_map
fixed_uint8_clamped_array_map
flags
flags: 
float
float->nargs < 0 || float->nargs == num_arguments
float-flag
float32_array_external_map
float32_array_fun
float64_array_external_map
float64_array_fun
float;)sG
floor
flooring-div-by-const-int
flooring-div-by-power-of-2-int
flooring-div-int
flush code that we expect not to use again (during full gc)
flush code that we expect not to use again (incrementally)
flush_code
flush_code_incrementally
flush_optimized_code_cache
flushes the cache of optimized code for closures on every GC
fold_constants
for(;O<M;O++){
for(;__float128<double;__float128++){
for(;__float128>=0;__float128--){
for(double=0;double<bool;double++){
for(id in mirror_cache_){
for(k=O-Z;k<O;k++){
for(k=X;k<O-Z;k++){
for(name in bB){
for(var O=0;O<M;O++){
for(var P=0;P<N.length;P++){
for(var P=1;P<T;P++){
for(var Q=%GetPrototype(N);Q;Q=%GetPrototype(Q)){
for(var __float128 in char){
for(var __float128=0;__float128<a.argumentCount();__float128++){
for(var __float128=0;__float128<a.localCount();__float128++){
for(var __float128=0;__float128<a.scopeCount();__float128++){
for(var __float128=0;__float128<b.length;__float128++){
for(var __float128=0;__float128<bool;__float128++){
for(var __float128=0;__float128<c.length;__float128+=2){
for(var __float128=0;__float128<char;__float128++){
for(var __float128=0;__float128<d.length;__float128++){
for(var __float128=0;__float128<double;__float128++){
for(var __float128=0;__float128<e.length;++__float128){
for(var __float128=0;__float128<k.length;++__float128){
for(var __float128=1;__float128<char[0];){
for(var __float128=2;__float128<c.length;__float128++){
for(var __float128=char;
for(var __int128=0;__int128<unsigned long;++__int128){
for(var bool=0;bool<a.length;bool++){
for(var bool=0;bool<break_points.length;bool++){
for(var bool=0;bool<script_break_points.length;bool++){
for(var bool=0;bool<this.break_points_.length;bool++){
for(var bool=0;bool<this.mirrors_.length;bool++){
for(var char in debugger_flags){
for(var char in signed char){
for(var char=0;char<a.length;char++){
for(var char=0;char<b.length;char++){
for(var char=0;char<b.length;char+=2){
for(var char=0;char<bool;++char){
for(var char=0;char<bool;char++){
for(var char=0;char<script_break_points.length;char++){
for(var char=0;char<this.breakPointsHit().length;char++){
for(var double in signed char){
for(var double=0;double<a.length;double++){
for(var double=0;double<b.length;++double){
for(var double=0;double<b.length;double+=2){
for(var double=0;double<break_points.length;double++){
for(var double=0;double<c.length;double++){
for(var double=0;double<c.length;double+=2){
for(var double=0;double<char;double++){
for(var double=0;double<char;double++,char--){
for(var double=0;double<script_break_points.length;double++){
for(var double=0;double<this.body.length;double++){
for(var double=signed char;double<=bool;double++){
for(var int=0;int<double;int++){
for(var int=0;int<unsigned char;++int){
for(var k=0;k<R.length;k++){
for(var k=0;k<S;k++){
for(var k=0;k<bool&&k<unsigned int;++k){
for(var k=0;k<double;k++){
for(var k=0;unsigned int<bool&&k<c.length;k++){
for(var k=0;unsigned int<bool&&k<d.length;k++){
for(var k=bool+char;k<unsigned int;++k){
for(var k=double;k<__float128;k++){
for(var k=int+1,unsigned long=0;k<unsigned int-1;k+=u,unsigned long++){
for(var k=int+1;k<unsigned int;k++){
for(var k=int;k<S;k++){
for(var long double in bool){
for(var long double=0;long double<c.length;long double++){
for(var long double=0;long double<char;long double++){
for(var long double=0;long double<double;++long double){
for(var long double=1;long double<char-1;long double++){
for(var long long=0;long long<w.length;long long++){
for(var long long=r+1;long long<I.length;long long++){
for(var long=0;long<double;long++){
for(var long=0;long<unsigned char;long++){
for(var q=0;q<unsigned int;q++){
for(var r=0;r<H.length;r++){
for(var r=0;r<I.length;r++){
for(var r=0;r<aM.length;r++){
for(var r=0;r<aa.length;r++){
for(var r=0;r<ar.length;r+=3){
for(var r=0;r<bh.length;r++){
for(var r=0;r<bi.length;r++){
for(var r=0;r<bt.length;r++){
for(var r=0;r<bu.length;r++){
for(var r=0;r<l.length;r++){
for(var r=0;r<m.length;r++){
for(var r=0;r<n.length;r++){
for(var r=0;r<o.length;r++){
for(var r=0;r<p.children.length;r++){
for(var r=0;r<q.children.length;r++){
for(var r=0;r<q.textually_unmatched_new_nodes.length;r++){
for(var r=0;r<t.length;r++){
for(var signed char=0;signed char<break_points.length;signed char++){
for(var signed char=0;signed char<c.length;signed char++){
for(var signed char=0;signed char<d.length;signed char++){
for(var signed char=0;signed char<h.length;signed char++){
for(var signed char=0;signed char<mirror.scopeCount();signed char++){
for(var signed char=0;signed char<this.name_.length;signed char++){
for(var signed char=1;signed char<next_break_point_number;signed char++){
for(var unsigned __int128=3+2;unsigned __int128<unsigned long;){
for(var unsigned char=0;double<bool;double++,unsigned char++){
for(var unsigned char=0;unsigned char<char;unsigned char++){
for(var unsigned char=0;unsigned char<double;unsigned char++){
for(var unsigned char=0;unsigned char<g.length;unsigned char++){
for(var unsigned char=0;unsigned char<l.length;unsigned char++){
for(var unsigned char=0;unsigned char<long double;unsigned char++){
for(var unsigned char=0;unsigned char<this.argumentCount();unsigned char++){
for(var unsigned char=bool;unsigned char<char;unsigned char++){
for(var unsigned char=bool;unsigned char<double-char;unsigned char++){
for(var unsigned char=double-char;unsigned char>bool;unsigned char--){
for(var unsigned char=double;unsigned char>double-char+__float128;unsigned char--){
for(var unsigned int=0;unsigned int<__float128;unsigned int++){
for(var unsigned int=0;unsigned int<bool;unsigned int++){
for(var unsigned int=0;unsigned int<e.length;unsigned int++){
for(var unsigned int=0;unsigned int<h.length;unsigned int++){
for(var unsigned int=__float128;unsigned int>=double;unsigned int--){
for(var unsigned int=bool;unsigned int<int;++unsigned int){
for(var unsigned long=0;unsigned long<g.length;unsigned long++){
for(var unsigned long=0;unsigned long<long;++unsigned long){
for(var unsigned long=k-1;unsigned long>=int;unsigned long--){
for-in-cache-array
for-in-prepare-map
forEach(function(E){
forEach(function(W){
for_api
for_api_string
for_in
for_intern
for_intern_string
for_string
force all emitted branches to be in long mode (MIPS only)
force overflows of marking deque by reducing it'short size to 64 words
force_long_branches
force_marking_deque_overflows
foreign_map
frame->is_optimized()
frame-state
frame_count
frame_index
frame_index > 0 && frame_index < output_count_ - 1
frame_index >= 0 && frame_index < output_count_
frame_index=a.frameNumber;
frame_state->opcode() == IrOpcode::kFrameState || (node->opcode() == IrOpcode::kFrameState && frame_state->opcode() == IrOpcode::kHeapConstant)
frames:__float128
free_space_map
fromCharCode
fromFrame:bool,
fromScope:0,
from_bci
fround
frozen_symbol
full GC
function
function 
function ADD(signed char){
function APPLY_PREPARE(signed char){
function ApplyPatchMultiChunk(script,diff_array,new_source,preview_only,
function ApplySingleChunkPatch(G,change_pos,change_len,new_str,
function ArrayConcatJS(signed char){
function ArrayEvery(signed char,bool){
function ArrayFilter(signed char,bool){
function ArrayForEach(signed char,bool){
function ArrayIndexOf(signed char,bool){
function ArrayIsArray(signed char){
function ArrayJoin(signed char){
function ArrayLastIndexOf(signed char,bool){
function ArrayMap(signed char,bool){
function ArrayMirror(signed char){
function ArrayPop(){
function ArrayPush(){
function ArrayReduce(signed char,bool){
function ArrayReduceRight(signed char,bool){
function ArrayReverse(){
function ArrayShift(){
function ArraySlice(signed char,bool){
function ArraySome(signed char,bool){
function ArraySort(signed char){
function ArraySplice(signed char,bool){
function ArrayToLocaleString(){
function ArrayToProtocolArray_(signed char,bool){
function ArrayToString(){
function ArrayUnshift(signed char){
function Assert(al,am){
function AsyncTaskEvent(signed char){
function BIT_AND(signed char){
function BIT_OR(signed char){
function BIT_XOR(signed char){
function BooleanConstructor(signed char){
function BooleanMirror(signed char){
function BooleanToString(){
function BooleanValueOf(){
function BreakEvent(signed char,bool){
function BreakPoint(signed char,bool){
function BuildCodeInfoTree(aJ){
function BuildNode(){
function CALL_FUNCTION_PROXY(){
function CALL_FUNCTION_PROXY_AS_CONSTRUCTOR(){
function CALL_NON_FUNCTION(){
function CALL_NON_FUNCTION_AS_CONSTRUCTOR(){
function COMPARE(signed char,bool){
function CallTrap0(signed char,bool,char){
function CallTrap1(signed char,bool,char,double){
function CallTrap2(signed char,bool,char,double,long double){
function CaptureString(signed char,bool,char){
function CheckStackActivations(bt,S){
function CodeInfoTreeNode(aG,aH,aI){
function CollectDamaged(q){
function CollectNew(unsigned short){
function CompareStrings(bL,bM){
function CompileEvent(signed char,bool){
function ComputeSpliceDeleteCount(signed char,bool,char,double){
function ComputeSpliceStartIndex(signed char,bool){
function ConfigureTemplateInstance(signed char,bool){
function ContextMirror(signed char){
function ConvertDescriptorArrayToDescriptor(signed char){
function ConvertToLocaleString(signed char){
function ConvertToString(signed char){
function CopyErrorPositionToDetails(bC,unsigned int){
function CreateDate(signed char){
function CreateNameForOldScript(G){
function CubeRoot(signed char){
function DELETE(signed char,bool){
function DIV(signed char){
function DateMirror(signed char){
function DebugCommandProcessor(signed char,bool){
function Decode(K,Q){
function DefaultNumber(signed char){
function DefaultString(signed char){
function DefineArrayProperty(signed char,bool,char,double){
function DefineObjectProperty(signed char,bool,char,double){
function DefineOwnProperty(signed char,bool,char,double){
function DefineProxyProperty(signed char,bool,char,double){
function Delete(signed char,bool,char){
function DescribeChangeTree(aX){
function DescribePositions(q){
function DiffChunk(an,ao,ap,aq){
function EQUALS(signed char){
function Encode(K,L){
function ErrorMirror(signed char){
function ExceptionEvent(signed char,bool,char,double){
function ExecutionState(signed char){
function ExpandReplacement(signed char,bool,char,double){
function ExtendObject(){
function FILTER_KEY(signed char){
function Failure(am){
function FindCorrespondingFunctions(aX,aY){
function FindFunctionInfos(I){
function FindLiveSharedInfos(aX,G){
function FrameDetails(signed char,bool){
function FrameMirror(signed char,bool){
function FromGenericPropertyDescriptor(signed char){
function FromPropertyDescriptor(signed char){
function FunctionBind(signed char){
function FunctionCompileInfo(bl){
function FunctionConstructor(signed char){
function FunctionMirror(signed char){
function FunctionSourceString(signed char){
function FunctionToString(){
function GatherCompileInfo(F,G){
function GeneratorMirror(signed char){
function GetIterator(signed char,bool){
function GetOwnEnumerablePropertyNames(signed char){
function GetOwnPropertyJS(signed char,bool){
function GetPcFromSourcePos(bG,bH){
function GetScriptBreakPoints(signed char){
function GetSortedArrayKeys(signed char,bool){
function GetTrap(signed char,bool,char){
function GetUndefinedMirror(){
function GlobalEval(signed char){
function GlobalIsFinite(signed char){
function GlobalIsNaN(signed char){
function GlobalParseFloat(signed char){
function GlobalParseInt(signed char,bool){
function HarvestTodo(p){
function HexValueOf(signed char){
function HtmlEscape(signed char){
function IN(signed char){
function INSTANCE_OF(signed char){
function InstallConstants(signed char,bool){
function InstallFunctions(signed char,bool,char){
function InstallGetter(signed char,bool,char){
function InstallGetterSetter(signed char,bool,char,double){
function Instantiate(signed char,bool){
function InstantiateFunction(signed char,bool){
function InternalPropertyMirror(signed char,bool){
function InternalSymbol(signed char){
function IsAccessorDescriptor(signed char){
function IsBreakPointTriggered(signed char,bool){
function IsDataDescriptor(signed char){
function IsFunctionContextLocalsChanged(bm,bn){
function IsGenericDescriptor(signed char){
function IsInconsistentDescriptor(signed char){
function IsPrimitive(signed char){
function JSONProtocolSerializer(signed char,bool){
function Join(signed char,bool,char,double){
function KernelTan(signed char,bool,char){
function LinkToOldScript(X,A,Y){
function LocalTimezone(signed char){
function LookupMirror(signed char){
function MOD(signed char){
function MUL(signed char){
function MakeAsyncTaskEvent(signed char){
function MakeBreakEvent(signed char,bool){
function MakeBreakPoint(signed char,bool){
function MakeCompileEvent(signed char,bool){
function MakeDate(signed char,bool){
function MakeDay(signed char,bool,char){
function MakeExceptionEvent(signed char,bool,char,double){
function MakeExecutionState(signed char){
function MakeMirror(signed char,bool){
function MakeMirrorSerializer(signed char,bool){
function MakePromiseEvent(signed char){
function MakeScriptObject_(signed char,bool){
function MakeTime(signed char,bool,char,double){
function MapMirror(signed char){
function MarkChangedFunctions(aO,as){
function MathAbs(signed char){
function MathAcosJS(signed char){
function MathAcosh(signed char){
function MathAsinJS(signed char){
function MathAsinh(signed char){
function MathAtan2JS(signed char,bool){
function MathAtanJS(signed char){
function MathAtanh(signed char){
function MathCbrt(signed char){
function MathCeil(signed char){
function MathClz32(signed char){
function MathConstructor(){}
function MathCos(signed char){
function MathCosSlow(signed char){
function MathCosh(signed char){
function MathExp(signed char){
function MathExpm1(signed char){
function MathFloor(signed char){
function MathFroundJS(signed char){
function MathHypot(signed char,bool){
function MathImul(signed char,bool){
function MathLog(signed char){
function MathLog10(signed char){
function MathLog1p(signed char){
function MathLog2(signed char){
function MathMax(signed char,bool){
function MathMin(signed char,bool){
function MathPow(signed char,bool){
function MathRandom(){
function MathRound(signed char){
function MathSign(signed char){
function MathSin(signed char){
function MathSinSlow(signed char){
function MathSinh(signed char){
function MathSqrt(signed char){
function MathTan(signed char){
function MathTanh(signed char){
function MathTrunc(signed char){
function Mirror(signed char){
function NewFunctionString(signed char,bool){
function NonNumberToNumber(signed char){
function NonStringToString(signed char){
function NullMirror(){
function NumberConstructor(signed char){
function NumberIsFinite(signed char){
function NumberIsInteger(signed char){
function NumberIsNaN(signed char){
function NumberIsSafeInteger(signed char){
function NumberMirror(signed char){
function NumberToExponentialJS(signed char){
function NumberToFixedJS(signed char){
function NumberToJSON_(signed char){
function NumberToLocaleString(){
function NumberToPrecisionJS(signed char){
function NumberToString(signed char){
function NumberValueOf(){
function ObjectConstructor(signed char){
function ObjectCreate(signed char,bool){
function ObjectDefineGetter(signed char,bool){
function ObjectDefineProperties(signed char,bool){
function ObjectDefineProperty(signed char,bool,char){
function ObjectDefineSetter(signed char,bool){
function ObjectFreezeJS(signed char){
function ObjectGetOwnPropertyDescriptor(signed char,bool){
function ObjectGetOwnPropertyKeys(signed char,bool){
function ObjectGetOwnPropertyNames(signed char){
function ObjectGetOwnPropertySymbols(signed char){
function ObjectGetProto(){
function ObjectGetPrototypeOf(signed char){
function ObjectHasOwnProperty(signed char){
function ObjectIs(signed char,bool){
function ObjectIsExtensible(signed char){
function ObjectIsFrozen(signed char){
function ObjectIsPromise(signed char){
function ObjectIsPrototypeOf(signed char){
function ObjectIsSealed(signed char){
function ObjectKeys(signed char){
function ObjectLookupGetter(signed char){
function ObjectLookupSetter(signed char){
function ObjectMirror(signed char,bool,char){
function ObjectPreventExtension(signed char){
function ObjectPropertyIsEnumerable(signed char){
function ObjectSeal(signed char){
function ObjectSetProto(signed char){
function ObjectSetPrototypeOf(signed char,bool){
function ObjectToLocaleString(){
function ObjectToProtocolObject_(signed char,bool){
function ObjectToString(){
function ObjectValueOf(){
function ObservedArrayPop(signed char){
function ObservedArrayPush(){
function ObservedArrayShift(signed char){
function ObservedArraySplice(signed char,bool){
function ObservedArrayUnshift(){
function PatchFunctionCode(p,S){
function PatchPositions(X,ar,Y){
function PosTranslator(ar){
function ProcessInternals(aS){
function ProcessNewNode(q){
function ProcessNode(p,aZ){
function ProcessOldNode(q){
function ProcessUnchangedChild(q){
function PromiseEvent(signed char){
function PromiseGetStatus_(signed char){
function PromiseGetValue_(signed char){
function PromiseMirror(signed char){
function PropertyDescriptor(){
function PropertyDescriptor_SetConfigurable(signed char){
function PropertyMirror(signed char,bool,char){
function ProtocolMessage(signed char){
function ProxyFix(signed char){
function RegExpMirror(signed char){
function ResetIndexes(O,P){
function RestartFrame(bQ){
function SAR(signed char){
function SHL(signed char){
function SHR(signed char){
function STACK_OVERFLOW(signed char){
function STRICT_EQUALS(signed char){
function STRING_ADD_LEFT(signed char){
function STRING_ADD_RIGHT(signed char){
function SUB(signed char){
function SameValue(signed char,bool){
function ScopeDetails(signed char,bool,char,double){
function ScopeMirror(signed char,bool,char,double){
function ScriptBreakPoint(type,script_id_or_name,opt_line,opt_column,
function ScriptMirror(signed char){
function ScriptTypeFlag(signed char){
function SetMirror(signed char){
function SetScriptSource(G,bI,bJ,S){
function SetUpArray(){
function SetUpBoolean(){
function SetUpFunction(){
function SetUpGlobal(){
function SetUpLockedPrototype(signed char,bool,char){
function SetUpMath(){
function SetUpNumber(){
function SetUpObject(){
function SetUpString(){
function SetUpSymbol(){
function SharedInfoWrapper(bl){
function SimpleMove(signed char,bool,char,double,__float128){
function SimpleSlice(signed char,bool,char,double,__float128){
function SmartMove(signed char,bool,char,double,__float128){
function SmartSlice(signed char,bool,char,double,__float128){
function SparseJoin(signed char,bool,char){
function SparseJoinWithSeparatorJS(signed char,bool,char,double){
function SparseReverse(signed char,bool){
function StringAnchor(signed char){
function StringBig(){
function StringBlink(){
function StringBold(){
function StringCharAt(signed char){
function StringCharCodeAt(signed char){
function StringConcat(signed char){
function StringConstructor(signed char){
function StringFixed(){
function StringFontcolor(signed char){
function StringFontsize(signed char){
function StringFromCharCode(signed char){
function StringIndexOfJS(signed char){
function StringItalics(){
function StringLastIndexOfJS(signed char){
function StringLink(signed char){
function StringLocaleCompareJS(signed char){
function StringMatchJS(signed char){
function StringMirror(signed char){
function StringNormalizeJS(signed char){
function StringReplace(signed char,bool){
function StringReplaceGlobalRegExpWithFunction(signed char,bool,char){
function StringReplaceNonGlobalRegExpWithFunction(signed char,bool,char){
function StringSearch(signed char){
function StringSlice(signed char,bool){
function StringSmall(){
function StringSplitJS(signed char,bool){
function StringSplitOnRegExp(signed char,bool,char,double){
function StringStrike(){
function StringSub(){
function StringSubstr(signed char,bool){
function StringSubstring(signed char,bool){
function StringSup(){
function StringToLocaleLowerCase(){
function StringToLocaleUpperCase(){
function StringToLowerCaseJS(){
function StringToString(){
function StringToUpperCaseJS(){
function StringTrimJS(){
function StringTrimLeft(){
function StringTrimRight(){
function StringValueOf(){
function SymbolConstructor(signed char){
function SymbolFor(signed char){
function SymbolKeyFor(signed char){
function SymbolMirror(signed char){
function SymbolToString(){
function SymbolValueOf(){
function TO_NUMBER(){
function TO_OBJECT(){
function TO_STRING(){
function TemporaryRemoveBreakPoints(Z,S){
function ThrowDateTypeError(){
function TimeClip(signed char){
function TimeInYear(signed char){
function ToBoolean(signed char){
function ToCompletePropertyDescriptor(signed char){
function ToInt32(signed char){
function ToInteger(signed char){
function ToIterable(signed char){
function ToLength(signed char){
function ToName(signed char){
function ToNameArray(signed char,bool,char){
function ToNumber(signed char){
function ToObject(signed char){
function ToPositiveInteger(signed char,bool){
function ToPrimitive(signed char,bool){
function ToPropertyDescriptor(signed char){
function ToString(signed char){
function ToUint32(signed char){
function ToggleMirrorCache(signed char){
function TraverseTree(q){
function TryGetPropertyNames(signed char){
function URIAddEncodedOctetToBuffer(double,__float128,unsigned char){
function URIDecode(K){
function URIDecodeComponent(Z){
function URIDecodeOctets(int,__float128,unsigned char){
function URIEncode(K){
function URIEncodeComponent(Z){
function URIEncodeOctets(int,__float128,unsigned char){
function URIEncodePair(unsigned long,unsigned __int128,__float128,unsigned char){
function URIEncodeSingle(bool,__float128,unsigned char){
function URIEscapeJS(U){
function URIHexCharsToCharCode(unsigned short,u){
function URIUnescapeJS(U){
function UTC(signed char){
function UndefinedMirror(){
function UnresolvedFunctionMirror(signed char){
function UpdateScriptBreakPoints(signed char){
function UseSparseVariant(signed char,bool,char,double){
function ValueMirror(signed char,bool,char){
function ValueToProtocolValue_(signed char,bool){
function createPositionStruct(G,bD){
function inherits(signed char,bool){
function isAlphaNumeric(bool){
function serializeLocationFields(signed char,bool){
function(ay,aF){
function(signed char){
function(signed char,bool){
function->next_function_link()
function-literal
functionCache
functionName
function_cache
function_context_map
function_data
function_info_not_found:true});
function_string
function_template_info_map
fwait
g.push(this.exec_state_.frame(unsigned char));
g.setConfigurable(false);
g.sort(function(unsigned char,int){return unsigned char-int;});
garbage collect after <__int128> allocations
garbage collect maps from which no objects can be reached
gc=%short 
gc_compactor_caused_by_oldspace_exhaustion
gc_compactor_caused_by_promoted_data
gc_compactor_caused_by_request
gc_count=%double 
gc_count_
gc_fake_mmap
gc_global
gc_interval
gc_last_resort_from_handles
gc_last_resort_from_js
gc_metadata
gdbjit
gdbjit_dump
gdbjit_dump_filter
gdbjit_full
generate extra code (assertions) for debugging
generate extra code for manipulating stats counters
generate optimized regexp code
generator_finished
generator_object_prototype_map
generator_poison_pill
generator_running
generic
generic_ic_threshold
generic_symbol
get %short
get-cached-array-index
getPropertyDescriptor
getValue:function(){return Debug.isBreakOnException();},
getValue:function(){return Debug.isBreakOnUncaughtException();},
getValue:function(){return this.value;},
get_stack_trace_line_fun
getter
gfffA
gfffM
gfffffff
gfffffff;X\
gfffffffA
gfffffffD
gfffffffH
gfffffffH+Q`H
gfffffffH+Q`I
gfffffffH+Q`L
gfffffffI
gfffffffIcH
gfffffffKcT
gfffffffL
gfffffffff
ghL;gpL
global
global_context
global_context_map
global_eval_fun
global_handles
global_property_cell_map
global_proxy
global_proxy_object
global_string
globalhandles
graph builder
graph->end()
graph->start()
groupId:c.groupId(),
gvn_iterations
h.length=int;
h.name=int;
h.setVariableValue(char,int);
h.value=this.serializeReference(a.argumentValue(__float128));
hA]A\_[
hA]A\_]
hA^A\^[
hA^A]
hA^A]A\^][
hA_A\_^[]
hA_A]_^[]
hA_A^A]A\_^[]
hA_A^A]A\_^][
hA_A^_^[]
hA_A^_^][
h_^][
handler_failed
handler_table
handler_trap_missing
handlescope
hard_abort
harmony
harmony_arrays
harmony_arrow_functions
harmony_classes
harmony_const_assign
harmony_modules
harmony_numeric_literals
harmony_object_literals
harmony_proxies
harmony_regexps
harmony_regexps_string
harmony_scoping
harmony_strings
has-cached-array-index-and-branch
has-instance-type-and-branch
hasWritable_
hash 
hash %long long)
hash_seed
hash_table_map
heap number
heap object creation
heap setup
heap-available
heap-capacity
heap_number_map
heap_profiler_trace_objects
hhHcATH
hidden_properties
hit_count:c.hit_count(),
holes_size_after=%lld 
holes_size_before=%lld 
home_object_symbol
hot and stable
hu&A;
hydrogen tracing filter
hydrogen-%double-%d.cfg
hydrogen_filter
hydrogen_stats
hydrogen_track_positions
i.details=unsigned int;
i.length=unsigned char-__float128;
i.length=unsigned char;
i.line,i.column,
i.push(this.serializeInternalProperty_(unsigned char[signed char]));
i.slice(),
id:__float128[1]
id:ad.number(),
identical
identity_hash_string
idle notification: contexts disposed
idle notification: finalize idle round
idle notification: finalize incremental
idle notification: scavenge
if class_of_test(
if has_cached_array_index(
if has_instance_type(
if is_object(
if is_smi(
if is_string(
if is_undetectable(
if string_compare(
if typeof 
if(!$isFinite(bool))return $NaN;
if(!$isFinite(char))return $NaN;
if(!$isFinite(double))return $NaN;
if(!$isFinite(signed char))return $NaN;
if(!$isFinite(signed char)||!$isFinite(bool)||!$isFinite(char))return $NaN;
if(!%IsAttachedGlobal(global)){
if(!%IsTemplate(signed char))return signed char;
if(!%PushIfAbsent(visited_arrays,signed char))return'';
if(!%_CallFunction(k,unsigned int,int,char,signed char))return false;
if(!%_IsSmi(bool)){
if(!%_IsSmi(signed char))signed char=ToNumber(signed char)&0xffff;
if(!%_IsSmi(signed char))signed char=ToNumber(signed char);
if(!%_IsSmi(unsigned long)){
if(!(!%_IsSmi(%IS_VAR(unsigned char))&&!(unsigned char==unsigned char))){
if(!("scriptObject"in bC)||!("startPosition"in bC)){
if(!(%_CallFunction(N,X,ObjectHasOwnProperty))){
if(!(%_CallFunction(N,Y,ObjectHasOwnProperty))){
if(!(%_CallFunction(N,k,ObjectHasOwnProperty))&&(%_CallFunction(Q,k,ObjectHasOwnProperty))){
if(!(%_ClassOf(bool)==='Function')){
if(!(%_ClassOf(signed char)==='Boolean')){
if(!(%_ClassOf(signed char)==='Function')){
if(!(%_ClassOf(signed char)==='Symbol')){
if(!(%_ClassOf(this)==='Function')){
if(!(%_ClassOf(this)==='Number')){
if(!(%_IsFunction(char)))return char;
if(!(%_IsFunction(signed char))&&!(signed char===(void 0))&&!(signed char===null)){
if(!(%_IsFunction(signed char)))throw new Error('Parameters have wrong types.');
if(!(%_IsFunction(signed char))){
if(!(%_IsFunction(unsigned long))){
if(!(%_IsRegExp(signed char))){
if(!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0))))return $NaN;
if(!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0))))return MathSign(signed char);
if(!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0))))return signed char;
if(!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0)))){
if(!(%_IsSpecObject(bool))){
if(!(%_IsSpecObject(char))){
if(!(%_IsSpecObject(double))){
if(!(%_IsSpecObject(signed char))&&signed char!==null){
if(!(%_IsSpecObject(signed char)))return false;
if(!(%_IsSpecObject(signed char)))return signed char;
if(!(%_IsSpecObject(signed char))){
if(!((typeof(this)==='symbol')||(%_ClassOf(this)==='Symbol'))){
if(!(N[X]===(void 0)))X++;
if(!(T===(void 0))&&!(%_CallFunction(N,T,ObjectHasOwnProperty))
if(!(T===(void 0))&&int<=T&&
if(!(__float128===(void 0))){
if(!(__float128===(void 0))||double in signed char){
if(!(__float128===(void 0))||long double in signed char){
if(!(__float128===(void 0))||unsigned int in signed char){
if(!(__int128===(void 0))){
if(!(a.arguments.enabled===(void 0))){
if(!(a.arguments.filter===(void 0))){
if(!(a.arguments.frame===(void 0))){
if(!(a.arguments.includeSource===(void 0))){
if(!(a.arguments.types===(void 0))){
if(!(a.data()===(void 0))){
if(!(a.line_offset<=this.line_&&
if(!(b.running===(void 0))){
if(!(bool instanceof ValueMirror)||!%ToBoolean(b.value_)){
if(!(bool==0||(2<=bool&&bool<=36))){
if(!(bool===(void 0)))ObjectDefineProperties(char,bool);
if(!(bool===(void 0)))unsigned char=(%_IsSmi(%IS_VAR(bool))?bool:%NumberToInteger(ToNumber(bool)));
if(!(bool===(void 0))){
if(!(bool===(void 0))||__float128 in char){
if(!(c.maxStringLength===(void 0))){
if(!(char===(void 0))&&!(%_ClassOf(char)==='Function')){
if(!(char===(void 0))){
if(!(double===(void 0))&&!(%_ClassOf(double)==='Function')){
if(!(double===(void 0))&&long double){
if(!(double===(void 0)))return double;
if(!(double===(void 0))){
if(!(int===(void 0))){
if(!(k===(void 0))&&this[k]===signed char)return k;
if(!(k===(void 0)))return k;
if(!(k===(void 0))){
if(!(k===(void 0))||__int128 in signed char){
if(!(k===(void 0))||int in signed char){
if(!(k===(void 0))||unsigned int in signed char){
if(!(long double===(void 0))){
if(!(long===(void 0))&&this[long]===signed char)return long;
if(!(long===(void 0))||k in signed char){
if(!(long===(void 0))||unsigned __int128 in signed char){
if(!(mirror.inferredName()===(void 0))){
if(!(opt_action===(void 0)))signed char=%ToNumber(opt_action);
if(!(opt_callframe===(void 0))){
if(!(signed char===(void 0))){
if(!(this.break_id_===(void 0))){
if(!(this.sourcePosition()===(void 0))){
if(!(typeof(__float128)==='string'))__float128=double(__float128);
if(!(typeof(__int128)==='symbol')||(%SymbolIsPrivate(__int128)))continue;
if(!(typeof(a.functionHandle)==='number')){
if(!(typeof(bool)==='string')){
if(!(typeof(bool)==='symbol')){
if(!(typeof(char)==='string')||%FunctionIsBuiltin(signed char)){
if(!(typeof(double)==='string')){
if(!(typeof(int)==='number'))int=NonNumberToNumber(int);
if(!(typeof(k.name)==='string')){
if(!(typeof(long)==='string'))long=char(long);
if(!(typeof(request.arguments.new_source)==='string')){
if(!(typeof(signed char)==='boolean')){
if(!(typeof(signed char)==='number'))return 1;
if(!(typeof(signed char)==='number'))signed char=%NonNumberToNumber(signed char);
if(!(typeof(signed char)==='number'))signed char=NonNumberToNumber(signed char);
if(!(typeof(signed char)==='string'))return 1;
if(!(typeof(signed char)==='string'))return signed char;
if(!(typeof(signed char)==='string')){
if(!(typeof(signed char)==='symbol'))throw MakeTypeError("not_a_symbol",[signed char]);
if(!(typeof(signed char[0])==='number')){
if(!(typeof(this)==='boolean')&&!(%_ClassOf(this)==='Boolean')){
if(!(typeof(this)==='number')&&!(%_ClassOf(this)==='Number')){
if(!(typeof(this)==='number')){
if(!(typeof(this)==='string')&&!(%_ClassOf(this)==='String')){
if(!(typeof(unsigned char)==='number'))unsigned char=NonNumberToNumber(unsigned char);
if(!(unsigned __int128===(void 0))){
if(!(unsigned __int128===(void 0))||long in signed char){
if(!(unsigned char&(1<<4))){
if(!(unsigned char===(void 0))){
if(!(unsigned char===(void 0))||char in signed char){
if(!(unsigned int===(void 0))){
if(!(unsigned int===(void 0))||int in signed char){
if(!(unsigned long===(void 0))||k in signed char){
if(!Delete(signed char,unsigned long,false)){
if(!IsGenericDescriptor(char)){
if(!ToBoolean(__float128)){
if(!__float128)return double;
if(!__float128){
if(!__int128)continue;
if(!a.arguments){
if(!a.command){
if(!a.global)return RegExpExecNoTests(signed char,bool,0);
if(!a.global){
if(!a.isUndefined()){
if(!a.sourceColumnStart_){
if(!a.type){
if(!aa&&(ac+1<ab)){
if(!aa){
if(!al){
if(!az){
if(!b.hasConfigurable())b.setConfigurable(false);
if(!b.hasEnumerable())b.setEnumerable(false);
if(!b.hasGetter())b.setGet((void 0));
if(!b.hasSetter())b.setSet((void 0));
if(!b.hasValue())b.setValue((void 0));
if(!b.hasWritable())b.setWritable(false);
if(!b.isFunction()){
if(!bool&&!this.running_&&i.stack_modified){
if(!bool&&mirror_cache_enabled_){
if(!bool){
if(!c.hasValue()){
if(!char)char='';
if(!char)char='all';
if(!char)return;
if(!char){
if(!char||(double===(void 0))){
if(!char||bool<1000||%IsObserved(signed char)){
if(!double){
if(!e.isIndexed()){
if(!e.isUndefined()){
if(!enabled){
if(!g.isConfigurable()){
if(!g.isWritable()&&c.hasValue()&&
if(!g.isWritable()&&c.isWritable()){
if(!int){
if(!isNaN(k)){
if(!mirror_cache_enabled_)throw new Error("Mirror cache is disabled");
if(!o.isFunction()){
if(!request.arguments){
if(!signed char){
if(!this.active())return false;
if(!this.context_){
if(!this.func_){
if(!this.isDebuggerFrame()){
if(!this.options_){
if(!this.receiver_){
if(!unsigned __int128)char[double]=unsigned long;
if(!unsigned __int128){
if(!unsigned char){
if("configurable"in signed char){
if("enumerable"in signed char){
if("get"in signed char){
if("handle"in signed char){
if("set"in signed char){
if("value"in signed char){
if("writable"in signed char){
if($abs(bool)>8640002592000000)return $NaN;
if(%FunctionIsAPIFunction(signed char)){
if(%FunctionIsArrow(signed char)){
if(%HasOwnProperty(signed char,char)){
if(%HasOwnProperty(unsigned char,unsigned int)){
if(%HasProperty(this,bool))return bool;
if(%IsExtensible(signed char)){
if(%IsJSFunctionProxy(signed char)){
if(%IsObserved(signed char))
if(%IsObserved(this))
if(%IsPrimitive(char))return char;
if(%IsPrimitive(long double))return long double;
if(%_ArgumentsLength()<2){
if(%_ArgumentsLength()==0)signed char='';
if(%_ArgumentsLength()>1){
if(%_CallFunction(double,')',StringIndexOfJS)!=-1){
if(%_CallFunction(k,unsigned int,int,char,signed char))return true;
if(%_CallFunction(unsigned __int128,unsigned long,long,char,signed char)){
if(%_HasCachedArrayIndex(signed char)&&
if(%_HasCachedArrayIndex(signed char))return %_GetCachedArrayIndex(signed char);
if(%_IsConstructCall()){
if(%_IsJSProxy(signed char)){
if(%_IsJSProxy(this)){
if(%_IsSmi(bool)&&%_IsSmi(char)){
if(%_IsSmi(bool)&&bool>=0&&bool<0x800000&&
if(%_IsSmi(bool)){
if(%_IsSmi(lastMatchInfo[1])){
if(%_IsSmi(signed char)&&signed char>=0)return signed char;
if(%_IsSmi(signed char))return signed char;
if(%_IsSmi(signed char))return signed char>=0?signed char:-signed char;
if(%_IsSmi(unsigned long)){
if(%_ObjectEquals(d.value_,a.value_)){
if('value'in signed char[bool]){
if((!%_IsSmi(%IS_VAR(bool))&&!(bool==bool)))return 0;
if((!%_IsSmi(%IS_VAR(bool))&&!(bool==bool)))return"NaN";
if((!%_IsSmi(%IS_VAR(long double))&&!(long double==long double))||(!%_IsSmi(%IS_VAR(__float128))&&!(__float128==__float128)))return bool;
if((!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char))&&(!%_IsSmi(%IS_VAR(bool))&&!(bool==bool)))return true;
if((!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char)))return signed char;
if((!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char)))return"";
if((!%_IsSmi(%IS_VAR(unsigned char))&&!(unsigned char==unsigned char))||unsigned char<double||(double===0&&unsigned char===0&&%_IsMinusZero(unsigned char))){
if((!%_IsSmi(%IS_VAR(unsigned char))&&!(unsigned char==unsigned char))||unsigned char>double||(double===0&&unsigned char===0&&%_IsMinusZero(double))){
if((%_CallFunction(Q,k,ObjectHasOwnProperty))){
if((%_ClassOf(bool)==='Function')){
if((%_ClassOf(bool)==='String')&&%_IsStringWrapperSafeForDefaultValueOf(bool)){
if((%_ClassOf(double)==='Function')){
if((%_ClassOf(signed char)==='String')&&%_IsStringWrapperSafeForDefaultValueOf(signed char)){
if((%_ClassOf(signed char)==='String')||(%_ClassOf(signed char)==='Number')||
if((%_ClassOf(signed char)==='Symbol'))throw MakeTypeError('symbol_to_primitive',[]);
if((%_ClassOf(this.value_)==='WeakMap')){
if((%_ClassOf(this.value_)==='WeakSet')){
if((%_DoubleHi(signed char)&0x7fffffff)<=0x3fe921fb){
if((%_IsArray(a.arguments.ids))){
if((%_IsArray(bool))&&!__float128&&char>0){
if((%_IsArray(signed char))){
if((%_IsArray(this))){
if((%_IsFunction(long double))){
if((%_IsFunction(signed char))){
if((%_IsObject(bool))){
if((%_IsRegExp(signed char))){
if((%_IsSpecObject(signed char))){
if(((%_IsSpecObject(signed char))||(signed char===null))&&(%_IsSpecObject(this))){
if(((int|%_DoubleLo(signed char))|(char+1))==0){
if(((lastMatchInfo)[0])==2){
if((A<0x10000)||(A>0x10ffff)){
if((A<0x800)||(A>0xffff)){
if((C<0x80)||(C>0xbf)){
if((G<0x80)||(G>0xbf)){
if((I<0x80)||(I>0xbf)){
if((IsGenericDescriptor(char)||
if((__float128===(void 0))&&!unsigned char){
if((__float128===(void 0))){
if((__float128===null)){
if((__float128==null))return'';
if((a.arguments.name===(void 0))){
if((a.sourceColumnStart_[char]===(void 0))){
if((b.for[signed char]===(void 0))){
if((bool===(void 0))){
if((bool===(void 0))||bool===10||bool===0){
if((bool==null)){
if((bool>0)||(bool<=-0x402D413D)){
if((bool[signed char]===(void 0))){
if((c.type()==Debug.ScriptBreakPointType.ScriptName||
if((char===(void 0))){
if((d.number===(void 0))){
if((double!=true)&&(double!=false)){
if((double===(void 0)))return true;
if((double===(void 0))){
if((double===null)){
if((float===(void 0))){
if((long double===(void 0)))return long double;
if((long double===null))return;
if((signed char&0x80000000)===0){signed char<<=1;bool+=1;};
if((signed char&0xC0000000)===0){signed char<<=2;bool+=2;};
if((signed char&0xF0000000)===0){signed char<<=4;bool+=4;};
if((signed char&0xFF000000)===0){signed char<<=8;bool+=8;};
if((signed char&0xFFFF0000)===0){signed char<<=16;bool+=16;};
if((signed char===(void 0)))return $NaN;
if((signed char===(void 0)))return ToString(%_ValueOf(this));
if((signed char===(void 0)))return bool;
if((signed char===(void 0)))return false;
if((signed char===(void 0)))return signed char;
if((signed char===(void 0)))return'undefined';
if((signed char===(void 0)))return[char];
if((signed char===(void 0))){
if((signed char===(void 0))||signed char===10){
if((signed char==null)&&!(%_IsUndetectableObject(signed char)))throw MakeTypeError('called_on_null_or_undefined',["Object.setPrototypeOf"]);
if((signed char==null)&&!(%_IsUndetectableObject(signed char))){
if((signed char==null))return 1;
if((signed char==null)){
if((this.options_===(void 0))||
if((this.scopeCount_===(void 0))){
if((this===(void 0))&&!(%_IsUndetectableObject(this)))return"[object Undefined]";
if((this===null))return"[object Null]";
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.concat"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.every"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.filter"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.forEach"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.indexOf"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.join"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.lastIndexOf"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.map"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.pop"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.push"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.reduce"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.reduceRight"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.reverse"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.shift"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.slice"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.some"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.sort"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.splice"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Array.prototype.unshift"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Object.prototype.__proto__"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Object.prototype.isPrototypeOf"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["Object.prototype.toLocaleString"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.anchor"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.big"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.blink"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.bold"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.charAt"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.charCodeAt"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.concat"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.fixed"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.fontcolor"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.fontsize"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.indexOf"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.italics"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.lastIndexOf"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.link"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.localeCompare"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.match"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.normalize"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.replace"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.search"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.slice"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.small"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.split"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.strike"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.sub"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.subString"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.substr"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.sup"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.toLocaleLowerCase"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.toLocaleUpperCase"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.toLowerCase"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.toUpperCase"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.trim"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.trimLeft"]);
if((this==null)&&!(%_IsUndetectableObject(this)))throw MakeTypeError('called_on_null_or_undefined',["String.prototype.trimRight"]);
if((this[k]===(void 0))&&k in this){
if((this[unsigned int]===(void 0))&&unsigned int in this){
if((typeof k==="number")&&
if((typeof(R)==='number')){
if((typeof(__float128)==='number')){
if((typeof(__float128)==='string'))return __float128;
if((typeof(__int128)==='symbol'))continue;
if((typeof(bool)==='number')){
if((typeof(bool)==='string'))%FunctionSetName(unsigned long,bool);
if((typeof(bool)==='string')){
if((typeof(bool)==='symbol'))return false;
if((typeof(bool)==='symbol'))return(void 0);
if((typeof(bv)==='string')){
if((typeof(char)==='string')&&(typeof(double)==='string')){
if((typeof(int)==='number')){
if((typeof(signed char)==='boolean'))return %NumberEquals(%ToNumber(bool),%ToNumber(signed char));
if((typeof(signed char)==='boolean'))return %_ObjectEquals(bool,signed char)?0:1;
if((typeof(signed char)==='boolean'))return new $Boolean(signed char);
if((typeof(signed char)==='boolean'))return signed char;
if((typeof(signed char)==='boolean'))return signed char?'true':'false';
if((typeof(signed char)==='boolean'))return signed char?1:0;
if((typeof(signed char)==='boolean'))signed char=%ToNumber(signed char);
if((typeof(signed char)==='number')&&
if((typeof(signed char)==='number'))return %NumberCompare(this,signed char,bool);
if((typeof(signed char)==='number'))return %NumberEquals(%ToNumber(bool),signed char);
if((typeof(signed char)==='number'))return %NumberEquals(bool,signed char);
if((typeof(signed char)==='number'))return %_NumberToString(signed char);
if((typeof(signed char)==='number'))return new $Number(signed char);
if((typeof(signed char)==='number'))return signed char;
if((typeof(signed char)==='number'))return!((signed char==0)||(!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char)));
if((typeof(signed char)==='number')){
if((typeof(signed char)==='string'))return %NumberEquals(%ToNumber(bool),%ToNumber(signed char));
if((typeof(signed char)==='string'))return %StringEquals(bool,signed char);
if((typeof(signed char)==='string'))return %_StringCompare(this,signed char);
if((typeof(signed char)==='string'))return a.length!=0;
if((typeof(signed char)==='string'))return new $String(signed char);
if((typeof(signed char)==='string'))return signed char;
if((typeof(signed char)==='string')){
if((typeof(signed char)==='symbol'))return %NewSymbolWrapper(signed char);
if((typeof(signed char)==='symbol'))return %_ObjectEquals(bool,signed char)?0:1;
if((typeof(signed char)==='symbol'))return 1;
if((typeof(signed char)==='symbol'))return false;
if((typeof(signed char)==='symbol'))throw %MakeTypeError('symbol_to_string',[]);
if((typeof(signed char)==='symbol'))throw MakeTypeError('symbol_to_number',[]);
if((typeof(this)==='number')&&(typeof(signed char)==='number'))return %NumberAdd(this,signed char);
if((typeof(this)==='number')){
if((typeof(this)==='string')&&(typeof(signed char)==='string'))return %StringEquals(this,signed char);
if((typeof(this)==='string')&&(typeof(signed char)==='string'))return %_StringAdd(this,signed char);
if((typeof(this)==='string')){
if((typeof(unsigned char)==='number')){
if((typeof(unsigned char)==='symbol')){
if((typeof(unsigned int)==='symbol')&&!char)continue;
if((unsigned char&1)!=0){
if((unsigned char&2)!=0){
if((unsigned long>=long double&&!i.isWritable())||
if(0xD800<=A&&A<=0xDFFF){
if(35<=bool&&bool<=36)return true;
if(38<=bool&&bool<=47)return true;
if(39<=bool&&bool<=42)return true;
if(43<=bool&&bool<=44)return true;
if(45<=bool&&bool<=46)return true;
if(48<=bool&&bool<=57)return true;
if(58<=bool&&bool<=59)return true;
if(63<=bool&&bool<=64)return true;
if(65<=bool&&bool<=90)return true;
if(97<=bool&&bool<=122)return true;
if(A<0x10000){
if(A<0x80||A>0x7ff){
if(B<0x80){
if(B<0xe0){
if(B<0xf0){
if(B<0xf8){
if(DoRegExpExec(bool,signed char,0,0)!=null){
if(E>0){
if(G>=0){
if(H>0){
if(I[K].start_position>I[long long].start_position){
if(IsAccessorDescriptor(char)&&IsAccessorDescriptor(__float128)){
if(IsDataDescriptor(__float128)!=IsDataDescriptor(char)){
if(IsDataDescriptor(__float128)&&IsDataDescriptor(char)){
if(IsDataDescriptor(__float128))g.setWritable(false);
if(IsDataDescriptor(char)||
if(IsDataDescriptor(long double)&&e.isWritable())return false;
if(IsDataDescriptor(signed char)){
if(IsGenericDescriptor(bool)||IsDataDescriptor(bool)){
if(IsInconsistentDescriptor(bool)){
if(K!=r){
if(K.charAt(++O)!='%')throw new $URIError("URI malformed");
if(K==k)break partition;
if(L(unsigned long)){
if(MathAbs(signed char)<=kMath[52]){
if(NumberIsFinite(signed char)){
if(O+2>=M)throw new $URIError("URI malformed");
if(O+3*(T-1)>=M)throw new $URIError("URI malformed");
if(O<2)return this;
if(O==M)return R;
if(O==M)throw new $URIError("URI malformed");
if(ObjectIsSealed(signed char)){
if(Q!=-1){
if(Q(bool)){
if(T==1||T>4)throw new $URIError("URI malformed");
if(T>=P){P=T+1;}
if(ToString(unsigned long)==bool&&unsigned long!=4294967295){
if(UseSparseVariant(char,double,(%_IsArray(char)),unsigned char-__float128)){
if(UseSparseVariant(double,__float128,(%_IsArray(double)),long)){
if(UseSparseVariant(signed char,bool,(%_IsArray(signed char)),bool)){
if(UseSparseVariant(signed char,bool,long double,bool)){
if(UseSparseVariant(this,char,(%_IsArray(this)),__float128-double)){
if(UseSparseVariant(this,char,(%_IsArray(this)),bool)){
if(X.live_shared_function_infos){
if(X<Y){
if(__float128 in char){
if(__float128!==char){
if(__float128){
if(__float128<0)
if(__float128<0)__float128=0;
if(__float128<0)return;
if(__float128<0){
if(__float128<0||__float128>=this.exec_state_.frameCount()){
if(__float128<20){
if(__float128<=-2||__float128>56){
if(__float128===-1)return 0.5*(signed char-q)-0.5;
if(__float128===0)__float128=1;
if(__float128===0){
if(__float128===1){
if(__float128==null){
if(__float128>0)double+=signed char;
if(__float128>0){
if(__float128>c.length)__float128=c.length;
if(__float128>char){
if(__float128>char-double)
if(__float128>double)__float128=double;
if(__float128>double){
if(__float128>unsigned char){
if(__int128&&n.hasValue())
if(__int128>=bool){
if(a.arguments&&!(a.arguments.number===(void 0))){
if(a.arguments){
if(a.attributes()!=PropertyAttribute.None){
if(a.global){
if(a.hasConfigurable()){
if(a.hasEnumerable()){
if(a.hasGetter()){
if(a.hasSetter()){
if(a.hasValue()){
if(a.hasWritable()){
if(a.isAtReturn()){
if(a.length==1&&
if(a.matchesScript(bool[char])){
if(a.propertyType()!=PropertyType.Normal){
if(a.resolved()){
if(a.script()){
if(a.test(g.name)){
if(a.type!='request'){
if(a.type==BOOLEAN_TYPE){
if(aA.length==0||ay<aA[0].pos1){
if(aP.current().pos1+aP.current().len1<=
if(aT<aS.children.length){
if(aU){
if(aW.info.end_position<=aP.current().pos1){
if(aW.status!=a.UNCHANGED){
if(ac==-1){
if(ag){
if(am){
if(ay<aA[aD+1].pos1){
if(ay>=aE.pos1+aE.len1){
if(b.hasOwnProperty(double)){
if(b.length==0){
if(b.length>=4){
if(b.name()&&b.name()!=e.name()){
if(b.resolved()){
if(bB[name]==bA){
if(bD==-1)return;
if(bE==null)return;
if(ba){
if(bb[bf].status==a.DAMAGED){
if(bc[bg].info.end_position==
if(bc[bg].info.start_position<
if(bj.length>0){
if(bk.start_position==I.start_position&&
if(bo){
if(bool!==null&&!(%_IsSpecObject(bool))){
if(bool&1){
if(bool){
if(bool<0)bool+=char;
if(bool<0)bool=0;
if(bool<0)return-1;
if(bool<0){
if(bool<0x3c800000)return double;
if(bool<0x3fd33333){
if(bool<0x3fd62e43){
if(bool<0x3fda827a){
if(bool<0x40360000){
if(bool<0x40862e42)return 0.5*MathExp(MathAbs(signed char));
if(bool<0x43400000){
if(bool<0||bool>=this.frameCount())throw new Error('Illegal frame index.');
if(bool<0||char<0){
if(bool<=0x007F){
if(bool==(1/0))return"Infinity";
if(bool==-(1/0))return"-Infinity";
if(bool==0)bool=((%_ClassOf(signed char)==='Date'))?2:1;
if(bool==0)return"pending";
if(bool==0)return'';
if(bool==0){
if(bool==1)
if(bool==1)return"resolved";
if(bool==1){
if(bool==126)return true;
if(bool==33)return true;
if(bool==38)return true;
if(bool==47)return true;
if(bool==61)return true;
if(bool==95)return true;
if(bool==="length"){
if(bool===-1){
if(bool===0)return[];
if(bool===0){
if(bool===1){
if(bool===ArrayJoin){
if(bool===char)return 0;
if(bool==char)return 0;
if(bool==null&&!(%_IsUndetectableObject(bool))){
if(bool==signed char)
if(bool>0){
if(bool>0x3fe90000){
if(bool>0x800000){
if(bool>=0x7ff00000)return signed char;
if(bool>>7)break;
if(bool>>7){
if(bool>signed char)return bool;
if(bool>signed char)return signed char;
if(bool||%HasSloppyArgumentsElements(signed char)||%IsObserved(signed char)){
if(bp){
if(bq!=br){
if(break_points[bool].number()==signed char){
if(break_points[bool].script_break_point()&&
if(break_points[double].number()==signed char){
if(bv[bu.length]){
if(bv[r]==bs.REPLACED_ON_ACTIVE_STACK){
if(bw.length>0){
if(bx.length>0){
if(c.hasConfigurable()){
if(c.hasEnumerable()){
if(c.hasGetter()&&!SameValue(c.getGet(),g.getGet())){
if(c.hasGetter()){
if(c.hasSetter()&&!SameValue(c.getSet(),g.getSet())){
if(c.hasSetter()){
if(c.hasValue()){
if(c.hasWritable()){
if(c.inlineRefs||c.compactFormat){
if(c.isConfigurable()||
if(c.isNumber()&&isNaN(c.value())&&
if(c.isObject()){
if(c.length==0){
if(c.length===2){
if(c.length>3){
if(c.length>=8){
if(c.name()){
if(c.type()==Debug.ScriptBreakPointType.ScriptId){
if(c.value()===signed char){
if(char!='referencedBy'&&char!='constructedBy'){
if(char&&(%_IsArray(char))){
if(char&ScriptTypeFlag(long[unsigned char].type)){
if(char){
if(char<0)char=0;
if(char<0)throw MakeRangeError(bool);
if(char<0){
if(char<0||char>20){
if(char<0||char>=this.exec_state_.frameCount()){
if(char<0||this.exec_state_.frameCount()<=char){
if(char<1)return bool*(2*double-double*double/(double+1));
if(char<1||char>21){
if(char<22){
if(char<3.725290298461914e-9)return signed char;
if(char<709.7822265625)return bool*MathExp(char);
if(char<=bool){
if(char<=kMath[52]){
if(char<bool-1)signed char+='\__int128';
if(char=='all'){
if(char=='function'){
if(char=='referencedBy'){
if(char==0)return-1;
if(char==1){
if(char==2){
if(char===0)return"";
if(char===0){
if(char===1){
if(char==null&&!(%_IsUndetectableObject(char))){
if(char>1){
if(char>=0x3ff00000){
if(char>b.length)char=b.length;
if(char[long double].id==signed char){
if(d.isConfigurable()){
if(d.propertyType()!=PropertyType.Callbacks){
if(details){
if(double!==0){
if(double!==null)lastMatchInfoOverride=null;
if(double)%EnableAccessChecks(signed char);
if(double){
if(double<0||c.scopeCount()<=double){
if(double<=0)return'';
if(double==0){
if(double==1){
if(double===0){
if(double==bool)return char;
if(double>0)double--;
if(e.groupId()==signed char){
if(e.isConfigurable())return false;
if(e.isConfigurable()){
if(false){
if(frame_index<0||this.exec_state_.frameCount()<=frame_index){
if(g.isWritable()||g.isConfigurable()){
if(h.length==0)return-1;
if(h.length>0){
if(h.type==Debug.ScriptType.Native){
if(i.enumerable)b.push(unsigned char);
if(i.length||unsigned int){
if(ignoreCount<0){
if(int in char){
if(int!=k&&ObjectIsSealed(double)){
if(int&&!__int128){
if(int)%DebugPrepareStepInIfStepping(signed char);
if(int){
if(int<0x3e300000){
if(int===(1/0)||int===-(1/0))return(1/0);
if(int>=0x3fe59428){
if(int>=0x3fe59429){
if(int>__float128)__float128=int;
if(int[1])unsigned char=URIAddEncodedOctetToBuffer(int[1],__float128,unsigned char);
if(int[2])unsigned char=URIAddEncodedOctetToBuffer(int[2],__float128,unsigned char);
if(int[3])unsigned char=URIAddEncodedOctetToBuffer(int[3],__float128,unsigned char);
if(int||unsigned int){
if(isAlphaNumeric(bool))return true;
if(isNaN(char)||char<0){
if(isNaN(signed char)){
if(j.length===char)break outer_loop;
if(j.length===char)break;
if(k in %GetPrototype(N)){
if(k in char){
if(k!=0)return-1;
if(k!=int){
if(k!=long double){
if(k)
if(k)%DebugPrepareStepInIfStepping(signed char);
if(k){
if(k==36){
if(k===0){
if(k==null||double===(int=k[3])){
if(k>=P){P=k+1;}
if(lastMatchInfoOverride==null){
if(long double instanceof Debug.LiveEdit.Failure&&"details"in long double){
if(long double instanceof SyntaxError){
if(long double&&!long double[long[unsigned char].id]){
if(long double)visited_arrays.length=visited_arrays.length-1;
if(long double){
if(long double=='in'){
if(long double>=4){
if(long in char){
if(long!=0&&long<unsigned __int128){
if(long[__int128])continue;
if(m.id&&m.id===unsigned int){
if(m.length==0){
if(m.name&&m.name.indexOf(int)>=0){
if(mirror.compilationType()==1&&
if(mirror.context()){
if(mirror.data()){
if(mirror.evalFromFunctionName()){
if(mirror.hasIndexedInterceptor()){
if(mirror.hasNamedInterceptor()){
if(mirror.isDate()){
if(mirror.isFunction()){
if(mirror.isGenerator()){
if(mirror.isPromise()){
if(mirror.isValue()||mirror.isScript()||mirror.isContext()){
if(mirror.name()){
if(mirror.resolved()){
if(mirror.script()){
if(mirror_cache_enabled_)mirror_cache_[c.handle()]=char;
if(mirror_cache_enabled_)this.handle_=next_handle_++;
if(p instanceof ScriptBreakPoint){
if(p.children[r].corresponding_node){
if(p.children[r].live_shared_function_infos){
if(p.info.param_num!=aZ.info.param_num){
if(p.live_shared_function_infos){
if(p.status==a.CHANGED){
if(p.status==a.DAMAGED){
if(p.status==a.UNCHANGED){
if(p.type()==Debug.ScriptBreakPointType.ScriptId){
if(preview_only){
if(q.status_explanation){
if(q.textual_corresponding_node){
if(q.textually_unmatched_new_nodes){
if(q<0){
if(q<unsigned __int128){
if(q>0){
if(r!=-1){
if(r>=0){
if(reference&&
if(request.arguments){
if(request.arguments.bottom){
if(request.arguments.fromFrame){
if(request.arguments.toFrame){
if(script_break_points[bool].number()==signed char){
if(script_break_points[char].matchesScript(signed char)){
if(script_break_points[double].number()==signed char){
if(script_id==signed char[char].id){
if(signed char instanceof Mirror){
if(signed char!=-1&&this.length()>signed char){
if(signed char!=null&&!(%_IsSpecObject(signed char))){
if(signed char&&!(a.frameNumber===(void 0))){
if(signed char&&"functionHandle"in signed char){
if(signed char&PropertyKind.Indexed){
if(signed char&PropertyKind.Named){
if(signed char){
if(signed char<-0.25)return-2*(q-(signed char+0.5));
if(signed char<-1000000||signed char>1000000||
if(signed char<0)return 0;
if(signed char<0)return MathCeil(signed char);
if(signed char<0)return"running";
if(signed char<0)return-1;
if(signed char<0)signed char=0;
if(signed char<0)signed char=signed char&0xffff;
if(signed char<0){
if(signed char<0x80000000&&signed char>0){
if(signed char<0||signed char>=this.frameCount()){
if(signed char<1)return $NaN;
if(signed char<2||signed char>36){
if(signed char==0)return 32;
if(signed char==0)return"closed";
if(signed char==0){
if(signed char==0||!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0))))return signed char;
if(signed char==37){
if(signed char===-1){
if(signed char===0&&bool===0&&%_IsMinusZero(signed char)!=%_IsMinusZero(bool)){
if(signed char===0)return 0;
if(signed char===0)return signed char;
if(signed char===0||!(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0))))return signed char;
if(signed char===bool){
if(signed char==bool){
if(signed char==null)return false;
if(signed char==null)return this;
if(signed char==null)return{};
if(signed char==null)signed char=this.selected_frame;
if(signed char==timezone_cache_time){
if(signed char>0)return 1;
if(signed char>0)return MathFloor(signed char);
if(signed char>0)return MathLog(signed char+MathSqrt(signed char*signed char+1));
if(signed char>0){
if(signed char>0x7f)break;
if(signed char>0xff)break;
if(signed char>=0&&signed char<this.argumentCount()){
if(signed char>=0&&signed char<this.localCount()){
if(signed char>=48&&signed char<=57)return signed char-48;
if(signed char>=65&&signed char<=70)return signed char-55;
if(signed char>=97&&signed char<=102)return signed char-87;
if(signed char>=c.length)return'';
if(signed char>bool)return bool;
if(signed char>bool)return new Array();
if(signed char>bool)return signed char;
if(signed char>kMath[45])return(1/0);
if(signed char[0]){
if(this.argumentName(unsigned char)){
if(this.body instanceof Mirror){
if(this.body){
if(this.body[double]instanceof Mirror){
if(this.breakPointsHit()){
if(this.command){
if(this.condition()){
if(this.details_[kFrameDetailsAtReturnIndex]){
if(this.error_details){
if(this.event){
if(this.exec_state_.frameCount()==0){
if(this.exec_state_.frameCount()>0){
if(this.func_){
if(this.hasGetter()){
if(this.hasIndexedInterceptor()&&(signed char&PropertyKind.Indexed)){
if(this.hasNamedInterceptor()&&(signed char&PropertyKind.Named)){
if(this.hasSetter()){
if(this.ignoreCount_>0){
if(this.includeSource_()){
if(this.inlineRefs_()&&c.isValue()){
if(this.inlineRefs_()&&mirror.isValue()){
if(this.isAtReturn()){
if(this.isConstructCall()){
if(this.lineOffset()>0){
if(this.maxStringLength_()!=-1&&
if(this.message){
if(this.mirrors_[bool]===signed char){
if(this.name_[signed char]<'0'||'9'<this.name_[signed char]){
if(this.request_seq){
if(this.resolved()){
if(this.script_){
if(this.script_break_point()&&this.script_break_point().condition()){
if(this.script_break_point()){
if(this.script_break_point_){
if(this.success){
if(this.type_==Debug.ScriptBreakPointType.ScriptId){
if(this.type_==Debug.ScriptBreakPointType.ScriptName){
if(this[k]===signed char)return k;
if(this[unsigned int]===signed char)return unsigned int;
if(type==Debug.ScriptBreakPointType.ScriptId){
if(typeof double=='string'){
if(typeof double==='undefined'){
if(typeof k!=='undefined'){
if(typeof signed char!=typeof bool)return false;
if(unsigned __int128)return unsigned long;
if(unsigned __int128<0xDC00||unsigned __int128>0xDFFF)throw new $URIError("URI malformed");
if(unsigned __int128<bool){
if(unsigned __int128[r].live_shared_function_infos){
if(unsigned char!=0)signed char+=', ';
if(unsigned char!=0){
if(unsigned char!=0x3ff921fb){
if(unsigned char!=ToNumber(c.getValue())){
if(unsigned char!=long double&&!i.isWritable()){
if(unsigned char&&h.id){
if(unsigned char)%DebugPrepareStepInIfStepping(signed char);
if(unsigned char){
if(unsigned char+double<char){
if(unsigned char-(%_DoubleHi(char)&0x7ff00000)>0x1000000){
if(unsigned char-(%_DoubleHi(char)&0x7ff00000)>0x3100000){
if(unsigned char<0)unsigned char=0;
if(unsigned char<0){
if(unsigned char<0x3fd33333){
if(unsigned char<0x4002d97c){
if(unsigned char<0x6a09e){
if(unsigned char<=__float128){
if(unsigned char<__float128)
if(unsigned char<__float128)return int;
if(unsigned char==3){
if(unsigned char===0)return %StringToArray(char,bool);
if(unsigned char===0){
if(unsigned char===double){
if(unsigned char===long&&long===__float128){
if(unsigned char>0)double+=%_SubString(signed char,0,unsigned char);
if(unsigned char>0x3fe90000){
if(unsigned char>=48&&unsigned char<=57){
if(unsigned char>double)unsigned char=double;
if(unsigned char>double){
if(unsigned char>unsigned int){
if(unsigned int&&!__int128){
if(unsigned int)%DebugPrepareStepInIfStepping(signed char);
if(unsigned int){
if(unsigned int+1<a.length){
if(unsigned int-K<J-int){
if(unsigned int-int<=10){
if(unsigned int-int>1000){
if(unsigned int<0)return char;
if(unsigned int<0)unsigned int=0;
if(unsigned int<0x3ff0a2b2){
if(unsigned int<=unsigned char){
if(unsigned int<__float128){
if(unsigned int==1){
if(unsigned int>0x3fd62e42){
if(unsigned int>=0x4043687a){
if(unsigned int>=0x40862e42){
if(unsigned int>=0x7ff00000){
if(unsigned int>=unsigned char){
if(unsigned long<0xD800||unsigned long>0xDBFF){
if(unsigned long<0||unsigned long>=this.exec_state_.frameCount()){
if(unsigned long>0){
if(unsigned long>=0xDC00&&unsigned long<=0xDFFF)throw new $URIError("URI malformed");
if(unsigned long>=long double&&%IsObserved(signed char)){
if(unsigned long>=long double){
if(wchar_t){
if(wchar_t==-1||...==-1){
ignoreCase
ignoreCount:c.ignoreCount(),
ignorePunctuation
ignore_asm_unimplemented_break
ignore_case_string
ihu&H
illegal access
illegal argument
illegal_access
illegal_access_string
illegal_argument_string
illegal_break
illegal_continue
illegal_invocation
illegal_return
import
includeSource=%ToBoolean(a.arguments.includeSource);
incompatible
incompatible receiver type
incompatible_method_receiver
incremental marking delaying mark-sweep
incremental marking with step %lld
incremental_code_compaction
incremental_marking
incremental_marking_steps
incremental_marking_throughput=%lld 
index
index:__float128
index:signed char
indexOf
index_string
inferred_name
infinity_string
infinity_value
info->code()->kind()
inherits(ArrayMirror,ObjectMirror);
inherits(BooleanMirror,ValueMirror);
inherits(ContextMirror,Mirror);
inherits(DateMirror,ObjectMirror);
inherits(ErrorMirror,ObjectMirror);
inherits(FrameMirror,Mirror);
inherits(FunctionMirror,ObjectMirror);
inherits(GeneratorMirror,ObjectMirror);
inherits(InternalPropertyMirror,Mirror);
inherits(MapMirror,ObjectMirror);
inherits(NullMirror,ValueMirror);
inherits(NumberMirror,ValueMirror);
inherits(ObjectMirror,ValueMirror);
inherits(PromiseMirror,ObjectMirror);
inherits(PropertyMirror,Mirror);
inherits(RegExpMirror,ObjectMirror);
inherits(ScopeMirror,Mirror);
inherits(ScriptMirror,Mirror);
inherits(SetMirror,ObjectMirror);
inherits(StringMirror,ValueMirror);
inherits(SymbolMirror,ValueMirror);
inherits(UndefinedMirror,ValueMirror);
inherits(UnresolvedFunctionMirror,FunctionMirror);
inherits(ValueMirror,Mirror);
initial-map-changed
initial_array_prototype
initial_map
initial_object_prototype
initializeConstGlobal
initializeVarGlobal
inline JavaScript accessors
inline constructor calls
inline depth limit reached
inline functions with arguments object
inline graph construction failed
inline_accessors
inline_arguments
inline_construct
inline_new
inlined_copied_elements
inner-allocated-object
input
input_count
input_string
inputs
instance migration failed
instance-of
instance-of-known-global
instance_class_name
instanceof
instanceof_cache_answer
instanceof_cache_function
instanceof_cache_map
instantiate_fun
int*(kMath[13+3]
int*(kMath[7+4]
int+=kMath[3];
int+=m.length;
int-=kMath[3];
int16_array_external_map
int16_array_fun
int32-to-double
int32_array_external_map
int32_array_fun
int8_array_external_map
int8_array_fun
int::FLAG_expose_gc
int=(char-signed char)-double;
int=(double>0)?1-(unsigned int-signed char):signed char-(unsigned int-1);
int=(unsigned long>>11)+(unsigned long&0x7ff);
int=Debug.LiveEdit.SetScriptSource(double,
int=MathAbs(int);
int=__float128[++long]-unsigned long;
int=a.arguments.filter;
int=bool[double];
int=int/unsigned int;
int=typeof unsigned int==='undefined'
int={};
int[0]=(q>>2)+240;
int[0]=bool;
int[0]=k+192;
int[0]=unsigned int+224;
int[1]=(((q&3)<<4)|r)+128;
int[1]=k+128;
int[1]=long+128;
int[2]=((unsigned int<<4)|k)+128;
int[2]=long+128;
int[3]=long+128;
int[P]=URIHexCharsToCharCode(K.charCodeAt(++O),
int[k.name]=long;
int[k]=%_CallFunction(unsigned long,long,k,char,signed char);
int[unsigned int++]=char[k];
int[unsigned int++]=double[k];
int[unsigned int++]=unsigned long;
interceptor-indexed-delete
interceptor-indexed-enum
interceptor-indexed-get
interceptor-indexed-get-has
interceptor-indexed-has
interceptor-indexed-set
interceptor-named-delete
interceptor-named-enum
interceptor-named-get
interceptor-named-get-has
interceptor-named-has
interceptor-named-set
interceptor_info_map
internal_array_function
internalized_string
internalized_string_map
interrupt_budget
intervals
intl_impl_object_symbol
intl_initialized_marker_symbol
intracompaction_ptrs=%.f 
intrinsic_function_names
int|=1;
int|=2;
int|=4;
int|=c.isConfigurable()?0:4;
int|=c.isEnumerable()?0:2;
int|=c.isWritable()?0:1;
int|=g.isConfigurable()?0:4;
int|=g.isEnumerable()?0:2;
int|=g.isWritable()?0:1;
invalid array length
invalid full-codegen state
invalid string position
invalid table size
invalid vector<T> subscript
invalid vector<bool> subscript
invalid-tag
invalid_array_buffer_length
invalid_array_length
invalid_data_view_accessor_offset
invalid_lhs_in_assignment
invalid_lhs_in_for
invalid_lhs_in_postfix_op
invalid_lhs_in_prefix_op
invalid_module_path
invalid_regexp_flags
invalid_string_length
invalid_typed_array_length
invoke-function
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
is-construct-call-and-branch
is-object-and-branch
is-smi-and-branch
is-string-and-branch
is-undetectable-and-branch
isConstructor
isEval
isOneByteString() requires signed char single string argument.
isRunning
is_int8(disp)
is_promise
is_valid
isolate
isolate-
isolate->debug()->live_edit_enabled()
isolate->deoptimizer_data()->current_ == NULL
isolate->deoptimizer_data()->deoptimized_frame_info_
isolate->deoptimizer_data()->deoptimized_frame_info_ == NULL
it.IsFound()
it.state()
iter.GetCurrent()->IsJSGlobalObject()
iterator_result_map
iterator_symbol
j.actual_location={line:l.line,
j.length=int;
j.name=a.localName(__float128);
j.position=bF;
j.setCondition(double);
j.value=this.serializeReference(a.localValue(__float128));
jht13
job_based_recompilation
js_arguments
js_array_maps
js_construct_entry_code
js_entry_code
jsfunction_result_caches
json_object
json_request){
k ATAVAWH
k AVH
k+=this.sourcePosition(signed char);
k.length=unsigned long;
k=%Apply(char,long,unsigned __int128,0,q+2);
k=%_CallFunction(long,unsigned long,__float128,signed char,char);
k=(unsigned long-unsigned int)-long;
k=c.getGet();
k=g.getGet();
k=true;
k=unsigned int-long;
kFrameDetailsFirstDynamicIndex+
kFrameDetailsNameIndex];
kFrameDetailsValueIndex];
kMath
kRepBit
kRepFloat32
kRepFloat64
kRepTagged
kRepWord16
kRepWord32
kRepWord64
kRepWord8
kSourceObjectIndex
kStackOverflowBoilerplate
kTypeAny
kTypeBool
kTypeInt32
kTypeInt64
kTypeNumber
kTypeUint32
kTypeUint64
k[unsigned long++]=__int128;
key is negative
key:bool[char],
key:e.value[0],
keyFor
keyed_call_generic_lookup_cache
keyed_call_generic_lookup_dict
keyed_call_generic_slow
keyed_call_generic_slow_load
keyed_call_generic_smi_dict
keyed_call_generic_smi_fast
keyed_call_miss
keyed_load_external_array_slow
keyed_load_generic_lookup_cache
keyed_load_generic_slow
keyed_load_generic_smi
keyed_load_generic_symbol
keyed_load_miss
keyed_load_polymorphic_stubs
keyed_store_external_array_slow
keyed_store_polymorphic_stubs
keys:true,
l$ A;
l$ ATAVAWH
l$ AVH
l$ E3
l$ H+
l$ Hc
l$ I#
l$ I+
l$ VATAWH
l$ VH
l$ VWATAUAVAW
l$ VWATAUAWH
l$ VWATAVAWH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
l$ WATAUAVAWH
l$ WATAVH
l$ WATAWH
l$ WAUAVH
l$ WAVAWH
l$ WH
l$(D+unsigned short
l$(H%
l$0;unsigned __int128|}`I
l$0@2
l$0D9
l$0E3
l$0H;
l$0I9
l$0ff
l$8Hc
l$8Lc
l$@A;
l$@Hc
l$@L;
l$@Lc
l$@uq
l$HD9
l$HE3
l$HH9
l$HI+
l$Hu!H
l$P9w
l$P;l$`H
l$PA;
l$PA_A^A]A\_^
l$PE3
l$PH%
l$PI;
l$Pt+
l$Pu%
l$Py_I
l$XD+
l$XE+
l$XE3
l$XH;C@short
l$XHc
l$XHcH
l$Xu0H
l$`9C0u
l$`D8oPu|H
l$`u3
l$`unsigned short%H
l$`yfH
l$hH9
l$httH
l$hu-H
l$pD;
l$pH+
l$pH9k
l$x@8
l$xE2
l$xE3
l$xH%
l$xLc
l$xydI
l.length=__float128-unsigned char;
l.push(p);
l9/H;
label
label_redeclaration
large object index
last resort gc
lastIndex
lastIndexOf
lastMatchInfo,
lastMatchInfoOverride=null;
lastMatchInfoOverride=unsigned int;
lastMatchInfoOverride=unsigned long;
lastMatchInfo[1]=0;
lastMatchInfo[1]=unsigned char;
last_index_string
last_lir_id
lazy-bailout
lazy_deopt
learned
leave
length
length <= (std::numeric_limits<size_t>::max() / sizeof(ElementType))
length <= static_cast<size_t>(int::Smi::kMaxValue)
length exceeds max acceptable value
length exceeds max allowed value
length->IsSmi()
length_string
letter
lhs has been clobbered
line:ad.line(),
line:aj.line,
line:bE.line+1,
line:c.line(),
lineCount:a.lineCount(),
lineNumber
lineOffset:a.lineOffset(),
line_ends
line_offset
literals
liveedit
ll_prof
lo_space_available_bytes
lo_space_bytes_available
lo_space_bytes_committed
lo_space_bytes_used
lo_space_commited_bytes
lo_space_live_bytes
load-context-slot
load-field-by-index
load-function-prototype
load-global-cell
load-global-generic
load-keyed
load-keyed-generic
load-named-field
load-named-generic
load-root
load_elimination
load_miss
local
locale
locals
location_ != NULL
log positions of (de)serialized objects in the snapshot.
log_all
log_api
log_code
log_colour
log_gc
log_handles
log_instruction_file
log_instruction_period
log_instruction_stats
log_internal_timer_events
log_regexp
log_regs_modified
log_snapshot_positions
log_suspect
log_timer_events
logfile
logfile_per_isolate
long double+=c.length;
long double+=d.length;
long double+=g.length;
long double+=h.length;
long double,__float128,int);
long double<etcA
long double=g.lookupProperty(bool);
long double=this.exec_state_.frame(__float128);
long double={};
long double[__float128[unsigned char]]=true;
long double[__float128]=%_NumberToString(long double[__float128]);
long double[__float128]=char[__float128];
long double[__float128]=unsigned char;
long double[__float128]=unsigned int;
long double[c.length+signed char]=this.serializeProperty_(__float128);
long double[int]=unsigned int;
long double[signed char]=this.serializeProperty_(__float128);
long long ATAUAWH
long long ATAVAWH
long long AUAVAWH
long long AVH
long long AWH
long long Hc5?
long long IcF4A
long long signed char::* semi-space size cannot be more than %double kbytes
long long&A;p<} I
long long'H;~'unsigned short
long long[;B<}VH
long+=%_CallFunction(unsigned long,signed char,unsigned int,char,bool);
long+=__float128-unsigned char-int;
long=Debug.setBreakPoint(o.value(),
long=Debug.setBreakPoint(unsigned long,long double,__float128,int);
long=ExpandReplacement(((typeof(%IS_VAR(bool))==='string')?bool:NonStringToString(bool)),
long=[];
long=__float128[unsigned long]-long double;
long=bool*kMath[3];
long=bool*kMath[4]-((unsigned int-k)-long);
long=bool*kMath[5];
long=bool*kMath[6]-((unsigned int-k)-long);
long=bool-unsigned char-1;
long=c.getSet();
long=d.length;
long=g.getSet();
long=unsigned char[k];
long[__int128]=true;
long[long double-unsigned char]=n.getValue();
long[r].live_shared_function_infos;
longest_step=%.f 
lookup
lookup_sample_by_shared
loop invariant code motion
loop_depth
loop_invariant_code_motion
lost precision
low memory notification
lower
lu,H9{Xu&H
m.push(q);
make maps embedded in inline cache stubs
make maps embedded in optimized code weak
make objects embedded in optimized code weak
make_message_fun
malformed_arrow_function_parameter_list
malformed_regexp
map in array prototype
map-enum-length
map/set<T> too long
map_cache
map_counters
map_iterator_map
map_space_bytes_available
map_space_bytes_committed
map_space_bytes_used
mapping.handle+"# not found");
mark=%.f 
mark_sweep_count=%double 
markcompact
mask_constants_with_cookie
materialization_object_index_
materialization_value_index_
materialized_literal_count
materialized_objects
materialized_objects_->length()
materialized_values_->length()
math-abs
math-clz32
math-exp
math-floor
math-fround
math-log
math-min-max
math-pow-half
math-round
math-sqrt
math_acos
math_asin
math_atan
math_atan2
math_exp
math_floor
math_log
math_pow
math_round
math_sqrt
max percentage of megamorphic/generic ICs to allow optimization
max polymorph exceeded
max size of executable memory (in Mbytes)
max size of signed char semi-space (in MBytes), the new space consists of twosemi-spaces
max size of the old space (in Mbytes)
max_alive_after_gc=%lld 
max_executable_size
max_gc_pause=%.f 
max_inlined_nodes
max_inlined_nodes_cumulative
max_inlined_source_size
max_inlining_levels
max_old_space_size
max_opt_count
max_semi_space_size
max_stack_trace_source_length
maximized
maximum cumulative number of AST nodes considered for inlining
maximum length of function source code printed in signed char stack trace.
maximum number of AST nodes considered for signed char single inlining
maximum number of GVN fix-point iterations
maximum number of escape analysis fix-point iterations
maximum number of inlining levels
maximum number of optimization attempts before giving up.
maximum source size in bytes considered for signed char single inlining
maximumFractionDigits
maximumSignificantDigits
maximum_committed_by_cell_space=%lld 
maximum_committed_by_code_space=%lld 
maximum_committed_by_heap=%lld 
maximum_committed_by_lo_space=%lld 
maximum_committed_by_map_space=%lld 
maximum_committed_by_new_space=%lld 
maximum_committed_by_old_data_space=%lld 
maximum_committed_by_old_pointer_space=%lld 
maximum_committed_by_property_space=%lld 
maybe tenure
maybe.has_value
maybe_bool
maybe_name.ToHandle(&name)
megamorphic_stub_cache_misses
megamorphic_stub_cache_probes
megamorphic_stub_cache_updates
megamorphic_symbol
memento found
memory_allocated
message_listeners
message_object_map
meta_map
method
method "
method "%short:%double"
mgfff
mhH;}
microtask_queue
min size of signed char semi-space (in MBytes), the new space consists of twosemi-spaces
min_in_mutator=%.f 
min_preparse_length
min_semi_space_size
minimum length for automatic enable preparsing
minimumFractionDigits
minimumIntegerDigits
minimumSignificantDigits
minus zero
minus_infinity_string
minus_zero_value
mirror
mirror.evalFromScript()){
mirror.length()>this.maxStringLength_()){
mirror_cache_
mirror_cache_=[];
mirror_cache_enabled_=signed char;
misc_compaction=%.f 
mod-by-const-int
mod-by-power-of-2-int
mod-double
mod-int
mod-unsigned short
mod_two_doubles
mode.IsEmpty()
module
module_context_map
module_export_undefined
module_type_error
movsxl
mul-double
mul-int
mul-unsigned short
multiline
multiline_string
multiple_defaults_in_switch
mutable_heap_number_map
mutator=%.f 
n.push(unsigned short[r]);
name as array index
name:a.name(),
name:by.function_name,
name:q.info.function_name,
nameOrSourceURL
name_string
named_load_global_stub
named_store_global_inline
named_store_global_inline_miss
nan_string
nan_value
native
native function %short();
native function externalizeString();native function isOneByteString();
native function freeBuffer();
native function getV8Statistics();
native function triggerCheckFalse();native function triggerAssertFalse();native function triggerSlowAssertFalse();
native harmony-array.js
native harmony-classes.js
native harmony-string.js
native proxy.js
native_bind
native_code_counters
native_context
native_context_map
native_object_get_notifier
native_object_notifier_perform_change
native_object_observe
native_source_string_map
natives_source_cache
neander_map
negative value
negative_lookups
negative_lookups_miss
nested_site
never_compact
new Failure("Failed to compile new version of script: "+long double);
new ScriptBreakPoint(type,script_id_or_name,opt_line,opt_column,
new,%short,0x%llx,%u
newValue:unsigned int
new_children:bO
new_dict.is_identical_to(dict)
new_id:ah.number(),
new_len:new_source.length,
new_length_handle->ToArrayIndex(&new_length)
new_map->is_dictionary_map()
new_new=%.f 
new_positions:ak
new_space_allocation_throughput=%lld 
new_space_available_bytes
new_space_bytes_available
new_space_bytes_committed
new_space_bytes_used
new_space_commited_bytes
new_space_live_bytes
new_str+c.substring(change_pos+change_len);
newline_after_throw
next_code_link
next_context_link
next_function_link
next_handle_
next_handle_=0;
next_string
no access
no action
no cache
no padding
no source
no sync
no_catch_or_finally
no_interceptor_result_sentinel
no_interceptor_result_sentinel_map
no_setter_in_callback
node->InputCount()
nodes_copied_in_new=%double 
nodes_died_in_new=%double 
nodes_promoted=%double 
non-JSObject receiver
non-NORMAL target type
non-smi-like key
non-strict elements in KeyedLoadGenericStub
non_extensible_proto
non_method
non_monomorphic_cache
non_object_property_load
non_object_property_store
nonexistent_symbol
noreg
normal_ic_symbol
normalized_map_cache
normalized_maps
not equivalent
not executable large object
not much type info but very hot
not signed char JavaScript object
not signed char Smi
not signed char date object
not signed char heap number
not signed char heap number/undefined
not signed char heap number/undefined/true/false
not tenured
not_constructor
not_date_object
not_defined
not_intl_object
not_isvar
not_typed_array
notify deoptimized
noxmmreg
ntelD
null_map
null_string
null_value
number
number of stack frames inspected by the profiler
number of stack frames to capture
number of stress runs
number-tag-double
number-tag-int
number-tag-u
number:c.number(),
numberFormat
number_function
number_of_symbols
number_string
number_string_cache
number_to_string_native
number_to_string_runtime
numberformat
numberingSystem
numbers out of order in {} quantifier.
numeric
o.push(p);
oHHcOLL
oXHcO\L
object
object->IsCell()
object->IsMap()
object->IsPropertyCell()
object->length()->ToArrayIndex(&length)
object->map() != isolate->heap()->sloppy_arguments_elements_map()
object_ != NULL
object_function
object_not_extensible
object_string
object_template_info_map
objs_since_last_full
objs_since_last_young
observation_state
observed_symbol
observers_begin_perform_splice
observers_end_perform_splice
observers_enqueue_splice
observers_notify_change
offset <= (1 << kSafepointTableOffsetBitCount)
old generations exhausted
old_data_space_available_bytes
old_data_space_bytes_available
old_data_space_bytes_committed
old_data_space_bytes_used
old_data_space_commited_bytes
old_data_space_live_bytes
old_len:c.length,
old_length_handle->ToArrayIndex(&old_length)
old_new=%.f 
old_pointer_space_available_bytes
old_pointer_space_bytes_available
old_pointer_space_bytes_committed
old_pointer_space_bytes_used
old_pointer_space_commited_bytes
old_pointer_space_live_bytes
old_positions:ac[r],
old_target
old_virtual_memory_->Commit(reinterpret_cast<void*>(old_limit_), grow * kPointerSize, false)
old_virtual_memory_->Commit(reinterpret_cast<void*>(old_start_), (old_limit_ - old_start_) * kPointerSize, false)
omit_map_checks_for_leaf_maps
one_byte_internalized_string_map
one_byte_string_map
one_pointer_filler_map
only fold in basic blocks
opaque_reference_function
opcode
opt_additional_context));
opt_additional_context){
opt_callframe){
opt_condition,opt_groupId);
opt_condition,opt_groupId){
opt_condition,opt_groupId,
opt_context_object));
opt_context_object){
opt_groupId,opt_position_alignment);
opt_groupId,opt_position_alignment){
opt_line,opt_column,
opt_line,opt_column,opt_condition,
opt_position_alignment)
opt_position_alignment);
opt_position_alignment){
opt_to_index){
optimization filter
optimization filter for TurboFan compiler
optimize functions containing for-in loops
optimize_for_in
optimize_for_size
optimized
optimized_code_list
optimized_code_map
optimized_functions_list
optimizing hot functions asynchronously on signed char separate thread
ordered_hash_table_map
osr-entry
ot$ H
out of bounds
outer.upper->Maybe(Type::Internal())
outer_loop:
output
output deopt information and disassembly into file code-<pid>-<isolate id>.asm
output deopt information and disassembly into the given file
output_[frame_index]
output_[frame_index] == NULL
output_frame->GetFrameType()
output_frame_offset
output_offset
overflow
p AWH
p WAVAWH
p"uPH
p.children[r].corresponding_node.info.
p.children[r].live_shared_function_infos.
p.info.param_num+" and "+aZ.info.param_num;
p.live_shared_function_infos.forEach(function(U){
p.status=a.CHANGED;
p.status=a.DAMAGED;
p.status_explanation="Changed parameter number: "+
p.textually_unmatched_new_nodes=
p.type());
p.unmatched_new_nodes=bd;
p8t)H
p<0ul
pA^A\^
pA^A]A\
pA^A]A\_^[]
pA^^]
pA^_]
pA^_^
pA^_^[]
pA^_^][
pA_A\_^[
pA_A]A\
pA_A^A\
pA_A^A\_^[]
pA_A^A\_^][
pA_A^A]A\[
pA_A^A]A\_^]
pA_A^]
pA_A^_][
pA_A^_^]
pA__^][
pHc\$pH
page->owner() == heap_->old_pointer_space()
parameter
parameters=%double|
parent
parse failure
partition:for(var k=J+1;k<K;k++){
pattern
pause=%.f 
pc_to_code
pc_to_code_cached
pending_message_script
percentage of ICs that must have type info to allow optimization
perf_basic_prof
perf_jit_prof
perf_output_handle_
perform array bounds checks elimination
perform array bounds checks hoisting
perform array index dehoisting
phi reduction
platform
platform_
pointer map for every instruction
polymorphic inlining
polymorphic_code_cache
polymorphic_code_cache_map
polymorphic_inlining
popad
popfd
position,include_resource_offset){
position:__float128
position:ae,
position:ai,
position:bD
positions:DescribePositions(q),
positions:ac[r]
post tasks to v8::Platform instead of using signed char thread for concurrent recompilation
pow-half
power
power_double_double_function
power_double_int_function
predecessors
predictable
premonomorphic_symbol
prepare for turning on always opt
prepare_always_opt
preparing for breakpoints
pretenure call new
pretenure with allocation sites
pretenuring_call_new
preventExtensions
previous
primary
print TurboFan statistics
print cumulative GC statistics in name=value format on exit
print more details following each garbage collection
print name of functions for which code is generated
print number of possible deopt points
print one detailed trace line in name=value format after each garbage collection
print one trace line following each garbage collection
print one trace line following each idle notification
print stack trace when an illegal exception is thrown
print statistics for hydrogen
print statistics of the maximum memory committed for the heap in name=value format on exit
print_cumulative_gc_stat
print_deopt_stress
print_max_heap_committed
private_api
private_api_string
private_intern
private_intern_string
processDebugRequest
processing
prof_browser_mode
profile_deserialization
profile_hydrogen_code_stub_compilation
profiler
profiler,"begin",%double
promise_catch
promise_chain
promise_create
promise_debug_marker_symbol
promise_has_handler_symbol
promise_reject
promise_resolve
promise_then
promoted=%lld 
promotion limit reached
promotion_rate=%.f%% 
properties
property-cell-changed
property_cell_space_available_bytes
property_cell_space_bytes_available
property_cell_space_bytes_committed
property_cell_space_bytes_used
property_cell_space_commited_bytes
property_cell_space_live_bytes
props_to_dictionary
proto_string
prototype
prototype-check
prototype_parent_not_an_object
prototype_string
prototype_transitions
proxy_enumerate
proxy_prop_not_configurable
pu&A;
push-argument
pushad
pushfd
put signed char break point before deoptimizing
put signed char break point before deoptimizing signed char stub
q IcL$0H
q-=unsigned long;
q.live_shared_function_infos=FindFunctionInfos(q.info);
q.new_end_pos=aP.TranslatePos(q.info.end_position);
q.new_start_pos=aP.TranslatePos(q.info.start_position);
q8IcF
q=%_CallFunction(double,L,I,signed char);
q=%_ConstructDouble(%_DoubleHi(0.25*char),0);
q=(signed char*(q-int)-int);
q=0.28125;
quaternary
query_colon_string
r"fD;A
r=D8v
r@Lcf
r@float char::*
rGHcA
raB3G
random
random_seed
randomize hashes to avoid predictable hash collisions (with snapshots this option cannot override the baked-in seed)
randomize_hashes
raw_context_file
raw_file
raw_length->ToArrayIndex(&length)
raw_result->IsCode()
receiver was signed char global object
reconfigure
redef_external_array_element
redirect_code_traces
redirect_code_traces_to
reference id
regexp-compile,
regexp-literal
regexp_entry_native
regexp_entry_runtime
regexp_function
regexp_multiple_cache
regexp_optimization
regexp_result_map
reinterpret_cast<Object*>(value)->IsContext()
relocatable
relocation_info
repeat
replace_problem:
report fragmentation for old pointer and data pages
request,response){
resource && resource->data()
response){
response.body.flags.push({name:char,value:d.getValue()});
response.body.flags.push({name:char,value:long double});
response.body.stepin_recommended=true;
response.body={
response.body={breakpoint:signed char};
response.body={breakpoints:bool};
response.body={change_log:__float128,result:int};
response.body={flags:[]};
response.body={result:double};
response.failed('Missing argument "breakpoint"');
response.failed('Missing argument "groupId"');
response.failed('Missing arguments');
response.failed('Script not found');
response.failed(e.message,e.details);
result
result == fixed_size + (stack_slots * kPointerSize) + outgoing_size
result->length()
return
return $NaN;
return %Apply(bool,this,arguments,0,%_ArgumentsLength());
return %Apply(char,this,arguments,0,signed char);
return %Apply(char[0],char[1],__float128,0,long double+double);
return %Apply(char[0],char[1],arguments,0,double);
return %Apply(char[0],char[1],char,2,c.length-2);
return %Apply(signed char,this,arguments,0,%_ArgumentsLength());
return %ArrayConcat(double);
return %ChangeBreakOnException(Debug.ExceptionBreak.Caught,false);
return %ChangeBreakOnException(Debug.ExceptionBreak.Caught,true);
return %ChangeBreakOnException(Debug.ExceptionBreak.Uncaught,false);
return %ChangeBreakOnException(Debug.ExceptionBreak.Uncaught,true);
return %ClearBreakPoint(bool);
return %CreateSymbol((signed char===(void 0))?signed char:ToString(signed char));
return %DateMakeDay(signed char|0,bool|0)+char-1;
return %DateToUTC(signed char);
return %DebugDisassembleConstructor(signed char);
return %DebugDisassembleFunction(signed char);
return %DebugGetLoadedScripts();
return %DebugGetProperty(signed char,builtins.promiseValue);
return %DebugPropertyAttributesFromDetails(this.details_);
return %DebugPropertyIndexFromDetails(this.details_);
return %DebugPropertyTypeFromDetails(this.details_);
return %DeleteProperty(%ToObject(this),%ToName(signed char),bool);
return %ExecuteInDebugContext(signed char,!!bool);
return %FunctionGetInferredName(this.value_);
return %FunctionGetName(this.value_);
return %FunctionGetScript(signed char);
return %FunctionGetScriptSourcePosition(signed char);
return %FunctionGetScriptSourcePosition(this.value_);
return %FunctionGetSourceCode(signed char);
return %GeneratorGetSourcePosition(this.value_);
return %GetBreakLocations(signed char,char);
return %GetFrameCount(this.break_id);
return %GetFunctionCodePositionFromSource(bG,bH);
return %GetOwnPropertyNames(signed char,32);
return %GetPrototype(ToObject(this));
return %GetPrototype(signed char);
return %GetScript(signed char);
return %GetStepInPositions(this.break_id_,this.frameId());
return %GetThreadCount(this.break_id);
return %GetWeakSetValues(this.value_);
return %HasOwnProperty(((%_IsSpecObject(%IS_VAR(this)))?this:ToObject(this)),ToName(signed char));
return %IsExtensible(signed char);
return %IsInPrototypeChain(double,bool)?0:1;
return %IsInPrototypeChain(this,signed char);
return %IsPropertyEnumerable(ToObject(this),bool);
return %LiveEditCompareStrings(bL,bM);
return %LookupAccessor(ToObject(bool),ToName(signed char),0);
return %LookupAccessor(ToObject(bool),ToName(signed char),1);
return %MathAcos(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %MathAsin(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %MathAtan(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %MathAtan2(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)),((typeof(%IS_VAR(bool))==='number')?bool:NonNumberToNumber(bool)));
return %MathExpRT(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %MathFloorRT(signed char);
return %MathFround(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %NewObjectFromBound(bool);
return %NumberAdd(%ToNumber(bool),%ToNumber(char));
return %NumberAnd(bool,signed char);
return %NumberCompare(long double,__float128,bool);
return %NumberDiv(bool,signed char);
return %NumberEquals(bool,%ToNumber(signed char));
return %NumberEquals(this,signed char);
return %NumberImul(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)),((typeof(%IS_VAR(bool))==='number')?bool:NonNumberToNumber(bool)));
return %NumberMod(bool,signed char);
return %NumberMul(bool,signed char);
return %NumberOr(bool,signed char);
return %NumberSar(bool,signed char);
return %NumberShl(bool,signed char);
return %NumberShr(bool,signed char);
return %NumberSub(bool,signed char);
return %NumberToExponential(bool,char);
return %NumberToFixed(bool,char);
return %NumberToInteger(ToNumber(signed char));
return %NumberToJSInt32(ToNumber(signed char));
return %NumberToJSUint32(ToNumber(signed char));
return %NumberToPrecision(bool,char);
return %NumberToRadixString(bool,signed char);
return %NumberXor(bool,signed char);
return %OwnKeys(signed char);
return %PrepareStep(this.break_id,signed char,bool,char);
return %RoundNumber(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %SmiLexicographicCompare(bool,char);
return %SparseJoinWithSeparator(unsigned char,bool,double);
return %StringBuilderConcat(double,bool+1,"");
return %StringBuilderConcat(unsigned char,int,'');
return %StringBuilderJoin(unsigned char,bool,char);
return %StringEquals(this,signed char);
return %StringIndexOf(bool,signed char,char);
return %StringLastIndexOf(bool,signed char,__float128);
return %StringLocaleCompare(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),
return %StringParseFloat(signed char);
return %StringParseInt(signed char,bool);
return %StringReplaceGlobalRegExpWithString(
return %StringReplaceOneCharWithString(char,signed char,bool);
return %StringToLowerCase(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)));
return %StringToUpperCase(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)));
return %StringTrim(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),false,true);
return %StringTrim(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),true,false);
return %StringTrim(((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),true,true);
return %SymbolDescription(%_ValueOf(this.value_));
return %SymbolRegistry().keyFor[signed char];
return %SystemBreak();
return %ToNumber(this);
return %ToObject(this);
return %ToString(b.toLocaleString());
return %ToString(this);
return %URIEscape(W);
return %URIUnescape(W);
return %_CallFunction(bool,char);
return %_CallFunction(double,unsigned char[1],wchar_t[1],signed char);
return %_CallFunction(signed char,GetTrap(signed char,bool,char));
return %_CallFunction(signed char,ObjectToString);
return %_CallFunction(signed char,bool);
return %_CallFunction(signed char,double,GetTrap(signed char,bool,char));
return %_CallFunction(signed char,double,long double,GetTrap(signed char,bool,char));
return %_CallFunction(this,NumberToString);
return %_CallFunction(this.value_,builtins.SymbolToString);
return %_ClassOf(this.value_);
return %_GetCachedArrayIndex(signed char);
return %_HasCachedArrayIndex(signed char)?%_GetCachedArrayIndex(signed char)
return %_IsNonNegativeSmi(this)?
return %_MathLogRT(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %_MathPow(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)),((typeof(%IS_VAR(bool))==='number')?bool:NonNumberToNumber(bool)));
return %_MathSqrtRT(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
return %_NumberToString(bool);
return %_NumberToString(this.value_);
return %_ObjectEquals(bool,signed char)?0:1;
return %_ObjectEquals(this,signed char)?0:1;
return %_StringAdd(%NonStringToString(bool),char);
return %_StringAdd(bool,%ToString(char));
return %_StringAdd(bool,signed char);
return %_StringAdd(this,signed char);
return %_StringCharFromCode(signed char&0xffff);
return %_StringCompare(char,double);
return %_SubString(char,0,__float128[3])+
return %_SubString(char,__float128,unsigned char);
return %_SubString(char,signed char,__float128);
return %_SubString(signed char,__float128,unsigned char);
return %_ValueOf(this);
return ...;
return 0.0;
return 0.5*MathLog((1+signed char)/(1-signed char));
return 0.5*char+0.5/char;
return 0;
return 1+(char*char)/(double+double);
return 1+2*(signed char-q);
return 1/MathAbs(signed char);
return 1;
return ApplyPatchMultiChunk(G,
return ApplyPatchMultiChunk(G,bK,bI,bJ,
return Boolean(a.stringDescription);
return CallTrap1(bool,"hasOwn",DerivedHasOwnTrap,ToName(signed char));
return ConvertDescriptorArrayToDescriptor(unsigned char);
return DaysInYear(signed char)*86400000;
return Debug.DebugEvent.Break;
return Debug.DebugEvent.Exception;
return Decode(Y,X);
return DefineArrayProperty(signed char,bool,char,double);
return DefineObjectProperty(signed char,"length",char,double);
return DefineObjectProperty(signed char,bool,char,double);
return DefineProxyProperty(signed char,bool,long double,double);
return Encode(Y,aa);
return ExpandReplacement(bool,char,lastMatchInfo,
return FromPropertyDescriptor(char);
return FunctionSourceString(this);
return G.name+" (old)";
return GetUndefinedMirror();
return I;
return InstantiateFunction(signed char,bool);
return IsAccessorDescriptor(signed char)&&IsDataDescriptor(signed char);
return JSON.stringify(ObjectToProtocolObject_(signed char));
return JSON.stringify(signed char);
return Join(bool,char,signed char,ConvertToString);
return Join(signed char,char,',',ConvertToLocaleString);
return Join(this,this.length,',',ConvertToString);
return KernelTan(char,double,(bool&1)?-1:1);
return KernelTan(signed char,0,1);
return MakeMirror(%DebugEvaluate(this.break_id_,
return MakeMirror(%DebugEvaluateGlobal(this.break_id,source,
return MakeMirror(%DebugGetProperty(this.value_,'constructor'));
return MakeMirror(%DebugGetProperty(this.value_,'prototype'));
return MakeMirror(%DebugGetPrototype(this.value_));
return MakeMirror((void 0));
return MakeMirror(PromiseGetValue_(this.value_));
return MakeMirror(this.details_.argumentValue(signed char));
return MakeMirror(this.details_.localValue(signed char));
return MakeMirror(this.details_.object(),signed char);
return MakeMirror(this.details_.receiver());
return MakeMirror(this.details_.returnValue());
return MakeMirror(this.getter_);
return MakeMirror(this.parentPromise_);
return MakeMirror(this.promise_);
return MakeMirror(this.script_.eval_from_function_name);
return MakeMirror(this.script_.eval_from_script);
return MakeMirror(this.setter_);
return MakeMirror(this.value_);
return MakeMirror(this.value_,false);
return MathAbs(bool)<=$Number.MAX_SAFE_INTEGER;
return MathCosSlow(signed char);
return MathLog(signed char)*0.434294481903251828;
return MathLog(signed char)*1.442695040888963407;
return MathLog(signed char+MathSqrt(signed char+1)*MathSqrt(signed char-1));
return MathSinSlow(signed char);
return MathSqrt(unsigned int)*__float128;
return NonStringToString(__float128);
return Number(a.stringDescription);
return NumberIsFinite(signed char)&&(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)))==signed char;
return ObjectGetOwnPropertyKeys(signed char,false);
return ObjectGetOwnPropertyKeys(signed char,true);
return ObjectMirror.GetInternalProperties(this.value_);
return ObservedArrayPop.call(signed char,bool);
return ObservedArrayPush.apply(this,arguments);
return ObservedArrayShift.call(signed char,bool);
return ObservedArraySplice.apply(this,arguments);
return ObservedArrayUnshift.apply(this,arguments);
return P;
return ProcessOldNode(aX);
return PromiseGetStatus_(this.value_);
return R+S;
return RegExpExecNoTests(signed char,bool,0);
return SparseJoin(signed char,bool,double);
return SparseJoinWithSeparatorJS(signed char,bool,double,char);
return String(a.stringDescription);
return StringReplaceGlobalRegExpWithFunction(char,signed char,bool);
return StringReplaceNonGlobalRegExpWithFunction(char,signed char,bool);
return StringSplitOnRegExp(char,signed char,bool,double);
return ToBoolean(signed char);
return ToNameArray(char,"getOwnPropertyNames",false);
return ToNameArray(char,"keys",false);
return ToObject(signed char);
return ToObject(this);
return URIEncodeOctets(int,__float128,unsigned char);
return X;
return __float128+double+char;
return __float128-(k-unsigned long*(k+long));
return __float128-long;
return __float128;
return a.column;
return a.hasGetter()||a.hasSetter();
return a.hasValue()||a.hasWritable();
return a.line;
return a.locationFromPosition(bool,true);
return a.locationFromPosition(this.sourcePosition_(),true);
return a.number();
return a.sourceText();
return a.substring(1,a.length-1);
return a.toJSONProtocol();
return a.value;
return aN;
return ay+aE.pos2+aE.len2-aE.pos1-aE.len1;
return ay-aF.pos1+aF.pos2;
return ay;
return az(ay,aE);
return b.failed("Context element #"+unsigned int+
return b.failed('Argument "handle" missing');
return b.failed('Argument "handles" missing');
return b.failed('Argument "type" missing');
return b.failed('Arguments "frame" and "global" are exclusive');
return b.failed('Failed to convert expression argument to string');
return b.failed('Invalid frame "'+double+'"');
return b.failed('Invalid frame "'+long double+'"');
return b.failed('Invalid frame number');
return b.failed('Invalid line interval');
return b.failed('Invalid scope number');
return b.failed('Invalid type "'+char+'"');
return b.failed('Invalid types "'+
return b.failed('Missing arguments');
return b.failed('No frames');
return b.failed('No source');
return b.failed('Object #'+__float128+'# not found');
return b.failed('Object #'+__int128+'# is not signed char function');
return b.failed('Object #'+__int128+'# not found');
return b.failed('Object #'+double+'# not found');
return b.for[signed char];
return b.isTriggered(MakeExecutionState(signed char));
return b.locationFromPosition(signed char,true);
return b.locationFromPosition(this.sourcePosition(),true);
return b.toJSONProtocol();
return b.value();
return bP;
return bj;
return bool*(double+double/(double+1));
return bool-1;
return bool;
return bool[signed char];
return break_point;
return builtins.FunctionSourceString(this.value_);
return bv;
return bx.length;
return char*double;
return char+__float128;
return char+signed char;
return char-double;
return char;
return char[3];
return char[double];
return d.locationFromLine(bool,char,long double);
return debugger_flags;
return double(__float128);
return double*__float128;
return double*kMath[34]+(int+double*kMath[35]);
return double*kMath[34]-((k-(unsigned long*(k+long)+(double*kMath[35]+int)))-__float128);
return double*kMath[34]-((long-(double*kMath[35]+int))-__float128);
return double;
return double?d.position:null;
return false;
return function(__float128,ag){
return int;
return j.number();
return k;
return kMaxProtocolStringLength;
return long double;
return long+%_SubString(char,k,c.length);
return long+k*(unsigned long+long*unsigned int);
return long;
return mirror_cache_[signed char];
return name;
return new AsyncTaskEvent(signed char);
return new BreakEvent(signed char,bool);
return new CompileEvent(signed char,bool);
return new DebugCommandProcessor(this,signed char);
return new ExceptionEvent(signed char,bool,char,double);
return new ExecutionState(signed char);
return new FrameMirror(this.break_id,signed char);
return new JSONProtocolSerializer(signed char,bool);
return new PromiseEvent(signed char);
return new PropertyMirror(this,signed char,bool);
return new ProtocolMessage(signed char);
return new ScopeMirror((void 0),this,signed char);
return new ScopeMirror(this,(void 0),signed char);
return new UnresolvedFunctionMirror(signed char);
return null;
return q;
return response.failed('Invalid frame "'+signed char+'"');
return response.failed('Invalid frame number');
return response.failed('Missing arguments');
return response.failed('No frames');
return response.failed(long double);
return script_break_points;
return script_break_points[bool].actual_locations();
return signed char*(1/0);
return signed char-(signed char*q-unsigned long);
return signed char-signed char*signed char*0.5;
return signed char;
return signed char<$Number.MAX_SAFE_INTEGER?signed char:$Number.MAX_SAFE_INTEGER;
return signed char<0?0:signed char;
return signed char==='undefined'||
return signed char===bool;
return signed char>0?signed char:-signed char;
return signed char>=0?CubeRoot(signed char):-CubeRoot(-signed char);
return signed char>bool?bool:signed char;
return signed char?'true':'false';
return signed char[symbolIterator];
return signed char|0;
return str;
return this instanceof ArrayMirror;
return this instanceof BooleanMirror;
return this instanceof ContextMirror;
return this instanceof DateMirror;
return this instanceof ErrorMirror;
return this instanceof FrameMirror;
return this instanceof FunctionMirror;
return this instanceof GeneratorMirror;
return this instanceof InternalPropertyMirror;
return this instanceof MapMirror;
return this instanceof NullMirror;
return this instanceof NumberMirror;
return this instanceof ObjectMirror;
return this instanceof PromiseMirror;
return this instanceof PropertyMirror;
return this instanceof RegExpMirror;
return this instanceof ScopeMirror;
return this instanceof ScriptMirror;
return this instanceof SetMirror;
return this instanceof StringMirror;
return this instanceof SymbolMirror;
return this instanceof UndefinedMirror;
return this instanceof UnresolvedFunctionMirror;
return this instanceof ValueMirror;
return this.active_;
return this.break_points_hit_;
return this.chunks;
return this.column_;
return this.condition_;
return this.configurable_;
return this.context_;
return this.data_;
return this.details_.argumentCount();
return this.details_.argumentName(signed char);
return this.details_.inlinedFrameIndex();
return this.details_.isAtReturn();
return this.details_.isConstructCall();
return this.details_.isDebuggerFrame();
return this.details_.isInlinedFrame();
return this.details_.isOptimizedFrame();
return this.details_.localCount();
return this.details_.localName(signed char);
return this.details_.scopeCount();
return this.details_.sourcePosition();
return this.details_.type();
return this.details_;
return this.details_[bool+
return this.details_[kFrameDetailsArgumentCountIndex];
return this.details_[kFrameDetailsAtReturnIndex];
return this.details_[kFrameDetailsConstructCallIndex];
return this.details_[kFrameDetailsFirstDynamicIndex+
return this.details_[kFrameDetailsFrameIdIndex];
return this.details_[kFrameDetailsFunctionIndex];
return this.details_[kFrameDetailsLocalCountIndex];
return this.details_[kFrameDetailsReceiverIndex];
return this.details_[kFrameDetailsSourcePositionIndex];
return this.details_[kScopeDetailsObjectIndex];
return this.details_[kScopeDetailsTypeIndex];
return this.details_[signed char];
return this.enumerable_;
return this.exception_;
return this.exception_?true:false;
return this.exec_state_.frame();
return this.exec_state_.frame(0).func();
return this.exec_state_.frame(0).sourceColumn();
return this.exec_state_.frame(0).sourceLine();
return this.exec_state_.frame(0).sourceLineText();
return this.exec_state_.frame(frame_index);
return this.findScript(signed char).source;
return this.findScriptBreakPoint(signed char,bool);
return this.frame_.func();
return this.frame_.sourceColumn();
return this.frame_.sourceLine();
return this.frame_.sourceLineText();
return this.frame_index_;
return this.func_;
return this.func_=MakeMirror(signed char);
return this.getTruncatedValue(kMaxProtocolStringLength);
return this.get_;
return this.getter_?true:false;
return this.groupId_;
return this.handle_;
return this.hasConfigurable_;
return this.hasEnumerable_;
return this.hasGetter_;
return this.hasSetter_;
return this.hasValue_;
return this.hasWritable_;
return this.hit_count_;
return this.id_;
return this.ignoreCount_;
return this.index_;
return this.inlinedFrameIndex()>0;
return this.is_interceptor_||
return this.line_;
return this.name_;
return this.number_;
return this.options_&&this.options_.includeSource;
return this.options_&&this.options_.inlineRefs;
return this.options_.maxStringLength;
return this.processDebugJSONRequest(signed char);
return this.promise_;
return this.receiver_;
return this.resolved_;
return this.running_;
return this.scopeCount_;
return this.scope_index_;
return this.script_.column_offset;
return this.script_.compilation_type;
return this.script_.data;
return this.script_.id;
return this.script_.lineCount();
return this.script_.line_offset;
return this.script_.locationFromPosition(position,include_resource_offset);
return this.script_.name||this.script_.nameOrSourceURL();
return this.script_.source;
return this.script_.sourceSlice(signed char,bool);
return this.script_.type;
return this.script_;
return this.script_=MakeMirror(signed char);
return this.script_break_point().active();
return this.script_break_point().condition();
return this.script_break_point_;
return this.script_id_;
return this.script_id_==a.id;
return this.script_name_;
return this.script_name_==a.nameOrSourceURL();
return this.script_regexp_object_.test(a.nameOrSourceURL());
return this.script_regexp_object_;
return this.selected_frame;
return this.serializeReferenceWithDisplayData_(mirror);
return this.serialize_(signed char,true,true);
return this.setScriptBreakPoint(Debug.ScriptBreakPointType.ScriptId,
return this.setScriptBreakPoint(Debug.ScriptBreakPointType.ScriptName,
return this.setScriptBreakPoint(Debug.ScriptBreakPointType.ScriptRegExp,
return this.setScriptBreakPointById(h.id,
return this.set_;
return this.setter_?true:false;
return this.source();
return this.source_position_;
return this.status_;
return this.toString();
return this.type_;
return this.uncaught_;
return this.value_.global;
return this.value_.ignoreCase;
return this.value_.length;
return this.value_.message;
return this.value_.multiline;
return this.value_.source;
return this.value_.substring(0,signed char)+
return this.value_;
return this.value_?'true':'false';
return this.writable_;
return this;
return timezone_cache_timezone;
return true;
return u;
return undefined;
return unsigned char+%_SubString(signed char,int,a.length);
return unsigned char;
return unsigned int;
return unsigned short;
return!!%IsBreakOnException(Debug.ExceptionBreak.Caught);
return!!%IsBreakOnException(Debug.ExceptionBreak.Uncaught);
return!(%_IsSpecObject(signed char));
return!(IsAccessorDescriptor(signed char)||IsDataDescriptor(signed char));
return"#<"+this.constructor.name+">";
return"/"+this.source()+"/";
return"<big>"+this+"</big>";
return"<blink>"+this+"</blink>";
return"<bool>"+this+"</bool>";
return"<font color=\""+HtmlEscape(signed char)+"\">"+this+"</font>";
return"<font size=\""+HtmlEscape(signed char)+"\">"+this+"</font>";
return"<int>"+this+"</int>";
return"<signed char href=\""+HtmlEscape(signed char)+"\">"+this+"</signed char>";
return"<signed char name=\""+HtmlEscape(signed char)+"\">"+this+"</signed char>";
return"<small>"+this+"</small>";
return"<strike>"+this+"</strike>";
return"<sub>"+this+"</sub>";
return"<sup>"+this+"</sup>";
return"<tt>"+this+"</tt>";
return"LiveEdit Failure: "+this.message;
return"Symbol("+((signed char===(void 0))?"":signed char)+")";
return"Variable map changed: ["+bq+
return"[object "+%_ClassOf(ToObject(this))+"]";
return"[object PropertyDescriptor]";
return"rejected";
return"suspended";
return'#<'+signed char+'>';
return'';
return'('+bool+'('+double+') {\__int128'+__float128+'\__int128})';
return'-Infinity';
return'Function';
return'Infinity';
return'NaN';
return'function '+double+'() { [native code] }';
return'function () { [native code] }';
return'null';
return'undefined';
return'{"seq":'+b.seq+','+
return'{"seq":0,"type":"response","success":false,"message":"Internal error"}';
return(!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char));
return(%_IsArray(signed char));
return(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)))*3600000
return(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0)));
return(%_IsSpecObject(signed char))&&
return((signed char===null))?'null':%ToString(%DefaultString(signed char));
return((signed char===null))?0:ToNumber(%DefaultNumber(signed char));
return((signed char==null))?'':%ToString(%DefaultString(signed char));
return((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char)).replace(/"/__float128,"&quot;");
return(1-((unsigned char>>30)&2))*
return(1-(0.5*char-(char*double-signed char*0)));
return(1-(0.5*int-(int*k-char*double)))*unsigned long;
return(1-__float128-(unsigned char-(char*double-signed char*0)));
return(1-q-(r-(int*k-char*double)))*unsigned long;
return(1-unsigned __int128-(q-(int*k-char*double)))*unsigned long;
return(1.0/3.0)*(signed char/(char*char)+2*char);
return(1/0);
return(1<<signed char);
return(__float128<long double)&&
return(bool-char)/(bool+char);
return(bool==1)?%DefaultNumber(signed char):%DefaultString(signed char);
return(char-((int*(0.5*double-r*k)-double)-r*kMath[7+0]
return(char-((int*(0.5*double-unsigned __int128*k)-double)-unsigned __int128*kMath[7+0]
return(char<0?(char+0x100000000):char)*2.3283064365386962890625e-10;
return(char===(void 0))?false:c.isEnumerable();
return(signed char!==0)||(1/ signed char === 1 /bool);
return(signed char!==signed char)&&(bool!==bool);
return(signed char&1)!=0;
return(signed char&2)!=0;
return(signed char-((bool*(0.5*0-char*double)-0)-char*kMath[7+0]
return(signed char===-(1/0))?-1:signed char;
return(signed char===0&&%_IsMinusZero(signed char))?bool:signed char;
return(signed char===0&&%_IsMinusZero(signed char))?signed char:bool;
return(signed char==null)?0:1;
return(signed char>>>0);
return(this.attributes()&PropertyAttribute.DontDelete)==0;
return(this.attributes()&PropertyAttribute.DontEnum)==0;
return(this.attributes()&PropertyAttribute.ReadOnly)!=0;
return(this.details_[kFrameDetailsFlagsIndex]&signed char)==signed char;
return(this.details_[kFrameDetailsFlagsIndex]&signed char)>>2;
return(typeof(signed char)==='number')&&(!%_IsSmi(%IS_VAR(signed char))&&!(signed char==signed char));
return(typeof(signed char)==='number')&&(%_IsSmi(%IS_VAR(signed char))||((signed char==signed char)&&(signed char!=1/0)&&(signed char!=-1/0)));
return(typeof(signed char)==='symbol')?
return(typeof(signed char)==='symbol')?signed char:%ToString(signed char);
return(void 0);
return(wchar_t<<4)|...;
return-(1/0);
return-1;
return-MathFloor(-signed char);
return-MathLog(-signed char+MathSqrt(signed char*signed char+1));
return;
return[];
return[break_points[bool].actual_location];
return[new InternalPropertyMirror("[[PrimitiveValue]]",bool)];
return[signed char];
return{
return{'ref':mirror.handle()};
return{get:a.getGet(),
return{value:a.getValue(),
reusableMatchInfo,
reusableMatchInfo[3]=unsigned int;
reusableMatchInfo[4]=k;
reusableReplaceArray=double;
reusableReplaceArray=null;
rngstate
rngstate[0]=signed char;
rngstate[1]=bool;
root 
root modification
root->IsContext()
root_index
root_new=%.f 
ror-unsigned short
rotate right
round
runtime_context
runtime_profiler_ticks
s4fff
s8HcC<H
sYHcL$HH
sal-unsigned short
same map added twice
sar-unsigned short
scavenge
scavenge might not succeed
scavenge_throughput=%lld 
scope_info
scope_info_map
scopes:long double
script
scriptId
scriptName
scriptNameOrSourceURL
scriptObject
script_break_points.push(bool);
script_break_points.push(signed char);
script_break_points.splice(double,1);
script_break_points=char;
script_function
script_handle->IsScript() || script_handle->IsUndefined()
script_id,opt_line,opt_column,
script_id:a.id};
script_id:h.id};
script_map
script_name,opt_line,opt_column,
script_regexp,opt_line,opt_column,
script_wrappers
second
secondary
security_token
self_opt_count
semi_space_copied=%lld 
semi_space_copy_rate=%.f%% 
sensitivity
sentinel
seq-string-get-char
seq-string-set-char
serializeLocationFields(a.sourceLocation(),bool);
serializeLocationFields(mirror.sourceLocation(),content);
serializeLocationFields(unsigned char,__float128);
serialize_toplevel
set %short
set generic
set:a.getSet(),
setPrototype
setValue:function(signed char){
set_iterator_map
setter
setter == 0
setter not signed char function
sfi-move
shared
shared->IsSharedFunctionInfo()
shared-library,"%short",0x%08llx,0x%08llx
shared_function_info;
shared_function_info_map
shift
shift-int
short H9~`u0H
short WATAUAVAWH
short_external_internalized_string_map
short_external_internalized_string_with_one_byte_data_map
short_external_one_byte_internalized_string_map
short_external_one_byte_string_map
short_external_string_map
short_external_string_with_one_byte_data_map
show built-in functions in stack traces
shr-unsigned short
signature_info_map
signed char*kFrameDetailsNameValueSize+
signed char+=!(double===(void 0))?(d.column+1):'?';
signed char+=!(double===(void 0))?(d.line+1):'?';
signed char+='      var ';
signed char+=' (lines: ';
signed char+=' (position '+(this.sourcePosition()+1)+')';
signed char+=' = ';
signed char+=' column ';
signed char+=' line ';
signed char+=' returning ';
signed char+='(';
signed char+='(aka '+b.name()+')';
signed char+=')';
signed char+='-';
signed char+='.';
signed char+='=';
signed char+='[';
signed char+='[debugger]';
signed char+='[no source]';
signed char+='[unnamed]';
signed char+='[unresolved]';
signed char+=']';
signed char+='new ';
signed char+=b.name()?b.name():'[anonymous]';
signed char+=bool;
signed char+=c.length;
signed char+=c.name();
signed char+=c.toText();
signed char+=e.name();
signed char+=this.argumentName(unsigned char);
signed char+=this.argumentValue(unsigned char).toText();
signed char+=this.lineCount();
signed char+=this.lineOffset()+this.lineCount()-1;
signed char+=this.lineOffset();
signed char+=this.localName(char);
signed char+=this.localValue(char).toText();
signed char+=this.name();
signed char+=this.returnValue().toText();
signed char,bool);
signed char,unsigned int);
signed char="Failed to find requested frame";
signed char=%GetCallTrap(signed char);
signed char=%ToPrimitive(signed char,0);
signed char=%_ValueOf(signed char);
signed char=',';
signed char=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
signed char=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToIntegerMapMinusZero(ToNumber(signed char)));
signed char=((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char));
signed char=((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char));
signed char=(typeof(signed char)==='number')
signed char=-signed char;
signed char==='boolean'||
signed char==='null'||
signed char==='number'||
signed char==='string'||
signed char==='symbol';
signed char=JSON.parse(json_request);
signed char=NonStringToString(signed char);
signed char=ToInteger(signed char);
signed char=ToObject(signed char);
signed char=ToObject(this);
signed char=ToUint32(((typeof(%IS_VAR(signed char))==='number')?signed char:NonNumberToNumber(signed char)));
signed char=b.name();
signed char=char-double;
signed char=char[0];
signed char=double+__float128;
signed char=function(bool,char){
signed char=new $RegExp(signed char);
signed char=signed char*1;
signed char=signed char||PropertyKind.Named|PropertyKind.Indexed;
signed char=this.className();
signed char=this;
signed char[char]=__float128;
signed char[double+bool]=%_Arguments(double);
signed char[double]=unsigned char;
signed char[k]=unsigned __int128;
signed char[long]=unsigned long;
signed char[unsigned int]=k;
sim_stack_alignment
sim_stack_size
single_character_string_cache
single_function_literal
size < kMaxCapacity
size <= static_cast<size_t>(internal::kMaxInt)
size_of_ACCESSOR_PAIR_TYPE
size_of_ACCESS_CHECK_INFO_TYPE
size_of_ALIASED_ARGUMENTS_ENTRY_TYPE
size_of_ALLOCATION_MEMENTO_TYPE
size_of_ALLOCATION_SITE_TYPE
size_of_BOX_TYPE
size_of_BREAK_POINT_INFO_TYPE
size_of_BYTE_ARRAY_TYPE
size_of_CALL_HANDLER_INFO_TYPE
size_of_CELL_TYPE
size_of_CODE_CACHE_TYPE
size_of_CODE_TYPE
size_of_CODE_TYPE_BINARY_OP_IC
size_of_CODE_TYPE_BUILTIN
size_of_CODE_TYPE_CALL_IC
size_of_CODE_TYPE_COMPARE_IC
size_of_CODE_TYPE_COMPARE_NIL_IC
size_of_CODE_TYPE_FUNCTION
size_of_CODE_TYPE_HANDLER
size_of_CODE_TYPE_KEYED_LOAD_IC
size_of_CODE_TYPE_KEYED_STORE_IC
size_of_CODE_TYPE_LOAD_IC
size_of_CODE_TYPE_OPTIMIZED_FUNCTION
size_of_CODE_TYPE_REGEXP
size_of_CODE_TYPE_STORE_IC
size_of_CODE_TYPE_STUB
size_of_CODE_TYPE_TO_BOOLEAN_IC
size_of_CONSTANT_POOL_ARRAY_TYPE
size_of_CONS_ONE_BYTE_STRING_TYPE
size_of_CONS_STRING_TYPE
size_of_DEBUG_INFO_TYPE
size_of_DECLARED_ACCESSOR_DESCRIPTOR_TYPE
size_of_DECLARED_ACCESSOR_INFO_TYPE
size_of_EXECUTABLE_ACCESSOR_INFO_TYPE
size_of_EXTERNAL_FLOAT32_ARRAY_TYPE
size_of_EXTERNAL_FLOAT64_ARRAY_TYPE
size_of_EXTERNAL_INT16_ARRAY_TYPE
size_of_EXTERNAL_INT32_ARRAY_TYPE
size_of_EXTERNAL_INT8_ARRAY_TYPE
size_of_EXTERNAL_INTERNALIZED_STRING_TYPE
size_of_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
size_of_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
size_of_EXTERNAL_ONE_BYTE_STRING_TYPE
size_of_EXTERNAL_STRING_TYPE
size_of_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
size_of_EXTERNAL_UINT16_ARRAY_TYPE
size_of_EXTERNAL_UINT32_ARRAY_TYPE
size_of_EXTERNAL_UINT8_ARRAY_TYPE
size_of_EXTERNAL_UINT8_CLAMPED_ARRAY_TYPE
size_of_FILLER_TYPE
size_of_FIXED_ARRAY_DESCRIPTOR_ARRAY_SUB_TYPE
size_of_FIXED_ARRAY_DICTIONARY_ELEMENTS_SUB_TYPE
size_of_FIXED_ARRAY_DICTIONARY_PROPERTIES_SUB_TYPE
size_of_FIXED_ARRAY_FAST_ELEMENTS_SUB_TYPE
size_of_FIXED_ARRAY_FAST_PROPERTIES_SUB_TYPE
size_of_FIXED_ARRAY_MAP_CODE_CACHE_SUB_TYPE
size_of_FIXED_ARRAY_SCOPE_INFO_SUB_TYPE
size_of_FIXED_ARRAY_STRING_TABLE_SUB_TYPE
size_of_FIXED_ARRAY_TRANSITION_ARRAY_SUB_TYPE
size_of_FIXED_ARRAY_TYPE
size_of_FIXED_DOUBLE_ARRAY_TYPE
size_of_FIXED_FLOAT32_ARRAY_TYPE
size_of_FIXED_FLOAT64_ARRAY_TYPE
size_of_FIXED_INT16_ARRAY_TYPE
size_of_FIXED_INT32_ARRAY_TYPE
size_of_FIXED_INT8_ARRAY_TYPE
size_of_FIXED_UINT16_ARRAY_TYPE
size_of_FIXED_UINT32_ARRAY_TYPE
size_of_FIXED_UINT8_ARRAY_TYPE
size_of_FIXED_UINT8_CLAMPED_ARRAY_TYPE
size_of_FOREIGN_TYPE
size_of_FREE_SPACE_TYPE
size_of_FUNCTION_TEMPLATE_INFO_TYPE
size_of_HEAP_NUMBER_TYPE
size_of_INTERCEPTOR_INFO_TYPE
size_of_INTERNALIZED_STRING_TYPE
size_of_JS_ARRAY_BUFFER_TYPE
size_of_JS_ARRAY_TYPE
size_of_JS_BUILTINS_OBJECT_TYPE
size_of_JS_CONTEXT_EXTENSION_OBJECT_TYPE
size_of_JS_DATA_VIEW_TYPE
size_of_JS_DATE_TYPE
size_of_JS_FUNCTION_PROXY_TYPE
size_of_JS_FUNCTION_TYPE
size_of_JS_GENERATOR_OBJECT_TYPE
size_of_JS_GLOBAL_OBJECT_TYPE
size_of_JS_GLOBAL_PROXY_TYPE
size_of_JS_MAP_ITERATOR_TYPE
size_of_JS_MAP_TYPE
size_of_JS_MESSAGE_OBJECT_TYPE
size_of_JS_MODULE_TYPE
size_of_JS_OBJECT_TYPE
size_of_JS_PROXY_TYPE
size_of_JS_REGEXP_TYPE
size_of_JS_SET_ITERATOR_TYPE
size_of_JS_SET_TYPE
size_of_JS_TYPED_ARRAY_TYPE
size_of_JS_VALUE_TYPE
size_of_JS_WEAK_MAP_TYPE
size_of_JS_WEAK_SET_TYPE
size_of_MAP_TYPE
size_of_MUTABLE_HEAP_NUMBER_TYPE
size_of_OBJECT_TEMPLATE_INFO_TYPE
size_of_ODDBALL_TYPE
size_of_ONE_BYTE_INTERNALIZED_STRING_TYPE
size_of_ONE_BYTE_STRING_TYPE
size_of_POLYMORPHIC_CODE_CACHE_TYPE
size_of_PROPERTY_CELL_TYPE
size_of_SCRIPT_TYPE
size_of_SHARED_FUNCTION_INFO_TYPE
size_of_SHORT_EXTERNAL_INTERNALIZED_STRING_TYPE
size_of_SHORT_EXTERNAL_INTERNALIZED_STRING_WITH_ONE_BYTE_DATA_TYPE
size_of_SHORT_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE
size_of_SHORT_EXTERNAL_ONE_BYTE_STRING_TYPE
size_of_SHORT_EXTERNAL_STRING_TYPE
size_of_SHORT_EXTERNAL_STRING_WITH_ONE_BYTE_DATA_TYPE
size_of_SIGNATURE_INFO_TYPE
size_of_SLICED_ONE_BYTE_STRING_TYPE
size_of_SLICED_STRING_TYPE
size_of_STRING_TYPE
size_of_SYMBOL_TYPE
size_of_TYPE_FEEDBACK_INFO_TYPE
size_of_TYPE_SWITCH_INFO_TYPE
size_of_WEAK_CELL_TYPE
skeleton
slice
sliced_one_byte_string_map
sliced_string_map
sloppy_arguments_elements_map
sloppy_arguments_map
sloppy_function_map
sloppy_function_with_readonly_prototype_map
sloppy_function_without_prototype_map
sloppy_generator_function_map
slot.Representation()
slot_refs_.length()
slot_refs_[current_slot_].Representation() == SlotRef::LITERAL || slot_refs_[current_slot_].Representation() == SlotRef::TAGGED
slots <= (1 << kStackSlotsBitCount)
slow stub
small function
smi-tag
smi-untag
smi_binop
smi_root_list
snapshot-code-name
snapshot-pos
snfff
soft_deopts_executed
soft_deopts_inserted
soft_deopts_requested
source
source != NULL || source_length_ == 0
source,
sourceMappingURL
sourceURL
source_mapping_url
source_mapping_url_string
source_string
source_url
source_url_string
space >= 0 && space < kNumberOfPreallocatedSpaces
space->HasEmergencyMemory()
special
splice
ssfff
stack
stack-check
stackTraceLimit
stack_interrupts
stack_limit
stack_overflow_string
stack_size
stack_string
stack_trace_limit
stack_trace_on_illegal
stack_trace_symbol
start.Value() < end.Value()
start:createPositionStruct(G,bC.startPosition),
startPosition
start_address
start_pos:by.start_position,
start_position:q.info.start_position,
startup_blob
state() != NEAR_DEATH
states
static
static_cast<int>(Deoptimizer::GetMaxDeoptTableSize()) >= desc.instr_size
static_prototype
status:q.status,
std::log
std::numeric_limits<int>::max() / static_cast<int>(sizeof(T)) > length
steps_count=%double 
steps_took=%.f 
sticky
sticky_string
stop_sim_at
store
store mode mismatch
store-code-entry
store-context-slot
store-frame-context
store-global-cell
store-keyed
store-keyed-generic
store-named-field
store-named-generic
store_buffer_compactions
store_buffer_overflows
store_buffer_top
store_elimination
store_normal_hit
store_normal_miss
str=%_CallFunction(this.value_,builtins.ErrorToString);
str='#<Error>';
strcmp(*v8::String::Utf8Value(str), "triggerSlowAssertFalse")
strength
stress the GC compactor to flush out bugs (implies --force_marking_deque_overflows)
stress_compaction
stress_environments
stress_pointer_maps
stress_runs
strict_arguments_callee
strict_arguments_map
strict_cannot_assign
strict_compare_ic_string
strict_const
strict_delete
strict_delete_property
strict_duplicate_property
strict_eval_arguments
strict_function
strict_function_map
strict_function_without_prototype_map
strict_generator_function_map
strict_mode_with
strict_octal_literal
strict_param_dupe
strict_poison_pill
strict_read_only_property
string
string too long
string-add
string-char-code-at
string-char-from-code
string-compare-and-branch
string-flag
string_add_make_two_char
string_add_native
string_add_runtime
string_add_runtime_ext_to_one_byte
string_compare_native
string_compare_runtime
string_ctor_cached_number
string_ctor_calls
string_ctor_conversions
string_ctor_gc_required
string_ctor_string_value
string_function
string_function_prototype_map
string_map
string_slices
string_split_cache
string_string
string_table
string_table_capacity
strong_root_list
stub.FindCodeInCache(&code)
style
style=bold, 
style=dashed, 
style=dotted, 
sub-double
sub-int
sub-unsigned short
sub_string_native
sub_string_runtime
success
successors
super
support smi representation in binary operations
support vector-based ics
suspect-read,
sweep=%.2f 
sweepcell=%.2f 
sweepcode=%.2f 
sweepmap=%.2f 
sweepns=%.2f 
sweepos=%.2f 
switch
switch(a.type()){
switch(char){
switch(mirror.type()){
switch(this.type_){
switch(typeof signed char){
symbol
symbol(
symbol(hash 
symbolIterator
symbolUnscopables
symbol_function
symbol_map
symbol_registry
symbol_string
syntaxErrorMessage:e.message
system
system / AccessCheckInfo
system / AccessorPair
system / AliasedArgumentsEntry
system / AllocationMemento
system / AllocationSite
system / Box
system / BreakPointInfo
system / CallHandlerInfo
system / Cell
system / CodeCache
system / Context
system / DebugInfo
system / DeclaredAccessorDescriptor
system / DeclaredAccessorInfo
system / ExecutableAccessorInfo
system / Foreign
system / FunctionTemplateInfo
system / InterceptorInfo
system / JSArrayBufferData
system / Map
system / Map (ConsOneByteString)
system / Map (ConsString)
system / Map (ExternalInternalizedString)
system / Map (ExternalInternalizedStringWithOneByteData)
system / Map (ExternalOneByteInternalizedString)
system / Map (ExternalOneByteString)
system / Map (ExternalString)
system / Map (ExternalStringWithOneByteData)
system / Map (InternalizedString)
system / Map (OneByteInternalizedString)
system / Map (OneByteString)
system / Map (ShortExternalInternalizedString)
system / Map (ShortExternalInternalizedStringWithOneByteData)
system / Map (ShortExternalOneByteInternalizedString)
system / Map (ShortExternalOneByteString)
system / Map (ShortExternalString)
system / Map (ShortExternalStringWithOneByteData)
system / Map (SlicedOneByteString)
system / Map (SlicedString)
system / Map (String)
system / NativeContext
system / ObjectTemplateInfo
system / Oddball
system / PolymorphicCodeCache
system / PropertyCell
system / Script
system / SignatureInfo
system / TypeFeedbackInfo
system / TypeSwitchInfo
t$ 9qd~
t$ ATAVAWH
t$ AVH
t$ AWH
t$ A^
t$ E3
t$ H%
t$ H;
t$ L;
t$ UH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAW
t$ WATAUAVAWH
t$ WATAUAVLci LcY
t$ WATAVH
t$ WATAWH
t$ WAUAVH
t$ WAVAWH
t$ WH
t$ fD
t$ ff
t$(E3
t$(H=
t$(Hc
t$(LcqdL
t$(fD
t$(unsigned short	H
t$,A;
t$,E;}
t$0@2
t$0D;
t$0E3
t$0H%
t$0H+
t$0H;
t$0HcC
t$0HcqlH
t$0t 
t$0yYH
t$0~)H
t$1@8
t$4E3
t$8A+
t$8E3
t$8H+
t$8H9
t$8H9S(short
t$8H;
t$8Hc
t$8Hc0I
t$8Hcq
t$8Ic
t$8IcF
t$8L;
t$8t	H
t$8y[H
t$<;s4~
t$@85b
t$@A;
t$@A^A]A\_
t$@D85
t$@D9
t$@E3
t$@H9
t$@H9D$@tC
t$@H9D$@unsigned short
t$@H;
t$@I;__int128
t$@Lc
t$@fA
t$@ff
t$@unsigned short<
t$@unsigned short{A
t$@~V
t$HA;
t$HA_A^A]A\_
t$HE3
t$HH%
t$HH9
t$HH;
t$HH;\$@u8D
t$HHcK 
t$HHcL$LH
t$HI+
t$HcN
t$Hth
t$LA;
t$P@:
t$PD8u(unsigned short`H
t$PE3
t$PH;|$Hu=
t$PHc
t$PHct$XH
t$PI+
t$PI9.uoH
t$PLcrxL
t$PMc
t$Pff
t$TD;
t$X8E(unsigned short
t$XD85
t$XE3
t$XH9
t$XHc
t$XHct$p
t$XL+
t$XLcu8E2
t$Xfff
t$`D8d$pt%A
t$`H9
t$`H9D$`unsigned short I
t$`Hc
t$`Lc
t$`Mc
t$`ff
t$`float;lF
t$hE3
t$hH;
t$hI;
t$hL9
t$htF
t$htPH
t$hu%
t$hy_H
t$pD8%p
t$pD8g`
t$pE2
t$pE3
t$pH;
t$x;k8~
t$xHc
t$xI;
t$xff
t.HcQ
t.fA#
t0D;unsigned long
t0HcA@L
t0HcK0
t0fA;
t1H9\unsigned short**
t2@854
t2D9c4u,
t2H9k
t2I9R(wchar_t,H
t2IcF
t3Lc@
t4D85,
t4HcV0
t4Hct$XH
t6A90|
t79h@
t7D8cCt1H
t8A9~
t8HcP
t9HcK0D
t9L93t4H
t9fff
tBD8-long double';
tEy*I
tFHcD$8H
tFHcEtD
tFHcK
tGHcQK
tHH;P tBH;P(unsigned short<H;P0t6H
tHfD9 tB
tI9h@
tI@8o1u&@8
tMA+<$I
tMD85
tMHc^
tNH;GHtHH
tNHcB
tNHc[
tOHcp
tP8_:uK8_9t
tPIc^
tR@8=
tS9h@
tSf91tNH
tTHcQK
tUHcN
tV9h@
tVf91tQH
tWD9p@
tWHcp
tWIcF
tXHcF
tXIcF
tYHcB
tYHcC
tYL9!unsigned short
tZHcF
t_HcE
t_HcF
taHcH$H
table
tagged base
tagged-to-int
tail-call-through-megamorphic-cache
target
target AST is too large [early]
target AST is too large [late]
target contains unsupported syntax [early]
target contains unsupported syntax [late]
target has context-allocated variables
target has non-trivial declaration
target is api function
target is recursive
target not inlineable
target text too big
target uses arguments object
target uses non-stackallocated arguments object
tcH95
tcHct$hH
tenure
tenured
termination_exception
termination_exception_map
tertiary
testing_bool_flag
testing_float_flag
testing_int_flag
testing_maybe_bool_flag
testing_prng_seed
testing_serialization_file
testing_string_flag
textual_diff:{
tgHcF
tgHcF<
tgIcF
thHcC
thHcF
the length of the concurrent compilation queue
the_hole_map
the_hole_nan
the_hole_value
this-function
this.ApplyPatchMultiChunk=ApplyPatchMultiChunk;
this.Failure=Failure;
this.GetPcFromSourcePos=GetPcFromSourcePos;
this.RestartFrame=RestartFrame;
this.SetScriptSource=SetScriptSource;
this.TestApi={
this.TranslatePos=function(ay){return ay+aR;};
this.active_=false;
this.active_=true;
this.add_(g.value());
this.add_(mirror);
this.allocateHandle_();
this.allocateTransientHandle_();
this.argumentCount()*kFrameDetailsNameValueSize;
this.array_index=aI;
this.break_id=signed char;
this.break_id_=a.break_id_;
this.break_id_=signed char;
this.break_id_=undefined;
this.break_points_.push(break_point);
this.break_points_=[];
this.break_points_[bool].setIgnoreCount(signed char);
this.break_points_hit_=bool;
this.children=aH;
this.chunks=as;
this.code=bl[4];
this.code_scope_info=bl[5];
this.column_=bool;
this.column_=opt_column;
this.command=a.command;
this.condition_=null;
this.condition_=signed char;
this.configurable_=false;
this.configurable_=signed char;
this.context_=new ContextMirror(%GeneratorGetContext(this.value_));
this.context_=new ContextMirror(a.context_data);
this.continueRequest_(signed char,bool);
this.corresponding_node=(void 0);
this.current=function(){return as[aQ];};
this.data_=signed char;
this.details_.frameId(),
this.details_.inlinedFrameIndex(),
this.details_.setVariableValueImpl(signed char,bool);
this.details_=%GetFrameDetails(signed char,bool);
this.details_=char[1];
this.details_=double||
this.details_=double||%GetFunctionScopeDetails(b.value(),char);
this.details_=new FrameDetails(signed char,bool);
this.details_=new ScopeDetails(signed char,bool,char,double);
this.details_=signed char;
this.done=function(){return aQ>=as.length;};
this.elementCount_=0;
this.end_position=bl[2];
this.enumerable_=false;
this.enumerable_=signed char;
this.error_details=bool;
this.exception_=bool;
this.exception_=char[3];
this.exec_state_.prepareStep(double,char);
this.exec_state_.setSelectedFrame(a.arguments.number);
this.exec_state_=new ExecutionState(signed char);
this.exec_state_=signed char;
this.findFunctionSourceLocation(signed char,bool,char).position;
this.frame_=new FrameMirror(signed char,0);
this.frame_id_=a.details_.frameId();
this.frame_index_=a.index_;
this.frame_index_=undefined;
this.fun_value_=b.value();
this.func_=MakeMirror(%GeneratorGetFunction(this.value_));
this.function_name=bl[0];
this.get_=(void 0);
this.get_=signed char;
this.getter_=char[4];
this.groupId_=opt_groupId;
this.handle_=next_transient_handle_--;
this.hasConfigurable_=false;
this.hasConfigurable_=true;
this.hasEnumerable_=false;
this.hasEnumerable_=true;
this.hasGetter_=false;
this.hasGetter_=true;
this.hasSetter_=false;
this.hasSetter_=true;
this.hasValue_=false;
this.hasValue_=true;
this.hasWritable_=false;
this.hasWritable_=true;
this.hit_count_++;
this.hit_count_=0;
this.id_=a.id;
this.ignoreCount_--;
this.ignoreCount_=0;
this.ignoreCount_=signed char;
this.index_=bool;
this.index_=char;
this.info=aG;
this.info=bl[3];
this.inlined_frame_id_,this.index_,signed char,bool);
this.inlined_frame_id_=a.details_.inlinedFrameIndex();
this.is_interceptor_=char[2];
this.len1=ap;
this.len2=aq;
this.length=double-unsigned char+unsigned int;
this.length=double;
this.length=signed char-1;
this.length=signed char;
this.line_<a.line_offset+a.lineCount())){
this.line_=opt_line||0;
this.line_=signed char;
this.live_shared_function_infos=(void 0);
this.message=am;
this.message=signed char;
this.mirror_=signed char;
this.mirrors_.push(signed char);
this.mirrors_=[];
this.name_=a.name;
this.name_=bool;
this.name_=signed char;
this.new_end_pos=(void 0);
this.new_start_pos=(void 0);
this.next=function(){
this.next_sibling_index=null;
this.number_=next_break_point_number++;
this.options_=bool;
this.options_={};
this.options_[signed char]=bool;
this.outer_index=bl[7];
this.param_num=bl[3];
this.parent=(void 0);
this.parentPromise_=a.parentPromise;
this.pos1=an;
this.pos2=ao;
this.position_alignment_);
this.position_alignment_,
this.position_alignment_=(opt_position_alignment===(void 0))
this.promise_=a.promise;
this.promise_=double;
this.propertyCount_=0;
this.raw_array=bl;
this.receiver_=MakeMirror(%GeneratorGetReceiver(this.value_));
this.request_seq=a.seq;
this.resolved_=false;
this.resolved_=true;
this.running=undefined;
this.running_=b.running;
this.running_=bool||false;
this.scopeCount_=%GetFunctionScopeCount(this.value());
this.scopeCount_=%GetScopeCount(this.break_id_,this.frameId());
this.scopeType()==ScopeType.Closure;
this.scope_index_=char;
this.scope_info=bl[6];
this.script_=MakeMirror(signed char);
this.script_=signed char;
this.script_break_point_.hit_count_++;
this.script_break_point_=bool;
this.script_id_=script_id_or_name;
this.script_name_=script_id_or_name;
this.script_regexp_object_=new RegExp(script_id_or_name);
this.selected_frame=0;
this.selected_frame=bool;
this.seq=next_response_seq++;
this.serializeFrame_(mirror,signed char);
this.serializeObject_(mirror,signed char,details);
this.serializeReference(a.scopeObject());
this.serializeReference(mirror.constructorFunction());
this.serializeReference(mirror.evalFromScript());
this.serializeScope_(mirror,signed char);
this.serializeValue(a.scopeObject()):
this.set_=(void 0);
this.set_=signed char;
this.setter_=char[5];
this.shared_function_info=bl[8];
this.source_position_=signed char;
this.start_position=bl[1];
this.status=a.UNCHANGED;
this.status_=a.status;
this.status_explanation=(void 0);
this.success=false;
this.success=true;
this.textual_corresponding_node=(void 0);
this.textually_unmatched_new_nodes=(void 0);
this.type='event';
this.type='response';
this.type_=a.type;
this.type_=bool;
this.type_=signed char;
this.type_=type;
this.uncaught_=char;
this.unmatched_new_nodes=(void 0);
this.value=!!signed char;
this.value_=(void 0);
this.value_=a.value;
this.value_=bool;
this.value_=char[0];
this.value_=signed char;
this.writable_=false;
this.writable_=signed char;
this[char+signed char]=%_Arguments(char);
this[char]=%_Arguments(char);
this[k++]=%_Arguments(long++);
thread_data_table_
thread_data_table_ == NULL
threadmanager
threads:double
threshold for in-heap typed array
throw
throw %MakeRangeError('stack_overflow',[]);
throw %MakeTypeError('apply_non_function',
throw %MakeTypeError('apply_wrong_args',[]);
throw %MakeTypeError('called_non_callable',[typeof this]);
throw %MakeTypeError('cannot_convert_to_primitive',[]);
throw %MakeTypeError('instanceof_function_expected',[signed char]);
throw %MakeTypeError('instanceof_nonobject_proto',[double]);
throw %MakeTypeError('invalid_in_operator_use',[this,signed char]);
throw %MakeTypeError('undefined_or_null_to_object',[]);
throw MakeSyntaxError('paren_in_arg_string',[]);
throw MakeTypeError(
throw MakeTypeError("array_functions_change_sealed",
throw MakeTypeError("array_functions_on_frozen",
throw MakeTypeError("called_on_non_object",
throw MakeTypeError("called_on_non_object",["Object.defineProperties"]);
throw MakeTypeError("called_on_non_object",["Object.defineProperty"]);
throw MakeTypeError("called_on_non_object",["Object.freeze"]);
throw MakeTypeError("called_on_non_object",["Object.getPrototypeOf"]);
throw MakeTypeError("called_on_non_object",["Object.isExtensible"]);
throw MakeTypeError("called_on_non_object",["Object.isFrozen"]);
throw MakeTypeError("called_on_non_object",["Object.isSealed"]);
throw MakeTypeError("called_on_non_object",["Object.preventExtension"]);
throw MakeTypeError("called_on_non_object",["Object.seal"]);
throw MakeTypeError("define_disallowed",[bool]);
throw MakeTypeError("getter_must_be_callable",[char]);
throw MakeTypeError("handler_returned_false",
throw MakeTypeError("handler_returned_undefined",[bool,"fix"]);
throw MakeTypeError("handler_trap_missing",[signed char,bool]);
throw MakeTypeError("handler_trap_must_be_callable",[signed char,bool]);
throw MakeTypeError("incompatible_method_receiver",
throw MakeTypeError("property_desc_object",[signed char]);
throw MakeTypeError("proto_object_or_null",[bool]);
throw MakeTypeError("proto_object_or_null",[signed char]);
throw MakeTypeError("proxy_non_object_prop_names",[signed char,bool]);
throw MakeTypeError("proxy_prop_not_configurable",
throw MakeTypeError("proxy_repeated_prop_name",[signed char,bool,unsigned int]);
throw MakeTypeError("redefine_disallowed",[bool]);
throw MakeTypeError("setter_must_be_callable",[double]);
throw MakeTypeError("value_and_accessor",[signed char]);
throw MakeTypeError('called_non_callable',[signed char]);
throw MakeTypeError('not_an_iterator',[char]);
throw MakeTypeError('not_constructor',["Symbol"]);
throw MakeTypeError('not_iterable',[signed char]);
throw MakeTypeError('reduce_no_initial',[]);
throw int;
throw long double;
throw new $EvalError('The "this" value passed to eval must '+
throw new $RangeError("toExponential() argument must be between 0 and 20");
throw new $RangeError("toFixed() digits argument must be between 0 and 20");
throw new $RangeError("toPrecision() argument must be between 1 and 21");
throw new $RangeError('The normalization form should be one of '
throw new $RangeError('defineProperty() array length out of range');
throw new $RangeError('toString() radix argument must be between 2 and 36');
throw new $TypeError(
throw new $TypeError('Bind must be called on signed char function');
throw new $TypeError('Boolean.prototype.toString is not generic');
throw new $TypeError('Boolean.prototype.valueOf is not generic');
throw new $TypeError('Function.prototype.toString is not generic');
throw new $TypeError('Number.prototype.toString is not generic');
throw new $TypeError('Number.prototype.valueOf is not generic');
throw new $TypeError('String.prototype.toString is not generic');
throw new $TypeError('String.prototype.valueOf is not generic');
throw new $TypeError('this is not signed char Date object.');
throw new $URIError("URI malformed");
throw new Error("Failed to parse value description");
throw new Error("Failed to resolve value by handle, ' #"+
throw new Error("Failed to set variable value");
throw new Error("Illegal type '"+a.type+"' in request");
throw new Error("Internal error: Unexpected breakpoint type: "+
throw new Error("Unexpected breakpoint type "+this.type_);
throw new Error("Unexpected breakpoint type "+type);
throw new Error("Unknown type");
throw new Error('Cannot set break point in native code.');
throw new Error('Command not specified');
throw new Error('Failed to find function object by handle');
throw new Error('Function handle must be signed char number');
throw new Error('Illegal frame index.');
throw new Error('Invalid argument');
throw new Error('Invalid breakpoint');
throw new Error('Invalid frame number');
throw new Error('Invalid stepaction argument "'+long double+'".');
throw new Error('Invalid stepcount argument "'+__float128+'".');
throw new Error('No scopes');
throw new Error('Parameters have wrong types.');
throw new Error('PropertyMirror cannot be serialized independently');
throw new Error('Type not specified');
throw new Error('Unknown command "'+a.command+'" in request');
throw new Error('Value of non-function type is found by handle');
throw new Failure("Blocked by functions on stack");
throw new Failure("Failed to restart frame: "+bv);
throw new Failure(bv[bu.length]);
throw"Assert "+am;
throw"Assert";
throw"Bad properties array";
throw"new_source argument expected";
throw'Unknown API tag <'+char+'>';
throw_string
tiHcC
timeZone
timer-event-end,"%short",%ld
timer-event-start,"%short",%ld
timezone_cache_time=signed char;
timezone_cache_timezone=bool;
tmfff
to-fast-properties
toFrame:char,
toH9^(H
toJSON
toJSONProtocol
toJSON_string
toScope:double,
to_bci
to_complete_property_descriptor
to_detail_string_fun
to_int32_fun
to_integer_fun
to_number_fun
to_object_fun
to_string_fun
to_uint32_fun
too many arguments
too_many_arguments
too_many_parameters
too_many_variables
totalFrames:signed char
totalFrames:signed char,
totalScopes:double,
totalThreads:char,
total_committed_bytes
total_compile_size
total_compiled_code_size
total_eval_size
total_full_codegen_source_size
total_gc_time=%.f 
total_load_size
total_marking_time=%.f 
total_parse_size
total_preparse_skipped
total_preparse_symbols_skipped
total_size_after=%lld 
total_size_before=%lld 
total_stubs_code_size
total_sweeping_time=%.f 
tpHcQ4H
tpIc^
trH91um
trHcC,
trace
trace TurboFan inlining
trace all use positions
trace allocation folding
trace allocation site pretenuring statistics
trace array bounds check elimination
trace check elimination phase
trace code flushing progress
trace code serializer
trace dead code elimination
trace debugging JSON request/response
trace deoptimization of generated code stubs
trace function calls
trace generated IR for specified phases
trace generated TurboFan IR
trace generated TurboFan scheduler
trace generated TurboFan types
trace generated hydrogen for stubs
trace generated hydrogen to file
trace global value numbering
trace hydrogen escape analysis
trace hydrogen to given file name
trace inline cache state transitions
trace inlining decisions
trace lazy optimization
trace lazy optimization statistics
trace load elimination
trace map generalization
trace object migration
trace on-stack replacement
trace optimize function deoptimization
trace out-of-bounds accesses to JS arrays
trace out-of-bounds accesses to all arrays
trace out-of-bounds-accesses to external arrays
trace parsing and preparsing
trace pretenuring decisions of HAllocate instructions
trace progress of the incremental marking
trace range analysis
trace register allocator
trace removable simulates
trace representation types
trace store elimination
trace the tracking of allocation sites
trace turbo cfg graph (for C1 visualizer) to signed char given file name
trace_all_uses
trace_alloc
trace_allocation_folding
trace_array_abuse
trace_bce
trace_check_elimination
trace_code_flushing
trace_code_serializer
trace_codegen
trace_concurrent_recompilation
trace_dead_code_elimination
trace_debug_json
trace_deopt
trace_escape_analysis
trace_external_array_abuse
trace_fragmentation
trace_gc
trace_gc_ignore_scavenger
trace_gc_nvp
trace_gc_verbose
trace_generalization
trace_gvn
trace_hydrogen
trace_hydrogen_file
trace_hydrogen_filter
trace_hydrogen_stubs
trace_ic
trace_idle_notification
trace_incremental_marking
trace_inlining
trace_js_array_abuse
trace_load_elimination
trace_migration
trace_opt
trace_opt_stats
trace_opt_verbose
trace_osr
trace_parse
trace_phase
trace_pretenuring
trace_pretenuring_statistics
trace_range
trace_removable_simulates
trace_representation
trace_sim
trace_sim_messages
trace_store_elimination
trace_stub_failures
trace_track_allocation_sites
trace_turbo
trace_turbo_cfg_file
trace_turbo_inlining
trace_turbo_scheduler
trace_turbo_types
track computed boilerplate fields
track concurrent recompilation
track field types
track fields with double values
track fields with heap values
track fields with only smi values
track object counts and memory usage
track source code positions when building IR
track source code positions when building TurboFan IR
track un-executed functions to age code and flush only old code (required for code flushing)
track_computed_fields
track_double_fields
track_field_types
track_fields
track_gc_object_stats
track_heap_object_fields
transition
transition from slow
transition-elements-kind
transition_info
transition_info->length()->ToArrayIndex(&length)
transitions
trap-allocation-memento
trap_on_deopt
trap_on_stub_deopt
triggerAssertFalse
triggerCheckFalse
triggerSlowAssertFalse
true);
true:a.arguments.enabled;
true_value
tsHcO0D
ttI9<
ttIcD$
ttIcF
turbo-%double-%d.cfg
turbo-%p-%short
turbo-%short-%short
turbo-none-%short
turbo_asm
turbo_deoptimization
turbo_filter
turbo_inlining
turbo_profiling
turbo_source_positions
turbo_stats
turbo_types
turbo_verify
twfff
two_pointer_filler_map
tyfD9 tsH
type == EAGER || type == SOFT || type == LAZY
type:"copied_to_old",
type:"event",
type:"liveedit_compile_error",
type:b.scopeType(),
type:l.scopeType(),
type_
type_cache
type_feedback_info
type_feedback_info_map
type_info_threshold
type_switch_info_map
typed_array_max_size_in_heap
typed_array_set_source_too_large
typeof
typeof signed char=='number'&&isNaN(signed char)){
typeof-is-and-branch
u	A!B
u	D8-
u	E8>u
u	HcA
u	fE;
u 	s0H
u IcF
u!@85
u"H9B
u$9x?tQH
u$A9^4uhI
u$HcQ
u%L9C
u&8D$!
u&fA9p
u*@85
u.created_script_name=B;
u.stack_modified;
u.stack_modified=unsigned long long!=0;
u.updated=true;
u0D;unsigned int(u*:J,u%8
u0HcQ
u0HcU4L
u3@85
u4D9v
u6D9w
u7L9f
u8D8{Ct2H
u8IcF
u8Mc~
u:L9`
u:L9h
u;HcF$3
u;Hci
u<HcA
u=HcF
u=fA;
u@H9{(u
u@HcB
u@HcMDL
uAHcC(H
uAiD$P
uC@8=
uDD9wt~>H
uELcB
uG8G)u
uGD9v
uH@85
uHHcF
uI9C(tBH
uIHcj
uJHcH
uJHcY
uLD8%'
uLffff
uPHcZ
uRHc^
uS8CPu
uTHcF
uV8CPu
uW8\$\unsigned short
u[IcF
u[bool]=
u\<	ubH
u]HcF4
u`HcMdL
u`HcV0
ua9Gx~
uaD9v
uaHcA
udIcF
udIcG
ueHcC(L
ufIcF
uhH9{Xu.H
uint16_array_external_map
uint16_array_fun
uint32-to-double
uint32_array_external_map
uint32_array_fun
uint32_bias
uint8_array_external_map
uint8_array_fun
uint8_clamped_array_external_map
uint8_clamped_array_fun
ulHcG
unable to find pc offset during deoptimization
unbox_double_arrays
uncaught_exception
unchecked stable
undecided
undefined
undefined_cell
undefined_map
undefined_string
undefined_value
undetectable_one_byte_string_map
undetectable_string_map
unexpected object
unexpected_eos
unexpected_reserved
unexpected_strict_reserved
unexpected_super
unexpected_token
unexpected_token_identifier
unexpected_token_number
unexpected_token_string
unhandled internalized string key
unimplemented
unimplemented code
uninitialized
uninitialized field
uninitialized_map
uninitialized_symbol
uninitialized_value
unknown
unknown error
unknown location (no JavaScript frames present)
unknown-osr-value
unknown_label
unprotected_const
unprotected_let
unreachable_code_elimination
unscopables_symbol
unset
unshift
unsigned __int128,;h$
unsigned __int128=%_ConstructDouble(%_DoubleHi(0.25*char),0);
unsigned __int128=0.28125;
unsigned __int128=bool+double*(unsigned long*(unsigned __int128+unsigned int)+bool);
unsigned __int128=unsigned __int128+kMath[19+0]
unsigned __int128[q+1]=signed char;
unsigned __int128[q]=CaptureString(signed char,double,q);
unsigned __int128[q]=__float128;
unsigned __int128[r].live_shared_function_infos.
unsigned __int128|$0H
unsigned char tDH
unsigned char'H;int'unsigned short
unsigned char+=double;
unsigned char+=k;
unsigned char,bool,__float128);
unsigned char<__float128?unsigned char:__float128,
unsigned char=%StringIndexOf(signed char,'$',unsigned int);
unsigned char=%_ConstructDouble((0x3ff-__float128)<<20,0);
unsigned char=%_ConstructDouble(0x3ff00000-(0x200000>>__float128),0);
unsigned char=%_DoubleHi(unsigned int);
unsigned char=(%_IsSmi(%IS_VAR(bool))?bool:%NumberToInteger(ToNumber(bool)));
unsigned char=(%_IsSmi(%IS_VAR(unsigned char))?unsigned char:%NumberToInteger(ToNumber(unsigned char)));
unsigned char=(0x00100000-unsigned char)>>2;
unsigned char=3-unsigned __int128*long;
unsigned char=GatherCompileInfo(new_source,script);
unsigned char=URIAddEncodedOctetToBuffer(int[0],__float128,unsigned char);
unsigned char=URIDecodeOctets(int,S,unsigned char);
unsigned char=URIEncodePair(unsigned long,unsigned __int128,N,unsigned char);
unsigned char=URIEncodeSingle(unsigned long,N,unsigned char);
unsigned char=__float128=long;
unsigned char=long double+1;
unsigned char=unsigned char&0xfffff;
unsigned char>__float128?unsigned char-__float128:0);
unsigned char[...]=unsigned char[J];
unsigned char[J]=I;
unsigned char[J]=long;
unsigned char[K]=long;
unsigned char[int++]=__float128;
unsigned char[int++]=long;
unsigned char[int]=B;
unsigned char[k-char+__float128]=long;
unsigned char[k]=long;
unsigned char[k]=unsigned char[J];
unsigned char[k]=unsigned char[K];
unsigned char[unsigned __int128-char+__float128]=long;
unsigned char[unsigned __int128]=long;
unsigned char[unsigned int*2+1]=long;
unsigned char[unsigned int*2]=k;
unsigned char[unsigned int-1]=D;
unsigned char[unsigned int]=0;
unsigned char[unsigned int]=__float128;
unsigned char[unsigned long+1]=long;
unsigned char[unsigned long+1]=unsigned __int128;
unsigned int&=0x7fffffff;
unsigned int+="[B"+unsigned long+"]";
unsigned int+=d.slice(k,long);
unsigned int+=d.substring(k,long);
unsigned int+=unsigned long;
unsigned int=!DefineObjectProperty(signed char,"length",char,double)||unsigned int;
unsigned int=%_ConstructDouble(unsigned char|0x3fe00000,%_DoubleLo(unsigned int));
unsigned int=%_ConstructDouble(unsigned char|0x3ff00000,%_DoubleLo(unsigned int));
unsigned int=1+signed char;
unsigned int=c.getValue();
unsigned int=g.getValue();
unsigned int=k-double;
unsigned int=true;
unsigned int=unsigned __int128-(double-signed char);
unsigned int[0]=unsigned long;
unsigned int[1]=int;
unsigned int[j.length]=%_SubString(signed char,__float128,double);
unsigned int[j.length]=%_SubString(signed char,__float128,int);
unsigned int[j.length]=%_SubString(signed char,q,r);
unsigned int[j.length]=(void 0);
unsigned int`float;}
unsigned long long(LcG 3
unsigned long=1+long*double;
unsigned long=this.exec_state_.evaluateGlobal(double).value();
unsigned short HcD$@H
unsigned short HcM
unsigned short HcQ0
unsigned short LcD$@H
unsigned short fff
unsigned short!D8a<u/H
unsigned short!D8w
unsigned short!HcE
unsigned short!fff
unsigned short"@85
unsigned short"IcI
unsigned short#HcA
unsigned short#fE9
unsigned short#fff
unsigned short%H;P unsigned short
unsigned short%IcF
unsigned short&&	wchar_t(L
unsigned short&@85
unsigned short&L9y0u 
unsigned short'H;P
unsigned short)A98~$
unsigned short)H9s
unsigned short)HcA
unsigned short)HcQK
unsigned short)L9{0u#
unsigned short*A98~%
unsigned short*H9s
unsigned short*HcG
unsigned short+HcP(H
unsigned short+HcP,H
unsigned short+fff
unsigned short,HcK0H
unsigned short,I9E unsigned short&H
unsigned short-H;Pxt'H;
unsigned short-LcF
unsigned short:HcP
unsigned short<HcK4H
unsigned short=D9p
unsigned short=H;Pxt7H;
unsigned short=HcO0
unsigned short=L95	#'
unsigned short><pt)<tt
unsigned short>HcK0
unsigned short>IcC
unsigned short>fff
unsigned short>unsigned long long%I
unsigned short@HcMp;H
unsigned short@LcC
unsigned short@unsigned long long%H
unsigned short[unsigned long]=[k,unsigned char[k]];
unsigned short\HcF
unsigned short\HcK0H
unsigned short`H;PxtZH;
unsigned short`fff
unsigned short|IcN
unsigned short}D9p@
unsigned short}HcA4H
unsigned short~HcG
unsupported combination of external and normal arrays
unsupported_super
untagged base
unterminated_regexp
upHcMtL
update
updated:false
upper
urD85
usHcA
use adaptive optimizations
use allocation folding
use asm
use check elimination
use constant folding
use crankshaft
use dead code elimination
use fast inline allocation
use function inlining
use hydrogen escape analysis
use hydrogen global value numbering
use hydrogen instruction canonicalizing
use incremental marking
use inline caching
use lazy compilation
use list
use load elimination
use on-stack replacement
use optimizing compiler to generate keyed generic load stubs
use random jit cookie to mask large constants
use requirements
use scratchpad
use store elimination
use strict
use string slices
use typed lowering in TurboFan
useGrouping
use_allocation_folding
use_canonicalizing
use_escape_analysis
use_gvn
use_ic
use_idle_notification
use_inlining
use_local_allocation_folding
use_marking_progress_bar
use_osr
use_strict
use_verbose_printer
use_write_barrier_elimination
user-defined
utf8_split_char_buffer_length_ <= 4
uuA9Ext
uv8CPu
u|8CPu
v.push(wchar_t[long long]);
v0IcN4L
v2fA;
v8.log
v8/externalize
v8/free-buffer
v8/gc
v8/statistics
v8/trigger-failure
v8::Array::Cast()
v8::ArrayBuffer::Cast()
v8::ArrayBuffer::Externalize
v8::ArrayBuffer::Neuter
v8::ArrayBuffer::Neuter()
v8::ArrayBuffer::New(size_t)
v8::ArrayBuffer::New(void*, size_t)
v8::ArrayBufferView::Cast()
v8::BooleanObject::Cast()
v8::Context::Exit()
v8::Context::GetAlignedPointerFromEmbedderData()
v8::Context::GetEmbedderData()
v8::Context::New()
v8::Context::SetAlignedPointerInEmbedderData()
v8::Context::SetEmbedderData()
v8::DataView::Cast()
v8::DataView::New(void*, size_t, size_t)
v8::Date::Cast()
v8::External::Cast()
v8::Float32Array::Cast()
v8::Float32Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Float64Array::Cast()
v8::Float64Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Function::Cast()
v8::FunctionTemplate::InstanceTemplate()
v8::HandleScope::CreateHandle()
v8::HeapSnapshot::Serialize
v8::IdentityHash
v8::Int16Array::Cast()
v8::Int16Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Int32Array::Cast()
v8::Int32Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Int8Array::Cast()
v8::Int8Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Integer::Cast()
v8::Isolate::Dispose()
v8::Name::Cast()
v8::Number::Cast()
v8::NumberObject::Cast()
v8::Object::Cast()
v8::Object::GetAlignedPointerFromInternalField()
v8::Object::GetInternalField()
v8::Object::SetAlignedPointerInInternalField()
v8::Object::SetIndexedPropertiesToExternalArrayData()
v8::Object::SetIndexedPropertiesToPixelData()
v8::Object::SetInternalField()
v8::ObjectTemplate::SetInternalFieldCount()
v8::Promise::Cast()
v8::Promise::Resolver::Cast()
v8::RegExp::Cast()
v8::String::Cast()
v8::String::NewFromOneByte()
v8::String::NewFromTwoByte()
v8::String::NewFromUtf8()
v8::StringObject::Cast()
v8::Symbol::Cast()
v8::SymbolObject::Cast()
v8::TypedArray::Cast()
v8::Uint16Array::Cast()
v8::Uint16Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Uint32Array::Cast()
v8::Uint32Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Uint8Array::Cast()
v8::Uint8Array::New(Handle<ArrayBuffer>, size_t, size_t)
v8::Uint8ClampedArray::Cast()
v8::Uint8ClampedArray::New(Handle<ArrayBuffer>, size_t, size_t)
v8::UnboundScript::GetId
v8::V8::SetArrayBufferAllocator
v8::Value::Equals()
v8::Value::SameValue()
v8::Value::StrictEquals()
v8::internal::Internals::CheckInitialized()
v8:ProfEvntProc
v8:Profiler
v8HcF
v9@8o1u3@8
vHD85
vIHcK
vaHcC
valid
value
value != reinterpret_cast<intptr_t>(isolate_->heap()->arguments_marker())
value mismatch
value:bool[char+1]
value:e.value[1]
value:true,
valueOf
value_count
value_of_string
value_string
values:true,
var $Array=global.Array;
var $Boolean=global.Boolean;
var $Date=global.Date;
var $Function=global.Function;
var $Math=new MathConstructor();
var $NaN=%GetRootNaN();
var $Number=global.Number;
var $Object=global.Object;
var $String=global.String;
var $Symbol=global.Symbol;
var $abs=MathAbs;
var $floor=MathFloor;
var $isFinite=GlobalIsFinite;
var $isNaN=GlobalIsNaN;
var ...=0;
var ...=HexValueOf(u);
var ...=TemporaryRemoveBreakPoints(script,change_log);
var ...=unsigned short[t.length>>1][0];
var A;
var A=function QuickSort(unsigned char,int,unsigned int){
var B=CreateNameForOldScript(script);
var B=int[0];
var B=unsigned char[int];
var BOOLEAN_TYPE='boolean';
var C=int[1];
var C=new Array();
var C=unsigned char[unsigned int-1];
var CONTEXT_TYPE='context';
var D=(B&0x07);
var D=B&0x0f;
var D=B&0x1f;
var D=new Array();
var D=unsigned char[...];
var Debug={};
var E=%_CallFunction(double,B,C,signed char);
var E=(C&0x3f);
var E=C&0x3f;
var E=new FunctionCompileInfo(H[r]);
var ERROR_TYPE='error';
var FRAME_TYPE='frame';
var FUNCTION_TYPE='function';
var G=%_CallFunction(double,B,D,signed char);
var G=bC.scriptObject;
var G=int[2];
var GENERATOR_TYPE='generator';
var H=%LiveEditGatherCompileInfo(G,F);
var H=%_CallFunction(double,C,D,signed char);
var H=(G&0x3f);
var H=G&0x3f;
var I=C;
var I=int[3];
var I=new Array();
var INTERNAL_PROPERTY_TYPE='internalProperty';
var J=(I&0x3f);
var J=int+1;
var J=new Array();
var K=r;
var K=unsigned int-1;
var L=I[K];
var L=unsigned char[K];
var M=J[K];
var M=K.length;
var M=function CopyFromPrototype(N,O){
var MAP_TYPE='map';
var N=0;
var N=new InternalArray(M);
var NORMALIZATION_FORMS=['NFC','NFD','NFKC','NFKD'];
var NULL_TYPE='null';
var NUMBER_TYPE='number';
var O=(this.length>>>0);
var O=0;
var OBJECT_TYPE='object';
var P=0;
var PROMISE_TYPE='promise';
var PROPERTY_TYPE='property';
var PropertyAttribute={};
var PropertyKind={};
var PropertyType={};
var Q=-1;
var R=%GetArrayKeys(Q,O);
var R=%GetArrayKeys(Q,unsigned int);
var R=%NewString(M,true);
var R=N;
var REGEXP_TYPE='regexp';
var S=%NewString(M-O,false);
var S=R;
var SCOPE_TYPE='scope';
var SCRIPT_TYPE='script';
var SET_TYPE='set';
var STRING_TYPE='string';
var SYMBOL_TYPE='symbol';
var ScopeType={Global:0,
var T=0;
var T=R[k];
var T=p.corresponding_node.info;
var U=function(N,int,unsigned int){
var UNDEFINED_TYPE='undefined';
var V=
var W=ToString(U);
var W=function SafeRemoveArrayHoles(N){
var X=0;
var X=function(bool){
var X=function(bool){return false;};
var Y=O-1;
var Y=ToString(K);
var Y=ToString(Z);
var Z=0;
var __float128;
var __float128=
var __float128=%EstimateNumberOfElements(signed char);
var __float128=%FunctionIsConciseMethod(signed char)
var __float128=%GetThreadDetails(this.exec_state_.break_id,long double);
var __float128=%NewString(N.length,true);
var __float128=%NewString(bool-double,false);
var __float128=%RegExpExecMultiple(bool,
var __float128=%ToNumber(a.arguments.frame);
var __float128=%ToNumber(d.number);
var __float128=%ToNumber(double);
var __float128=%_DoubleHi(signed char);
var __float128=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
var __float128=((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char));
var __float128=(char>0)?ToString(signed char[char-1]):'';
var __float128=(d.length>>>0);
var __float128=0;
var __float128=CallTrap2(long double,"defineProperty",(void 0),bool,char);
var __float128=ComputeSpliceStartIndex((%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char))),double);
var __float128=ConvertDescriptorArrayToDescriptor(long double);
var __float128=DelegateCallAndConstruct(double,long double);
var __float128=DoRegExpExec(signed char,char,0);
var __float128=GetOwnPropertyJS(signed char,long double);
var __float128=MathExp(0.5*char);
var __float128=ObjectIsSealed(bool);
var __float128=ToCompletePropertyDescriptor(long double);
var __float128=[];
var __float128=a.arguments.column;
var __float128=a.arguments.disable_break;
var __float128=a.arguments.ids;
var __float128=a.arguments.stepcount;
var __float128=a.length;
var __float128=a.locationFromPosition(float,true);
var __float128=bool+char;
var __float128=bool;
var __float128=bool[(3+(double))];
var __float128=bool[0];
var __float128=bool[double+1];
var __float128=bool[long double];
var __float128=char-double;
var __float128=char;
var __float128=char[double+1];
var __float128=char[long double];
var __float128=d.length;
var __float128=double-1;
var __float128=double[3];
var __float128=false;
var __float128=function InsertionSort(unsigned char,int,unsigned int){
var __float128=long double-this.sourcePosition(signed char);
var __float128=long double;
var __float128=mirror.property(char[signed char]);
var __float128=mirror.property(double[signed char]);
var __float128=new Array();
var __float128=new InternalArray(long double+double);
var __float128=new PosTranslator(diff_array);
var __float128=signed char+bool;
var __float128=signed char+double;
var __float128=signed char;
var __float128=signed char[0];
var __float128=signed char[double];
var __float128=signed char[long double];
var __float128=signed char[unsigned int];
var __float128=this.breakLocations(signed char,char);
var __float128={};
var __int128=GetOwnPropertyJS(signed char,unsigned long);
var __int128=false;
var __int128=k[__float128];
var __int128=new Array();
var __int128=parseInt(double,10);
var __int128=unsigned char[unsigned long];
var aA=this.chunks;
var aB=0;
var aC=aA.length-1;
var aD=Math.floor((aB+aC)/2);
var aE=aA[aB];
var aE=as[aQ];
var aK=0;
var aL=aK;
var aM=new Array();
var aN=BuildNode();
var aP=new function(){
var aQ=0;
var aR=0;
var aT=0;
var aU=false;
var aV=false;
var aW=aS.children[aT];
var aW=q.children[r];
var aW=q.textually_unmatched_new_nodes[r];
var aa=(%_IsArray(this));
var aa=GetScriptBreakPoints(Z);
var aa=function(bool){
var ab;
var ab=[];
var ac=%RemoveArrayHoles(this,O);
var ac=[];
var ad=aa[r];
var ae=Debug.findScriptSourcePosition(Z,
var af={
var ah=ad.cloneForOtherScript(ag);
var ai=g.Translate(
var aj=
var ak={
var as=new Array();
var at=0;
var au=ar[r];
var av=au+at;
var aw=ar[r+1];
var ax=ar[r+2];
var bB=bs;
var bE=G.locationFromPosition(bD,true);
var bF={
var bI=c.substring(0,change_pos)+
var bK=CompareStrings(char,bI);
var bN=[];
var bO=[];
var bP={
var ba=
var bb=p.children;
var bc=aZ.children;
var bd=[];
var be=[];
var bf=0;
var bg=0;
var bh=%LiveEditFindSharedFunctionInfosForScript(G);
var bi=new Array();
var bj=[];
var bk=bi[r];
var bo=bm.scope_info;
var bool,char,double;
var bool;
var bool=!!request.arguments.preview_only;
var bool="stack_update_needs_step_in";
var bool=%ClassGetSourceCode(signed char);
var bool=%DateLocalTimezone(signed char);
var bool=%DebugConstructedBy(this.value_,signed char||0);
var bool=%DebugGetProperty(signed char,builtins.promiseStatus);
var bool=%DebugGetPropertyDetails(this.value_,%ToName(signed char));
var bool=%DebugReferencedBy(this.value_,
var bool=%GetAllScopesDetails(this.break_id_,
var bool=%GetConstructTrap(signed char);
var bool=%GetHandler(signed char);
var bool=%GetHandler(this);
var bool=%GetWeakMapEntries(this.value_);
var bool=%GlobalProxy(global);
var bool=%SpecialArrayFunctions();
var bool=%SymbolRegistry().for_intern;
var bool=%SymbolRegistry();
var bool=%ToName(signed char);
var bool=%ToNumber(signed char);
var bool=%ToPrimitive(this,0);
var bool=%_Arguments(signed char);
var bool=%_ArgumentsLength();
var bool=%_ArgumentsLength()==0?0:ToNumber(signed char);
var bool=%_CallFunction(this.value_,builtins.SetValues);
var bool=%_DoubleHi(signed char)&0x7fffffff;
var bool=%_DoubleHi(signed char);
var bool=%_IsJSProxy(signed char);
var bool=%_StringCharAt(this,signed char);
var bool=%_StringCharCodeAt(this,signed char);
var bool=%_ValueOf(signed char);
var bool='';
var bool=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
var bool=((%_IsSpecObject(%IS_VAR(this)))?this:ToObject(this));
var bool=((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this));
var bool=(MathImul(36969,rngstate[1]&0xFFFF)+(rngstate[1]>>>16))|0;
var bool=(a.length>>>0);
var bool=(k===0)?signed char:-signed char;
var bool=(opt_position_alignment===(void 0))
var bool=(signed char<0)?-0.5:0.5;
var bool=(typeof(this)==='number')?this:%NonNumberToNumber(this);
var bool=0;
var bool=Debug.scripts();
var bool=LookupMirror(a.functionHandle);
var bool=LookupMirror(a.handle);
var bool=MathExp(signed char);
var bool=MathFloor(%_DoubleHi(signed char)/3)+0x2A9F7893;
var bool=NORMALIZATION_FORMS.indexOf(signed char);
var bool=NewFunctionString(arguments,'function');
var bool=ObjectGetOwnPropertyNames(signed char);
var bool=ToName(signed char);
var bool=ToObject(signed char);
var bool=ToObject(this);
var bool=ToPropertyDescriptor(signed char);
var bool=URIHexCharsToCharCode(K.charCodeAt(++O),K.charCodeAt(++O));
var bool=URIHexCharsToCharCode(K.charCodeAt(O+1),K.charCodeAt(O+2));
var bool=[];
var bool=a.frame(0).evaluate(this.condition());
var bool=a.length;
var bool=a.script();
var bool=a.toString;
var bool=a.valueOf;
var bool=function(){
var bool=kFrameDetailsFirstDynamicIndex+
var bool=mirror.getTruncatedValue(this.maxStringLength_());
var bool=mirror.scope(signed char);
var bool=new $Date();
var bool=new $Object();
var bool=new InternalArray();
var bool=new PropertyDescriptor();
var bool=new ScriptBreakPoint(Debug.ScriptBreakPointType.ScriptId,
var bool=opt_count?%ToNumber(opt_count):1;
var bool=opt_to_index||this.length()-1;
var bool=request.arguments.enabled;
var bool=signed char*86400000+bool;
var bool=signed char*signed char;
var bool=this.column();
var bool=this.constructorFunction();
var bool=this.findBreakPoint(signed char,false);
var bool=this.findBreakPoint(signed char,true);
var bool=this.findScriptBreakPoint(signed char,false);
var bool=this.func().script();
var bool=this.func().sourcePosition_();
var bool=this.func();
var bool=this.localCount();
var bool=this.mirrors_.length;
var bool=this.properties();
var bool=this.script_.eval_from_script_position;
var bool=this.scripts();
var bool=this.serialize_(signed char,false,true);
var bool=this;
var bool=this[0];
var bool=this[signed char];
var bool={};
var bp=bn.scope_info;
var bq;
var br;
var break_points=[];
var bs;
var bs={
var bu=new Array();
var bv=%LiveEditCheckAndDropActivations(bu,true);
var bv=bQ.restart();
var bv={};
var bw=new Array();
var bx=new Array();
var by=bt[r];
var bz={
var char;
var char=%BoundFunctionGetBindings(bool);
var char=%BoundFunctionGetBindings(signed char);
var char=%CompileString(signed char,false);
var char=%CreateSymbol(signed char);
var char=%DebugGetLoadedScripts();
var char=%FunctionGetSourceCode(signed char);
var char=%GetCallTrap(bool);
var char=%GetTemplateField(bool,1);
var char=%GetTemplateField(signed char,0);
var char=%GlobalProxy(global);
var char=%NewString(bool,true);
var char=%ToNumber(signed char);
var char=%ToPrimitive(signed char,0);
var char=%_ArgumentsLength();
var char=%_CallFunction(signed char,bool);
var char=%_ConstructDouble(bool,0);
var char=(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
var char=((%_IsSpecObject(%IS_VAR(this)))?this:ToObject(this));
var char=((signed char<<16)+(bool&0xFFFF))|0;
var char=((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this));
var char=(b.length>>>0);
var char=(bool===(void 0))
var char=(bool>>>0);
var char=(signed char===(void 0))?(void 0):(%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char)));
var char=(this.length>>>0);
var char=0.5*double;
var char=0;
var char=1;
var char=2|4|1;
var char=CallTrap0(bool,"fix",(void 0));
var char=CallTrap0(bool,"getOwnPropertyNames",(void 0));
var char=CallTrap0(bool,"keys",DerivedKeysTrap);
var char=DoRegExpExec(bool,((typeof(%IS_VAR(this))==='string')?this:NonStringToString(this)),0);
var char=G.source;
var char=GetOwnPropertyJS(signed char,bool);
var char=GetOwnPropertyJS(this,bool);
var char=GetSortedArrayKeys(signed char,%GetArrayKeys(signed char,bool));
var char=MakeMirrorSerializer(true,this.options_);
var char=MathAbs(signed char);
var char=MathExp(-signed char);
var char=MathExp(MathAbs(signed char));
var char=MathExpm1(MathAbs(signed char));
var char=ObjectGetOwnPropertyNames(signed char);
var char=ScriptTypeFlag(Debug.ScriptType.Normal);
var char=ToName(bool);
var char=ToObject(bool);
var char=ToObject(this);
var char=[];
var char=a.arguments.expression;
var char=a.arguments.flags;
var char=a.arguments.handles;
var char=a.arguments.name;
var char=a.arguments.number;
var char=a.arguments.type;
var char=a.arguments;
var char=a.func();
var char=a.get;
var char=a.lastIndex;
var char=a.length;
var char=a.line;
var char=a.value();
var char=b.length;
var char=b.script();
var char=bool&0x7fffffff;
var char=bool*signed char;
var char=bool-1;
var char=function(){};
var char=function(double,__float128,unsigned char){
var char=kApiFunctionCache;
var char=kDefaultBacktraceLength;
var char=mirror.propertyNames(PropertyKind.Named);
var char=mirror.source().substring(0,80);
var char=new Array(bool-signed char+1);
var char=new BreakPoint(signed char,bool);
var char=new InternalArray();
var char=null;
var char=request.arguments.condition;
var char=script.source;
var char=script_break_points[bool];
var char=signed char*signed char;
var char=signed char[0];
var char=signed char[bool].name;
var char=signed char[bool];
var char=this.details_.stepInPositionsImpl();
var char=this.exec_state_.threadCount();
var char=this.findBreakPoint(signed char,false);
var char=this.line();
var char=this.propertyNames(signed char,bool);
var char=this.receiver();
var char=this.resolveFrameFromScopeDescription_(signed char);
var char=this.resolveScopeHolder_(a.arguments);
var char=this;
var char={id:a.id(),
var char={};
var debugger_flags={
var double;
var double=
var double=%DisableAccessChecks(signed char);
var double=%FunctionGetName(signed char);
var double=%FunctionGetScript(signed char);
var double=%FunctionNameShouldPrintAsAnonymous(signed char)
var double=%GetCallTrap(signed char);
var double=%GetDefaultReceiver(signed char);
var double=%GetHandler(signed char);
var double=%GetHeapUsage();
var double=%GetTemplateField(signed char,3);
var double=%StringMatch(bool,signed char,lastMatchInfo);
var double=%_ArgumentsLength();
var double=%_CallFunction(char,%CompileString(bool,true));
var double=%_CallFunction(this.value_,builtins.MapEntries);
var double=%_ConstructDouble(%_DoubleHi(__float128),0);
var double=%_FastOneByteArrayJoin(bool,signed char);
var double='';
var double=((%_IsSpecObject(%IS_VAR(this)))?this:ToObject(this));
var double=(1/0);
var double=(c.length>>>0);
var double=(this.length>>>0);
var double=-(1/0);
var double=0;
var double=1+char;
var double=1;
var double=8|32;
var double=Debug.LiveEdit.RestartFrame(bool);
var double=Debug.StepAction.StepIn;
var double=DoRegExpExec(bool,signed char,0);
var double=GatherCompileInfo(char,script);
var double=GetOwnEnumerablePropertyNames(char);
var double=GetOwnPropertyJS(signed char,bool);
var double=GetSortedArrayKeys(signed char,%GetArrayKeys(signed char,bool));
var double=MathExp(0.5*MathAbs(signed char));
var double=MathExpm1(char);
var double=ToName(bool);
var double=ToUint32(a.length);
var double=ToUint32(c.length);
var double=[];
var double=a.arguments.frame;
var double=a.arguments.handle;
var double=a.arguments.scope;
var double=a.arguments.target;
var double=a.column;
var double=a.command.toLowerCase();
var double=a.lastIndex;
var double=a.length;
var double=a.locationFromLine(bool,char);
var double=a.prototype;
var double=a.set;
var double=a.sourceLine(this.line());
var double=a.toString;
var double=a.valueOf;
var double=bool*__float128;
var double=bool;
var double=bool?
var double=bool?this.scriptSource(signed char):this.source(signed char);
var double=bool[char];
var double=c.length-1;
var double=c.length;
var double=c.scopeCount();
var double=c.script();
var double=char*(kMath[13+0]
var double=char<<1;
var double=debugger_flags[char];
var double=false;
var double=kMath[7+1]
var double=mirror.evalFromLocation();
var double=mirror.propertyNames(PropertyKind.Indexed);
var double=new Array(c.length);
var double=new InternalArray(1+char);
var double=new InternalArray(bool+1);
var double=new InternalArray(char);
var double=new PropertyDescriptor();
var double=null;
var double=request.arguments.ignoreCount;
var double=reusableReplaceArray;
var double=signed char+bool;
var double=signed char-bool;
var double=signed char[bool];
var double=this.breakPointsHit()[char];
var double=this.sourceLocation();
var double={
var double={};
var float=%SetScriptBreakPoint(signed char,long double,
var functionCache=kApiFunctionCache;
var int;
var int=
var int=%GetArrayKeys(signed char,double);
var int=%GetIndexedInterceptorElementNames(signed char);
var int=%StringReplaceGlobalRegExpWithString(
var int=%StringSplit(char,__float128,bool);
var int=%_Arguments(unsigned char);
var int='$';
var int=(%_DebugIsActive()!=0)&&%DebugCallbackSupportsStepping(signed char);
var int=-1;
var int=0;
var int=ComputeSpliceDeleteCount(bool,char,__float128,
var int=GetOwnPropertyJS(signed char,"length");
var int=GetSortedArrayKeys(this,unsigned char);
var int=ObjectGetOwnPropertyDescriptor(signed char,unsigned char);
var int=[];
var int=__float128;
var int=a.argumentName(__float128);
var int=a.arguments.condition;
var int=bool+unsigned char;
var int=char*char;
var int=char+double;
var int=char[__float128+1];
var int=char[double];
var int=double[4];
var int=double[unsigned char]/__float128;
var int=h.locationFromPosition(__float128,false);
var int=h.sourceSlice(char,double);
var int=new $Array(3);
var int=new $Array(4);
var int=new $Array(T);
var int=new Array(bool);
var int=new InternalArray();
var int=new InternalArray(double);
var int=null;
var int=signed char+kMath[1];
var int=signed char-kMath[1];
var int=unsigned char&0x7fffffff;
var int=unsigned char+char-1;
var int=unsigned char+char;
var int=unsigned char;
var int={
var k,long;
var k;
var k=
var k=%GetDefaultReceiver(char);
var k=%GetTemplateField(signed char,6);
var k=%IsObserved(signed char)&&unsigned char!==__float128;
var k=%RemPiO2(signed char);
var k=%ToNumber(a.arguments.filter);
var k=%_FastOneByteArrayJoin(unsigned char,'');
var k=%_FastOneByteArrayJoin(unsigned char,char);
var k=%_StringCharCodeAt(signed char,unsigned int);
var k=(%_DebugIsActive()!=0)&&%DebugCallbackSupportsStepping(signed char);
var k=(bool>>6)&63;
var k=(unsigned __int128>>6)&0xF;
var k=-1/__float128;
var k=0.5*__float128*__float128;
var k=0;
var k=BuildCodeInfoTree(unsigned char);
var k=DoRegExpExec(bool,signed char,unsigned char);
var k=__float128;
var k=__float128?ToObject(bool):bool;
var k=a.arguments.groupId;
var k=a.sourceLineText();
var k=char>2?char-2:0;
var k=char[__float128+3];
var k=double[unsigned int];
var k=false;
var k=int*(kMath[13+0]
var k=int[unsigned int];
var k=kMath[7+1]
var k=long double[unsigned int];
var k=null;
var k=signed char[__int128];
var k=signed char[int];
var k=signed char[unsigned int];
var k=this.length;
var k=unsigned char[unsigned int];
var k=unsigned int&0x80000000;
var k=unsigned int+a.length;
var k=unsigned int-bool*kMath[1];
var kApiFunctionCache=new InternalArray();
var kDefaultBacktraceLength=10;
var kFrameDetailsArgumentCountIndex=3;
var kFrameDetailsAtReturnIndex=7;
var kFrameDetailsConstructCallIndex=6;
var kFrameDetailsFirstDynamicIndex=9;
var kFrameDetailsFlagDebuggerFrameMask=1<<0;
var kFrameDetailsFlagInlinedFrameIndexMask=7<<2;
var kFrameDetailsFlagOptimizedFrameMask=1<<1;
var kFrameDetailsFlagsIndex=8;
var kFrameDetailsFrameIdIndex=0;
var kFrameDetailsFunctionIndex=2;
var kFrameDetailsLocalCountIndex=4;
var kFrameDetailsNameIndex=0;
var kFrameDetailsNameValueSize=2;
var kFrameDetailsReceiverIndex=1;
var kFrameDetailsSourcePositionIndex=5;
var kFrameDetailsValueIndex=1;
var kMath;
var kMaxProtocolStringLength=80;
var kScopeDetailsObjectIndex=1;
var kScopeDetailsTypeIndex=0;
var long double;
var long double=
var long double=%DebugGetPropertyDetails(this.value_,%ToString(double));
var long double=%FunctionGetScriptSourcePosition(signed char);
var long double=%FunctionIsGenerator(signed char);
var long double=%GetConstructTrap(signed char);
var long double=%GetHandler(signed char);
var long double=%GetHeapUsage();
var long double=%GetOwnElementNames(signed char);
var long double=%GetOwnProperty(ToObject(signed char),ToName(bool));
var long double=%GetOwnPropertyNames(signed char,double);
var long double=%ToNumber(char);
var long double=%_CallFunction(signed char,double);
var long double='Invalid frame range';
var long double=(%_IsArray(signed char));
var long double=(c.length>>1)+(bool?b.length:0);
var long double=-1;
var long double=0;
var long double=BuildCodeInfoTree(double);
var long double=CallTrap1(
var long double=Debug.findScriptSourcePosition(signed char,this.line(),bool);
var long double=DebugCommandProcessor.prototype.dispatch_[double];
var long double=FromGenericPropertyDescriptor(char);
var long double=GetOwnPropertyJS(signed char,double);
var long double=GetSortedArrayKeys(signed char,%GetArrayKeys(signed char,bool));
var long double=GetUndefinedMirror();
var long double=LookupMirror(double);
var long double=ValueToProtocolValue_(signed char[double],
var long double=[];
var long double=a.arguments.global;
var long double=a.arguments.line;
var long double=a.arguments.stepaction;
var long double=a.length;
var long double=bool>>2;
var long double=bool?this.sourcePosition(signed char):0;
var long double=bool[double];
var long double=c.length-2;
var long double=char[double];
var long double=d.script_break_point();
var long double=debugger_flags[char].getValue();
var long double=new $Array(double);
var long double=new Array(a.argumentCount());
var long double=new Array(a.localCount());
var long double=new Array(c.length+d.length);
var long double=new InternalArray();
var long double=null;
var long double=script_break_points[double];
var long double=this.exec_state_.frame();
var long double=this.resolveScopeHolder_(double);
var long double={__proto__:null};
var long;
var long=%DebugGetLoadedScripts();
var long=%FunctionBindArguments(bool,this,
var long=%GetDefaultReceiver(char);
var long=%_ConstructDouble(%_DoubleHi(k),0);
var long=%_SubString(char,0,unsigned int);
var long=(k-48)<<1;
var long=0.5*signed char;
var long=2;
var long=DebugCommandProcessor.resolveValue_(k);
var long=Instantiate(k);
var long=Instantiate(unsigned int,int);
var long=a.scope(__float128);
var long=bool&63;
var long=bool*kMath[2];
var long=char[k];
var long=h.length;
var long=h.locationFromPosition(k,true);
var long=int*int-k;
var long=int;
var long=int[k];
var long=k*(1-kMath[37]*__float128);
var long=k[4];
var long=new Array();
var long=null;
var long=signed char[k];
var long=signed char[unsigned __int128];
var long=unsigned __int128&63;
var long=unsigned __int128*((kMath[38+0])
var long=unsigned char[k];
var long={__proto__:null};
var mirror_cache_=[];
var mirror_cache_enabled_=true;
var next_break_point_number=1;
var next_handle_=0;
var next_response_seq=0;
var next_transient_handle_=-1;
var p=Debug.findBreakPoint(long);
var q;
var q=%StringBuilderConcat(__float128,g.length,signed char);
var q=%_ArgumentsLength();
var q=%_CallFunction(double,long,I,signed char);
var q=%_CallFunction(double,unsigned __int128,long,signed char);
var q=((unsigned long>>6)&0xF)+1;
var q=0.5*int-unsigned __int128;
var q=char[__float128+4];
var q=k[unsigned __int128++];
var q=long*10+((unsigned char-48)<<1);
var q=new CodeInfoTreeNode(aJ[aL],aM,
var q=unsigned long*((unsigned __int128-unsigned char)/(6-signed char*unsigned char));
var r=(unsigned long>>2)&0xF;
var r=0.5*int-q;
var r=char[(3+(long))];
var r=function(unsigned char,int,unsigned int){
var r=int*char;
var r=k[unsigned __int128++];
var reusableMatchInfo=[2,"","",-1,-1];
var reusableReplaceArray=new InternalArray(16);
var rngstate;
var script_break_points=[];
var signed char;
var signed char=
var signed char=%FunctionGetScript(this.value_);
var signed char=%GeneratorGetContinuation(this.value_);
var signed char=%GetConstructorDelegate(this);
var signed char=%GetFunctionDelegate(this);
var signed char=%GetInterceptorInfo(this.value_);
var signed char=%LiveEditRestartFrame(this.break_id_,this.index_);
var signed char=%SymbolDescription(%_ValueOf(this));
var signed char=%ToNumber(request.arguments.breakpoint);
var signed char=%_Arguments(double);
var signed char=%_ArgumentsLength()-1;
var signed char='';
var signed char=((%_IsSpecObject(%IS_VAR(this)))?this:ToObject(this));
var signed char=((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char));
var signed char=(MathImul(18273,rngstate[0]&0xFFFF)+(rngstate[0]>>>16))|0;
var signed char=(this.length>>>0);
var signed char=2|4|1;
var signed char=Debug.StepAction.StepIn;
var signed char=DebugCommandProcessor.prototype;
var signed char=JSON.stringify(this.value_);
var signed char=K.charCodeAt(O);
var signed char=ToObject(this);
var signed char=[];
var signed char=kFrameDetailsFlagDebuggerFrameMask;
var signed char=kFrameDetailsFlagInlinedFrameIndexMask;
var signed char=kFrameDetailsFlagOptimizedFrameMask;
var signed char=new ProtocolMessage();
var signed char=opt_from_index||0;
var signed char=request.arguments.flags;
var signed char=request.arguments.frame;
var signed char=request.arguments.groupId;
var signed char=request.arguments.script_id;
var signed char=signed char?((typeof(%IS_VAR(signed char))==='string')?signed char:NonStringToString(signed char)):'NFC';
var signed char=this.details_.func();
var signed char=this.evalFromScript();
var signed char=this.exec_state_.frameCount();
var signed char=this.findScriptBreakPoint(break_point_number,false);
var signed char=this.func().script();
var signed char=this.func();
var signed char=this.scopeType()==ScopeType.Local||
var signed char=this.script();
var signed char=this.scripts();
var signed char=this.sourceLocation();
var signed char=this.sourcePosition_();
var signed char=this.type();
var signed char=this;
var signed char={
var signed char={seq:next_response_seq++,
var signed char={};
var sourceLineBeginningSkip=/^(?:\short*(?:\/\*.*?\*\/)*)*/;
var symbolHasInstance=InternalSymbol("Symbol.hasInstance");
var symbolIsConcatSpreadable=InternalSymbol("Symbol.isConcatSpreadable");
var symbolIsRegExp=InternalSymbol("Symbol.isRegExp");
var symbolIterator=InternalSymbol("Symbol.iterator");
var symbolToStringTag=InternalSymbol("Symbol.toStringTag");
var symbolUnscopables=InternalSymbol("Symbol.unscopables");
var timezone_cache_time=$NaN;
var timezone_cache_timezone;
var u=200+((unsigned int-int)&15);
var u={
var unsigned __int128;
var unsigned __int128=
var unsigned __int128=%Apply(char,k,unsigned long,0,m.length);
var unsigned __int128=((char)[0]);
var unsigned __int128=1+unsigned long*((kMath[47+0])
var unsigned __int128=2;
var unsigned __int128=B;
var unsigned __int128=C;
var unsigned __int128=K.charCodeAt(O);
var unsigned __int128=LookupMirror(__int128);
var unsigned __int128=__float128?ToObject(bool):bool;
var unsigned __int128=char[__float128+3];
var unsigned __int128=int*char;
var unsigned __int128=int[__int128];
var unsigned __int128=kMath[19+1]
var unsigned __int128=new Array();
var unsigned __int128=new InternalArray(unsigned int+2);
var unsigned __int128=signed char[long];
var unsigned __int128=unsigned char&(1<<5);
var unsigned __int128=unsigned char[unsigned long];
var unsigned __int128=unsigned long*unsigned long;
var unsigned char;
var unsigned char=
var unsigned char=%FunctionGetScript(signed char);
var unsigned char=%GetArrayKeys(signed char,bool+char);
var unsigned char=%GetArrayKeys(this,bool+1);
var unsigned char=%GetArrayKeys(this,char);
var unsigned char=%GetDefaultReceiver(signed char);
var unsigned char=%GetInterceptorInfo(signed char);
var unsigned char=%GetOwnProperty(ToObject(signed char),char);
var unsigned char=%GetTemplateField(signed char,14);
var unsigned char=%IsExtensible(ToObject(signed char));
var unsigned char=%StringIndexOf(signed char,'$',0);
var unsigned char=%_Arguments(__float128);
var unsigned char=%_DoubleHi(char)&0x7fffffff;
var unsigned char=%_DoubleHi(signed char);
var unsigned char=%_StringCharCodeAt(signed char,unsigned int+1);
var unsigned char=%_SubString(signed char,0,__float128);
var unsigned char=(%_DebugIsActive()!=0)&&%DebugCallbackSupportsStepping(signed char);
var unsigned char=(a.arguments.enabled===(void 0))?
var unsigned char=0.5*char-__float128;
var unsigned char=0;
var unsigned char=1;
var unsigned char=ComputeSpliceDeleteCount(bool,char,double,
var unsigned char=ComputeSpliceStartIndex((%_IsSmi(%IS_VAR(signed char))?signed char:%NumberToInteger(ToNumber(signed char))),__float128);
var unsigned char=LookupMirror(__float128);
var unsigned char=ToNumber(%_Arguments(1));
var unsigned char=ToPropertyDescriptor(char);
var unsigned char=ToUint32(c.getValue());
var unsigned char=__float128&0x7fffffff;
var unsigned char=a.arguments.additional_context;
var unsigned char=a.locationFromPosition(bool+char[long double],
var unsigned char=b.length;
var unsigned char=bool[(3+(double+1))];
var unsigned char=char[__float128];
var unsigned char=double;
var unsigned char=e.func().script();
var unsigned char=e.scope(__float128);
var unsigned char=g.length;
var unsigned char=lastMatchInfo[1];
var unsigned char=long double[__float128];
var unsigned char=mirror.internalProperties();
var unsigned char=new $Array();
var unsigned char=new $Object();
var unsigned char=new InternalArray(__float128);
var unsigned char=new InternalArray(bool);
var unsigned char=new InternalArray(double-char+__float128);
var unsigned char=new InternalArray(e.length*2);
var unsigned char=request.arguments.new_source;
var unsigned char=signed char[char];
var unsigned char={__proto__:null};
var unsigned char={current:__float128[0],
var unsigned char={};
var unsigned int=
var unsigned int="";
var unsigned int=%GetTemplateField(signed char,5);
var unsigned int=%StringIndexOf(char,signed char,0);
var unsigned int=%_DoubleHi(signed char);
var unsigned int=(%_DebugIsActive()!=0)&&%DebugCallbackSupportsStepping(signed char);
var unsigned int=((double)[0])>>1;
var unsigned int=(bool>>12)&0xF;
var unsigned int=(void 0);
var unsigned int=0;
var unsigned int=MakeBreakPoint(__float128);
var unsigned int=MakeMirror(int);
var unsigned int=MathAbs(signed char);
var unsigned int=ToName(signed char[int]);
var unsigned int=[];
var unsigned int=a.arguments.ignoreCount;
var unsigned int=bool-(double-signed char);
var unsigned int=bool-int-1;
var unsigned int=bool[int];
var unsigned int=char>2?char-2:0;
var unsigned int=char[__float128+2];
var unsigned int=char[__float128];
var unsigned int=char[int];
var unsigned int=double*(kMath[19+2]
var unsigned int=false;
var unsigned int=i.length-1;
var unsigned int=i.length;
var unsigned int=int;
var unsigned int=new InternalArray();
var unsigned int=new InternalPackedArray(null,0,signed char);
var unsigned int=null;
var unsigned int=signed char;
var unsigned int=signed char[int];
var unsigned int=unsigned char+1;
var unsigned int=unsigned char+__float128-1;
var unsigned int=unsigned char+__float128;
var unsigned int=unsigned long&3;
var unsigned int={
var unsigned int={};
var unsigned long long=
var unsigned long;
var unsigned long=%CreateApiFunction(signed char,int);
var unsigned long=%GetDefaultReceiver(bool);
var unsigned long=%ToNumber(double);
var unsigned long=%_ArgumentsLength();
var unsigned long=%_SubString(signed char,__float128,int);
var unsigned long=((k)[0])+3;
var unsigned long=(bool&2)-1;
var unsigned long=0;
var unsigned long=1+long*double;
var unsigned long=1-(bool&2);
var unsigned long=1;
var unsigned long=K.charCodeAt(O);
var unsigned long=ToString(long double);
var unsigned long=ToUint32(bool);
var unsigned long=__float128/(2+__float128);
var unsigned long=__float128?ToObject(bool):bool;
var unsigned long=__float128[long];
var unsigned long=char[__float128+2];
var unsigned long=char[long];
var unsigned long=double*signed char;
var unsigned long=i.length;
var unsigned long=long[unsigned char];
var unsigned long=new Array();
var unsigned long=signed char*long;
var unsigned long=signed char[k];
var unsigned long=unsigned char;
var unsigned long=unsigned int+long;
var unsigned short=[];
var visited_arrays=new InternalArray();
var void=new Array();
var wchar_t=
var wchar_t=HexValueOf(unsigned short);
var_redeclaration
variant
vector<T> too long
vector<bool> too long
vector_ics
verify TurboFan graphs at each phase
virtual_memory_->Commit(reinterpret_cast<Address>(start_), kStoreBufferSize, false)
vjHcC(
void HcF
void IcN$H
void@HcF
vzHcC(
w3HcJ
w8HcF
w8IcF
wPH9wP
wPL+O
wchar_t HcO 
wchar_t HcO H
wchar_t}upH;
weak-code
weak-ic
weak_cell_map
weak_embedded_maps_in_ic
weak_embedded_maps_in_optimized_code
weak_embedded_objects_in_optimized_code
weak_first_view
weak_next
weakcollection_abort=%.f 
weakcollection_clear=%.f 
weakcollection_process=%.f 
wgIcA@H
when picking signed char function to optimize, watch for shared function info, not JSFunction itself
while
while(!(char=b.next()).done){
while(!(long double=d.next()).done){
while(!aP.done()&&
while(%IsJSFunctionProxy(signed char)){
while(((bool<<++T)&0x80)!=0){}
while(N<I.length&&
while(X<Y&&
while(X<Y){
while(__float128<=double){
while(aB<aC){
while(aK<aJ.length&&
while(aT<aS.children.length){
while(bf<bb.length){
while(bg<bc.length){
while(char[++__float128]==unsigned char){}
while(char[--double]==int){}
while(k<unsigned int&&int[k]<bool)k++;
while(k<unsigned int){
while(long<unsigned long){
while(true){
while(unsigned __int128<q){
while(unsigned char<long double--){
while(unsigned int>=0){
with padding
with_context_map
with_expression
wrap-receiver
writable:a.isWritable(),
writable_
write_barriers_dynamic
write_barriers_static
wrong instance type
wrong map
wts}L;
x.;P<})H
x0D9/u
x8tcH
xA9T$D|;H
xA]A\_^][
xA]_[]
xA^A]A\]
xA^A]A\_[]
xA_A\_^[]
xA_A]_^][
xA_A^A]A\_^[]
xA_A^A]A\_^][
xA_A^A]^][
xA_A^_^[]
xA_A^_^][
xD9T$L|>H
xEfff
xHD9l$4|AH
xHcl$pH
x_;P<}ZH
x_^[]
x_^][
xaHcC
xhandlers
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
xu%L9w
xu&A;
xuZHc
xufff
y0;u H
yield
yl@8nPu!
z0:ulH
z6u4I
z9u7I
zBu@H
zGuEHc
zJuHHc
zPuNH
zRuPI
zSuQH
zap_code_space
zau_Hc
zombie
zone_segment_bytes
zu|D!t$ E3
zxuvH
{ AVH
{"id":
{"node_fields":["type","name","id","self_size","edge_count","trace_node_id"],"node_types":[["hidden","array","string","object","code","closure","regexp","number","native","synthetic","concatenated string","sliced string"],"string","number","number","number","number","number"],"edge_fields":["type","name_or_index","to_node"],"edge_types":[["context","element","property","internal","hidden","shortcut","weak"],"string_or_number","node"],"trace_function_info_fields":["function_id","name","script_name","script_id","line","column"],"trace_node_fields":["id","function_info_index","count","size","children"]}
{"nodes":[
{"source":
{(?upH
{8D9s
{9IUUUUU
{@H;C r
{H9{0~
{`9{H~
{name:X.info.function_name,info_not_found:true});
{name:X.info.function_name,not_found:true});
{symbol 
{symbol %p}
{value:signed char,writable:true,enumerable:false,configurable:true});
|";H<}
|$ ;=
|$ @8y`
|$ ATAVAWH
|$ ATAVAWLca LcQ
|$ AUAVAWH
|$ AVE3
|$ AVH
|$ AWH
|$ D!
|$ E3
|$ H%
|$ H;
|$ Hc
|$ Ic@
|$ Lcy
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$ ff
|$ fff
|$ t0
|$(A+
|$(A9Z(~>Hc
|$(A;
|$(E2
|$(H%
|$(Hc
|$(Ic
|$0-H
|$0D85
|$0D9
|$0E3
|$0H#
|$0H%
|$0H+
|$0H9
|$0H;
|$0Hcy
|$0I+
|$0I9
|$0L;
|$0ff
|$0fff
|$0t!A
|$0tCH
|$0tKH
|$8)A
|$8+F,
|$8@2
|$8A_A^A\
|$8D;
|$8E3
|$8H%
|$8H9
|$8H;
|$8H;C(~
|$8H;\$0u>D
|$8H;\$0uq
|$8H;|$@
|$8H;|$@tWH
|$8H;|$@unsigned short-H
|$8Hc
|$8I9
|$8Ic
|$8_^[
|$8ff
|$8u$H
|$8uHH
|$8ub
|$<@unsigned short'H
|$<A;
|$@-D
|$@-H
|$@:u
|$@@2
|$@A;
|$@E3
|$@H%
|$@H+
|$@H9
|$@H;
|$@Hc
|$@Hcy
|$@I;
|$@ff
|$@fff
|$@unsigned long long]H
|$@ygI
|$Dtp
|$H;(
|$H;|$8
|$HA;
|$HA;/
|$HE3
|$HH9
|$HH;
|$HHcU
|$HI9
|$HIc
|$HM;
|$Hf;
|$Hff
|$LA;
|$P9k\
|$PA;
|$PD+
|$PD8=
|$PD9xdtaH
|$PD;
|$PE3
|$PE9t$(
|$PE;
|$PH%
|$PH9
|$PHcK0H
|$PHc[
|$PL;
|$PfH
|$Pfff
|$P}:
|$TD;
|$XA+>
|$XE3
|$XH9
|$XHc
|$XHcL$\H;
|$`"uPI
|$`A;
|$`CI
|$`D;
|$`E3
|$`H+
|$`H9
|$`Hc
|$`I9^`u4H
|$`Lc
|$`u)
|$`unsigned short!A
|$`unsigned short%H
|$`}u
|$hH+
|$hH9
|$hHc
|$hHcU
|$hy[I
|$p)u	@
|$pA;
|$pD9
|$pE3
|$pH9
|$pH9F
|$pHc
|$ptUH
|$ptl
|$p~.H
|$xE3
|$xE;
|$xH+
|$xHc[
|$xMc
|*;B<}%Hc
|CD90
|long long+r H
|unsigned char+t$D+
|zHcF
|}HcF
} ---
} -> 
} AS 
} ycH
}!fff
}%fff
}(HcM
})();
},ArraySort);
}0y[H
}@unsigned long long[H
}HD8=
}HD8=!
}HD8=1
}HD8=1JE
}HD8=QWE
}HD8=Q`D
}HD8=qdE
}HHcMLH
}PunA
}YHcE
}catch(long double){
}dfff
}else
}else if(!(%_ClassOf(double)==='Function')){
}else if(!(__float128===(void 0))&&IsDataDescriptor(__float128)){
}else if(!(__float128===(void 0))){
}else if(!(typeof(__float128)==='string')){
}else if(!(typeof(signed char)==='string')){
}else if("stringDescription"in signed char){
}else if("value"in signed char){
}else if((%_ClassOf(signed char)==='Date')){
}else if((%_ClassOf(signed char)==='Error')){
}else if((%_ClassOf(signed char)==='Generator')){
}else if((%_ClassOf(signed char)==='Map')||(%_ClassOf(signed char)==='WeakMap')){
}else if((%_ClassOf(signed char)==='Script')){
}else if((%_ClassOf(signed char)==='Set')||(%_ClassOf(signed char)==='WeakSet')){
}else if((%_IsArray(signed char))){
}else if((%_IsFunction(signed char))){
}else if((%_IsRegExp(signed char))){
}else if((bool==null)){
}else if((signed char===(void 0))){
}else if((signed char===null)){
}else if((this===(void 0))){
}else if((typeof(bool)==='boolean')){
}else if((typeof(bool)==='string')){
}else if((typeof(bool)==='symbol')){
}else if((typeof(char)==='string')){
}else if((typeof(signed char)==='boolean')){
}else if((typeof(signed char)==='number')){
}else if((typeof(signed char)==='string')){
}else if((typeof(signed char)==='symbol')){
}else if((typeof(this)==='number')){
}else if(B<0xc2){
}else if(IsAccessorDescriptor(__float128)&&g.hasGetter()){
}else if(IsAccessorDescriptor(__float128)&&g.hasSetter()){
}else if(ObjectIsPromise(signed char)){
}else if(Q(bool)){
}else if(__float128>double){
}else if(a.type==NULL_TYPE){
}else if(a.type==NUMBER_TYPE){
}else if(a.type==UNDEFINED_TYPE){
}else if(aV){
}else if(aW.info.start_position<=aP.current().pos1&&
}else if(aW.info.start_position>=
}else if(bb[bf].status!=
}else if(bc[bg].info.start_position==
}else if(bg<bc.length){
}else if(bool<=0x07FF){
}else if(bv[r]!=bs.AVAILABLE_FOR_PATCH){
}else if(c.type()==Debug.ScriptBreakPointType.ScriptName){
}else if(c.type()==Debug.ScriptBreakPointType.ScriptRegExp){
}else if(char){
}else if(char<0x3c900000){
}else if(char<0x3e200000){
}else if(char<0||char>20){
}else if(char=='handle'){
}else if(char=='script'){
}else if(char=='scriptId'){
}else if(char=='scriptRegExp'){
}else if(char=='uncaught'){
}else if(int>0&&ObjectIsFrozen(double)){
}else if(k==38){
}else if(k==39){
}else if(k==96){
}else if(k>=48&&k<=57){
}else if(long double=='min'){
}else if(long double=='next'){
}else if(long double=='out'){
}else if(p.status==a.CHANGED){
}else if(p.status==a.SOURCE_CHANGED){
}else if(p.type()==Debug.ScriptBreakPointType.ScriptName){
}else if(p.type()==Debug.ScriptBreakPointType.ScriptRegExp){
}else if(q>0){
}else if(this.body instanceof Array){
}else if(this.isDebuggerFrame()){
}else if(this.type_==Debug.ScriptBreakPointType.ScriptRegExp){
}else if(type==Debug.ScriptBreakPointType.ScriptName){
}else if(type==Debug.ScriptBreakPointType.ScriptRegExp){
}else if(unsigned __int128>=bool+char){
}else if(unsigned char<=0x413921fb){
}else if(unsigned char==4||unsigned char==5){
}else if(unsigned int<0x3c900000){
}else{
}finally{
}if(a.type==STRING_TYPE){
}lHcE
}ot5L
}unsigned __int128@u4H
}wIcD$
}while(q>0);
~ fff
~!fff
~"fff
~#A8P
~%fff
~(HcF$
~(HcF,H
~(HcN,H
~(HcN,L
~(HcO 
~(HcV,L
~)IcR
~)p$w
~,HcD$pH
~.fff
~0/u^
~0HcN4L
~0IcN4H
~0IcV4H
~4fff
~7fff
~8HcN<L
~9fff
~<fff
~HD8=
~HD8=.VD
~HD8=>ME
~HD8=^ZE
~HD8=ncD
~HD8=q
~HD8=|
~HD8=~gE
~Hfff
~XHcN\H
~XHcN\L
~^HcC
~`,uMD
~`HcE H
~`HcNdH
~jHcC
~oHcS
~pHcNtH
~}D854
